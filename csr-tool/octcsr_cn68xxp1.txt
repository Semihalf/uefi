


 *
 *                PCIE_CFG000 = First 32-bits of PCIE type 0 config space (Device ID and Vendor ID Register)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG000 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  VENDID          RO/WRSL  0x177d      0x177d    Vendor ID, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
                                                        During and EPROM Load is a value of 0xFFFF is loaded to this
                                                        field and a value of 0xFFFF is loaded to the DEVID field of
							this register, the value will not be loaded, EEPROM load will
							stop, and the FastLinkEnable bit will be set in the
							PCIE_CFG452 register.
 <31:16> DEVID           RO/WRSL  0x91        0x91      Device ID, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 							For EEPROM loads also see VENDID of this register.
----------------------------------------------------------------------------------------------------
===

 *
 *                PCIE_CFG001 = Second 32-bits of PCIE type 0 config space (Command/Status Register)
 *

     ==============================================================
     PCIEEP(0..1)_CFG001 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ISAE            R/W      0x0         0x0       I/O Space Enable
 <1>     MSAE            R/W      0x0         0x0       Memory Space Enable
 <2>     ME              R/W      0x0         0x0       Bus Master Enable
 <3>     SCSE            RO       0x0         0x0       Special Cycle Enable
                                                         Not applicable for PCI Express. Must be hardwired to 0.
 <4>     MWICE           RO       0x0         0x0       Memory Write and Invalidate
                                                         Not applicable for PCI Express. Must be hardwired to 0.
 <5>     VPS             RO       0x0         0x0       VGA Palette Snoop
                                                         Not applicable for PCI Express. Must be hardwired to 0.
 <6>     PER             R/W      0x0         0x0       Parity Error Response
 <7>     IDS_WCC         RO       0x0         0x0       IDSEL Stepping/Wait Cycle Control
                                                         Not applicable for PCI Express. Must be hardwired to 0
 <8>     SEE             R/W      0x0         0x0       SERR# Enable
 <9>     FBBE            RO       0x0         0x0       Fast Back-to-Back Enable
                                                         Not applicable for PCI Express. Must be hardwired to 0.
 <10>    I_DIS           R/W      0x0         0x0       INTx Assertion Disable
 <18:11> NS              RAZ      NS          NS        Reserved
 <19>    I_STAT          RO       0x0         0x0       INTx Status
 <20>    CL              RO       0x1         0x1       Capabilities List
                                                         Indicates presence of an extended capability item.
                                                         Hardwired to 1.
 <21>    M66             RO       0x0         0x0       66 MHz Capable
                                                         Not applicable for PCI Express. Hardwired to 0.
 <22>    NS              RAZ      NS          NS        Reserved
 <23>    FBB             RO       0x0         0x0       Fast Back-to-Back Capable
                                                         Not applicable for PCI Express. Hardwired to 0.
 <24>    MDPE            R/W1C    0x0         0x0       Master Data Parity Error
 <26:25> DEVT            RO       0x0         0x0       DEVSEL Timing
                                                         Not applicable for PCI Express. Hardwired to 0.
 <27>    STA             R/W1C    0x0         0x0       Signaled Target Abort
 <28>    RTA             R/W1C    0x0         0x0       Received Target Abort
 <29>    RMA             R/W1C    0x0         0x0       Received Master Abort
 <30>    SSE             R/W1C    0x0         0x0       Signaled System Error
 <31>    DPE             R/W1C    0x0         0x0       Detected Parity Error
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG002 = Third 32-bits of PCIE type 0 config space (Revision ID/Class Code Register)
 *

     ==============================================================
     PCIEEP(0..1)_CFG002 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   RID             RO/WRSL  0x00        0x00      Revision ID, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <15:8>  PI              RO/WRSL  0x00        0x0       Programming Interface, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <23:16> SC              RO/WRSL  0x30        0x30      Subclass Code, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <31:24> BCC             RO/WRSL  0x0B        0x0B      Base Class Code, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG003 = Fourth 32-bits of PCIE type 0 config space (Cache Line Size/Master Latency Timer/Header Type Register/BIST Register)
 *

     ==============================================================
     PCIEEP(0..1)_CFG003 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   CLS             R/W      0x00        0x0       Cache Line Size
                                                         The Cache Line Size register is RW for legacy compatibility
                                                         purposes and is not applicable to PCI Express device
                                                         functionality.
                                                         Writing to the Cache Line Size register does not impact
                                                         functionality.
 <15:8>  LT              RO       0x00        0x0       Master Latency Timer
                                                         Not applicable for PCI Express, hardwired to 0.
 <22:16> CHF             RO       0x0         0x0       Configuration Header Format
                                                         Hardwired to 0 for type 0.
 <23>    MFD             RO/WRSL  0x0         0x0       Multi Function Device
                                                         The Multi Function Device bit is writable through PEM(0..1)_CFG_WR.
                                                         However, this is a single function device. Therefore, the
                                                         application must not write a 1 to this bit.
 <31:24> BIST            RO       0x00        0x0       The BIST register functions are not supported.
                                                         All 8 bits of the BIST register are hardwired to 0.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG004 = Fifth 32-bits of PCIE type 0 config space (Base Address Register 0 - Low)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG004 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:14> LBAB            R/W      0x0000000   0x0       Lower bits of the BAR 0 base address
 <13:4>  NS              RAZ      NS          NS        Reserved
                                                         If the Bit Mask Register (PCIE_CFG004_MASK or PCIE_CFG005_MASK)
                                                         is changed, see LBAB.
 <3>     PF              RO/WRSL  0x1         0x1       Prefetchable
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <2:1>   TYP             RO/WRSL  0x2         0x2       BAR type
                                                            o 00 = 32-bit BAR
                                                            o 10 = 64-bit BAR
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <0>     MSPC            RO/WRSL  0x0         0x0       Memory Space Indicator
                                                            o 0 = BAR 0 is a memory BAR
                                                            o 1 = BAR 0 is an I/O BAR
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG005 = Sixth 32-bits of PCIE type 0 config space (Base Address Register 0 - High)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG005 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  UBAB            R/W      0x0         0x0       Contains the upper 32 bits of the BAR 0 base address.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG006 = Seventh 32-bits of PCIE type 0 config space (Base Address Register 1 - Low)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG006 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:26> LBAB            R/W      0x0000000   0x0       Lower bits of the BAR 1 base address
 <25:4>  NS              RAZ      NS          NS        Reserved
                                                         If the Bit Mask Register (PCIE_CFG006_MASK or PCIE_CFG007_MASK)
                                                         is changed, see LBAB.
 <3>     PF              RO/WRSL  0x1         0x1       Prefetchable
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <2:1>   TYP             RO/WRSL  0x2         0x2       BAR type
                                                            o 00 = 32-bit BAR
                                                            o 10 = 64-bit BAR
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <0>     MSPC            RO/WRSL  0x0         0x0       Memory Space Indicator
                                                            o 0 = BAR 0 is a memory BAR
                                                            o 1 = BAR 0 is an I/O BAR
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG007 = Eighth 32-bits of PCIE type 0 config space (Base Address Register 1 - High)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG007 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  UBAB            R/W      0x0         0x0       Contains the upper 32 bits of the BAR 1 base address.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG008 = Ninth 32-bits of PCIE type 0 config space (Base Address Register 2 - Low)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG008 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:4>  NS              RAZ      NS          NS        Reserved
                                                         If the Bit Mask Register (PCIE_CFG008_MASK or PCIE_CFG009_MASK)
                                                         is changed, see LBAB.
 <3>     PF              RO/WRSL  0x1         0x1       Prefetchable
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <2:1>   TYP             RO/WRSL  0x2         0x2       BAR type
                                                            o 00 = 32-bit BAR
                                                            o 10 = 64-bit BAR
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <0>     MSPC            RO/WRSL  0x0         0x0       Memory Space Indicator
                                                            o 0 = BAR 0 is a memory BAR
                                                            o 1 = BAR 0 is an I/O BAR
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG009 = Tenth 32-bits of PCIE type 0 config space (Base Address Register 2 - High)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG009 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:9>  UBAB            R/W      0x0         0x0       Contains the upper 32 bits of the BAR 2 base address.
 <8:0>   NS              RAZ      NS          NS        Reserved
                                                         If the Bit Mask Register (PCIE_CFG008_MASK or PCIE_CFG009_MASK)
                                                         is changed, see UBAB.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG010 = Eleventh 32-bits of PCIE type 0 config space (CardBus CIS Pointer Register)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG010 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  CISP            RO/WRSL  0x0         0x0       CardBus CIS Pointer
                                                         Optional, writable through PEM(0..1)_CFG_WR.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG011 = Twelfth 32-bits of PCIE type 0 config space (Subsystem ID and Subsystem Vendor ID Register)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG011 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  SSVID           RO/WRSL  0x177d      0x177d    Subsystem Vendor ID
                                                         Assigned by PCI-SIG, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:16> SSID            RO/WRSL  0x1         0x1       Subsystem ID
                                                         Assigned by PCI-SIG, writable through PEM(0..1)_CFG_WR.                                                                                                           However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG012 = Thirteenth 32-bits of PCIE type 0 config space (Expansion ROM Base Address Register)
 *                  This register is only enabled in PCIE0, PCIE1 does NOT have this bar enabled.
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG012 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:16> ERADDR          R/W      0x00000     0x0       Expansion ROM Address
 <15:1>  NS              RAZ      NS          NS        Reserved
 <0>     ER_EN           R/W      0x0         0x0       Expansion ROM Enable
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG013 = Fourteenth 32-bits of PCIE type 0 config space (Capability Pointer Register)
 *

     ==============================================================
     PCIEEP(0..1)_CFG013 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   CP              RO/WRSL  0x40        0x40      First Capability Pointer.
                                                         Points to Power Management Capability structure by
                                                         default, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:8>  NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG015 = Sixteenth 32-bits of PCIE type 0 config space (Interrupt Line Register/Interrupt Pin/Bridge Control Register)
 *

     ==============================================================
     PCIEEP(0..1)_CFG015 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   IL              R/W      0xFF        0xFF      Interrupt Line
 <15:8>  INTA            RO/WRSL  0x01        0x01      Interrupt Pin
                                                         Identifies the legacy interrupt Message that the device
                                                         (or device function) uses.
                                                         The Interrupt Pin register is writable through PEM(0..1)_CFG_WR.
                                                         In a single-function configuration, only INTA is used.
                                                         Therefore, the application must not change this field.
 <23:16> MG              RO       0x00        0x00      Minimum Grant       (Hardwired to 0)
 <31:24> ML              RO       0x00        0x00      Maximum Latency     (Hardwired to 0)
----------------------------------------------------------------------------------------------------
===

 *
 *                 PCIE_CFG016 = Seventeenth 32-bits of PCIE type 0 config space
 *                  (Power Management Capability ID/
 *                  Power Management Next Item Pointer/
 *                  Power Management Capabilities Register)
 *

     ==============================================================
     PCIEEP(0..1)_CFG016 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   PMCID           RO       0x01        0x0       Power Management Capability ID
 <15:8>  NCP             RO/WRSL  0x50        0x0       Next Capability Pointer
                                                         Points to the MSI capabilities by default, writable
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <18:16> PMSV            RO/WRSL  0x03        0x0       Power Management Specification Version, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <19>    PME_Clock       RO       0x0         0x0       PME Clock, hardwired to 0
 <20>    NS              RAZ      NS          NS        Reserved
 <21>    DSI             RO/WRSL  0x0         0x0       Device Specific Initialization (DSI), writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <24:22> AUXC            RO/WRSL  0x0         0x0       AUX Current, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <25>    D1S             RO/WRSL  0x0         0x0       D1 Support, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <26>    D2S             RO/WRSL  0x0         0x0       D2 Support, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <31:27> PMES            RO/WRSL  0x0         0x0       PME_Support
                                                         o Bit 11: If set, PME Messages can be generated from D0
                                                         o Bit 12: If set, PME Messages can be generated from D1
                                                         o Bit 13: If set, PME Messages can be generated from D2
                                                         o Bit 14: If set, PME Messages can be generated from D3hot
                                                         o Bit 15: If set, PME Messages can be generated from D3cold
                                                         The PME_Support field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG017 = Eighteenth 32-bits of PCIE type 0 config space (Power Management Control and Status Register)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG017 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   PS              R/W      0x0         0x0       Power State
                                                         Controls the device power state:
                                                           o 00b: D0
                                                           o 01b: D1
                                                           o 10b: D2
                                                           o 11b: D3
                                                         The written value is ignored if the specific state is
                                                         not supported.
 <2>     NS              RAZ      NS          NS        Reserved
 <3>     NSR             RO/WRSL  0x0         0x0       No Soft Reset, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <7:4>   NS              RAZ      NS          NS        Reserved
 <8>     PMEENS          R/W      0x0         0x0       PME Enable
                                                         A value of 1 indicates that the device is enabled to
                                                         generate PME.
 <12:9>  PMDS            RO       0x0         0x0       Data Select (not supported)
 <14:13> PMEDSIA         RO       0x0         0x0       Data Scale (not supported)
 <15>    PMESS           R/W1C    0x0         0x0       PME Status
                                                        Indicates if a previously enabled PME event occurred or not.
 <21:16> NS              RAZ      NS          NS        Reserved
 <22>    BD3H            RO       0x0         0x0       B2/B3 Support, hardwired to 0
 <23>    BPCCEE          RO       0x0         0x0       Bus Power/Clock Control Enable, hardwired to 0
 <31:24> PMDIA           RO       0x00        0x0       Data register for additional information (not supported)
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG020 = Twenty-first 32-bits of PCIE type 0 config space
 *                  (MSI Capability ID/
 *                   MSI Next Item Pointer/
 *                   MSI Control Register)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG020 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   MSICID          RO       0x05        0x05      MSI Capability ID
 <15:8>  NCP             RO/WRSL  0x70        0x70      Next Capability Pointer
                                                         Points to PCI Express Capabilities by default,
                                                         writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <16>    MSIEN           R/W      0x0         0x0       MSI Enabled
                                                         When set, INTx must be disabled.
 <19:17> MMC             RO/WRSL  0x0         0x0       Multiple Message Capable, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <22:20> MME             R/W      0x0         0x0       Multiple Message Enabled
                                                         Indicates that multiple Message mode is enabled by system
                                                         software. The number of Messages enabled must be less than
                                                         or equal to the Multiple Message Capable value.
 <23>    M64             RO/WRSL  0x1         0x1       64-bit Address Capable, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <24>    PVM             RO       0x0         0x0       Per-vector masking capable
 <31:25> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG021 = Twenty-second 32-bits of PCIE type 0 config space (MSI Lower 32 Bits Address Register)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG021 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   NS              RAZ      NS          NS        Reserved
 <31:2>  LMSI            R/W      0x00000000  0x0       Lower 32-bit Address
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG022 = Twenty-third 32-bits of PCIE type 0 config space (MSI Upper 32 bits Address Register)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG022 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  UMSI            R/W      0x00000000  0x0       Upper 32-bit Address
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG023 = Twenty-fourth 32-bits of PCIE type 0 config space (MSI Data Register)
 *

     ==============================================================
     PCIEEP(0..1)_CFG023 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  MSIMD           R/W      0x0000      0x0       MSI Data
                                                         Pattern assigned by system software, bits [4:0] are Or-ed with
                                                         MSI_VECTOR to generate 32 MSI Messages per function.
 <31:16> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG028 = Twenty-ninth 32-bits of PCIE type 0 config space
 *                  (PCI Express Capabilities List Register/
 *                   PCI Express Capabilities Register)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG028 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   PCIEID          RO       0x10        0x10      PCIE Capability ID
 <15:8>  NCP             RO/WRSL  0x0         0x0       Next Capability Pointer
                                                         Writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <19:16> PCIECV          RO       0x2         0x2       PCI Express Capability Version
 <23:20> DPT             RO       0x0         0x0       Device Port Type
 <24>    SI              RO/WRSL  0x0         0x0       Slot Implemented
                                                         This bit is writable through PEM(0..1)_CFG_WR.
                                                         However, it must be 0 for
                                                         an Endpoint device. Therefore, the application must not write a
                                                         1 to this bit.
 <29:25> IMN             RO/WRSL  0x0         0x0       Interrupt Message Number
                                                         Updated by hardware, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:30> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG029 = Thirtieth 32-bits of PCIE type 0 config space (Device Capabilities Register)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG029 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <2:0>   MPSS            RO/WRSL  0x1         0x1       Max_Payload_Size Supported, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <4:3>   PFS             RO/WRSL  0x0         0x0       Phantom Function Supported
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, Phantom
                                                         Function is not supported. Therefore, the application must not
                                                         write any value other than 0x0 to this field.
 <5>     ETFS            RO/WRSL  0x0         0x0       Extended Tag Field Supported
                                                         This bit is writable through PEM(0..1)_CFG_WR.
                                                         However, the application
                                                         must not write a 1 to this bit.
 <8:6>   EL0AL           RO/WRSL  0x4         0x4       Endpoint L0s Acceptable Latency, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <11:9>  EL1AL           RO/WRSL  0x3         0x3       Endpoint L1 Acceptable Latency, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <12>    NS              RAZ      NS          NS        Undefined
 <13>    NS              RAZ      NS          NS        Undefined
 <14>    NS              RAZ      NS          NS        Undefined
 <15>    RBER            RO/WRSL  0x1         0x1       Role-Based Error Reporting, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <17:16> NS              RAZ      NS          NS        Reserved
 <25:18> CSPLV           RO       0x00        0x0       Captured Slot Power Limit Value
                                                         From Message from RC, upstream port only.
 <27:26> CSPLS           RO       0x0         0x0       Captured Slot Power Limit Scale
                                                         From Message from RC, upstream port only.
 <28>    FLR             RO       0x0         0x0       Function Level Reset Capability
							 When set, core support of SR-IOV
 <31:29> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG030 = Thirty-first 32-bits of PCIE type 0 config space
 *                  (Device Control Register/Device Status Register)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG030 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     CE_EN           R/W      0x0         0x0       Correctable Error Reporting Enable
 <1>     NFE_EN          R/W      0x0         0x0       Non-Fatal Error Reporting Enable
 <2>     FE_EN           R/W      0x0         0x0       Fatal Error Reporting Enable
 <3>     UR_EN           R/W      0x0         0x0       Unsupported Request Reporting Enable
 <4>     RO_EN           R/W      0x1         0x1       Enable Relaxed Ordering
 <7:5>   MPS             R/W      0x0         0x0       Max Payload Size
                                                         Legal values:
                                                          0  = 128B
                                                          1  = 256B
                                                         Larger sizes not supported by OCTEON.
                                                        Note: DPI_SLI_PRT#_CFG[MPS] must be set to the same
                                                              value for proper functionality.
 <8>     ETF_EN          R/W      0x0         0x0       Extended Tag Field Enable
                                                         This bit should never be set - OCTEON requests never use
                                                         extended tags.
 <9>     PF_EN           R/W      0x0         0x0       Phantom Function Enable
                                                         This bit should never be set - OCTEON requests never use
                                                         phantom functions.
 <10>    AP_EN           R/W      0x0         0x0       AUX Power PM Enable
 <11>    NS_EN           R/W      0x1         0x1       Enable No Snoop
 <14:12> MRRS            R/W      0x2         0x2       Max Read Request Size
                                                         0 = 128B
                                                         1 = 256B
                                                         2 = 512B
                                                         3 = 1024B
                                                         4 = 2048B
                                                         5 = 4096B
                                                        Note: SLI_S2M_PORT#_CTL[MRRS] and DPI_SLI_PRT#_CFG[MRRS] and
							      also must be set properly.
                                                              SLI_S2M_PORT#_CTL[MRRS] and DPI_SLI_PRT#_CFG[MRRS] must
                                                              not exceed the desired max read request size.
 <15>    I_FLR           RO       0x0         0x0       Initiate Function Level Reset
							 (Not Supported)
 <16>    CE_D            R/W1C    0x0         0x0       Correctable Error Detected
                                                         Errors are logged in this register regardless of whether
                                                         error reporting is enabled in the Device Control register.
							CE_D is set if we receive any of the errors in PCIE_CFG068
							for example a Replay Timer Timeout.  Also, it can be set if
							we get any of the errors in PCIE_CFG066 that has a severity
							set to Nonfatal and meets the Advisory Nonfatal criteria,
							which most ECRC errors
							should be.
 <17>    NFE_D           R/W1C    0x0         0x0       Non-Fatal Error detected
                                                         Errors are logged in this register regardless of whether
                                                         error reporting is enabled in the Device Control register.
							NFE_D is set if we receive any of the errors in PCIE_CFG066
							that has a severity set to Nonfatal and does NOT meet Advisory
							Nonfatal criteria , which
							most poisoned TLP's should be.
 <18>    FE_D            R/W1C    0x0         0x0       Fatal Error Detected
                                                         Errors are logged in this register regardless of whether
                                                         error reporting is enabled in the Device Control register.
							FE_D is set if receive any of the errors in PCIE_CFG066 that
							has a severity set to Fatal.  Malformed TLP's generally fit
							into this category.
 <19>    UR_D            R/W1C    0x0         0x0       Unsupported Request Detected
                                                         Errors are logged in this register regardless of whether
                                                         error reporting is enabled in the Device Control register.
							UR_D occurs when we receive something we don't support.
							Unsupported requests are Nonfatal errors, so UR_D should
							cause NFE_D.  Receiving a  vendor defined message should
							cause an unsupported request.
 <20>    AP_D            RO       0x0         0x0       Aux Power Detected
                                                         Set to 1 if Aux power detected.
 <21>    TP              RO       0x0         0x0       Transaction Pending
                                                         Set to 1 when Non-Posted Requests are not yet completed
                                                         and clear when they are completed.
 <31:22> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG031 = Thirty-second 32-bits of PCIE type 0 config space
 *                  (Link Capabilities Register)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG031 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   MLS             RO/WRSL  NS          NS         Maximum Link Speed
                                                         The reset value of this field is controled by a value sent from
                                                         the input pin qlm#_cfg[1].
                                                         qlm#_cfg[1]   RST_VALUE   NOTE
							 1             0001b       2.5 GHz supported
                                                         0             0010b       5.0 GHz and 2.5 GHz supported
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <9:4>   MLW             RO/WRSL  0x4         0x4       Maximum Link Width
                                                         The default value is the value you specify during hardware
                                                         configuration (x1, x4, x8, or x16), writable through PEM(0..1)_CFG_WR.
 <11:10> ASLPMS          RO/WRSL  0x3         0x3       Active State Link PM Support
                                                         The default value is the value you specify during hardware
                                                         configuration, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <14:12> L0EL            RO/WRSL  0x6         0x6       L0s Exit Latency
                                                         The default value is the value you specify during hardware
                                                         configuration, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <17:15> L1EL            RO/WRSL  0x6         0x6       L1 Exit Latency
                                                         The default value is the value you specify during hardware
                                                         configuration, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <18>    CPM             RO/WRSL  0x0         0x0       Clock Power Management
                                                         The default value is the value you specify during hardware
                                                         configuration, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <19>    SDERC           RO       0x0         0x0       Surprise Down Error Reporting Capable
                                                         Not supported, hardwired to 0x0.
 <20>    DLLARC          RO       0x0         0x0       Data Link Layer Active Reporting Capable
 <21>    LBNC            RO       0x0         0x0       Link Bandwidth Notification Capability
                                                         Set 0 for Endpoint devices.
 <23:22> NS              RAZ      NS          NS        Reserved
 <31:24> PNUM            RO/WRSL  0x0         0x0       Port Number
							 writable through PEM(0..1)_CFG_WR, however the application
                                                         must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG032 = Thirty-third 32-bits of PCIE type 0 config space
 *                  (Link Control Register/Link Status Register)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG032 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   ASLPC           R/W      0x0         0x0       Active State Link PM Control
 <2>     NS              RAZ      NS          NS        Reserved
 <3>     RCB             RO       0x0         0x0       Read Completion Boundary (RCB)
 <4>     LD              RO       0x0         0x0       Link Disable
                                                         Not applicable for an upstream Port or Endpoint device,
                                                         hardwired to 0.
 <5>     RL              RO       0x0         0x0       Retrain Link
                                                         Not applicable for an upstream Port or Endpoint device,
                                                         hardwired to 0.
 <6>     CCC             R/W      0x0         0x0       Common Clock Configuration
 <7>     ES              R/W      0x0         0x0       Extended Synch
 <8>     ECPM            R/W      0x0         0x0       Enable Clock Power Management
                                                         Hardwired to 0 if Clock Power Management is disabled in
                                                         the Link Capabilities register.
 <9>     HAWD            R/W      0x0         0x0       Hardware Autonomous Width Disable
                                                         (Not Supported)
 <10>    LBM_INT_ENB     RO       0x0         0x0       Link Bandwidth Management Interrupt Enable
                                                         This bit is not applicable and is reserved for endpoints
 <11>    LAB_INT_ENB     RO       0x0         0x0       Link Autonomous Bandwidth Interrupt Enable
                                                         This bit is not applicable and is reserved for endpoints
 <15:12> NS              RAZ      NS          NS        Reserved
 <19:16> LS              RO       0x1         0x1       Link Speed
                                                         1 == The negotiated Link speed: 2.5 Gbps
                                                         2 == The negotiated Link speed: 5.0 Gbps
                                                         4 == The negotiated Link speed: 8.0 Gbps (Not Supported)
 <25:20> NLW             RO       0x0         0x8       Negotiated Link Width
                                                         Set automatically by hardware after Link initialization.
 <26>    NS              RAZ      NS          NS        Undefined
 <27>    LT              RO       0x0         0x0       Link Training
                                                         Not applicable for an upstream Port or Endpoint device,
                                                         hardwired to 0.
 <28>    SCC             RO/WRSL  0x1         0x1       Slot Clock Configuration
                                                         Indicates that the component uses the same physical reference
                                                         clock that the platform provides on the connector.
                                                         Writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <29>    DLLA            RO       0x0         0x0       Data Link Layer Active
                                                         Not applicable for an upstream Port or Endpoint device,
                                                         hardwired to 0.
 <31:30> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG037 = Thirty-eighth 32-bits of PCIE type 0 config space
 *                  (Device Capabilities 2 Register)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG037 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   CTRS            RO       0x0         0x0       Completion Timeout Ranges Supported
                                                         Value of 0 indicates that Completion Timeout Programming
                                                         is not supported
							 Completion timeout is 16.7ms.
 <4>     CTDS            RO       0x1         0x1       Completion Timeout Disable Supported
 <5>     ARI             RO       0x0         0x0       Alternate Routing ID Forwarding Supported
							 (Not Supported)
 <6>     ATOM_OPS        RO       0x0         0x0       AtomicOp Routing Supported
							 (Not Applicable for EP)
 <7>     ATOM32S         RO       0x0         0x0       32-bit AtomicOp Supported
							 (Not Supported)
 <8>     ATOM64S         RO       0x0         0x0       64-bit AtomicOp Supported
							 (Not Supported)
 <9>     ATOM128S        RO       0x0         0x0       128-bit AtomicOp Supported
							 (Not Supported)
 <10>    NOROPRPR        RO       0x0         0x0       No RO-enabled PR-PR Passing
							 (This bit applies to RCs)
 <11>    NS              RAZ      NS          NS        Reserved
 <13:12> TPH             RO       0x0         0x0       TPH Completer Supported
							 (Not Supported)
 <31:14> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG038 = Thirty-ninth 32-bits of PCIE type 0 config space
 *                  (Device Control 2 Register/Device Status 2 Register)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG038 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   CTV             RO       0x0         0x0       Completion Timeout Value
                                                         Completion Timeout Programming is not supported
							 Completion timeout is 16.7ms.
 <4>     CTD             R/W      0x0         0x0       Completion Timeout Disable
 <5>     ARI             RO       0x0         0x0       Alternate Routing ID Forwarding Supported
							 (Not Supported)
 <6>     ATOM_OP         RO       0x0         0x0       AtomicOp Requester Enable
							 (Not Supported)
 <7>     ATOM_OP_EB      RO       0x0         0x0       AtomicOp Egress Blocking
							 (Not Supported)m
 <8>     ID0_RQ          RO       0x0         0x0       ID Based Ordering Request Enable
							 (Not Supported)
 <9>     ID0_CP          RO       0x0         0x0       ID Based Ordering Completion Enable
							 (Not Supported)
 <31:10> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG039 = Fourtieth 32-bits of PCIE type 0 config space
 *                  (Link Capabilities 2 Register)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG039 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NS              RAZ      NS          NS        Reserved
 <7:1>   SLSV            RO/WRSL  NS          NS        Supported Link Speeds Vector
                                                         Indicates the supported Link speeds of the associated Port.
                                                         For each bit, a value of 1b indicates that the cooresponding
                                                         Link speed is supported; otherwise, the Link speed is not
                                                         supported.
                                                         Bit definitions are:
                                                         Bit 1 2.5 GT/s
                                                         Bit 2 5.0 GT/s
                                                         Bit 3 8.0 GT/s (Not Supported)
                                                         Bits 7:4 reserved

                                                         The reset value of this field is controled by a value sent from
                                                         the input pin qlm#_cfg[1].
                                                         qlm#_cfg[1]   RST_VALUE   NOTE
							 1             0001b       2.5 GHz supported
                                                         0             0011b       5.0 GHz and 2.5 GHz supported
 <8>     CLS             RO       0x0         0x0       Crosslink Supported
 <31:9>  NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG040 = Fourty-first 32-bits of PCIE type 0 config space
 *                  (Link Control 2 Register/Link Status 2 Register)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG040 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   TLS             R/W      NS          0x2       Target Link Speed
                                                         For Downstream ports, this field sets an upper limit on link
                                                         operational speed by restricting the values advertised by
                                                         the upstream component in its training sequences:
                                                           0001: 2.5Gb/s Target Link Speed
                                                           0010: 5Gb/s Target Link Speed
                                                           0100: 8Gb/s Target Link Speed (Not Supported)
                                                         All other encodings are reserved.
                                                         If a value is written to this field that does not correspond to
                                                         a speed included in the Supported Link Speeds field, the
                                                         result is undefined.
                                                         For both Upstream and Downstream ports, this field is
                                                         used to set the target compliance mode speed when
                                                         software is using the Enter Compliance bit to force a link
                                                         into compliance mode.
                                                         The reset value of this field is controled by a value sent from
                                                         the input pin qlm#_cfg[1].
                                                         qlm#_cfg[1]   RST_VALUE   NOTE
							 1             0001b       2.5 GHz supported
                                                         0             0010b       5.0 GHz and 2.5 GHz supported
 <4>     EC              R/W      0x0         0x0       Enter Compliance
                                                         Software is permitted to force a link to enter Compliance
                                                         mode at the speed indicated in the Target Link Speed
                                                         field by setting this bit to 1b in both components on a link
                                                         and then initiating a hot reset on the link.
 <5>     HASD            RO       0x0         0x0       Hardware Autonomous Speed Disable
                                                         When asserted, the
                                                         application must disable hardware from changing the Link
                                                         speed for device-specific reasons other than attempting to
                                                         correct unreliable Link operation by reducing Link speed.
                                                         Initial transition to the highest supported common link
                                                         speed is not blocked by this signal.
 <6>     SDE             RO       0x0         0x0       Selectable De-emphasis
                                                         Not applicable for an upstream Port or Endpoint device.
                                                         Hardwired to 0.
 <9:7>   TM              R/W      0x000       0x000     Transmit Margin
                                                         This field controls the value of the non-de-emphasized
                                                         voltage level at the Transmitter pins:
                                                          000: 800-1200 mV for full swing 400-600 mV for half-swing
                                                          001-010: values must be monotonic with a non-zero slope
                                                          011: 200-400 mV for full-swing and 100-200 mV for halfswing
                                                          100-111: reserved
                                                         This field is reset to 000b on entry to the LTSSM Polling.
                                                         Compliance substate.
                                                         When operating in 5.0 GT/s mode with full swing, the
                                                         de-emphasis ratio must be maintained within +/- 1 dB
                                                         from the specification-defined operational value
                                                         either -3.5 or -6 dB).
 <10>    EMC             R/W      0x0         0x0       Enter Modified Compliance
                                                         When this bit is set to 1b, the device transmits a modified
                                                         compliance pattern if the LTSSM enters Polling.
                                                         Compliance state.
 <11>    CSOS            R/W      0x0         0x0       Compliance SOS
                                                         When set to 1b, the LTSSM is required to send SKP
                                                         Ordered Sets periodically in between the (modified)
                                                         compliance patterns.
                                                         Note: When the Link is operating at 2.5 GT/s, the setting
                                                         of this bit has no effect.
 <12>    CDE             R/W      0x0         0x0       Compliance De-emphasis
                                                         This bit sets the de-emphasis level in Polling. Compliance
                                                         state if the entry occurred due to the Tx Compliance
                                                         Receive bit being 1b. Encodings:
                                                          1b: -3.5 dB
                                                          0b: -6 dB
                                                         Note: When the Link is operating at 2.5 GT/s, the setting
                                                         of this bit has no effect.
 <15:13> NS              RAZ      NS          NS        Reserved
 <16>    CDL             RO       0x0         0x0       Current De-emphasis Level
                                                         When the Link is operating at 5 GT/s speed, this bit
                                                         reflects the level of de-emphasis. Encodings:
                                                          1b: -3.5 dB
                                                          0b: -6 dB
                                                         Note: The value in this bit is undefined when the Link is
                                                         operating at 2.5 GT/s speed
 <31:17> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG064 = Sixty-fifth 32-bits of PCIE type 0 config space
 *                  (PCI Express Extended Capability Header)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG064 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  PCIEEC          RO       0x1         0x1       PCIE Express Extended Capability
 <19:16> CV              RO       0x2         0x2       Capability Version
 <31:20> NCO             RO       0x0         0x0       Next Capability Offset
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG065 = Sixty-sixth 32-bits of PCIE type 0 config space
 *                  (Uncorrectable Error Status Register)
 *

     ==============================================================
     PCIEEP(0..1)_CFG065 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NS              RAZ      NS          NS        Undefined
                                                         (Was Training Error Status for PCI Express 1.0a)
 <3:1>   NS              RAZ      NS          NS        Reserved
 <4>     DLPES           R/W1C    0x0         0x0       Data Link Protocol Error Status
 <5>     SDES            RO       0x0         0x0       Surprise Down Error Status (not supported)
 <11:6>  NS              RAZ      NS          NS        Reserved
 <12>    PTLPS           R/W1C    0x0         0x0       Poisoned TLP Status
 <13>    FCPES           R/W1C    0x0         0x0       Flow Control Protocol Error Status
 <14>    CTS             R/W1C    0x0         0x0       Completion Timeout Status
 <15>    CAS             R/W1C    0x0         0x0       Completer Abort Status
 <16>    UCS             R/W1C    0x0         0x0       Unexpected Completion Status
 <17>    ROS             R/W1C    0x0         0x0       Receiver Overflow Status
 <18>    MTLPS           R/W1C    0x0         0x0       Malformed TLP Status
 <19>    ECRCES          R/W1C    0x0         0x0       ECRC Error Status
 <20>    URES            R/W1C    0x0         0x0       Unsupported Request Error Status
 <31:21> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG066 = Sixty-seventh 32-bits of PCIE type 0 config space
 *                  (Uncorrectable Error Mask Register)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG066 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NS              RAZ      NS          NS        Undefined
                                                         (Was Training Error Mask for PCI Express 1.0a)
 <3:1>   NS              RAZ      NS          NS        Reserved
 <4>     DLPEM           R/W      0x0         0x0       Data Link Protocol Error Mask
 <5>     SDEM            RO       0x0         0x0       Surprise Down Error Mask (not supported)
 <11:6>  NS              RAZ      NS          NS        Reserved
 <12>    PTLPM           R/W      0x0         0x0       Poisoned TLP Mask
 <13>    FCPEM           R/W      0x0         0x0       Flow Control Protocol Error Mask
 <14>    CTM             R/W      0x0         0x0       Completion Timeout Mask
 <15>    CAM             R/W      0x0         0x0       Completer Abort Mask
 <16>    UCM             R/W      0x0         0x0       Unexpected Completion Mask
 <17>    ROM             R/W      0x0         0x0       Receiver Overflow Mask
 <18>    MTLPM           R/W      0x0         0x0       Malformed TLP Mask
 <19>    ECRCEM          R/W      0x0         0x0       ECRC Error Mask
 <20>    UREM            R/W      0x0         0x0       Unsupported Request Error Mask
 <31:21> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG067 = Sixty-eighth 32-bits of PCIE type 0 config space
 *                  (Uncorrectable Error Severity Register)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG067 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NS              RAZ      NS          NS        Undefined
                                                         (Was Training Error Severity for PCI Express 1.0a)
 <3:1>   NS              RAZ      NS          NS        Reserved
 <4>     DLPES           R/W      0x1         0x1       Data Link Protocol Error Severity
 <5>     SDES            RO       0x1         0x1       Surprise Down Error Severity (not supported)
 <11:6>  NS              RAZ      NS          NS        Reserved
 <12>    PTLPS           R/W      0x0         0x0       Poisoned TLP Severity
 <13>    FCPES           R/W      0x1         0x1       Flow Control Protocol Error Severity
 <14>    CTS             R/W      0x0         0x0       Completion Timeout Severity
 <15>    CAS             R/W      0x0         0x0       Completer Abort Severity
 <16>    UCS             R/W      0x0         0x0       Unexpected Completion Severity
 <17>    ROS             R/W      0x1         0x1       Receiver Overflow Severity
 <18>    MTLPS           R/W      0x1         0x1       Malformed TLP Severity
 <19>    ECRCES          R/W      0x0         0x0       ECRC Error Severity
 <20>    URES            R/W      0x0         0x0       Unsupported Request Error Severity
 <31:21> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG068 = Sixty-ninth 32-bits of PCIE type 0 config space
 *                  (Correctable Error Status Register)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG068 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     RES             R/W1C    0x0         0x0       Receiver Error Status
 <5:1>   NS              RAZ      NS          NS        Reserved
 <6>     BTLPS           R/W1C    0x0         0x0       Bad TLP Status
 <7>     BDLLPS          R/W1C    0x0         0x0       Bad DLLP Status
 <8>     RNRS            R/W1C    0x0         0x0       REPLAY_NUM Rollover Status
 <11:9>  NS              RAZ      NS          NS        Reserved
 <12>    RTTS            R/W1C    0x0         0x0       Reply Timer Timeout Status
 <13>    ANFES           R/W1C    0x0         0x0       Advisory Non-Fatal Error Status
 <31:14> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG069 = Seventieth 32-bits of PCIE type 0 config space
 *                  (Correctable Error Mask Register)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG069 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     REM             R/W      0x0         0x0       Receiver Error Mask
 <5:1>   NS              RAZ      NS          NS        Reserved
 <6>     BTLPM           R/W      0x0         0x0       Bad TLP Mask
 <7>     BDLLPM          R/W      0x0         0x0       Bad DLLP Mask
 <8>     RNRM            R/W      0x0         0x0       REPLAY_NUM Rollover Mask
 <11:9>  NS              RAZ      NS          NS        Reserved
 <12>    RTTM            R/W      0x0         0x0       Reply Timer Timeout Mask
 <13>    ANFEM           R/W      0x1         0x1       Advisory Non-Fatal Error Mask
 <31:14> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG070 = Seventy-first 32-bits of PCIE type 0 config space
 *                  (Advanced Error Capabilities and Control Register)
 *

     ==============================================================
     PCIEEP(0..1)_CFG070 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <4:0>   FEP             RO       0x00        0x0       First Error Pointer
 <5>     GC              RO       0x1         0x1       ECRC Generation Capability
 <6>     GE              R/W      0x0         0x0       ECRC Generation Enable
 <7>     CC              RO       0x1         0x1       ECRC Check Capable
 <8>     CE              R/W      0x0         0x0       ECRC Check Enable
 <31:9>  NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG071 = Seventy-second 32-bits of PCIE type 0 config space
 *                  (Header Log Register 1)
 *

     ==============================================================
     PCIEEP(0..1)_CFG071 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DWORD1          RO       0x0         0x0       Header Log Register (first DWORD)
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG072 = Seventy-third 32-bits of PCIE type 0 config space
 *                  (Header Log Register 2)
 *

     ==============================================================
     PCIEEP(0..1)_CFG072 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DWORD2          RO       0x0         0x0       Header Log Register (second DWORD)
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG073 = Seventy-fourth 32-bits of PCIE type 0 config space
 *                  (Header Log Register 3)
 *

     ==============================================================
     PCIEEP(0..1)_CFG073 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DWORD3          RO       0x0         0x0       Header Log Register (third DWORD)
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG074 = Seventy-fifth 32-bits of PCIE type 0 config space
 *                  (Header Log Register 4)
 *

     ==============================================================
     PCIEEP(0..1)_CFG074 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DWORD4          RO       0x0         0x0       Header Log Register (fourth DWORD)
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG448 = Four hundred forty-ninth 32-bits of PCIE type 0 config space
 *                  (Ack Latency Timer and Replay Timer Register)
 *

     ==============================================================
     PCIEEP(0..1)_CFG448 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  RTLTL           R/W      0x102F      NS        Round Trip Latency Time Limit
                                                         The Ack/Nak latency timer expires when it reaches this limit.
							 This value will be set correctly by the hardware out of reset
                                                         or when the negotiated Link-Width or Payload-Size changes. If
                                                         the user changes this value through a CSR write or by an
                                                         EEPROM load then they should refer to the PCIe Specification
                                                         for the correct value.
 <31:16> RTL             R/W      0x308D      NS        Replay Time Limit
                                                         The replay timer expires when it reaches this limit. The PCI
                                                         Express bus initiates a replay upon reception of a Nak or when
                                                         the replay timer expires.
							 This value will be set correctly by the hardware out of reset
                                                         or when the negotiated Link-Width or Payload-Size changes. If
                                                         the user changes this value through a CSR write or by an
                                                         EEPROM load then they should refer to the PCIe Specification
                                                         for the correct value.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG449 = Four hundred fiftieth 32-bits of PCIE type 0 config space
 *                  (Other Message Register)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG449 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  OMR             R/W      0xFFFFFFFF  NS        Other Message Register
                                                         This register can be used for either of the following purposes:
                                                         o To send a specific PCI Express Message, the application
                                                           writes the payload of the Message into this register, then
                                                           sets bit 0 of the Port Link Control Register to send the
                                                           Message.
                                                         o To store a corruption pattern for corrupting the LCRC on all
                                                           TLPs, the application places a 32-bit corruption pattern into
                                                           this register and enables this function by setting bit 25 of
                                                           the Port Link Control Register. When enabled, the transmit
                                                           LCRC result is XOR'd with this pattern before inserting
                                                           it into the packet.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG450 = Four hundred fifty-first 32-bits of PCIE type 0 config space
 *                  (Port Force Link Register)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG450 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   LINK_NUM        RO       0x0         0x0       Link Number
                                                         Not used for Endpoint
 <14:8>  NS              RAZ      NS          NS        Reserved
 <15>    FORCE_LINK      R/W      0x0         0x0       Force Link
                                                         Forces the Link to the state specified by the Link State field.
                                                         The Force Link pulse will trigger Link re-negotiation.
                                                         * As the The Force Link is a pulse, writing a 1 to it does
                                                           trigger the forced link state event, even thought reading it
                                                           always returns a 0.
 <21:16> LINK_STATE      R/W      0x00        0x0       Link State
                                                         The Link state that the PCI Express Bus will be forced to
                                                         when bit 15 (Force Link) is set.
                                                         State encoding:
                                                         o DETECT_QUIET              00h
                                                         o DETECT_ACT                01h
                                                         o POLL_ACTIVE               02h
                                                         o POLL_COMPLIANCE           03h
                                                         o POLL_CONFIG               04h
                                                         o PRE_DETECT_QUIET          05h
                                                         o DETECT_WAIT               06h
                                                         o CFG_LINKWD_START          07h
                                                         o CFG_LINKWD_ACEPT          08h
                                                         o CFG_LANENUM_WAIT          09h
                                                         o CFG_LANENUM_ACEPT         0Ah
                                                         o CFG_COMPLETE              0Bh
                                                         o CFG_IDLE                  0Ch
                                                         o RCVRY_LOCK                0Dh
                                                         o RCVRY_SPEED               0Eh
                                                         o RCVRY_RCVRCFG             0Fh
                                                         o RCVRY_IDLE                10h
                                                         o L0                        11h
                                                         o L0S                       12h
                                                         o L123_SEND_EIDLE           13h
                                                         o L1_IDLE                   14h
                                                         o L2_IDLE                   15h
                                                         o L2_WAKE                   16h
                                                         o DISABLED_ENTRY            17h
                                                         o DISABLED_IDLE             18h
                                                         o DISABLED                  19h
                                                         o LPBK_ENTRY                1Ah
                                                         o LPBK_ACTIVE               1Bh
                                                         o LPBK_EXIT                 1Ch
                                                         o LPBK_EXIT_TIMEOUT         1Dh
                                                         o HOT_RESET_ENTRY           1Eh
                                                         o HOT_RESET                 1Fh
 <23:22> NS              RAZ      NS          NS        Reserved
 <31:24> LPEC            R/W      0x7         0x7       Low Power Entrance Count
                                                         The Power Management state will wait for this many clock cycles
                                                         for the associated completion of a CfgWr to PCIE_CFG017 register
							 Power State (PS) field register to go low-power. This register
                                                         is intended for applications that do not let the PCI Express
                                                         bus handle a completion for configuration request to the
                                                         Power Management Control and Status (PCIE_CFG017) register.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG451 = Four hundred fifty-second 32-bits of PCIE type 0 config space
 *                  (Ack Frequency Register)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG451 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   ACK_FREQ        R/W      0x0         0x0       Ack Frequency
                                                         The number of pending Ack's specified here (up to 255) before
                                                         sending an Ack.
 <15:8>  N_FTS           R/W      0x80        0x80      N_FTS
                                                         The number of Fast Training Sequence ordered sets to be
                                                         transmitted when transitioning from L0s to L0. The maximum
                                                         number of FTS ordered-sets that a component can request is 255.
                                                         Note: A value of zero is not supported; a value of
                                                               zero can cause the LTSSM to go into the recovery state
                                                               when exiting from L0s.
 <23:16> N_FTS_CC        R/W      0x80        0x80      N_FTS when common clock is used.
                                                         The number of Fast Training Sequence ordered sets to be
                                                         transmitted when transitioning from L0s to L0. The maximum
                                                         number of FTS ordered-sets that a component can request is 255.
                                                          Note: A value of zero is not supported; a value of
                                                                zero can cause the LTSSM to go into the recovery state
                                                                when exiting from L0s.
 <26:24> L0EL            R/W      0x3         0x3       L0s Entrance Latency
                                                         Values correspond to:
                                                         o 000: 1 ms
                                                         o 001: 2 ms
                                                         o 010: 3 ms
                                                         o 011: 4 ms
                                                         o 100: 5 ms
                                                         o 101: 6 ms
                                                         o 110 or 111: 7 ms
 <29:27> L1EL            R/W      0x3         0x3       L1 Entrance Latency
                                                         Values correspond to:
                                                         o 000: 1 ms
                                                         o 001: 2 ms
                                                         o 010: 4 ms
                                                         o 011: 8 ms
                                                         o 100: 16 ms
                                                         o 101: 32 ms
                                                         o 110 or 111: 64 ms
 <30>    EASPML1         R/W      0x0         0x0       Enter ASPM L1 without receive in L0s
							 Allow core to enter ASPM L1 even when link partner did
							 not go to L0s (receive is not in L0s).
							 When not set, core goes to ASPM L1 only after idle period
							 during which both receive and transmit are in L0s.
 <31>    NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG452 = Four hundred fifty-third 32-bits of PCIE type 0 config space
 *                  (Port Link Control Register)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG452 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     OMR             R/W      0x0         0x0       Other Message Request
                                                         When software writes a `1' to this bit, the PCI Express bus
                                                         transmits the Message contained in the Other Message register.
 <1>     SD              R/W      0x0         0x0       Scramble Disable
                                                         Turns off data scrambling.
 <2>     LE              R/W      0x0         0x0       Loopback Enable
                                                         Initiate loopback mode as a master. On a 0->1 transition,
                                                         the PCIe core sends TS ordered sets with the loopback bit set
                                                         to cause the link partner to enter into loopback mode as a
                                                         slave. Normal transmission is not possible when LE=1. To exit
                                                         loopback mode, take the link through a reset sequence.
 <3>     RA              R/W      0x0         0x0       Reset Assert
                                                         Triggers a recovery and forces the LTSSM to the Hot Reset
                                                         state (downstream port only).
 <4>     NS              RAZ      NS          NS        Reserved
 <5>     DLLLE           R/W      0x1         0x1       DLL Link Enable
                                                         Enables Link initialization. If DLL Link Enable = 0, the PCI
                                                         Express bus does not transmit InitFC DLLPs and does not
                                                         establish a Link.
 <6>     NS              RAZ      NS          NS        Reserved
 <7>     FLM             R/W      0x0         0x0       Fast Link Mode
                                                         Sets all internal timers to fast mode for simulation purposes.
                                                         If during an eeprom load, the first word loaded is 0xffffffff,
                                                         then the EEPROM load will be terminated and this bit will be set.
 <11:8>  NS              RO       0x1         0x1       Reserved
 <15:12> NS              RAZ      NS          NS        Reserved
 <21:16> LME             R/W      0xF         0xF       Link Mode Enable
                                                         o 000001: x1
                                                         o 000011: x2
                                                         o 000111: x4
                                                         o 001111: x8
                                                         o 011111: x16 (not supported)
                                                         o 111111: x32 (not supported)
                                                         This field indicates the MAXIMUM number of lanes supported
                                                         by the PCIe port. The value can be set less than 0x7
                                                         to limit the number of lanes the PCIe will attempt to use.
                                                         If the value of 0x7 set by the HW is not desired,
							 this field can be programmed to a smaller value (i.e. EEPROM)
							 See also MLW.
                                                         (Note: The value of this field does NOT indicate the number
                                                          of lanes in use by the PCIe. LME sets the max number of lanes
                                                          in the PCIe core that COULD be used. As per the PCIe specs,
							  the PCIe core can negotiate a smaller link width, so all
							  of x4, x2, and x1 are supported when LME=0x7,
							  for example.)
 <31:22> NS             RAZ      NS          NS         Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG453 = Four hundred fifty-fourth 32-bits of PCIE type 0 config space
 *                  (Lane Skew Register)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG453 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <23:0>  ILST            R/W      0x000000    0x0       Insert Lane Skew for Transmit
                                                         Causes skew between lanes for test purposes. There are three
                                                         bits per Lane. The value is in units of one symbol time. For
                                                         example, the value 010b for a Lane forces a skew of two symbol
                                                         times for that Lane. The maximum skew value for any Lane is 5
                                                         symbol times.
 <24>    FCD             R/W      0x0         0x0       Flow Control Disable
                                                         Prevents the PCI Express bus from sending FC DLLPs.
 <25>    ACK_NAK         R/W      0x0         0x0       Ack/Nak Disable
                                                         Prevents the PCI Express bus from sending Ack and Nak DLLPs.
 <30:26> NS              RAZ      NS          NS        Reserved
 <31>    DLLD            R/W      0x0         0x0       Disable Lane-to-Lane Deskew
                                                         Disables the internal Lane-to-Lane deskew logic.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG454 = Four hundred fifty-fifth 32-bits of PCIE type 0 config space
 *                  (Symbol Number Register)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG454 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   NTSS            R/W      0xA         0xA       Number of TS Symbols
                                                         Sets the number of TS identifier symbols that are sent in TS1
                                                         and TS2 ordered sets.
 <7:4>   NS              RO       NS          NS        Reserved
 <10:8>  NSKPS           R/W      0x3         0x3       Number of SKP Symbols
 <13:11> NS              RAZ      NS          NS        Reserved
 <18:14> TMRT            R/W      0x8         0x8       Timer Modifier for Replay Timer
                                                         Increases the timer value for the replay timer, in increments
                                                         of 64 clock cycles.
 <23:19> TMANLT          R/W      0x0         0x0       Timer Modifier for Ack/Nak Latency Timer
                                                         Increases the timer value for the Ack/Nak latency timer, in
                                                         increments of 64 clock cycles.
 <28:24> TMFCWT          R/W      0x0         0x0       Timer Modifier for Flow Control Watchdog Timer
                                                         Increases the timer value for the Flow Control watchdog timer,
                                                         in increments of 16 clock cycles.
 <31:29> NS              RO       NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG455 = Four hundred fifty-sixth 32-bits of PCIE type 0 config space
 *                  (Symbol Timer Register/Filter Mask Register 1)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG455 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>  SKPIV           R/W      0x500       0x500     SKP Interval Value
 <14:11> NS              RAZ      NS          NS        Reserved
 <15>    DFCWT           R/W      0x0         0x0       Disable FC Watchdog Timer
 <16>    M_FUN           R/W      0x0         0x0       Mask function
 <17>    M_POIS_FILT     R/W      0x1         0x1       Mask poisoned TLP filtering
 <18>    M_BAR_MATCH     R/W      0x0         0x0       Mask BAR match filtering
 <19>    M_CFG1_FILT     R/W      0x0         0x0       Mask Type 1 Configuration Request filtering
 <20>    M_LK_FILT       R/W      0x0         0x0       Mask Locked Request filtering
 <21>    M_CPL_TAG_ERR   R/W      0x0         0x0       Mask Tag error rules for received Completions
 <22>    M_CPL_RID_ERR   R/W      0x0         0x0       Mask Requester ID mismatch error for received Completions
 <23>    M_CPL_FUN_ERR   R/W      0x0         0x0       Mask function mismatch error for received Completions
 <24>    M_CPL_TC_ERR    R/W      0x0         0x0       Mask Traffic Class mismatch error for received Completions
 <25>    M_CPL_ATTR_ERR  R/W      0x0         0x0       Mask Attributes mismatch error for received Completions
 <26>    M_CPL_LEN_ERR   R/W      0x0         0x0       Mask Length mismatch error for received Completions
 <27>    M_ECRC_FILT     R/W      0x0         0x0       Mask ECRC error filtering
 <28>    M_CPL_ECRC_FILT R/W      0x0         0x0       Mask ECRC error filtering for Completions
 <29>    MSG_CTRL        R/W      0x0         0x0       Message Control
                                                         The application must not change this field.
 <30>    M_IO_FILT       R/W      0x0         0x0       Mask filtering of received I/O Requests (RC mode only)
 <31>    M_CFG0_FILT     R/W      0x0         0x0       Mask filtering of received Configuration Requests (RC mode only)
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG456 = Four hundred fifty-seventh 32-bits of PCIE type 0 config space
 *                  (Filter Mask Register 2)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG456 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     M_VEND0_DRP     R/W      0x0         0x0       Mask Vendor MSG Type 0 dropped with UR error reporting.
 <1>     M_VEND1_DRP     R/W      0x0         0x0       Mask Vendor MSG Type 1 dropped silently
 <31:2>  NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG458 = Four hundred fifty-ninth 32-bits of PCIE type 0 config space
 *                  (Debug Register 0)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG458 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DBG_INFO_L32    RO       0x0         0x0       Debug Info Lower 32 Bits
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG459 = Four hundred sixtieth 32-bits of PCIE type 0 config space
 *                  (Debug Register 1)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG459 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DBG_INFO_U32     RO       0x0         0x0      Debug Info Upper 32 Bits
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG460 = Four hundred sixty-first 32-bits of PCIE type 0 config space
 *                  (Transmit Posted FC Credit Status)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG460 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  TPDFCC          RO       0x0         0x0       Transmit Posted Data FC Credits
                                                         The Posted Data credits advertised by the receiver at the other
                                                         end of the Link, updated with each UpdateFC DLLP.
 <19:12> TPHFCC          RO       0x0         0x0       Transmit Posted Header FC Credits
                                                         The Posted Header credits advertised by the receiver at the
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <31:20> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG461 = Four hundred sixty-second 32-bits of PCIE type 0 config space
 *                  (Transmit Non-Posted FC Credit Status)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG461 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  TCDFCC          RO       0x0         0x0       Transmit Non-Posted Data FC Credits
                                                         The Non-Posted Data credits advertised by the receiver at the
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <19:12> TCHFCC          RO       0x0         0x0       Transmit Non-Posted Header FC Credits
                                                         The Non-Posted Header credits advertised by the receiver at the
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <31:20> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG462 = Four hundred sixty-third 32-bits of PCIE type 0 config space
 *                  (Transmit Completion FC Credit Status )
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG462 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  TCDFCC          RO       0x0         0x0       Transmit Completion Data FC Credits
                                                         The Completion Data credits advertised by the receiver at the
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <19:12> TCHFCC          RO       0x0         0x0       Transmit Completion Header FC Credits
                                                         The Completion Header credits advertised by the receiver at the
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <31:20> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG463 = Four hundred sixty-fourth 32-bits of PCIE type 0 config space
 *                  (Queue Status)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG463 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     RTLPFCCNR       RO       0x0         0x0       Received TLP FC Credits Not Returned
                                                         Indicates that the PCI Express bus has sent a TLP but has not
                                                         yet received an UpdateFC DLLP indicating that the credits for
							 that TLP have been restored by the receiver at the other end of
                                                         the Link.
 <1>     TRBNE           RO       0x0         0x0       Transmit Retry Buffer Not Empty
                                                         Indicates that there is data in the transmit retry buffer.
 <2>     RQNE            RO       0x0         0x0       Received Queue Not Empty
                                                         Indicates there is data in one or more of the receive buffers.
 <31:3>  NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG464 = Four hundred sixty-fifth 32-bits of PCIE type 0 config space
 *                  (VC Transmit Arbitration Register 1)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG464 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   WRR_VC0         RO       0xF         0xF       WRR Weight for VC0
 <15:8>  WRR_VC1         RO       0x0         0x0       WRR Weight for VC1
 <23:16> WRR_VC2         RO       0x0         0x0       WRR Weight for VC2
 <31:24> WRR_VC3         RO       0x0         0x0       WRR Weight for VC3
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG465 = Four hundred sixty-sixth 32-bits of PCIE type 0 config space
 *                  (VC Transmit Arbitration Register 2)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG465 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   WRR_VC4         RO       0x0         0x0       WRR Weight for VC4
 <15:8>  WRR_VC5         RO       0x0         0x0       WRR Weight for VC5
 <23:16> WRR_VC6         RO       0x0         0x0       WRR Weight for VC6
 <31:24> WRR_VC7         RO       0x0         0x0       WRR Weight for VC7
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG466 = Four hundred sixty-seventh 32-bits of PCIE type 0 config space
 *                  (VC0 Posted Receive Queue Control)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG466 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  DATA_CREDITS    RO/WRSL  0x080       0x080     VC0 Posted Data Credits
                                                         The number of initial Posted data credits for VC0, used for all
                                                         receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.

 <19:12> HEADER_CREDITS  RO/WRSL  0x60        0x60      VC0 Posted Header Credits
                                                         The number of initial Posted header credits for VC0, used for
                                                         all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.

 <20>    NS              RAZ      NS          NS        Reserved
 <23:21> QUEUE_MODE      RO/WRSL  0x2         0x2      VC0 Posted TLP Queue Mode
                                                         The operating mode of the Posted receive queue for VC0, used
                                                         only in the segmented-buffer configuration, writable through
                                                         PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
                                                         Only one bit can be set at a time:
                                                         o Bit 23: Bypass
                                                         o Bit 22: Cut-through
                                                         o Bit 21: Store-and-forward
 <29:24> NS              RAZ      NS          NS        Reserved
 <30>    TYPE_ORDERING   RO/WRSL  0x1         0x1       TLP Type Ordering for VC0
                                                         Determines the TLP type ordering rule for VC0 receive queues,
                                                         used only in the segmented-buffer configuration, writable
                                                         through PEM(0..1)_CFG_WR:
                                                         o 1: Ordering of received TLPs follows the rules in
                                                              PCI Express Base Specification
                                                         o 0: Strict ordering for received TLPs: Posted, then
                                                              Completion, then Non-Posted
                                                         However, the application must not change this field.
 <31>    RX_QUEUE_ORDER  RO/WRSL  0x0         0x0       VC Ordering for Receive Queues
                                                         Determines the VC ordering rule for the receive queues, used
                                                         only in the segmented-buffer configuration,
                                                         writable through PEM(0..1)_CFG_WR:
                                                         o 1: Strict ordering, higher numbered VCs have higher priority
                                                         o 0: Round robin
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG467 = Four hundred sixty-eighth 32-bits of PCIE type 0 config space
 *                  (VC0 Non-Posted Receive Queue Control)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG467 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  DATA_CREDITS    RO/WRSL  0x020       0x20      VC0 Non-Posted Data Credits
                                                         The number of initial Non-Posted data credits for VC0, used for
                                                         all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <19:12> HEADER_CREDITS  RO/WRSL  0x20        0x20      VC0 Non-Posted Header Credits
                                                         The number of initial Non-Posted header credits for VC0, used
                                                         for all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <20>    NS              RAZ      NS          NS        Reserved
 <23:21> QUEUE_MODE      RO/WRSL  0x2         0x2       VC0 Non-Posted TLP Queue Mode
                                                         The operating mode of the Non-Posted receive queue for VC0,
                                                         used only in the segmented-buffer configuration, writable
                                                         through PEM(0..1)_CFG_WR.
                                                         Only one bit can be set at a time:
                                                         o Bit 23: Bypass
                                                         o Bit 22: Cut-through
                                                         o Bit 21: Store-and-forward
                                                         However, the application must not change this field.
 <31:24> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG468 = Four hundred sixty-ninth 32-bits of PCIE type 0 config space
 *                  (VC0 Completion Receive Queue Control)
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG468 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  DATA_CREDITS    RO/WRSL  0x000       0x00      VC0 Completion Data Credits
                                                         The number of initial Completion data credits for VC0, used for
                                                         all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <19:12> HEADER_CREDITS  RO/WRSL  0x00        0x00      VC0 Completion Header Credits
                                                         The number of initial Completion header credits for VC0, used
                                                         for all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <20>    NS              RAZ      NS          NS        Reserved
 <23:21> QUEUE_MODE      RO/WRSL  0x2         0x2       VC0 Completion TLP Queue Mode
                                                         The operating mode of the Completion receive queue for VC0,
                                                         used only in the segmented-buffer configuration, writable
                                                         through PEM(0..1)_CFG_WR.
                                                         Only one bit can be set at a time:
                                                         o Bit 23: Bypass
                                                         o Bit 22: Cut-through
                                                         o Bit 21: Store-and-forward
                                                         However, the application must not change this field.
 <31:24> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG490 = Four hundred ninety-first 32-bits of PCIE type 0 config space
 *                  (VC0 Posted Buffer Depth)
 *

     ==============================================================
     PCIEEP(0..1)_CFG490 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <13:0>  DATA_DEPTH      RO/WRSL  0x0188      0x188     VC0 Posted Data Queue Depth
                                                         Sets the number of entries in the Posted data queue for VC0
                                                         when using the segmented-buffer configuration, writable
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <15:14> NS              RAZ      NS          NS        Reserved
 <25:16> HEADER_DEPTH    RO/WRSL  0x066       0x66      VC0 Posted Header Queue Depth
                                                         Sets the number of entries in the Posted header queue for VC0
                                                         when using the segmented-buffer configuration, writable through
                                                         PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:26> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG491 = Four hundred ninety-second 32-bits of PCIE type 0 config space
 *                  (VC0 Non-Posted Buffer Depth)
 *

     ==============================================================
     PCIEEP(0..1)_CFG491 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <13:0>  DATA_DEPTH      RO/WRSL  0x0088      0x88      VC0 Non-Posted Data Queue Depth
                                                         Sets the number of entries in the Non-Posted data queue for VC0
                                                         when using the segmented-buffer configuration, writable
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <15:14> NS              RAZ      NS          NS        Reserved
 <25:16> HEADER_DEPTH    RO/WRSL  0x026       0x26      VC0 Non-Posted Header Queue Depth
                                                         Sets the number of entries in the Non-Posted header queue for
                                                         VC0 when using the segmented-buffer configuration, writable
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:26> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG492 = Four hundred ninety-third 32-bits of PCIE type 0 config space
 *                  (VC0 Completion Buffer Depth)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG492 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <13:0>  DATA_DEPTH      RO/WRSL  0x02a7      0x2a7     VC0 Completion Data Queue Depth
                                                         Sets the number of entries in the Completion data queue for VC0
                                                         when using the segmented-buffer configuration, writable
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <15:14> NS              RAZ      NS          NS        Reserved
 <25:16> HEADER_DEPTH    RO/WRSL  0x085       0x85      VC0 Completion Header Queue Depth
                                                         Sets the number of entries in the Completion header queue for
                                                         VC0 when using the segmented-buffer configuration, writable
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:26> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG515 = Five hundred sixteenth 32-bits of PCIE type 0 config space
 *                  (Port Logic Register (Gen2))
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG515 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   N_FTS           R/W      0x80        0x80      N_FTS
                                                         Sets the Number of Fast Training Sequences (N_FTS) that
                                                         the core advertises as its N_FTS during GEN2 Link training.
                                                         This value is used to inform the Link partner about the PHYs
                                                         ability to recover synchronization after a low power state.
                                                         Note: Do not set N_FTS to zero; doing so can cause the
                                                               LTSSM to go into the recovery state when exiting from
                                                               L0s.
 <16:8>  LE              R/W      0x8         0x8       Lane Enable
                                                         Indicates the number of lanes to check for exit from electrical
                                                         idle in Polling.Active and Polling.Compliance. 1 = x1, 2 = x2,
                                                         etc. Used to limit the maximum link width to ignore broken
                                                         lanes that detect a receiver, but will not exit electrical
                                                         idle and
                                                         would otherwise prevent a valid link from being configured.
 <17>    DSC             R/W      0x0         0x0       Directed Speed Change
                                                         o a write of '1' will initiate a speed change
                                                         o always reads a zero
 <18>    CPYTS           R/W      0x0         0x0       Config PHY Tx Swing
                                                         Indicates the voltage level the PHY should drive. When set to
                                                         1, indicates Full Swing. When set to 0, indicates Low Swing
 <19>    CTCRB           R/W      0x0         0x0       Config Tx Compliance Receive Bit
                                                         When set to 1, signals LTSSM to transmit TS ordered sets
                                                         with the compliance receive bit assert (equal to 1).
 <20>    S_D_E           R/W      0x0         0x0       SEL_DE_EMPHASIS
                                                         Used to set the de-emphasis level for upstream ports.
 <31:21> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG516 = Five hundred seventeenth 32-bits of PCIE type 0 config space
 *                  (PHY Status Register)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG516 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PHY_STAT        RO       0x0         0x0       PHY Status
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG517 = Five hundred eighteenth 32-bits of PCIE type 0 config space
 *                  (PHY Control Register)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG517 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PHY_CTRL        R/W      0x0         0x0       PHY Control
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG004_MASK (BAR Mask 0 - Low)
 *                   The BAR 0 Mask register is invisible to host software and not readable from the application.
 *                   The BAR 0 Mask register is only writable through PEM(0..1)_CFG_WR.
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG004_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:1>  LMASK           WORSL    0x1FFF      0x1FFF    Bar Mask Low
 <0>     ENB             WORSL    0x1         0x1       Bar Enable
                                                         o 0: BAR 0 is disabled
                                                         o 1: BAR 0 is enabled
                                                         Bit 0 is interpreted as BAR Enable when writing to the BAR Mask
                                                         register rather than as a mask bit because bit 0 of a BAR is
                                                         always masked from writing by host software. Bit 0 must be
                                                         written prior to writing the other mask bits.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG005_MASK = (BAR Mask 0 - High)
 *                   The BAR 0 Mask register is invisible to host software and not readable from the application.
 *                   The BAR 0 Mask register is only writable through PEM(0..1)_CFG_WR.
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG005_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  UMASK           WORSL    0x0         0x0       Bar Mask High
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG006_MASK (BAR Mask 1 - Low)
 *                   The BAR 1 Mask register is invisible to host software and not readable from the application.
 *                   The BAR 1 Mask register is only writable through PEM(0..1)_CFG_WR.
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG006_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:1>  LMASK           WORSL    0x1FFFFFF   0x1FFFFFF Bar Mask Low
 <0>     ENB             WORSL    0x1         0x1       Bar Enable
                                                         o 0: BAR 1 is disabled
                                                         o 1: BAR 1 is enabled
                                                         Bit 0 is interpreted as BAR Enable when writing to the BAR Mask
                                                         register rather than as a mask bit because bit 0 of a BAR is
                                                         always masked from writing by host software. Bit 0 must be
                                                         written prior to writing the other mask bits.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG007_MASK (BAR Mask 1 - High)
 *                   The BAR 1 Mask register is invisible to host software and not readable from the application.
 *                   The BAR 1 Mask register is only writable through PEM(0..1)_CFG_WR.
 *
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG007_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  UMASK           WORSL    0x0         0x0       Bar Mask High
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG008_MASK (BAR Mask 2 - Low)
 *                   The BAR 2 Mask register is invisible to host software and not readable from the application.
 *                   The BAR 2 Mask register is only writable through PEM(0..1)_CFG_WR.
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG008_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:1>  LMASK           WORSL    0x7FFFFFFF 0x7FFFFFFF Bar Mask Low
 <0>     ENB             WORSL    0x1         0x1       Bar Enable
                                                         o 0: BAR 2 is disabled
                                                         o 1: BAR 2 is enabled
                                                         Bit 0 is interpreted as BAR Enable when writing to the BAR Mask
                                                         register rather than as a mask bit because bit 0 of a BAR is
                                                         always masked from writing by host software. Bit 0 must be
                                                         written prior to writing the other mask bits.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG009_MASK (BAR Mask 2 - High)
 *                   The BAR 2 Mask register is invisible to host software and not readable from the application.
 *                   The BAR 2 Mask register is only writable through PEM(0..1)_CFG_WR.
 *

     ==============================================================
     PCIEEP(0..1)_CFG009_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  UMASK           WORSL    0x1FF        0x1FF      Bar Mask High
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG012_MASK (Exapansion ROM BAR Mask)
 *                   The ROM Mask register is invisible to host software and not readable from the application.
 *                   The ROM Mask register is only writable through PEM(0..1)_CFG_WR.
 *

     ==============================================================
     PCIEEP(0..1)_CFG012_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:1>  MASK            WORSL    0x00007FFF 0x00007FFF Bar Mask Low                                                                 NS
 <0>     ENB             WORSL    0x1         0x1       Bar Enable                                                                   NS
                                                         o 0: BAR ROM is disabled
                                                         o 1: BAR ROM is enabled
                                                         Bit 0 is interpreted as BAR Enable when writing to the BAR Mask
                                                         register rather than as a mask bit because bit 0 of a BAR is
                                                         always masked from writing by host software. Bit 0 must be
                                                         written prior to writing the other mask bits.
----------------------------------------------------------------------------------------------------
===



 *
 *                PCIE_CFG000 = First 32-bits of PCIE type 1 config space (Device ID and Vendor ID Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG000 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  VENDID          R/W      0x177d      0x177d    Vendor ID, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <31:16> DEVID           R/W      0x91        0x91      Device ID, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                PCIE_CFG001 = Second 32-bits of PCIE type 1 config space (Command/Status Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG001 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ISAE            R/W      0x0         0x0       I/O Space Enable
 <1>     MSAE            R/W      0x0         0x0       Memory Space Enable
 <2>     ME              R/W      0x0         0x0       Bus Master Enable
 <3>     SCSE            RO       0x0         0x0       Special Cycle Enable
                                                         Not applicable for PCI Express. Must be hardwired to 0.
 <4>     MWICE           RO       0x0         0x0       Memory Write and Invalidate
                                                         Not applicable for PCI Express. Must be hardwired to 0.
 <5>     VPS             RO       0x0         0x0       VGA Palette Snoop
                                                         Not applicable for PCI Express. Must be hardwired to 0.
 <6>     PER             R/W      0x0         0x0       Parity Error Response
 <7>     IDS_WCC         RO       0x0         0x0       IDSEL Stepping/Wait Cycle Control
                                                         Not applicable for PCI Express. Must be hardwired to 0
 <8>     SEE             R/W      0x0         0x0       SERR# Enable
 <9>     FBBE            RO       0x0         0x0       Fast Back-to-Back Enable
                                                         Not applicable for PCI Express. Must be hardwired to 0.
 <10>    I_DIS           R/W      0x0         0x0       INTx Assertion Disable
 <18:11> NS              RAZ      NS          NS        Reserved
 <19>    I_STAT          RO       0x0         0x0       INTx Status
 <20>    CL              RO       0x1         0x1       Capabilities List
                                                         Indicates presence of an extended capability item.
                                                         Hardwired to 1.
 <21>    M66             RO       0x0         0x0       66 MHz Capable
                                                         Not applicable for PCI Express. Hardwired to 0.
 <22>    NS              RO       NS          NS        Reserved
 <23>    FBB             RO       0x0         0x0       Fast Back-to-Back Capable
                                                         Not applicable for PCI Express. Hardwired to 0.
 <24>    MDPE            R/W1C    0x0         0x0       Master Data Parity Error
 <26:25> DEVT            RO       0x0         0x0       DEVSEL Timing
                                                         Not applicable for PCI Express. Hardwired to 0.
 <27>    STA             R/W1C    0x0         0x0       Signaled Target Abort
 <28>    RTA             R/W1C    0x0         0x0       Received Target Abort
 <29>    RMA             R/W1C    0x0         0x0       Received Master Abort
 <30>    SSE             R/W1C    0x0         0x0       Signaled System Error
 <31>    DPE             R/W1C    0x0         0x0       Detected Parity Error
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG002 = Third 32-bits of PCIE type 1 config space (Revision ID/Class Code Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG002 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   RID             R/W      0x00        0x00      Revision ID, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <15:8>  PI              R/W      0x00        0x0       Programming Interface, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <23:16> SC              R/W      0x30        0x30      Subclass Code, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <31:24> BCC             R/W      0x0B        0x0B      Base Class Code, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG003 = Fourth 32-bits of PCIE type 1 config space (Cache Line Size/Master Latency Timer/Header Type Register/BIST Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG003 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   CLS             R/W      0x00        0x0       Cache Line Size
                                                         The Cache Line Size register is RW for legacy compatibility
                                                         purposes and is not applicable to PCI Express device
                                                         functionality.
 <15:8>  LT              RO       0x00        0x0       Master Latency Timer
                                                         Not applicable for PCI Express, hardwired to 0.
 <22:16> CHF             RO       0x1         0x1       Configuration Header Format
                                                         Hardwired to 1.
 <23>    MFD             R/W      0x0         0x0       Multi Function Device
                                                         The Multi Function Device bit is writable through PEM(0..1)_CFG_WR.
                                                         However, this is a single function device. Therefore, the
                                                         application must not write a 1 to this bit.
 <31:24> BIST            RO       0x00        0x0       The BIST register functions are not supported.
                                                         All 8 bits of the BIST register are hardwired to 0.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG004 = Fifth 32-bits of PCIE type 1 config space (Base Address Register 0 - Low)
 *

     ==============================================================
     PCIERC(0..1)_CFG004 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  NS              RO       NS          NS        Unused
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG005 = Sixth 32-bits of PCIE type 1 config space (Base Address Register 0 - High)
 *

     ==============================================================
     PCIERC(0..1)_CFG005 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  NS              RO       NS          NS        Unused
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG006 = Seventh 32-bits of PCIE type 1 config space (Bus Number Registers)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG006 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   PBNUM           R/W      0x00        0x0       Primary Bus Number
 <15:8>  SBNUM           R/W      0x00        0x0       Secondary Bus Number
 <23:16> SUBBNUM         R/W      0x00        0x0       Subordinate Bus Number
 <31:24> SLT             RO       0x00        0x0       Secondary Latency Timer
                                                         Not applicable to PCI Express, hardwired to 0x00.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG007 = Eighth 32-bits of PCIE type 1 config space (IO Base and IO Limit/Secondary Status Register)
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG007 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     IO32A           R/W      0x1         0x1       32-Bit I/O Space
                                                         o 0 = 16-bit I/O addressing
                                                         o 1 = 32-bit I/O addressing
                                                         This bit is writable through PEM(0..1)_CFG_WR.
                                                         When the application
                                                         writes to this bit through PEM(0..1)_CFG_WR,
                                                         the same value is written
                                                         to bit 8 of this register.
 <3:1>   NS              RAZ      0x00        0x0       Reserved
 <7:4>   LIO_BASE        R/W      0x00        0x0       I/O Space Base
 <8>     IO32B           RO       0x1         0x1       32-Bit I/O Space
 <11:9>  NS              RAZ      0x00        0x0       Reserved
 <15:12> LIO_LIMI        R/W      0x00        0x0       I/O Space Limit
 <20:16> NS              RAZ      NS          NS        Reserved
 <21>    M66             RO       0x0         0x0       66 MHz Capable
                                                         Not applicable for PCI Express. Hardwired to 0.
 <22>    NS              RO       NS          NS        Reserved
 <23>    FBB             RO       0x0         0x0       Fast Back-to-Back Capable
                                                         Not applicable for PCI Express. Hardwired to 0.
 <24>    MDPE            R/W1C    0x0         0x0       Master Data Parity Error
 <26:25> DEVT            RO       0x0         0x0       DEVSEL Timing
                                                         Not applicable for PCI Express. Hardwired to 0.
 <27>    STA             R/W1C    0x0         0x0       Signaled Target Abort
 <28>    RTA             R/W1C    0x0         0x0       Received Target Abort
 <29>    RMA             R/W1C    0x0         0x0       Received Master Abort
 <30>    SSE             R/W1C    0x0         0x0       Signaled System Error
 <31>    DPE             R/W1C    0x0         0x0       Detected Parity Error
----------------------------------------------------------------------------------------------------
===

 *
 *                 PCIE_CFG008 = Ninth 32-bits of PCIE type 1 config space (Memory Base and Memory Limit Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG008 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   NS              RO       NS          NS        Reserved
 <15:4>  MB_ADDR         R/W      0x00        0x0       Memory Base Address
 <19:16> NS              RO       NS          NS        Reserved
 <31:20> ML_ADDR         R/W      0x00        0x0       Memory Limit Address
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG009 = Tenth 32-bits of PCIE type 1 config space (Prefetchable Memory Base and Limit Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG009 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     MEM64A          R/W      0x1         0x1       64-Bit Memory Addressing
                                                         o 0 = 32-bit memory addressing
                                                         o 1 = 64-bit memory addressing
                                                         This bit is writable through PEM(0..1)_CFG_WR.
                                                         When the application
                                                         writes to this bit through PEM(0..1)_CFG_WR,
                                                         the same value is written
                                                         to bit 16 of this register.
 <3:1>   NS              RO       NS          NS        Reserved
 <15:4>  LMEM_BASE       R/W      0x000       0x0       Upper 12 bits of 32-bit Prefetchable Memory Start Address
 <16>    MEM64B          RO       0x1         0x1       64-Bit Memory Addressing
                                                         o 0 = 32-bit memory addressing
                                                         o 1 = 64-bit memory addressing
 <19:17> NS              RO       NS          NS        Reserved
 <31:20> LMEM_LIMIT      R/W      0x000       0x0       Upper 12 bits of 32-bit Prefetchable Memory End Address
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG010 = Eleventh 32-bits of PCIE type 1 config space (Prefetchable Base Upper 32 Bits Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG010 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  UMEM_BASE       R/W      0x00000000  0x0       Upper 32 Bits of Base Address of Prefetchable Memory Space
                                                         Used only when 64-bit prefetchable memory addressing is
                                                         enabled.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG011 = Twelfth 32-bits of PCIE type 1 config space (Prefetchable Limit Upper 32 Bits Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG011 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  UMEM_LIMIT      R/W      0x00000000  0x0       Upper 32 Bits of Limit Address of Prefetchable Memory Space
                                                         Used only when 64-bit prefetchable memory addressing is
                                                         enabled.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG012 = Thirteenth 32-bits of PCIE type 1 config space (IO Base and Limit Upper 16 Bits Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG012 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  UIO_BASE        R/W      0x0000      0x0       Upper 16 Bits of I/O Base (if 32-bit I/O decoding is supported
                                                         for devices on the secondary side)
 <31:16> UIO_LIMIT       R/W      0x0000      0x0       Upper 16 Bits of I/O Limit (if 32-bit I/O decoding is supported
                                                         for devices on the secondary side)
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG013 = Fourteenth 32-bits of PCIE type 1 config space (Capability Pointer Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG013 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   CP              R/W      0x40        0x40      First Capability Pointer.
                                                         Points to Power Management Capability structure by
                                                         default, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <31:8>  NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG014 = Fifteenth 32-bits of PCIE type 1 config space (Expansion ROM Base Address Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG014 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  NS              RAZ      NS          NS        Unused
----------------------------------------------------------------------------------------------------
===



 *
 *                  PCIE_CFG015 = Sixteenth 32-bits of PCIE type 1 config space (Interrupt Line Register/Interrupt Pin/Bridge Control Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG015 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   IL              R/W      0xFF        0xFF      Interrupt Line
 <15:8>  INTA            R/W      0x01        0x01      Interrupt Pin
                                                         Identifies the legacy interrupt Message that the device
                                                         (or device function) uses.
                                                         The Interrupt Pin register is writable through PEM(0..1)_CFG_WR.
                                                         In a single-function configuration, only INTA is used.
                                                         Therefore, the application must not change this field.
 <16>    PERE            R/W      0x0         0x0       Parity Error Response Enable
 <17>    SEE             R/W      0x0         0x0       SERR Enable
 <18>    ISAE            R/W      0x0         0x0       ISA Enable
 <19>    VGAE            R/W      0x0         0x0       VGA Enable
 <20>    VGA16D          R/W      0x0         0x0       VGA 16-Bit Decode
 <21>    MAM             RO       0x0         0x0       Master Abort Mode
                                                         Not applicable to PCI Express, hardwired to 0.
 <22>    SBRST           R/W      0x0         0x0       Secondary Bus Reset
                                                         Hot reset. Causes TS1s with the hot reset bit to be sent to
                                                         the link partner. When set, SW should wait 2ms before
                                                         clearing. The link partner normally responds by sending TS1s
                                                         with the hot reset bit set, which will cause a link
                                                         down event - refer to "PCIe Link-Down Reset in RC Mode"
                                                         section.
 <23>    FBBE            RO       0x0         0x0       Fast Back-to-Back Transactions Enable
                                                         Not applicable to PCI Express, hardwired to 0.
 <24>    PDT             RO       0x0         0x0       Primary Discard Timer
                                                         Not applicable to PCI Express, hardwired to 0.
 <25>    SDT             RO       0x0         0x0       Secondary Discard Timer
                                                         Not applicable to PCI Express, hardwired to 0.
 <26>    DTS             RO       0x0         0x0       Discard Timer Status
                                                         Not applicable to PCI Express, hardwired to 0.
 <27>    DTSEES          RO       0x0         0x0       Discard Timer SERR Enable Status
                                                         Not applicable to PCI Express, hardwired to 0.
 <31:28> NS              RO       NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                 PCIE_CFG016 = Seventeenth 32-bits of PCIE type 1 config space
 *                  (Power Management Capability ID/
 *                  Power Management Next Item Pointer/
 *                  Power Management Capabilities Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG016 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   PMCID           RO       0x01        0x01      Power Management Capability ID
 <15:8>  NCP             R/W      0x50        0x50      Next Capability Pointer
                                                         Points to the MSI capabilities by default, writable
                                                         through PEM(0..1)_CFG_WR.
 <18:16> PMSV            R/W      0x03        0x03      Power Management Specification Version, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <19>    PME_Clock       RO       0x0         0x0       PME Clock, hardwired to 0
 <20>    NS              RAZ      NS          NS        Reserved
 <21>    DSI             R/W      0x0         0x0       Device Specific Initialization (DSI), writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <24:22> AUXC            R/W      0x0         0x0       AUX Current, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <25>    D1S             R/W      0x0         0x0       D1 Support, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <26>    D2S             R/W      0x0         0x0       D2 Support, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <31:27> PMES            R/W      0x0         0x0       PME_Support
                                                         A value of 0 for any bit indicates that the
                                                         device (or function) is not capable of generating PME Messages
                                                         while in that power state:
                                                         o Bit 11: If set, PME Messages can be generated from D0
                                                         o Bit 12: If set, PME Messages can be generated from D1
                                                         o Bit 13: If set, PME Messages can be generated from D2
                                                         o Bit 14: If set, PME Messages can be generated from D3hot
                                                         o Bit 15: If set, PME Messages can be generated from D3cold
                                                         The PME_Support field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG017 = Eighteenth 32-bits of PCIE type 1 config space (Power Management Control and Status Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG017 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   PS              R/W      0x0         0x0       Power State
                                                         Controls the device power state:
                                                           o 00b: D0
                                                           o 01b: D1
                                                           o 10b: D2
                                                           o 11b: D3
                                                         The written value is ignored if the specific state is
                                                         not supported.
 <2>     NS              RAZ      NS          NS        Reserved
 <3>     NSR             R/W      0x0         0x0       No Soft Reset, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <7:4>   NS              RAZ      NS          NS        Reserved
 <8>     PMEENS          R/W      0x0         0x0       PME Enable
                                                         A value of 1 indicates that the device is enabled to
                                                         generate PME.
 <12:9>  PMDS            RO       0x0         0x0       Data Select (not supported)
 <14:13> PMEDSIA         RO       0x0         0x0       Data Scale (not supported)
 <15>    PMESS           R/W1C    0x0         0x0       PME Status
                                                        Indicates if a previously enabled PME event occurred or not.
 <21:16> NS              RAZ      NS          NS        Reserved
 <22>    BD3H            RO       0x0         0x0       B2/B3 Support, hardwired to 0
 <23>    BPCCEE          RO       0x0         0x0       Bus Power/Clock Control Enable, hardwired to 0
 <31:24> PMDIA           RO       0x00        0x0       Data register for additional information (not supported)
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG020 = Twenty-first 32-bits of PCIE type 1 config space
 *                  (MSI Capability ID/
 *                   MSI Next Item Pointer/
 *                   MSI Control Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG020 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   MSICID          RO       0x05        0x05      MSI Capability ID
 <15:8>  NCP             R/W      0x70        0x70      Next Capability Pointer
                                                         Points to PCI Express Capabilities by default,
                                                         writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <16>    MSIEN           R/W      0x0         0x0       MSI Enabled
                                                         When set, INTx must be disabled.
                                                         This bit must never be set, as internal-MSI is not supported in
                                                         RC mode. (Note that this has no effect on external MSI, which
                                                         will be commonly used in RC mode.)
 <19:17> MMC             R/W      0x0         0x0       Multiple Message Capable, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <22:20> MME             R/W      0x0         0x0       Multiple Message Enabled
                                                         Indicates that multiple Message mode is enabled by system
                                                         software. The number of Messages enabled must be less than
                                                         or equal to the Multiple Message Capable value.
 <23>    M64             R/W      0x1         0x1       64-bit Address Capable, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <31:24> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG021 = Twenty-second 32-bits of PCIE type 1 config space (MSI Lower 32 Bits Address Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG021 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   NS              RAZ      NS          NS        Reserved
 <31:2>  LMSI            R/W      0x00000000  0x0       Lower 32-bit Address
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG022 = Twenty-third 32-bits of PCIE type 1 config space (MSI Upper 32 bits Address Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG022 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  UMSI            R/W      0x00000000  0x0       Upper 32-bit Address

----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG023 = Twenty-fourth 32-bits of PCIE type 1 config space (MSI Data Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG023 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  MSIMD           R/W      0x0000      0x0       MSI Data
                                                         Pattern assigned by system software, bits [4:0] are Or-ed with
                                                         MSI_VECTOR to generate 32 MSI Messages per function.
 <31:16> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG028 = Twenty-ninth 32-bits of PCIE type 1 config space
 *                  (PCI Express Capabilities List Register/
 *                   PCI Express Capabilities Register)
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG028 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   PCIEID          RO       0x10        0x10      PCIE Capability ID
 <15:8>  NCP             R/W      0x00        0x0       Next Capability Pointer
                                                         writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <19:16> PCIECV          RO       0x2         0x2       PCI Express Capability Version
 <23:20> DPT             RO       0x4         0x4       Device Port Type
 <24>    SI              R/W      0x0         0x0       Slot Implemented
                                                         This bit is writable through PEM(0..1)_CFG_WR.
                                                         However, it must 0 for an
                                                         Endpoint device. Therefore, the application must not write a
                                                         1 to this bit.
 <29:25> IMN             R/W      0x0         0x0       Interrupt Message Number
                                                        Updated by hardware, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:30> NS              RAZ      NS          NS        RsvdP
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG029 = Thirtieth 32-bits of PCIE type 1 config space (Device Capabilities Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG029 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <2:0>   MPSS            R/W      0x1         0x1       Max_Payload_Size Supported, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <4:3>   PFS             R/W      0x0         0x0       Phantom Function Supported
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, Phantom
                                                         Function is not supported. Therefore, the application must not
                                                         write any value other than 0x0 to this field.
 <5>     ETFS            R/W      0x0         0x0       Extended Tag Field Supported
                                                         This bit is writable through PEM(0..1)_CFG_WR.
                                                         However, the application
                                                         must not write a 1 to this bit.
 <8:6>   EL0AL           R/W      0x0         0x0       Endpoint L0s Acceptable Latency, writable through PEM(0..1)_CFG_WR
                                                         Must be 0x0 for non-endpoint devices.
 <11:9>  EL1AL           R/W      0x0         0x0       Endpoint L1 Acceptable Latency, writable through PEM(0..1)_CFG_WR
                                                         Must be 0x0 for non-endpoint devices.
 <12>    NS              RAZ      NS          NS        Undefined
 <13>    NS              RAZ      NS          NS        Undefined
 <14>    NS              RAZ      0x0         0x0       Undefined
 <15>    RBER            R/W      0x1         0x1       Role-Based Error Reporting, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <17:16> NS              RAZ      NS          NS        Reserved
 <25:18> CSPLV           RO       0x00        0x0       Captured Slot Power Limit Value
                                                         Not applicable for RC port, upstream port only.
 <27:26> CSPLS           RO       0x0         0x0       Captured Slot Power Limit Scale
                                                         Not applicable for RC port, upstream port only.
 <31:28> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG030 = Thirty-first 32-bits of PCIE type 1 config space
 *                  (Device Control Register/Device Status Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG030 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     CE_EN           R/W      0x0         0x0       Correctable Error Reporting Enable
 <1>     NFE_EN          R/W      0x0         0x0       Non-Fatal Error Reporting Enable
 <2>     FE_EN           R/W      0x0         0x0       Fatal Error Reporting Enable
 <3>     UR_EN           R/W      0x0         0x0       Unsupported Request Reporting Enable
 <4>     RO_EN           R/W      0x1         0x1       Enable Relaxed Ordering
 <7:5>   MPS             R/W      0x0         0x0       Max Payload Size
                                                         Legal values:
                                                          0  = 128B
                                                          1  = 256B
                                                         Larger sizes not supported.
                                                        Note: Both PCI Express Ports must be set to the same value
                                                              for Peer-to-Peer to function properly.
                                                        Note: DPI_SLI_PRT#_CFG[MPS] must also be set to the same
                                                              value for proper functionality.
 <8>     ETF_EN          R/W      0x0         0x0       Extended Tag Field Enable
                                                          This bit should never be set - OCTEON requests never use
                                                          extended tags.
 <9>     PF_EN           R/W      0x0         0x0       Phantom Function Enable
                                                          This bit should never be set - OCTEON requests never use
                                                          phantom functions.
 <10>    AP_EN           R/W      0x0         0x0       AUX Power PM Enable
 <11>    NS_EN           R/W      0x1         0x1       Enable No Snoop
 <14:12> MRRS            R/W      0x2         0x2       Max Read Request Size
                                                         0 = 128B
                                                         1 = 256B
                                                         2 = 512B
                                                         3 = 1024B
                                                         4 = 2048B
                                                         5 = 4096B
                                                        Note: SLI_S2M_PORT#_CTL[MRRS] and DPI_SLI_PRT#_CFG[MRRS] and
							      also must be set properly.
                                                              SLI_S2M_PORT#_CTL[MRRS] and DPI_SLI_PRT#_CFG[MRRS] must
                                                              not exceed the desired max read request size.
 <15>    NS              RAZ      NS          NS        Reserved
 <16>    CE_D            R/W1C    0x0         0x0       Correctable Error Detected
                                                         Errors are logged in this register regardless of whether
                                                         error reporting is enabled in the Device Control register.
							CE_D is set if we receive any of the errors in PCIE_CFG068
							for example a Replay Timer Timeout.  Also, it can be set if
							we get any of the errors in PCIE_CFG066 that has a severity
							set to Nonfatal and meets the Advisory Nonfatal criteria,
							which most ECRC errors should be.
 <17>    NFE_D           R/W1C    0x0         0x0       Non-Fatal Error detected
                                                        Errors are logged in this register regardless of whether
                                                         error reporting is enabled in the Device Control register.
							NFE_D is set if we receive any of the errors in PCIE_CFG066
							that has a severity set to Nonfatal and does NOT meet Advisory
							Nonfatal criteria , which
							most poisoned TLP's should be.
 <18>    FE_D            R/W1C    0x0         0x0       Fatal Error Detected
                                                        Errors are logged in this register regardless of whether
                                                         error reporting is enabled in the Device Control register.
							FE_D is set if receive any of the errors in PCIE_CFG066 that
							has a severity set to Fatal.  Malformed TLP's generally fit
							into this category.
 <19>    UR_D            R/W1C    0x0         0x0       Unsupported Request Detected
                                                        Errors are logged in this register regardless of whether
                                                         error reporting is enabled in the Device Control register.
							UR_D occurs when we receive something we don't support.
							Unsupported requests are Nonfatal errors, so UR_D should
							cause NFE_D.  Receiving a  vendor defined message should
							cause an unsupported request.
 <20>    AP_D            RO       0x0         0x0       Aux Power Detected
                                                         Set to 1 if Aux power detected.
 <21>    TP              RO       0x0         0x0       Transaction Pending
                                                         Set to 1 when Non-Posted Requests are not yet completed
                                                         and clear when they are completed.
 <31:22> NS              RAZ      NS       NS           Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG031 = Thirty-second 32-bits of PCIE type 1 config space
 *                  (Link Capabilities Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG031 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   MLS             R/W      NS          NS        Maximum Link Speed
                                                         The reset value of this field is controled by a value sent from
                                                         the input pin qlm#_cfg[1].
                                                         qlm#_cfg[1]   RST_VALUE   NOTE
							 1             0001b       2.5 GHz supported
                                                         0             0010b       5.0 GHz and 2.5 GHz supported
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <9:4>   MLW             R/W      0x8         0x8       Maximum Link Width
                                                         The default value is the value you specify during hardware
                                                         configuration (x1, x4, x8, or x16), writable through PEM(0..1)_CFG_WR.
 <11:10> ASLPMS          R/W      0x3         0x3       Active State Link PM Support
                                                         The default value is the value you specify during hardware
                                                         configuration, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <14:12> L0EL            R/W      0x6         0x6       L0s Exit Latency
                                                         The default value is the value you specify during hardware
                                                         configuration, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <17:15> L1EL            R/W      0x6         0x6       L1 Exit Latency
                                                         The default value is the value you specify during hardware
                                                         configuration, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <18>    CPM             R/W      0x0         0x0       Clock Power Management
                                                         The default value is the value you specify during hardware
                                                         configuration, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <19>    SDERC           RO       0x0         0x0       Surprise Down Error Reporting Capable
                                                         Not supported, hardwired to 0x0.
 <20>    DLLARC          RO       0x1         0x1       Data Link Layer Active Reporting Capable
                                                         Set to 1 for Root Complex devices and 0 for Endpoint devices.
 <21>    LBNC            RO       0x1         0x1       Link Bandwidth Notification Capability
 <23:22> NS              RAZ      NS          NS        Reserved
 <31:24> PNUM            R/W      0x0         0x0       Port Number
							 writable through PEM(0..1)_CFG_WR, however the application
                                                         must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG032 = Thirty-third 32-bits of PCIE type 1 config space
 *                  (Link Control Register/Link Status Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG032 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   ASLPC           R/W      0x0         0x0       Active State Link PM Control
 <2>     NS              RAZ      NS          NS        Reserved
 <3>     RCB             R/W      0x1         0x1       Read Completion Boundary (RCB), writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field
							 because an RCB of 64 bytes is not supported.
 <4>     LD              R/W      0x0         0x0       Link Disable
 <5>     RL              R/W      0x0         0x0       Retrain Link
 <6>     CCC             R/W      0x0         0x0       Common Clock Configuration
 <7>     ES              R/W      0x0         0x0       Extended Synch
 <8>     ECPM            R/W      0x0         0x0       Enable Clock Power Management
                                                         Hardwired to 0 if Clock Power Management is disabled in
                                                         the Link Capabilities register.
 <9>     HAWD            R/W      0x0         0x0       Hardware Autonomous Width Disable
                                                         (Not Supported)
 <10>    LBM_INT_ENB     R/W      0x0         0x0       Link Bandwidth Management Interrupt Enable
                                                         This interrupt is for Gen2 and is not supported. This bit should
                                                         always be written to zero.
 <11>    LAB_INT_ENB     R/W      0x0         0x0       Link Autonomous Bandwidth Interrupt Enable
                                                         This interrupt is for Gen2 and is not supported. This bit should
                                                         always be written to zero.
 <15:12> NS              RAZ      NS          NS        Reserved
 <19:16> LS              RO       NS          NS        Link Speed
                                                         0001 == The negotiated Link speed: 2.5 Gbps
                                                         0010 == The negotiated Link speed: 5.0 Gbps
                                                         0100 == The negotiated Link speed: 8.0 Gbps (Not Supported)
 <25:20> NLW             RO       0x0         0x0       Negotiated Link Width
                                                         Set automatically by hardware after Link initialization.
 <26>    NS              RAZ      NS          NS        Undefined
 <27>    LT              RO       0x0         0x0       Link Training
 <28>    SCC             R/W      0x1         0x0       Slot Clock Configuration
                                                         Indicates that the component uses the same physical reference
                                                         clock that the platform provides on the connector. The default
                                                         value is the value you select during hardware configuration,
                                                         writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <29>    DLLA            RO       0x0         0x1       Data Link Layer Active
 <30>    LBM             R/W1C    0x0         0x0       Link Bandwidth Management Status
                                                         This bit is set to indicate either of the following has
                                                         occurred without the Port transitioning through DL_DOWN status
                                                         o A link retraining has completed following a write of 1b to
                                                           the Retrain Link bit
                                                         o Hardware has changed the Link speed or width to attempt to
                                                           correct unreliable Link operation, either through a LTSSM
                                                           timeout of higher level process.  This bit must be set if
                                                           the Physical Layer reports a speed or width change was
                                                           inititiated by the Downstream component tha was not
                                                           indicated as an autonomous change
 <31>    LAB             R/W1C    0x0         0x0       Link Autonomous Bandwidth Status
                                                         this bit is set to indicate that hardware has autonomously
                                                         changed Link speed or width, without the Port transitioning
                                                         through DL_Down status, for reasons other than to attempt
                                                         to correct unreliable Link operation.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG033 = Thirty-fourth 32-bits of PCIE type 1 config space
 *                  (Slot Capabilities Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG033 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ABP             R/W      0x0         0x0       Attention Button Present, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <1>     PCP             R/W      0x0         0x0       Power Controller Present, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <2>     MRLSP           R/W      0x0         0x0       MRL Sensor Present, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <3>     AIP             R/W      0x0         0x0       Attention Indicator Present, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <4>     PIP             R/W      0x0         0x0       Power Indicator Present, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <5>     HP_S            R/W      0x0         0x0       Hot-Plug Surprise, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <6>     HP_C            R/W      0x0         0x0       Hot-Plug Capable, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <14:7>  SP_LV           R/W      0x0         0x0       Slot Power Limit Value, writable through PEM(0..1)_CFG_WR.
 <16:15> SP_LS           R/W      0x0         0x0       Slot Power Limit Scale, writable through PEM(0..1)_CFG_WR.
 <17>    EMIP            R/W      0x0         0x0       Electromechanical Interlock Present, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <18>    NCCS            R/W      0x0         0x0       No Command Complete Support, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <31:19> PS_NUM          R/W      0x0000      0x0       Physical Slot Number, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG034 = Thirty-fifth 32-bits of PCIE type 1 config space
 *                  (Slot Control Register/Slot Status Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG034 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ABP_EN          R/W      0x0         0x0       Attention Button Pressed Enable
 <1>     PF_EN           R/W      0x0         0x0       Power Fault Detected Enable
 <2>     MRLS_EN         R/W      0x0         0x0       MRL Sensor Changed Enable
 <3>     PD_EN           R/W      0x0         0x0       Presence Detect Changed Enable
 <4>     CCINT_EN        R/W      0x0         0x0       Command Completed Interrupt Enable
 <5>     HPINT_EN        R/W      0x0         0x0       Hot-Plug Interrupt Enable
 <7:6>   AIC             R/W      0x3         0x3       Attention Indicator Control
 <9:8>   PIC             R/W      0x3         0x3       Power Indicator Control
 <10>    PCC             R/W      0x0         0x0       Power Controller Control
 <11>    EMIC            R/W      0x0         0x0       Electromechanical Interlock Control
 <12>    DLLS_EN         R/W      0x0         0x0       Data Link Layer State Changed Enable
 <15:13> NS              RAZ      NS          NS        Reserved
 <16>    ABP_D           R/W1C    0x0         0x0       Attention Button Pressed
 <17>    PF_D            R/W1C    0x0         0x0       Power Fault Detected
 <18>    MRLS_C          R/W1C    0x0         0x0       MRL Sensor Changed
 <19>    PD_C            R/W1C    0x0         0x0       Presence Detect Changed
 <20>    CCINT_D         R/W1C    0x0         0x0       Command Completed
 <21>    MRLSS           RO       0x0         0x0       MRL Sensor State
 <22>    PDS             RO       0x1         0x1       Presence Detect State
 <23>    EMIS            RO       0x0         0x0       Electromechanical Interlock Status
 <24>    DLLS_C          R/W1C    0x0         0x0       Data Link Layer State Changed
 <31:25> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG035 = Thirty-sixth 32-bits of PCIE type 1 config space
 *                  (Root Control Register/Root Capabilities Register)
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG035 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     SECEE           R/W      0x0         0x0       System Error on Correctable Error Enable
 <1>     SENFEE          R/W      0x0         0x0       System Error on Non-fatal Error Enable
 <2>     SEFEE           R/W      0x0         0x0       System Error on Fatal Error Enable
 <3>     PMEIE           R/W      0x0         0x0       PME Interrupt Enable
 <4>     CRSSVE          RO       0x0         0x0       CRS Software Visibility Enable
                                                         Not supported, hardwired to 0x0.
 <15:5>  NS              RAZ      NS          NS        Reserved
 <16>    CRSSV           RO       0x0         0x0       CRS Software Visibility
                                                         Not supported, hardwired to 0x0.
 <31:17> NS              RAZ      NS          NS        Reserved

----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG036 = Thirty-seventh 32-bits of PCIE type 1 config space
 *                  (Root Status Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG036 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  PME_RID         RO       0x0         0x0       PME Requester ID
 <16>    PME_STAT        R/W1C    0x0         0x0       PME Status
 <17>    PME_PEND        RO       0x0         0x0       PME Pending
 <31:18> NS              RAZ      0x0         0x0       Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG037 = Thirty-eighth 32-bits of PCIE type 1 config space
 *                  (Device Capabilities 2 Register)
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG037 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   CTRS            RO       0x0         0x0       Completion Timeout Ranges Supported
                                                         Value of 0 indicates that Completion Timeout Programming
                                                         is not supported
							 Completion timeout is 16.7ms.
 <4>     CTDS            RO       0x1         0x1       Completion Timeout Disable Supported
 <5>     ARI             RO       0x0         0x0       Alternate Routing ID Forwarding Supported
							 (Not Supported)
 <6>     ATOM_OPS        RO       0x0         0x0       AtomicOp Routing Supported
							 (Not Supported)
 <7>     ATOM32S         RO       0x0         0x0       32-bit AtomicOp Supported
							 (Not Supported)
 <8>     ATOM64S         RO       0x0         0x0       64-bit AtomicOp Supported
							 (Not Supported)
 <9>     ATOM128S        RO       0x0         0x0       128-bit AtomicOp Supported
							 (Not Supported)
 <10>    NOROPRPR        RO       0x0         0x0       No RO-enabled PR-PR Passing
							 (Not Supported)
 <11>    NS              RAZ      NS          NS        Reserved
 <13:12> TPH             RO       0x0         0x0       TPH Completer Supported
							 (Not Supported)
 <31:14> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG038 = Thirty-ninth 32-bits of PCIE type 1 config space
 *                  (Device Control 2 Register)
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG038 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   CTV             RO       0x0         0x0       Completion Timeout Value
                                                         Completion Timeout Programming is not supported
							 Completion timeout is 16.7ms.
 <4>     CTD             R/W      0x0         0x0       Completion Timeout Disable
 <5>     ARI             RO       0x0         0x0       Alternate Routing ID Forwarding Supported
							 (Not Supported)
 <6>     ATOM_OP         RO       0x0         0x0       AtomicOp Requester Enable
							 (Not Supported)
 <7>     ATOM_OP_EB      RO       0x0         0x0       AtomicOp Egress Blocking
							 (Not Supported)m
 <8>     ID0_RQ          RO       0x0         0x0       ID Based Ordering Request Enable
							 (Not Supported)
 <9>     ID0_CP          RO       0x0         0x0       ID Based Ordering Completion Enable
							 (Not Supported)
 <31:10> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG039 = Fourtieth 32-bits of PCIE type 1 config space
 *                  (Link Capabilities 2 Register)
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG039 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NS              RAZ      NS          NS        Reserved
 <7:1>   SLSV            RO/WRSL  NS          NS        Supported Link Speeds Vector
                                                         Indicates the supported Link speeds of the associated Port.
                                                         For each bit, a value of 1b indicates that the cooresponding
                                                         Link speed is supported; otherwise, the Link speed is not
                                                         supported.
                                                         Bit definitions are:
                                                         Bit 1 2.5 GT/s
                                                         Bit 2 5.0 GT/s
                                                         Bit 3 8.0 GT/s (Not Supported)
                                                         Bits 7:4 reserved

                                                         qlm#_cfg[1]   RST_VALUE   NOTE
							 1             0001b       2.5 GHz supported
                                                         0             0011b       5.0 GHz and 2.5 GHz supported
 <8>     CLS             RO       0x0         0x0       Crosslink Supported
 <31:9>  NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG040 = Fourty-first 32-bits of PCIE type 1 config space
 *                  (Link Control 2 Register/Link Status 2 Register)
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG040 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   TLS             R/W      NS          NS        Target Link Speed
                                                         For Downstream ports, this field sets an upper limit on link
                                                         operational speed by restricting the values advertised by
                                                         the upstream component in its training sequences:
                                                           0001: 2.5Gb/s Target Link Speed
                                                           0010: 5Gb/s Target Link Speed
                                                           0100: 8Gb/s Target Link Speed (Not Supported)
                                                         All other encodings are reserved.
                                                         If a value is written to this field that does not correspond to
                                                         a speed included in the Supported Link Speeds field, the
                                                         result is undefined.
                                                         For both Upstream and Downstream ports, this field is
                                                         used to set the target compliance mode speed when
                                                         software is using the Enter Compliance bit to force a link
                                                         into compliance mode.

                                                         The reset value of this field is controled by a value sent from
                                                         the input pin qlm#_cfg[1].
                                                         qlm#_cfg[1]   RST_VALUE   NOTE
							 1             0001b       2.5 GHz supported
                                                         0             0010b       5.0 GHz and 2.5 GHz supported
 <4>     EC              R/W      0x0         0x0       Enter Compliance
                                                         Software is permitted to force a link to enter Compliance
                                                         mode at the speed indicated in the Target Link Speed
                                                         field by setting this bit to 1b in both components on a link
                                                         and then initiating a hot reset on the link.
 <5>     HASD            R/W       0x0         0x0      Hardware Autonomous Speed Disable
                                                         When asserted, the
                                                         application must disable hardware from changing the Link
                                                         speed for device-specific reasons other than attempting to
                                                         correct unreliable Link operation by reducing Link speed.
                                                         Initial transition to the highest supported common link
                                                         speed is not blocked by this signal.
 <6>     SDE             R/W      0x0         0x0       Selectable De-emphasis
                                                         When the Link is operating at 5.0 GT/s speed, selects the
                                                         level of de-emphasis:
                                                          1: -3.5 dB
                                                          0: -6 dB
                                                         When the Link is operating at 2.5 GT/s speed, the setting
                                                         of this bit has no effect.
 <9:7>   TM              R/W      0x000       0x000     Transmit Margin
                                                         This field controls the value of the non-de-emphasized
                                                         voltage level at the Transmitter pins:
                                                          000: 800-1200 mV for full swing 400-600 mV for half-swing
                                                          001-010: values must be monotonic with a non-zero slope
                                                          011: 200-400 mV for full-swing and 100-200 mV for halfswing
                                                          100-111: reserved
                                                         This field is reset to 000b on entry to the LTSSM Polling.
                                                         Compliance substate.
                                                         When operating in 5.0 GT/s mode with full swing, the
                                                         de-emphasis ratio must be maintained within +/- 1 dB
                                                         from the specification-defined operational value
                                                         either -3.5 or -6 dB).
 <10>    EMC             R/W      0x0         0x0       Enter Modified Compliance
                                                         When this bit is set to 1b, the device transmits a modified
                                                         compliance pattern if the LTSSM enters Polling.
                                                         Compliance state.
 <11>    CSOS            R/W      0x0         0x0       Compliance SOS
                                                         When set to 1b, the LTSSM is required to send SKP
                                                         Ordered Sets periodically in between the (modified)
                                                         compliance patterns.
                                                         Note: When the Link is operating at 2.5 GT/s, the setting
                                                         of this bit has no effect.
 <12>    CDE             R/W      0x0         0x0       Compliance De-emphasis
                                                         This bit sets the de-emphasis level in Polling. Compliance
                                                         state if the entry occurred due to the Tx Compliance
                                                         Receive bit being 1b. Encodings:
                                                          1b: -3.5 dB
                                                          0b: -6 dB
                                                         Note: When the Link is operating at 2.5 GT/s, the setting
                                                         of this bit has no effect.
 <15:13> NS              RAZ      NS          NS        Reserved
 <16>    CDL             RO       0x0         0x0       Current De-emphasis Level
                                                         When the Link is operating at 5 GT/s speed, this bit
                                                         reflects the level of de-emphasis. Encodings:
                                                          1b: -3.5 dB
                                                          0b: -6 dB
                                                         Note: The value in this bit is undefined when the Link is
                                                         operating at 2.5 GT/s speed
 <31:17> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG041 = Fourty-second 32-bits of PCIE type 1 config space
 *                  (Slot Capabilities 2 Register)
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG041 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG042 = Fourty-third 32-bits of PCIE type 1 config space
 *                  (Slot Control 2 Register/Slot Status 2 Register)
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG042 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG064 = Sixty-fifth 32-bits of PCIE type 1 config space
 *                  (PCI Express Extended Capability Header)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG064 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  PCIEEC          RO       0x1         0x1       PCIE Express Extended Capability
 <19:16> CV              RO       0x2         0x2       Capability Version
 <31:20> NCO             RO       0x000       0x0       Next Capability Offset
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG065 = Sixty-sixth 32-bits of PCIE type 1 config space
 *                  (Uncorrectable Error Status Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG065 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NS              RAZ      NS          NS        Undefined
                                                         (Was Training Error Status for PCI Express 1.0a)
 <3:1>   NS              RAZ      NS          NS        Reserved
 <4>     DLPES           R/W1C    0x0         0x0       Data Link Protocol Error Status
 <5>     SDES            RO       0x0         0x0       Surprise Down Error Status (not supported)
 <11:6>  NS              RAZ      NS          NS        Reserved
 <12>    PTLPS           R/W1C    0x0         0x0       Poisoned TLP Status
 <13>    FCPES           R/W1C    0x0         0x0       Flow Control Protocol Error Status
 <14>    CTS             R/W1C    0x0         0x0       Completion Timeout Status
 <15>    CAS             R/W1C    0x0         0x0       Completer Abort Status
 <16>    UCS             R/W1C    0x0         0x0       Unexpected Completion Status
 <17>    ROS             R/W1C    0x0         0x0       Receiver Overflow Status
 <18>    MTLPS           R/W1C    0x0         0x0       Malformed TLP Status
 <19>    ECRCES          R/W1C    0x0         0x0       ECRC Error Status
 <20>    URES            R/W1C    0x0         0x0       Unsupported Request Error Status
 <31:21> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG066 = Sixty-seventh 32-bits of PCIE type 1 config space
 *                  (Uncorrectable Error Mask Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG066 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NS              RAZ      NS          NS        Undefined
                                                         (Was Training Error Mask for PCI Express 1.0a)
 <3:1>   NS              RAZ      NS          NS        Reserved
 <4>     DLPEM           R/W      0x0         0x0       Data Link Protocol Error Mask
 <5>     SDEM            RO       0x0         0x0       Surprise Down Error Mask (not supported)
 <11:6>  NS              RAZ      NS          NS        Reserved
 <12>    PTLPM           R/W      0x0         0x0       Poisoned TLP Mask
 <13>    FCPEM           R/W      0x0         0x0       Flow Control Protocol Error Mask
 <14>    CTM             R/W      0x0         0x0       Completion Timeout Mask
 <15>    CAM             R/W      0x0         0x0       Completer Abort Mask
 <16>    UCM             R/W      0x0         0x0       Unexpected Completion Mask
 <17>    ROM             R/W      0x0         0x0       Receiver Overflow Mask
 <18>    MTLPM           R/W      0x0         0x0       Malformed TLP Mask
 <19>    ECRCEM          R/W      0x0         0x0       ECRC Error Mask
 <20>    UREM            R/W      0x0         0x0       Unsupported Request Error Mask
 <31:21> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG067 = Sixty-eighth 32-bits of PCIE type 1 config space
 *                  (Uncorrectable Error Severity Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG067 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NS              RAZ      NS          NS        Undefined
                                                         (Was Training Error Severity for PCI Express 1.0a)
 <3:1>   NS              RAZ      NS          NS        Reserved
 <4>     DLPES           R/W      0x1         0x1       Data Link Protocol Error Severity
 <5>     SDES            RO       0x1         0x1       Surprise Down Error Severity (not supported)
 <11:6>  NS              RAZ      NS          NS        Reserved
 <12>    PTLPS           R/W      0x0         0x0       Poisoned TLP Severity
 <13>    FCPES           R/W      0x1         0x1       Flow Control Protocol Error Severity
 <14>    CTS             R/W      0x0         0x0       Completion Timeout Severity
 <15>    CAS             R/W      0x0         0x0       Completer Abort Severity
 <16>    UCS             R/W      0x0         0x0       Unexpected Completion Severity
 <17>    ROS             R/W      0x1         0x1       Receiver Overflow Severity
 <18>    MTLPS           R/W      0x1         0x1       Malformed TLP Severity
 <19>    ECRCES          R/W      0x0         0x0       ECRC Error Severity
 <20>    URES            R/W      0x0         0x0       Unsupported Request Error Severity
 <31:21> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG068 = Sixty-ninth 32-bits of PCIE type 1 config space
 *                  (Correctable Error Status Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG068 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     RES             R/W1C    0x0         0x0       Receiver Error Status
 <5:1>   NS              RAZ      NS          NS        Reserved
 <6>     BTLPS           R/W1C    0x0         0x0       Bad TLP Status
 <7>     BDLLPS          R/W1C    0x0         0x0       Bad DLLP Status
 <8>     RNRS            R/W1C    0x0         0x0       REPLAY_NUM Rollover Status
 <11:9>  NS              RAZ      NS          NS        Reserved
 <12>    RTTS            R/W1C    0x0         0x0       Replay Timer Timeout Status
 <13>    ANFES           R/W1C    0x0         0x0       Advisory Non-Fatal Error Status
 <31:14> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG069 = Seventieth 32-bits of PCIE type 1 config space
 *                  (Correctable Error Mask Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG069 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     REM             R/W      0x0         0x0       Receiver Error Mask
 <5:1>   NS              RAZ      NS          NS        Reserved
 <6>     BTLPM           R/W      0x0         0x0       Bad TLP Mask
 <7>     BDLLPM          R/W      0x0         0x0       Bad DLLP Mask
 <8>     RNRM            R/W      0x0         0x0       REPLAY_NUM Rollover Mask
 <11:9>  NS              RAZ      NS          NS        Reserved
 <12>    RTTM            R/W      0x0         0x0       Replay Timer Timeout Mask
 <13>    ANFEM           R/W      0x1         0x1       Advisory Non-Fatal Error Mask
 <31:14> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG070 = Seventy-first 32-bits of PCIE type 1 config space
 *                  (Advanced Capabilities and Control Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG070 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <4:0>   FEP             RO       0x00        0x0       First Error Pointer
 <5>     GC              RO       0x1         0x1       ECRC Generation Capability
 <6>     GE              R/W      0x0         0x0       ECRC Generation Enable
 <7>     CC              RO       0x1         0x1       ECRC Check Capable
 <8>     CE              R/W      0x0         0x0       ECRC Check Enable
 <31:9>  NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG071 = Seventy-second 32-bits of PCIE type 1 config space
 *                  (Header Log Register 1)
 *
 * The Header Log registers collect the header for the TLP corresponding to a detected error.
 *

     ==============================================================
     PCIERC(0..1)_CFG071 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DWORD1          RO       0x0         0x0       Header Log Register (first DWORD)
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG072 = Seventy-third 32-bits of PCIE type 1 config space
 *                  (Header Log Register 2)
 *
 * The Header Log registers collect the header for the TLP corresponding to a detected error.
 *

     ==============================================================
     PCIERC(0..1)_CFG072 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DWORD2          RO       0x0         0x0       Header Log Register (second DWORD)
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG073 = Seventy-fourth 32-bits of PCIE type 1 config space
 *                  (Header Log Register 3)
 *
 * The Header Log registers collect the header for the TLP corresponding to a detected error.
 *

     ==============================================================
     PCIERC(0..1)_CFG073 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DWORD3          RO       0x0         0x0       Header Log Register (third DWORD)
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG074 = Seventy-fifth 32-bits of PCIE type 1 config space
 *                  (Header Log Register 4)
 *
 * The Header Log registers collect the header for the TLP corresponding to a detected error.
 *

     ==============================================================
     PCIERC(0..1)_CFG074 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DWORD4          RO       0x0         0x0       Header Log Register (fourth DWORD)
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG075 = Seventy-sixth 32-bits of PCIE type 1 config space
 *                  (Root Error Command Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG075 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     CERE            R/W      0x0         0x0       Correctable Error Reporting Enable
 <1>     NFERE           R/W      0x0         0x0       Non-Fatal Error Reporting Enable
 <2>     FERE            R/W      0x0         0x0       Fatal Error Reporting Enable
 <31:3>  NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG076 = Seventy-seventh 32-bits of PCIE type 1 config space
 *                  (Root Error Status Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG076 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ECR             R/W1C    0x0         0x0       ERR_COR Received
 <1>     MULTI_ECR       R/W1C    0x0         0x0       Multiple ERR_COR Received
 <2>     EFNFR           R/W1C    0x0         0x0       ERR_FATAL/NONFATAL Received
 <3>     MULTI_EFNFR     R/W1C    0x0         0x0       Multiple ERR_FATAL/NONFATAL Received
 <4>     FUF             R/W1C    0x0         0x0       First Uncorrectable Fatal
 <5>     NFEMR           R/W1C    0x0         0x0       Non-Fatal Error Messages Received
 <6>     FEMR            R/W1C    0x0         0x0       Fatal Error Messages Received
 <26:7>  NS              RAZ      NS          NS        Reserved
 <31:27> AEIMN           R/W      0x0         0x0       Advanced Error Interrupt Message Number,
                                                         writable through PEM(0..1)_CFG_WR
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG077 = Seventy-eighth 32-bits of PCIE type 1 config space
 *                  (Error Source Identification Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG077 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  ECSI            RO       0x0         0x0       ERR_COR Source Identification
 <31:16> EFNFSI          RO       0x0         0x0       ERR_FATAL/NONFATAL Source Identification
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG448 = Four hundred forty-ninth 32-bits of PCIE type 1 config space
 *                  (Ack Latency Timer and Replay Timer Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG448 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  RTLTL           R/W      0x102F      NS        Round Trip Latency Time Limit
                                                         The Ack/Nak latency timer expires when it reaches this limit.
							 This value will be set correctly by the hardware out of reset
                                                         or when the negotiated Link-Width or Payload-Size changes. If
                                                         the user changes this value through a CSR write or by an
                                                         EEPROM load then they should refer to the PCIe Specification
                                                         for the correct value.
 <31:16> RTL             R/W      0x308D      NS        Replay Time Limit
                                                         The replay timer expires when it reaches this limit. The PCI
                                                         Express bus initiates a replay upon reception of a Nak or when
                                                         the replay timer expires.
							 This value will be set correctly by the hardware out of reset
                                                         or when the negotiated Link-Width or Payload-Size changes. If
                                                         the user changes this value through a CSR write or by an
                                                         EEPROM load then they should refer to the PCIe Specification
                                                         for the correct value.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG449 = Four hundred fiftieth 32-bits of PCIE type 1 config space
 *                  (Other Message Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG449 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  OMR             R/W      0xFFFFFFFF  NS        Other Message Register
                                                         This register can be used for either of the following purposes:
                                                         o To send a specific PCI Express Message, the application
                                                           writes the payload of the Message into this register, then
                                                           sets bit 0 of the Port Link Control Register to send the
                                                           Message.
                                                         o To store a corruption pattern for corrupting the LCRC on all
                                                           TLPs, the application places a 32-bit corruption pattern into
                                                           this register and enables this function by setting bit 25 of
                                                           the Port Link Control Register. When enabled, the transmit
                                                           LCRC result is XOR'd with this pattern before inserting
                                                           it into the packet.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG450 = Four hundred fifty-first 32-bits of PCIE type 1 config space
 *                  (Port Force Link Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG450 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   LINK_NUM        R/W      0x4         0x4       Link Number
 <14:8>  NS              RAZ      NS          NS        Reserved
 <15>    FORCE_LINK      R/W      0x0         0x0       Force Link
                                                         Forces the Link to the state specified by the Link State field.
                                                         The Force Link pulse will trigger Link re-negotiation.
                                                         * As the The Force Link is a pulse, writing a 1 to it does
                                                           trigger the forced link state event, even thought reading it
                                                           always returns a 0.
 <21:16> LINK_STATE      R/W      0x00        0x0       Link State
                                                         The Link state that the PCI Express Bus will be forced to
                                                         when bit 15 (Force Link) is set.
                                                         State encoding:
                                                         o DETECT_QUIET              00h
                                                         o DETECT_ACT                01h
                                                         o POLL_ACTIVE               02h
                                                         o POLL_COMPLIANCE           03h
                                                         o POLL_CONFIG               04h
                                                         o PRE_DETECT_QUIET          05h
                                                         o DETECT_WAIT               06h
                                                         o CFG_LINKWD_START          07h
                                                         o CFG_LINKWD_ACEPT          08h
                                                         o CFG_LANENUM_WAIT          09h
                                                         o CFG_LANENUM_ACEPT         0Ah
                                                         o CFG_COMPLETE              0Bh
                                                         o CFG_IDLE                  0Ch
                                                         o RCVRY_LOCK                0Dh
                                                         o RCVRY_SPEED               0Eh
                                                         o RCVRY_RCVRCFG             0Fh
                                                         o RCVRY_IDLE                10h
                                                         o L0                        11h
                                                         o L0S                       12h
                                                         o L123_SEND_EIDLE           13h
                                                         o L1_IDLE                   14h
                                                         o L2_IDLE                   15h
                                                         o L2_WAKE                   16h
                                                         o DISABLED_ENTRY            17h
                                                         o DISABLED_IDLE             18h
                                                         o DISABLED                  19h
                                                         o LPBK_ENTRY                1Ah
                                                         o LPBK_ACTIVE               1Bh
                                                         o LPBK_EXIT                 1Ch
                                                         o LPBK_EXIT_TIMEOUT         1Dh
                                                         o HOT_RESET_ENTRY           1Eh
                                                         o HOT_RESET                 1Fh
 <23:22> NS              RAZ      NS          NS        Reserved
 <31:24> LPEC            RO       0x7         0x7       Low Power Entrance Count
                                                         The Power Management state will wait for this many clock cycles
                                                         for the associated completion of a CfgWr to PCIE_CFG017 register
							 Power State (PS) field register to go low-power. This register
                                                         is intended for applications that do not let the PCI Express
                                                         bus handle a completion for configuration request to the
                                                         Power Management Control and Status (PCIE_CFG017) register.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG451 = Four hundred fifty-second 32-bits of PCIE type 1 config space
 *                  (Ack Frequency Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG451 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   ACK_FREQ        R/W      0x0         0x0       Ack Frequency
                                                         The number of pending Ack's specified here (up to 255) before
                                                         sending an Ack.
 <15:8>  N_FTS           R/W      0x80        0x80      N_FTS
                                                         The number of Fast Training Sequence ordered sets to be
                                                         transmitted when transitioning from L0s to L0. The maximum
                                                         number of FTS ordered-sets that a component can request is 255.
                                                         Note: The core does not support a value of zero; a value of
                                                               zero can cause the LTSSM to go into the recovery state
                                                               when exiting from L0s.
 <23:16> N_FTS_CC        R/W      0x80        0x80      N_FTS when common clock is used.
                                                         The number of Fast Training Sequence ordered sets to be
                                                         transmitted when transitioning from L0s to L0. The maximum
                                                         number of FTS ordered-sets that a component can request is 255.
                                                          Note: The core does not support a value of zero; a value of
                                                                zero can cause the LTSSM to go into the recovery state
                                                                when exiting from L0s.
 <26:24> L0EL            R/W      0x3         0x3       L0s Entrance Latency
                                                         Values correspond to:
                                                         o 000: 1 ms
                                                         o 001: 2 ms
                                                         o 010: 3 ms
                                                         o 011: 4 ms
                                                         o 100: 5 ms
                                                         o 101: 6 ms
                                                         o 110 or 111: 7 ms
 <29:27> L1EL            R/W      0x3         0x3       L1 Entrance Latency
                                                         Values correspond to:
                                                         o 000: 1 ms
                                                         o 001: 2 ms
                                                         o 010: 4 ms
                                                         o 011: 8 ms
                                                         o 100: 16 ms
                                                         o 101: 32 ms
                                                         o 110 or 111: 64 ms
 <30>    EASPML1         R/W      0x0         0x0       Enter ASPM L1 without receive in L0s
							 Allow core to enter ASPM L1 even when link partner did
							 not go to L0s (receive is not in L0s).
							 When not set, core goes to ASPM L1 only after idle period
							 during which both receive and transmit are in L0s.
 <31>    NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG452 = Four hundred fifty-third 32-bits of PCIE type 1 config space
 *                  (Port Link Control Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG452 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     OMR             R/W      0x0         0x0       Other Message Request
                                                         When software writes a `1' to this bit, the PCI Express bus
                                                         transmits the Message contained in the Other Message register.
 <1>     SD              R/W      0x0         0x0       Scramble Disable
                                                         Turns off data scrambling.
 <2>     LE              R/W      0x0         0x0       Loopback Enable
                                                         Initiate loopback mode as a master. On a 0->1 transition,
                                                         the PCIe core sends TS ordered sets with the loopback bit set
                                                         to cause the link partner to enter into loopback mode as a
                                                         slave. Normal transmission is not possible when LE=1. To exit
                                                         loopback mode, take the link through a reset sequence.
 <3>     RA              R/W      0x0         0x0       Reset Assert
                                                         Triggers a recovery and forces the LTSSM to the Hot Reset
                                                         state (downstream port only).
 <4>     NS              RAZ      NS          NS        Reserved
 <5>     DLLLE           R/W      0x1         0x1       DLL Link Enable
                                                         Enables Link initialization. If DLL Link Enable = 0, the PCI
                                                         Express bus does not transmit InitFC DLLPs and does not
                                                         establish a Link.
 <6>     NS              RAZ      NS          NS        Reserved
 <7>     FLM             R/W      0x0         0x0       Fast Link Mode
                                                         Sets all internal timers to fast mode for simulation purposes.
 <11:8>  NS              RO       0x1         0x1       Reserved
 <15:12> NS              RAZ      NS          NS        Reserved
 <21:16> LME             R/W      0xF         0xF       Link Mode Enable
                                                         o 000001: x1
                                                         o 000011: x2
                                                         o 000111: x4
                                                         o 001111: x8  (not supported)
                                                         o 011111: x16 (not supported)
                                                         o 111111: x32 (not supported)
                                                         This field indicates the MAXIMUM number of lanes supported
                                                         by the PCIe port. The value can be set less than 0x7
                                                         to limit the number of lanes the PCIe will attempt to use.
                                                         The programming of this field needs to be done by SW BEFORE
                                                         enabling the link. See also MLW.
                                                         (Note: The value of this field does NOT indicate the number
                                                          of lanes in use by the PCIe. LME sets the max number of lanes
                                                          in the PCIe core that COULD be used. As per the PCIe specs,
							  the PCIe core can negotiate a smaller link width, so all
							  of x4, x2, and x1 are supported when LME=0x7,
							  for example.)
 <31:22> NS             RAZ      NS          NS         Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG453 = Four hundred fifty-fourth 32-bits of PCIE type 1 config space
 *                  (Lane Skew Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG453 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <23:0>  ILST            R/W      0x000000    0x0       Insert Lane Skew for Transmit (not supported for x16)
                                                         Causes skew between lanes for test purposes. There are three
                                                         bits per Lane. The value is in units of one symbol time. For
                                                         example, the value 010b for a Lane forces a skew of two symbol
                                                         times for that Lane. The maximum skew value for any Lane is 5
                                                         symbol times.
 <24>    FCD             R/W      0x0         0x0       Flow Control Disable
                                                         Prevents the PCI Express bus from sending FC DLLPs.
 <25>    ACK_NAK         R/W      0x0         0x0       Ack/Nak Disable
                                                         Prevents the PCI Express bus from sending Ack and Nak DLLPs.
 <30:26> NS              RAZ      NS          NS        Reserved
 <31>    DLLD            R/W      0x0         0x0       Disable Lane-to-Lane Deskew
                                                         Disables the internal Lane-to-Lane deskew logic.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG454 = Four hundred fifty-fifth 32-bits of PCIE type 1 config space
 *                  (Symbol Number Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG454 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   NTSS            R/W      0xA         0xA       Number of TS Symbols
                                                         Sets the number of TS identifier symbols that are sent in TS1
                                                         and TS2 ordered sets.
 <7:4>   NS              RO       NS          NS        Reserved
 <10:8>  NSKPS           R/W      0x3         0x3       Number of SKP Symbols
 <13:11> NS              RAZ      NS          NS        Reserved
 <18:14> TMRT            R/W      0x8         0x8       Timer Modifier for Replay Timer
                                                         Increases the timer value for the replay timer, in increments
                                                         of 64 clock cycles.
 <23:19> TMANLT          R/W      0x0         0x0       Timer Modifier for Ack/Nak Latency Timer
                                                         Increases the timer value for the Ack/Nak latency timer, in
                                                         increments of 64 clock cycles.
 <28:24> TMFCWT          R/W      0x0         0x0       Timer Modifier for Flow Control Watchdog Timer
                                                         Increases the timer value for the Flow Control watchdog timer,
                                                         in increments of 16 clock cycles.
 <31:29> NS              RO       NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG455 = Four hundred fifty-sixth 32-bits of PCIE type 1 config space
 *                  (Symbol Timer Register/Filter Mask Register 1)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG455 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>  SKPIV           R/W      0x500       0x500     SKP Interval Value
 <14:11> NS              RAZ      NS          NS        Reserved
 <15>    DFCWT           R/W      0x0         0x0       Disable FC Watchdog Timer
 <16>    M_FUN           R/W      0x0         0x0       Mask function
 <17>    M_POIS_FILT     R/W      0x1         0x1       Mask poisoned TLP filtering
 <18>    M_BAR_MATCH     R/W      0x0         0x0       Mask BAR match filtering
 <19>    M_CFG1_FILT     R/W      0x0         0x0       Mask Type 1 Configuration Request filtering
 <20>    M_LK_FILT       R/W      0x0         0x0       Mask Locked Request filtering
 <21>    M_CPL_TAG_ERR   R/W      0x0         0x0       Mask Tag error rules for received Completions
 <22>    M_CPL_RID_ERR   R/W      0x0         0x0       Mask Requester ID mismatch error for received Completions
 <23>    M_CPL_FUN_ERR   R/W      0x0         0x0       Mask function mismatch error for received Completions
 <24>    M_CPL_TC_ERR    R/W      0x0         0x0       Mask Traffic Class mismatch error for received Completions
 <25>    M_CPL_ATTR_ERR  R/W      0x0         0x0       Mask Attributes mismatch error for received Completions
 <26>    M_CPL_LEN_ERR   R/W      0x0         0x0       Mask Length mismatch error for received Completions
 <27>    M_ECRC_FILT     R/W      0x0         0x0       Mask ECRC error filtering
 <28>    M_CPL_ECRC_FILT R/W      0x0         0x0       Mask ECRC error filtering for Completions
 <29>    MSG_CTRL        R/W      0x0         0x0       Message Control
                                                         The application must not change this field.
 <30>    M_IO_FILT       R/W      0x0         0x0       Mask filtering of received I/O Requests (RC mode only)
 <31>    M_CFG0_FILT     R/W      0x0         0x0       Mask filtering of received Configuration Requests (RC mode only)
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG456 = Four hundred fifty-seventh 32-bits of PCIE type 1 config space
 *                  (Filter Mask Register 2)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG456 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     M_VEND0_DRP     R/W      0x0         0x0       Mask Vendor MSG Type 0 dropped with UR error reporting.
 <1>     M_VEND1_DRP     R/W      0x0         0x0       Mask Vendor MSG Type 1 dropped silently
 <31:2>  NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG458 = Four hundred fifty-ninth 32-bits of PCIE type 1 config space
 *                  (Debug Register 0)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG458 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DBG_INFO_L32    RO       0x0         0x0       The value on cxpl_debug_info[31:0].
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG459 = Four hundred sixtieth 32-bits of PCIE type 1 config space
 *                  (Debug Register 1)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG459 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DBG_INFO_U32    RO       0x0         0x0       The value on cxpl_debug_info[63:32].
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG460 = Four hundred sixty-first 32-bits of PCIE type 1 config space
 *                  (Transmit Posted FC Credit Status)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG460 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  TPDFCC          RO       0x0         0x0       Transmit Posted Data FC Credits
                                                         The Posted Data credits advertised by the receiver at the other
                                                         end of the Link, updated with each UpdateFC DLLP.
 <19:12> TPHFCC          RO       0x0         0x0       Transmit Posted Header FC Credits
                                                         The Posted Header credits advertised by the receiver at the
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <31:20> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG461 = Four hundred sixty-second 32-bits of PCIE type 1 config space
 *                  (Transmit Non-Posted FC Credit Status)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG461 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  TCDFCC          RO       0x0         0x0       Transmit Non-Posted Data FC Credits
                                                         The Non-Posted Data credits advertised by the receiver at the
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <19:12> TCHFCC          RO       0x0         0x0       Transmit Non-Posted Header FC Credits
                                                         The Non-Posted Header credits advertised by the receiver at the
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <31:20> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG462 = Four hundred sixty-third 32-bits of PCIE type 1 config space
 *                  (Transmit Completion FC Credit Status )
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG462 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  TCDFCC          RO       0x0         0x0       Transmit Completion Data FC Credits
                                                         The Completion Data credits advertised by the receiver at the
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <19:12> TCHFCC          RO       0x0         0x0       Transmit Completion Header FC Credits
                                                         The Completion Header credits advertised by the receiver at the
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <31:20> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG463 = Four hundred sixty-fourth 32-bits of PCIE type 1 config space
 *                  (Queue Status)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG463 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     RTLPFCCNR       RO       0x0         0x0       Received TLP FC Credits Not Returned
                                                         Indicates that the PCI Express bus has sent a TLP but has not
                                                         yet received an UpdateFC DLLP indicating that the credits for
							 that TLP have been restored by the receiver at the other end of
                                                         the Link.
 <1>     TRBNE           RO       0x0         0x0       Transmit Retry Buffer Not Empty
                                                         Indicates that there is data in the transmit retry buffer.
 <2>     RQNE            RO       0x0         0x0       Received Queue Not Empty
                                                         Indicates there is data in one or more of the receive buffers.
 <31:3>  NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG464 = Four hundred sixty-fifth 32-bits of PCIE type 1 config space
 *                  (VC Transmit Arbitration Register 1)
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG464 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   WRR_VC0         RO       0xF         0xF       WRR Weight for VC0
 <15:8>  WRR_VC1         RO       0x0         0x0       WRR Weight for VC1
 <23:16> WRR_VC2         RO       0x0         0x0       WRR Weight for VC2
 <31:24> WRR_VC3         RO       0x0         0x0       WRR Weight for VC3
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG465 = Four hundred sixty-sixth 32-bits of config space
 *                  (VC Transmit Arbitration Register 2)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG465 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   WRR_VC4         RO       0x0         0x0       WRR Weight for VC4
 <15:8>  WRR_VC5         RO       0x0         0x0       WRR Weight for VC5
 <23:16> WRR_VC6         RO       0x0         0x0       WRR Weight for VC6
 <31:24> WRR_VC7         RO       0x0         0x0       WRR Weight for VC7
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG466 = Four hundred sixty-seventh 32-bits of PCIE type 1 config space
 *                  (VC0 Posted Receive Queue Control)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG466 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  DATA_CREDITS    R/W      0x080       0x80      VC0 Posted Data Credits
                                                         The number of initial Posted data credits for VC0, used for all
                                                         receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <19:12> HEADER_CREDITS  R/W      0x60        0x60      VC0 Posted Header Credits
                                                         The number of initial Posted header credits for VC0, used for
                                                         all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <20>    NS              RAZ      NS          NS        Reserved
 <23:21> QUEUE_MODE      R/W      0x2         0x2       VC0 Posted TLP Queue Mode
                                                         The operating mode of the Posted receive queue for VC0, used
                                                         only in the segmented-buffer configuration, writable through
                                                         PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
                                                         Only one bit can be set at a time:
                                                         o Bit 23: Bypass
                                                         o Bit 22: Cut-through
                                                         o Bit 21: Store-and-forward
 <29:24> NS              RAZ      NS          NS        Reserved
 <30>    TYPE_ORDERING   R/W      0x1         0x1       TLP Type Ordering for VC0
                                                         Determines the TLP type ordering rule for VC0 receive queues,
                                                         used only in the segmented-buffer configuration, writable
                                                         through PEM(0..1)_CFG_WR:
                                                         o 1: Ordering of received TLPs follows the rules in
                                                              PCI Express Base Specification
                                                         o 0: Strict ordering for received TLPs: Posted, then
                                                              Completion, then Non-Posted
                                                         However, the application must not change this field.
 <31>    RX_QUEUE_ORDER  R/W      0x0         0x0       VC Ordering for Receive Queues
                                                         Determines the VC ordering rule for the receive queues, used
                                                         only in the segmented-buffer configuration,
                                                         writable through PEM(0..1)_CFG_WR:
                                                         o 1: Strict ordering, higher numbered VCs have higher priority
                                                         o 0: Round robin
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG467 = Four hundred sixty-eighth 32-bits of PCIE type 1 config space
 *                  (VC0 Non-Posted Receive Queue Control)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG467 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  DATA_CREDITS    R/W      0x020       0x020      VC0 Non-Posted Data Credits
                                                         The number of initial Non-Posted data credits for VC0, used for
                                                         all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <19:12> HEADER_CREDITS  R/W      0x20        0x20      VC0 Non-Posted Header Credits
                                                         The number of initial Non-Posted header credits for VC0, used
                                                         for all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <20>    NS              RAZ      NS          NS        Reserved
 <23:21> QUEUE_MODE      R/W      0x2         0x2       VC0 Non-Posted TLP Queue Mode
                                                         The operating mode of the Non-Posted receive queue for VC0,
                                                         used only in the segmented-buffer configuration, writable
                                                         through PEM(0..1)_CFG_WR.
                                                         Only one bit can be set at a time:
                                                         o Bit 23: Bypass
                                                         o Bit 22: Cut-through
                                                         o Bit 21: Store-and-forward
                                                         However, the application must not change this field.
 <31:24> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG468 = Four hundred sixty-ninth 32-bits of PCIE type 1 config space
 *                  (VC0 Completion Receive Queue Control)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG468 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  DATA_CREDITS    R/W      0x100       0x100     VC0 Completion Data Credits
                                                         The number of initial Completion data credits for VC0, used for
                                                         all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <19:12> HEADER_CREDITS  R/W      0x7F        0x7F      VC0 Completion Header Credits
                                                         The number of initial Completion header credits for VC0, used
                                                         for all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <20>    NS              RAZ      NS          NS        Reserved
 <23:21> QUEUE_MODE      R/W      0x2         0x2       VC0 Completion TLP Queue Mode
                                                         The operating mode of the Completion receive queue for VC0,
                                                         used only in the segmented-buffer configuration, writable
                                                         through PEM(0..1)_CFG_WR.
                                                         Only one bit can be set at a time:
                                                         o Bit 23: Bypass
                                                         o Bit 22: Cut-through
                                                         o Bit 21: Store-and-forward
                                                         However, the application must not change this field.
 <31:24> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG490 = Four hundred ninety-first 32-bits of PCIE type 1 config space
 *                  (VC0 Posted Buffer Depth)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG490 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <13:0>  DATA_DEPTH      R/W      0x0188      0x188     VC0 Posted Data Queue Depth
                                                         Sets the number of entries in the Posted data queue for VC0
                                                         when using the segmented-buffer configuration, writable
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <15:14> NS              RAZ      NS          NS        Reserved
 <25:16> HEADER_DEPTH    R/W      0x066       0x66      VC0 Posted Header Queue Depth
                                                         Sets the number of entries in the Posted header queue for VC0
                                                         when using the segmented-buffer configuration, writable through
                                                         PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:26> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG491 = Four hundred ninety-second 32-bits of PCIE type 1 config space
 *                  (VC0 Non-Posted Buffer Depth)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG491 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <13:0>  DATA_DEPTH      R/W      0x0088      0x88      VC0 Non-Posted Data Queue Depth
                                                         Sets the number of entries in the Non-Posted data queue for VC0
                                                         when using the segmented-buffer configuration, writable
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <15:14> NS              RAZ      NS          NS        Reserved
 <25:16> HEADER_DEPTH    R/W      0x026       0x26      VC0 Non-Posted Header Queue Depth
                                                         Sets the number of entries in the Non-Posted header queue for
                                                         VC0 when using the segmented-buffer configuration, writable
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:26> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG492 = Four hundred ninety-third 32-bits of PCIE type 1 config space
 *                  (VC0 Completion Buffer Depth)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG492 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <13:0>  DATA_DEPTH      R/W      0x02a7      0x2a7     VC0 Completion Data Queue Depth
                                                         Sets the number of entries in the Completion data queue for VC0
                                                         when using the segmented-buffer configuration, writable
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <15:14> NS              RAZ      NS          NS        Reserved
 <25:16> HEADER_DEPTH    R/W      0x085       0x85      VC0 Completion Header Queue Depth
                                                         Sets the number of entries in the Completion header queue for
                                                         VC0 when using the segmented-buffer configuration, writable
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:26> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG515 = Five hundred sixteenth 32-bits of PCIE type 1 config space
 *                  (Port Logic Register (Gen2))
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG515 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   N_FTS           R/W      0x80        0x80      N_FTS
                                                         Sets the Number of Fast Training Sequences (N_FTS) that
                                                         the core advertises as its N_FTS during GEN2 Link training.
                                                         This value is used to inform the Link partner about the PHYs
                                                         ability to recover synchronization after a low power state.
                                                         Note: Do not set N_FTS to zero; doing so can cause the
                                                               LTSSM to go into the recovery state when exiting from
                                                               L0s.
 <16:8>  LE              R/W      0x8         0x8       Lane Enable
                                                         Indicates the number of lanes to check for exit from electrical
                                                         idle in Polling.Active and Polling.Compliance. 1 = x1, 2 = x2,
                                                         etc. Used to limit the maximum link width to ignore broken
                                                         lanes that detect a receiver, but will not exit electrical
                                                         idle and
                                                         would otherwise prevent a valid link from being configured.
 <17>    DSC             R/W      0x0         0x0       Directed Speed Change
                                                         o a write of '1' will initiate a speed change
                                                         o always reads a zero
 <18>    CPYTS           R/W      0x0         0x0       Config PHY Tx Swing
                                                         Indicates the voltage level the PHY should drive. When set to
                                                         1, indicates Full Swing. When set to 0, indicates Low Swing
 <19>    CTCRB           R/W      0x0         0x0       Config Tx Compliance Receive Bit
                                                         When set to 1, signals LTSSM to transmit TS ordered sets
                                                         with the compliance receive bit assert (equal to 1).
 <20>    S_D_E           R/W      0x0         0x0       SEL_DE_EMPHASIS
                                                         Used to set the de-emphasis level for upstream ports.
 <31:21> NS              RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG516 = Five hundred seventeenth 32-bits of PCIE type 1 config space
 *                  (PHY Status Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG516 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PHY_STAT        RO       0x0         0x0       PHY Status
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG517 = Five hundred eighteenth 32-bits of PCIE type 1 config space
 *                  (PHY Control Register)
 *
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG517 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PHY_CTRL        R/W      0x0         0x0       PHY Control
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_INT_REG = Interrupt Register
 *

     ==============================================================
     AGL_GMX_RX(0..0)_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:20> NS       RAZ      NS          NS        Reserved				            |
 <19>    PAUSE_DRP R/W1C   0x0         0         Pause packet was dropped due to full GMX RX FIFO   |
 <18>    PHY_DUPX R/W1C    0x0         0         Change in the RGMII inbound LinkDuplex		    |		  NS
 <17>    PHY_SPD  R/W1C    0x0         0         Change in the RGMII inbound LinkSpeed 		    |		  NS
 <16>    PHY_LINK R/W1C    0x0         0         Change in the RGMII inbound LinkStatus		    |		  NS
 <15>    IFGERR   R/W1C    0x0         0         Interframe Gap Violation			    |
						  Does not necessarily indicate a failure	    |
 <14>    COLDET   R/W1C    0x0         0         Collision Detection				    |
 <13>    FALERR   R/W1C    0x0         0         False carrier error or extend error after slottime |
 <12>    RSVERR   R/W1C    0x0         0         Packet reserved opcodes			    |
 <11>    PCTERR   R/W1C    0x0         0         Bad Preamble / Protocol			    |
 <10>    OVRERR   R/W1C    0x0         0         Internal Data Aggregation Overflow		    |
						  This interrupt should never assert		    |
 <9>     NIBERR   R/W1C    0x0         0         Nibble error (hi_nibble != lo_nibble)		    |		  NS
 <8>     SKPERR   R/W1C    0x0         0         Skipper error					    |
 <7>     RCVERR   R/W1C    0x0         0         Frame was received with Packet Data reception error|
 <6>     LENERR   R/W1C    0x0         0         Frame was received with length error		    |
 <5>     ALNERR   R/W1C    0x0         0         Frame was received with an alignment error	    |
 <4>     FCSERR   R/W1C    0x0         0         Frame was received with FCS/CRC error		    |
 <3>     JABBER   R/W1C    0x0         0         Frame was received with length > sys_length	    |
 <2>     MAXERR   R/W1C    0x0         0         Frame was received with length > max_length	    |
 <1>     CAREXT   R/W1C    0x0         0         Carrier extend error				    |
 <0>     MINERR   R/W1C    0x0         0         Frame was received with length < min_length	    |

Notes:

(1) exceptions will only be raised to the control processor if the
    corresponding bit in the AGL_GMX_RX_INT_EN register is set.

(2) exception conditions 10:0 can also set the rcv/opcode in the received
    packet's workQ entry.  The AGL_GMX_RX_FRM_CHK register provides a bit mask
    for configuring which conditions set the error.

(3) in half duplex operation, the expectation is that collisions will appear
    as MINERRs.

(4) JABBER - An RX Jabber error indicates that a packet was received which
	     is longer than the maximum allowed packet as defined by the
	     system.  GMX will truncate the packet at the JABBER count.
	     Failure to do so could lead to system instabilty.

(6) MAXERR - for untagged frames, the total frame DA+SA+TL+DATA+PAD+FCS >
             AGL_GMX_RX_FRM_MAX.  For tagged frames, DA+SA+VLAN+TL+DATA+PAD+FCS
             > AGL_GMX_RX_FRM_MAX + 4*VLAN_VAL + 4*VLAN_STACKED.

(7) MINERR - total frame DA+SA+TL+DATA+PAD+FCS < AGL_GMX_RX_FRM_MIN.

(8) ALNERR - Indicates that the packet received was not an integer number of
	     bytes.  If FCS checking is enabled, ALNERR will only assert if
	     the FCS is bad.  If FCS checking is disabled, ALNERR will
	     assert in all non-integer frame cases.

(9) Collisions - Collisions can only occur in half-duplex mode.  A collision
                 is assumed by the receiver when the received
		 frame < AGL_GMX_RX_FRM_MIN - this is normally a MINERR

(A) LENERR - Length errors occur when the received packet does not match the
	     length field.  LENERR is only checked for packets between 64
	     and 1500 bytes.  For untagged frames, the length must exact
	     match.  For tagged frames the length or length+4 must match.

(B) PCTERR - checks that the frame begins with a valid PREAMBLE sequence.
             Does not check the number of PREAMBLE cycles.

(C) OVRERR - *DON'T PUT IN HRM*

	     OVRERR is an architectural assertion check internal to GMX to
	     make sure no assumption was violated.  In a correctly operating
	     system, this interrupt can never fire.

	     GMX has an internal arbiter which selects which of 4 ports to
	     buffer in the main RX FIFO.  If we normally buffer 8 bytes,
	     then each port will typically push a tick every 8 cycles - if
	     the packet interface is going as fast as possible.  If there
	     are four ports, they push every two cycles.  So that's the
	     assumption.  That the inbound module will always be able to
	     consume the tick before another is produced.  If that doesn't
	     happen - that's when OVRERR will assert.

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_INT_EN = Interrupt Enable
 *

     ==============================================================
     AGL_GMX_RX(0..0)_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:20> NS       RAZ      NS          NS        Reserved				            |
 <19>    PAUSE_DRP R/W     0x0         0         Pause packet was dropped due to full GMX RX FIFO   |
 <18>    PHY_DUPX R/W      0x0         0         Change in the RMGII inbound LinkDuplex		    |		  NS
 <17>    PHY_SPD  R/W      0x0         0         Change in the RMGII inbound LinkSpeed 		    |		  NS
 <16>    PHY_LINK R/W      0x0         0         Change in the RMGII inbound LinkStatus		    |		  NS
 <15>    IFGERR   R/W      0x0         0         Interframe Gap Violation			    |
 <14>    COLDET   R/W      0x0         0         Collision Detection				    |
 <13>    FALERR   R/W      0x0         0         False carrier error or extend error after slottime |
 <12>    RSVERR   R/W      0x0         0         Packet reserved opcodes			    |
 <11>    PCTERR   R/W      0x0         0         Bad Preamble / Protocol			    |
 <10>    OVRERR   R/W      0x0         0         Internal Data Aggregation Overflow		    |
 <9>     NIBERR   R/W      0x0         0         Nibble error (hi_nibble != lo_nibble)		    |		  NS
 <8>     SKPERR   R/W      0x0         0         Skipper error					    |
 <7>     RCVERR   R/W      0x0         0         Frame was received with RMGII Data reception error |
 <6>     LENERR   R/W      0x0         0         Frame was received with length error		    |
 <5>     ALNERR   R/W      0x0         0         Frame was received with an alignment error	    |
 <4>     FCSERR   R/W      0x0         0         Frame was received with FCS/CRC error		    |
 <3>     JABBER   R/W      0x0         0         Frame was received with length > sys_length	    |
 <2>     MAXERR   R/W      0x0         0         Frame was received with length > max_length	    |
 <1>     CAREXT   R/W      0x0         0         Carrier extend error				    |
 <0>     MINERR   R/W      0x0         0         Frame was received with length < min_length	    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_PRT_CFG = Port description
 *

     ==============================================================
     AGL_GMX_PRT(0..0)_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:14> NS        RAZ     NS          NS        Reserved				            |
 <13>    TX_IDLE   RO      0x1         NS        TX Machine is idle				    |
 <12>    RX_IDLE   RO      0x1         NS        RX Machine is idle				    |
 <11:9>  NS        RAZ     NS          NS        Reserved				            |
 <8>     SPEED_MSB R/W     0x0         NS        Link Speed MSB [SPEED_MSB:SPEED]		    |
						  10 = 10Mbs operation				    |
						  00 = 100Mbs operation				    |
						  01 = 1000Mbs operation			    |
						  11 = Reserved					    |
 <7>    NS         RAZ     NS          NS        Reserved				            |
 <6>    BURST	   R/W     0x0         NS	 Half-Duplex Burst Enable			    |
						  Only valid for 1000Mbs half-duplex operation	    |
						   0 = burst length of 0x2000 (halfdup / 1000Mbs)   |
						   1 = burst length of 0x0    (all other modes)	    |
 <5>    TX_EN	   R/W     0x0         NS 	 Port enable.  Must be set for Octane to send       |
						  RMGII traffic.   When this bit clear on a given   |
						  port, then all packet cycles will appear as	    |
						  inter-frame cycles.				    |
 <4>    RX_EN	   R/W     0x0         NS 	 Port enable.  Must be set for Octane to receive    |
						  RMGII traffic.  When this bit clear on a given    |
						  port, then the all packet cycles will appear as   |
						  inter-frame cycles.				    |
 <3>    SLOTTIME   R/W     0x1         NS	 Slot Time for Half-Duplex operation		    |
						  0 = 512 bitimes (10/100Mbs operation)		    |
						  1 = 4096 bitimes (1000Mbs operation)		    |
 <2>    DUPLEX     R/W     0x1         NS        Duplex    					    |
						  0 = Half Duplex (collisions/extentions/bursts)    |
						  1 = Full Duplex				    |
 <1>    SPEED      R/W     0x1         NS        Link Speed LSB [SPEED_MSB:SPEED]		    |
						  10 = 10Mbs operation				    |
						  00 = 100Mbs operation				    |
						  01 = 1000Mbs operation			    |
						  11 = Reserved					    |
 <0>    EN         R/W     0x0         NS        Link Enable                                        |
						  When EN is clear, packets will not be received    |
						  or transmitted (including PAUSE and JAM packets). |
						  If EN is cleared while a packet is currently	    |
						  being received or transmitted, the packet will    |
						  be allowed to complete before the bus is idled.   |
						  On the RX side, subsequent packets in a burst	    |
						  will be ignored.				    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_FRM_CTL = Frame Control
 *

     ==============================================================
     AGL_GMX_RX(0..0)_FRM_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13> NS       RAZ      NS          NS        Reserved				            |
 <12>    PTP_MODE R/W      0x0         0         Timestamp mode					    |
						  When PTP_MODE is set, a 64-bit timestamp will be  |
						  prepended to every incoming packet. The timestamp |
						  bytes are added to the packet in such a way as to |
						  not modify the packet's receive byte count.  This |
						  implies that the AGL_GMX_RX_JABBER,		    |
						  AGL_GMX_RX_FRM_MIN, AGL_GMX_RX_FRM_MAX,	    |
						  AGL_GMX_RX_DECISION, AGL_GMX_RX_UDD_SKP, and the  |
						  AGL_GMX_RX_STATS_* do not require any adjustment  |
						  as they operate on the received packet size.	    |
						  If PTP_MODE=1 and PRE_CHK=1, PRE_STRP must be 1.  |
 <11>    NS       RAZ      NS          NS        Reserved				            |
 <10>    NULL_DIS R/W      0x0         0         When set, do not modify the MOD bits on NULL ticks |
						  due to PARITAL packets			    |
 <9>     PRE_ALIGN R/W	   0x1	       1	 When set, PREAMBLE parser aligns the the SFD byte  |
						  regardless of the number of previous PREAMBLE	    |
						  nibbles.  In this mode, PRE_STRP should be set to |
						  account for the variable nature of the PREAMBLE.  |
 						  PRE_CHK must be set to enable this and all	    |
 						  PREAMBLE features.				    |
 <8>     PAD_LEN  R/W      0x0         0         When set, disables the length check for non-min    |
						  sized pkts with padding in the client data	    |
 <7>     VLAN_LEN R/W      0x0         0         When set, disables the length check for VLAN pkts  |
 <6>     PRE_FREE RO	   0x1	       1	 When set, PREAMBLE checking is less strict.	    |
						  AGL will begin the frame at the first SFD.	    |
						  PRE_FREE must be set if PRE_ALIGN is set.	    |
						  PRE_CHK must be set to enable this and all	    |
						  PREAMBLE features.				    |
 <5>	 CTL_SMAC R/W      0x0         0         Control Pause Frames can match station SMAC	    |
 <4>     CTL_MCST R/W      0x1         1         Control Pause Frames can match globally assign	    |
						  Multicast address				    |
 <3>     CTL_BCK  R/W      0x1         1	 Forward pause information to TX block		    |
 <2>	 CTL_DRP  R/W      0x1         1	 Drop Control Pause Frames			    |
 <1>     PRE_STRP R/W      0x1         1         Strip off the preamble (when present)		    |
                                                  0=PREAMBLE+SFD is sent to core as part of frame   |
                                                  1=PREAMBLE+SFD is dropped			    |
						  PRE_STRP must be set if PRE_ALIGN is set.	    |
						  PRE_CHK must be set to enable this and all	    |
						  PREAMBLE features.				    |
 <0>     PRE_CHK  R/W      0x1         1         This port is configured to send a valid 802.3	    |
						  PREAMBLE to begin every frame. AGL checks that a  |
						  valid PREAMBLE is received (based on PRE_FREE).   |
						  When a problem does occur within the PREAMBLE	    |
						  seqeunce, the frame is marked as bad and not sent |
						  into the core.  The AGL_GMX_RX_INT_REG[PCTERR]    |
						  interrupt is also raised.			    |

Notes:

* PRE_STRP
  When PRE_CHK is set (indicating that the PREAMBLE will be sent), PRE_STRP
  determines if the PREAMBLE+SFD bytes are thrown away or sent to the Octane
  core as part of the packet.

  In either mode, the PREAMBLE+SFD bytes are not counted toward the packet
  size when checking against the MIN and MAX bounds.  Furthermore, the bytes
  are skipped when locating the start of the L2 header for DMAC and Control
  frame recognition.

* CTL_BCK/CTL_DRP
  These bits control how the HW handles incoming PAUSE packets.  Here are
  the most common modes of operation:
    CTL_BCK=1,CTL_DRP=1   - HW does it all
    CTL_BCK=0,CTL_DRP=0   - SW sees all pause frames
    CTL_BCK=0,CTL_DRP=1   - all pause frames are completely ignored

  These control bits should be set to CTL_BCK=0,CTL_DRP=0 in halfdup mode.
  Since PAUSE packets only apply to fulldup operation, any PAUSE packet
  would constitute an exception which should be handled by the processing
  cores.  PAUSE packets should not be forwarded.

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_FRM_CHK = Which frame errors will set the ERR bit of the frame
 *

     ==============================================================
     AGL_GMX_RX(0..0)_FRM_CHK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS       RAZ      NS          NS        Reserved				            |
 <9>     NIBERR   R/W      0x1         1         Nibble error					    |
 <8>     SKPERR   R/W      0x1         1         Skipper error					    |
 <7>     RCVERR   R/W      0x1         1         Frame was received with packet data reception error|
 <6>     LENERR   R/W      0x1         1         Frame was received with length error		    |
 <5>     ALNERR   R/W      0x1         1         Frame was received with an alignment error	    |
 <4>     FCSERR   R/W      0x1         1         Frame was received with FCS/CRC error		    |
 <3>     JABBER   R/W      0x1         1         Frame was received with length > sys_length	    |
 <2>     MAXERR   R/W      0x1         1         Frame was received with length > max_length	    |
 <1>     CAREXT   R/W      0x1         1         Carrier extend error				    |
 <0>     MINERR   R/W      0x1         1         Frame was received with length < min_length	    |

Notes:

If AGL_GMX_RX_UDD_SKP[LEN] != 0, then LENERR will be forced to zero in HW.

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_FRM_MIN = Frame Min length
 *

     ==============================================================
     AGL_GMX_RX(0..0)_FRM_MIN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>  LEN	  R/W      0x40        0x40	 Byte count for Min-sized frame check               |
						  AGL_GMX_RXn_FRM_CHK[MINERR] enables the check	    |
						  for port n.					    |
						  If enabled, failing packets set the MINERR	    |
						  interrupt and the MIX opcode is set to UNDER_FCS  |
						  (0x6, if packet has bad FCS) or UNDER_ERR (0x8,   |
						  if packet has good FCS).			    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_FRM_MAX = Frame Max length
 *

     ==============================================================
     AGL_GMX_RX(0..0)_FRM_MAX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>  LEN	  R/W      0x600       0x600	 Byte count for Max-sized frame check		    |
						  AGL_GMX_RXn_FRM_CHK[MAXERR] enables the check	    |
						  for port n.					    |
						  If enabled, failing packets set the MAXERR	    |
						  interrupt and the MIX opcode is set to OVER_FCS   |
						  (0x3, if packet has bad FCS) or OVER_ERR (0x4, if |
						  packet has good FCS).	  			    |
						  LEN <= AGL_GMX_RX_JABBER[CNT]			    |

Notes:

When changing the LEN field, be sure that LEN does not exceed
AGL_GMX_RX_JABBER[CNT]. Failure to meet this constraint will cause packets that
are within the maximum length parameter to be rejected because they exceed
the AGL_GMX_RX_JABBER[CNT] limit.

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_JABBER = The max size packet after which GMX will truncate
 *

     ==============================================================
     AGL_GMX_RX(0..0)_JABBER Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>  CNT      R/W      0x2800      0x2800    Byte count for jabber check			    |
  						  Failing packets set the JABBER interrupt and are  |
						  optionally sent with opcode==JABBER		    |
						  GMX will truncate the packet to CNT bytes	    |
						  CNT >= AGL_GMX_RX_FRM_MAX[LEN]			    |

Notes:

  CNT must be 8-byte aligned such that CNT[2:0] == 0

  The packet that will be sent to the packet input logic will have an
  additionl 8 bytes if AGL_GMX_RX_FRM_CTL[PRE_CHK] is set and
  AGL_GMX_RX_FRM_CTL[PRE_STRP] is clear.  The max packet that will be sent is
  defined as...

       max_sized_packet = AGL_GMX_RX_JABBER[CNT]+((AGL_GMX_RX_FRM_CTL[PRE_CHK] & !AGL_GMX_RX_FRM_CTL[PRE_STRP])*8)

  Be sure the CNT field value is at least as large as the
  AGL_GMX_RX_FRM_MAX[LEN] value. Failure to meet this constraint will cause
  packets that are within the AGL_GMX_RX_FRM_MAX[LEN] length to be rejected
  because they exceed the CNT limit.

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_DECISION = The byte count to decide when to accept or filter a packet
 *

     ==============================================================
     AGL_GMX_RX(0..0)_DECISION Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:5>  NS       RAZ      NS          NS        Reserved				            |
 <4:0>   CNT      R/W      0x18        0x18      The byte count to decide when to accept or filter  |
                                                   a packet.					    |

Notes:

As each byte in a packet is received by GMX, the L2 byte count is compared
against the AGL_GMX_RX_DECISION[CNT].  The L2 byte count is the number of bytes
from the beginning of the L2 header (DMAC).  In normal operation, the L2
header begins after the PREAMBLE+SFD (AGL_GMX_RX_FRM_CTL[PRE_CHK]=1) and any
optional UDD skip data (AGL_GMX_RX_UDD_SKP[LEN]).

When AGL_GMX_RX_FRM_CTL[PRE_CHK] is clear, PREAMBLE+SFD are prepended to the
packet and would require UDD skip length to account for them.

						L2 Size
Port Mode	      <=AGL_GMX_RX_DECISION bytes (default=24)	>AGL_GMX_RX_DECISION bytes (default=24)

MII/Full Duplex       accept packet				apply filters
		      no filtering is applied			accept packet based on DMAC and PAUSE packet filters

MII/Half Duplex       drop packet				apply filters
		      packet is unconditionally dropped		accept packet based on DMAC

where l2_size = MAX(0, total_packet_size - AGL_GMX_RX_UDD_SKP[LEN] - ((AGL_GMX_RX_FRM_CTL[PRE_CHK]==1)*8)

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_UDD_SKP = Amount of User-defined data before the start of the L2 data
 *

     ==============================================================
     AGL_GMX_RX(0..0)_UDD_SKP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:9> NS        RAZ      NS          NS        Reserved				            |
 <8>	FCSSEL    R/W      0x0         0         Include the skip bytes in the FCS calculation      |
						  0 = all skip bytes are included in FCS            |
						  1 = the skip bytes are not included in FCS        |
 <7>	NS        RAZ      NS          NS        Reserved				            |
 <6:0>  LEN	  R/W      0x0         0	 Amount of User-defined data before the start of    |
						  the L2 data.  Zero means L2 comes first.          |
						  Max value is 64.				    |

Notes:

(1) The skip bytes are part of the packet and will be sent down the NCB
    packet interface and will be handled by PKI.

(2) The system can determine if the UDD bytes are included in the FCS check
    by using the FCSSEL field - if the FCS check is enabled.

(3) Assume that the preamble/sfd is always at the start of the frame - even
    before UDD bytes.  In most cases, there will be no preamble in these
    cases since it will be MII to MII communication without a PHY
    involved.

(4) We can still do address filtering and control packet filtering is the
    user desires.

(5) UDD_SKP must be 0 in half-duplex operation unless
    AGL_GMX_RX_FRM_CTL[PRE_CHK] is clear.  If AGL_GMX_RX_FRM_CTL[PRE_CHK] is set,
    then UDD_SKP will normally be 8.

(6) In all cases, the UDD bytes will be sent down the packet interface as
    part of the packet.  The UDD bytes are never stripped from the actual
    packet.

(7) If LEN != 0, then AGL_GMX_RX_FRM_CHK[LENERR] will be disabled and AGL_GMX_RX_INT_REG[LENERR] will be zero

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_STATS_CTL = RX Stats Control register
 *

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1> NS        RAZ      NS          NS        Reserved				            |
 <0>    RD_CLR	  R/W      0x0	       0	 RX Stats registers will clear on reads		    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_IFG = RX Min IFG
 *

     ==============================================================
     AGL_GMX_RX(0..0)_IFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS        RAZ      NS         NS        Reserved				            |
 <3:0>   IFG	   R/W      0x8	       8	 Min IFG (in IFG*8 bits) between packets used to    |
						  determine IFGERR. Normally IFG is 96 bits.	    |
						  Note in some operating modes, IFG cycles can be   |
						  inserted or removed in order to achieve clock rate|
						  adaptation. For these reasons, the default value  |
						  is slightly conservative and does not check upto  |
						  the full 96 bits of IFG.			    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_INBND = RGMII InBand Link Status
 *

     ==============================================================
     AGL_GMX_RX(0..0)_RX_INBND Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS        RAZ     NS          NS        Reserved				            |         NS
 <3>     DUPLEX	   RO      0x0	       NS	 RGMII Inbound LinkDuplex             		    |   	  NS
						  0=half-duplex					    |
						  1=full-duplex					    |
 <2:1>   SPEED	   RO      0x0	       NS	 RGMII Inbound LinkSpeed             		    |   	  NS
						  00=2.5MHz					    |
						  01=25MHz					    |
						  10=125MHz					    |
						  11=Reserved					    |
 <0>     STATUS	   RO      0x0	       NS	 RGMII Inbound LinkStatus             		    |   	  NS
						  0=down       					    |
						  1=up         					    |

Notes:
These fields are only valid if the attached PHY is operating in RGMII mode
and supports the optional in-band status (see section 3.4.1 of the RGMII
specification, version 1.3 for more information).

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_PAUSE_DROP_TIME = The TIME field in a PAUSE Packet which was dropped due to GMX RX FIFO full condition
 *

     ==============================================================
     AGL_GMX_RX(0..0)_PAUSE_DROP_TIME Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16>  NS        RAZ     NS          NS        Reserved				            |
 <15:0>   STATUS    R/W1C   0x0	        NS	  Time extracted from the dropped PAUSE packet	    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_RX_STATS_PKTS
 *
 * Count of good received packets - packets that are not recognized as PAUSE
 * packets, dropped due the DMAC filter, dropped due FIFO full status, or
 * have any other OPCODE (FCS, Length, etc).
 *

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_PKTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>  CNT      RC/W     0x0         NS        Count of received good packets                     |

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_OCTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:0>  CNT      RC/W    0x0         NS        Octet count of received good packets               |

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_RX_STATS_PKTS_CTL
 *
 * Count of all packets received that were recognized as Flow Control or
 * PAUSE packets.  PAUSE packets with any kind of error are counted in
 * AGL_GMX_RX_STATS_PKTS_BAD.  Pause packets can be optionally dropped or
 * forwarded based on the AGL_GMX_RX_FRM_CTL[CTL_DRP] bit.  This count
 * increments regardless of whether the packet is dropped.  Pause packets
 * will never be counted in AGL_GMX_RX_STATS_PKTS.  Packets dropped due the dmac
 * filter will be counted in AGL_GMX_RX_STATS_PKTS_DMAC and not here.
 *

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_PKTS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>  CNT      RC/W    0x0         NS        Count of received pause packets                    |

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_OCTS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:0>  CNT      RC/W    0x0         NS        Octet count of received pause packets              |

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_RX_STATS_PKTS_DMAC
 *
 * Count of all packets received that were dropped by the dmac filter.
 * Packets that match the DMAC will be dropped and counted here regardless
 * of if they were bad packets.  These packets will never be counted in
 * AGL_GMX_RX_STATS_PKTS.
 *
 * Some packets that were not able to satisify the DECISION_CNT may not
 * actually be dropped by Octeon, but they will be counted here as if they
 * were dropped.
 *

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_PKTS_DMAC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>  CNT      RC/W    0x0         NS        Count of filtered dmac packets                     |

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_OCTS_DMAC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:0>  CNT      RC/W    0x0         NS        Octet count of filtered dmac packets               |

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_RX_STATS_PKTS_DRP
 *
 * Count of all packets received that were dropped due to a full receive
 * FIFO.  This counts good and bad packets received - all packets dropped by
 * the FIFO.  It does not count packets dropped by the dmac or pause packet
 * filters.
 *

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_PKTS_DRP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>  CNT      RC/W    0x0         NS        Count of dropped packets                           |

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_OCTS_DRP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:0>  CNT      RC/W    0x0         NS        Octet count of dropped packets                     |

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_RX_STATS_PKTS_BAD
 *
 * Count of all packets received with some error that were not dropped
 * either due to the dmac filter or lack of room in the receive FIFO.
 *

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_PKTS_BAD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>  CNT      RC/W    0x0         NS        Count of bad packets                               |

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_ADR_CTL = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..0)_ADR_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        Reserved				            |
 <3>     CAM_MODE R/W      0x0         NS        Allow or deny DMAC address filter		    |
						  0 = reject the packet on DMAC address match	    |
						  1 = accept the packet on DMAC address match	    |
 <2:1>   MCST     R/W      0x0         NS        Multicast Mode					    |
						  0 = Use the Address Filter CAM		    |
						  1 = Force reject all multicast packets	    |
						  2 = Force accept all multicast packets	    |
						  3 = Reserved					    |
 <0>     BCST     R/W      0x1         NS        Accept All Broadcast Packets			    |

Notes:

* ALGORITHM
  Here is some pseudo code that represents the address filter behavior.

     @verbatim
     bool dmac_addr_filter(uint8 prt, uint48 dmac) {
       ASSERT(prt >= 0 && prt <= 3);
       if (is_bcst(dmac))                               // broadcast accept
         return (AGL_GMX_RX{prt}_ADR_CTL[BCST] ? ACCEPT : REJECT);
       if (is_mcst(dmac) & AGL_GMX_RX{prt}_ADR_CTL[MCST] == 1)   // multicast reject
         return REJECT;
       if (is_mcst(dmac) & AGL_GMX_RX{prt}_ADR_CTL[MCST] == 2)   // multicast accept
         return ACCEPT;

       cam_hit = 0;

       for (i=0; i<8; i++) {
         if (AGL_GMX_RX{prt}_ADR_CAM_EN[EN<i>] == 0)
           continue;
	 uint48 unswizzled_mac_adr = 0x0;
	 for (j=5; j>=0; j--) {
	    unswizzled_mac_adr = (unswizzled_mac_adr << 8) | AGL_GMX_RX{prt}_ADR_CAM{j}[ADR<i*8+7:i*8>];
	 }
         if (unswizzled_mac_adr == dmac) {
           cam_hit = 1;
           break;
         }
       }

       if (cam_hit)
         return (AGL_GMX_RX{prt}_ADR_CTL[CAM_MODE] ? ACCEPT : REJECT);
       else
         return (AGL_GMX_RX{prt}_ADR_CTL[CAM_MODE] ? REJECT : ACCEPT);
     }
     @endverbatim

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_ADR_CAM_EN = Address Filtering Control Enable
 *

     ==============================================================
     AGL_GMX_RX(0..0)_ADR_CAM_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |
 <7:0>   EN       R/W      0x0         NS        CAM Entry Enables				    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..0)_ADR_CAM0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |
						  Each entry contributes 8bits to one of 8 matchers.|
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |

Notes:

Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===



 *
 * AGL_GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..0)_ADR_CAM1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |
						  Each entry contributes 8bits to one of 8 matchers.|
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |

Notes:

Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===



 *
 * AGL_GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..0)_ADR_CAM2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |
						  Each entry contributes 8bits to one of 8 matchers.|
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |

Notes:

Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===



 *
 * AGL_GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..0)_ADR_CAM3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |
						  Each entry contributes 8bits to one of 8 matchers.|
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |

Notes:

Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===



 *
 * AGL_GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..0)_ADR_CAM4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |
						  Each entry contributes 8bits to one of 8 matchers.|
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |

Notes:

Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===



 *
 * AGL_GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..0)_ADR_CAM5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |
						  Each entry contributes 8bits to one of 8 matchers.|
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |

Notes:

Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===




 *
 * AGL_GMX_BIST = GMX BIST Results
 *

     ==============================================================
     AGL_GMX_BIST Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:25> NS       RAZ      NS          NS        Reserved				            |
 <24:0>  STATUS   RO       0x0         0         BIST Results.                                      |
                                                  HW sets a bit in BIST for for memory that fails   |

						   0: gmx#.inb.fif_bnk0				    |
						   1: gmx#.inb.fif_bnk1				    |
						   2: gmx#.inb.fif_bnk2				    |
						   3: gmx#.inb.fif_bnk3				    |
						   4: gmx#.inb.fif_bnk_ext0			    |
						   5: gmx#.inb.fif_bnk_ext1			    |
						   6: gmx#.inb.fif_bnk_ext2			    |
						   7: gmx#.inb.fif_bnk_ext3			    |
						   8: gmx#.outb.fif.fif_bnk0			    |
						   9: gmx#.outb.fif.fif_bnk1			    |
						  10: RAZ			    		    |
						  11: RAZ			    		    |
						  12: gmx#.outb.fif.fif_bnk_ext0		    |
						  13: gmx#.outb.fif.fif_bnk_ext1		    |
						  14: RAZ		    			    |
						  15: RAZ					    |
						  16: RAZ					    |
						  17: RAZ					    |
						  18: RAZ					    |
						  19: RAZ					    |
						  20: gmx#.csr.drf20x32m2_bist			    |
						  21: gmx#.csr.drf20x48m2_bist			    |
						  22: gmx#.outb.stat.drf16x27m1_bist		    |
						  23: gmx#.outb.stat.drf40x64m1_bist		    |
						  24: RAZ					    |

Notes:

Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_BP_DROP = FIFO mark for packet drop
 *

     ==============================================================
     AGL_GMX_RX_BP_DROP(0..0) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6> NS       RAZ      NS          NS        Reserved				            |
 <5:0>  MARK     R/W      2	      2		Number of 8B ticks to reserve in the RX FIFO.	    |
						 When the FIFO exceeds this count, packets will     |
						 be dropped and not buffered.			    |
						 MARK should typically be programmed to 2.	    |
						 Failure to program correctly can lead to system    |
						 instability.					    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_BP_ON = Hiwater mark for port/interface backpressure
 *

     ==============================================================
     AGL_GMX_RX_BP_ON(0..0) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:9>  NS       RAZ      NS          NS        Reserved				            |
 <8:0>   MARK     R/W      0x40	       0x40	 Hiwater mark (8B ticks) for backpressure. 	    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_BP_OFF = Lowater mark for packet drop
 *

     ==============================================================
     AGL_GMX_RX_BP_OFF(0..0) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ      NS          NS        Reserved				            |
 <5:0>   MARK     R/W      0x10        0x10      Water mark (8B ticks) to deassert backpressure	    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_CLK = RGMII TX Clock Generation Register
 *

     ==============================================================
     AGL_GMX_TX(0..0)_CLK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ      NS          NS        Reserved				            |         NS
 <5:0>	 CLK_CNT  R/W	   0x1	       1	 Controls the RGMII TXC frequency		    |		  NS
						  TXC(period) =					    |
						   rgm_ref_clk(period)*CLK_CNT			    |

Notes:
Normal Programming Values:
 (1) RGMII, 1000Mbs   (AGL_GMX_PRT_CFG[SPEED]==1), CLK_CNT == 1
 (2) RGMII, 10/100Mbs (AGL_GMX_PRT_CFG[SPEED]==0), CLK_CNT == 50/5
 (3) MII,   10/100Mbs (AGL_GMX_PRT_CFG[SPEED]==0), CLK_CNT == 1

RGMII Example:
 Given a 125MHz PLL reference clock...
  CLK_CNT ==  1 ==> 125.0MHz TXC clock period (8ns* 1)
  CLK_CNT ==  5 ==>  25.0MHz TXC clock period (8ns* 5)
  CLK_CNT == 50 ==>   2.5MHz TXC clock period (8ns*50)

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_THRESH = Packet TX Threshold
 *

     ==============================================================
     AGL_GMX_TX(0..0)_THRESH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ      NS          NS        Reserved				            |
 <5:0>	 CNT	  R/W	   0x20	       0x20	 Number of 16B ticks to accumulate in the TX FIFO   |
						  before sending on the packet interface	    |
						  This register should be large enough to prevent   |
						  underflow on the packet interface and must never  |
						  be set below 4.  This register cannot exceed the  |
						  the TX FIFO depth which is 128, 8B entries.	    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_APPEND = Packet TX Append Control
 *

     ==============================================================
     AGL_GMX_TX(0..0)_APPEND Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        Reserved				            |
 <3>     FORCE_FCS R/W     0x1         0x1       Append the Ethernet FCS on each pause packet 	    |
						  when FCS is clear.  Pause packets are normally    |
						  padded to 60 bytes.  If			    |
						  AGL_GMX_TX_MIN_PKT[MIN_SIZE] exceeds 59, then	    |
						  FORCE_FCS will not be used.			    |
 <2>	 FCS      R/W	   0x1	       0x1	 Append the Ethernet FCS on each packet 	    |
 <1>	 PAD      R/W	   0x1	       0x1	 Append PAD bytes such that min sized         	    |
 <0>	 PREAMBLE R/W	   0x1	       0x1	 Prepend the Ethernet preamble on each transfer	    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_SMAC = Packet SMAC
 *

     ==============================================================
     AGL_GMX_SMAC(0..0) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:0>	 SMAC 	  R/W	   0x0         NS	 The SMAC field is used for generating and	    |
						  accepting Control Pause packets		    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_PAUSE_PKT_TIME = Packet TX Pause Packet pause_time field
 *

     ==============================================================
     AGL_GMX_TX(0..0)_PAUSE_PKT_TIME Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>	 TIME 	  R/W	   0x60        NS	 The pause_time field placed is outbnd pause pkts   |
                                                  pause_time is in 512 bit-times		    |
						  Normally, TIME > AGL_GMX_TX_PAUSE_PKT_INTERVAL	    |

Notes:

Choosing proper values of AGL_GMX_TX_PAUSE_PKT_TIME[TIME] and
AGL_GMX_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
designer.  It is suggested that TIME be much greater than INTERVAL and
AGL_GMX_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
count and then when the backpressure condition is lifted, a PAUSE packet
with TIME==0 will be sent indicating that Octane is ready for additional
data.

If the system chooses to not set AGL_GMX_TX_PAUSE_ZERO[SEND], then it is
suggested that TIME and INTERVAL are programmed such that they satisify the
following rule...

   INTERVAL <= TIME - (largest_pkt_size + IFG + pause_pkt_size)

where largest_pkt_size is that largest packet that the system can send
(normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
of the PAUSE packet (normally 64B).

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_MIN_PKT = Packet TX Min Size Packet (PAD upto min size)
 *

     ==============================================================
     AGL_GMX_TX(0..0)_MIN_PKT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |
 <7:0>	 MIN_SIZE R/W	   0x3b	       59	 Min frame in bytes before the FCS is applied	    |
                                                  Padding is only appened when			    |
						  AGL_GMX_TX_APPEND[PAD] for the coresponding packet|
						  port is set. Packets will be padded to	    |
						  MIN_SIZE+1 The reset value will pad to 60 bytes.  |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_PAUSE_PKT_INTERVAL = Packet TX Pause Packet transmission interval - how often PAUSE packets will be sent
 *

     ==============================================================
     AGL_GMX_TX(0..0)_PAUSE_PKT_INTERVAL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>	 INTERVAL R/W	   0x10	       NS	 Arbitrate for a pause packet every (INTERVAL*512)  |
						  bit-times.					    |
						  Normally, 0 < INTERVAL < AGL_GMX_TX_PAUSE_PKT_TIME    |
						  INTERVAL=0, will only send a single PAUSE packet  |
						  for each backpressure event			    |

Notes:

Choosing proper values of AGL_GMX_TX_PAUSE_PKT_TIME[TIME] and
AGL_GMX_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
designer.  It is suggested that TIME be much greater than INTERVAL and
AGL_GMX_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
count and then when the backpressure condition is lifted, a PAUSE packet
with TIME==0 will be sent indicating that Octane is ready for additional
data.

If the system chooses to not set AGL_GMX_TX_PAUSE_ZERO[SEND], then it is
suggested that TIME and INTERVAL are programmed such that they satisify the
following rule...

   INTERVAL <= TIME - (largest_pkt_size + IFG + pause_pkt_size)

where largest_pkt_size is that largest packet that the system can send
(normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
of the PAUSE packet (normally 64B).

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_SOFT_PAUSE = Packet TX Software Pause
 *

     ==============================================================
     AGL_GMX_TX(0..0)_SOFT_PAUSE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>	 TIME	  R/W	   0x0	       NS	 Back off the TX bus for (TIME*512) bit-times	    |
						  for full-duplex operation only		    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_PAUSE_TOGO = Packet TX Amount of time remaining to backpressure
 *

     ==============================================================
     AGL_GMX_TX(0..0)_PAUSE_TOGO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>	 TIME	  RO	   NS	       NS	 Amount of time remaining to backpressure	    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_PAUSE_ZERO = Packet TX Amount of time remaining to backpressure
 *

     ==============================================================
     AGL_GMX_TX(0..0)_PAUSE_ZERO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved				            |
 <0>	 SEND	  R/W	   1	       1	 When backpressure condition clear, send PAUSE	    |
						  packet with pause_time of zero to enable the	    |
						  channel					    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_STATS_CTL = TX Stats Control register
 *

     ==============================================================
     AGL_GMX_TX(0..0)_STATS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1> NS        RAZ      NS          NS        Reserved				            |
 <0>    RD_CLR	  R/W      0x0	       0	 Stats registers will clear on reads		    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_CTL = TX Control register
 *

     ==============================================================
     AGL_GMX_TX(0..0)_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2> NS        RAZ      NS          NS        Reserved				            |
 <1>    XSDEF_EN  R/W      0x1	       1	 Enables the excessive deferral check for stats	    |
						  and interrupts				    |
 <0>    XSCOL_EN  R/W      0x1	       1	 Enables the excessive collision check for stats    |
						  and interrupts				    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 * AGL_GMX_TX_STAT0 = AGL_GMX_TX_STATS_XSDEF / AGL_GMX_TX_STATS_XSCOL

     ==============================================================
     AGL_GMX_TX(0..0)_STAT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> XSDEF    RC/W     0x0         NS        Number of packets dropped (never successfully      |
						  sent) due to excessive deferal		    |
 <31:0>  XSCOL    RC/W     0x0         NS        Number of packets dropped (never successfully	    |
						  sent) due to excessive collision.  Defined by     |
						  AGL_GMX_TX_COL_ATTEMPT[LIMIT].			    |

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT1 = AGL_GMX_TX_STATS_SCOL  / AGL_GMX_TX_STATS_MCOL

     ==============================================================
     AGL_GMX_TX(0..0)_STAT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> SCOL     RC/W     0x0         NS        Number of packets sent with a single collision     |
 <31:0>  MCOL     RC/W     0x0         NS        Number of packets sent with multiple collisions    |
						  but < AGL_GMX_TX_COL_ATTEMPT[LIMIT].		    |

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT2 = AGL_GMX_TX_STATS_OCTS

     ==============================================================
     AGL_GMX_TX(0..0)_STAT2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:0>  OCTS     RC/W     0x0         NS        Number of total octets sent on the interface.	    |
						  Does not count octets from frames that were	    |
						  truncated due to collisions in halfdup mode.	    |

Notes:
- Octect counts are the sum of all data transmitted on the wire including
  packet data, pad bytes, fcs bytes, pause bytes, and jam bytes.  The octect
  counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT3 = AGL_GMX_TX_STATS_PKTS

     ==============================================================
     AGL_GMX_TX(0..0)_STAT3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>  PKTS     RC/W     0x0         NS        Number of total frames sent on the interface.	    |
						  Does not count frames that were truncated due to  |
						   collisions in halfdup mode.			    |

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT4 = AGL_GMX_TX_STATS_HIST1 (64) / AGL_GMX_TX_STATS_HIST0 (<64)

     ==============================================================
     AGL_GMX_TX(0..0)_STAT4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> HIST1    RC/W     0x0         NS        Number of packets sent with an octet count of 64.  |
 <31:0>  HIST0    RC/W     0x0         NS        Number of packets sent with an octet count         |
						  of < 64. 					    |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT5 = AGL_GMX_TX_STATS_HIST3 (128- 255) / AGL_GMX_TX_STATS_HIST2 (65- 127)

     ==============================================================
     AGL_GMX_TX(0..0)_STAT5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> HIST3    RC/W     0x0         NS        Number of packets sent with an octet count of      |
						  128 - 255.					    |
 <31:0>  HIST2    RC/W     0x0         NS        Number of packets sent with an octet count of      |
						  65 - 127.					    |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT6 = AGL_GMX_TX_STATS_HIST5 (512-1023) / AGL_GMX_TX_STATS_HIST4 (256-511)

     ==============================================================
     AGL_GMX_TX(0..0)_STAT6 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> HIST5    RC/W     0x0         NS        Number of packets sent with an octet count of      |
						  512 - 1023.					    |
 <31:0>  HIST4    RC/W     0x0         NS        Number of packets sent with an octet count of      |
						  256 - 511.					    |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT7 = AGL_GMX_TX_STATS_HIST7 (1024-1518) / AGL_GMX_TX_STATS_HIST6 (>1518)

     ==============================================================
     AGL_GMX_TX(0..0)_STAT7 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> HIST7    RC/W     0x0         NS        Number of packets sent with an octet count         |
						  of > 1518.					    |
 <31:0>  HIST6    RC/W     0x0         NS        Number of packets sent with an octet count of      |
						  1024 - 1518.					    |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT8 = AGL_GMX_TX_STATS_MCST  / AGL_GMX_TX_STATS_BCST

     ==============================================================
     AGL_GMX_TX(0..0)_STAT8 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> MCST     RC/W     0x0         NS        Number of packets sent to multicast DMAC.          |
						  Does not include BCST packets.		    |
 <31:0>  BCST     RC/W     0x0         NS        Number of packets sent to broadcast DMAC.	    |
						  Does not include MCST packets.		    |

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Note, GMX determines if the packet is MCST or BCST from the DMAC of the
  packet.  GMX assumes that the DMAC lies in the first 6 bytes of the packet
  as per the 802.3 frame definition.  If the system requires additional data
  before the L2 header, then the MCST and BCST counters may not reflect
  reality and should be ignored by software.
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT9 = AGL_GMX_TX_STATS_UNDFLW / AGL_GMX_TX_STATS_CTL

     ==============================================================
     AGL_GMX_TX(0..0)_STAT9 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> UNDFLW   RC/W     0x0         NS        Number of underflow packets			    |
 <31:0>  CTL      RC/W     0x0         NS        Number of Control packets (PAUSE flow control)	    |
						  generated by GMX.  It does not include control    |
						  packets forwarded or generated by the PP's.	    |

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===



 *
 * Common
 *

 *
 * AGL_GMX_TX_IFG = Packet TX Interframe Gap
 *

     ==============================================================
     AGL_GMX_TX_IFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |
 <7:4>	 IFG2	  R/W	   0x4	       NS	 1/3 of the interframe gap timing		    |
						  If CRS is detected during IFG2, then the	    |
						  interFrameSpacing timer is not reset and a frame  |
						  is transmited once the timer expires.		    |
 <3:0>	 IFG1	  R/W	   0x8	       NS	 2/3 of the interframe gap timing		    |
						  If CRS is detected during IFG1, then the	    |
						  interFrameSpacing timer is reset and a frame is   |
						  not transmited.				    |

Notes:

Notes:
* Programming IFG1 and IFG2.

  For half-duplex systems that require IEEE 802.3 compatibility, IFG1 must
  be in the range of 1-8, IFG2 must be in the range of 4-12, and the
  IFG1+IFG2 sum must be 12.

  For full-duplex systems that require IEEE 802.3 compatibility, IFG1 must
  be in the range of 1-11, IFG2 must be in the range of 1-11, and the
  IFG1+IFG2 sum must be 12.

  For all other systems, IFG1 and IFG2 can be any value in the range of
  1-15.  Allowing for a total possible IFG sum of 2-30.

Additionally reset when both MIX0/1_CTL[RESET] are set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_JAM = Packet TX Jam Pattern
 *

     ==============================================================
     AGL_GMX_TX_JAM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |
 <7:0>	 JAM	  R/W	   0xEE	       NS	 Jam pattern					    |

Notes:

Additionally reset when both MIX0/1_CTL[RESET] are set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_COL_ATTEMPT = Packet TX collision attempts before dropping frame
 *

     ==============================================================
     AGL_GMX_TX_COL_ATTEMPT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:5>  NS       RAZ      NS          NS        Reserved				            |
 <4:0>	 LIMIT    R/W	   0x10	       16	 Collision Attempts				    |

Notes:

Additionally reset when both MIX0/1_CTL[RESET] are set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_PAUSE_PKT_DMAC = Packet TX Pause Packet DMAC field
 *

     ==============================================================
     AGL_GMX_TX_PAUSE_PKT_DMAC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:0>	 DMAC 	  R/W	   0x0180c2000001 0x0180c2000001 The DMAC field placed is outbnd pause pkts |

Notes:

Additionally reset when both MIX0/1_CTL[RESET] are set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_PAUSE_PKT_TYPE = Packet TX Pause Packet TYPE field
 *

     ==============================================================
     AGL_GMX_TX_PAUSE_PKT_TYPE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>	 TYPE 	  R/W	   0x8808      0x8808	 The TYPE field placed is outbnd pause pkts	    |

Notes:

Additionally reset when both MIX0/1_CTL[RESET] are set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_OVR_BP = Packet TX Override BackPressure
 *

     ==============================================================
     AGL_GMX_TX_OVR_BP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS       RAZ      NS          NS        Reserved				            |
 <9:8>   EN	  R/W	   0x0	       0	 Per port Enable back pressure override		    |
 <7:6>   NS       RAZ      NS          NS        Reserved				            |
 <5:4>	 BP	  R/W	   0x0	       0	 Port BackPressure status to use		    |
						  0=Port is available				    |
						  1=Port should be back pressured		    |
 <3:2>   NS       RAZ      NS          NS        Reserved				            |
 <1:0>   IGN_FULL R/W	   0x0	       0	 Ignore the RX FIFO full when computing BP	    |

Notes:

IGN_FULL[0], BP[0], EN[0] will be reset when MIX0_CTL[RESET] is set to 1.
IGN_FULL[1], BP[1], EN[1] will be reset when MIX1_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_BP = Packet TX BackPressure Register
 *

     ==============================================================
     AGL_GMX_TX_BP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved				            |
 <1:0>	 BP 	  RO	   0x0	       0	 Port BackPressure status			    |
						  0=Port is available				    |
						  1=Port should be back pressured		    |

Notes:

BP[0] will be reset when MIX0_CTL[RESET] is set to 1.
BP[1] will be reset when MIX1_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_PRT_INFO = state information for the ports
 *

     ==============================================================
     AGL_GMX_RX_PRT_INFO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:18> NS       RAZ      NS          NS        Reserved				            |
 <17:16> DROP     RO	   0x0	       0x0	 Port indication that data was dropped		    |
 <15:2>  NS       RAZ      NS          NS        Reserved				            |
 <1:0>	 COMMIT   RO	   0x0	       0x0	 Port indication that SOP was accepted		    |

Notes:

COMMIT[0], DROP[0] will be reset when MIX0_CTL[RESET] is set to 1.
COMMIT[1], DROP[1] will be reset when MIX1_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_LFSR = LFSR used to implement truncated binary exponential backoff
 *

     ==============================================================
     AGL_GMX_TX_LFSR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>	 LFSR     R/W	   0xffff      NS     	 The current state of the LFSR used to feed random  |
						  numbers to compute truncated binary exponential   |
						  backoff.					    |

Notes:

Additionally reset when both MIX0/1_CTL[RESET] are set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_INT_REG = Interrupt Register
 *

     ==============================================================
     AGL_GMX_TX_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:22> NS       RAZ      NS          NS        Reserved				            |
 <21:20> PTP_LOST R/W1C    0x0         0         A packet with a PTP request was not able to be	    |
						  sent due to XSCOL			            |
 <19:18> NS       RAZ      NS          NS        Reserved				            |
 <17:16> LATE_COL R/W1C    0x0         0         TX Late Collision				    |
 <15:14> NS       RAZ      NS          NS        Reserved					    |
 <13:12> XSDEF    R/W1C    0x0         0         TX Excessive deferral (halfdup mode only)	    |
 <11:10> NS       RAZ      NS          NS        Reserved					    |
 <9:8>   XSCOL    R/W1C    0x0         0         TX Excessive collisions (halfdup mode only)	    |
 <7:4>   NS       RAZ      NS          NS        Reserved					    |
 <3:2>   UNDFLW   R/W1C    0x0         0         TX Underflow					    |
 <1>     NS       RAZ      NS          NS        Reserved					    |
 <0>     PKO_NXA  R/W1C    0x0         0         Port address out-of-range from PKO Interface	    |

Notes:

UNDFLW[0], XSCOL[0], XSDEF[0], LATE_COL[0], PTP_LOST[0] will be reset when MIX0_CTL[RESET] is set to 1.
UNDFLW[1], XSCOL[1], XSDEF[1], LATE_COL[1], PTP_LOST[1] will be reset when MIX1_CTL[RESET] is set to 1.
PKO_NXA will bee reset when both MIX0/1_CTL[RESET] are set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_INT_EN = Interrupt Enable
 *

     ==============================================================
     AGL_GMX_TX_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:24> NS       RAZ      NS          NS        Reserved				            |
 <23:22> NS       RAZ      NS          NS        Reserved				            |
 <21:20> PTP_LOST R/W      0x0         0         A packet with a PTP request was not able to be	    |
						  sent due to XSCOL			            |
 <19:18> NS       RAZ      NS          NS        Reserved				            |
 <17:16> LATE_COL R/W      0x0         0         TX Late Collision				    |
 <15:14> NS       RAZ      NS          NS        Reserved				            |
 <13:12> XSDEF    R/W      0x0         0         TX Excessive deferral (halfdup mode only)	    |
 <11:10> NS       RAZ      NS          NS        Reserved				            |
 <9:8>   XSCOL    R/W      0x0         0         TX Excessive collisions (halfdup mode only)	    |
 <7:4>   NS       RAZ      NS          NS        Reserved				            |
 <3:2>   UNDFLW   R/W      0x0         0         TX Underflow					    |
 <1>     NS       RAZ      NS          NS        Reserved				            |
 <0>     PKO_NXA  R/W      0x0         0         Port address out-of-range from PKO Interface	    |

Notes:

UNDFLW[0], XSCOL[0], XSDEF[0], LATE_COL[0], PTP_LOST[0] will be reset when MIX0_CTL[RESET] is set to 1.
UNDFLW[1], XSCOL[1], XSDEF[1], LATE_COL[1], PTP_LOST[1] will be reset when MIX1_CTL[RESET] is set to 1.
PKO_NXA will bee reset when both MIX0/1_CTL[RESET] are set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_BAD_REG = A collection of things that have gone very, very wrong
 *

     ==============================================================
     AGL_GMX_BAD_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:38> NS       RAZ      NS          NS        Reserved				            |
 <37>	 TXPSH1	  R/W1C	   0x0	       0x0	 TX FIFO overflow (MII1)			    |
 <36>	 TXPOP1	  R/W1C	   0x0	       0x0	 TX FIFO underflow (MII1)			    |
 <35>	 OVRFLW1  R/W1C	   0x0	       0x0	 RX FIFO overflow (MII1)			    |
 <34>	 TXPSH	  R/W1C	   0x0	       0x0	 TX FIFO overflow (MII0)			    |
 <33>	 TXPOP	  R/W1C	   0x0	       0x0	 TX FIFO underflow (MII0)			    |
 <32>	 OVRFLW	  R/W1C	   0x0	       0x0	 RX FIFO overflow (MII0)			    |
 <31:27> NS       RAZ      NS          NS        Reserved				            |
 <26>    STATOVR  R/W1C    0x0         0         TX Statistics overflow				    |
 <25:24> NS       RAZ      NS          NS        Reserved				            |
 <23:22> LOSTSTAT R/W1C    0x0         0         TX Statistics data was over-written		    |
						  In MII/RGMII, one bit per port		    |
						  TX Stats are corrupted                            |
 <21:4>  NS       RAZ      0x0         0         Reserved					    |
 <3:2>   OUT_OVR  R/W1C    0x0         0         Outbound data FIFO overflow                   	    |
 <1:0>   NS       RAZ      0x0         0         Reserved					    |

Notes:

OUT_OVR[0], LOSTSTAT[0], OVRFLW, TXPOP, TXPSH    will be reset when MIX0_CTL[RESET] is set to 1.
OUT_OVR[1], LOSTSTAT[1], OVRFLW1, TXPOP1, TXPSH1 will be reset when MIX1_CTL[RESET] is set to 1.
STATOVR will be reset when both MIX0/1_CTL[RESET] are set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_STAT_BP = Number of cycles that the TX/Stats block has help up operation
 *

     ==============================================================
     AGL_GMX_STAT_BP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:17> NS       RAZ      NS          NS        Reserved				            |
 <16>    BP       RO       0x0         0         Current TX stats BP state			    |
						  When the TX stats machine cannot update the stats |
						  registers quickly enough, the machine has the	    |
						  ability to BP TX datapath.  This is a rare event  |
						  and will not occur in normal operation.	    |
						  0 = no backpressure is applied		    |
						  1 = backpressure is applied to TX datapath to	    |
						      allow stat update operations to complete	    |
 <15:0>  CNT      R/W1C    0x0         0         Number of cycles that BP has been asserted	    |
						  Saturating counter                                |

Notes:

Additionally reset when both MIX0/1_CTL[RESET] are set to 1.

*DON'T PUT IN HRM*

It has no relationship with the TX FIFO per se.  The TX engine sends packets
from PKO and upon completion, sends a command to the TX stats block for an
update based on the packet size.  The stats operation can take a few cycles -
normally not enough to be visible considering the 64B min packet size that is
ethernet convention.

In the rare case in which SW attempted to schedule really, really, small packets
or the sclk (6xxx) is running ass-slow, then the stats updates may not happen in
real time and can back up the TX engine.

This counter is the number of cycles in which the TX engine was stalled.  In
normal operation, it should always be zeros.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_TX_STATUS = GMX RX/TX Status
 *

     ==============================================================
     AGL_GMX_RX_TX_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ      NS          NS        Reserved				            |
 <5:4>   TX       RC       0           0         Transmit data since last read			    |
 <3:2>   NS       RAZ      NS          NS        Reserved				            |
 <1:0>   RX       RC       0           0         Receive data since last read			    |

Notes:

RX[0], TX[0] will be reset when MIX0_CTL[RESET] is set to 1.
RX[1], TX[1] will be reset when MIX1_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_PRT_CTL = AGL Port Control
 *

     ==============================================================
     AGL_PRT(0..0)_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>	 DRV_BYP   R/W     1           0         Bypass the compensation controller and use	    |
						  DRV_NCTL and DRV_PCTL				    |
 <62>    NS        RAZ     NS          NS        Reserved				            |
 <61:56> CMP_PCTL  RO      NS          NS        PCTL drive strength from the compensation ctl	    |
 <55:54> NS        RAZ     NS          NS        Reserved				            |
 <53:48> CMP_NCTL  RO      NS          NS        NCTL drive strength from the compensation ctl	    |
 <47:46> NS        RAZ     NS          NS        Reserved				            |
 <45:40> DRV_PCTL  R/W     19          NS        PCTL drive strength to use in bypass mode	    |
						  Reset value of 19 is for 50 ohm termination	    |
 <39:38> NS        RAZ     NS          NS        Reserved				            |
 <37:32> DRV_NCTL  R/W     15          NS        NCTL drive strength to use in bypass mode	    |
						  Reset value of 15 is for 50 ohm termination	    |
 <31:29> NS        RAZ     NS          NS        Reserved				            |
 <28:24> CLK_SET   RO      NS          NS        The clock delay as determined by the DLL	    |
 <23>	 CLKRX_BYP R/W     0           NS        Bypass the RX clock delay setting		    |
						  Skews RXC from RXD,RXCTL in RGMII mode	    |
						  By default, HW internally shifts the RXC clock    |
						  to sample RXD,RXCTL assuming clock and data and   |
						  sourced synchronously from the link partner.	    |
						  In MII mode, the CLKRX_BYP is forced to 1.	    |
 <22:21> NS        RAZ     NS          NS        Reserved				            |
 <20:16> CLKRX_SET R/W     0           NS        RX clock delay setting to use in bypass mode	    |
						  Skews RXC from RXD in RGMII mode		    |
 <15>	 CLKTX_BYP R/W     1           NS        Bypass the TX clock delay setting		    |
						  Skews TXC from TXD,TXCTL in RGMII mode	    |
						  By default, clock and data and sourced	    |
						  synchronously.				    |
						  In MII mode, the CLKRX_BYP is forced to 1.	    |
 <14:13> NS        RAZ     NS          NS        Reserved				            |
 <12:8>  CLKTX_SET R/W     0           NS        TX clock delay setting to use in bypass mode	    |
						  Skews TXC from TXD in RGMII mode		    |
 <7:5>   NS        RAZ     NS          NS        Reserved				            |
 <4>     DLLRST	   R/W     1           0         DLL Reset	   				    |
 <3>     COMP	   R/W     0           1         Compensation Enable   				    |
 <2>     ENABLE    R/W     1           1         Port Enable     				    |
 <1>     CLKRST    R/W     1           0         Clock Tree Reset				    |
 <0>     MODE      R/W     0           0         Port Mode       				    |
						  MODE must be set the same for all ports in which  |
						  AGL_PRTx_CTL[ENABLE] is set.			    |
						  0=RGMII					    |
						  1=MII						    |

Notes:

AGL_PRT0_CTL will be reset when MIX0_CTL[RESET] is set to 1.
AGL_PRT1_CTL will be reset when MIX1_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 * Specify the RSL base addresses for the block
 *
 *                  DFA_CONFIG = DFA Configuration Register
 *
 * Description:
 *

     ==============================================================
     DFA_CONFIG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     DTECLKDIS  R/W      1      0        DFA Clock Disable Source
                                            When SET, the DFA clocks for DTE(thread engine)
                                            operation are disabled (to conserve overall chip clocking
                                            power when the DFA function is not used).
                                            NOTE: When SET, SW MUST NEVER issue NCB-Direct CSR
                                            operations to the DFA (will result in NCB Bus Timeout
                                            errors).
                                            NOTE: This should only be written to a different value
                                            during power-on SW initialization.

                                            SWNOTE: The MIO_FUS___DFA_DTE_DISABLE fuse bit will
                                            be forced into this register at reset. If the fuse bit
                                            contains '1', writes to DTECLKDIS are disallowed and
                                            will always be read as '1'.

<3:1>   CLDTECRIP  R/W       0      0       Encoding which represents #of DTEs to cripple for each
                                            cluster. Typically DTE_CLCRIP=0 which enables all DTEs
                                            within each cluster. However, when the DFA performance
                                            counters are used, SW may want to limit the #of DTEs
                                            per cluster available, as there are only 4 parallel
                                            performance counters.
                                               DTE_CLCRIP | #DTEs crippled(per cluster)
                                            ------------+-----------------------------
                                                   0    |  0      DTE[15:0]:ON
                                                   1    |  1/2    DTE[15:8]:OFF  /DTE[7:0]:ON
                                                   2    |  1/4    DTE[15:12]:OFF /DTE[11:0]:ON
                                                   3    |  3/4    DTE[15:4]:OFF  /DTE[3:0]:ON
                                                   4    |  1/8    DTE[15:14]:OFF /DTE[13:0]:ON
                                                   5    |  5/8    DTE[15:6]:OFF  /DTE[5:0]:ON
                                                   6    |  3/8    DTE[15:10]:OFF /DTE[9:0]:ON
                                                   7    |  7/8    DTE[15:2]:OFF  /DTE[1:0]:ON

					    NOTE: Higher numbered DTEs are crippled first. For instance,
                                            on o63 (with 16 DTEs/cluster), if DTE_CLCRIP=1(1/2), then
                                            DTE#s [15:8] within the cluster are crippled and only
                                            DTE#s [7:0] are available.

                                            IMPNOTE: The encodings are done in such a way as to later
                                            be used with fuses (for future o2 revisions which will disable
                                            some #of DTEs). Blowing a fuse has the effect that there will
                                            always be fewer DTEs available. [ie: we never want a customer
                                            to blow additional fuses to get more DTEs].

                                            SWNOTE: The MIO_FUS___DFA_NUMDTE_CRIPPLE[2:0] fuse bits will
                                            be forced into this register at reset. Any fuse bits that
                                            contain '1' will be disallowed during a write and will always
                                            be read as '1'.

<7:4>   CLMSKCRIP  R/W       0      0       Cluster Cripple Mask
                                            A one in each bit of the mask represents which DTE cluster to
                                            cripple.
                                            NOTE: o63 has only a single Cluster (therefore CLMSKCRIP[0]
                                            is the only bit used.
                                            o2 has 4 clusters, where all CLMSKCRIP mask bits are used.

                                            SWNOTE: The MIO_FUS___DFA_CLMASK_CRIPPLE[3:0] fuse bits will
                                            be forced into this register at reset. Any fuse bits that
                                            contain '1' will be disallowed during a write and will always
                                            be read as '1'.
<8>     REPL_ENA  R/W       0      0        Replication Mode Enable
                                            *** o63-P2 NEW ***
                                            When set, enables replication mode performance enhancement
                                            feature. This enables the DFA to communicate address
                                            replication information during memory references to the
                                            memory controller.

					    For o63-P2:	This is used by the memory controller
					    to support graph data in multiple banks (or bank sets), so that
					    the least full bank can be selected to minimize the effects of
					    DDR3 bank conflicts (ie: tRC=row cycle time).

 					    For o68: This is used by the memory controller to support graph
                                            data in multiple ports (or port sets), so that the least full
                                            port can be selected to minimize latency effects.

                                            SWNOTE: Using this mode requires the DFA SW compiler and DFA
                                            driver to be aware of the address replication changes.
                                            This involves changes to the MLOAD/GWALK DFA instruction format
                                            (see: IWORD2.SREPL), as well as changes to node arc and metadata
                                            definitions which now support an additional REPL field.

                                            When clear, replication mode is disabled, and DFA will interpret
                                            DFA instructions and node-arc formats which DO NOT have
                                            address replication information.

<9>      DLCSTART_BIST R/W     0      0     When software writes DLCSTART_BIST=0->1, a BiST is executed
                                            for the DLC sub-block RAMs which contains DCLK domain
                                            asynchronous RAMs.
                                            NOTES:
                                            1) This bit should only be written after DCLK has been enabled
                                            by software and is stable.
                                            (see LMC initialization routine for details on how to enable
                                            the DDR3 memory (DCLK) - which requires LMC PLL init, clock
                                            divider and proper DLL initialization sequence).
<10>     DLCCLEAR_BIST R/W     0      0     When DLCSTART_BIST is written 0->1, if DLCCLEAR_BIST=1, all
                                            previous DLC BiST state is cleared.
                                            NOTES:
                                            1) DLCCLEAR_BIST must be written to 1 before DLCSTART_BIST
                                            is written to 1 udsing a separate CSR write.
                                            2) DLCCLEAR_BIST must not be changed after writing DLCSTART_BIST
                                            0->1 until the BIST operation completes.

<63:11>  NS        RAZ       NS     NS       RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_CONTROL = DFA Control Register
 *
 * Description:
 *

     ==============================================================
     DFA_CONTROL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     IMODE     R/W       1       1        NCB-Inbound Arbiter
                                             (0=FP {LP=NRQ,HP=NRP}, 1=RR)
                                             NOTE: This should only be written to a different value
                                             during power-on SW initialization.
<1>     QMODE     R/W       1       1        NCB-NRQ Arbiter Mode
                                             (0=Fixed Priority {LP=IRF,RWF,PRF,HP=GRF}/1=RR
                                             NOTE: This should only be written to a different value
                                             during power-on SW initialization.

<2>     PMODE     R/W       1       1        NCB-NRP Arbiter Mode
                                             (0=Fixed Priority {LP=WQF,DFF,HP=RGF}/1=RR
                                             NOTE: This should only be written to a different value
                                             during power-on SW initialization.

<4:3>   NS        RAZ       NS      NS       RESERVED

<5>     SBDLCK    R/W       0       0        DFA Scoreboard LOCK Strobe
                                             *FOR INTERNAL USE ONLY*
				             DFA Scoreboard debug control
                                             When written with a '1', the DFA Scoreboard Debug
                                             registers (DFA_SBD_DBG[0-3]) are all locked down.
                                             This allows SW to lock down the contents of the entire
                                             SBD for a single instant in time. All subsequent reads
                                             of the DFA scoreboard registers will return the data
                                             from that instant in time.

<11:6>  SBDNUM    R/W       0       0        SBD Debug Entry#
                                             *FOR INTERNAL USE ONLY*
					     DFA Scoreboard debug control
                                             Selects which one of 48 DFA Scoreboard entries is
                                             latched into the DFA_SBD_DBG[0-3] registers.

<63:12> NS        RAZ       NS      NS       RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_ERROR = DFA ERROR Register
 *
 * Description:
 *

     ==============================================================
     DFA_ERROR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------

<0>     DBLOVF    R/W1C     0       0        Doorbell Overflow detected - Status bit
                                             When set, the 20b accumulated doorbell register
                                             had overflowed (SW wrote too many doorbell requests).

                                             If the DBLINA had previously been enabled(set),
                                             an interrupt will be posted. Software can clear
                                             the interrupt by writing a 1 to this register bit.

                                             NOTE: Detection of a Doorbell Register overflow
                                             is a catastrophic error which may leave the DFA
                                             HW in an unrecoverable state.

<3:1>   DC0PERR   R/W1C     0       0        Cluster#0 RAM[3:1] Parity Error Detected
                                             See also DFA_DTCFADR register which contains the
                                             failing addresses for the internal node cache RAMs.

<6:4>   DC1PERR   R/W1C     0       0        Cluster#1 RAM[3:1] Parity Error Detected
                                             See also DFA_DTCFADR register which contains the
                                             failing addresses for the internal node cache RAMs.

<9:7>   DC2PERR   R/W1C     0       0        Cluster#2 RAM[3:1] Parity Error Detected
                                             See also DFA_DTCFADR register which contains the
                                             failing addresses for the internal node cache RAMs.

<12:10> NS        RAZ       NS      NS       RESERVED

<13>  DLC0_OVFERR R/W1C     0       0        DLC0 Fifo Overflow Error Detected
                                             This condition should NEVER architecturally occur, and
                                             is here in case HW credit/debit scheme is not working.
<14>  DLC1_OVFERR R/W1C     0       0        DLC1 Fifo Overflow Error Detected
                                             This condition should NEVER architecturally occur, and
                                             is here in case HW credit/debit scheme is not working.

<15>     NS        RAZ       NS      NS      RESERVED

<16>    CNDRD     RO        0       0        If Any of the cluster's detected a Parity error on RAM1
                                             this additional bit further specifies that the
                                             RAM1 parity error was detected during a CND-RD
                                             (Cache Node Metadata Read).

                                             *DON'T PUT IN HRM*
                                             For CNDRD Parity Error, the previous CNA arc fetch
                                             information is written to RWORD1+ as follows:
                                                RWORD1+[NTYPE]=MNODE
                                                RWORD1+[NDNID]=cna.ndnid
                                                RWORD1+[NHMSK]=cna.hmsk
                                                RWORD1+[NNPTR]=cna.nnptr[13:0]
					     NOTE: This bit is set if ANY node cluster's RAM1 accesses
                                             detect a CNDRD error.

<17>    DFANXM    R/W1C     0       0        DFA Non-existent Memory Access
                                             For o68: DTEs (and backdoor CSR DFA Memory REGION reads)
                                             have access to the following 38bit L2/DRAM address space
                                             which maps to a 37bit physical DDR3 SDRAM address space.

                                             see:
                                             DR0: 0x0 0000 0000 0000 to 0x0 0000 0FFF FFFF
						     maps to lower 256MB of physical DDR3 SDRAM
                                             DR1: 0x0 0000 2000 0000 to 0x0 0020 0FFF FFFF
                                                     maps to upper 127.75GB of DDR3 SDRAM

				                        L2/DRAM address space                     Physical DDR3 SDRAM Address space
				                          (38bit address)                           (37bit address)

				                           +-----------+ 0x0020.0FFF.FFFF
				                           |           |
				                          ===   DR1   ===                          +-----------+ 0x001F.FFFF.FFFF
				              (128GB-256MB)|           |                           |           |
				                           |           |                     =>    |           |  (128GB-256MB)
				                           +-----------+ 0x0000.1FFF.FFFF          |   DR1     |
				                   256MB   |   HOLE    |   (DO NOT USE)            |           |
				                           +-----------+ 0x0000.0FFF.FFFF          +-----------+ 0x0000.0FFF.FFFF
				                   256MB   |    DR0    |                           |   DR0     |   (256MB)
				                           +-----------+ 0x0000.0000.0000          +-----------+ 0x0000.0000.0000

                                             In the event the DFA generates a reference to the L2/DRAM
                                             address hole (0x0000.0FFF.FFFF - 0x0000.1FFF.FFFF) or to
                                             an address above 0x0020.0FFF.FFFF, the DFANXM programmable
                                             interrupt bit will be set.

					     SWNOTE: Both the 1) SW DFA Graph compiler and the 2) SW NCB-Direct CSR
                                             accesses to DFA Memory REGION MUST avoid making references
                                             to these non-existent memory regions.

                                             NOTE: If DFANXM is set during a DFA Graph Walk operation,
                                             then the walk will prematurely terminate with RWORD0[REA]=ERR.

                                             If DFANXM is set during a NCB-Direct CSR read access to DFA
                                             Memory REGION, then the CSR read response data is forced to
                                             128'hBADE_FEED_DEAD_BEEF_FACE_CAFE_BEAD_C0DE. (NOTE: the QW
                                             being accessed, either the upper or lower QW will be returned).

<18>    REPLERR   R/W1C     0       0        DFA Illegal Replication Factor Error
                                             For o68: DFA only supports 1x, 2x, and 4x port replication.
                                             Legal configurations for memory are to support 2 port or
                                             4 port configurations.

                                             The REPLERR interrupt will be set in the following illegal
                                             configuration cases:
                                                 1) An 8x replication factor is detected for any memory reference.
                                                 2) A 4x replication factor is detected for any memory reference
                                                    when only 2 memory ports are enabled.

                                             NOTE: If REPLERR is set during a DFA Graph Walk operation,
                                             then the walk will prematurely terminate with RWORD0[REA]=ERR.
                                             If REPLERR is set during a NCB-Direct CSR read access to DFA
                                             Memory REGION, then the CSR read response data is UNPREDICTABLE.

<63:19> NS        RAZ       NS      NS       RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_INTMSK = DFA ERROR Interrupt Mask Register
 *
 * Description:
 *

     ==============================================================
     DFA_INTMSK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>    DBLINA    R/W       0       0        Doorbell Overflow Interrupt Enable bit.
                                             When set, doorbell overflow conditions are reported.

<3:1>  DC0PENA   R/W       0       0        RAM[3:1] Parity Error Enabled Node Cluster #0
<6:4>  DC1PENA   R/W       0       0        RAM[3:1] Parity Error Enabled Node Cluster #1
<9:7>  DC2PENA   R/W       0       0        RAM[3:1] Parity Error Enabled Node Cluster #2

<12:10> NS       RAZ       NS      NS       RESERVED

<13>  DLC0_OVFENA R/W       0       0       DLC0 Fifo Overflow Error Interrupt Enable
<14>  DLC1_OVFENA R/W       0       0       DLC1 Fifo Overflow Error Interrupt Enable

<16:15> NS       RAZ       NS      NS       RESERVED

<17>  DFANXMENA  R/W       0       0        DFA Non-existent Memory Access Interrupt Enable
<18>  REPLERRENA R/W       0       0        DFA Illegal Replication Factor Interrupt Enable

<63:19> NS       RAZ       NS      NS       RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_DEBUG0 = DFA Scoreboard Debug #0 Register
 * *FOR INTERNAL USE ONLY*
 * Description: When the DFA_CONTROL[SBDLCK] bit is written '1', the contents of this register are locked down.
 * Otherwise, the contents of this register are the 'active' contents of the DFA Scoreboard at the time of the
 * CSR read.
 * VERIFICATION NOTE: Read data is unsafe. X's(undefined data) can propagate (in the behavioral model)
 * on the reads unless the DTE Engine specified by DFA_CONTROL[SBDNUM] has previously been assigned an
 * instruction.
 *

     ==============================================================
     DFA_DEBUG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0> SBD0       RO        NS       NS      DFA ScoreBoard #0 Data
                                             (DFA Scoreboard Debug)
 	                                        [63:38]   (26) rptr[28:3]: Result Base Pointer (QW-aligned)
 	                                        [37:22]   (16) Cumulative Result Write Counter (for HDR write)
 	                                        [21]       (1) Waiting for GRdRsp EOT
	                                        [20]       (1) Waiting for GRdReq Issue (to NRQ)
	                                        [19]       (1) GLPTR/GLCNT Valid
	                                        [18]       (1) Completion Mark Detected
	                                        [17:15]    (3) Completion Code [0=PDGONE/1=PERR/2=RFULL/3=TERM]
                                                [14]       (1) Completion Detected
	                                        [13]       (1) Waiting for HDR RWrCmtRsp
	                                        [12]       (1) Waiting for LAST RESULT RWrCmtRsp
	                                        [11]       (1) Waiting for HDR RWrReq
                                                [10]        (1) Waiting for RWrReq
                                                [9]        (1) Waiting for WQWrReq issue
	                                        [8]        (1) Waiting for PRdRsp EOT
	                                        [7]        (1) Waiting for PRdReq Issue (to NRQ)
	                                        [6]        (1) Packet Data Valid
	                                        [5]        (1) WQVLD
	                                        [4]        (1) WQ Done Point (either WQWrReq issued (for WQPTR<>0) OR HDR RWrCmtRsp)
	                                        [3]        (1) Resultant write STF/P Mode
                                                [2]        (1) Packet Data LDT mode
                                                [1]        (1) Gather Mode
                                                [0]        (1) Valid
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_DEBUG1 = DFA Scoreboard Debug #1 Register
 * *FOR INTERNAL USE ONLY*
 * Description: When the DFA_CONTROL[SBDLCK] bit is written '1', the contents of this register are locked down.
 * Otherwise, the contents of this register are the 'active' contents of the DFA Scoreboard at the time of the
 * CSR read.
 * VERIFICATION NOTE: Read data is unsafe. X's(undefined data) can propagate (in the behavioral model)
 * on the reads unless the DTE Engine specified by DFA_CONTROL[SBDNUM] has previously been assigned an
 * instruction.
 *

     ==============================================================
     DFA_DEBUG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0> SBD1       RO        NS       NS      DFA ScoreBoard #1 Data
                                             DFA Scoreboard Debug Data
                                                [63:56]   (8) UNUSED
                                                [55:16]  (40) Packet Data Pointer
                                                [15:0]   (16) Packet Data Counter
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_DEBUG2 = DFA Scoreboard Debug #2 Register
 *
 * Description: When the DFA_CONTROL[SBDLCK] bit is written '1', the contents of this register are locked down.
 * Otherwise, the contents of this register are the 'active' contents of the DFA Scoreboard at the time of the
 * CSR read.
 * VERIFICATION NOTE: Read data is unsafe. X's(undefined data) can propagate (in the behavioral model)
 * on the reads unless the DTE Engine specified by DFA_CONTROL[SBDNUM] has previously been assigned an
 * instruction.
 *

     ==============================================================
     DFA_DEBUG2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0> SBD2       RO        NS       NS      DFA ScoreBoard #2 Data
                                                [63:45] (19) UNUSED
                                                [44:42]  (3) Instruction Type
                                                [41:5]  (37) rwptr[39:3]: Result Write Pointer
                                                [4:0]    (5) prwcnt[4:0]: Pending Result Write Counter
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_DEBUG3 = DFA Scoreboard Debug #3 Register
 *
 * Description: When the DFA_CONTROL[SBDLCK] bit is written '1', the contents of this register are locked down.
 * Otherwise, the contents of this register are the 'active' contents of the DFA Scoreboard at the time of the
 * CSR read.
 * VERIFICATION NOTE: Read data is unsafe. X's(undefined data) can propagate (in the behavioral model)
 * on the reads unless the DTE Engine specified by DFA_CONTROL[SBDNUM] has previously been assigned an
 * instruction.
 *

     ==============================================================
     DFA_DEBUG3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0> SBD3       RO        NS       NS      DFA ScoreBoard #3 Data
                                             [63:52] (11) rptr[39:29]: Result Base Pointer (QW-aligned)
                                             [52:16] (37) glptr[39:3]: Gather List Pointer
                                             [15:0]  (16) glcnt Gather List Counter
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_DTCFADR = DFA DTC Failing Address Register
 *
 * Description: DFA Node Cache Failing Address/Control Error Capture information
 * This register contains useful information to help in isolating a Node Cache RAM failure.
 * NOTE: The first detected PERR failure is captured in DFA_DTCFADR (locked down), until the
 * corresponding PERR Interrupt is cleared by writing one (W1C). (see: DFA_ERR[DC0PERR[2:0]]).
 * NOTE: In the rare event that multiple parity errors are detected in the same cycle from multiple
 * clusters, the FADR register will be locked down for the least signicant cluster # (0->3).
 *

     ==============================================================
     DFA_DTCFADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>   RAM1FADR  RO        NS       NS     DFA RAM1 Failing Address
                                             If DFA_ERR[DC0PERR<0>]=1, this field indicates the
                                             failing RAM1 Address. The failing address is locked
                                             down until the DC0PERR<0> W1C occurs.
                                             NOTE: If multiple DC0PERR<0>=1 errors are detected,
                                             then the lsb cluster error information is captured.
<15:14>  NS        RAZ       NS       NS     RESERVED
<24:16>  RAM2FADR  RO        NS       NS     DFA RAM2 Failing Address
                                             If DFA_ERR[DC0PERR<1>]=1, this field indicates the
                                             failing RAM2 Address. The failing address is locked
                                             down until the DC0PERR<1> W1C occurs.
                                             NOTE: If multiple DC0PERR<0>=1 errors are detected,
                                             then the lsb cluster error information is captured.

<31:25>  NS        RAZ       NS       NS     RESERVED
<43:32>  RAM3FADR  RO        NS       NS     DFA RAM3 Failing Address
                                             If DFA_ERR[DC0PERR<2>]=1, this field indicates the
                                             failing RAM3 Address. The failing address is locked
                                             down until the DC0PERR<2> W1C occurs.
                                             NOTE: If multiple DC0PERR<0>=1 errors are detected,
                                             then the lsb cluster error information is captured.

<63:44>  NS        RAZ       NS       NS     RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_PFC_GCTL = DFA Performance Counter Global Control
 * *FOR INTERNAL USE ONLY*
 * Description:
 *

     ==============================================================
     DFA_PFC_GCTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     CNT0ENA    R/W     0           0         Performance Counter 0 Enable
                                                 When this bit is set, the performance counter #0
                                                 is enabled.
<1>     CNT1ENA    R/W     0           0         Performance Counter 1 Enable
                                                 When this bit is set, the performance counter #1
                                                 is enabled.
<2>     CNT2ENA    R/W     0           0         Performance Counter 2 Enable
                                                 When this bit is set, the performance counter #2
                                                 is enabled.
<3>     CNT3ENA    R/W     0           0         Performance Counter 3 Enable
                                                 When this bit is set, the performance counter #3
                                                 is enabled.
<4>     CNT0WCLR   R/W     0           0         Performance Counter #0 Write Clear
                                                 If this bit is set, CSR writes to the DFA_PFC0_CNT
                                                 will clear the count value.
                                                 If this bit is clear, CSR writes to the DFA_PFC0_CNT
                                                 will continue the count from the written value.
<5>     CNT1WCLR   R/W     0           0         Performance Counter #1 Write Clear
                                                 If this bit is set, CSR writes to the DFA_PFC1_CNT
                                                 will clear the count value.
                                                 If this bit is clear, CSR writes to the DFA_PFC1_CNT
                                                 will continue the count from the written value.
<6>     CNT2WCLR   R/W     0           0         Performance Counter #2 Write Clear
                                                 If this bit is set, CSR writes to the DFA_PFC2_CNT
                                                 will clear the count value.
                                                 If this bit is clear, CSR writes to the DFA_PFC2_CNT
                                                 will continue the count from the written value.
<7>     CNT3WCLR   R/W     0           0         Performance Counter #3 Write Clear
                                                 If this bit is set, CSR writes to the DFA_PFC3_CNT
                                                 will clear the count value.
                                                 If this bit is clear, CSR writes to the DFA_PFC3_CNT
                                                 will continue the count from the written value.
<8>     CNT0RCLR   R/W     0           0         Performance Counter #0 Read Clear
                                                 If this bit is set, CSR reads to the DFA_PFC0_CNT
                                                 will clear the count value. This allows SW to maintain
                                                 'cumulative' counters to avoid HW wraparound.
<9>     CNT1RCLR   R/W     0           0         Performance Counter #1 Read Clear
                                                 If this bit is set, CSR reads to the DFA_PFC1_CNT
                                                 will clear the count value. This allows SW to maintain
                                                 'cumulative' counters to avoid HW wraparound.
<10>    CNT2RCLR   R/W     0           0         Performance Counter #2 Read Clear
                                                 If this bit is set, CSR reads to the DFA_PFC2_CNT
                                                 will clear the count value. This allows SW to maintain
                                                 'cumulative' counters to avoid HW wraparound.
<11>    CNT3RCLR   R/W     0           0         Performance Counter #3 Read Clear
                                                 If this bit is set, CSR reads to the DFA_PFC3_CNT
                                                 will clear the count value. This allows SW to maintain
                                	         'cumulative' counters to avoid HW wraparound.
<14:12> SNODE      R/W     0x0         0x0       Starting Node Selector
                                                 When DFA_PFCx_CTL[EVSEL]=Node Transition(31), the SNODE
						 field is used to select Starting Node, and the ENODE
						 field is used to select the Ending Node.
                                                   0: LDNODE
                                                   1: SDNODE
                                                   2: LCNODE
                                                   3: SCNODE
                                                   4: LMNODE
                                                   5: SMNODE
                                                   6: MONODE
                                                   7: RESERVED
<17:15>  ENODE     R/W     0x0         0x0       Ending Node Selector
                                                 When DFA_PFCx_CTL[EVSEL]=Node Transition(31), the ENODE
                                                 field is used to select Ending Node, and the SNODE
                                                 field is used to select the Starting Node.
                                                   0: LDNODE
                                                   1: SDNODE
                                                   2: LCNODE
                                                   3: SCNODE
                                                   4: LMNODE
                                                   5: SMNODE
                                                   6: MONODE
                                                   7: RESERVED
<19:18>  EDNODE    R/W     0x0         0x0       Ending DNODE Selector
                                                 When ENODE=0/1(*DNODE), this field is used to further
                                                 specify the Ending DNODE transition sub-type:
                                                    0: ALL DNODE sub-types
                                                    1: ->D2e (explicit DNODE transition node-arc alone transitions to DNODE)
                                                    2: ->D2i (implicit DNODE transition:arc-present triggers transition)
                                                    3: ->D1r (rescan DNODE transition)
<20>     PMODE     R/W     0x0         0x0       Select Mode
                                                 0: Events are selected on a per-cluster DTE# (CLNUM/CLDTE)
                                                 DFA_PFCx_CTL[CLNUM,CLDTE] specifies the cluster-DTE for
                                                 each 1(of 4) performance counters.
                                                 1: Events are selected on a per-graph basis (VGID=virtual Graph ID).
                                                 NOTE: Only EVSEL=[0...31] can be used in conjunction with PMODE=1.
                                                 DFA_PFC_GCTL[VGID] specifies the Virtual graph ID used across
                                                 all four performance counters.
<28:21>  VGID      R/W     0x0         0x0       Virtual Graph Id#
                                                 When PMODE=1(per-graph selector), this field is used
                                                 to select/monitor only those events which are
                                                 associated with this selected VGID(virtual graph ID).
                                                 This field is used globally across all four performance
                                                 counters.
                                                 IMPNOTE: I implemented a global VGID across all 4 performance
                                                 counters to save wires/area.
<63:29>   NS         RAZ     NS       NS         RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_PFC0_CTL = DFA Performance Counter#0 Control
 * *FOR INTERNAL USE ONLY*
 * Description:
 *

     ==============================================================
     DFA_PFC0_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   CLNUM     R/W     0x0      0x0     Performance Counter#0 Cluster Selector
                                            When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                            is used to select/monitor the cluster# for all events
                                            associated with Performance Counter#0.
 <5:2>   CLDTE     R/W     0x0      0x0     Performance Counter#0 Cluster DTE Selector
                                            When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                            is used to select/monitor the cluster's DTE# for all events
                                            associated with Performance Counter#0.
 <7:6>	 NS        RAZ     NS       NS      RESERVED
 <13:8>  EVSEL     R/W     NS       NS      Performance Counter#0 Event Selector
                                            // Events [0-31] are based on PMODE(0:per cluster-DTE 1:per graph)
                                              0:  #Total Cycles
                                              1:  #LDNODE visits
                                              2:  #SDNODE visits
                                              3:  #DNODE visits (LD/SD)
                                              4:  #LCNODE visits
                                              5:  #SCNODE visits
                                              6:  #CNODE visits (LC/SC)
                                              7:  #LMNODE visits
                                              8:  #SMNODE visits
                                              9:  #MNODE visits (LM/SM)
                                              10: #MONODE visits
                                              11: #CACHE visits (DNODE,CNODE) exc: CNDRD,MPHIDX
                                              12: #CACHE visits (DNODE,CNODE)+(CNDRD,MPHIDX)
                                              13: #MEMORY visits (MNODE+MONODE)
                                              14: #CNDRDs detected (occur for SCNODE->*MNODE transitions)
                                              15: #MPHIDX detected (occur for ->LMNODE transitions)
                                              16: #RESCANs detected (occur when HASH collision is detected)
                                              17: #GWALK iterations STALLED - Packet data/Result Buffer
                                              18: #GWALK iterations NON-STALLED
                                              19: #CLOAD iterations
                                              20: #MLOAD iterations
					          [NOTE: If PMODE=1(per-graph) the MLOAD IWORD0.VGID will be used to discern graph#].
                                              21: #RWORD1+ writes
                                              22: #cycles Cluster is busy
                                              23: #GWALK Instructions
                                              24: #CLOAD Instructions
                                              25: #MLOAD Instructions
					          [NOTE: If PMODE=1(per-graph) the MLOAD IWORD0.VGID will be used to discern graph#].
                                              26: #GFREE Instructions
                                              27-30: RESERVED
                                              31: # Node Transitions detected (see DFA_PFC_GCTL[SNODE,ENODE,EDNODE] registers
                                            //=============================================================
					    // Events [32-63] are used ONLY FOR PMODE=0(per-cluster DTE mode):
                                              32: #cycles a specific cluster-DTE remains active(valid state)
                                              33: #cycles a specific cluster-DTE waits for Memory Response Data
                                              34: #cycles a specific cluster-DTE waits in resource stall state
                                                     (waiting for packet data or result buffer space)
                                              35: #cycles a specific cluster-DTE waits in resource pending state
                                              36-63: RESERVED
                                            //=============================================================
 <63:14> NS        RAZ       NS       NS     RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_PFC0_CNT = DFA Performance Counter #0
 * *FOR INTERNAL USE ONLY*
 * Description:
 *

     ==============================================================
     DFA_PFC0_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  PFCNT0   R/W      0x0         NS        Performance Counter #0
                                                 When DFA_PFC_GCTL[CNT0ENA]=1, the event selected
                                                 by DFA_PFC0_CTL[EVSEL] is counted.
                                                 See also DFA_PFC_GCTL[CNT0WCLR] and DFA_PFC_GCTL
                                                 [CNT0RCLR] for special clear count cases available
                                                 for SW data collection.
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_PFC1_CTL = DFA Performance Counter#1 Control
 * *FOR INTERNAL USE ONLY*
 * Description:
 *

     ==============================================================
     DFA_PFC1_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   CLNUM     R/W     0x0      0x0     Performance Counter#1 Cluster Selector
                                            When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                            is used to select/monitor the cluster# for all events
                                            associated with Performance Counter#1.
 <5:2>   CLDTE     R/W     0x0      0x0     Performance Counter#1 Cluster DTE Selector
                                            When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                            is used to select/monitor the cluster's DTE# for all events
                                            associated with Performance Counter#1.
 <7:6>   NS        RAZ     NS       NS      RESERVED
 <13:8>  EVSEL     R/W     NS       NS      Performance Counter#1 Event Selector
                                              0:  #Cycles
                                              1:  #LDNODE visits
                                              2:  #SDNODE visits
                                              3:  #DNODE visits (LD/SD)
                                              4:  #LCNODE visits
                                              5:  #SCNODE visits
                                              6:  #CNODE visits (LC/SC)
                                              7:  #LMNODE visits
                                              8:  #SMNODE visits
                                              9:  #MNODE visits (LM/SM)
                                              10: #MONODE visits
                                              11: #CACHE visits (DNODE,CNODE) exc: CNDRD,MPHIDX
                                              12: #CACHE visits (DNODE,CNODE)+(CNDRD,MPHIDX)
                                              13: #MEMORY visits (MNODE+MONODE)
                                              14: #CNDRDs detected (occur for SCNODE->*MNODE transitions)
                                              15: #MPHIDX detected (occur for ->LMNODE transitions)
                                              16: #RESCANs detected (occur when HASH collision is detected)
                                              17: #GWALK STALLs detected - Packet data/Result Buffer
                                              18: #GWALK DTE cycles (all DTE-GNT[3a])
                                              19: #CLOAD DTE cycles
                                              20: #MLOAD DTE cycles
                                              21: #cycles waiting for Memory Response Data
                                              22: #cycles waiting in resource stall state (waiting for packet data or result buffer space)
                                              23: #cycles waiting in resource pending state
                                              24: #RWORD1+ writes
                                              25: #DTE-VLD cycles
                                              26: #DTE Transitions detected (see DFA_PFC_GCTL[SNODE,ENODE] registers
                                              27: #GWALK Instructions
                                              28: #CLOAD Instructions
                                              29: #MLOAD Instructions
                                              30: #GFREE Instructions (== #GFREE DTE cycles)
                                              31: RESERVED
                                              32: #DTE-Busy cycles (ALL DTE-GNT strobes)

 <63:14> NS        RAZ       NS       NS     RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_PFC1_CNT = DFA Performance Counter #1
 * *FOR INTERNAL USE ONLY*
 * Description:
 *

     ==============================================================
     DFA_PFC1_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  PFCNT1   R/W      0x0         NS        Performance Counter #1
                                                 When DFA_PFC_GCTL[CNT1ENA]=1, the event selected
                                                 by DFA_PFC1_CTL[EVSEL] is counted.
                                                 See also DFA_PFC_GCTL[CNT1WCLR] and DFA_PFC_GCTL
                                                 [CNT1RCLR] for special clear count cases available
                                                 for SW data collection.
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_PFC2_CTL = DFA Performance Counter#2 Control
 * *FOR INTERNAL USE ONLY*
 * Description:
 *

     ==============================================================
     DFA_PFC2_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   CLNUM     R/W     0x0      0x0     Performance Counter#2 Cluster Selector
                                            When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                            is used to select/monitor the cluster# for all events
                                            associated with Performance Counter#2.
 <5:2>   CLDTE     R/W     0x0      0x0     Performance Counter#2 Cluster DTE Selector
                                            When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                            is used to select/monitor the cluster's DTE# for all events
                                            associated with Performance Counter#2.
 <7:6>   NS        RAZ     NS       NS      RESERVED
 <13:8>  EVSEL     R/W     NS       NS      Performance Counter#2 Event Selector
                                              0:  #Cycles
                                              1:  #LDNODE visits
                                              2:  #SDNODE visits
                                              3:  #DNODE visits (LD/SD)
                                              4:  #LCNODE visits
                                              5:  #SCNODE visits
                                              6:  #CNODE visits (LC/SC)
                                              7:  #LMNODE visits
                                              8:  #SMNODE visits
                                              9:  #MNODE visits (LM/SM)
                                              10: #MONODE visits
                                              11: #CACHE visits (DNODE,CNODE) exc: CNDRD,MPHIDX
                                              12: #CACHE visits (DNODE,CNODE)+(CNDRD,MPHIDX)
                                              13: #MEMORY visits (MNODE+MONODE)
                                              14: #CNDRDs detected (occur for SCNODE->*MNODE transitions)
                                              15: #MPHIDX detected (occur for ->LMNODE transitions)
                                              16: #RESCANs detected (occur when HASH collision is detected)
                                              17: #GWALK STALLs detected - Packet data/Result Buffer
                                              18: #GWALK DTE cycles (all DTE-GNT[3a])
                                              19: #CLOAD DTE cycles
                                              20: #MLOAD DTE cycles
                                              21: #cycles waiting for Memory Response Data
                                              22: #cycles waiting in resource stall state (waiting for packet data or result buffer space)
                                              23: #cycles waiting in resource pending state
                                              24: #RWORD1+ writes
                                              25: #DTE-VLD cycles
                                              26: #DTE Transitions detected (see DFA_PFC_GCTL[SNODE,ENODE] registers
                                              27: #GWALK Instructions
                                              28: #CLOAD Instructions
                                              29: #MLOAD Instructions
                                              30: #GFREE Instructions (== #GFREE DTE cycles)
                                              31: RESERVED
                                              32: #DTE-Busy cycles (ALL DTE-GNT strobes)
 <63:14> NS        RAZ       NS       NS     RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_PFC2_CNT = DFA Performance Counter #2
 * *FOR INTERNAL USE ONLY*
 * Description:
 *

     ==============================================================
     DFA_PFC2_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  PFCNT2   R/W      0x0         NS        Performance Counter #2
                                                 When DFA_PFC_GCTL[CNT2ENA]=1, the event selected
                                                 by DFA_PFC2_CTL[EVSEL] is counted.
                                                 See also DFA_PFC_GCTL[CNT2WCLR] and DFA_PFC_GCTL
                                                 [CNT2RCLR] for special clear count cases available
                                                 for SW data collection.
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_PFC3_CTL = DFA Performance Counter#3 Control
 * *FOR INTERNAL USE ONLY*
 * Description:
 *

     ==============================================================
     DFA_PFC3_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   CLNUM     R/W     0x0      0x0     Performance Counter#3 Cluster Selector
                                            When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                            is used to select/monitor the cluster# for all events
                                            associated with Performance Counter#3.
 <5:2>   CLDTE     R/W     0x0      0x0     Performance Counter#3 Cluster DTE Selector
                                            When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                            is used to select/monitor the cluster's DTE# for all events
                                            associated with Performance Counter#3.
 <7:6>   NS        RAZ     NS       NS      RESERVED
 <13:8>  EVSEL     R/W     NS       NS      Performance Counter#3 Event Selector
                                              0:  #Cycles
                                              1:  #LDNODE visits
                                              2:  #SDNODE visits
                                              3:  #DNODE visits (LD/SD)
                                              4:  #LCNODE visits
                                              5:  #SCNODE visits
                                              6:  #CNODE visits (LC/SC)
                                              7:  #LMNODE visits
                                              8:  #SMNODE visits
                                              9:  #MNODE visits (LM/SM)
                                              10: #MONODE visits
                                              11: #CACHE visits (DNODE,CNODE) exc: CNDRD,MPHIDX
                                              12: #CACHE visits (DNODE,CNODE)+(CNDRD,MPHIDX)
                                              13: #MEMORY visits (MNODE+MONODE)
                                              14: #CNDRDs detected (occur for SCNODE->*MNODE transitions)
                                              15: #MPHIDX detected (occur for ->LMNODE transitions)
                                              16: #RESCANs detected (occur when HASH collision is detected)
                                              17: #GWALK STALLs detected - Packet data/Result Buffer
                                              18: #GWALK DTE cycles (all DTE-GNT[3a])
                                              19: #CLOAD DTE cycles
                                              20: #MLOAD DTE cycles
                                              21: #cycles waiting for Memory Response Data
                                              22: #cycles waiting in resource stall state (waiting for packet data or result buffer space)
                                              23: #cycles waiting in resource pending state
                                              24: #RWORD1+ writes
                                              25: #DTE-VLD cycles
                                              26: #DTE Transitions detected (see DFA_PFC_GCTL[SNODE,ENODE] registers
                                              27: #GWALK Instructions
                                              28: #CLOAD Instructions
                                              29: #MLOAD Instructions
                                              30: #GFREE Instructions (== #GFREE DTE cycles)
                                              31: RESERVED
                                              32: #DTE-Busy cycles (ALL DTE-GNT strobes)
 <63:14> NS        RAZ       NS       NS     RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_PFC3_CNT = DFA Performance Counter #3
 * *FOR INTERNAL USE ONLY*
 * Description:
 *

     ==============================================================
     DFA_PFC3_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  PFCNT3   R/W      0x0         NS        Performance Counter #3
                                                 When DFA_PFC_GCTL[CNT3ENA]=1, the event selected
                                                 by DFA_PFC3_CTL[EVSEL] is counted.
                                                 See also DFA_PFC_GCTL[CNT3WCLR] and DFA_PFC_GCTL
                                                 [CNT3RCLR] for special clear count cases available
                                                 for SW data collection.
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_BIST0 = DFA Bist Status (per-DTC)
 *
 * Description:
 *

     ==============================================================
     DFA_BIST0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<2:0>    PDB     RO       0           0       Bist Results for PDB RAM(s) (per-cluster)
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<3>     NS       RAZ      0           0       RESERVED
<6:4>    RDF     RO       0           0       Bist Results for RWB RAM(s) (per-cluster)
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<7>     NS       RAZ      0           0       RESERVED
<9:8>    DTX     RO       0           0       Bist Results for DTX0 RAM(s)
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<11:10>  DTX1    RO       0           0       Bist Results for DTX1 RAM(s)
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<13:12>  DTX2    RO       0           0       Bist Results for DTX2 RAM(s)
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<15:14>  NS       RAZ      0           0      RESERVED
<17:16>  STX     RO       0           0       Bist Results for STX0 RAM(s)
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<19:18>  STX1    RO       0           0       Bist Results for STX1 RAM(s)
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<21:20>  STX2    RO       0           0       Bist Results for STX2 RAM(s)
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<23:22>  NS       RAZ      0           0      RESERVED
<26:24>  GFB      RO       0           0      Bist Results for GFB RAM(s) (per-cluster)
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<27>     NS       RAZ      0           0       RESERVED
<29:28>  MRP      RO       0           0      Bist Results for MRP RAM(s) (per-DLC)
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<31:30>  NS       RAZ      0           0       RESERVED
<63:32>  NS       RAZ      0           0       RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_BIST1 = DFA Bist Status (Globals)
 *
 * Description:
 *

     ==============================================================
     DFA_BIST1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      GFU      RO       0           0       Bist Results for GFU RAM
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<1>      GIB      RO       0           0       Bist Results for GIB RAM
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<2>      GIF      RO       0           0       Bist Results for GIF RAM
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<3>      NCD      RO       0           0       Bist Results for NCD RAM
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<6:4>    GUTP     RO       0           0       Bist Results for GUTP RAMs (per-cluster)
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<7>      NS       RAZ      0           0       RESERVED
<8>      GUTV     RO       0           0       Bist Results for GUTV RAM
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<9>      CRQ      RO       0           0       Bist Results for CRQ RAM
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<10>     RAM1     RO       0           0       Cluster#0 Bist Results for RAM1 RAM
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<11>     RAM2     RO       0           0       Cluster#0 Bist Results for RAM2 RAM
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<12>     RAM3     RO       0           0       Cluster#0 Bist Results for RAM3 RAM
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<13>     DC1RAM1  RO       0           0       Cluster#1 Bist Results for RAM1 RAM
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<14>     DC1RAM2  RO       0           0       Cluster#1 Bist Results for RAM2 RAM
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<15>     DC1RAM3  RO       0           0       Cluster#1 Bist Results for RAM3 RAM
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<16>     DC2RAM1  RO       0           0       Cluster#2 Bist Results for RAM1 RAM
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<17>     DC2RAM2  RO       0           0       Cluster#2 Bist Results for RAM2 RAM
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<18>     DC2RAM3  RO       0           0       Cluster#2 Bist Results for RAM3 RAM
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<19>     DLC0RAM  RO       0           0       DLC0 Bist Results
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<20>     DLC1RAM  RO       0           0       DLC1 Bist Results
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD

<63:21>  NS       RAZ      0           0       RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_DBELL = DFA Doorbell Register
 *
 * Description:
 *  NOTE: To write to the DFA_DBELL register, a device would issue an IOBST directed at the DFA with addr[34:33]=2'b00.
 *        To read the DFA_DBELL register, a device would issue an IOBLD64 directed at the DFA with addr[34:33]=2'b00.
 *
 *  NOTE: If DFA_CONFIG[DTECLKDIS]=1 (DFA-DTE clocks disabled), reads/writes to the DFA_DBELL register do not take effect.
 *  NOTE: If FUSE[TBD]="DFA DTE disable" is blown, reads/writes to the DFA_DBELL register do not take effect.
 *

     ==============================================================
     DFA_DBELL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <19:0>  DBELL    R/W      0x0         NS        Represents the cumulative total of pending
                                                 DFA instructions which SW has previously written
                                                 into the DFA Instruction FIFO (DIF) in main memory.
                                                 Each DFA instruction contains a fixed size 32B
                                                 instruction word which is executed by the DFA HW.
                                                 The DBL register can hold up to 1M-1 (2^20-1)
                                                 pending DFA instruction requests.

                                                 During a read (by SW), the 'most recent' contents
                                                 of the DFA_DBELL register are returned at the time
                                                 the NCB-INB bus is driven.

						 NOTE: Since DFA HW updates this register, its
                                                 contents are unpredictable in SW.

 <63:20> NS       RAZ      NS          NS        RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_DIFRDPTR = DFA Instruction FIFO (DIF) RDPTR Register
 *
 * Description:
 *  NOTE: To write to the DFA_DIFRDPTR register, a device would issue an IOBST directed at the DFA with addr[34:33]=2'b01.
 *        To read the DFA_DIFRDPTR register, a device would issue an IOBLD64 directed at the DFA with addr[34:33]=2'b01.
 *
 *  NOTE: If DFA_CONFIG[DTECLKDIS]=1 (DFA-DTE clocks disabled), reads/writes to the DFA_DIFRDPTR register do not take effect.
 *  NOTE: If FUSE[TBD]="DFA DTE disable" is blown, reads/writes to the DFA_DIFRDPTR register do not take effect.
 *

     ==============================================================
     DFA_DIFRDPTR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <4:0>   NS       RAZ      NS          NS        RESERVED
 <39:5>  RDPTR    R/W      0x0         NS        Represents the 32B-aligned address of the current
                                                 instruction in the DFA Instruction FIFO in main
                                                 memory. The RDPTR must be seeded by software at
                                                 boot time, and is then maintained thereafter
                                                 by DFA HW.

                                                 During the seed write (by SW), RDPTR[6:5]=0,
                                                 since DFA instruction chunks must be 128B aligned.

                                                 During a read (by SW), the 'most recent' contents
                                                 of the RDPTR register are returned at the time
                                                 the NCB-INB bus is driven.

						 NOTE: Since DFA HW updates this register, its
                                                 contents are unpredictable in SW (unless
                                                 its guaranteed that no new DoorBell register
                                                 writes have occurred and the DoorBell register is
                                                 read as zero).

 <63:40> NS       RAZ      NS          NS        RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_DIFCTL = DFA Instruction FIFO (DIF) Control Register
 *
 * Description:
 *  NOTE: To write to the DFA_DIFCTL register, a device would issue an IOBST directed at the DFA with addr[34:32]=3'b110.
 *        To read the DFA_DIFCTL register, a device would issue an IOBLD64 directed at the DFA with addr[34:32]=3'b110.
 *
 *  NOTE: This register is intended to ONLY be written once (at power-up). Any future writes could
 *  cause the DFA and FPA HW to become unpredictable.
 *
 *  NOTE: If DFA_CONFIG[DTECLKDIS]=1 (DFA-DTE clocks disabled), reads/writes to the DFA_DIFCTL register do not take effect.
 *  NOTE: If FUSE[TBD]="DFA DTE disable" is blown, reads/writes to the DFA_DIFCTL register do not take effect.
 *

     ==============================================================
     DFA_DIFCTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <8:0>  SIZE      R/W      0x3         NS        Represents the # of 32B instructions contained
                                                 within each DFA instruction chunk. At Power-on,
                                                 SW will seed the SIZE register with a fixed
                                                 chunk-size. (Must be at least 3)
                                                 DFA HW uses this field to determine the size
                                                 of each DFA instruction chunk, in order to:
                                                    a) determine when to read the next DFA
                                                       instruction chunk pointer which is
                                                       written by SW at the end of the current
                                                       DFA instruction chunk (see DFA description
                                                       of next chunk buffer Ptr for format).
                                                    b) determine when a DFA instruction chunk
                                                       can be returned to the Free Page List
                                                       maintained by the FPA HW.

 <11:9> POOL      R/W      0x0         NS        Represents the 3bit buffer pool-id  used by DFA HW
                                                 when the DFA instruction chunk is recycled back
                                                 to the Free Page List maintained by the FPA HW
                                                 (once the DFA instruction has been issued).

 <19:12> DWBCNT   R/W      0x1         NS        Represents the # of cache lines in the instruction
                                                 buffer that may be dirty and should not be
                                                 written-back to memory when the instruction
                                                 chunk is returned to the Free Page list.

                                                 NOTE: Typically SW will want to mark all DFA
                                                 Instruction memory returned to the Free Page list
                                                 as DWB (Don't WriteBack), therefore SW should
                                                 seed this register as:
                                                   DFA_DIFCTL[DWBCNT] = (DFA_DIFCTL[SIZE] + 4)/4

<25:20> MSEGBASE  R/W      0x0         NS        Memory Segmentation Base Address
                                                 For debug purposes, backdoor accesses to the DFA
                                                 memory are supported via NCB-Direct CSR accesses to
                                                 the DFA Memory REGION(if addr[34:32]=5. However due
                                                 to the existing NCB address decoding scheme, the
                                                 address only offers a 4GB extent into the DFA memory
                                                 REGION. Therefore, the MSEGBASE CSR field provides
                                                 the additional upper memory address bits to allow access
                                                 to the full extent of memory (128GB MAX).

                                                 For DFA Memory REGION read NCB-Direct CSR accesses, the
                                                 38bit L2/DRAM memory byte address is generated as follows:
                                                   memaddr[37:0] = {DFA_DIFCTL[MSEGBASE],ncb_addr[31:3],3'b0}

                                                 NOTE: See the upper 6bits of the memory address are sourced
                                                 from DFA_DIFCTL[MSEGBASE] CSR field. The lower 4GB address
                                                 offset is directly referenced using the NCB address bits during
                                                 the reference itself.

                                                 NOTE: The DFA_DIFCTL[MSEGBASE] is shared amongst all references.
                                                 As such, if multiple PPs are accessing different segments in memory,
                                                 their must be a SW mutual exclusive lock during each DFA Memory
                                                 REGION access to avoid collisions between PPs using the same MSEGBASE
                                                 CSR field.

                                                 NOTE: See also DFA_ERROR[DFANXM] programmable interrupt which is
                                                 flagged if SW tries to access non-existent memory space (address hole
                                                 or upper unused region of 38bit address space).

 <63:26> NS       RAZ      NS          NS        RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_MEMHIDAT = DFA NCB-Direct CSR access to DFM Memory Space (High QW)
 *
 * Description:
 * DFA supports NCB-Direct CSR acccesses to DFM Memory space for debug purposes. Unfortunately, NCB-Direct accesses
 * are limited to QW-size(64bits), whereas the minimum access granularity for DFM Memory space is OW(128bits). To
 * support writes to DFM Memory space, the Hi-QW of data is sourced from the DFA_MEMHIDAT register. Recall, the
 * OW(128b) in DDR3 memory space is fixed format:
 *     OWDATA[127:118]: OWECC[9:0] 10bits of in-band OWECC SEC/DED codeword
 *                      This can be precomputed/written by SW OR
 *                      if DFM_FNTCTL[ECC_WENA]=1, DFM hardware will auto-compute the 10b OWECC and place in the
 *                      OWDATA[127:118] before being written to memory.
 *     OWDATA[117:0]:   Memory Data (contains fixed MNODE/MONODE arc formats for use by DTEs(thread engines).
 *                      Or, a user may choose to treat DFM Memory Space as 'scratch pad' in which case the
 *                      OWDATA[117:0] may contain user-specified information accessible via NCB-Direct CSR mode
 *                      accesses to DFA Memory Space.
 *  NOTE: To write to the DFA_MEMHIDAT register, a device would issue an IOBST directed at the DFA with addr[34:32]=3'b111.
 *        To read the DFA_MEMHIDAT register, a device would issue an IOBLD64 directed at the DFA with addr[34:32]=3'b111.
 *
 *  NOTE: If DFA_CONFIG[DTECLKDIS]=1 (DFA-DTE clocks disabled), reads/writes to the DFA_MEMHIDAT register do not take effect.
 *  NOTE: If FUSE[TBD]="DFA DTE disable" is blown, reads/writes to the DFA_MEMHIDAT register do not take effect.
 *
 * NOTE: PLEASE REMOVE DEFINITION FROM o68 HRM
 *

     ==============================================================
     DFA_MEMHIDAT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   HIDAT    R/W        NS       NS     DFA Hi-QW of Write data during NCB-Direct DFM DDR3
                                             Memory accesses.
                                             All DFM DDR3 memory accesses are OW(128b) references,
                                             and since NCB-Direct Mode writes only support QW(64b),
                                             the Hi QW of data must be sourced from a CSR register.
                                             NOTE: This single register is 'shared' for ALL DFM
                                             DDR3 Memory writes.

					     For o68: This register is UNUSED. Treat as spare bits.
                                             NOTE: PLEASE REMOVE DEFINITION FROM o68 HRM

----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_BIST_STATUS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:45> NS       RAZ      NS          NS        Reserved				            |
 <44:0>  BIST     RO       0x0         0         BIST Results.                                      |
                                                  HW sets a bit in BIST for for memory that fails   |
						  BIST.						    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_INT_REG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:28> NS         RAZ    NS          NS        Reserved					    |
 <27:26> NS         RAZ    NS          NS        Reserved for SLI port expansion                    |
 <25>    SPRT1_RST  R/W1C  0x0         0         DMA instruction was dropped because the source or  |
						  destination port was in reset.		    |
						 this bit is set.				    |
 <24>    SPRT0_RST  R/W1C  0x0         0         DMA instruction was dropped because the source or  |
						  destination port was in reset.		    |
						 this bit is set.				    |
 <23>    NS         RAZ    NS          NS        Reserved				            |
 <22>    REQ_BADFIL R/W1C  0x0         0         DMA instruction unexpected fill         	    |
						  Instruction fill when none outstanding.	    |
 <21>    REQ_INULL  R/W1C  0x0         0         DMA instruction filled with NULL pointer	    |
						  Next pointer was NULL.			    |
 <20>    REQ_ANULL  R/W1C  0x0         0         DMA instruction filled with bad instruction	    |
						  Fetched instruction word was 0.		    |
 <19>    REQ_UNDFLW R/W1C  0x0         0         DMA instruction FIFO underflow   		    |
						  DPI tracks outstanding instructions fetches.	    |
						  Interrupt will fire when FIFO underflows.	    |
 <18>    REQ_OVRFLW R/W1C  0x0         0         DMA instruction FIFO overflow    		    |
						  DPI tracks outstanding instructions fetches.	    |
						  Interrupt will fire when FIFO overflows.	    |
 <17>    REQ_BADLEN R/W1C  0x0         0         DMA instruction fetch with length		    |
						  Interrupt will fire if DPI forms an instruction   |
						  fetch with length of zero.			    |
 <16>    REQ_BADADR R/W1C  0x0         0         DMA instruction fetch with bad pointer		    |
						  Interrupt will fire if DPI forms an instruction   |
						  fetch to the NULL pointer.			    |
 <15:8>  DMADBO     R/W1C  0x0         0         DMAx doorbell overflow.                            |
						  DPI has a 32-bit counter for each request's queue |
						  outstanding doorbell counts. Interrupt will fire  |
						  if the count overflows.			    |
 <7:2>   NS         RAZ    NS          NS        Reserved				            |
 <1>     NFOVR      R/W1C  0x0         0         CSR Fifo Overflow                                  |
						  DPI can store upto 16 CSR request.  The FIFO will |
						  overflow if that number is exceeded.		    |
 <0>     NDERR      R/W1C  0x0         0         NCB Decode Error                                   |
						  DPI received a NCB transaction on the outbound    |
						  bus to the DPI deviceID, but the command was not  |
						  recognized.					    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_INT_EN Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:28> NS         RAZ    NS          NS        Reserved				            |
 <27:26> NS         R/W    NS          NS        Reserved for SLI port expansion                    |
 <25>    SPRT1_RST  R/W    0x0         0         DMA instruction was dropped because the source or  |
						  destination port was in reset.		    |
						 this bit is set.				    |
 <24>    SPRT0_RST  R/W    0x0         0         DMA instruction was dropped because the source or  |
						  destination port was in reset.		    |
						 this bit is set.				    |
 <23>    NS         R/W    NS          NS        Reserved				            |
 <22>    REQ_BADFIL R/W    0x0         0         DMA instruction unexpected fill         	    |
 <21>    REQ_INULL  R/W    0x0         0         DMA instruction filled with NULL pointer	    |
 <20>    REQ_ANULL  R/W    0x0         0         DMA instruction filled with bad instruction	    |
 <19>    REQ_UNDFLW R/W    0x0         0         DMA instruction FIFO underflow   		    |
 <18>    REQ_OVRFLW R/W    0x0         0         DMA instruction FIFO overflow    		    |
 <17>    REQ_BADLEN R/W    0x0         0         DMA instruction fetch with length		    |
 <16>    REQ_BADADR R/W    0x0         0         DMA instruction fetch with bad pointer		    |
 <15:8>  DMADBO     R/W    0x0         0         DMAx doorbell overflow.                            |
 <7:2>   NS         R/W    0x0         0         Reserved				            |
 <1>     NFOVR      R/W    0x0         0         CSR Fifo Overflow                                  |
 <0>     NDERR      R/W    0x0         0         NCB Decode Error                                   |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved				            |
 <1>     CLK      RO       0x0         1         Status bit that indicates that the clks are running|
 <0>     EN       R/W      0x0         1         Turns on the DMA and Packet state machines         |
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_DMA_CONTROL = DMA Control Register
 *
 * Controls operation of the DMA IN/OUT.
 *

     ==============================================================
     DPI_DMA_CONTROL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:61> NS       RAZ      NS          NS        Reserved				            |
 <60>    PKT_EN1  R/W      0x0         NS        Enables the 2nd packet interface.		    |
						  When the packet interface is enabled, engine 4    |
						  is used for packets and is not available for DMA. |
						  The packet interfaces must be enabled in order.   |
						  When PKT_EN1=1, then PKT_EN=1.                    |
						  When PKT_EN1=1, then DMA_ENB<4>=0.		    |
 <59>    FFP_DIS  R/W      0x0         0x0       Force forward progress disable			    |
						  The DMA engines will compete for shared resources.|
						  If the HW detects that particular engines are not |
						  able to make requests to an interface, the HW	    |
						  will periodically trade-off throughput for	    |
						  fairness.					    |
 <58>    COMMIT_MODE R/W   0x0         0x1       DMA Engine Commit Mode				    |
												    |
						  When COMMIT_MODE=0, DPI considers an instruction  |
                                                  complete when the HW internally generates the	    |
						  final write for the current instruction.	    |
												    |
						  When COMMIT_MODE=1, DPI additionally waits for    |
						  the final write to reach the interface coherency  |
						  point to declare the instructions complete.	    |
												    |
						  Please note: when COMMIT_MODE == 0, DPI may not   |
						  follow the HRM ordering rules.		    |
												    |
						  DPI hardware performance may be better with	    |
						  COMMIT_MODE == 0 than with COMMIT_MODE == 1 due   |
						  to the relaxed ordering rules.		    |
												    |
						  If the HRM ordering rules are required, set	    |
						  COMMIT_MODE == 1.				    |
												    |
 <57>    PKT_HP   RO       0x0         0x0       High-Priority Mode for Packet Interface.  	    |
					          This mode has been deprecated.                    |
 <56>    PKT_EN   R/W      0x0         NS        Enables 1st the packet interface.		    |
						  When the packet interface is enabled, engine 5    |
						  is used for packets and is not available for DMA. |
						  When PKT_EN=1, then DMA_ENB<5>=0.		    |
						  When PKT_EN1=1, then PKT_EN=1.                    |
 <55:54> NS       RAZ      NS          NS        Reserved				            |
 <53:48> DMA_ENB  R/W      0x0         0x3f      DMA engine enable. Enables the operation of the    |
                                                  DMA engine. After being enabled an engine should  |
						  not be disabled while processing instructions.    |
						  When PKT_EN=1,  then DMA_ENB<5>=0.		    |
						  When PKT_EN1=1, then DMA_ENB<4>=0.		    |
 <47:34> NS       RAZ      NS          NS        Reserved				            |
 <33>    B0_LEND  R/W      0x0         0         When set '1' and the DPI is in the mode to write   |
                                                  0 to L2C memory when a DMA is done, the address   |
                                                  to be written to will be treated as a Little	    |
                                                  Endian address.				    |
 <32>    DWB_DENB R/W      0x0         1         When set '1', DPI will send a value in the DWB	    |
                                                  field for a free page operation for the memory    |
                                                  that contained the data.			    |
 <31:23> DWB_ICHK R/W      0x0         NS        When Instruction Chunks for DMA operations are	    |
                                                  freed this value is used for the DWB field of the |
                                                  operation.					    |
 <22:20> FPA_QUE  R/W      0x0         NS        The FPA queue that the instruction-chunk page will |
                                                  be returned to when used.			    |
 <19>    O_ADD1   R/W      0x0         1         When set '1' 1 will be added to the DMA counters,  |
                                                  if '0' then the number of bytes in the dma	    |
                                                  transfer will be added to the count register.	    |
 <18>    O_RO     R/W      0x0         NS        Relaxed Ordering Mode for DMA.			    |
 <17>    O_NS     R/W      0x0         NS        Nosnoop For DMA.				    |
 <16:15> O_ES     R/W      0x0         NS        Endian Swap Mode for DMA.			    |
 <14>    O_MODE   R/W      0x0         1         Select PCI_POINTER MODE to be used.		    |
						  0=DPTR format 1 is used			    |
						    use register values for address and pointer	    |
						    values for ES, NS, RO			    |
						  1=DPTR format 0 is used			    |
						    use pointer values for address and register	    |
						    values for ES, NS, RO			    |
 <13:0>  NS       RAZ      NS          NS        Reserved                                           |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_REQ_GBL_EN Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |
 <7:0>   QEN      R/W      0xff        0xff      Indicates which instruction queues are enabled and |
						  can dispatch instructions to a requesting engine. |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_REQ_ERR_RSP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |
 <7:0>   QERR     R/W1C    0x0         0x0       Indicates which instruction queue received an      |
						  ErrorResponse from the I/O subsystem.		    |
						  SW must clear the bit before the the cooresponding|
						  instruction queue will continue processing	    |
						  instructions if DPI_REQ_ERR_RSP_EN[EN] is set.    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_REQ_ERR_RST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |
 <7:0>   QERR     R/W1C    0x0         0x0       Indicates which instruction queue dropped an       |
						  instruction because the source or destination	    |
						  was in reset.					    |
						  SW must clear the bit before the the cooresponding|
						  instruction queue will continue processing	    |
						  instructions if DPI_REQ_ERR_RST_EN[EN] is set.    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_REQ_ERR_RSP_EN Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |
 <7:0>   EN       R/W      0xff        0xff      Indicates which instruction queues should stop	    |
						  dispatching instructions when an  ErrorResponse   |
						  is received from the I/O subsystem.		    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_REQ_ERR_RST_EN Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |
 <7:0>   EN       R/W      0xff        0xff      Indicates which instruction queues should stop	    |
						  dispatching instructions when an instruction	    |
						  is dropped because the source or destination port |
						  is in reset.					    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_PKT_ERR_RSP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved				            |
 <0>     PKTERR   R/W1C    0x0         0x0       Indicates that an ErrorResponse was received from  |
						  the I/O subsystem.				    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_DMA_ENG(0..5)_EN Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |
 <7:0>   QEN      R/W      0xff        0xff      Controls which logical instruction queues can be   |
						  serviced by the DMA engine. Setting QEN==0	    |
						  effectively disables the engine.		    |
                                                  When DPI_DMA_CONTROL[PKT_EN] = 1, then            |
                                                  DPI_DMA_ENG5_EN[QEN] must be zero.                |
                                                  When DPI_DMA_CONTROL[PKT_EN1] = 1, then           |
                                                  DPI_DMA_ENG4_EN[QEN] must be zero.                |
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_DMA_DBELL[0..7] = DMA Door Bell
 *
 * The door bell register for DMA[0..7] queue.
 *

     ==============================================================
     DPI_DMA(0..7)_DBELL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved
 <15:0>  DBELL    WO       0x0         NS        The value written to this register is added to the
                                                 number of 8byte words to be read and processes for
                                                 the low priority dma queue.
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_DMA[0..7]_IBUFF_SADDR = DMA Instruction Buffer Starting Address
 *
 * The address to start reading Instructions from for DMA[0..7].
 *

     ==============================================================
     DPI_DMA(0..7)_IBUFF_SADDR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:62> NS       RAZ      NS          NS        Reserved					    |
 <61:48> CSIZE    R/W      0x40        NS        The size in 8B words of the DMA Instruction Chunk. |
                                                  This value should only be written at known times  |
						  in order to prevent corruption of the instruction |
						  queue.  The minimum CSIZE is 16 (one cacheblock). |
 <47:41> NS       RAZ      NS          NS        Reserved					    |
 <40>    IDLE     RO       0x1         NS        DMA Request Queue is IDLE                          |
 <39:7>  SADDR    R/W      0x0         NS        The 128 byte aligned starting or chunk address.    |
						  SADDR is address bits 39:7 of the starting	    |
						  instructions address. When new chunks are fetched |
						  by the HW, SADDR will be updated to reflect the   |
						  address of the current chunk.			    |
						  A write to SADDR resets both the queue's doorbell |
						  (DPI_DMAx_COUNTS[DBELL) and its tail pointer	    |
						  (DPI_DMAx_NADDR[ADDR]).			    |
 <6:0>   NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_DMA[0..7]_COUNTS = DMA Instruction Counts
 *
 * Values for determing the number of instructions for DMA[0..7] in the DPI.
 *

     ==============================================================
     DPI_DMA(0..7)_COUNTS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:39> NS       RAZ      NS          NS        Reserved					    |
 <38:32> FCNT     RO       0x0         0         Number of words in the Instruction FIFO locally    |
						  cached within DPI.				    |
 <31:0>  DBELL    RO       0x0         0         Number of available words of Instructions to read. |
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_DMA[0..7]_NADDR = DMA Next Ichunk Address
 *
 * Place DPI will read the next Ichunk data from.
 *

     ==============================================================
     DPI_DMA(0..7)_NADDR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:40> NS       RAZ      NS          NS        Reserved
 <39:0>  ADDR     RO       0x0         NS        The next L2C address to read DMA# instructions
                                                 from.
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_DMA[0..7]_REQBNK0 = DMA Request State Bank0
 *
 * Current contents of the request state machine - bank0
 *

     ==============================================================
     DPI_DMA(0..7)_REQBNK0 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  STATE    RO       0x0         NS        State
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_DMA[0..7]_REQBNK1 = DMA Request State Bank1
 *
 * Current contents of the request state machine - bank1
 *

     ==============================================================
     DPI_DMA(0..7)_REQBNK1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  STATE    RO       0x0         NS        State
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_PINT_INFO = DPI Packet Interrupt Info
 *
 * DPI Packet Interrupt Info.
 *

     ==============================================================
     DPI_PINT_INFO Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:14> NS       RAZ      NS          NS        Reserved					    |
 <13:8>  IINFO    RO       0x0         NS        Packet Instruction Doorbell count overflow info    |
 <7:6>   NS       RAZ      NS          NS        Reserved					    |
 <5:0>   SINFO    RO       0x0         NS        Packet Scatterlist Doorbell count overflow info    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_REQ_ERR_SKIP_COMP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:24> NS       RAZ      NS          NS        Reserved				            |
 <23:16> EN_RST   R/W      0x0         0x0       Indicates which instruction queue should skip the  |
						  completion  phase once an port reset is	    |
						  detected as indicated by DPI_REQ_ERR_RST.  All    |
						  completions to the effected instruction queue	    |
						  will be skipped as long as			    |
						  DPI_REQ_ERR_RSP[QERR<ique>] & EN_RSP<ique> or	    |
						  DPI_REQ_ERR_RST[QERR<ique>] & EN_RST<ique> are    |
						  set.						    |
 <15:8>  NS       RAZ      NS          NS        Reserved				            |
 <7:0>   EN_RSP   R/W      0x0         0x0       Indicates which instruction queue should skip the  |
						  completion  phase once an ErrorResponse is	    |
						  detected as indicated by DPI_REQ_ERR_RSP.  All    |
						  completions to the effected instruction queue	    |
						  will be skipped as long as			    |
						  DPI_REQ_ERR_RSP[QERR<ique>] & EN_RSP<ique> or	    |
						  DPI_REQ_ERR_RST[QERR<ique>] & EN_RST<ique> are    |
						  set.						    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_ENG(0..5)_BUF Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:37> NS       RAZ      NS          NS        Reserved					    |
 <36:32> COMPBLKS RO       NS          NS        Computed engine block size			    |
 <31:9>  NS       RAZ      NS          NS        Reserved					    |
 <8:4>   BASE     RO       NS          NS        The base address in 512B blocks of the engine fifo |
 <3:0>   BLKS     R/W      0x2         NS        The size of the engine fifo			    |
						  Legal values are 0-10.			    |
						  0  = Engine is disabled			    |
						  1  = 0.5KB buffer				    |
						  2  = 1.0KB buffer				    |
						  3  = 1.5KB buffer				    |
						  4  = 2.0KB buffer				    |
						  5  = 2.5KB buffer				    |
						  6  = 3.0KB buffer				    |
						  7  = 3.5KB buffer				    |
						  8  = 4.0KB buffer				    |
						  9  = 6.0KB buffer				    |
						  10 = 8.0KB buffer				    |
 Notes:
 The total amount of storage allocated to the 6 DPI DMA engines (via DPI_ENG*_BUF[BLKS]) must not exceed 16KB.
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_SLI_PRTx_CFG = DPI SLI Port Configuration
 *
 * Configures the Max Read Request Size, Max Paylod Size, and Max Number of SLI Tags in use
 *

     ==============================================================
     DPI_SLI_PRT(0..1)_CFG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:25> NS       RAZ      NS          NS        Reserved					    |
 <24>    HALT     RO       0           0         When set, HALT indicates that the MAC has detected |
                                                  a reset condition. No further instructions that   |
                                                  reference the MAC from any instruction Q will be  |
                                                  issued until the MAC comes out of reset and HALT  |
                                                  is cleared in SLI_CTL_PORTx[DIS_PORT].            |
 <23:21> NS       RAZ      NS          NS        Reserved					    |
 <20>    QLM_CFG  RO       NS          NS        Read only copy of the QLM CFG pin		    |
						  Since QLM_CFG is simply a copy of the QLM CFG	    |
						  pins, it may reflect values that are not normal   |
						  for DMA or packet operations. QLM_CFG does not    |
						  indicate if a port is disabled.		    |
						  MIO_QLMx_CFG can be used for more complete QLM    |
						  configuration	information.			    |
						  0 = MAC is PCIe				    |
						  1 = Reserved					    |
 <19:17> NS       RAZ      NS          NS        Reserved					    |
 <16>    RD_MODE  R/W      0x0         0x0       Read Mode					    |
						  0=Exact Read Mode				    |
						    The HW reads on a				    |
						    4B granularity.  In this mode, the HW may break |
						    a given read into 3 operations to satisify	    |
						    PCIe rules.					    |
						  1=Block Mode					    |
						    The HW will read more data than requested in    |
						    order to minimize the number of operations	    |
						    necessary to complete the operation.	    |
						    The memory region must be memory like.	    |
 <15:14> NS       RAZ      NS          NS        Reserved					    |
 <13:8>  MOLR     R/W      0x20        0x20      Max Outstanding Load Requests                      |
                                                  Limits the number of oustanding load requests on  |
						  the port by restricting the number of tags        |
						  used by the SLI to track load responses.  This    |
						  value can range from 1 to 32. Setting a value of  |
						  0 will halt all read traffic to the port.  There  |
						  are no restrictions on when this value            |
                                                  can be changed.   				    |
 <7>     MPS_LIM  R/W      0x0         0x0       MAC memory space write requests cannot cross the   |
                                                  (naturally-aligned) MPS boundary.                 |
                                                  When clear, DPI is allowed to issue a MAC memory  |
                                                  space read that crosses the naturally-aligned     |
                                                  boundary of size defined by MPS. (DPI will still  |
                                                  only cross the boundary when it would eliminate a |
                                                  write by doing so.)                               |
                                                  When set, DPI will never issue a MAC memory space |
                                                  write that crosses the naturally-aligned boundary |
                                                  of size defined by MPS.                           |
 <6:5>   NS       RAZ      NS          NS        Reserved					    |
 <4>     MPS      R/W      0x0         0x0       Max Payload Size                                   |
                                                         0 = 128B                                   |
                                                         1 = 256B                                   |
                                                 This MPS size must not exceed			    |
                                                       the size selected by PCIE*_CFG030[MPS].      |
 <3>     MRRS_LIM R/W      0x0         0x0       MAC memory space read requests cannot cross the    |
                                                  (naturally-aligned) MRRS boundary.                |
                                                  When clear, DPI is allowed to issue a MAC memory  |
                                                  space read that crosses the naturally-aligned     |
                                                  boundary of size defined by MRRS. (DPI will still |
                                                  only cross the boundary when it would eliminate a |
                                                  read by doing so.)                                |
                                                  When set, DPI will never issue a MAC memory space |
                                                  read that crosses the naturally-aligned boundary  |
                                                  of size defined by MRRS.
 <2>     NS       RAZ      NS          NS        Reserved					    |
 <1:0>   MRRS     R/W      0x0         0x0       Max Read Request Size                              |
                                                         0 = 128B                                   |
                                                         1 = 256B                                   |
                                                         2 = 512B                                   |
                                                         3 = 1024B                                  |
                                                 This MRRS size must not exceed			    |
                                                       the size selected by PCIE*_CFG030[MRRS].     |
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_SLI_PRTx_ERR = DPI SLI Port Error Info
 *
 * Logs the Address and Request Queue associated with the reported SLI error response
 *

     ==============================================================
     DPI_SLI_PRT(0..1)_ERR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:3>  ADDR     RO       0x0         NS        Address of the failed load request.	            |
						  Address is locked along with the		    |
						  DPI_SLI_PRTx_ERR_INFO register.		    |
						  See the DPI_SLI_PRTx_ERR_INFO[LOCK] description   |
						  for further information.			    |
 <2:0>   NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_SLI_PRTx_ERR_INFO = DPI SLI Port Error Info
 *
 * Logs the Address and Request Queue associated with the reported SLI error response
 *

     ==============================================================
     DPI_SLI_PRT(0..1)_ERR_INFO Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:9>  NS       RAZ      NS          NS        Reserved					    |
 <8>     LOCK     RO       0x0         NS        DPI_SLI_PRTx_ERR and DPI_SLI_PRTx_ERR_INFO have    |
						  captured and locked contents.			    |
						  When Octeon first detects an ErrorResponse, the   |
						  TYPE, REQQ, and ADDR of the error is saved and an |
						  internal lock state is set so the data associated |
						  with the initial error is perserved.		    |
						  Subsequent ErrorResponses will optionally raise   |
						  an interrupt, but will not modify the TYPE, REQQ, |
						  or ADDR fields until the internal lock state is   |
						  cleared.					    |
						  SW can clear the internal lock state by writting  |
						  a '1' to the appropriate bit in either	    |
						  DPI_REQ_ERR_RSP or DPI_PKT_ERR_RSP depending on   |
						  the TYPE field.				    |
						  Once the internal lock state is cleared,	    |
						  the next ErrorResponse will set the TYPE, REQQ,   |
						  and ADDR for the new transaction.		    |
 <7:5>   NS       RAZ      NS          NS        Reserved					    |
 <4>     TYPE     RO       0x0         NS        Type of transaction that caused the ErrorResponse. |
						  0=DMA Instruction				    |
						  1=PKT Instruction				    |
 <3>     NS       RAZ      NS          NS        Reserved					    |
 <2:0>   REQQ     RO       0x0         NS        Request queue that made the failed load request.   |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_INFO_REG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS         RAZ    NS          NS        Reserved					    |
 <7:4>   FFP        R/W1C  0x0         0         Force Forward Progress Indicator                   |
 <3:2>   NS         RAZ    NS          NS        Reserved					    |
 <1>     NCB        R/W1C  0x0         0         NCB Register Access                                |
						  This interrupt will fire in normal operation	    |
						  when SW reads a DPI register through the NCB	    |
						  interface.					    |
 <0>     RSL        R/W1C  0x0         0         RSL Register Access                                |
						  This interrupt will fire in normal operation	    |
						  when SW reads a DPI register through the RSL	    |
						  interface.					    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_DMA(0..7)_IFLIGHT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:3> NS       RAZ       NS          NS        Reserved					    |
 <2:0>  CNT      R/W       0x6         0x6       The number of instructions from a given queue that |
						  can be inflight to the DMA engines at a time.	    |
						  Reset value matches the number of DMA engines.    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_DMA(0..7)_ERR_RSP_STATUS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6> NS       RAZ       NS          NS        Reserved					    |
 <5:0>  STATUS   R/W1C     0x0         0x0       QUE captures the ErrorResponse status of the last  |
						  6 instructions for each instruction queue.	    |
						  STATUS<5> represents the status for first	    |
						  instruction in instruction order while STATUS<0>  |
						  represents the last or most recent instruction.   |
						  If STATUS<n> is set, then the nth instruction in  |
						  the given queue experienced an ErrorResponse.	    |
						  Otherwise, it completed normally.		    |
----------------------------------------------------------------------------------------------------
===



 *
 *                  FPA_FPF0_MARKS = FPA's Queue 0 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 0. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75)
 *

     ==============================================================
     FPA_FPF0_MARKS Type=RSL
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  FPF_RD   R/W      0x40        0         When the number of free-page-pointers in a
                                                 queue drops below this value and there are
                                                 free-page-pointers in DRAM, the FPA will
                                                 read one page (32 pointers) from DRAM.
                                                 This maximum value for this field should be
                                                 FPA_FPF0_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
 <23:12> FPF_WR   R/W      0xC4        0         When the number of free-page-pointers in a
                                                  queue exceeds this value the FPA will write
                                                  32-page-pointers of that queue to DRAM.
                                                 The MAX value for this field should be
 	                                         FPA_FPF0_SIZE[FPF_SIZ]-2.
 <63:24> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF1_MARKS = FPA's Queue 1 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 1. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75)
 *

     ==============================================================
     FPA_FPF1_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>  FPF_RD   R/W      0x40        0         When the number of free-page-pointers in a
                                                  queue drops below this value and there are
                                                  free-page-pointers in DRAM, the FPA will
                                                  read one page (32 pointers) from DRAM.
                                                 This maximum value for this field should be
                                                 FPA_FPF1_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
 <21:11> FPF_WR   R/W      0xA4        0         When the number of free-page-pointers in a
                                                  queue exceeds this value the FPA will write
                                                  32-page-pointers of that queue to DRAM.
                                                 The MAX value for this field should be
 	                                         FPA_FPF1_SIZE[FPF_SIZ]-2.
 <63:22> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF2_MARKS = FPA's Queue 2 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 2. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75)
 *

     ==============================================================
     FPA_FPF2_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>  FPF_RD   R/W      0x40        0         When the number of free-page-pointers in a
                                                  queue drops below this value and there are
                                                  free-page-pointers in DRAM, the FPA will
                                                  read one page (32 pointers) from DRAM.
                                                 This maximum value for this field should be
                                                 FPA_FPF2_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
 <21:11> FPF_WR   R/W      0xA4        0         When the number of free-page-pointers in a
                                                  queue exceeds this value the FPA will write
                                                  32-page-pointers of that queue to DRAM.
                                                 The MAX value for this field should be
 	                                         FPA_FPF2_SIZE[FPF_SIZ]-2.
 <63:22> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF3_MARKS = FPA's Queue 3 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 3. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75)
 *

     ==============================================================
     FPA_FPF3_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>  FPF_RD   R/W      0x40        0         When the number of free-page-pointers in a
                                                  queue drops below this value and there are
                                                  free-page-pointers in DRAM, the FPA will
                                                  read one page (32 pointers) from DRAM.
                                                 This maximum value for this field should be
                                                 FPA_FPF3_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
 <21:11> FPF_WR   R/W      0xA4        0         When the number of free-page-pointers in a
                                                  queue exceeds this value the FPA will write
                                                  32-page-pointers of that queue to DRAM.
                                                 The MAX value for this field should be
 	                                         FPA_FPF3_SIZE[FPF_SIZ]-2.
 <63:22> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF4_MARKS = FPA's Queue 4 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 4. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75)
 *

     ==============================================================
     FPA_FPF4_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>  FPF_RD   R/W       0x40        0        When the number of free-page-pointers in a
                                                  queue drops below this value and there are
                                                  free-page-pointers in DRAM, the FPA will
                                                  read one page (32 pointers) from DRAM.
                                                 This maximum value for this field should be
                                                 FPA_FPF4_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
 <21:11> FPF_WR   R/W       0xA4        0        When the number of free-page-pointers in a
                                                  queue exceeds this value the FPA will write
                                                  32-page-pointers of that queue to DRAM.
                                                 The MAX value for this field should be
 	                                         FPA_FPF4_SIZE[FPF_SIZ]-2.
 <63:22> NS       RAZ       NS          NS       Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF5_MARKS = FPA's Queue 5 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 5. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75)
 *

     ==============================================================
     FPA_FPF5_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>  FPF_RD   R/W       0x40        0        When the number of free-page-pointers in a
                                                  queue drops below this value and there are
                                                  free-page-pointers in DRAM, the FPA will
                                                  read one page (32 pointers) from DRAM.
                                                 This maximum value for this field should be
                                                 FPA_FPF5_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
 <21:11> FPF_WR   R/W       0xA4        0        When the number of free-page-pointers in a
                                                  queue exceeds this value the FPA will write
                                                  32-page-pointers of that queue to DRAM.
                                                 The MAX value for this field should be
 	                                         FPA_FPF5_SIZE[FPF_SIZ]-2.
 <63:22> NS       RAZ       NS          NS       Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF6_MARKS = FPA's Queue 6 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 6. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75)
 *

     ==============================================================
     FPA_FPF6_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>   FPF_RD   R/W      0x40        0        When the number of free-page-pointers in a
                                                  queue drops below this value and there are
                                                  free-page-pointers in DRAM, the FPA will
                                                  read one page (32 pointers) from DRAM.
                                                 This maximum value for this field should be
                                                 FPA_FPF6_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
 <21:11>  FPF_WR   R/W      0xA4        0        When the number of free-page-pointers in a
                                                  queue exceeds this value the FPA will write
                                                  32-page-pointers of that queue to DRAM.
                                                 The MAX value for this field should be
 	                                         FPA_FPF6_SIZE[FPF_SIZ]-2.
 <63:22>  NS       RAZ      NS          NS       Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF7_MARKS = FPA's Queue 7 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 7. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75)
 *

     ==============================================================
     FPA_FPF7_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>  FPF_RD    R/W     0x40        0         When the number of free-page-pointers in a
                                                  queue drops below this value and there are
                                                  free-page-pointers in DRAM, the FPA will
                                                  read one page (32 pointers) from DRAM.
                                                 This maximum value for this field should be
                                                 FPA_FPF7_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
 <21:11> FPF_WR    R/W     0xA4        0         When the number of free-page-pointers in a
                                                  queue exceeds this value the FPA will write
                                                  32-page-pointers of that queue to DRAM.
                                                 The MAX value for this field should be
 	                                         FPA_FPF7_SIZE[FPF_SIZ]-2.
 <63:22> NS        RAZ      NS         NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_INT_SUM = FPA's Interrupt Summary Register
 *
 * Contains the different interrupt summary bits of the FPA.
 *

     ==============================================================
     FPA_INT_SUM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     FED0_SBE R/W1C     0           0        Set when a Single Bit Error is detected in FPF0.
 <1>     FED0_DBE R/W1C     0           0        Set when a Double Bit Error is detected in FPF0.
 <2>     FED1_SBE R/W1C     0           0        Set when a Single Bit Error is detected in FPF1.
 <3>     FED1_DBE R/W1C     0           0        Set when a Double Bit Error is detected in FPF1.
 <4>     Q0_UND   R/W1C     0           0        Set when a Queue0 page count available goes
                                                 negative.
 <5>     Q0_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and
                                                 the count available is greater than pointers
                                                 present in the FPA.
 <6>     Q0_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in
                                                 the L2C does not have the FPA owner ship bit set.
 <7>     Q1_UND   R/W1C     0           0        Set when a Queue0 page count available goes
                                                 negative.
 <8>     Q1_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and
                                                 the count available is greater than pointers
                                                 present in the FPA.
 <9>     Q1_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in
                                                 the L2C does not have the FPA owner ship bit set.
 <10>    Q2_UND   R/W1C     0           0        Set when a Queue0 page count available goes
                                                 negative.
 <11>    Q2_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and
                                                 the count available is greater than than pointers
                                                 present in the FPA.
 <12>    Q2_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in
                                                 the L2C does not have the FPA owner ship bit set.
 <13>    Q3_UND   R/W1C     0           0        Set when a Queue0 page count available goes
                                                 negative.
 <14>    Q3_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and
                                                 the count available is greater than than pointers
                                                 present in the FPA.
 <15>    Q3_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in
                                                 the L2C does not have the FPA owner ship bit set.
 <16>    Q4_UND   R/W1C     0           0        Set when a Queue0 page count available goes
                                                 negative.
 <17>    Q4_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and
                                                 the count available is greater than than pointers
                                                 present in the FPA.
 <18>    Q4_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in
                                                 the L2C does not have the FPA owner ship bit set.
 <19>    Q5_UND   R/W1C     0           0        Set when a Queue0 page count available goes
                                                 negative.
 <20>    Q5_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and
                                                 the count available is greater than than pointers
                                                 present in the FPA.
 <21>    Q5_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in
                                                 the L2C does not have the FPA owner ship bit set.
 <22>    Q6_UND   R/W1C     0           0        Set when a Queue0 page count available goes
                                                 negative.
 <23>    Q6_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and
                                                 the count available is greater than than pointers
                                                 present in the FPA.
 <24>    Q6_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in
                                                 the L2C does not have the FPA owner ship bit set.
 <25>    Q7_UND   R/W1C     0           0        Set when a Queue0 page count available goes
                                                 negative.
 <26>    Q7_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and
                                                 the count available is greater than than pointers
                                                 present in the FPA.
 <27>    Q7_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in
                                                 the L2C does not have the FPA owner ship bit set.
 <28>    POOL0TH  R/W1C     0           0        Set when FPA_QUE0_AVAILABLE is equal to
						 FPA_POOL0_THRESHOLD[THRESH] and a pointer is
                                                 allocated or de-allocated.
 <29>    POOL1TH  R/W1C     0           0        Set when FPA_QUE1_AVAILABLE is equal to
						 FPA_POOL1_THRESHOLD[THRESH] and a pointer is
                                                 allocated or de-allocated.
 <30>    POOL2TH  R/W1C     0           0        Set when FPA_QUE2_AVAILABLE is equal to
						 FPA_POOL2_THRESHOLD[THRESH] and a pointer is
                                                 allocated or de-allocated.
 <31>    POOL3TH  R/W1C     0           0        Set when FPA_QUE3_AVAILABLE is equal to
						 FPA_POOL3_THRESHOLD[THRESH] and a pointer is
                                                 allocated or de-allocated.
 <32>    POOL4TH  R/W1C     0           0        Set when FPA_QUE4_AVAILABLE is equal to
						 FPA_POOL4_THRESHOLD[THRESH] and a pointer is
                                                 allocated or de-allocated.
 <33>    POOL5TH  R/W1C     0           0        Set when FPA_QUE5_AVAILABLE is equal to
						 FPA_POOL5_THRESHOLD[THRESH] and a pointer is
                                                 allocated or de-allocated.
 <34>    POOL6TH  R/W1C     0           0        Set when FPA_QUE6_AVAILABLE is equal to
						 FPA_POOL6_THRESHOLD[THRESH] and a pointer is
                                                 allocated or de-allocated.
 <35>    POOL7TH  R/W1C     0           0        Set when FPA_QUE7_AVAILABLE is equal to
						 FPA_POOL7_THRESHOLD[THRESH] and a pointer is
                                                 allocated or de-allocated.
 <36>    FREE0    R/W1C     0           0        When a pointer for POOL0 is freed bit is set.
 <37>    FREE1    R/W1C     0           0        When a pointer for POOL1 is freed bit is set.
 <38>    FREE2    R/W1C     0           0        When a pointer for POOL2 is freed bit is set.
 <39>    FREE3    R/W1C     0           0        When a pointer for POOL3 is freed bit is set.
 <40>    FREE4    R/W1C     0           0        When a pointer for POOL4 is freed bit is set.
 <41>    FREE5    R/W1C     0           0        When a pointer for POOL5 is freed bit is set.
 <42>    FREE6    R/W1C     0           0        When a pointer for POOL6 is freed bit is set.
 <43>    FREE7    R/W1C     0           0        When a pointer for POOL7 is freed bit is set.
 <44>    FREE8    R/W1C     0           0        When a pointer for POOL8 is freed bit is set.
 <45>    Q8_UND   R/W1C     0           0        Set when a Queue8 page count available goes
                                                 negative.
 <46>    Q8_COFF  R/W1C     0           0        Set when a Queue8 stack end tag is present and
                                                 the count available is greater than than pointers
                                                 present in the FPA.
 <47>    Q8_PERR  R/W1C     0           0        Set when a Queue8 pointer read from the stack in
                                                 the L2C does not have the FPA owner ship bit set.
 <48>    POOL8TH  R/W1C     0           0        Set when FPA_QUE8_AVAILABLE is equal to
						 FPA_POOL8_THRESHOLD[THRESH] and a pointer is
                                                 allocated or de-allocated.
 <49>    PADDR_E  R/W1C     0           0        Set when a pointer address does not fall in the
                                                 address range for a pool specified by
                                                 FPA_POOL@_START_ADDR and FPA_POOL@_END_ADDR.
 <63:50> NS       RAZ       NS          NS       Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_INT_ENB = FPA's Interrupt Enable
 *
 * The FPA's interrupt enable register.
 *

     ==============================================================
     FPA_INT_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     FED0_SBE R/W      0           0         When set (1) and bit 0 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <1>     FED0_DBE R/W      0           0         When set (1) and bit 1 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <2>     FED1_SBE R/W      0           0         When set (1) and bit 2 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <3>     FED1_DBE R/W      0           0         When set (1) and bit 3 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.

 <4>     Q0_UND   R/W      0           0         When set (1) and bit 4 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <5>     Q0_COFF  R/W      0           0         When set (1) and bit 5 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <6>     Q0_PERR  R/W      0           0         When set (1) and bit 6 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <7>     Q1_UND   R/W      0           0         When set (1) and bit 7 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <8>     Q1_COFF  R/W      0           0         When set (1) and bit 8 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <9>     Q1_PERR  R/W      0           0         When set (1) and bit 9 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <10>    Q2_UND   R/W      0           0         When set (1) and bit 10 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <11>    Q2_COFF  R/W      0           0         When set (1) and bit 11 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <12>    Q2_PERR  R/W      0           0         When set (1) and bit 12 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <13>    Q3_UND   R/W      0           0         When set (1) and bit 13 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <14>    Q3_COFF  R/W      0           0         When set (1) and bit 14 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <15>    Q3_PERR  R/W      0           0         When set (1) and bit 15 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <16>    Q4_UND   R/W      0           0         When set (1) and bit 16 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <17>    Q4_COFF  R/W      0           0         When set (1) and bit 17 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <18>    Q4_PERR  R/W      0           0         When set (1) and bit 18 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <19>    Q5_UND   R/W      0           0         When set (1) and bit 19 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <20>    Q5_COFF  R/W      0           0         When set (1) and bit 20 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <21>    Q5_PERR  R/W      0           0         When set (1) and bit 21 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <22>    Q6_UND   R/W      0           0         When set (1) and bit 22 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <23>    Q6_COFF  R/W      0           0         When set (1) and bit 23 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <24>    Q6_PERR  R/W      0           0         When set (1) and bit 24 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <25>    Q7_UND   R/W      0           0         When set (1) and bit 25 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <26>    Q7_COFF  R/W      0           0         When set (1) and bit 26 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <27>    Q7_PERR  R/W      0           0         When set (1) and bit 27 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <28>    POOL0TH  R/W      0           0         When set (1) and bit 28 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <29>    POOL1TH  R/W      0           0         When set (1) and bit 29 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <30>    POOL2TH  R/W      0           0         When set (1) and bit 30 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <31>    POOL3TH  R/W      0           0         When set (1) and bit 31 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <32>    POOL4TH  R/W      0           0         When set (1) and bit 32 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <33>    POOL5TH  R/W      0           0         When set (1) and bit 33 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <34>    POOL6TH  R/W      0           0         When set (1) and bit 34 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <35>    POOL7TH  R/W      0           0         When set (1) and bit 35 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <36>    FREE0    R/W      0           0         When set (1) and bit 36 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <37>    FREE1    R/W      0           0         When set (1) and bit 37 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <38>    FREE2    R/W      0           0         When set (1) and bit 38 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <39>    FREE3    R/W      0           0         When set (1) and bit 39 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <40>    FREE4    R/W      0           0         When set (1) and bit 40 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <41>    FREE5    R/W      0           0         When set (1) and bit 41 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <42>    FREE6    R/W      0           0         When set (1) and bit 42 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <43>    FREE7    R/W      0           0         When set (1) and bit 43 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <44>    FREE8    R/W      0           0         When set (1) and bit 44 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <45>    Q8_UND   R/W      0           0         When set (1) and bit 45 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <46>    Q8_COFF  R/W      0           0         When set (1) and bit 46 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <47>    Q8_PERR  R/W      0           0         When set (1) and bit 47 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <48>    POOL8TH  R/W      0           0         When set (1) and bit 48 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <49>    PADDR_E  R/W      0           0         When set (1) and bit 49 of the FPA_INT_SUM
                                                 register is asserted the FPA will assert an
                                                 interrupt.
 <63:50> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_CTL_STATUS = FPA's Control/Status Register
 *
 * The FPA's interrupt enable register.
 *

     ==============================================================
     FPA_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <6:0>   MEM0_ERR R/W      0           0         Causes a flip of the ECC bit associated 38:32
                                                 respective to bit 6:0 of this field, for FPF
                                                 FIFO 0.
 <13:7>  MEM1_ERR R/W      0           0         Causes a flip of the ECC bit associated 38:32
                                                 respective to bit 6:0 of this field, for FPF
                                                 FIFO 1.
 <14>    ENB      R/W      0           0         Must be set to 1 AFTER writing all config registers
                                                 and 10 cycles have past. If any of the config
                                                 register are written after writing this bit the
                                                 FPA may begin to operate incorrectly.
 <15>    USE_STT  R/W      0           0         When clear '0' the FPA will use STT to store
                                                 pointers to the L2C.
 <16>    USE_LDT  R/W      0           0         When clear '0' the FPA will use LDT to load
                                                 pointers from the L2C.
 <17>    RESET    R/W      0           0         When set causes a reset of the FPA with the
 <18>    REQ_OFF  R/W      0           0         When set NCB devices requesting pointers will be
						 stalled.
 <19>    RET_OFF  R/W      0           0         When set NCB devices returning pointer will be
						 stalled.
 <20>    FREE_EN  R/W      0           0         Enables the setting of the INT_SUM_[FREE*] bits.
 <63:21> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF0_SIZE = FPA's Queue 0 Free Page FIFO Size
 *
 * The number of page pointers that will be kept local to the FPA for this Queue. FPA Queues are
 * assigned in order from Queue 0 to Queue 7, though only Queue 0 through Queue x can be used.
 * The sum of the 9 (0-8) FPA_FPF#_SIZE registers must be limited to 2048.
 *

     ==============================================================
     FPA_FPF0_SIZE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  FPF_SIZ  R/W      0x100       0         The number of entries assigned in the FPA FIFO
                                                 (used to hold page-pointers) for this Queue.
                                                 The value of this register must divisable by 2,
                                                 and the FPA will ignore bit [0] of this register.
                                                 The total of the FPF_SIZ field of the 8 (0-7)
                                                 FPA_FPF#_SIZE registers must not exceed 2048.
                                                 After writing this field the FPA will need 10
                                                 core clock cycles to be ready for operation. The
                                                 assignment of location in the FPA FIFO must
                                                 start with Queue 0, then 1, 2, etc.
                                                 The number of useable entries will be FPF_SIZ-2.
  <63:12> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF@_SIZE = FPA's Queue 1-7 Free Page FIFO Size
 *
 * The number of page pointers that will be kept local to the FPA for this Queue. FPA Queues are
 * assigned in order from Queue 0 to Queue 7, though only Queue 0 through Queue x can be used.
 * The sum of the 9 (0-8) FPA_FPF#_SIZE registers must be limited to 2048.
 *

     ==============================================================
     FPA_FPF(1..7)_SIZE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>  FPF_SIZ  R/W      0x0E0       0         The number of entries assigned in the FPA FIFO
                                                 (used to hold page-pointers) for this Queue.
                                                 The value of this register must divisable by 2,
                                                 and the FPA will ignore bit [0] of this register.
                                                 The total of the FPF_SIZ field of the 8 (0-7)
                                                 FPA_FPF#_SIZE registers must not exceed 2048.
                                                 After writing this field the FPA will need 10
                                                 core clock cycles to be ready for operation. The
                                                 assignment of location in the FPA FIFO must
                                                 start with Queue 0, then 1, 2, etc.
                                                 The number of useable entries will be FPF_SIZ-2.
 <63:11> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE@_PAGES_AVAILABLE = FPA's Queue 0-8 Free Page Available Register
 *
 * The number of page pointers that are available in the FPA and local DRAM.
 *

     ==============================================================
     FPA_QUE(0..8)_AVAILABLE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  QUE_SIZ  RO       0x0         0         The number of free pages available in this Queue.
 <63:32> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===


 *
 *                  FPA_BIST_STATUS = BIST Status of FPA Memories
 *
 * The result of the BIST run on the FPA memories.
 *

     ==============================================================
     FPA_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     FDR      RO       0x0         0         fpa_fdr  memory bist status.
 <1>     FFR      RO       0x0         0         fpa_ffr  memory bist status.
 <2>     FPF1     RO       0x0         0         fpa_fpf1 memory bist status.
 <3>     FPF0     RO       0x0         0         fpa_fpf0 memory bist status.
 <4>     FRD      RO       0x0         0         fpa_frd  memory bist status.
 <63:5>  NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE0_PAGE_INDEX = FPA's Queue0 Page Index
 *
 * The present index page for queue 0 of the FPA.
 * This number reflects the number of pages of pointers that have been written to memory
 * for this queue.
 * Because the address space is 38-bits the number of 128 byte pages could cause this register value to wrap.
 *

     ==============================================================
     FPA_QUE0_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <24:0>  PG_NUM   RO       0x0         NS        Page number.
 <63:25> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE1_PAGE_INDEX = FPA's Queue1 Page Index
 *
 * The present index page for queue 1 of the FPA.
 * This number reflects the number of pages of pointers that have been written to memory
 * for this queue.
 * Because the address space is 38-bits the number of 128 byte pages could cause this register value to wrap.
 *

     ==============================================================
     FPA_QUE1_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <24:0>  PG_NUM   RO       0x0         NS        Page number.
 <63:25> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE2_PAGE_INDEX = FPA's Queue2 Page Index
 *
 * The present index page for queue 2 of the FPA.
 * This number reflects the number of pages of pointers that have been written to memory
 * for this queue.
 * Because the address space is 38-bits the number of 128 byte pages could cause this register value to wrap.
 *

     ==============================================================
     FPA_QUE2_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <24:0>  PG_NUM   RO       0x0         NS        Page number.
 <63:25> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE3_PAGE_INDEX = FPA's Queue3 Page Index
 *
 * The present index page for queue 3 of the FPA.
 * This number reflects the number of pages of pointers that have been written to memory
 * for this queue.
 * Because the address space is 38-bits the number of 128 byte pages could cause this register value to wrap.
 *

     ==============================================================
     FPA_QUE3_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <24:0>  PG_NUM   RO       0x0         NS        Page number.
 <63:25> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE4_PAGE_INDEX = FPA's Queue4 Page Index
 *
 * The present index page for queue 4 of the FPA.
 * This number reflects the number of pages of pointers that have been written to memory
 * for this queue.
 * Because the address space is 38-bits the number of 128 byte pages could cause this register value to wrap.
 *

     ==============================================================
     FPA_QUE4_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <24:0>  PG_NUM   RO       0x0         NS        Page number.
 <63:25> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE5_PAGE_INDEX = FPA's Queue5 Page Index
 *
 * The present index page for queue 5 of the FPA.
 * This number reflects the number of pages of pointers that have been written to memory
 * for this queue.
 * Because the address space is 38-bits the number of 128 byte pages could cause this register value to wrap.
 *

     ==============================================================
     FPA_QUE5_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <24:0>  PG_NUM   RO       0x0         NS        Page number.
 <63:25> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE6_PAGE_INDEX = FPA's Queue6 Page Index
 *
 * The present index page for queue 6 of the FPA.
 * This number reflects the number of pages of pointers that have been written to memory
 * for this queue.
 * Because the address space is 38-bits the number of 128 byte pages could cause this register value to wrap.
 *

     ==============================================================
     FPA_QUE6_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <24:0>  PG_NUM   RO       0x0         NS        Page number.
 <63:25> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE7_PAGE_INDEX = FPA's Queue7 Page Index
 *
 * The present index page for queue 7 of the FPA.
 * This number reflects the number of pages of pointers that have been written to memory
 * for this queue.
 * Because the address space is 38-bits the number of 128 byte pages could cause this register value to wrap.
 *

     ==============================================================
     FPA_QUE7_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <24:0>  PG_NUM   RO       0x0         NS        Page number.
 <63:25> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE_EXP = FPA's Queue# Expected Page Index
 *
 * When a INT_SUM[PERR#] occurs this will be latched with the expected value.
 * This is latched on the first error and will not latch again unitl all errors are cleared.
 *

     ==============================================================
     FPA_QUE_EXP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <25:0>  EXP_INDX RO       0x0         NS        Expected page number read from memory.
 <28:26> EXP_QUE  RO       0x0         NS        Expected fpa-queue-number read from memory.
 <31:29> NS       RO       0x0         0x7       Resered.
 <63:32> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE_ACT = FPA's Queue# Actual Page Index
 *
 * When a INT_SUM[PERR#] occurs this will be latched with the value read from L2C.
 * This is latched on the first error and will not latch again unitl all errors are cleared.
 *

     ==============================================================
     FPA_QUE_ACT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <25:0>  ACT_INDX RO       0x0         NS        Page number read from memory.
 <28:26> ACT_QUE  RO       0x0         NS        FPA-queue-number read from memory.
 <31:29> NS       RO       0x0         0x7       Resered.
 <63:32> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===


 *
 *                  FPA_POOL@_THRESHOLD = FPA's Pool 0-8 Threshold
 *
 * When the value of FPA_QUE@_AVAILABLE is equal to FPA_POOL@_THRESHOLD[THRESH] when a pointer is allocated
 * or deallocated, set interrupt FPA_INT_SUM[POOL@TH].
 *

     ==============================================================
     FPA_POOL(0..8)_THRESHOLD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  THRESH   R/W      0xffffffff  NS        The Threshold.
 <63:32> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

// Reserved through 0x238 for additional thresholds

 *
 *                  FPA_FPF8_MARKS = FPA's Queue 8 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 8. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75)
 *

     ==============================================================
     FPA_FPF8_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>  FPF_RD    R/W     0x040       0         When the number of free-page-pointers in a
                                                 queue drops below this value and there are
                                                 free-page-pointers in DRAM, the FPA will
                                                 read one page (32 pointers) from DRAM.
                                                 This maximum value for this field should be
                                                 FPA_FPF0_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
 <21:11> FPF_WR    R/W     0xA4        0         When the number of free-page-pointers in a
                                                 queue exceeds this value the FPA will write
                                                 32-page-pointers of that queue to DRAM.
                                                 The MAX value for this field should be
 	                                         FPA_FPF0_SIZE[FPF_SIZ]-2.
 <63:22> NS        RAZ      NS         NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF8_SIZE = FPA's Queue 8 Free Page FIFO Size
 *
 * The number of page pointers that will be kept local to the FPA for this Queue. FPA Queues are
 * assigned in order from Queue 0 to Queue 7, though only Queue 0 through Queue x can be used.
 * The sum of the 9 (0-8) FPA_FPF#_SIZE registers must be limited to 2048.
 *

     ==============================================================
     FPA_FPF8_SIZE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  FPF_SIZ  R/W      0xE0        0         The number of entries assigned in the FPA FIFO
                                                 (used to hold page-pointers) for this Queue.
                                                 The value of this register must divisable by 2,
                                                 and the FPA will ignore bit [0] of this register.
                                                 The total of the FPF_SIZ field of the 8 (0-7)
                                                 FPA_FPF#_SIZE registers must not exceed 2048.
                                                 After writing this field the FPA will need 10
                                                 core clock cycles to be ready for operation. The
                                                 assignment of location in the FPA FIFO must
                                                 start with Queue 0, then 1, 2, etc.
                                                 The number of useable entries will be FPF_SIZ-2.
  <63:12> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE8_PAGE_INDEX = FPA's Queue7 Page Index
 *
 * The present index page for queue 7 of the FPA.
 * This number reflects the number of pages of pointers that have been written to memory
 * for this queue.
 * Because the address space is 38-bits the number of 128 byte pages could cause this register value to wrap.
 *

     ==============================================================
     FPA_QUE8_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <24:0>  PG_NUM   RO       0x0         NS        Page number.
 <63:25> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===


 *
 *                  FPA_POOL@_START_ADDR = FPA's Pool-@ Starting Addres
 *
 * Pointers sent to this pool must be equal to or greater than this address.
 *

     ==============================================================
     FPA_POOL(0..8)_START_ADDR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <32:0>  ADDR     R/W      0x0         NS        Address.
 <63:33> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

// Space here reserved

 *
 *                  FPA_POOL@_END_ADDR = FPA's Pool-@ Ending Addres
 *
 * Pointers sent to this pool must be equal to or less than this address.
 *

     ==============================================================
     FPA_POOL(0..8)_END_ADDR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <32:0>  ADDR     R/W      0x1ffffffff NS        Address.
 <63:33> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

// Space here reserved

 *
 *                  FPA_ADDR_RANGE_ERROR = FPA's Pool Address Range Error Information
 *
 * When an address is sent to a pool that does not fall in the start and end address spcified by
 * FPA_POOL@_START_ADDR and FPA_POOL@_END_ADDR the information related to the failure is captured here.
 * In addition FPA_INT_SUM[PADDR_E] will be set and this register will not be updated again till
 * FPA_INT_SUM[PADDR_E] is cleared.
 *

     ==============================================================
     FPA_ADDR_RANGE_ERROR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <32:0>  ADDR     RO       0x0         NS        Failing address.
 <37:33> POOL     RO       0x0         NS        Pool address sent to.
 <63:38> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_PACKET_THRESHOLD = FPA's Packet Threshold
 *
 * When the value of FPA_QUE0_AVAILABLE[QUE_SIZ] is Less than the value of this register a low pool count signal is sent to the
 * PCIe packet instruction engine (to make it stop reading instructions) and to the Packet-Arbiter informing it to not give grants
 * to packets MAC with the exception of the PCIe MAC.
 *

     ==============================================================
     FPA_PACKET_THRESHOLD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  THRESH   R/W      0x0         0         Packet Threshold.
 <63:32> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_WQE_THRESHOLD = FPA's WQE Threshold
 *
 * When the value of FPA_QUE#_AVAILABLE[QUE_SIZ] (# is determined by the value of IPD_WQE_FPA_QUEUE) is Less than the value of this
 * register a low pool count signal is sent to the PCIe packet instruction engine (to make it stop reading instructions) and to the
 * Packet-Arbiter informing it to not give grants to packets MAC with the exception of the PCIe MAC.
 *

     ==============================================================
     FPA_WQE_THRESHOLD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  THRESH   R/W      0x0         0         WQE Threshold.
 <63:32> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===



 *
 * GMX_RX_INT_REG = Interrupt Register
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:29> NS        RAZ     NS          NS        Reserved				            |
 <28>    HG2CC     R/W1C   0x0         0         HiGig2 received message CRC or Control char  error |
                                                   Set when either CRC8 error detected or when      |
						   a Control Character is found in the message      |
						   bytes after the K.SOM                            |
						   NOTE: HG2CC has higher priority than HG2FLD      |
						         i.e. a HiGig2 message that results in HG2CC|
							 getting set, will never set HG2FLD.        |
 <27>    HG2FLD    R/W1C   0x0         0         HiGig2 received message field error, as below      |
                                                   1) MSG_TYPE field not 6'b00_0000                 |
						      i.e. it is not a FLOW CONTROL message, which  |
						      is the only defined type for HiGig2           |
                                                   2) FWD_TYPE field not 2'b00 i.e. Link Level msg  |
						      which is the only defined type for HiGig2     |
                                                   3) FC_OBJECT field is neither 4'b0000 for        |
						      Physical Link nor 4'b0010 for Logical Link.   |
						      Those are the only two defined types in HiGig2|
 <26>	 UNDAT	   R/W1C   0x0	       0	 Unexpected Data				    |
 						  (XAUI/RXAUI Mode only)			    |
 <25>	 UNEOP	   R/W1C   0x0	       0	 Unexpected EOP					    |
 						  (XAUI/RXAUI Mode only)			    |
 <24>	 UNSOP	   R/W1C   0x0	       0	 Unexpected SOP					    |
 						  (XAUI/RXAUI Mode only)			    |
 <23>    BAD_TERM  R/W1C   0x0	       0	 Frame is terminated by control character other	    |
						  than /T/.  The error propagation control	    |
						  character /E/ will be included as part of the	    |
						  frame and does not cause a frame termination.	    |
 						  (XAUI/RXAUI Mode only)			    |
 <22>    BAD_SEQ   R/W1C   0x0         0         Reserved Sequence Deteted			    |
 						  (XAUI/RXAUI Mode only)			    |
 <21>    REM_FAULT R/W1C   0x0         0         Remote Fault Sequence Deteted			    |
 						  (XAUI/RXAUI Mode only)			    |
 <20>    LOC_FAULT R/W1C   0x0         0         Local Fault Sequence Deteted			    |
 						  (XAUI/RXAUI Mode only)			    |
 <19>    PAUSE_DRP R/W1C   0x0         0         Pause packet was dropped due to full GMX RX FIFO   |
 <18:16> NS        RAZ     NS          NS        Reserved				            |
 <15>    IFGERR    R/W1C   0x0         0         Interframe Gap Violation			    |
						  Does not necessarily indicate a failure	    |
						  (SGMII/1000Base-X only)			    |
 <14>    COLDET    R/W1C   0x0         0         Collision Detection				    |
						  (SGMII/1000Base-X half-duplex only)		    |
 <13>    FALERR    R/W1C   0x0         0         False carrier error or extend error after slottime |
						  (SGMII/1000Base-X only)			    |
 <12>    RSVERR    R/W1C   0x0         0         Reserved opcodes				    |
 <11>    PCTERR    R/W1C   0x0         0         Bad Preamble / Protocol			    |
						  In XAUI/RXAUI mode, the column of data that was   |
						  bad will be logged in GMX_RX_XAUI_BAD_COL	    |
 <10>    OVRERR   R/W1C    0x0         0         Internal Data Aggregation Overflow		    |
						  This interrupt should never assert		    |
						  (SGMII/1000Base-X only)			    |
 <9>     NS        RAZ     NS          NS        Reserved				            |
 <8>     SKPERR    R/W1C   0x0         0         Skipper error					    |
 <7>     RCVERR    R/W1C   0x0         0         Frame was received with Data reception error	    |
 <6:5>   NS        RAZ     NS          NS        Reserved				            |
 <4>     FCSERR    R/W1C   0x0         0         Frame was received with FCS/CRC error		    |
 <3>     JABBER    R/W1C   0x0         0         Frame was received with length > sys_length	    |
 <2>     NS        RAZ     NS          NS        Reserved				            |
 <1>     CAREXT    R/W1C   0x0         0         Carrier extend error				    |
						  (SGMII/1000Base-X only)			    |
 <0>     MINERR    R/W1C   0x0         NS        Pause Frame was received with length<minFrameSize  |
						  Frame length checks are typically handled in PIP  |
						  (PIP_INT_REG[MINERR]), but pause frames are	    |
						  normally discarded before being inspected by PIP. |

Notes:

(1) exceptions will only be raised to the control processor if the
    corresponding bit in the GMX_RX_INT_EN register is set.

(2) exception conditions 10:0 can also set the rcv/opcode in the received
    packet's workQ entry.  The GMX_RX_FRM_CHK register provides a bit mask
    for configuring which conditions set the error.

(3) in half duplex operation, the expectation is that collisions will appear
    as either MINERR o r CAREXT errors.

(4) JABBER - An RX Jabber error indicates that a packet was received which
	     is longer than the maximum allowed packet as defined by the
	     system.  GMX will truncate the packet at the JABBER count.
	     Failure to do so could lead to system instabilty.

(5) NIBERR - This error is illegal at 1000Mbs speeds
             (GMX_RX_PRT_CFG[SPEED]==0) and will never assert.

(6) MAXERR - for untagged frames, the total frame DA+SA+TL+DATA+PAD+FCS >
             GMX_RX_FRM_MAX.  For tagged frames, DA+SA+VLAN+TL+DATA+PAD+FCS
             > GMX_RX_FRM_MAX + 4*VLAN_VAL + 4*VLAN_STACKED.

(7) MINERR - total frame DA+SA+TL+DATA+PAD+FCS < 64

(8) ALNERR - Indicates that the packet received was not an integer number of
	     bytes.  If FCS checking is enabled, ALNERR will only assert if
	     the FCS is bad.  If FCS checking is disabled, ALNERR will
	     assert in all non-integer frame cases.

(9) Collisions - Collisions can only occur in half-duplex mode.  A collision
	         is assumed by the receiver when the slottime
	         (GMX_PRT_CFG[SLOTTIME]) is not satisfied.  In 10/100 mode,
	         this will result in a frame < SLOTTIME.  In 1000 mode, it
	         could result either in frame < SLOTTIME or a carrier extend
	         error with the SLOTTIME.  These conditions are visible by...

		 . transfer ended before slottime - COLDET
		 . carrier extend error           - CAREXT

(A) LENERR - Length errors occur when the received packet does not match the
	     length field.  LENERR is only checked for packets between 64
	     and 1500 bytes.  For untagged frames, the length must exact
	     match.  For tagged frames the length or length+4 must match.

(B) PCTERR - checks that the frame begins with a valid PREAMBLE sequence.
             Does not check the number of PREAMBLE cycles.

(C) OVRERR - *DON'T PUT IN HRM*

	     OVRERR is an architectural assertion check internal to GMX to
	     make sure no assumption was violated.  In a correctly operating
	     system, this interrupt can never fire.

	     GMX has an internal arbiter which selects which of 4 ports to
	     buffer in the main RX FIFO.  If we normally buffer 8 bytes,
	     then each port will typically push a tick every 8 cycles - if
	     the packet interface is going as fast as possible.  If there
	     are four ports, they push every two cycles.  So that's the
	     assumption.  That the inbound module will always be able to
	     consume the tick before another is produced.  If that doesn't
	     happen - that's when OVRERR will assert.

(D) In XAUI/RXAUI mode prt0 is used for interrupt logging.
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_RX_INT_EN = Interrupt Enable
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:29> NS        RAZ     NS          NS        Reserved				            |
 <28>    HG2CC     R/W     0x0	       0	 HiGig2 CRC8 or Control char error interrupt enable |
 <27>    HG2FLD    R/W     0x0	       0	 HiGig2 Bad field error interrupt enable            |
 <26>	 UNDAT	   R/W     0x0	       0	 Unexpected Data				    |
 						  (XAUI/RXAUI Mode only)			    |
 <25>	 UNEOP	   R/W     0x0	       0	 Unexpected EOP					    |
 						  (XAUI/RXAUI Mode only)			    |
 <24>	 UNSOP	   R/W     0x0	       0	 Unexpected SOP					    |
 						  (XAUI/RXAUI Mode only)			    |
 <23>    BAD_TERM  R/W     0x0	       0	 Frame is terminated by control character other	    |
						  than /T/.  The error propagation control	    |
						  character /E/ will be included as part of the	    |
						  frame and does not cause a frame termination.	    |
 						  (XAUI/RXAUI Mode only)			    |
 <22>    BAD_SEQ   R/W     0x0         0         Reserved Sequence Deteted			    |
 						  (XAUI/RXAUI Mode only)			    |
 <21>    REM_FAULT R/W     0x0         0         Remote Fault Sequence Deteted			    |
 						  (XAUI/RXAUI Mode only)			    |
 <20>    LOC_FAULT R/W     0x0         0         Local Fault Sequence Deteted			    |
 						  (XAUI/RXAUI Mode only)			    |
 <19>    PAUSE_DRP R/W     0x0         0         Pause packet was dropped due to full GMX RX FIFO   |
 <18:16> NS        RAZ     NS          NS        Reserved				            |
 <15>    IFGERR   R/W      0x0         0         Interframe Gap Violation			    |
						  (SGMII/1000Base-X only)			    |
 <14>    COLDET   R/W      0x0         0         Collision Detection				    |
						  (SGMII/1000Base-X half-duplex only)		    |
 <13>    FALERR   R/W      0x0         0         False carrier error or extend error after slottime |
						  (SGMII/1000Base-X only)			    |
 <12>    RSVERR   R/W      0x0         0         Reserved opcodes				    |
 <11>    PCTERR   R/W      0x0         0         Bad Preamble / Protocol			    |
 <10>    OVRERR   R/W      0x0         0         Internal Data Aggregation Overflow		    |
						  (SGMII/1000Base-X only)			    |
 <9>     NS        RAZ     NS          NS        Reserved				            |
 <8>     SKPERR   R/W      0x0         0         Skipper error					    |
 <7>     RCVERR   R/W      0x0         0         Frame was received with Data reception error	    |
 <6:5>   NS       RAZ      NS          NS        Reserved				            |
 <4>     FCSERR   R/W      0x0         0         Frame was received with FCS/CRC error		    |
 <3>     JABBER   R/W      0x0         0         Frame was received with length > sys_length	    |
 <2>     NS       RAZ      NS          NS        Reserved				            |
 <1>     CAREXT   R/W      0x0         0         Carrier extend error				    |
						  (SGMII/1000Base-X only)			    |
 <0>     MINERR   R/W      0x0         0         Pause Frame was received with length<minFrameSize  |

Notes:
In XAUI/RXAUI mode prt0 is used for checking.
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_PRT_CFG = Port description
 *

     ==============================================================
     GMX(0..4)_PRT(0..3)_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:22> NS       RAZ      NS          NS        Reserved				            |
 <21:16> PKND     R/W      0x0         NS	 Port Kind used for processing the packet by PKI    |
 <15:14> NS       RAZ      NS          NS        Reserved				            |
 <13>   TX_IDLE	  RO       0x1         NS        TX Machine is idle				    |
 <12>   RX_IDLE	  RO       0x1         NS        RX Machine is idle				    |
 <11:9> NS        RAZ      NS          NS        Reserved				            |
 <8>    SPEED_MSB R/W      0x0         NS        Link Speed MSB [SPEED_MSB:SPEED]		    |
						  10 = 10Mbs operation				    |
						  00 = 100Mbs operation				    |
						  01 = 1000Mbs operation			    |
						  11 = Reserved					    |
						  (SGMII/1000Base-X only)			    |
 <7:4>  NS        RAZ      NS          NS        Reserved				            |
 <3>    SLOTTIME  R/W      0x1         NS	 Slot Time for Half-Duplex operation		    |
						  0 = 512 bitimes (10/100Mbs operation)		    |
						  1 = 4096 bitimes (1000Mbs operation)		    |
						  (SGMII/1000Base-X only)			    |
 <2>    DUPLEX    R/W      0x1         NS        Duplex    					    |
						  0 = Half Duplex (collisions/extentions/bursts)    |
						  1 = Full Duplex				    |
						  (SGMII/1000Base-X only)			    |
 <1>    SPEED     R/W      0x1         NS        Link Speed LSB [SPEED_MSB:SPEED]		    |
						  10 = 10Mbs operation				    |
						  00 = 100Mbs operation				    |
						  01 = 1000Mbs operation			    |
						  11 = Reserved					    |
						  (SGMII/1000Base-X only)			    |
 <0>    EN        R/W      0x0         NS        Link Enable                                        |
						  When EN is clear, packets will not be received    |
						  or transmitted (including PAUSE and JAM packets). |
						  If EN is cleared while a packet is currently	    |
						  being received or transmitted, the packet will    |
						  be allowed to complete before the bus is idled.   |
						  On the RX side, subsequent packets in a burst	    |
						  will be ignored.				    |
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_FRM_CTL = Frame Control
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_FRM_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13> NS       RAZ      NS          NS        Reserved				            |
 <12>    PTP_MODE R/W      0x0         0         Timestamp mode					    |
						  When PTP_MODE is set, a 64-bit timestamp will be  |
						  prepended to every incoming packet. The timestamp |
						  bytes are added to the packet in such a way as to |
						  not modify the packet's receive byte count.  This |
						  implies that the GMX_RX_JABBER, MINERR,	    |
						  GMX_RX_DECISION, GMX_RX_UDD_SKP, and the	    |
						  GMX_RX_STATS_* do not require any adjustment as   |
						  they operate on the received packet size.	    |
						  When the packet reaches PKI, its size will	    |
						  reflect the additional bytes and is subject to    |
						  the restrictions below.			    |
						  If PTP_MODE=1 and PRE_CHK=1, PRE_STRP must be 1.  |
						  If PTP_MODE=1,				    |
						   PIP_PRT_CFGx[SKIP] should be increased by 8.	    |
						   PIP_PRT_CFGx[HIGIG_EN] should be 0.	  	    |
						   PIP_FRM_CHKx[MAXLEN] should be increased by 8.   |
						   PIP_FRM_CHKx[MINLEN] should be increased by 8.   |
						   PIP_TAG_INCx[EN] should be adjusted.		    |
 <11>    NS       RAZ      NS          NS        Reserved				            |
 <10>    NULL_DIS R/W      0x0         0         When set, do not modify the MOD bits on NULL ticks |
						  due to PARITAL packets			    |
 <9>     PRE_ALIGN R/W	   0x0	       0	 When set, PREAMBLE parser aligns the the SFD byte  |
						  regardless of the number of previous PREAMBLE	    |
						  nibbles.  In this mode, PRE_STRP should be set to |
						  account for the variable nature of the PREAMBLE.  |
 						  PRE_CHK must be set to enable this and all	    |
 						  PREAMBLE features.				    |
						  (SGMII at 10/100Mbs only)			    |
 <8>     NS       RAZ      NS          NS        Reserved				            |
 <7>     NS       RAZ      NS          NS        Reserved				            |
 <6>     PRE_FREE RO	   0x1	       1	 When set, PREAMBLE checking is  less strict.	    |
						  GMX will begin the frame at the first SFD.	    |
 						  PRE_CHK must be set to enable this and all	    |
 						  PREAMBLE features.				    |
						  (SGMII/1000Base-X only)			    |
 <5>	 CTL_SMAC R/W      0x0         0         Control Pause Frames can match station SMAC	    |
 <4>     CTL_MCST R/W      0x1         1         Control Pause Frames can match globally assign	    |
						  Multicast address				    |
 <3>     CTL_BCK  R/W      0x1         1	 Forward pause information to TX block		    |
 <2>	 CTL_DRP  R/W      0x1         1	 Drop Control Pause Frames			    |
 <1>     PRE_STRP R/W      0x1         1         Strip off the preamble (when present)		    |
                                                  0=PREAMBLE+SFD is sent to core as part of frame   |
                                                  1=PREAMBLE+SFD is dropped			    |
 						  PRE_CHK must be set to enable this and all	    |
 						  PREAMBLE features.				    |
						  If PTP_MODE=1 and PRE_CHK=1, PRE_STRP must be 1.  |
 <0>     PRE_CHK  R/W      0x1         1         This port is configured to send a valid 802.3	    |
						  PREAMBLE to begin every frame. GMX checks that a  |
						  valid PREAMBLE is received (based on PRE_FREE).   |
						  When a problem does occur within the PREAMBLE	    |
						  seqeunce, the frame is marked as bad and not sent |
						  into the core.  The GMX_GMX_RX_INT_REG[PCTERR]    |
						  interrupt is also raised.			    |
						  When GMX_TX_XAUI_CTL[HG_EN] is set, PRE_CHK	    |
						  must be zero.					    |
						  If PTP_MODE=1 and PRE_CHK=1, PRE_STRP must be 1.  |

Notes:
* PRE_STRP
  When PRE_CHK is set (indicating that the PREAMBLE will be sent), PRE_STRP
  determines if the PREAMBLE+SFD bytes are thrown away or sent to the Octane
  core as part of the packet.

  In either mode, the PREAMBLE+SFD bytes are not counted toward the packet
  size when checking against the MIN and MAX bounds.  Furthermore, the bytes
  are skipped when locating the start of the L2 header for DMAC and Control
  frame recognition.

* CTL_BCK/CTL_DRP
  These bits control how the HW handles incoming PAUSE packets.  Here are
  the most common modes of operation:
    CTL_BCK=1,CTL_DRP=1   - HW does it all
    CTL_BCK=0,CTL_DRP=0   - SW sees all pause frames
    CTL_BCK=0,CTL_DRP=1   - all pause frames are completely ignored

  These control bits should be set to CTL_BCK=0,CTL_DRP=0 in halfdup mode.
  Since PAUSE packets only apply to fulldup operation, any PAUSE packet
  would constitute an exception which should be handled by the processing
  cores.  PAUSE packets should not be forwarded.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_FRM_CHK = Which frame errors will set the ERR bit of the frame
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_FRM_CHK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:9>  NS       RAZ      NS          NS        Reserved				            |
 <8>     SKPERR   R/W      0x1         1         Skipper error					    |
 <7>     RCVERR   R/W      0x1         1         Frame was received with Data reception error	    |
 <6:5>   NS       RAZ      NS          NS        Reserved				            |
 <4>     FCSERR   R/W      0x1         1         Frame was received with FCS/CRC error		    |
 <3>     JABBER   R/W      0x1         1         Frame was received with length > sys_length	    |
 <2>     NS       RAZ      NS          NS        Reserved				            |
 <1>     CAREXT   R/W      0x1         1         Carrier extend error				    |
						  (SGMII/1000Base-X only)			    |
 <0>     MINERR   R/W      0x1         1         Pause Frame was received with length<minFrameSize  |

Notes:
If GMX_RX_UDD_SKP[LEN] != 0, then LENERR will be forced to zero in HW.

In XAUI/RXAUI mode prt0 is used for checking.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_JABBER = The max size packet after which GMX will truncate
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_JABBER Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>  CNT      R/W      0x2800      0x2800    Byte count for jabber check			    |
  						  Failing packets set the JABBER interrupt and are  |
						  optionally sent with opcode==JABBER		    |
						  GMX will truncate the packet to CNT bytes	    |

Notes:

  CNT must be 8-byte aligned such that CNT[2:0] == 0

  The packet that will be sent to the packet input logic will have an
  additionl 8 bytes if GMX_RX_FRM_CTL[PRE_CHK] is set and
  GMX_RX_FRM_CTL[PRE_STRP] is clear.  The max packet that will be sent is
  defined as...

       max_sized_packet = GMX_RX_JABBER[CNT]+((GMX_RX_FRM_CTL[PRE_CHK] & !GMX_RX_FRM_CTL[PRE_STRP])*8)

  In XAUI/RXAUI mode prt0 is used for checking.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_DECISION = The byte count to decide when to accept or filter a packet
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_DECISION Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:5>  NS       RAZ      NS          NS        Reserved				            |
 <4:0>   CNT      R/W      0x18        0x18      The byte count to decide when to accept or filter  |
                                                   a packet.					    |

Notes:
As each byte in a packet is received by GMX, the L2 byte count is compared
against the GMX_RX_DECISION[CNT].  The L2 byte count is the number of bytes
from the beginning of the L2 header (DMAC).  In normal operation, the L2
header begins after the PREAMBLE+SFD (GMX_RX_FRM_CTL[PRE_CHK]=1) and any
optional UDD skip data (GMX_RX_UDD_SKP[LEN]).

When GMX_RX_FRM_CTL[PRE_CHK] is clear, PREAMBLE+SFD are prepended to the
packet and would require UDD skip length to account for them.

						L2 Size
Port Mode	      <GMX_RX_DECISION bytes (default=24)	>=GMX_RX_DECISION bytes (default=24)

Full Duplex           accept packet				apply filters
		      no filtering is applied			accept packet based on DMAC and PAUSE packet filters

Half Duplex           drop packet				apply filters
		      packet is unconditionally dropped		accept packet based on DMAC

where l2_size = MAX(0, total_packet_size - GMX_RX_UDD_SKP[LEN] - ((GMX_RX_FRM_CTL[PRE_CHK]==1)*8)
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_UDD_SKP = Amount of User-defined data before the start of the L2 data
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_UDD_SKP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:9> NS        RAZ      NS          NS        Reserved				            |
 <8>	FCSSEL    R/W      0x0         0         Include the skip bytes in the FCS calculation      |
						  0 = all skip bytes are included in FCS            |
						  1 = the skip bytes are not included in FCS        |
						  When GMX_TX_XAUI_CTL[HG_EN] is set, FCSSEL must   |
						  be zero.					    |
 <7>	NS        RAZ      NS          NS        Reserved				            |
 <6:0>  LEN	  R/W      0x0         0	 Amount of User-defined data before the start of    |
						  the L2 data.  Zero means L2 comes first.          |
						  Max value is 64.				    |
                                                  When GMX_TX_XAUI_CTL[HG_EN] is set, LEN must be   |
                                                  set to 12 or 16 (depending on HiGig header size)  |
                                                  to account for the HiGig header. LEN=12 selects   |
                                                  HiGig/HiGig+, and LEN=16 selects HiGig2.          |
Notes:

(1) The skip bytes are part of the packet and will be sent down the NCB
    packet interface and will be handled by PKI.

(2) The system can determine if the UDD bytes are included in the FCS check
    by using the FCSSEL field - if the FCS check is enabled.

(3) Assume that the preamble/sfd is always at the start of the frame - even
    before UDD bytes.  In most cases, there will be no preamble in these
    cases since it will be packet interface in direct communication to
    another packet interface (MAC to MAC) without a PHY involved.

(4) We can still do address filtering and control packet filtering is the
    user desires.

(5) UDD_SKP must be 0 in half-duplex operation unless
    GMX_RX_FRM_CTL[PRE_CHK] is clear.  If GMX_RX_FRM_CTL[PRE_CHK] is clear,
    then UDD_SKP will normally be 8.

(6) In all cases, the UDD bytes will be sent down the packet interface as
    part of the packet.  The UDD bytes are never stripped from the actual
    packet.

(7) If LEN != 0, then GMX_RX_FRM_CHK[LENERR] will be disabled and GMX_RX_INT_REG[LENERR] will be zero
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_STATS_CTL = RX Stats Control register
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_STATS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1> NS        RAZ      NS          NS        Reserved				            |
 <0>    RD_CLR	  R/W      0x0	       0	 RX Stats registers will clear on reads		    |
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_IFG = RX Min IFG
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_IFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS        RAZ      NS         NS        Reserved				            |
 <3:0>   IFG	   R/W      0x8	       8	 Min IFG (in IFG*8 bits) between packets used to    |
						  determine IFGERR. Normally IFG is 96 bits.	    |
						  Note in some operating modes, IFG cycles can be   |
						  inserted or removed in order to achieve clock rate|
						  adaptation. For these reasons, the default value  |
						  is slightly conservative and does not check upto  |
						  the full 96 bits of IFG.			    |
						  (SGMII/1000Base-X only)			    |
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_PAUSE_DROP_TIME = The TIME field in a PAUSE Packet which was dropped due to GMX RX FIFO full condition
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_PAUSE_DROP_TIME Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16>  NS        RAZ     NS          NS        Reserved				            |
 <15:0>   STATUS    R/W1C   0x0	        NS	  Time extracted from the dropped PAUSE packet	    |
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_STATS_PKTS
 *
 * Count of good received packets - packets that are not recognized as PAUSE
 * packets, dropped due the DMAC filter, dropped due FIFO full status, or
 * have any other OPCODE (FCS, Length, etc).
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_STATS_PKTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>  CNT      RC/W     0x0         NS        Count of received good packets                     |

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     GMX(0..4)_RX(0..3)_STATS_OCTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:0>  CNT      RC/W    0x0         NS        Octet count of received good packets               |

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_RX_STATS_PKTS_CTL
 *
 * Count of all packets received that were recognized as Flow Control or
 * PAUSE packets.  PAUSE packets with any kind of error are counted in
 * GMX_RX_STATS_PKTS_BAD.  Pause packets can be optionally dropped or
 * forwarded based on the GMX_RX_FRM_CTL[CTL_DRP] bit.  This count
 * increments regardless of whether the packet is dropped.  Pause packets
 * will never be counted in GMX_RX_STATS_PKTS.  Packets dropped due the dmac
 * filter will be counted in GMX_RX_STATS_PKTS_DMAC and not here.
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_STATS_PKTS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>  CNT      RC/W    0x0         NS        Count of received pause packets                    |

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     GMX(0..4)_RX(0..3)_STATS_OCTS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:0>  CNT      RC/W    0x0         NS        Octet count of received pause packets              |

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_RX_STATS_PKTS_DMAC
 *
 * Count of all packets received that were dropped by the dmac filter.
 * Packets that match the DMAC will be dropped and counted here regardless
 * of if they were bad packets.  These packets will never be counted in
 * GMX_RX_STATS_PKTS.
 *
 * Some packets that were not able to satisify the DECISION_CNT may not
 * actually be dropped by Octeon, but they will be counted here as if they
 * were dropped.
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_STATS_PKTS_DMAC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>  CNT      RC/W    0x0         NS        Count of filtered dmac packets                     |

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     GMX(0..4)_RX(0..3)_STATS_OCTS_DMAC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:0>  CNT      RC/W    0x0         NS        Octet count of filtered dmac packets               |

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_RX_STATS_PKTS_DRP
 *
 * Count of all packets received that were dropped due to a full receive FIFO.
 * This counts both partial packets in which there was enough space in the RX
 * FIFO to begin to buffer and the packet and total drops in which no packet was
 * sent to PKI.  This counts good and bad packets received - all packets dropped
 * by the FIFO.  It does not count packets dropped by the dmac or pause packet
 * filters.
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_STATS_PKTS_DRP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>  CNT      RC/W    0x0         NS        Count of dropped packets                           |

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     GMX(0..4)_RX(0..3)_STATS_OCTS_DRP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:0>  CNT      RC/W    0x0         NS        Octet count of dropped packets                     |

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_RX_STATS_PKTS_BAD
 *
 * Count of all packets received with some error that were not dropped
 * either due to the dmac filter or lack of room in the receive FIFO.
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_STATS_PKTS_BAD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>  CNT      RC/W    0x0         NS        Count of bad packets                               |

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_ADR_CTL = Address Filtering Control
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_ADR_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        Reserved				            |
 <3>     CAM_MODE R/W      0x0         NS        Allow or deny DMAC address filter		    |
						  0 = reject the packet on DMAC address match	    |
						  1 = accept the packet on DMAC address match	    |
 <2:1>   MCST     R/W      0x0         NS        Multicast Mode					    |
						  0 = Use the Address Filter CAM		    |
						  1 = Force reject all multicast packets	    |
						  2 = Force accept all multicast packets	    |
						  3 = Reserved					    |
 <0>     BCST     R/W      0x1         NS        Accept All Broadcast Packets			    |

Notes:
* ALGORITHM
  Here is some pseudo code that represents the address filter behavior.

     @verbatim
     bool dmac_addr_filter(uint8 prt, uint48 dmac) {
       ASSERT(prt >= 0 && prt <= 3);
       if (is_bcst(dmac))                               // broadcast accept
         return (GMX_RX{prt}_ADR_CTL[BCST] ? ACCEPT : REJECT);
       if (is_mcst(dmac) & GMX_RX{prt}_ADR_CTL[MCST] == 1)   // multicast reject
         return REJECT;
       if (is_mcst(dmac) & GMX_RX{prt}_ADR_CTL[MCST] == 2)   // multicast accept
         return ACCEPT;

       cam_hit = 0;

       for (i=0; i<8; i++) {
         if (GMX_RX{prt}_ADR_CAM_EN[EN<i>] == 0)
           continue;
	 uint48 unswizzled_mac_adr = 0x0;
	 for (j=5; j>=0; j--) {
	    unswizzled_mac_adr = (unswizzled_mac_adr << 8) | GMX_RX{prt}_ADR_CAM{j}[ADR<i*8+7:i*8>];
	 }
         if (unswizzled_mac_adr == dmac) {
           cam_hit = 1;
           break;
         }
       }

       if (cam_hit)
         return (GMX_RX{prt}_ADR_CTL[CAM_MODE] ? ACCEPT : REJECT);
       else
         return (GMX_RX{prt}_ADR_CTL[CAM_MODE] ? REJECT : ACCEPT);
     }
     @endverbatim
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_ADR_CAM_EN = Address Filtering Control Enable
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_ADR_CAM_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |
 <7:0>   EN       R/W      0x0         NS        CAM Entry Enables				    |
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_ADR_CAM0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |
						  Each entry contributes 8bits to one of 8 matchers.|
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |
						  In XAUI/RXAUI mode, all ports will reflect the    |
						  data written to port0.			    |
----------------------------------------------------------------------------------------------------
===



 *
 * GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_ADR_CAM1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |
						  Each entry contributes 8bits to one of 8 matchers.|
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |
						  In XAUI/RXAUI mode, all ports will reflect the    |
						  data written to port0.			    |
----------------------------------------------------------------------------------------------------
===



 *
 * GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_ADR_CAM2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |
						  Each entry contributes 8bits to one of 8 matchers.|
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |
						  In XAUI/RXAUI mode, all ports will reflect the    |
						  data written to port0.			    |
----------------------------------------------------------------------------------------------------
===



 *
 * GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_ADR_CAM3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |
						  Each entry contributes 8bits to one of 8 matchers.|
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |
						  In XAUI/RXAUI mode, all ports will reflect the    |
						  data written to port0.			    |
----------------------------------------------------------------------------------------------------
===



 *
 * GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_ADR_CAM4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |
						  Each entry contributes 8bits to one of 8 matchers.|
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |
						  In XAUI/RXAUI mode, all ports will reflect the    |
						  data written to port0.			    |
----------------------------------------------------------------------------------------------------
===



 *
 * GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     GMX(0..4)_RX(0..3)_ADR_CAM5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |
						  Each entry contributes 8bits to one of 8 matchers.|
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |
						  In XAUI/RXAUI mode, all ports will reflect the    |
						  data written to port0.			    |
----------------------------------------------------------------------------------------------------
===



 *
 * GMX_BIST = GMX BIST Results
 *

     ==============================================================
     GMX(0..4)_BIST Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:25> NS       RAZ      NS          NS        Reserved				            |
 <24:0>  STATUS   RO       0x0         0         BIST Results.                                      |
                                                  HW sets a bit in BIST for for memory that fails   |
						   0: gmx#.inb.fif_bnk0				    |
						   1: gmx#.inb.fif_bnk1				    |
						   2: gmx#.inb.fif_bnk2				    |
						   3: RAZ					    |
						   4: RAZ					    |
						   5: RAZ					    |
						   6: gmx#.inb.skd_bnk0				    |
						   7: gmx#.inb.skd_bnk1				    |
						   8: gmx#.outb.fif.skd_bnk0			    |
						   9: gmx#.outb.fif.skd_bnk1			    |
						  10: gmx#.outb.fif.fif_bnk0			    |
						  11: gmx#.outb.fif.fif_bnk1			    |
						  12: RAZ					    |
						  13: RAZ					    |
						  14: RAZ					    |
						  15: RAZ					    |
						  16: RAZ					    |
						  17: RAZ					    |
						  18: RAZ					    |
						  19: RAZ					    |
						  20: gmx#.csr.drf20x32m2_bist			    |
						  21: gmx#.csr.drf20x48m2_bist			    |
						  22: gmx#.outb.stat.drf16x27m1_bist		    |
						  23: gmx#.outb.stat.drf40x64m1_bist		    |
						  24: xgmii.tx.drf16x38m1_async_bist		    |
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_PRTS = Number of FIFOs to carve the RX buffer into
 *

     ==============================================================
     GMX(0..4)_RX_PRTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:3>  NS       RAZ      NS          NS        Reserved				            |
 <2:0>   PRTS     R/W      0x4         4         In SGMII/1000Base-X mode, the RX buffer can be	    |
						  carved into several logical buffers depending on  |
						  the number or implemented ports.		    |
						  0 or 1 port  = 2048 ticks / 16384 bytes	    |
						  2 ports      = 1024 ticks /  8192 bytes	    |
						  3 or 4 ports =  512 ticks /  4096 bytes	    |
Notes:
GMX_RX_PRTS[PRTS] must be set to '1' in XAUI/RXAUI mode.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_BP_DROP = FIFO mark for packet drop
 *

     ==============================================================
     GMX(0..4)_RX_BP_DROP(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6> NS       RAZ      NS          NS        Reserved				            |
 <5:0>  MARK     R/W      2	      2		Number of 8B ticks to reserve in the RX FIFO.	    |
						 When the FIFO exceeds this count, packets will     |
						 be dropped and not buffered.			    |
						 MARK should typically be programmed to ports+1.    |
						 Failure to program correctly can lead to system    |
						 instability.					    |

Notes:
The actual watermark is dynamic with respect to the GMX_RX_PRTS
register.  The GMX_RX_PRTS controls the depth of the port's
FIFO so as ports are added or removed, the drop point may change.

In XAUI/RXAUI mode prt0 is used for checking.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_BP_ON = Hiwater mark for port/interface backpressure
 *

     ==============================================================
     GMX(0..4)_RX_BP_ON(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:11> NS       RAZ      NS          NS        Reserved				            |
 <10:0>  MARK     R/W      0x80        0x80	 Hiwater mark (8B ticks) for backpressure. 	    |
						  Each register is for an individual port.  In	    |
						  XAUI/RXAUI mode, prt0 is used for the unified	    |
						  RX FIFO GMX_RX_BP_ON must satisfy		    |
						  BP_OFF <= BP_ON < (FIFO_SIZE - BP_DROP)	    |
						  A value of zero will immediately assert back	    |
						  pressure.					    |
						  Recommended value is 1/4th the size of the per    |
						  port RX FIFO as determined by GMX_RX_PRTS.	    |
						   GMX_RX_PRTS[PRTS]=1, MARK=0x200 (XAUI/RXAUI mode)|
						   GMX_RX_PRTS[PRTS]=2, MARK=0x100		    |
						   GMX_RX_PRTS[PRTS]=3, MARK=0x080		    |
						   GMX_RX_PRTS[PRTS]=4, MARK=0x080 (reset value)    |
						  The default value is best for 3 or 4 ports.	    |
						  MARK is recommended to be 0x200 in XAUI/RXAUI mode|

Notes:
In XAUI/RXAUI mode, prt0 is used for checking.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_BP_OFF = Lowater mark for packet drop
 *

     ==============================================================
     GMX(0..4)_RX_BP_OFF(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ      NS          NS        Reserved				            |
 <5:0>   MARK     R/W      0x10        0x10      Water mark (8B ticks) to deassert backpressure	    |

Notes:
In XAUI/RXAUI mode, prt0 is used for checking.
----------------------------------------------------------------------------------------------------
===


 *
 * Per Port
 *

 *
 * GMX_TX_THRESH = Packet TX Threshold
 *

     ==============================================================
     GMX(0..4)_TX(0..3)_THRESH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10>  NS       RAZ      NS          NS        Reserved				            |
 <9:0>	  CNT	   R/W	   0x20	       0x20	 Number of 16B ticks to accumulate in the TX FIFO   |
						  before sending on the packet interface	    |
						  This register should be large enough to prevent   |
						  underflow on the packet interface and must never  |
						  be set to zero.				    |
						  Since XAUI/RXAUI mode uses a single TX FIFO and   |
						  operates at higher data rates, the recommended    |
						  value is increased.				    |
						   XAUI/RXAUI Mode, CNT == 0x100		    |
						  In all modes, this register cannot exceed the	    |
						  the TX FIFO depth which is...			    |
						   GMX_TX_PRTS==0,1:  CNT MAX = 0x1ff		    |
						   GMX_TX_PRTS==2  :  CNT MAX = 0x0ff		    |
						   GMX_TX_PRTS==3,4:  CNT MAX = 0x07f		    |

Notes:

In XAUI/RXAUI mode, prt0 is used for transmission determination.
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_APPEND = Packet TX Append Control
 *

     ==============================================================
     GMX(0..4)_TX(0..3)_APPEND Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        Reserved				            |
 <3>     FORCE_FCS R/W     0x1         0x1       Append the Ethernet FCS on each pause packet 	    |
						  when FCS is clear.  Pause packets are normally    |
						  padded to 60 bytes.  If GMX_TX_MIN_PKT[MIN_SIZE]  |
						  exceeds 59, then FORCE_FCS will not be used.	    |
 <2>	 FCS      R/W	   0x1	       0x1	 Append the Ethernet FCS on each packet 	    |
 <1>	 PAD      R/W	   0x1	       0x1	 Append PAD bytes such that min sized         	    |
 <0>	 PREAMBLE R/W	   0x1	       0x1	 Prepend the Ethernet preamble on each transfer	    |
						  When GMX_TX_XAUI_CTL[HG_EN] is set, PREAMBLE	    |
						  must be zero.					    |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_SLOT = Packet TX Slottime Counter
 *

     ==============================================================
     GMX(0..4)_TX(0..3)_SLOT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS       RAZ      NS          NS        Reserved				            |
 <9:0>	 SLOT	  R/W	   0x200       0x200	 Slottime (refer to 802.3 to set correctly)	    |
						  10/100Mbs: 0x40				    |
						  1000Mbs:   0x200				    |
						  (SGMII/1000Base-X only)			    |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_BURST = Packet TX Burst Counter
 *

     ==============================================================
     GMX(0..4)_TX(0..3)_BURST Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>	 BURST	  R/W	   0x2000      0x2000	 Burst (refer to 802.3 to set correctly)	    |
						  Only valid for 1000Mbs half-duplex operation	    |
						   halfdup / 1000Mbs: 0x2000			    |
						   all other modes:   0x0			    |
						  (SGMII/1000Base-X only)			    |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_SMAC = Packet SMAC
 *

     ==============================================================
     GMX(0..4)_SMAC(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:0>	 SMAC 	  R/W	   0x0         NS	 The SMAC field is used for generating and	    |
						  accepting Control Pause packets		    |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_PAUSE_PKT_TIME = Packet TX Pause Packet pause_time field
 *

     ==============================================================
     GMX(0..4)_TX(0..3)_PAUSE_PKT_TIME Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>	 TIME 	  R/W	   0x60        NS	 The pause_time field placed in outbnd 802.3 pause  |
						  packets, HiGig2 messages, or PFC/CBFC pause	    |
						  packets.					    |
                                                  pause_time is in 512 bit-times		    |
						  Normally, TIME > GMX_TX_PAUSE_PKT_INTERVAL	    |

Notes:
Choosing proper values of GMX_TX_PAUSE_PKT_TIME[TIME] and
GMX_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
designer.  It is suggested that TIME be much greater than INTERVAL and
GMX_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
count and then when the backpressure condition is lifted, a PAUSE packet
with TIME==0 will be sent indicating that Octane is ready for additional
data.

If the system chooses to not set GMX_TX_PAUSE_ZERO[SEND], then it is
suggested that TIME and INTERVAL are programmed such that they satisify the
following rule...

   INTERVAL <= TIME - (largest_pkt_size + IFG + pause_pkt_size)

where largest_pkt_size is that largest packet that the system can send
(normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
of the PAUSE packet (normally 64B).
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_MIN_PKT = Packet TX Min Size Packet (PAD upto min size)
 *

     ==============================================================
     GMX(0..4)_TX(0..3)_MIN_PKT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |
 <7:0>	 MIN_SIZE R/W	   0x3b	       59	 Min frame in bytes before the FCS is applied	    |
                                                  Padding is only appened when GMX_TX_APPEND[PAD]   |
						  for the coresponding port is set.		    |
						  In SGMII mode, packets will be padded to	    |
						   MIN_SIZE+1. The reset value will pad to 60 bytes.|
						  In XAUI/RXAUI mode, packets will be padded to	    |
						   MIN(252,(MIN_SIZE+1 & ~0x3))			    |
						  When GMX_TX_XAUI_CTL[HG_EN] is set, the HiGig	    |
						   header (12B or 16B) is normally added to the	    |
						   packet, so MIN_SIZE should be 59+12=71B for	    |
						   HiGig or 59+16=75B for HiGig2.		    |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_PAUSE_PKT_INTERVAL = Packet TX Pause Packet transmission interval - how often PAUSE packets will be sent
 *

     ==============================================================
     GMX(0..4)_TX(0..3)_PAUSE_PKT_INTERVAL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>	 INTERVAL R/W	   0x10	       NS	 Arbitrate for a 802.3 pause packet, HiGig2 message,|
						  or PFC/CBFC pause packet every (INTERVAL*512)	    |
						  bit-times.					    |
						  Normally, 0 < INTERVAL < GMX_TX_PAUSE_PKT_TIME    |
						  INTERVAL=0, will only send a single PAUSE packet  |
						  for each backpressure event			    |

Notes:
Choosing proper values of GMX_TX_PAUSE_PKT_TIME[TIME] and
GMX_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
designer.  It is suggested that TIME be much greater than INTERVAL and
GMX_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
count and then when the backpressure condition is lifted, a PAUSE packet
with TIME==0 will be sent indicating that Octane is ready for additional
data.

If the system chooses to not set GMX_TX_PAUSE_ZERO[SEND], then it is
suggested that TIME and INTERVAL are programmed such that they satisify the
following rule...

   INTERVAL <= TIME - (largest_pkt_size + IFG + pause_pkt_size)

where largest_pkt_size is that largest packet that the system can send
(normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
of the PAUSE packet (normally 64B).
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_SOFT_PAUSE = Packet TX Software Pause
 *

     ==============================================================
     GMX(0..4)_TX(0..3)_SOFT_PAUSE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>	 TIME	  R/W	   0x0	       NS	 Back off the TX bus for (TIME*512) bit-times	    |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_PAUSE_TOGO = Packet TX Amount of time remaining to backpressure
 *

     ==============================================================
     GMX(0..4)_TX(0..3)_PAUSE_TOGO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:16> MSG_TIME RO	   NS	       NS	 Amount of time remaining to backpressure	    |
						  From the higig2 physical message pause timer	    |
						  (only valid on port0)				    |
 <15:0>	 TIME	  RO	   NS	       NS	 Amount of time remaining to backpressure	    |
						  From the standard 802.3 pause timer		    |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_PAUSE_ZERO = Packet TX Amount of time remaining to backpressure
 *

     ==============================================================
     GMX(0..4)_TX(0..3)_PAUSE_ZERO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved				            |
 <0>	 SEND	  R/W	   1	       1	 When backpressure condition clear, send PAUSE	    |
						  packet with pause_time of zero to enable the	    |
						  channel					    |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_STATS_CTL = TX Stats Control register
 *

     ==============================================================
     GMX(0..4)_TX(0..3)_STATS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1> NS        RAZ      NS          NS        Reserved				            |
 <0>    RD_CLR	  R/W      0x0	       0	 Stats registers will clear on reads		    |
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_TX_CTL = TX Control register
 *

     ==============================================================
     GMX(0..4)_TX(0..3)_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2> NS        RAZ      NS          NS        Reserved				            |
 <1>    XSDEF_EN  R/W      0x1	       1	 Enables the excessive deferral check for stats	    |
						  and interrupts				    |
						  (SGMII/1000Base-X half-duplex only)		    |
 <0>    XSCOL_EN  R/W      0x1	       1	 Enables the excessive collision check for stats    |
						  and interrupts				    |
						  (SGMII/1000Base-X half-duplex only)		    |
----------------------------------------------------------------------------------------------------
===


 * GMX_TX_STAT0 = GMX_TX_STATS_XSDEF / GMX_TX_STATS_XSCOL

     ==============================================================
     GMX(0..4)_TX(0..3)_STAT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> XSDEF    RC/W     0x0         NS        Number of packets dropped (never successfully      |
						  sent) due to excessive deferal		    |
						  (SGMII/1000Base-X half-duplex only)		    |
 <31:0>  XSCOL    RC/W     0x0         NS        Number of packets dropped (never successfully	    |
						  sent) due to excessive collision.  Defined by     |
						  GMX_TX_COL_ATTEMPT[LIMIT].			    |
						  (SGMII/1000Base-X half-duplex only)		    |

Notes:
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT1 = GMX_TX_STATS_SCOL  / GMX_TX_STATS_MCOL

     ==============================================================
     GMX(0..4)_TX(0..3)_STAT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> SCOL     RC/W     0x0         NS        Number of packets sent with a single collision     |
						  (SGMII/1000Base-X half-duplex only)		    |
 <31:0>  MCOL     RC/W     0x0         NS        Number of packets sent with multiple collisions    |
						  but < GMX_TX_COL_ATTEMPT[LIMIT].		    |
						  (SGMII/1000Base-X half-duplex only)		    |

Notes:
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT2 = GMX_TX_STATS_OCTS

     ==============================================================
     GMX(0..4)_TX(0..3)_STAT2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:0>  OCTS     RC/W     0x0         NS        Number of total octets sent on the interface.	    |
						  Does not count octets from frames that were	    |
						  truncated due to collisions in halfdup mode.	    |

Notes:
- Octect counts are the sum of all data transmitted on the wire including
  packet data, pad bytes, fcs bytes, pause bytes, and jam bytes.  The octect
  counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT3 = GMX_TX_STATS_PKTS

     ==============================================================
     GMX(0..4)_TX(0..3)_STAT3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>  PKTS     RC/W     0x0         NS        Number of total frames sent on the interface.	    |
						  Does not count frames that were truncated due to  |
						   collisions in halfdup mode.			    |

Notes:
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT4 = GMX_TX_STATS_HIST1 (64) / GMX_TX_STATS_HIST0 (<64)

     ==============================================================
     GMX(0..4)_TX(0..3)_STAT4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> HIST1    RC/W     0x0         NS        Number of packets sent with an octet count of 64.  |
 <31:0>  HIST0    RC/W     0x0         NS        Number of packets sent with an octet count         |
						  of < 64. 					    |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT5 = GMX_TX_STATS_HIST3 (128- 255) / GMX_TX_STATS_HIST2 (65- 127)

     ==============================================================
     GMX(0..4)_TX(0..3)_STAT5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> HIST3    RC/W     0x0         NS        Number of packets sent with an octet count of      |
						  128 - 255.					    |
 <31:0>  HIST2    RC/W     0x0         NS        Number of packets sent with an octet count of      |
						  65 - 127.					    |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT6 = GMX_TX_STATS_HIST5 (512-1023) / GMX_TX_STATS_HIST4 (256-511)

     ==============================================================
     GMX(0..4)_TX(0..3)_STAT6 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> HIST5    RC/W     0x0         NS        Number of packets sent with an octet count of      |
						  512 - 1023.					    |
 <31:0>  HIST4    RC/W     0x0         NS        Number of packets sent with an octet count of      |
						  256 - 511.					    |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT7 = GMX_TX_STATS_HIST7 (1024-1518) / GMX_TX_STATS_HIST6 (>1518)

     ==============================================================
     GMX(0..4)_TX(0..3)_STAT7 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> HIST7    RC/W     0x0         NS        Number of packets sent with an octet count         |
						  of > 1518.					    |
 <31:0>  HIST6    RC/W     0x0         NS        Number of packets sent with an octet count of      |
						  1024 - 1518.					    |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT8 = GMX_TX_STATS_MCST  / GMX_TX_STATS_BCST

     ==============================================================
     GMX(0..4)_TX(0..3)_STAT8 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> MCST     RC/W     0x0         NS        Number of packets sent to multicast DMAC.          |
						  Does not include BCST packets.		    |
 <31:0>  BCST     RC/W     0x0         NS        Number of packets sent to broadcast DMAC.	    |
						  Does not include MCST packets.		    |

Notes:
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Note, GMX determines if the packet is MCST or BCST from the DMAC of the
  packet.  GMX assumes that the DMAC lies in the first 6 bytes of the packet
  as per the 802.3 frame definition.  If the system requires additional data
  before the L2 header, then the MCST and BCST counters may not reflect
  reality and should be ignored by software.
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT9 = GMX_TX_STATS_UNDFLW / GMX_TX_STATS_CTL

     ==============================================================
     GMX(0..4)_TX(0..3)_STAT9 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> UNDFLW   RC/W     0x0         NS        Number of underflow packets			    |
 <31:0>  CTL      RC/W     0x0         NS        Number of Control packets (PAUSE flow control)	    |
						  generated by GMX.  It does not include control    |
						  packets forwarded or generated by the PP's.	    |
						  CTL will count the number of generated PFC frames.|
						  CTL will not track the number of generated HG2    |
						  messages.

Notes:
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     GMX(0..4)_TX(0..3)_SGMII_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved				            |
 <0>	 ALIGN	  R/W	   0x1	       0x1	 Align the transmission to even cycles              |
						  0 = Data can be sent on any cycle		    |
						      Possible to for the TX PCS machine to drop    |
						      first byte of preamble			    |
						  1 = Data will only be sent on even cycles	    |
						      There will be no loss of data		    |
						  (SGMII/1000Base-X only)			    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     GMX(0..4)_TX(0..3)_PIPE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:33> NS       RAZ      NS          NS        Reserved				            |
 <32>    IGN_BP   R/W      0x0         NS        When set, GMX will not throttle the TX machines    |
						  if the PIPE return FIFO fills up.                 |
						  IGN_BP should be clear in normal operation.	    |
 <31:21> NS       RAZ      NS          NS        Reserved				            |
 <20:16> NUMP     R/W      0x0         NS        Number of pipes this port|channel supports.	    |
						  In SGMII mode, each port binds to one pipe.	    |
						  In XAUI/RXAUI mode, the port can bind upto 16	    |
						  consecutive pipes.				    |
						  SGMII      mode, NUMP = 0 or 1.		    |
						  XAUI/RXAUI mode, NUMP = 0 or 1-16.		    |
						  0 = Disabled					    |
 <15:7>  NS       RAZ      NS          NS        Reserved				            |
 <6:0>   BASE     R/W      0x0         NS        When NUMP is non-zero, indicates the base pipe	    |
						  number this port|channel will accept.		    |
						  This port will accept pko packets from pipes in   |
						  the range of:					    |
						    BASE .. (BASE+(NUMP-1))			    |
						  BASE and NUMP must be constrained such that	    |
						    1) BASE+(NUMP-1) < 127			    |
						    2) Each used PKO pipe must map to exactly	    |
						       one port|channel				    |
						    3) The pipe ranges must be consistent with	    |
						       the PKO configuration.			    |
----------------------------------------------------------------------------------------------------
===


 *
 * Common
 *

 *
 * GMX_TX_PRTS = TX Ports
 *

     ==============================================================
     GMX(0..4)_TX_PRTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:5>  NS       RAZ      NS          NS        Reserved				            |
 <4:0>	 PRTS	  R/W	   4 	       NS	 Number of ports allowed on the interface	    |
						  (SGMII/1000Base-X only)			    |

Notes:
* The value programmed for PRTS is the number of the highest architected
  port number on the interface, plus 1.  For example, if port 2 is the
  highest architected port, then the programmed value should be 3 since
  there are 3 ports in the system - 0, 1, and 2.
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_IFG = Packet TX Interframe Gap
 *

     ==============================================================
     GMX(0..4)_TX_IFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |
 <7:4>	 IFG2	  R/W	   0x4	       NS	 1/3 of the interframe gap timing (in IFG2*8 bits)  |
						  If CRS is detected during IFG2, then the	    |
						  interFrameSpacing timer is not reset and a frame  |
						  is transmited once the timer expires.		    |
 <3:0>	 IFG1	  R/W	   0x8	       NS	 2/3 of the interframe gap timing (in IFG1*8 bits)  |
						  If CRS is detected during IFG1, then the	    |
						  interFrameSpacing timer is reset and a frame is   |
						  not transmited.				    |

Notes:
* Programming IFG1 and IFG2.

  For 10/100/1000Mbs half-duplex systems that require IEEE 802.3
  compatibility, IFG1 must be in the range of 1-8, IFG2 must be in the range
  of 4-12, and the IFG1+IFG2 sum must be 12.

  For 10/100/1000Mbs full-duplex systems that require IEEE 802.3
  compatibility, IFG1 must be in the range of 1-11, IFG2 must be in the range
  of 1-11, and the IFG1+IFG2 sum must be 12.

  For XAUI/RXAUI/10Gbs systems that require IEEE 802.3 compatibility, the
  IFG1+IFG2 sum must be 12.  IFG1[1:0] and IFG2[1:0] must be zero.

  For all other systems, IFG1 and IFG2 can be any value in the range of
  1-15.  Allowing for a total possible IFG sum of 2-30.
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_JAM = Packet TX Jam Pattern
 *

     ==============================================================
     GMX(0..4)_TX_JAM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |
 <7:0>	 JAM	  R/W	   0xEE	       NS	 Jam pattern					    |
						  (SGMII/1000Base-X half-duplex only)			    |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_COL_ATTEMPT = Packet TX collision attempts before dropping frame
 *

     ==============================================================
     GMX(0..4)_TX_COL_ATTEMPT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:5>  NS       RAZ      NS          NS        Reserved				            |
 <4:0>	 LIMIT    R/W	   0x10	       16	 Collision Attempts				    |
						  (SGMII/1000Base-X half-duplex only)			    |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_PAUSE_PKT_DMAC = Packet TX Pause Packet DMAC field
 *

     ==============================================================
     GMX(0..4)_TX_PAUSE_PKT_DMAC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:0>	 DMAC 	  R/W	   0x0180c2000001 0x0180c2000001 The DMAC field placed is outbnd pause pkts |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_PAUSE_PKT_TYPE = Packet Interface TX Pause Packet TYPE field
 *

     ==============================================================
     GMX(0..4)_TX_PAUSE_PKT_TYPE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>	 TYPE 	  R/W	   0x8808      0x8808	 The TYPE field placed is outbnd pause pkts	    |
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_TX_OVR_BP = Packet Interface TX Override BackPressure
 *

     ==============================================================
     GMX(0..4)_TX_OVR_BP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:32> TX_PRT_BP R/W	   0x0	       0x0	 Per port BP sent to PKO			    |
						  0=Port is available				    |
						  1=Port should be back pressured		    |
 <31:12> NS       RAZ      NS          NS        Reserved				            |
 <11:8>  EN	  R/W	   0x0	       0	 Per port Enable back pressure override		    |
 <7:4>	 BP	  R/W	   0x0	       0	 Per port BackPressure status to use		    |
						  0=Port is available				    |
						  1=Port should be back pressured		    |
 <3:0>   IGN_FULL R/W	   0x0	       0	 Ignore the RX FIFO full when computing BP	    |

Notes:

In XAUI/RXAUI mode, only the lsb (corresponding to port0) of EN, BP, and
IGN_FULL are used.

GMX*_TX_OVR_BP[EN<0>] must be set to one and GMX*_TX_OVR_BP[BP<0>] must be
cleared to zero (to forcibly disable HW-automatic 802.3 pause packet generation)
with the HiGig2 Protocol when GMX*_HG2_CONTROL[HG2TX_EN]=0. (The HiGig2 protocol
is indicated by GMX*_TX_XAUI_CTL[HG_EN]=1 and GMX*_RX0_UDD_SKP[LEN]=16.) HW can
only auto-generate backpressure through HiGig2 messages (optionally, when
GMX*_HG2_CONTROL[HG2TX_EN]=1) with the HiGig2 protocol.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_TX_BP = Packet Interface TX BackPressure Register
 *

     ==============================================================
     GMX(0..4)_TX_BP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        Reserved				            |
 <3:0>	 BP 	  RO	   0x0	       0	 Per port BackPressure status			    |
						  0=Port is available				    |
						  1=Port should be back pressured		    |

Notes:
In XAUI/RXAUI mode, only the lsb (corresponding to port0) of BP is used.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_TX_CORRUPT = TX - Corrupt TX packets with the ERR bit set
 *

     ==============================================================
     GMX(0..4)_TX_CORRUPT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        Reserved				            |
 <3:0>	 CORRUPT  R/W	   0xf	       0xf	 Per port error propagation			    |
						  0=Never corrupt packets			    |
						  1=Corrupt packets with ERR			    |

Notes:
Packets sent from PKO with the ERR wire asserted will be corrupted by
the transmitter if CORRUPT[prt] is set (XAUI/RXAUI uses prt==0).

Corruption means that GMX will send a bad FCS value.  If GMX_TX_APPEND[FCS]
is clear then no FCS is sent and the GMX cannot corrupt it.  The corrupt FCS
value is 0xeeeeeeee for SGMII/1000Base-X and 4 bytes of the error
propagation code in XAUI/RXAUI mode.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_PRT_INFO = Report the RX status for port
 *

     ==============================================================
     GMX(0..4)_RX_PRT_INFO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:20> NS       RAZ      NS          NS        Reserved				            |
 <19:16> DROP     RO	   0x0	       0x0	 Per port indication that data was dropped	    |
 <15:4>  NS       RAZ      NS          NS        Reserved				            |
 <3:0>	 COMMIT   RO	   0x0	       0x0	 Per port indication that SOP was accepted	    |

Notes:
In XAUI/RXAUI mode, only the lsb (corresponding to port0) of DROP and COMMIT are used.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_TX_LFSR = LFSR used to implement truncated binary exponential backoff
 *

     ==============================================================
     GMX(0..4)_TX_LFSR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>	 LFSR     R/W	   0xffff      NS     	 The current state of the LFSR used to feed random  |
						  numbers to compute truncated binary exponential   |
						  backoff.					    |
						  (SGMII/1000Base-X half-duplex only)		    |
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_TX_INT_REG = Interrupt Register
 *

     ==============================================================
     GMX(0..4)_TX_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:25> NS       RAZ      NS          NS        Reserved				            |
 <24>    XCHANGE  R/W1C    0x0         0         XAUI/RXAUI link status changed - this denotes ae   |
						  change to GMX_RX_XAUI_CTL[STATUS]		    |
						  (XAUI/RXAUI mode only)			    |
 <23:20> PTP_LOST R/W1C    0x0         0         A packet with a PTP request was not able to be	    |
						  sent due to XSCOL			            |
 <19:16> LATE_COL R/W1C    0x0         0         TX Late Collision				    |
						  (SGMII/1000Base-X half-duplex only)		    |
 <15:12> XSDEF    R/W1C    0x0         0         TX Excessive deferral				    |
						  (SGMII/1000Base-X half-duplex only)		    |
 <11:8>  XSCOL    R/W1C    0x0         0         TX Excessive collisions			    |
						  (SGMII/1000Base-X half-duplex only)		    |
 <7:6>   SPARE    R/W1C    0x0         0         Spare						    |
 <5:2>   UNDFLW   R/W1C    0x0         0         TX Underflow                   		    |
 <1>     PKO_NXP  R/W1C    0x0         0         Port pipe out-of-range from PKO Interface	    |
 <0>     PKO_NXA  R/W1C    0x0         0         Port address out-of-range from PKO Interface	    |

Notes:
In XAUI/RXAUI mode, only the lsb (corresponding to port0) of UNDFLW is used.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_TX_INT_EN = Interrupt Enable
 *

     ==============================================================
     GMX(0..4)_TX_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:25> NS       RAZ      NS          NS        Reserved				            |
 <24>    XCHANGE  R/W      0x0         0         XAUI/RXAUI link status changed - this denotes a    |
						  change to GMX_RX_XAUI_CTL[STATUS]		    |
						  (XAUI/RXAUI mode only)			    |
 <23:20> PTP_LOST R/W      0x0         0         A packet with a PTP request was not able to be	    |
						  sent due to XSCOL			            |
 <19:16> LATE_COL R/W      0x0         0         TX Late Collision				    |
						  (SGMII/1000Base-X half-duplex only)		    |
 <15:12> XSDEF    R/W      0x0         0         TX Excessive deferral				    |
						  (SGMII/1000Base-X half-duplex only)		    |
 <11:8>  XSCOL    R/W      0x0         0         TX Excessive collisions			    |
						  (SGMII/1000Base-X half-duplex only)		    |
 <7:6>   SPARE    R/W      0x0         0         Spare						    |
 <5:2>   UNDFLW   R/W      0x0         0         TX Underflow					    |
 <1>     PKO_NXP  R/W      0x0         0         Port pipe out-of-range from PKO Interface	    |
 <0>     PKO_NXA  R/W      0x0         0         Port address out-of-range from PKO Interface	    |

Notes:
In XAUI/RXAUI mode, only the lsb (corresponding to port0) of UNDFLW is used.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_NXA_ADR = NXA Port Address
 *

     ==============================================================
     GMX(0..4)_NXA_ADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:23> NS       RAZ      NS          NS        Reserved				            |
 <22:16> PIPE     RO       0x0         NS        Logged pipe for NXP exceptions 		    |
 <15:6>  NS       RAZ      NS          NS        Reserved				            |
 <5:0>   PRT      RO       0x0         NS        Logged address for NXA exceptions 		    |
						  The logged address will be from the first	    |
						  exception that caused the problem.  NCB has	    |
						  higher priority than PKO and will win.	    |
						  (only PRT[3:0])			            |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_BAD_REG = A collection of things that have gone very, very wrong
 *

     ==============================================================
     GMX(0..4)_BAD_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:31> NS       RAZ      NS          NS        Reserved				            |
 <30:27> INB_NXA  R/W1C    0x0         0         Inbound port > GMX_RX_PRTS                         |
 <26>    STATOVR  R/W1C    0x0         0         TX Statistics overflow				    |
						  The common FIFO to SGMII and XAUI/RXAUI had an    |
						  overflow.					    |
						  TX Stats are corrupted                            |
 <25:22> LOSTSTAT R/W1C    0x0         0         TX Statistics data was over-written		    |
						  In SGMII, one bit per port			    |
						  In XAUI/RXAUI, only port0 is used		    |
						  TX Stats are corrupted                            |
 <21:6>  NS       RAZ      NS          NS        Reserved				            |
 <5:2>   OUT_OVR  R/W1C    0x0         0         Outbound data FIFO overflow (per port)        	    |
 <1:0>   NS       RAZ      NS          NS        Reserved				            |

Notes:

In XAUI/RXAUI mode, only the lsb (corresponding to port0) of INB_NXA, LOSTSTAT,
OUT_OVR, are used.
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_STAT_BP = Number of cycles that the TX/Stats block has help up operation
 *

     ==============================================================
     GMX(0..4)_STAT_BP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:17> NS       RAZ      NS          NS        Reserved				            |
 <16>    BP       RO       0x0         0         Current TX stats BP state			    |
						  When the TX stats machine cannot update the stats |
						  registers quickly enough, the machine has the	    |
						  ability to BP TX datapath.  This is a rare event  |
						  and will not occur in normal operation.	    |
						  0 = no backpressure is applied		    |
						  1 = backpressure is applied to TX datapath to	    |
						      allow stat update operations to complete	    |
 <15:0>  CNT      R/W1C    0x0         0         Number of cycles that BP has been asserted	    |
						  Saturating counter                                |

Notes:

*DON'T PUT IN HRM*

It has no relationship with the TX FIFO per se.  The TX engine sends packets
from PKO and upon completion, sends a command to the TX stats block for an
update based on the packet size.  The stats operation can take a few cycles -
normally not enough to be visible considering the 64B min packet size that is
ethernet convention.

In the rare case in which SW attempted to schedule really, really, small packets
or the sclk (6xxx) is running ass-slow, then the stats updates may not happen in
real time and can back up the TX engine.

This counter is the number of cycles in which the TX engine was stalled.  In
normal operation, it should always be zeros.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     GMX(0..4)_TX_XAUI_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:11> NS       RAZ      NS          NS        Reserved				            |
 <10:9>  HG_PAUSE_HGI R/W  0x2         2         HGI Field for HW generated HiGig pause packets	    |
						  (XAUI/RXAUI mode only)			    |
 <8>     HG_EN    R/W      0x0         0         Enable HiGig Mode				    |
						  When HG_EN is set and GMX_RX_UDD_SKP[SKIP]=12	    |
						   the interface is in HiGig/HiGig+ mode and the    |
						   following must be set:			    |
						   GMX_RX_FRM_CTL[PRE_CHK] == 0			    |
						   GMX_RX_UDD_SKP[FCSSEL] == 0			    |
						   GMX_RX_UDD_SKP[SKIP] == 12      		    |
						   GMX_TX_APPEND[PREAMBLE] == 0			    |
						  When HG_EN is set and GMX_RX_UDD_SKP[SKIP]=16	    |
						   the interface is in HiGig2 mode and the	    |
						   following must be set:			    |
						   GMX_RX_FRM_CTL[PRE_CHK] == 0			    |
						   GMX_RX_UDD_SKP[FCSSEL] == 0			    |
						   GMX_RX_UDD_SKP[SKIP] == 16			    |
						   GMX_TX_APPEND[PREAMBLE] == 0			    |
						   GMX_PRT0_CBFC_CTL[RX_EN] == 0		    |
						   GMX_PRT0_CBFC_CTL[TX_EN] == 0		    |
						  (XAUI/RXAUI mode only)			    |
 <7>     NS       RAZ      NS          NS        Reserved				            |
 <6>     LS_BYP	  R/W	   0x0	       0	 Bypass the link status as determined by the XGMII  |
						  receiver and set the link status of the	    |
						  transmitter to LS.				    |
						  (XAUI/RXAUI mode only)			    |
 <5:4>   LS       R/W	   0x0	       0	 Link Status					    |
						  0 = Link Ok					    |
						      Link runs normally. RS passes MAC data to PCS |
						  1 = Local Fault				    |
						      RS layer sends continuous remote fault	    |
						       sequences.				    |
						  2 = Remote Fault				    |
						      RS layer sends continuous idles sequences	    |
						  3 = Link Drain				    |
						      RS layer drops full packets to allow GMX and  |
						       PKO to drain their FIFOs			    |
						  (XAUI/RXAUI mode only)			    |
 <3:2>   NS       RAZ      NS          NS        Reserved				            |
 <1>     UNI_EN	  R/W	   0x0	       0	 Enable Unidirectional Mode (IEEE Clause 66)	    |
						  (XAUI/RXAUI mode only)			    |
 <0>     DIC_EN   R/W      0x0         1         Enable the deficit idle counter for IFG averaging  |
						  (XAUI/RXAUI mode only)			    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     GMX(0..4)_RX_XAUI_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved				            |
 <1:0>   STATUS   RO       0x0         0         Link Status					    |
						  0=Link OK					    |
						  1=Local Fault					    |
						  2=Remote Fault				    |
						  3=Reserved					    |
						  (XAUI/RXAUI mode only)			    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     GMX(0..4)_RX_XAUI_BAD_COL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:40> NS       RAZ      NS          NS        Reserved				            |
 <39>    VAL	  R/W1C	   0x0	       NS	 Set when GMX_RX_INT_REG[PCTERR] is set.	    |
						  (XAUI/RXAUI mode only)			    |
 <38:36> STATE	  RO	   0x0	       NS	 When GMX_RX_INT_REG[PCTERR] is set, STATE will	    |
						  contain the receive state at the time of the	    |
						  error.					    |
						  (XAUI/RXAUI mode only)			    |
 <35:32> LANE_RXC RO       0x0         NS        When GMX_RX_INT_REG[PCTERR] is set, LANE_RXC will  |
						  contain the XAUI/RXAUI column at the time of the  |
						  error.					    |
						  (XAUI/RXAUI mode only)			    |
 <31:0>  LANE_RXD RO       0x0         NS        When GMX_RX_INT_REG[PCTERR] is set, LANE_RXD will  |
						  conatin the XAUI/RXAUI column at the time of the  |
						   error.					    |
						  (XAUI/RXAUI mode only)			    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GMX(0..4)_XAUI_EXT_LOOPBACK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:5>  NS       RAZ      NS          NS        Reserved				            |
 <4>     EN       R/W      0x0         0         Loopback enable				    |
						  Puts the packet interface in external loopback    |
						  mode on the XAUI/RXAUI bus in which the RX lines  |
						  are reflected on the TX lines.		    |
						  (XAUI/RXAUI mode only)			    |
 <3:0>   THRESH   R/W      0x6         6         Threshhold on the TX FIFO			    |
						  SW must only write the typical value.  Any other  |
						  value will cause loopback mode not to function    |
						  correctly.					    |
						  (XAUI/RXAUI mode only)			    |
----------------------------------------------------------------------------------------------------
===



*** HG2 message CSRs


     ==============================================================
     GMX(0..4)_RX_HG2_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:32> PHTIM2GO RO       0x0         NS        Physical time to go for removal of physical link   |
						  pause. Initial value from received HiGig2 msg pkt |
						  Non-zero only when physical back pressure active  |
 <31:16> XOF	  RO	   0x0	       0	 16 bit xof back pressure vector from HiGig2 msg pkt|
						  or from PFC/CBFC packets.			    |
						  Non-zero only when logical back pressure is active|
						  All bits will be 0 when LGTIM2GO=0                |
 <15:0>  LGTIM2GO RO	   0x0         NS        Logical packet flow back pressure time remaining   |
						  Initial value set from xof time field of HiGig2   |
						  message packet received or a function of the	    |
						  enabled and current timers for PFC/CBFC packets.  |
						  Non-zero only when logical back pressure is active|
----------------------------------------------------------------------------------------------------
===




     ==============================================================
     GMX(0..4)_HG2_CONTROL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:19> NS       RAZ      NS          NS        Reserved				            |
 <18>    HG2TX_EN R/W	   0x0	       0	 Enable Transmission of HG2 phys and logl messages  |
                                                 When set, also disables HW auto-generated (802.3   |
                                                 and PFC/CBFC) pause frames. (OCTEON cannot generate|
						 proper 802.3 or PFC/CBFC pause frames in HiGig2    |
						 mode.)						    |
 <17>    HG2RX_EN R/W	   0x0	       0	 Enable extraction and processing of HG2 message    |
						  packet from RX flow. Physical logical pause info  |
						  is used to pause physical link, back pressure PKO |
                                                  HG2RX_EN must be set when HiGig2 messages are     |
                                                  present in the receive stream.                    |
 <16>    PHYS_EN  R/W	   0x1	       NS	 1 bit physical link pause enable for recevied      |
						  HiGig2 physical pause message                     |
 <15:0>  LOGL_EN  R/W	   0xffff      NS	 16 bit xof enables for recevied HiGig2 messages    |
						  or PFC/CBFC packets				    |
Notes:
The HiGig2 TX and RX enable would normally be both set together for HiGig2 messaging. However
setting just the TX or RX bit will result in only the HG2 message transmit or the receive
capability.
PHYS_EN and LOGL_EN bits when 1, allow link pause or back pressure to PKO as per received
HiGig2 message. When 0, link pause and back pressure to PKO in response to received messages
are disabled.

GMX*_TX_XAUI_CTL[HG_EN] must be set to one(to enable HiGig) whenever either HG2TX_EN or HG2RX_EN
are set.

GMX*_RX0_UDD_SKP[LEN] must be set to 16 (to select HiGig2) whenever either HG2TX_EN or HG2RX_EN
are set.

GMX*_TX_OVR_BP[EN<0>] must be set to one and GMX*_TX_OVR_BP[BP<0>] must be cleared to zero
(to forcibly disable HW-automatic 802.3 pause packet generation) with the HiGig2 Protocol when
GMX*_HG2_CONTROL[HG2TX_EN]=0. (The HiGig2 protocol is indicated by GMX*_TX_XAUI_CTL[HG_EN]=1
and GMX*_RX0_UDD_SKP[LEN]=16.) The HW can only auto-generate backpressure via HiGig2 messages
(optionally, when HG2TX_EN=1) with the HiGig2 protocol.
----------------------------------------------------------------------------------------------------
===




     ==============================================================
     GMX(0..4)_TX_HG2_REG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>  TX_XOF   R/W1     0x0         NS        TX HiGig2 message for logical link pause when any  |
                                                 bit value changes                                  |
						  Only write in HiGig2 mode i.e. when		    |
						  GMX_TX_XAUI_CTL[HG_EN]=1 and			    |
						  GMX_RX_UDD_SKP[SKIP]=16.			    |
Notes:
The TX_XOF[15:0] field in GMX(0..4)_TX_HG2_REG1 and the TX_XON[15:0] field in
GMX(0..4)_TX_HG2_REG2 register map to the same 16 physical flops. When written with address of
GMX(0..4)_TX_HG2_REG1, it will exhibit write 1 to set behavior and when written with address of
GMX(0..4)_TX_HG2_REG2, it will exhibit write 1 to clear behavior.
For reads, either address will return the $GMX(0..4)_TX_HG2_REG1 values.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     GMX(0..4)_TX_HG2_REG2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>  TX_XON   R/W1C    0x0         NS        TX HiGig2 message for logical link pause when any  |
                                                 bit value changes                                  |
						  Only write in HiGig2 mode i.e. when		    |
						  GMX_TX_XAUI_CTL[HG_EN]=1 and			    |
						  GMX_RX_UDD_SKP[SKIP]=16.			    |
Notes:
The TX_XOF[15:0] field in GMX(0..4)_TX_HG2_REG1 and the TX_XON[15:0] field in
GMX(0..4)_TX_HG2_REG2 register map to the same 16 physical flops. When written with address  of
GMX(0..4)_TX_HG2_REG1, it will exhibit write 1 to set behavior and when written with address of
GMX(0..4)_TX_HG2_REG2, it will exhibit write 1 to clear behavior.
For reads, either address will return the $GMX(0..4)_TX_HG2_REG1 values.
----------------------------------------------------------------------------------------------------
===

 *** HG2 message CSRs end


     ==============================================================
     GMX(0..4)_PRT(0..0)_CBFC_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> PHYS_EN  R/W      0x00ff      0x00ff    Determines which ports will have physical	    |
						  backpressure pause packets.			    |
						  The value pplaced in the Class Enable Vector	    |
						  field of the PFC/CBFC pause packet will be	    |
						  PHYS_EN | LOGL_EN				    |
 <47:32> LOGL_EN  R/W      0x00ff      0x00ff    Determines which ports will have logical	    |
						  backpressure pause packets.			    |
						  The value pplaced in the Class Enable Vector	    |
						  field of the PFC/CBFC pause packet will be	    |
						  PHYS_EN | LOGL_EN				    |
 <31:16> PHYS_BP  R/W      0xffff      NS        When RX_EN is set and the HW is backpressuring any |
						  ports (from either PFC/CBFC pause packets or the  |
						  GMX_TX_OVR_BP[TX_PRT_BP] register) and all ports  |
						  indiciated by PHYS_BP are backpressured, simulate |
						  physical backpressure by defering all packets on  |
						  the transmitter.				    |
 <15:4>  NS       RAZ      NS          NS        Reserved				            |
 <3>     BCK_EN   R/W      0x0         0         Forward PFC/CBFC Pause information to BP block	    |
 <2>     DRP_EN	  R/W      0x0         0         Drop Control PFC/CBFC Pause Frames		    |
 <1>     TX_EN    R/W      0x0         0         When set, allow for PFC/CBFC Pause Packets	    |
						  Must be clear in HiGig2 mode i.e. when 	    |
						  GMX_TX_XAUI_CTL[HG_EN]=1 and			    |
						  GMX_RX_UDD_SKP[SKIP]=16.			    |
 <0>     RX_EN    R/W      0x0         0         When set, allow for PFC/CBFC Pause Packets	    |
						  Must be clear in HiGig2 mode i.e. when 	    |
						  GMX_TX_XAUI_CTL[HG_EN]=1 and			    |
						  GMX_RX_UDD_SKP[SKIP]=16.			    |

Notes:
XOFF for a specific port is XOFF<prt> = (PHYS_EN<prt> & PHYS_BP) | (LOGL_EN<prt> & LOGL_BP<prt>)
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GMX(0..4)_TX(0..0)_CBFC_XOFF Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>  XOFF     R/W1     0x0         0         Which ports to backpressure			    |
						  Do not write in HiGig2 mode i.e. when 	    |
						  GMX_TX_XAUI_CTL[HG_EN]=1 and			    |
						  GMX_RX_UDD_SKP[SKIP]=16.			    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GMX(0..4)_TX(0..0)_CBFC_XON Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>  XON      R/W1C    0x0         0         Which ports to stop backpressure		    |
						  Do not write in HiGig2 mode i.e. when 	    |
						  GMX_TX_XAUI_CTL[HG_EN]=1 and			    |
						  GMX_RX_UDD_SKP[SKIP]=16.			    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GMX(0..4)_EBP_MSK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>  MSK      R/W      0x0         0         BP channel mask				    |
						  GMX can completely ignore the channel BP for      |
						  channels specified by the MSK field.  Any channel |
						  in which MSK == 1, will never send BP information |
						  to PKO.					    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GMX(0..4)_EBP_DIS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>  DIS      R/W      0x0         0         BP channel disable				    |
 						  GMX has the ability to remap unused channels	    |
						  in order to get down to GMX_TX_PIPE[NUMP]	    |
						  channels.					    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GMX(0..4)_BPID_MAP(0..15) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:17> NS       RAZ      NS          NS        Reserved				            |
 <16>    STATUS   RO       0x0         0x0       Current received BP from IPD                       |
 <15:9>  NS       RAZ      NS          NS        Reserved				            |
 <8>     VAL      R/W      0x0         0x0       Table entry is valid                               |
 <7:6>   NS       RAZ      NS          NS        Reserved				            |
 <5:0>   BPID     R/W      0x0         0x0       Backpressure ID the entry maps to                  |

Notes:

GMX will build BPID_VECTOR<15:0> using the 16 GMX_BPID_MAP entries and the BPID
state from IPD.  In XAUI/RXAUI mode when PFC/CBFC/HiGig2 is used, the
BPID_VECTOR becomes the logical backpressure.  In XAUI/RXAUI mode when
PFC/CBFC/HiGig2 is not used or when in 4xSGMII mode, the BPID_VECTOR can be used
with the GMX_BPID_MSK register to determine the physical backpressure.

In XAUI/RXAUI mode, the entire BPID_VECTOR<15:0> is available determining physical
backpressure for the single XAUI/RXAUI interface.

In SGMII mode, BPID_VECTOR is broken up as follows:
   SGMII interface0 uses BPID_VECTOR<3:0>
   SGMII interface1 uses BPID_VECTOR<7:4>
   SGMII interface2 uses BPID_VECTOR<11:8>
   SGMII interface3 uses BPID_VECTOR<15:12>

In all SGMII configurations, and in some XAUI/RXAUI configurations, the
interface protocols only support physical backpressure. In these cases, a single
BPID will commonly drive the physical backpressure for the physical
interface. We provide example programmings for these simple cases.

In XAUI/RXAUI mode where PFC/CBFC/HiGig2 is not used, an example programming
would be as follows:

   @verbatim
   GMX_BPID_MAP0[VAL]    = 1;
   GMX_BPID_MAP0[BPID]   = xaui_bpid;
   GMX_BPID_MSK[MSK_OR]  = 1;
   GMX_BPID_MSK[MSK_AND] = 0;
   @endverbatim

In SGMII mode, an example programming would be as follows:

   @verbatim
   for (i=0; i<4; i++) {
      if (GMX_PRTi_CFG[EN]) {
         GMX_BPID_MAP(i*4)[VAL]    = 1;
         GMX_BPID_MAP(i*4)[BPID]   = sgmii_bpid(i);
         GMX_BPID_MSK[MSK_OR]      = (1 << (i*4)) | GMX_BPID_MSK[MSK_OR];
      }
   }
   GMX_BPID_MSK[MSK_AND] = 0;
   @endverbatim
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GMX(0..4)_BPID_MSK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:32> MSK_OR   R/W      0x0         0x0       Assert physical BP when the backpressure ID vector |
						  combined with MSK_OR indicates BP as follows.	    |
						  phys_bp_msk_or =				    |
						   (BPID_VECTOR<x:y> & MSK_OR<x:y>) != 0	    |
						  phys_bp = phys_bp_msk_or || phys_bp_msk_and	    |
						  In XAUI/RXAUI mode, x=15, y=0			    |
						  In SGMII mode, x/y are set depending on the SGMII |
						  interface.					    |
						  SGMII interface0, x=3,  y=0			    |
						  SGMII interface1, x=7,  y=4			    |
						  SGMII interface2, x=11, y=8			    |
						  SGMII interface3, x=15, y=12			    |
 <31:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>  MSK_AND  R/W      0x0         0x0       Assert physical BP when the backpressure ID vector |
						  combined with MSK_AND indicates BP as follows.    |
						  phys_bp_msk_and =				    |
						   (BPID_VECTOR<x:y> & MSK_AND<x:y>) == MSK_AND<x:y>|
						  phys_bp = phys_bp_msk_or || phys_bp_msk_and	    |
						  In XAUI/RXAUI mode, x=15, y=0			    |
						  In SGMII mode, x/y are set depending on the SGMII |
						  interface.					    |
						  SGMII interface0, x=3,  y=0			    |
						  SGMII interface1, x=7,  y=4			    |
						  SGMII interface2, x=11, y=8			    |
						  SGMII interface3, x=15, y=12			    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     GMX(0..4)_RXAUI_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved				            |
 <0>     DISPARITY R/W     0x0         NS        Selects which disparity calculation to use when    |
						  combining or splitting the RXAUI lanes.	    |
						  0=Interleave lanes before PCS layer		    |
						    As described in the Dune Networks/Broadcom	    |
						    RXAUI v2.1 specification.			    |
						    (obeys 6.25GHz SERDES disparity)		    |
						  1=Interleave lanes after PCS layer		    |
						    As described in the Marvell RXAUI Interface	    |
						    specification.				    |
						    (does not obey 6.25GHz SERDES disparity)	    |
						  (RXAUI mode only)				    |
----------------------------------------------------------------------------------------------------
===


 *DON'T PUT IN HRM*

     ==============================================================
     GMX(0..4)_PIPE_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:20> NS       RAZ      NS          NS        Reserved				            |
 <19:16> OVR      R/W1C    0           0         Pipe credit return FIFO has overflowed.	    |
 <15:12> NS       RAZ      NS          NS        Reserved				            |
 <11:8>  BP       R/W1C    0           0         Pipe credit return FIFO has filled up and asserted |
						  backpressure to the datapath.			    |
 <7:4>   NS       RAZ      NS          NS        Reserved				            |
 <3:0>   STOP     R/W1C    0           0         PKO has asserted backpressure on the pipe credit   |
						  return interface.				    |
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_SOFT_BIST = Software BIST Control
 *

     ==============================================================
     GMX(0..4)_SOFT_BIST Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS         RAZ    NS          NS        Reserved				            |
 <1>     START_BIST R/W    0           NS        Run BIST on all memories in the XAUI/RXAUI	    |
						  CLK domain					    |
 <0>     CLEAR_BIST R/W    0           NS        Choose between full BIST and CLEAR bist            |
						  0=Run full BIST				    |
						  1=Only run clear BIST				    |
----------------------------------------------------------------------------------------------------
===


 *
 *DON'T PUT IN HRM*
 *

     ==============================================================
     GMX(0..4)_CLK_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved				            |
 <0>     CLK_EN   R/W      0           0         Force the clock enables on		            |
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_INF_MODE = Interface Mode
 *

     ==============================================================
     GMX(0..4)_INF_MODE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:12> NS       RAZ      NS          NS        Reserved				            |
 <11:8>  SPEED    RO       NS          NS        Interface Speed			            |
						  QLM speed pins  which select reference clock	    |
						  period and interface data rate.  If the QLM PLL   |
						  inputs are correct, the speed setting correspond  |
						  to the following data rates (in Gbaud).	    |
						  0  = 5					    |
						  1  = 2.5					    |
						  2  = 2.5					    |
						  3  = 1.25					    |
						  4  = 1.25					    |
						  5  = 6.25					    |
						  6  = 5					    |
						  7  = 2.5					    |
						  8  = 3.125					    |
						  9  = 2.5					    |
						  10 = 1.25					    |
						  11 = 5					    |
						  12 = 6.25					    |
						  13 = 3.75					    |
						  14 = 3.125					    |
						  15 = QLM disabled				    |
 <7>     NS       RAZ      NS          NS        Reserved				            |
 <6:4>   MODE     RO       0           NS        Interface Electrical Operating Mode		    |
						  0: Reserved    				    |
						  1: Reserved    				    |
						  2: SGMII (v1.8)				    |
						  3: XAUI (IEEE 802.3-2005)			    |
						  4: Reserved    				    |
						  5: Reserved    				    |
						  6: Reserved    				    |
						  7: RXAUI                     			    |
 <3:2>   NS       RAZ      NS          NS        Reserved				            |
 <1>     EN       R/W      0           NS        Interface Enable				    |
						  Must be set to enable the packet interface.	    |
						  Should be enabled before any other requests to    |
						  GMX including enabling port back pressure with    |
					b	  IPD_CTL_STATUS[PBP_EN]			    |
 <0>     TYPE     RO       0           NS        Interface Protocol Type			    |
						  0: SGMII/1000Base-X				    |
						  1: XAUI/RXAUI					    |
----------------------------------------------------------------------------------------------------
===





     ==============================================================
     ILK_TX(0..1)_CFG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    LANE_ENA             R/W      0x0      NS       Lane enable mask.  Link is enabled if any lane is enabled.  The|
                                                         same lane should not be enabled in multiple ILK_TXx_CFG0.  Each|
                                                         bit of LANE_ENA maps to a TX lane (TLE) and a QLM lane.  NOTE: |
                                                         LANE_REV has no effect on this mapping.                        |
                                                                                                                        |
                                                               LANE_ENA[0] = TLE0 = QLM1 lane 0                         |
                                                               LANE_ENA[1] = TLE1 = QLM1 lane 1                         |
                                                               LANE_ENA[2] = TLE2 = QLM1 lane 2                         |
                                                               LANE_ENA[3] = TLE3 = QLM1 lane 3                         |
                                                               LANE_ENA[4] = TLE4 = QLM2 lane 0                         |
                                                               LANE_ENA[5] = TLE5 = QLM2 lane 1                         |
                                                               LANE_ENA[6] = TLE6 = QLM2 lane 2                         |
                                                               LANE_ENA[7] = TLE7 = QLM2 lane 3                         |
                                                                                                                        |
<15:8>   NS                   RAZ      0x0      NS       Reserved                                                       |
<24:16>  CAL_DEPTH            R/W      0x48     NS       Number of valid entries in the calendar.  CAL_DEPTH[2:0] must  |
                                                         be zero.  Supported range from 8 to 288.  If CAL_ENA is 0,     |
                                                         this field has no effect and the calendar depth is 72 entries. |
<25>     NS                   RAZ      0x0      NS       Reserved                                                       |
<30:26>  BRST_MAX             R/W      0x4      NS       Maximum size of a data burst, as a multiple of 64 byte blocks. |
                                                         Supported range is from 64 bytes to 1024 bytes. (ie. 0 <       |
                                                         BRST_MAX <= 16)                                                |
<31>     LANE_REV             R/W      0x0      NS       Lane reversal.   When enabled, lane striping is performed from |
                                                         most significant lane enabled to least significant lane        |
                                                         enabled.  LANE_ENA must be zero before changing LANE_REV.      |
<38:32>  BRST_SHRT            R/W      0x4      NS       Minimum interval between burst control words, as a multiple of |
                                                         8 bytes.  Supported range from 8 bytes to 512 (ie. 0 <         |
                                                         BRST_SHRT <= 64)                                               |
<51:39>  MFRM_LEN             R/W      0x400    NS       The quantity of data sent on each lane including one sync word,|
                                                         scrambler state, diag word, zero or more skip words, and the   |
                                                         data  payload.  Must be large than ILK_TX@_CFG1[SKIP_CNT]+9.   |
                                                         Supported range:ILK_TX@_CFG1[SKIP_CNT]+9 < MFRM_LEN <= 4096)   |
<52>     CAL_ENA              R/W      0x0      NS       Enable Tx calendar, else default calendar used:                |
                                                              First control word:                                       |
                                                               Entry 0  = link                                          |
                                                               Entry 1  = backpressue id 0                              |
                                                               Entry 2  = backpressue id 1                              |
                                                               ...etc.                                                  |
                                                            Second control word:                                        |
                                                               Entry 15 = link                                          |
                                                               Entry 16 = backpressue id 15                             |
                                                               Entry 17 = backpressue id 16                             |
                                                               ...etc.                                                  |
                                                         This continues until the status for all 64 backpressue ids gets|
                                                         transmitted (ie. 0-68 calendar table entries).  The remaining 3|
                                                         calendar table entries (ie. 69-71) will always transmit XOFF.  |
                                                                                                                        |
                                                         To disable backpressure completely, enable the calendar table  |
                                                         and program each calendar table entry to transmit XON          |
<53>     MLTUSE_FC_ENA        R/W      0x0      NS       When set, the multi-use field of control words will contain    |
                                                         flow control status.  Otherwise, the multi-use field will      |
                                                         contain ILK_TX@_CFG1[TX_MLTUSE]                                |
<54>     LNK_STATS_ENA        R/W      0x0      NS       Enable link statistics counters                                |
<55>     NS                   RAZ      0x0      NS       Reserved                                                       |
<56>     PTRN_MODE            R/W      0x0      NS       Enable programmable test pattern mode.  This mode allows       |
                                                         software to send a packet containing a programmable pattern.   |
                                                         While in this mode, the scramblers and disparity inversion will|
                                                         be disabled.  In addition, no framing layer control words will |
                                                         be transmitted (ie. no SYNC, scrambler state, skip, or         |
                                                         diagnostic words will be transmitted).                         |
                                                                                                                        |
                                                         NOTE: Software must first write ILK_TX@_CFG0[LANE_ENA]=0 before|
                                                         enabling/disabling this mode.                                  |
<60:57>  NS                   RAZ      0x0      NS       Reserved                                                       |
<61>     INT_LPBK             R/W      0x0      NS       Enable Tx-Rx loopback (internal)                               |
<62>     EXT_LPBK             R/W      0x0      NS       Enable Rx-Tx data loopback (external). Note that with differing|
                                                         transmit & receive clocks, skip word are  inserted/deleted     |
<63>     EXT_LPBK_FC          R/W      0x0      NS       Enable Rx-Tx flowcontrol loopback (external)                   |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_TX(0..1)_CFG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    TX_MLTUSE            R/W      0x0      NS       Multiple Use bits used when ILKx_TX_CFG[LA_MODE=0] and         |
                                                         ILKx_TX_CFG[MLTUSE_FC_ENA] is zero                             |
<8>      RMATCH               R/W      0x0      NS       Enable rate matching circuitry                                 |
<9>      RX_LINK_FC_IGN       R/W      0x0      NS       Ignore the link flow control status received in burst/idle     |
                                                         control words                                                  |
<10>     RX_LINK_FC_PKT       R/W      0x0      NS       Link flow control received in burst/idle control words causes  |
                                                         Tx-Link to stop transmitting at the end of a packet instead of |
                                                         the end of a burst                                             |
<11>     TX_LINK_FC_JAM       R/W      0x0      NS       All flow control transmitted in burst/idle control words will  |
                                                         be XOFF whenever TX_LINK_FC is XOFF.   Enable this to allow    |
                                                         link XOFF to automatically XOFF all channels.                  |
<16:12>  NS                   RAZ      0x0      NS       Reserved                                                       |
<17>     RX_LINK_FC           RO       0x0      NS       Link flow control status received in burst/idle control words. |
                                                         When RX_LINK_FC_IGN=0, XOFF will cause Tx-Link to stop         |
                                                         transmitting on all channels.                                  |
<18>     TX_LINK_FC           RO       0x0      NS       Link flow control status transmitted by the Tx-Link            |
                                                         XON when RX_FIFO_CNT <= RX_FIFO_HWM and lane alignment is done |
<19>     LA_MODE              R/W      0x0      NS       0 = Interlaken                                                 |
                                                         1 = Interlaken Look-Aside                                      |
<20>     PKT_ENA              R/W      0x1      NS       Packet transmit enable.  When PKT_ENA=0, the Tx-Link will stop |
                                                         transmitting packets, as per RX_LINK_FC_PKT                    |
<21>     PKT_FLUSH            R/W      0x0      NS       Packet transmit flush.  While PKT_FLUSH=1, the TxFifo will     |
                                                         continuously drain; all data will be dropped.  Software should |
                                                         first write PKT_ENA=0 and wait packet transmission to stop.    |
<25:22>  SKIP_CNT             R/W      0x1      NS       Number of skip words to insert after the scrambler state       |
<30:26>  PTP_DELAY            R/W      0x1a     NS       Timestamp commit delay.  Must not be zero.                     |
<31>     PIPE_CRD_DIS         R/W      0x0      NS       Disable pipe credits.   Should be set when PKO is configure to |
                                                         ignore pipe credits.                                           |
<63:32>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_TX(0..1)_IDX_PMAP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<6:0>    IDX                  R/W      0x0      NS       Specify the port-pipe accessed by the next CSR read/write to   |
                                                         ILK_TXx_MEM_PMAP.   Note that IDX=n is always port-pipe n,     |
                                                         regardless of ILK_TXx_PIPE[BASE]                               |
<15:7>   NS                   RAZ      0x0      NS       Reserved                                                       |
<22:16>  INC                  R/W      0x0      NS       Increment to add to current index for next index.              |
<63:23>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_TX(0..1)_MEM_PMAP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    CHANNEL              R/W      0x0      NS       Specify the channel for the port-pipe selected by              |
                                                         ILK_TXx_IDX_PMAP[IDX]                                          |
<63:8>   NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_TX(0..1)_IDX_STAT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    IDX                  R/W      0x0      NS       Specify the channel accessed during the next CSR read to the   |
                                                         ILK_TXx_MEM_STAT0                                              |
<15:8>   NS                   RAZ      0x0      NS       Reserved                                                       |
<23:16>  INC                  R/W      0x0      NS       Increment to add to current index for next index               |
<30:24>  NS                   RAZ      0x0      NS       Reserved                                                       |
<31>     CLR                  R/W      0x0      NS       CSR read to ILK_TXx_MEM_STAT0 clears the selected counter after|
                                                         returning its current value.                                   |
<63:32>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_TX(0..1)_IDX_STAT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    IDX                  R/W      0x0      NS       Specify the channel accessed during the next CSR read to the   |
                                                         ILK_TXx_MEM_STAT1                                              |
<15:8>   NS                   RAZ      0x0      NS       Reserved                                                       |
<23:16>  INC                  R/W      0x0      NS       Increment to add to current index for next index               |
<30:24>  NS                   RAZ      0x0      NS       Reserved                                                       |
<31>     CLR                  R/W      0x0      NS       CSR read to ILK_TXx_MEM_STAT1 clears the selected counter after|
                                                         returning its current value.                                   |
<63:32>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_TX(0..1)_MEM_STAT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<27:0>   TX_PKT               RO       0x0      NS       Number of packets transmitted per channel (256M)               |
                                                         Channel selected by ILK_TXx_IDX_STAT0[IDX].  Interrupt on      |
                                                         saturation if ILK_TX@_INT_EN[STAT_CNT_OVFL]=1.                 |
<63:28>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_TX(0..1)_MEM_STAT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>   TX_BYTES             RO       0x0      NS       Number of bytes transmitted per channel (64GB) Channel selected|
                                                         by ILK_TXx_IDX_STAT1[IDX].    Saturates.  Interrupt on         |
                                                         saturation if ILK_TX@_INT_EN[STAT_CNT_OVFL]=1.                 |
<63:36>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_TX(0..1)_RMATCH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>   RATE_LIMIT           R/W      0x400    NS       Number of tokens added to the bucket when the interval timer   |
                                                         expires.                                                       |
<31:16>  TIME_LIMIT           R/W      0x100    NS       Number of cycles per time interval. (Must be >= 4)             |
<47:32>  BRST_LIMIT           R/W      0x400    NS       Size of token bucket, also the maximum quantity of data that   |
                                                         may be burst across the interface before invoking rate limiting|
                                                         logic.                                                         |
<49:48>  GRNLRTY              R/W      0x0      NS       Granularity of a token, where 1 token equal (1<<GRNLRTY) bytes.|
<63:50>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_TX(0..1)_FLOW_CTL0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   STATUS               RO 0xffffffffffffffff  NS  IPD flow control status for backpressue id 63-0, where a 0     |
                                                         indicates the presence of backpressure (ie. XOFF) and 1        |
                                                         indicates the absence of backpressure (ie. XON)                |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_TX(0..1)_FLOW_CTL1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   NS                   RAZ      0x0      NS       Reserved                                                       |
                                                                                                                        |
Notes:                                                                                                                  |
    Do not publish.                                                                                                     |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_TX(0..1)_IDX_CAL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    IDX                  R/W      0x0      NS       Specify the group of 8 entries accessed by the next CSR        |
                                                         read/write to calendar table memory.  Software must ensure IDX |
                                                         is <36 whenever writing to *MEM_CAL1                           |
<7:6>    NS                   RAZ      0x0      NS       Reserved                                                       |
<13:8>   INC                  R/W      0x0      NS       Increment to add to current index for next index. NOTE:        |
                                                         Increment only performed after *MEM_CAL1 access (ie. not       |
                                                         *MEM_CAL0)                                                     |
<63:14>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_TX(0..1)_MEM_CAL0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    BPID0                R/W      0x0      NS       Select IPD backpressue id for calendar table entry (IDX*8)+0   |
                                                         (unused if ENTRY_CTL0 != 0)                                    |
<6>      NS                   RAZ      0x0      NS       Reserved                                                       |
<8:7>    ENTRY_CTL0           R/W      0x0      NS       Select source of XON/XOFF for entry (IDX*8)+0                  |
                                                             0: IPD backpressue id                                      |
                                                             1: Link                                                    |
                                                             2: XOFF                                                    |
                                                             3: XON                                                     |
<14:9>   BPID1                R/W      0x0      NS       Select IPD backpressue id for calendar table entry (IDX*8)+1   |
                                                         (unused if ENTRY_CTL1 != 0)                                    |
<15>     NS                   RAZ      0x0      NS       Reserved                                                       |
<17:16>  ENTRY_CTL1           R/W      0x0      NS       Select source of XON/XOFF for entry (IDX*8)+1                  |
                                                             0: IPD backpressue id                                      |
                                                             1: Link                                                    |
                                                             2: XOFF                                                    |
                                                             3: XON                                                     |
<23:18>  BPID2                R/W      0x0      NS       Select IPD backpressue id for calendar table entry (IDX*8)+2   |
                                                         (unused if ENTRY_CTL2 != 0)                                    |
<24>     NS                   RAZ      0x0      NS       Reserved                                                       |
<26:25>  ENTRY_CTL2           R/W      0x0      NS       Select source of XON/XOFF for entry (IDX*8)+2                  |
                                                             0: IPD backpressue id                                      |
                                                             1: Link                                                    |
                                                             2: XOFF                                                    |
                                                             3: XON                                                     |
<32:27>  BPID3                R/W      0x0      NS       Select IPD backpressue id for calendar table entry (IDX*8)+3   |
                                                         (unused if ENTRY_CTL3 != 0)                                    |
<33>     NS                   RAZ      0x0      NS       Reserved                                                       |
<35:34>  ENTRY_CTL3           R/W      0x0      NS       Select source of XON/XOFF for entry (IDX*8)+3                  |
                                                             0: IPD backpressue id                                      |
                                                             1: Link                                                    |
                                                             2: XOFF                                                    |
                                                             3: XON                                                     |
<63:36>  NS                   RAZ      0x0      NS       Reserved                                                       |
                                                                                                                        |
Notes:                                                                                                                  |
    Software must always read ILK_TXx_MEM_CAL0 then ILK_TXx_MEM_CAL1.  Software                                         |
    must never read them in reverse order or read one without reading the                                               |
    other.                                                                                                              |
                                                                                                                        |
    Software must always write ILK_TXx_MEM_CAL0 then ILK_TXx_MEM_CAL1.                                                  |
    Software must never write them in reverse order or write one without                                                |
    writing the other.                                                                                                  |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_TX(0..1)_MEM_CAL1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    BPID4                R/W      0x0      NS       Select IPD backpressue id for calendar table entry (IDX*8)+4   |
                                                         (unused if ENTRY_CTL4 != 0)                                    |
<6>      NS                   RAZ      0x0      NS       Reserved                                                       |
<8:7>    ENTRY_CTL4           R/W      0x0      NS       Select source of XON/XOFF for entry (IDX*8)+4                  |
                                                             0: IPD backpressue id                                      |
                                                             1: Link                                                    |
                                                             2: XOFF                                                    |
                                                             3: XON                                                     |
<14:9>   BPID5                R/W      0x0      NS       Select IPD backpressue id for calendar table entry (IDX*8)+5   |
                                                         (unused if ENTRY_CTL5 != 0)                                    |
<15>     NS                   RAZ      0x0      NS       Reserved                                                       |
<17:16>  ENTRY_CTL5           R/W      0x0      NS       Select source of XON/XOFF for entry (IDX*8)+5                  |
                                                             0: IPD backpressue id                                      |
                                                             1: Link                                                    |
                                                             2: XOFF                                                    |
                                                             3: XON                                                     |
<23:18>  BPID6                R/W      0x0      NS       Select IPD backpressue id for calendar table entry (IDX*8)+6   |
                                                         (unused if ENTRY_CTL6 != 0)                                    |
<24>     NS                   RAZ      0x0      NS       Reserved                                                       |
<26:25>  ENTRY_CTL6           R/W      0x0      NS       Select source of XON/XOFF for entry (IDX*8)+6                  |
                                                             0: IPD backpressue id                                      |
                                                             1: Link                                                    |
                                                             2: XOFF                                                    |
                                                             3: XON                                                     |
<32:27>  BPID7                R/W      0x0      NS       Select IPD backpressue id for calendar table entry (IDX*8)+7   |
                                                         (unused if ENTRY_CTL7 != 0)                                    |
<33>     NS                   RAZ      0x0      NS       Reserved                                                       |
<35:34>  ENTRY_CTL7           R/W      0x0      NS       Select source of XON/XOFF for entry (IDX*8)+7                  |
                                                             0: IPD backpressue id                                      |
                                                             1: Link                                                    |
                                                             2: XOFF                                                    |
                                                             3: XON                                                     |
<63:36>  NS                   RAZ      0x0      NS       Reserved                                                       |
                                                                                                                        |
Notes:                                                                                                                  |
    Software must always read ILK_TXx_MEM_CAL0 then ILK_TXx_MEM_CAL1.  Software                                         |
    must never read them in reverse order or read one without reading the                                               |
    other.                                                                                                              |
                                                                                                                        |
    Software must always write ILK_TXx_MEM_CAL0 then ILK_TXx_MEM_CAL1.                                                  |
    Software must never write them in reverse order or write one without                                                |
    writing the other.                                                                                                  |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_TX(0..1)_DBG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      TX_BAD_CTLW1         R/W      0x0      NS       Send a data word with the control bit set                      |
<1>      TX_BAD_CTLW2         R/W      0x0      NS       Send a control word without the control bit set                |
<2>      TX_BAD_CRC24         R/W      0x0      NS       Send a control word with bad CRC24.  Hardware will clear this  |
                                                         field once the injection is performed.                         |
<63:3>   NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_TX(0..1)_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      TXF_ERR              R/W1C    0x0      NS       TX fifo parity error occurred.  At EOP time, EOP_Format will   |
                                                         reflect the error.                                             |
<1>      BAD_SEQ              R/W1C    0x0      NS       Received sequence is not SOP followed by 0 or more data cycles |
                                                         followed by EOP.  PKO config assigned multiple engines to the  |
                                                         same ILK Tx Link.                                              |
<2>      BAD_PIPE             R/W1C    0x0      NS       Received a PKO port-pipe out of the range specified by         |
                                                         ILK_TX@_PIPE                                                   |
<3>      STAT_CNT_OVFL        R/W1C    0x0      NS       Statistics counter overflow                                    |
<63:4>   NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_TX(0..1)_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      TXF_ERR              R/W      0x0      NS       TX fifo parity error occurred.  At EOP time, EOP_Format will   |
                                                         reflect the error.                                             |
<1>      BAD_SEQ              R/W      0x0      NS       Received sequence is not SOP followed by 0 or more data cycles |
                                                         followed by EOP.  PKO config assigned multiple engines to the  |
                                                         same ILK Tx Link.                                              |
<2>      BAD_PIPE             R/W      0x0      NS       Received a PKO port-pipe out of the range specified by         |
                                                         ILK_TX@_PIPE.                                                  |
<3>      STAT_CNT_OVFL        R/W      0x0      NS       Statistics counter overflow                                    |
<63:4>   NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_TX(0..1)_PIPE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<6:0>    BASE                 R/W      0x0      NS       When NUMP is non-zero, indicates the base pipe number this     |
                                                           Tx link will accept.  This Tx will accept PKO packets from   |
                                                           pipes in the range of:  BASE .. (BASE+(NUMP-1))              |
                                                                                                                        |
                                                             BASE and NUMP must be constrained such that                |
                                                             1) BASE+(NUMP-1) < 127                                     |
                                                             2) Each used PKO pipe must map to exactly                  |
                                                                one port|channel                                        |
                                                             3) The pipe ranges must be consistent with                 |
                                                                the PKO configuration.                                  |
<15:7>   NS                   RAZ      0x0      NS       Reserved                                                       |
<23:16>  NUMP                 R/W      0x0      NS       Number of pipes assigned to this Tx Link                       |
<63:24>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_CFG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    LANE_ENA             R/W      0x0      NS       Lane enable mask.  Link is enabled if any lane is enabled.  The|
                                                         same lane should not be enabled in multiple ILK_RXx_CFG0.  Each|
                                                         bit of LANE_ENA maps to a RX lane (RLE) and a QLM lane.  NOTE: |
                                                         LANE_REV has no effect on this mapping.                        |
                                                                                                                        |
                                                               LANE_ENA[0] = RLE0 = QLM1 lane 0                         |
                                                               LANE_ENA[1] = RLE1 = QLM1 lane 1                         |
                                                               LANE_ENA[2] = RLE2 = QLM1 lane 2                         |
                                                               LANE_ENA[3] = RLE3 = QLM1 lane 3                         |
                                                               LANE_ENA[4] = RLE4 = QLM2 lane 0                         |
                                                               LANE_ENA[5] = RLE5 = QLM2 lane 1                         |
                                                               LANE_ENA[6] = RLE6 = QLM2 lane 2                         |
                                                               LANE_ENA[7] = RLE7 = QLM2 lane 3                         |
                                                                                                                        |
<15:8>   NS                   RAZ      0x0      NS       Reserved                                                       |
<24:16>  CAL_DEPTH            R/W      0x90     NS       Number of valid entries in the calendar.   Supported range from|
                                                         1 to 288.                                                      |
<25>     NS                   RAZ      0x0      NS       Reserved                                                       |
<30:26>  BRST_MAX             R/W      0x4      NS       Maximum size of a data burst, as a multiple of 64 byte blocks. |
                                                         Supported range is from 64 bytes to  1024 bytes. (ie. 0 <      |
                                                         BRST_MAX <= 16)                                                |
                                                         This field affects the ILK_RX*_STAT2[BRST_NOT_FULL_CNT] and    |
                                                         ILK_RX*_STAT3[BRST_MAX_ERR_CNT] counters. It does not affect   |
                                                         correct operation of the link.                                 |
<31>     LANE_REV             R/W      0x0      NS       Lane reversal.   When enabled, lane de-striping is performed   |
                                                         from most significant lane enabled to least significant lane   |
                                                         enabled.  LANE_ENA must be zero before changing LANE_REV.      |
<38:32>  BRST_SHRT            R/W      0x4      NS       Minimum interval between burst control words, as a multiple of |
                                                         8 bytes.  Supported range from 8 bytes to 512 (ie. 0 <         |
                                                         BRST_SHRT <= 64)                                               |
                                                         This field affects the ILK_RX*_STAT4[BRST_SHRT_ERR_CNT]        |
                                                         counter. It does not affect correct operation of the link.     |
<51:39>  MFRM_LEN             R/W      0x400    NS       The quantity of data sent on each lane including one sync word,|
                                                         scrambler state, diag word, zero or more skip words, and the   |
                                                         data  payload.  Must be large than ILK_RX@_CFG1[SKIP_CNT]+9.   |
                                                         Supported range:ILK_RX@_CFG1[SKIP_CNT]+9 < MFRM_LEN <= 4096)   |
<52>     CAL_ENA              R/W      0x0      NS       Enable Rx calendar.  When the calendar table is disabled, all  |
                                                         port-pipes receive XON.                                        |
<53>     MLTUSE_FC_ENA        R/W      0x0      NS       Use multi-use field for calendar                               |
<54>     LNK_STATS_ENA        R/W      0x0      NS       Enable link statistics counters                                |
<55>     LNK_STATS_RDCLR      R/W      0x0      NS       CSR read to ILK_RXx_STAT* clears the counter after returning   |
                                                         its current value.                                             |
<56>     PTRN_MODE            R/W      0x0      NS       Enable programmable test pattern mode                          |
<61:57>  NS                   RAZ      0x0      NS       Reserved                                                       |
<62>     EXT_LPBK             R/W      0x0      NS       Enable Rx-Tx data loopback (external). Note that with differing|
                                                         transmit & receive clocks, skip word are  inserted/deleted     |
<63>     EXT_LPBK_FC          R/W      0x0      NS       Enable Rx-Tx flowcontrol loopback (external)                   |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_CFG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    RX_BDRY_LOCK_ENA     R/W      0x0      NS       Enable word boundary lock.  While disabled, received data is   |
                                                         tossed.  Once enabled,  received data is searched for legal    |
                                                         2bit patterns.  Automatically cleared for disabled lanes.      |
<15:8>   NS                   RAZ      0x0      NS       Reserved                                                       |
<16>     RX_ALIGN_ENA         R/W      0x0      NS       Enable the lane alignment.  This should only be done after all |
                                                         enabled lanes have achieved word boundary lock and scrambler   |
                                                         synchronization.  Note: Hardware will clear this when any      |
                                                         participating lane loses either word boundary lock or scrambler|
                                                         synchronization                                                |
<17>     RX_LINK_FC           RO       0x0      NS       Link flow control status received in burst/idle control words. |
                                                         XOFF will cause Tx-Link to stop transmitting on all channels.  |
<18>     TX_LINK_FC           RO       0x0      NS       Link flow control status transmitted by the Tx-Link            |
                                                         XON when RX_FIFO_CNT <= RX_FIFO_HWM and lane alignment is done |
<19>     LA_MODE              R/W      0x0      NS       0 = Interlaken                                                 |
                                                         1 = Interlaken Look-Aside                                      |
<20>     PKT_ENA              R/W      0x0      NS       Packet receive enable.  When PKT_ENA=0, any received SOP causes|
                                                         the entire packet to be dropped.                               |
<21>     PKT_FLUSH            WR0      0x0      NS       Packet receive flush.  Writing PKT_FLUSH=1 will cause all open |
                                                         packets to be error-out, just as though the link went down.    |
<33:22>  RX_FIFO_MAX          R/W      0x400    NS       Maximum number of 64-bit words consumed by this link in the RX |
                                                         fifo.  The sum of all links should be equal to 2048 (16KB)     |
<35:34>  NS                   RAZ      0x0      NS       Reserved                                                       |
<47:36>  RX_FIFO_HWM          R/W      0x200    NS       Number of 64-bit words consumed by this link before switch     |
                                                         transmitted link flow control status from XON to XOFF.         |
                                                                                                                        |
                                                         XON  = RX_FIFO_CNT < RX_FIFO_HWM                               |
                                                         XOFF = RX_FIFO_CNT >= RX_FIFO_HWM.                             |
<49:48>  NS                   RAZ      0x0      NS       Reserved                                                       |
<61:50>  RX_FIFO_CNT          RO       0x0      NS       Number of 64-bit words currently consumed by this link in the  |
                                                         RX fifo.                                                       |
<63:62>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      LANE_ALIGN_FAIL      R/W1C    0x0      NS       Lane Alignment fails (4 tries).  Hardware will repeat lane     |
                                                         alignment until is succeeds or until ILK_RXx_CFG1[RX_ALIGN_ENA]|
                                                         is cleared.                                                    |
<1>      CRC24_ERR            R/W1C    0x0      NS       Burst CRC24 error.  All open packets will be receive an error. |
<2>      WORD_SYNC_DONE       R/W1C    0x0      NS       All enabled lanes have achieved word boundary lock and         |
                                                         scrambler synchronization.  Lane alignment may now be enabled. |
<3>      LANE_ALIGN_DONE      R/W1C    0x0      NS       Lane alignment successful                                      |
<4>      STAT_CNT_OVFL        R/W1C    0x0      NS       Statistics counter overflow                                    |
<5>      LANE_BAD_WORD        R/W1C    0x0      NS       A lane encountered either a bad 64B/67B codeword or an unknown |
                                                         control word type.                                             |
<6>      PKT_DROP_RXF         R/W1C    0x0      NS       Some/all of a packet dropped due to RX_FIFO_CNT == RX_FIFO_MAX |
<7>      PKT_DROP_RID         R/W1C    0x0      NS       Entire packet dropped due to the lack of reassembly-ids or     |
                                                         because ILK_RX@_CFG1[PKT_ENA]=0                                |
<63:8>   NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      LANE_ALIGN_FAIL      R/W      0x0      NS       Lane Alignment fails (4 tries)                                 |
<1>      CRC24_ERR            R/W      0x0      NS       Burst CRC24 error.  All open packets will be receive an error. |
<2>      WORD_SYNC_DONE       R/W      0x0      NS       All enabled lanes have achieved word boundary lock and         |
                                                         scrambler synchronization.  Lane alignment may now be enabled. |
<3>      LANE_ALIGN_DONE      R/W      0x0      NS       Lane alignment successful                                      |
<4>      STAT_CNT_OVFL        R/W      0x0      NS       Statistics counter overflow                                    |
<5>      LANE_BAD_WORD        R/W      0x0      NS       A lane encountered either a bad 64B/67B codeword or an unknown |
                                                         control word type.                                             |
<6>      PKT_DROP_RXF         R/W      0x0      NS       Some/all of a packet dropped due to RX_FIFO_CNT == RX_FIFO_MAX |
<7>      PKT_DROP_RID         R/W      0x0      NS       Entire packet dropped due to the lack of reassembly-ids or     |
                                                         because ILK_RX@_CFG1[PKT_ENA]=0                                |
<63:8>   NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_STAT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<26:0>   CRC24_MATCH_CNT      R/W      0x0      NS       Number of CRC24 matches received.  Saturates.  Interrupt on    |
                                                         saturation if ILK_RX@_INT_EN[STAT_CNT_OVFL]=1.                 |
<63:27>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_STAT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<17:0>   CRC24_ERR_CNT        R/W      0x0      NS       Number of bursts with a detected CRC error.  Saturates.        |
                                                         Interrupt on saturation if ILK_RX@_INT_EN[STAT_CNT_OVFL]=1.    |
<63:18>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_STAT2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>   BRST_CNT             R/W      0x0      NS       Number of bursts correctly received. (ie. good CRC24, not in   |
                                                         violation of BurstMax or BurstShort)                           |
<31:16>  NS                   RAZ      0x0      NS       Reserved                                                       |
<47:32>  BRST_NOT_FULL_CNT    R/W      0x0      NS       Number of bursts received which terminated without an eop and  |
                                                         contained fewer than BurstMax words.  Saturates.  Interrupt on |
                                                         saturation if ILK_RX@_INT_EN[STAT_CNT_OVFL]=1.                 |
<63:48>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_STAT3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>   BRST_MAX_ERR_CNT     R/W      0x0      NS       Number of bursts received longer than the BurstMax parameter   |
<63:16>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_STAT4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>   BRST_SHRT_ERR_CNT    R/W      0x0      NS       Number of bursts received that violate the BurstShort          |
                                                         parameter.  Saturates.  Interrupt on saturation if             |
                                                         ILK_RX@_INT_EN[STAT_CNT_OVFL]=1.                               |
<63:16>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_STAT5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>   ALIGN_CNT            R/W      0x0      NS       Number of alignment sequences received  (ie. those that do not |
                                                         violate the current alignment).  Saturates.  Interrupt on      |
                                                         saturation if ILK_RX@_INT_EN[STAT_CNT_OVFL]=1.                 |
<63:16>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_STAT6 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>   ALIGN_ERR_CNT        R/W      0x0      NS       Number of alignment sequences received in error (ie. those that|
                                                         violate the current alignment).  Saturates.  Interrupt on      |
                                                         saturation if ILK_RX@_INT_EN[STAT_CNT_OVFL]=1.                 |
<63:16>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_STAT7 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>   BAD_64B67B_CNT       R/W      0x0      NS       Number of bad 64B/67B codewords.  Saturates.  Interrupt on     |
                                                         saturation if ILK_RX@_INT_EN[STAT_CNT_OVFL]=1.                 |
<63:16>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_STAT8 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>   PKT_DROP_RXF_CNT     R/W      0x0      NS       Number of packets dropped due to RX_FIFO_CNT >= RX_FIFO_MAX.   |
                                                         Saturates.  Interrupt on saturation if                         |
                                                         ILK_RX@_INT_EN[STAT_CNT_OVFL]=1.                               |
<31:16>  PKT_DROP_RID_CNT     R/W      0x0      NS       Number of packets dropped due to the lack of reassembly-ids or |
                                                         because ILK_RX@_CFG1[PKT_ENA]=0.  Saturates.  Interrupt on     |
                                                         saturation if ILK_RX@_INT_EN[STAT_CNT_OVFL]=1.                 |
<63:32>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_STAT9 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_IDX_STAT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    IDX                  R/W      0x0      NS       Specify the channel accessed during the next CSR read to the   |
                                                         ILK_RXx_MEM_STAT0                                              |
<15:8>   NS                   RAZ      0x0      NS       Reserved                                                       |
<23:16>  INC                  R/W      0x0      NS       Increment to add to current index for next index               |
<30:24>  NS                   RAZ      0x0      NS       Reserved                                                       |
<31>     CLR                  R/W      0x0      NS       CSR read to ILK_RXx_MEM_STAT0 clears the selected counter after|
                                                         returning its current value.                                   |
<63:32>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_IDX_STAT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    IDX                  R/W      0x0      NS       Specify the channel accessed during the next CSR read to the   |
                                                         ILK_RXx_MEM_STAT1                                              |
<15:8>   NS                   RAZ      0x0      NS       Reserved                                                       |
<23:16>  INC                  R/W      0x0      NS       Increment to add to current index for next index               |
<30:24>  NS                   RAZ      0x0      NS       Reserved                                                       |
<31>     CLR                  R/W      0x0      NS       CSR read to ILK_RXx_MEM_STAT1 clears the selected counter after|
                                                         returning its current value.                                   |
<63:32>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_MEM_STAT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<27:0>   RX_PKT               RO       0x0      NS       Number of packets received (256M)                              |
                                                         Channel selected by ILK_RXx_IDX_STAT0[IDX].  Saturates.        |
                                                         Interrupt on saturation if ILK_RX@_INT_EN[STAT_CNT_OVFL]=1.    |
<63:28>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_MEM_STAT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>   RX_BYTES             RO       0x0      NS       Number of bytes received (64GB)                                |
                                                         Channel selected by ILK_RXx_IDX_STAT1[IDX].    Saturates.      |
                                                         Interrupt on saturation if ILK_RX@_INT_EN[STAT_CNT_OVFL]=1.    |
<63:36>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_FLOW_CTL0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   STATUS               RO       0x0      NS       Flow control status for port-pipes 63-0, where a 1 indicates   |
                                                         the presence of backpressure (ie. XOFF) and 0 indicates the    |
                                                         absence of backpressure (ie. XON)                              |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_FLOW_CTL1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   STATUS               RO       0x0      NS       Flow control status for port-pipes 127-64, where a 1 indicates |
                                                         the presence of backpressure (ie. XOFF) and 0 indicates the    |
                                                         absence of backpressure (ie. XON)                              |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_IDX_CAL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    IDX                  R/W      0x0      NS       Specify the group of 8 entries accessed by the next CSR        |
                                                         read/write to calendar table memory.  Software must never write|
                                                         IDX >= 36                                                      |
<7:6>    NS                   RAZ      0x0      NS       Reserved                                                       |
<13:8>   INC                  R/W      0x0      NS       Increment to add to current index for next index. NOTE:        |
                                                         Increment performed after access to   ILK_RXx_MEM_CAL1         |
<63:14>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_MEM_CAL0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<6:0>    PORT_PIPE0           R/W      0x0      NS       Select PKO port-pipe for calendar table entry (IDX*8)+0        |
                                                                                                                        |
                                                         PORT_PIPE0 must reside in the range of ILK_TXx_PIPE[BASE/NUMP] |
                                                         when ENTRY_CTL0 is "XOFF" (2) or "PKO port-pipe" (0).          |
                                                                                                                        |
<8:7>    ENTRY_CTL0           R/W      0x0      NS       XON/XOFF destination for entry (IDX*8)+0                       |
                                                                                                                        |
                                                          0: PKO port-pipe  Apply backpressure received from the        |
                                                                            remote tranmitter to the PKO pipe selected  |
                                                                            by PORT_PIPE0.
                                                                                                                        |
                                                          1: Link           Apply the backpressure received from the    |
                                                                            remote transmitter to link backpressure.    |
                                                                            PORT_PIPE0 is unused.                       |
                                                                                                                        |
                                                          2: XOFF           Apply XOFF to the PKO pipe selected by      |
                                                                            PORT_PIPE0.                                 |
                                                                                                                        |
                                                          3: XON            Apply XON to the PKO pipe selected by       |
                                                                            PORT_PIPE0. The calendar table entry is     |
                                                                            effectively unused if PORT_PIPEx is out of  |
                                                                            range of ILK_TXx_PIPE[BASE/NUMP].           |
                                                                                                                        |
<15:9>   PORT_PIPE1           R/W      0x0      NS       Select PKO port-pipe for calendar table entry (IDX*8)+1        |
                                                                                                                        |
                                                         PORT_PIPE1 must reside in the range of ILK_TXx_PIPE[BASE/NUMP] |
                                                         when ENTRY_CTL1 is "XOFF" (2) or "PKO port-pipe" (0).          |
                                                                                                                        |
<17:16>  ENTRY_CTL1           R/W      0x0      NS       XON/XOFF destination for entry (IDX*8)+1                       |
                                                                                                                        |
                                                          0: PKO port-pipe  Apply backpressure received from the        |
                                                                            remote tranmitter to the PKO pipe selected  |
                                                                            by PORT_PIPE1.
                                                                                                                        |
                                                          1: Link           Apply the backpressure received from the    |
                                                                            remote transmitter to link backpressure.    |
                                                                            PORT_PIPE1 is unused.                       |
                                                                                                                        |
                                                          2: XOFF           Apply XOFF to the PKO pipe selected by      |
                                                                            PORT_PIPE1.                                 |
                                                                                                                        |
                                                          3: XON            Apply XON to the PKO pipe selected by       |
                                                                            PORT_PIPE1. The calendar table entry is     |
                                                                            effectively unused if PORT_PIPE1 is out of  |
                                                                            range of ILK_TXx_PIPE[BASE/NUMP].           |
                                                                                                                        |
<24:18>  PORT_PIPE2           R/W      0x0      NS       Select PKO port-pipe for calendar table entry (IDX*8)+2        |
                                                                                                                        |
                                                         PORT_PIPE2 must reside in the range of ILK_TXx_PIPE[BASE/NUMP] |
                                                         when ENTRY_CTL2 is "XOFF" (2) or "PKO port-pipe" (0).          |
                                                                                                                        |
<26:25>  ENTRY_CTL2           R/W      0x0      NS       XON/XOFF destination for entry (IDX*8)+2                       |
                                                                                                                        |
                                                          0: PKO port-pipe  Apply backpressure received from the        |
                                                                            remote tranmitter to the PKO pipe selected  |
                                                                            by PORT_PIPE2.
                                                                                                                        |
                                                          1: Link           Apply the backpressure received from the    |
                                                                            remote transmitter to link backpressure.    |
                                                                            PORT_PIPE2 is unused.                       |
                                                                                                                        |
                                                          2: XOFF           Apply XOFF to the PKO pipe selected by      |
                                                                            PORT_PIPE2.                                 |
                                                                                                                        |
                                                          3: XON            Apply XON to the PKO pipe selected by       |
                                                                            PORT_PIPE2. The calendar table entry is     |
                                                                            effectively unused if PORT_PIPE2 is out of  |
                                                                            range of ILK_TXx_PIPE[BASE/NUMP].           |
                                                                                                                        |
<33:27>  PORT_PIPE3           R/W      0x0      NS       Select PKO port-pipe for calendar table entry (IDX*8)+3        |
                                                                                                                        |
                                                         PORT_PIPE3 must reside in the range of ILK_TXx_PIPE[BASE/NUMP] |
                                                         when ENTRY_CTL3 is "XOFF" (2) or "PKO port-pipe" (0).          |
                                                                                                                        |
<35:34>  ENTRY_CTL3           R/W      0x0      NS       XON/XOFF destination for entry (IDX*8)+3                       |
                                                                                                                        |
                                                          0: PKO port-pipe  Apply backpressure received from the        |
                                                                            remote tranmitter to the PKO pipe selected  |
                                                                            by PORT_PIPE3.
                                                                                                                        |
                                                          1: Link           Apply the backpressure received from the    |
                                                                            remote transmitter to link backpressure.    |
                                                                            PORT_PIPE3 is unused.                       |
                                                                                                                        |
                                                          2: XOFF           Apply XOFF to the PKO pipe selected by      |
                                                                            PORT_PIPE3.                                 |
                                                                                                                        |
                                                          3: XON            Apply XON to the PKO pipe selected by       |
                                                                            PORT_PIPE3. The calendar table entry is     |
                                                                            effectively unused if PORT_PIPE3 is out of  |
                                                                            range of ILK_TXx_PIPE[BASE/NUMP].           |
                                                                                                                        |
<63:36>  NS                   RAZ      0x0      NS       Reserved                                                       |
                                                                                                                        |
Notes:                                                                                                                  |
    Software must program the calendar table prior to enabling the                                                      |
    link.                                                                                                               |
                                                                                                                        |
    Software must always write ILK_RXx_MEM_CAL0 then ILK_RXx_MEM_CAL1.                                                  |
    Software must never write them in reverse order or write one without                                                |
    writing the other.                                                                                                  |
                                                                                                                        |
    A given calendar table entry has no effect on PKO pipe                                                              |
    backpressure when either:                                                                                           |
     - ENTRY_CTLx=Link (1), or                                                                                          |
     - ENTRY_CTLx=XON (3) and PORT_PIPEx is outside the range of ILK_TXx_PIPE[BASE/NUMP].                               |
                                                                                                                        |
    Within the 8 calendar table entries of one IDX value, if more                                                       |
    than one affects the same PKO pipe, XOFF always wins over XON,                                                      |
    regardless of the calendar table order.                                                                             |
                                                                                                                        |
    Software must always read ILK_RXx_MEM_CAL0 then ILK_RXx_MEM_CAL1.  Software                                         |
    must never read them in reverse order or read one without reading the                                               |
    other.                                                                                                              |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_MEM_CAL1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<6:0>    PORT_PIPE4           R/W      0x0      NS       Select PKO port-pipe for calendar table entry (IDX*8)+4        |
                                                                                                                        |
                                                         PORT_PIPE4 must reside in the range of ILK_TXx_PIPE[BASE/NUMP] |
                                                         when ENTRY_CTL4 is "XOFF" (2) or "PKO port-pipe" (0).          |
                                                                                                                        |
<8:7>    ENTRY_CTL4           R/W      0x0      NS       XON/XOFF destination for entry (IDX*8)+4                       |
                                                                                                                        |
                                                          0: PKO port-pipe  Apply backpressure received from the        |
                                                                            remote tranmitter to the PKO pipe selected  |
                                                                            by PORT_PIPE4.
                                                                                                                        |
                                                          1: Link           Apply the backpressure received from the    |
                                                                            remote transmitter to link backpressure.    |
                                                                            PORT_PIPE4 is unused.                       |
                                                                                                                        |
                                                          2: XOFF           Apply XOFF to the PKO pipe selected by      |
                                                                            PORT_PIPE4.                                 |
                                                                                                                        |
                                                          3: XON            Apply XON to the PKO pipe selected by       |
                                                                            PORT_PIPE4. The calendar table entry is     |
                                                                            effectively unused if PORT_PIPE4 is out of  |
                                                                            range of ILK_TXx_PIPE[BASE/NUMP].           |
                                                                                                                        |
<15:9>   PORT_PIPE5           R/W      0x0      NS       Select PKO port-pipe for calendar table entry (IDX*8)+5        |
                                                                                                                        |
                                                         PORT_PIPE5 must reside in the range of ILK_TXx_PIPE[BASE/NUMP] |
                                                         when ENTRY_CTL5 is "XOFF" (2) or "PKO port-pipe" (0).          |
                                                                                                                        |
<17:16>  ENTRY_CTL5           R/W      0x0      NS       XON/XOFF destination for entry (IDX*8)+5                       |
                                                                                                                        |
                                                          0: PKO port-pipe  Apply backpressure received from the        |
                                                                            remote tranmitter to the PKO pipe selected  |
                                                                            by PORT_PIPE5.
                                                                                                                        |
                                                          1: Link           Apply the backpressure received from the    |
                                                                            remote transmitter to link backpressure.    |
                                                                            PORT_PIPE5 is unused.                       |
                                                                                                                        |
                                                          2: XOFF           Apply XOFF to the PKO pipe selected by      |
                                                                            PORT_PIPE5.                                 |
                                                                                                                        |
                                                          3: XON            Apply XON to the PKO pipe selected by       |
                                                                            PORT_PIPE5. The calendar table entry is     |
                                                                            effectively unused if PORT_PIPE5 is out of  |
                                                                            range of ILK_TXx_PIPE[BASE/NUMP].           |
                                                                                                                        |
<24:18>  PORT_PIPE6           R/W      0x0      NS       Select PKO port-pipe for calendar table entry (IDX*8)+6        |
                                                                                                                        |
                                                         PORT_PIPE6 must reside in the range of ILK_TXx_PIPE[BASE/NUMP] |
                                                         when ENTRY_CTL6 is "XOFF" (2) or "PKO port-pipe" (0).          |
                                                                                                                        |
<26:25>  ENTRY_CTL6           R/W      0x0      NS       XON/XOFF destination for entry (IDX*8)+6                       |
                                                                                                                        |
                                                          0: PKO port-pipe  Apply backpressure received from the        |
                                                                            remote tranmitter to the PKO pipe selected  |
                                                                            by PORT_PIPE6.
                                                                                                                        |
                                                          1: Link           Apply the backpressure received from the    |
                                                                            remote transmitter to link backpressure.    |
                                                                            PORT_PIPE6 is unused.                       |
                                                                                                                        |
                                                          2: XOFF           Apply XOFF to the PKO pipe selected by      |
                                                                            PORT_PIPE6.                                 |
                                                                                                                        |
                                                          3: XON            Apply XON to the PKO pipe selected by       |
                                                                            PORT_PIPE6. The calendar table entry is     |
                                                                            effectively unused if PORT_PIPE6 is out of  |
                                                                            range of ILK_TXx_PIPE[BASE/NUMP].           |
                                                                                                                        |
<33:27>  PORT_PIPE7           R/W      0x0      NS       Select PKO port-pipe for calendar table entry (IDX*8)+7        |
                                                                                                                        |
                                                         PORT_PIPE7 must reside in the range of ILK_TXx_PIPE[BASE/NUMP] |
                                                         when ENTRY_CTL7 is "XOFF" (2) or "PKO port-pipe" (0).          |
                                                                                                                        |
<35:34>  ENTRY_CTL7           R/W      0x0      NS       XON/XOFF destination for entry (IDX*8)+7                       |
                                                                                                                        |
                                                          0: PKO port-pipe  Apply backpressure received from the        |
                                                                            remote tranmitter to the PKO pipe selected  |
                                                                            by PORT_PIPE7.
                                                                                                                        |
                                                          1: Link           Apply the backpressure received from the    |
                                                                            remote transmitter to link backpressure.    |
                                                                            PORT_PIPE7 is unused.                       |
                                                                                                                        |
                                                          2: XOFF           Apply XOFF to the PKO pipe selected by      |
                                                                            PORT_PIPE7.                                 |
                                                                                                                        |
                                                          3: XON            Apply XON to the PKO pipe selected by       |
                                                                            PORT_PIPE7. The calendar table entry is     |
                                                                            effectively unused if PORT_PIPE3 is out of  |
                                                                            range of ILK_TXx_PIPE[BASE/NUMP].           |
                                                                                                                        |
<63:36>  NS                   RAZ      0x0      NS       Reserved                                                       |
                                                                                                                        |
Notes:                                                                                                                  |
    Software must program the calendar table prior to enabling the                                                      |
    link.                                                                                                               |
                                                                                                                        |
    Software must always write ILK_RXx_MEM_CAL0 then ILK_RXx_MEM_CAL1.                                                  |
    Software must never write them in reverse order or write one without                                                |
    writing the other.                                                                                                  |
                                                                                                                        |
    A given calendar table entry has no effect on PKO pipe                                                              |
    backpressure when either:                                                                                           |
     - ENTRY_CTLx=Link (1), or                                                                                          |
     - ENTRY_CTLx=XON (3) and PORT_PIPEx is outside the range of ILK_TXx_PIPE[BASE/NUMP].                               |
                                                                                                                        |
    Within the 8 calendar table entries of one IDX value, if more                                                       |
    than one affects the same PKO pipe, XOFF always wins over XON,                                                      |
    regardless of the calendar table order.                                                                             |
                                                                                                                        |
    Software must always read ILK_RXx_MEM_CAL0 then ILK_Rx_MEM_CAL1.  Software                                          |
    must never read them in reverse order or read one without reading the                                               |
    other.                                                                                                              |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX(0..1)_JABBER Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>   CNT                  R/W      0x2800   NS       Byte count for jabber check.   Failing packets will be         |
                                                         truncated to CNT bytes.                                        |
                                                                                                                        |
                                                         NOTE: Hardware tracks the size of up to two concurrent packet  |
                                                         per link.  If using segment mode with more than 2 channels,    |
                                                         some large packets may not be flagged or truncated.            |
                                                                                                                        |
                                                         NOTE: CNT must be 8-byte aligned such that CNT[2:0] == 0       |
<63:16>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_LNE_STS_MSG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    TX_LNE_STAT          R/W      0xff     NS       Lane status transmitted in the diagnostic word (per-lane)      |
<15:8>   NS                   RAZ      0x0      NS       Reserved                                                       |
<23:16>  TX_LNK_STAT          R/W      0xff     NS       Link status transmitted in the diagnostic word (per-lane)      |
<31:24>  NS                   RAZ      0x0      NS       Reserved                                                       |
<39:32>  RX_LNE_STAT          RO       0x0      NS       Lane status received in the diagnostic word (per-lane)         |
<47:40>  NS                   RAZ      0x0      NS       Reserved                                                       |
<55:48>  RX_LNK_STAT          RO       0x0      NS       Link status received in the diagnostic word (per-lane)         |
<63:56>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_LNE_DBG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    TX_DIS_SCRAM         R/W      0x0      NS       Per-lane scrambler disable                                     |
<15:8>   NS                   RAZ      0x0      NS       Reserved                                                       |
<23:16>  TX_DIS_DISPR         R/W      0x0      NS       Per-lane disparity disable                                     |
<31:24>  NS                   RAZ      0x0      NS       Reserved                                                       |
<39:32>  TX_BAD_LANE_SEL      R/W      0x0      NS       Select lane to apply error injection counts                    |
<47:40>  NS                   RAZ      0x0      NS       Reserved                                                       |
<50:48>  TX_BAD_SCRAM_CNT     R/W      0x0      NS       Send N bad scram state on selected lane                        |
<53:51>  TX_BAD_SYNC_CNT      R/W      0x0      NS       Send N bad sync words on selected lane                         |
<58:54>  TX_BAD_6467_CNT      R/W      0x0      NS       Send N bad 64B/67B codewords on selected lane                  |
<59>     TX_BAD_CRC32         R/W      0x0      NS       Send 1 diagnostic word with bad CRC32 to the selected lane.    |
                                                         Note: injects just once                                        |
<63:60>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX_LNE(0..7)_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      STAT_ENA             R/W      0x0      NS       Enable RX lane statistics counters                             |
<1>      STAT_RDCLR           R/W      0x0      NS       CSR read to ILK_RX_LNEx_STAT* clears the selected counter after|
                                                         returning its current value.                                   |
<2>      RX_DIS_SCRAM         R/W      0x0      0x0      Disable lane scrambler (debug)                                 |
<3>      RX_DIS_UKWN          R/W      0x0      0x0      Disable normal response to unknown words.  They are still      |
                                                         logged but do not cause an error to all open channels..        |
<4>      RX_BDRY_SYNC         RO       0x0      NS       Rx word boundary sync status                                   |
<63:5>   NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX_LNE(0..7)_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      SERDES_LOCK_LOSS     R/W1C    0x0      NS       Rx SERDES loses lock                                           |
<1>      BDRY_SYNC_LOSS       R/W1C    0x0      NS       Rx logic loses word boundary sync (16 tries).  Hardware will   |
                                                         automatically attempt to regain word boundary sync             |
<2>      CRC32_ERR            R/W1C    0x0      NS       Diagnostic CRC32 errors                                        |
<3>      UKWN_CNTL_WORD       R/W1C    0x0      NS       Unknown framing control word. Block type does not match any of |
                                                         (SYNC,SCRAM,SKIP,DIAG)                                         |
<4>      SCRM_SYNC_LOSS       R/W1C    0x0      NS       4 consecutive bad sync words or 3 consecutive scramble state   |
                                                         mismatches                                                     |
<5>      DSKEW_FIFO_OVFL      R/W1C    0x0      NS       Rx deskew fifo overflow occurred.                              |
<6>      STAT_MSG             R/W1C    0x0      NS       Status bits for the link or a lane transitioned from a '1'     |
                                                         (healthy) to a '0' (problem)                                   |
<7>      STAT_CNT_OVFL        R/W1C    0x0      NS       Rx lane statistic counter overflow                             |
<8>      BAD_64B67B           R/W1C    0x0      NS       Bad 64B/67B codeword encountered.  Once the bad word reaches   |
                                                         the burst control unit (as deonted by                          |
                                                         ILK_RXx_INT[LANE_BAD_WORD]) it will be tossed and all open     |
                                                         packets will receive an error.                                 |
<63:9>   NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX_LNE(0..7)_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      SERDES_LOCK_LOSS     R/W      0x0      NS       Rx SERDES loses lock                                           |
<1>      BDRY_SYNC_LOSS       R/W      0x0      NS       Rx logic loses word boundary sync (16 tries).  Hardware will   |
                                                         automatically attempt to regain word boundary sync             |
<2>      CRC32_ERR            R/W      0x0      NS       Diagnostic CRC32 error                                         |
<3>      UKWN_CNTL_WORD       R/W      0x0      NS       Unknown framing control word. Block type does not match any of |
                                                         (SYNC,SCRAM,SKIP,DIAG)                                         |
<4>      SCRM_SYNC_LOSS       R/W      0x0      NS       4 consecutive bad sync words or 3 consecutive scramble state   |
                                                         mismatches                                                     |
<5>      DSKEW_FIFO_OVFL      R/W      0x0      NS       Rx deskew fifo overflow occurred.                              |
<6>      STAT_MSG             R/W      0x0      NS       Status bits for the link or a lane transitioned from a '1'     |
                                                         (healthy) to a '0' (problem)                                   |
<7>      STAT_CNT_OVFL        R/W      0x0      NS       Rx lane statistic counter overflow                             |
<8>      BAD_64B67B           R/W      0x0      NS       Bad 64B/67B codeword encountered.  Once the bad word reaches   |
                                                         the burst control unit (as deonted by                          |
                                                         ILK_RXx_INT[LANE_BAD_WORD]) it will be tossed and all open     |
                                                         packets will receive an error.                                 |
<63:9>   NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX_LNE(0..7)_STAT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<17:0>   SER_LOCK_LOSS_CNT    RO       0x0      NS       Number of times the lane lost clock-data-recovery.             |
                                                         Saturates.  Interrupt on saturation if                         |
                                                         ILK_RX_LNE@_INT_EN[STAT_CNT_OVFL]=1                            |
<63:18>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX_LNE(0..7)_STAT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<17:0>   BDRY_SYNC_LOSS_CNT   RO       0x0      NS       Number of times a lane lost word boundary synchronization.     |
                                                         Saturates.  Interrupt on saturation if                         |
                                                         ILK_RX_LNE@_INT_EN[STAT_CNT_OVFL]=1                            |
<63:18>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX_LNE(0..7)_STAT2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<17:0>   SYNCW_BAD_CNT        RO       0x0      NS       Number of bad synchronization words.  Saturates.  Interrupt on |
                                                         saturation if ILK_RX_LNE@_INT_EN[STAT_CNT_OVFL]=1              |
<31:18>  NS                   RAZ      0x0      NS       Reserved                                                       |
<49:32>  SYNCW_GOOD_CNT       RO       0x0      NS       Number of good synchronization words.  Saturates.  Interrupt on|
                                                         saturation if ILK_RX_LNE@_INT_EN[STAT_CNT_OVFL]=1              |
<63:50>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX_LNE(0..7)_STAT3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<17:0>   BAD_64B67B_CNT       RO       0x0      NS       Number of bad 64B/67B words, meaning bit 65 or 64 has been     |
                                                         corrupted.  Saturates.  Interrupt on saturation if             |
                                                         ILK_RX_LNE@_INT_EN[STAT_CNT_OVFL]=1                            |
<63:18>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX_LNE(0..7)_STAT4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<26:0>   DATA_WORD_CNT        RO       0x0      NS       Number of data words received.  Saturates.  Interrupt on       |
                                                         saturation if ILK_RX_LNE@_INT_EN[STAT_CNT_OVFL]=1              |
<31:27>  NS                   RAZ      0x0      NS       Reserved                                                       |
<58:32>  CNTL_WORD_CNT        RO       0x0      NS       Number of control words received.  Saturates.  Interrupt on    |
                                                         saturation if ILK_RX_LNE@_INT_EN[STAT_CNT_OVFL]=1              |
<63:59>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX_LNE(0..7)_STAT5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<17:0>   UNKWN_WORD_CNT       RO       0x0      NS       Number of unknown control words.  Saturates.  Interrupt on     |
                                                         saturation if ILK_RX_LNE@_INT_EN[STAT_CNT_OVFL]=1              |
<63:18>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX_LNE(0..7)_STAT6 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<17:0>   SCRM_SYNC_LOSS_CNT   RO       0x0      NS       Number of times scrambler synchronization was lost (due to     |
                                                         either 4 consecutive bad sync words or 3 consecutive scrambler |
                                                         state mismatches).  Saturates.  Interrupt on saturation if     |
                                                         ILK_RX_LNE@_INT_EN[STAT_CNT_OVFL]=1                            |
<63:18>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX_LNE(0..7)_STAT7 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<17:0>   SCRM_MATCH_CNT       RO       0x0      NS       Number of scrambler state matches received.  Saturates.        |
                                                         Interrupt on saturation if ILK_RX_LNE@_INT_EN[STAT_CNT_OVFL]=1 |
<63:18>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX_LNE(0..7)_STAT8 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<17:0>   SKIPW_GOOD_CNT       RO       0x0      NS       Number of good skip words.  Saturates.  Interrupt on saturation|
                                                         if ILK_RX_LNE@_INT_EN[STAT_CNT_OVFL]=1                         |
<63:18>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RX_LNE(0..7)_STAT9 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<26:0>   CRC32_MATCH_CNT      RO       0x0      NS       Number of CRC32 matches received.  Saturates.  Interrupt on    |
                                                         saturation if ILK_RX_LNE@_INT_EN[STAT_CNT_OVFL]=1              |
<31:27>  NS                   RAZ      0x0      NS       Reserved                                                       |
<49:32>  CRC32_ERR_CNT        RO       0x0      NS       Number of errors in the lane CRC.  Saturates.  Interrupt on    |
                                                         saturation if ILK_RX_LNE@_INT_EN[STAT_CNT_OVFL]=1              |
<63:50>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_GBL_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      RXF_XLINK            R/W      0x0      NS       Causes external loopback traffic to switch links.  Enabling    |
                                                         this allow simultaneous use of external and internal loopback. |
<1>      CCLK_DIS             R/W      0x0      NS       Disable ILK conditional clocking.   For diagnostic use only.   |
<63:2>   NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_GBL_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      RXF_LNK0_PERR        R/W1C    0x0      NS       RXF parity error occurred on RxLink0 packet data.  Packet will |
                                                         be marked with error at eop                                    |
<1>      RXF_LNK1_PERR        R/W1C    0x0      NS       RXF parity error occurred on RxLink1 packet data               |
                                                         Packet will be marked with error at eop                        |
<2>      RXF_CTL_PERR         R/W1C    0x0      NS       RXF parity error occurred on sideband control signals.  Data   |
                                                         cycle will be dropped.                                         |
<3>      RXF_POP_EMPTY        R/W1C    0x0      NS       RXF underflow                                                  |
<4>      RXF_PUSH_FULL        R/W1C    0x0      NS       RXF overflow                                                   |
<63:5>   NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_GBL_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      RXF_LNK0_PERR        R/W      0x0      NS       RXF parity error occurred on RxLink0 packet data               |
                                                         Packet will be marked with error at eop                        |
<1>      RXF_LNK1_PERR        R/W      0x0      NS       RXF parity error occurred on RxLink1 packet data               |
                                                         Packet will be marked with error at eop                        |
<2>      RXF_CTL_PERR         R/W      0x0      NS       RXF parity error occurred on sideband control signals.  Data   |
                                                         cycle will be dropped.                                         |
<3>      RXF_POP_EMPTY        R/W      0x0      NS       RXF underflow                                                  |
<4>      RXF_PUSH_FULL        R/W      0x0      NS       RXF overflow                                                   |
<63:5>   NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_SER_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<1:0>    SER_HAUL             R/W      0x0      NS       Serdes module (QLM) haul mode                                  |
<3:2>    NS                   RAZ      0x0      NS       Reserved                                                       |
<5:4>    SER_PWRUP            R/W      0x0      NS       Serdes modules (QLM) power up.                                 |
<7:6>    NS                   RAZ      0x0      NS       Reserved                                                       |
<15:8>   SER_RESET_N          R/W      0x0      NS       Serdes lane reset                                              |
<23:16>  NS                   RAZ      0x0      NS       Reserved                                                       |
<31:24>  SER_TXPOL            R/W      0x0      NS       Serdes lane transmit polarity                                  |
                                                               0: tx without inversion                                  |
                                                               1: tx with inversion                                     |
<39:32>  NS                   RAZ      0x0      NS       Reserved                                                       |
<47:40>  SER_RXPOL            R/W      0x0      NS       Serdes lane receive polarity                                   |
                                                               0: rx without inversion                                  |
                                                               1: rx with inversion                                     |
<55:48>  NS                   RAZ      0x0      NS       Reserved                                                       |
<56>     SER_RXPOL_AUTO       R/W      0x0      NS       Serdes lane receive polarity auto detection mode               |
<63:57>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RXF_IDX_PMAP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<8:0>    IDX                  R/W      0x0      NS       Specify the link/channel accessed by the next CSR read/write to|
                                                         port map memory.   IDX[8]=link, IDX[7:0]=channel               |
<15:9>   NS                   RAZ      0x0      NS       Reserved                                                       |
<24:16>  INC                  R/W      0x0      NS       Increment to add to current index for next index.              |
<63:25>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_RXF_MEM_PMAP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    PORT_KIND            R/W      0x0      NS       Specify the port-kind for the link/channel selected by         |
                                                         ILK_IDX_PMAP[IDX]                                              |
<63:6>   NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_INT_SUM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      GBL_INT              RO       0x0      NS       Global interrupt status. See ILK_GBL_INT                       |
<1>      TLK0_INT             RO       0x0      NS       TxLink0 interrupt status. See ILK_TX0_INT                      |
<2>      TLK1_INT             RO       0x0      NS       TxLink1 interrupt status. See ILK_TX1_INT                      |
<3>      RLK0_INT             RO       0x0      NS       RxLink0 interrupt status. See ILK_RX0_INT                      |
<4>      RLK1_INT             RO       0x0      NS       RxLink1 interrupt status. See ILK_RX1_INT                      |
<5>      RLE0_INT             RO       0x0      NS       RxLane0 interrupt status. See ILK_RX_LNE0_INT                  |
<6>      RLE1_INT             RO       0x0      NS       RxLane1 interrupt status. See ILK_RX_LNE1_INT                  |
<7>      RLE2_INT             RO       0x0      NS       RxLane2 interrupt status. See ILK_RX_LNE2_INT                  |
<8>      RLE3_INT             RO       0x0      NS       RxLane3 interrupt status. See ILK_RX_LNE3_INT                  |
<9>      RLE4_INT             RO       0x0      NS       RxLane4 interrupt status. See ILK_RX_LNE4_INT                  |
<10>     RLE5_INT             RO       0x0      NS       RxLane5 interrupt status. See ILK_RX_LNE5_INT                  |
<11>     RLE6_INT             RO       0x0      NS       RxLane6 interrupt status. See ILK_RX_LNE6_INT                  |
<12>     RLE7_INT             RO       0x0      NS       RxLane7 interrupt status. See ILK_RX_LNE7_INT                  |
<63:13>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ILK_BIST_SUM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      TLK0_TXF0            RO       0x0      NS       Bist status of tlk0.txf.tx_fif_mem0                            |
<1>      TLK0_TXF1            RO       0x0      NS       Bist status of tlk0.txf.tx_fif_mem1                            |
<2>      TLK0_TXF2            RO       0x0      NS       Bist status of tlk0.txf.tx_map_mem                             |
<3>      TLK0_STAT            RO       0x0      NS       Bist status of tlk0.csr.stat_mem                               |
<4>      TLK0_FWC             RO       0x0      NS       Bist status of tlk0.fwc.cal_chan_ram                           |
<5>      NS                   RAZ      0x0      NS       Reserved                                                       |
<6>      TLK1_TXF0            RO       0x0      NS       Bist status of tlk1.txf.tx_fif_mem0                            |
<7>      TLK1_TXF1            RO       0x0      NS       Bist status of tlk1.txf.tx_fif_mem1                            |
<8>      TLK1_TXF2            RO       0x0      NS       Bist status of tlk1.txf.tx_map_mem                             |
<9>      TLK1_STAT            RO       0x0      NS       Bist status of tlk1.csr.stat_mem                               |
<10>     TLK1_FWC             RO       0x0      NS       Bist status of tlk1.fwc.cal_chan_ram                           |
<11>     NS                   RAZ      0x0      NS       Reserved                                                       |
<12>     RLK0_STAT            RO       0x0      NS       Bist status of rlk0.csr.stat_mem                               |
<13>     RLK0_FWC             RO       0x0      NS       Bist status of rlk0.fwc.cal_chan_ram                           |
<15:14>  NS                   RAZ      0x0      NS       Reserved                                                       |
<16>     RLK1_STAT            RO       0x0      NS       Bist status of rlk1.csr.stat_mem                               |
<17>     RLK1_FWC             RO       0x0      NS       Bist status of rlk1.fwc.cal_chan_ram                           |
<19:18>  NS                   RAZ      0x0      NS       Reserved                                                       |
<20>     RLE0_DSK0            RO       0x0      NS       Bist status of lne.rle0.dsk.dsk_fif_mem0                       |
<21>     RLE0_DSK1            RO       0x0      NS       Bist status of lne.rle0.dsk.dsk_fif_mem1                       |
<22>     RLE1_DSK0            RO       0x0      NS       Bist status of lne.rle1.dsk.dsk_fif_mem0                       |
<23>     RLE1_DSK1            RO       0x0      NS       Bist status of lne.rle1.dsk.dsk_fif_mem1                       |
<24>     RLE2_DSK0            RO       0x0      NS       Bist status of lne.rle2.dsk.dsk_fif_mem0                       |
<25>     RLE2_DSK1            RO       0x0      NS       Bist status of lne.rle2.dsk.dsk_fif_mem1                       |
<26>     RLE3_DSK0            RO       0x0      NS       Bist status of lne.rle3.dsk.dsk_fif_mem0                       |
<27>     RLE3_DSK1            RO       0x0      NS       Bist status of lne.rle3.dsk.dsk_fif_mem1                       |
<28>     RLE4_DSK0            RO       0x0      NS       Bist status of lne.rle4.dsk.dsk_fif_mem0                       |
<29>     RLE4_DSK1            RO       0x0      NS       Bist status of lne.rle4.dsk.dsk_fif_mem1                       |
<30>     RLE5_DSK0            RO       0x0      NS       Bist status of lne.rle5.dsk.dsk_fif_mem0                       |
<31>     RLE5_DSK1            RO       0x0      NS       Bist status of lne.rle5.dsk.dsk_fif_mem1                       |
<32>     RLE6_DSK0            RO       0x0      NS       Bist status of lne.rle6.dsk.dsk_fif_mem0                       |
<33>     RLE6_DSK1            RO       0x0      NS       Bist status of lne.rle6.dsk.dsk_fif_mem1                       |
<34>     RLE7_DSK0            RO       0x0      NS       Bist status of lne.rle7.dsk.dsk_fif_mem0                       |
<35>     RLE7_DSK1            RO       0x0      NS       Bist status of lne.rle7.dsk.dsk_fif_mem1                       |
<51:36>  NS                   RAZ      0x0      NS       Reserved                                                       |
<52>     RXF_MEM0             RO       0x0      NS       Bist status of rxf.rx_fif_mem0                                 |
<53>     RXF_MEM1             RO       0x0      NS       Bist status of rxf.rx_fif_mem1                                 |
<54>     RXF_MEM2             RO       0x0      NS       Bist status of rxf.rx_fif_mem2                                 |
<55>     RXF_PMAP             RO       0x0      NS       Bist status of rxf.rx_map_mem                                  |
<56>     RXF_X2P0             RO       0x0      NS       Bist status of rxf.x2p_fif_mem0                                |
<57>     RXF_X2P1             RO       0x0      NS       Bist status of rxf.x2p_fif_mem1                                |
<63:58>  NS                   RAZ      0x0      NS       Reserved                                                       |
----------------------------------------------------------------------------------------------------
===

 *
 *                  FAU Timeout = Fetch and Add Unit Tag-Switch Timeout
 *
 * How many clokc ticks the FAU unit will wait for a tag-switch before timeing out.
 * for Queue 0.
 *

     ==============================================================
     IOB0_FAU_TIMEOUT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  TOUT_VAL R/W      0x4         0x4       When a tag request arrives from the PP a timer is
                                                 started associate with that PP. The timer which
                                                 increments every 256 eclks is compared to TOUT_VAL.
                                                 When the two are equal the IOB will flag the tag
                                                 request to complete as a time-out tag operation.
                                                 The 256 count timer used to increment the PP
                                                 associated timer is always running so the first
                                                 increment of the PP associated timer may occur any
                                                 where within the first 256 eclks.  Note that '0'
						 is an illegal value.
 <12>    TOUT_ENB R/W      0x1         0         The enable for the FAU timeout feature.
                                                 '1' will enable the timeout, '0' will disable.
 <63:13> NS        RAZ     NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  Request To NCB Priority Counter = Request to NCB Priority Counter Enable and Timer Value
 *
 * Enables and supplies the timeout count for raising the priority of Request transfers to the Outbound NCB.
 *

     ==============================================================
     IOB0_OUTB_REQ_PRI_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <14:0>  CNT_VAL   R/W     0x0         0         Number of core clocks to wait before raising
                                                 the priority for access to NCB.
 <15>    CNT_ENB   R/W     0x0         0         Enables the raising of NCB access priority
                                                 when CNT_VAL is reached.
 <63:16> NS        RAZ     NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  Commit To NCB Priority Counter = Commit to NCB Priority Counter Enable and Timer Value
 *
 * Enables and supplies the timeout count for raising the priority of Commit request to the Outbound NCB.
 *

     ==============================================================
     IOB0_OUTB_COM_PRI_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <14:0>  CNT_VAL   R/W     0x0         0         Number of core clocks to wait before raising
                                                 the priority for access to NCB.
 <15>    CNT_ENB   R/W     0x0         0         Enables the raising of NCB access priority
                                                 when CNT_VAL is reached.
 <63:16> NS        RAZ     NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA To NCB Priority Counter = FPA Returns to NCB Priority Counter Enable and Timer Value
 *
 * Enables and supplies the timeout count for raising the priority of FPA Rreturn Page request to the Outbound NCB.
 *

     ==============================================================
     IOB0_OUTB_FPA_PRI_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <14:0>  CNT_VAL   R/W     0x0         0         Number of core clocks to wait before raising
                                                 the priority for access to NCB.
 <15>    CNT_ENB   R/W     0x0         0         Enables the raising of NCB access priority
                                                 when CNT_VAL is reached.
 <63:16> NS        RAZ     NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB Control Status = IOB Control and Status Register
 *
 * Provides control for IOB functions.
 *

     ==============================================================
     IOB0_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     FAU_END   R/W     0x0         0         Toggles the endian style of the FAU. '0' is for
                                                 big-endian and '1' is for little-endian.
 <1>     DWB_ENB   R/W     0x1         1         Enables the DWB function of the IOB.
 <2>     PKO_ENB   R/W     0x0         0         Toggles the endian style of the FAU for the PKO.
						 '0' is for big-endian and '1' is for little-endian.
 <3>     INB_MAT   R/W1C   0x0         0         Was a match on the inbound bus to the inb pattern
	                                         matchers.
 <4>     OUTB_MAT  R/W1C   0x0         0         Was a match on the outbound bus to the inb pattern
	                                         matchers.
 <5>     RSVR5     R/W     0x0         0         Reserved
 <9:6>   XMC_PER   R/W     0x0         0         IBC XMC PUSH EARLY
 <10>    FIF_DLY   R/W     0x1         0         Delay async FIFO counts to be used when clock ratio
						 is greater then 3:1. Writes should be followed by an
                                                 immediate read.
 <63:11> NS        RAZ     NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_INT_SUM = IOB's Interrupt Summary Register
 *
 * Contains the diffrent interrupt summary bits of the IOB. This is a PASS-2 register.
 *

     ==============================================================
     IOB0_INT_SUM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  NS       RAZ       NS          NS       Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_INT_ENB = IOB's Interrupt Enable
 *
 * The IOB's interrupt enable register. This is a PASS-2 register.
 *

     ==============================================================
     IOB0_INT_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <5:0>   NS       R/W      0x0         0         Reserved
 <63:6>  NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===



 *
 *                  IOB_INB_DATA_MATCH = IOB Inbound Data Match
 *
 * Match pattern for the inbound data to set the INB_MATCH_BIT. PASS-2 Register
 *

     ==============================================================
     IOB0_INB_DATA_MATCH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DATA     R/W      0x0         NS        Pattern to match on the inbound NCB.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_INB_CONTROL_MATCH = IOB Inbound Control Match
 *
 * Match pattern for the inbound control to set the INB_MATCH_BIT. PASS-2 Register
 *

     ==============================================================
     IOB0_INB_CONTROL_MATCH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:29> NS        RAZ     NS          NS        Reserved
 <28:21> MASK     R/W      0x0         NS        Pattern to match on the inbound NCB.
 <20:17> OPC      R/W      0x0         NS        Pattern to match on the inbound NCB.
 <16:8>  DST      R/W      0x0         NS        Pattern to match on the inbound NCB.
 <7:0>   SRC      R/W      0x0         NS        Pattern to match on the inbound NCB.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_INB_DATA_MATCH_ENB = IOB Inbound Data Match Enable
 *
 * Enables the match of the corresponding bit in the IOB_INB_DATA_MATCH reister. PASS-2 Register
 *

     ==============================================================
     IOB0_INB_DATA_MATCH_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DATA     R/W      0x0         NS        Bit to enable match of.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_INB_CONTROL_MATCH_ENB = IOB Inbound Control Match Enable
 *
 * Enables the match of the corresponding bit in the IOB_INB_CONTROL_MATCH reister. PASS-2 Register
 *

     ==============================================================
     IOB0_INB_CONTROL_MATCH_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:29> NS        RAZ     NS          NS        Reserved
 <28:21> MASK     R/W      0x0         NS        Pattern to match on the inbound NCB.
 <20:17> OPC      R/W      0x0         NS        Pattern to match on the inbound NCB.
 <16:8>  DST      R/W      0x0         NS        Pattern to match on the inbound NCB.
 <7:0>   SRC      R/W      0x0         NS        Pattern to match on the inbound NCB.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_OUTB_DATA_MATCH = IOB Outbound Data Match
 *
 * Match pattern for the outbound data to set the OUTB_MATCH_BIT. PASS-2 Register
 *

     ==============================================================
     IOB0_OUTB_DATA_MATCH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DATA     R/W      0x0         NS        Pattern to match on the outbound NCB.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_OUTB_CONTROL_MATCH = IOB Outbound Control Match
 *
 * Match pattern for the outbound control to set the OUTB_MATCH_BIT. PASS-2 Register
 *

     ==============================================================
     IOB0_OUTB_CONTROL_MATCH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:26> NS        RAZ     NS          NS        Reserved
 <25:18> MASK     R/W      0x0         NS        Pattern to match on the outbound NCB.
 <17>    EOT      R/W      0x0         NS        Pattern to match on the outbound NCB.
 <16:9>  DST      R/W      0x0         NS        Pattern to match on the outbound NCB.
 <8:0>   SRC      R/W      0x0         NS        Pattern to match on the outbound NCB.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_OUTB_DATA_MATCH_ENB = IOB Outbound Data Match Enable
 *
 * Enables the match of the corresponding bit in the IOB_OUTB_DATA_MATCH reister. PASS-2 Register
 *

     ==============================================================
     IOB0_OUTB_DATA_MATCH_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DATA     R/W      0x0         NS        Bit to enable match of.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_OUTB_CONTROL_MATCH_ENB = IOB Outbound Control Match Enable
 *
 * Enables the match of the corresponding bit in the IOB_OUTB_CONTROL_MATCH reister. PASS-2 Register
 *

     ==============================================================
     IOB0_OUTB_CONTROL_MATCH_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:26> NS        RAZ     NS          NS        Reserved
 <25:18> MASK     R/W      0x0         NS        Pattern to match on the outbound NCB.
 <17>    EOT      R/W      0x0         NS        Pattern to match on the outbound NCB.
 <16:9>  DST      R/W      0x0         NS        Pattern to match on the outbound NCB.
 <8:0>   SRC      R/W      0x0         NS        Pattern to match on the outbound NCB.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_TO_CMB_CREDITS = IOB To CMB Credits
 *
 * Controls the number of reads and writes that may be outstanding to the L2C (via the CMB).
 *

     ==============================================================
     IOB0_TO_CMB_CREDITS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:9>  NS       RAZ     NS          NS        Reserved			                    |
 <8:6>   DWB      R/W     0x2         NS        Number of DWBs  that can be out to L2C where        |
 						0 == 8-credits.                                     |
 <5:3>   NCB_RD   R/W     0x0         NS        Number of NCB reads that can be out to L2C where    |
 						0 == 8-credits.                                     |
 <2:0>   NCB_WR   R/W     0x0         NS        Number of NCB/PKI writes that can be out to L2C     |
 						where 0 == 8-credits.                               |
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_BIST_STATUS = BIST Status of IOB Memories
 *
 * The result of the BIST run on the IOB memories.
 *

     ==============================================================
     IOB0_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ICD      RO       0x0         0         icd_ncb_fifo_bist_status
 <1>     IBD      RO       0x0         0         ibd_bist_mem0_status
 <2>     ICRN1    RO       0x0         0         icr_ncb_bist_mem1_status
 <3>     ICRN0    RO       0x0         0         icr_ncb_bist_mem0_status
 <4>     IBRQ1    RO       0x0         0         ibrq_bist_req_fifo1_status
 <5>     IBRQ0    RO       0x0         0         ibrq_bist_req_fifo0_status
 <6>     ICNRT    RO       0x0         0         icnr_tag_cb_reg_fifo_bist_status
 <7>     IBR1     RO       0x0         0         ibr_bist_rsp_fifo1_status
 <8>     IBR0     RO       0x0         0         ibr_bist_rsp_fifo0_status
 <9>     ICNR0    RO       0x0         0         icnr_reg_mem0_bist_status
 <10>    ICR1     RO       0x0         0         icr_bist_req_fifo1_status
 <11>    ICR0     RO       0x0         0         icr_bist_req_fifo0_status
 <12>    ICNRCB   RO       0x0         0         icnr_cb_reg_fifo_bist_status
 <13>    IOCFIF   RO       0x0         0         iocfif_bist_status
 <14>    RSDFIF   RO       0x0         0         rsdfif_bist_status
 <15>    IORFIF   RO       0x0         0         iorfif_bist_status
 <16>    XMCFIF   RO       0x0         0         xmcfif_bist_status
 <17>    XMDFIF   RO       0x0         0         xmdfif_bist_status
 <63:18> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_TO_NCB_DID_00_CREDITS = IOB NCB DID 00 Credits
 *
 * Number of credits for NCB DID 00.
 *

     ==============================================================
     IOB0_TO_NCB_DID_00_CREDITS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved			                     |
 <6:0>   CRD      R/W      14          NS        Number of credits for DID. Writing this field will  |
                                                 casuse the credits to be set to the value written.  |
                                                 Reading this field will give the number of credits  |
						 PRESENTLY available.                                |
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_TO_NCB_DID_24_CREDITS = IOB NCB DID 24 Credits
 *
 * Number of credits for NCB DID 24.
 *

     ==============================================================
     IOB0_TO_NCB_DID_24_CREDITS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ     NS          NS        Reserved			                    |
 <6:0>   CRD      R/W     16          NS        Number of credits for DID. Writing this field will  |
                                                casuse the credits to be set to the value written.  |
                                                Reading this field will give the number of credits  |
						PRESENTLY available.                                |
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_TO_NCB_DID_32_CREDITS = IOB NCB DID 32 Credits
 *
 * Number of credits for NCB DID 32.
 *

     ==============================================================
     IOB0_TO_NCB_DID_32_CREDITS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ     NS          NS        Reserved			                    |
 <6:0>   CRD      R/W     12          NS        Number of credits for DID. Writing this field will  |
                                                casuse the credits to be set to the value written.  |
                                                Reading this field will give the number of credits  |
						PRESENTLY available.                                |
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_TO_NCB_DID_40_CREDITS = IOB NCB DID 40 Credits
 *
 * Number of credits for NCB DID 40.
 *

     ==============================================================
     IOB0_TO_NCB_DID_40_CREDITS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ     NS          NS        Reserved			                    |
 <6:0>   CRD      R/W     40          NS        Number of credits for DID. Writing this field will  |
                                                casuse the credits to be set to the value written.  |
                                                Reading this field will give the number of credits  |
						PRESENTLY available.                                |
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_TO_NCB_DID_55_CREDITS = IOB NCB DID 55 Credits
 *
 * Number of credits for NCB DID 55.
 *

     ==============================================================
     IOB0_TO_NCB_DID_55_CREDITS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ     NS          NS        Reserved			                    |
 <6:0>   CRD      R/W     4           NS        Number of credits for DID. Writing this field will  |
                                                casuse the credits to be set to the value written.  |
                                                Reading this field will give the number of credits  |
						PRESENTLY available.                                |
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_TO_NCB_DID_64_CREDITS = IOB NCB DID 64 Credits
 *
 * Number of credits for NCB DID 64.
 *

     ==============================================================
     IOB0_TO_NCB_DID_64_CREDITS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ     NS          NS        Reserved			                    |
 <6:0>   CRD      R/W     8           NS        Number of credits for DID. Writing this field will  |
                                                casuse the credits to be set to the value written.  |
                                                Reading this field will give the number of credits  |
						PRESENTLY available.                                |
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_TO_NCB_DID_79_CREDITS = IOB NCB DID 79 Credits
 *
 * Number of credits for NCB DID 79.
 *

     ==============================================================
     IOB0_TO_NCB_DID_79_CREDITS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ     NS          NS        Reserved			                    |
 <6:0>   CRD      R/W     8           NS        Number of credits for DID. Writing this field will  |
                                                casuse the credits to be set to the value written.  |
                                                Reading this field will give the number of credits  |
						PRESENTLY available.                                |
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_TO_NCB_DID_96_CREDITS = IOB NCB DID 96 Credits
 *
 * Number of credits for NCB DID 96.
 *

     ==============================================================
     IOB0_TO_NCB_DID_96_CREDITS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ     NS          NS        Reserved			                    |
 <6:0>   CRD      R/W     24          NS        Number of credits for DID. Writing this field will  |
                                                casuse the credits to be set to the value written.  |
                                                Reading this field will give the number of credits  |
						PRESENTLY available.                                |
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_TO_NCB_DID_98_CREDITS = IOB NCB DID 96 Credits
 *
 * Number of credits for NCB DID 98.
 *

     ==============================================================
     IOB0_TO_NCB_DID_98_CREDITS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ     NS          NS        Reserved			                    |
 <6:0>   CRD      R/W     16          NS        Number of credits for DID. Writing this field will  |
                                                casuse the credits to be set to the value written.  |
                                                Reading this field will give the number of credits  |
						PRESENTLY available.                                |
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_TO_NCB_DID_111_CREDITS = IOB NCB DID 111 Credits
 *
 * Number of credits for NCB DID 111.
 *

     ==============================================================
     IOB0_TO_NCB_DID_111_CREDITS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ     NS          NS        Reserved			                    |
 <6:0>   CRD      R/W     16          NS        Number of credits for DID. Writing this field will  |
                                                casuse the credits to be set to the value written.  |
                                                Reading this field will give the number of credits  |
						PRESENTLY available.                                |
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_TO_NCB_DID_223_CREDITS = IOB NCB DID 223 Credits
 *
 * Number of credits for NCB DID 223.
 *

     ==============================================================
     IOB0_TO_NCB_DID_223_CREDITS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ     NS          NS        Reserved			                    |
 <6:0>   CRD      R/W     16          NS        Number of credits for DID. Writing this field will  |
                                                casuse the credits to be set to the value written.  |
                                                Reading this field will give the number of credits  |
						PRESENTLY available.                                |
----------------------------------------------------------------------------------------------------
===



 *
 *                  IOB Control Status = IOB Control and Status Register
 *
 * Provides control for IOB functions.
 *

     ==============================================================
     IOB1_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <5:0>   RSVD00    R/W     0x0         0         Toggles the endian style of the FAU. '0' is for
                                                 big-endian and '1' is for little-endian.
 <9:6>   XMC_PER   R/W     0x0         0         IBC XMC PUSH EARLY
 <10>    FIF_DLY   R/W     0x1         0         Delay async FIFO counts to be used when clock ratio
						 is greater then 3:1. Writes should be followed by an
                                                 immediate read.
 <63:11> NS        RAZ     NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===


 *
 *                  IOB_TO_CMB_CREDITS = IOB To CMB Credits
 *
 * Controls the number of reads and writes that may be outstanding to the L2C (via the CMB).
 *

     ==============================================================
     IOB1_TO_CMB_CREDITS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS       RAZ     NS          NS        Reserved			                    |
 <9:6>   PKO_RD   R/W     0x0         NS        Number of PKO reads that can be out to L2C where    |
 						0 == 16-credits.                                    |
 <5:3>   NS       R/W     0x0         0         Reserved		                            |
 <2:0>   NCB_WR   R/W     0x0         NS        Number of NCB/PKI writes that can be out to L2C     |
 						where 0 == 8-credits.                               |
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_BIST_STATUS = BIST Status of IOB Memories
 *
 * The result of the BIST run on the IOB memories.
 *

     ==============================================================
     IOB1_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ICRP1    RO       0x0         0         icr_pko_bist_mem1_status
 <1>     ICRP0    RO       0x0         0         icr_pko_bist_mem0_status
 <3:2>   NS       RAZ      NS          NS        Reserved
 <4>     IOCFIF   RO       0x0         0         iocfif_bist_status
 <5>     RSDFIF   RO       0x0         0         rsdfif_bist_status
 <6>     IORFIF   RO       0x0         0         iorfif_bist_status
 <7>     XMCFIF   RO       0x0         0         xmcfif_bist_status
 <8>     XMDFIF   RO       0x0         0         xmdfif_bist_status
 <63:9> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_1ST_MBUFF_SKIP = IPD First MBUFF Word Skip Size
 *
 * The number of words that the IPD will skip when writing the first MBUFF.
 *

     ==============================================================
     IPD_1ST_MBUFF_SKIP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <5:0>   SKIP_SZ  R/W      0           0         The number of 8-byte words from the top of the
                                                 1st MBUFF that the IPD will store the next-pointer.
                                                 Legal values are 0 to 32, where the MAX value
                                                 is also limited to:
						 IPD_PACKET_MBUFF_SIZE[MB_SIZE] - 18.
                                                 Must be at least 16 when IPD_CTL_STATUS[NO_WPTR]
                                                 is set.
 <63:6>  NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_NOT_1ST_MBUFF_SKIP = IPD Not First MBUFF Word Skip Size
 *
 * The number of words that the IPD will skip when writing any MBUFF that is not the first.
 *

     ==============================================================
     IPD_NOT_1ST_MBUFF_SKIP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <5:0>   SKIP_SZ  R/W      0           0         The number of 8-byte words from the top of any
                                                 MBUFF, that is not the 1st MBUFF, that the IPD
                                                 will write the next-pointer.
                                                 Legal values are 0 to 32, where the MAX value
                                                 is also limited to:
						 IPD_PACKET_MBUFF_SIZE[MB_SIZE] - 16.
 <63:6>  NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_PACKET_MBUFF_SIZE = IPD's PACKET MUBUF Size In Words
 *
 * The number of words in a MBUFF used for packet data store.
 *

     ==============================================================
     IPD_PACKET_MBUFF_SIZE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  MB_SIZE  R/W       32          32       The number of 8-byte words in a MBUF.
                                                 This must be a number in the range of 32 to
                                                 2048.
                                                 This is also the size of the FPA's
                                                 Queue-0 Free-Page.
 <63:12> NS       RAZ       NS          NS       Reserved
----------------------------------------------------------------------------------------------------
===


 *
 *                  IPD_CTL_STATUS = IPD's Control Status Register
 *
 * The number of words in a MBUFF used for packet data store.
 *

     ==============================================================
     IPD_CTL_STATUS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     IPD_EN   R/W      0           0         When set '1' enable the operation of the IPD.
                                                 When clear '0', the IPD will appear to the
						 IOB-arbiter to be applying backpressure, this
						 causes the IOB-Arbiter to not send grants to NCB
						 devices requesting to send packet data to the IPD.
 <2:1>   OPC_MODE R/W      0           0         0 ==> All packet data (and next buffer pointers)
					         is written through to memory.
						 1 ==> All packet data (and next buffer pointers) is
						 written into the cache.
						 2 ==> The first aligned cache block holding the
						 packet data (and initial next buffer pointer) is
						 written to the L2 cache, all remaining cache blocks
						 are not written to the L2 cache.
						 3 ==> The first two aligned cache blocks holding
						 the packet data (and initial next buffer pointer)
						 are written to the L2 cache, all remaining cache
						 blocks are not written to the L2 cache.
 <3>     PBP_EN   R/W      0           0         BPID enable. When set '1' enables
                                                 the sending of BPID level backpressure to the
                                                 Octane inputs. The application should NOT
                                                 de-assert this bit after asserting it. The
                                                 receivers of this bit may have been put into
                                                 backpressure mode and can only be released by
                                                 IPD informing them that the backpressure has
                                                 been released.
						 GMXX_INF_MODE[EN] must be set to '1' for each
						 packet interface which requires BPID
						 prior to setting PBP_EN to '1'.
 <4>     WQE_LEND R/W      0           0         Changes WQE to little endian writes to L2C
 <5>     PKT_LEND R/W      0           0         Changes PKT to little endian writes to L2C
 <6>     NADDBUF  R/W      0           0         When IPD_CTL_STATUS[NADDBUF] is set,
                                                 IPD_BPID_BP_COUNTER@(BPID)[CNT_VAL],
                                                 WILL NOT be incremented when IPD allocates a
                                                 buffer for a packet on the BPID.
 <7>     ADDPKT   R/W      0           0         When IPD_CTL_STATUS[ADDPKT] is set,
                                                 IPD_BPID_BP_COUNTER@(BPID)[CNT_VAL],
                                                 WILL be incremented by one for every work
                                                 queue entry that is sent to POW.
 <8>     RESET    R/W      0           0         When set '1' causes a reset of the IPD, except
                                                 RSL.
 <9>     LEN_M8   R/W      0           1         Setting of this bit will subtract 8 from the
                                                 data-length field in the header written to the
                                                 POW and the top of a MBUFF.
                                                 OCTEAN generates a length that includes the
                                                 length of the data + 8 for the header-field. By
                                                 setting this bit the 8 for the instr-field will
                                                 not be included in the length field of the header.
						 NOTE: IPD is compliant with the spec when this
                                                 field is '1'.
<10>     PKT_OFF   R/W      0           0        When clear '0' the IPD working normaly,
						 buffering the received packet data. When set '1'
						 the IPD will not buffer the received packet data.
<11>     IPD_FULL  R/W      0           0        When clear '0' the IPD acts normaly.
						 When set '1' the IPD drive the IPD_BUFF_FULL line to
 						 the IOB-arbiter, telling it to not give grants to
						 NCB devices sending packet data.
<12>     PQ_NABUF  R/W      0           0        When set IPD_PORT_QOS_@_CNT WILL NOT be
                                                 incremented when IPD allocates a buffer for a
                                                 packet.
<13>     PQ_APKT   R/W      0           0        When set IPD_PORT_QOS_@_CNT WILL be incremented
                                                 by one for every work queue entry that is sent to
                                                 POW.
<14>     NO_WPTR   R/W      0           0        When set '1' the WQE pointers will not be used and
                                                 the WQE will be located at the front of the packet.
                                                 When set:
                                                   - IPD_WQE_FPA_QUEUE[WQE_QUE] is not used
                                                   - IPD_1ST_MBUFF_SKIP[SKIP_SZ] must be at least 16
                                                   - If 16 <= IPD_1ST_MBUFF_SKIP[SKIP_SZ] <= 31 then
                                                     the WQE will be written into the first 128B
                                                     cache block in the first buffer that contains
                                                     the packet.
                                                   - If IPD_1ST_MBUFF_SKIP[SKIP_SZ] == 32 then
                                                     the WQE will be written into the second 128B
                                                     cache block in the first buffer that contains
                                                     the packet.
 <15>    CLKEN    R/W       0           0        Controls the conditional clocking within IPD	    |
						  0=Allow HW to control the clocks		    |
						  1=Force the clocks to be always on		    |
 <16>    RST_DONE  RO       0x1         0        When '0' IPD has finished reset. No access         |
                                                 except the reading of this bit should occur to the |
                                                 IPD until this is asserted. Or a 1000 core clock   |
                                                 cycles has passed after the de-assertion of reset. |
 <17>    USE_SOP   R/W      0           0        When '1' the SOP sent by the MAC will be used in   |
                                                 place of the SOP generated by the IPD.             |
<63:18>  NS        RAZ      NS          NS       Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_WQE_FPA_QUEUE = IPD Work-Queue-Entry FPA Page Size
 *
 * Which FPA Queue (0-7) to fetch page-pointers from for WQE's
 *

     ==============================================================
     IPD_WQE_FPA_QUEUE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <2:0>   WQE_QUE  R/W      1           1         Which FPA Queue to fetch page-pointers
                                                 from for WQE's.
                                                 Not used when IPD_CTL_STATUS[NO_WPTR] is set.
 <63:3>  NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_SUB_PORT_BP_PAGE_CNT = IPD Subtract BPID Backpressure Page Count
 *
 * Will add the value to the indicated BPID count register, the number of pages supplied. The value added should
 * be the 2's complement of the value that needs to be subtracted. Users add 2's complement values to the
 * BPID-mbuf-count register to return (lower the count) mbufs to the counter in order to avoid BPID-level
 * backpressure being applied to the BPID. Backpressure is applied when the MBUF used count of a BPID exceeds the
 * value in the IPD_BPID@_MBUF_TH.
 *
 * This register can't be written from the PCI via a window write.
 *

     ==============================================================
     IPD_SUB_PORT_BP_PAGE_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <24:0>  PAGE_CNT R/W      NS          0         The number of page pointers to add to
                                                 the BPID counter pointed to by the
                                                 PORT Field.
 <30:25> PORT     R/W      NS          0         The BPID to add the PAGE_CNT field to.
 <63:31> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_1st_NEXT_PTR_BACK = IPD First Next Pointer Back Values
 *
 * Contains the Back Field for use in creating the Next Pointer Header for the First MBUF
 *

     ==============================================================
     IPD_1st_NEXT_PTR_BACK Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   BACK     R/W      0x0         0         Used to find head of buffer from the nxt-hdr-ptr.
 <63:4>  NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_2nd_NEXT_PTR_BACK = IPD Second Next Pointer Back Value
 *
 * Contains the Back Field for use in creating the Next Pointer Header for the First MBUF
 *

     ==============================================================
     IPD_2nd_NEXT_PTR_BACK Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   BACK     R/W      0x0         0         Used to find head of buffer from the nxt-hdr-ptr.
 <63:4>  NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_INTERRUPT_ENB = IPD Interrupt Enable Register
 *
 * Used to enable the various interrupting conditions of IPD
 *

     ==============================================================
     IPD_INT_ENB Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     PRC_PAR0 R/W      0x0         0         Enable parity error interrupts for bits
                                                 [31:0] of the PBM memory.
                                                 NOT USED ON o68.
 <1>     PRC_PAR1 R/W      0x0         0         Enable parity error interrupts for bits
                                                 [63:32] of the PBM memory.
                                                 NOT USED ON o68.
 <2>     PRC_PAR2 R/W      0x0         0         Enable parity error interrupts for bits
                                                 [95:64] of the PBM memory.
                                                 NOT USED ON o68.
 <3>     PRC_PAR3 R/W      0x0         0         Enable parity error interrupts for bits
                                                 [127:96] of the PBM memory.
                                                 NOT USED ON o68.
 <4>     BP_SUB   R/W      0x0         0         Enables interrupts when a backpressure subtract
                                                 has an illegal value.
 <5>     DC_OVR   R/W      0x0         0       	 Allows an interrupt to be sent when the
                                                 corresponding bit in the IPD_INT_SUM is set.
 <6>     CC_OVR   R/W      0x0         0         Allows an interrupt to be sent when the
                                                 corresponding bit in the IPD_INT_SUM is set.
 <7>     C_COLL   R/W      0x0         0         Allows an interrupt to be sent when the
                                                 corresponding bit in the IPD_INT_SUM is set.
 <8>     D_COLL   R/W      0x0         0         Allows an interrupt to be sent when the
                                                 corresponding bit in the IPD_INT_SUM is set.
 <9>     BC_OVR   R/W      0x0         0         Allows an interrupt to be sent when the
                                                 corresponding bit in the IPD_INT_SUM is set.
 <10>    PQ_ADD   R/W      0x0         0         Allows an interrupt to be sent when the
                                                 corresponding bit in the IPD_INT_SUM is set.
 <11>    PQ_SUB   R/W      0x0         0         Allows an interrupt to be sent when the
                                                 corresponding bit in the IPD_INT_SUM is set.
 <12>    SOP      R/W      0x0         0         Allows an interrupt to be sent when the
                                                 corresponding bit in the IPD_INT_SUM is set.
 <13>    EOP      R/W      0x0         0         Allows an interrupt to be sent when the
                                                 corresponding bit in the IPD_INT_SUM is set.
 <14>    DAT      R/W      0x0         0         Allows an interrupt to be sent when the
                                                 corresponding bit in the IPD_INT_SUM is set.
 <15>    PW0_SBE  R/W      0x0         0         Allows an interrupt to be sent when the
                                                 corresponding bit in the IPD_INT_SUM is set.
 <16>    PW0_DBE  R/W      0x0         0         Allows an interrupt to be sent when the
                                                 corresponding bit in the IPD_INT_SUM is set.
 <17>    PW1_SBE  R/W      0x0         0         Allows an interrupt to be sent when the
                                                 corresponding bit in the IPD_INT_SUM is set.
 <18>    PW1_DBE  R/W      0x0         0         Allows an interrupt to be sent when the
                                                 corresponding bit in the IPD_INT_SUM is set.
 <19>    PW2_SBE  R/W      0x0         0         Allows an interrupt to be sent when the
                                                 corresponding bit in the IPD_INT_SUM is set.
 <20>    PW2_DBE  R/W      0x0         0         Allows an interrupt to be sent when the
                                                 corresponding bit in the IPD_INT_SUM is set.
 <21>    PW3_SBE  R/W      0x0         0         Allows an interrupt to be sent when the
                                                 corresponding bit in the IPD_INT_SUM is set.
 <22>    PW3_DBE  R/W      0x0         0         Allows an interrupt to be sent when the
                                                 corresponding bit in the IPD_INT_SUM is set.
 <63:23> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_INTERRUPT_SUM = IPD Interrupt Summary Register
 *
 * Set when an interrupt condition occurs, write '1' to clear.
 *

     ==============================================================
     IPD_INT_SUM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     PRC_PAR0 R/W1C    0x0         0         Set when a parity error is dected for bits
                                                 [31:0] of the PBM memory.
                                                 NOT USED ON o68.
 <1>     PRC_PAR1 R/W1C    0x0         0         Set when a parity error is dected for bits
                                                 [63:32] of the PBM memory.
                                                 NOT USED ON o68.
 <2>     PRC_PAR2 R/W1C    0x0         0         Set when a parity error is dected for bits
                                                 [95:64] of the PBM memory.
                                                 NOT USED ON o68.
 <3>     PRC_PAR3 R/W1C    0x0         0         Set when a parity error is dected for bits
                                                 [127:96] of the PBM memory.
                                                 NOT USED ON o68.
 <4>     BP_SUB   R/W1C    0x0         0         Set when a backpressure subtract is done with a
                                                 supplied illegal value.
 <5>     DC_OVR   R/W1C    0x0         0         Set when the data credits to the IOB overflow.
 <6>     CC_OVR   R/W1C    0x0         0         Set when the command credits to the IOB overflow.
 <7>     C_COLL   R/W1C    0x0         0         Set when the packet/WQE commands to be sent to IOB
						 collides.
 <8>     D_COLL   R/W1C    0x0         0         Set when the packet/WQE data to be sent to IOB
						 collides.
 <9>     BC_OVR   R/W1C    0x0         0         Set when the byte-count to send to IOB overflows.
 <10>    PQ_ADD   R/W1C    0x0         0         Set when a BPID-qos does an add to the count
                                                 that causes the counter to wrap.
 <11>    PQ_SUB   R/W1C    0x0         0         Set when a BPID-qos does an sub to the count
                                                 that causes the counter to wrap.
 <12>    SOP      R/W1C     0           0        Set when a SOP is followed by an SOP for the same
                                                 reasm-id for a packet.
                                                 The first detected error associated with bits [14:12]
                                                 of this register will only be set here. A new bit
                                                 can be set when the previous reported bit is cleared.
						 Also see IPD_PKT_ERR.
 <13>    EOP      R/W1C     0           0        Set when a EOP is followed by an EOP for the same
                                                 reasm-id for a packet.
                                                 The first detected error associated with bits [14:12]
                                                 of this register will only be set here. A new bit
                                                 can be set when the previous reported bit is cleared.
						 Also see IPD_PKT_ERR.
 <14>    DAT     R/W1C      0           0        Set when a data arrives before a SOP for the same
                                                 reasm-id for a packet.
                                                 The first detected error associated with bits [14:12]
                                                 of this register will only be set here. A new bit
                                                 can be set when the previous reported bit is cleared.
						 Also see IPD_PKT_ERR.
 <15>    PW0_SBE R/W1C      0           0        Packet memory 0 had ECC SBE.
 <16>    PW0_DBE R/W1C      0           0        Packet memory 0 had ECC DBE.
 <17>    PW1_SBE R/W1C      0           0        Packet memory 1 had ECC SBE.
 <18>    PW1_DBE R/W1C      0           0        Packet memory 1 had ECC DBE.
 <19>    PW2_SBE R/W1C      0           0        Packet memory 2 had ECC SBE.
 <20>    PW2_DBE R/W1C      0           0        Packet memory 2 had ECC DBE.
 <21>    PW3_SBE R/W1C      0           0        Packet memory 3 had ECC SBE.
 <22>    PW3_DBE R/W1C      0           0        Packet memory 3 had ECC DBE.
 <63:23> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===


 *
 *                  IPD_QOS0_RED_MARKS = IPD QOS 0 Marks Red High Low
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_QOS0_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of
						 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
 <63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_QOS1_RED_MARKS = IPD QOS 1 Marks Red High Low
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_QOS1_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of
						 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
 <63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_QOS2_RED_MARKS = IPD QOS 2 Marks Red High Low
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_QOS2_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of
						 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
 <63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_QOS3_RED_MARKS = IPD QOS 3 Marks Red High Low
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_QOS3_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of
						 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
 <63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_QOS4_RED_MARKS = IPD QOS 4 Marks Red High Low
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_QOS4_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of
						 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
 <63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_QOS5_RED_MARKS = IPD QOS 5 Marks Red High Low
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_QOS5_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of
						 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
 <63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_QOS6_RED_MARKS = IPD QOS 6 Marks Red High Low
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_QOS6_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of
						 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
 <63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_QOS7_RED_MARKS = IPD QOS 7 Marks Red High Low
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_QOS7_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of
						 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
 <63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_RED_QUE0_PARAM = IPD RED Queue-0 Parameters
 *
 * Value control the Passing and Dropping of packets by the red engine for QOS Level-0.
 *

     ==============================================================
     IPD_RED_QUE0_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS0_RED_MARKS CSR.
 <39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present
                                                 Average Queue Size is used to calculate the new
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present
                                                 Actual Queue Size is used to calculate the new
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page
                                                 Count in place of the Average for RED calculations.
 <63:49> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_RED_QUE1_PARAM = IPD RED Queue-1 Parameters
 *
 * Value control the Passing and Dropping of packets by the red engine for QOS Level-1.
 *

     ==============================================================
     IPD_RED_QUE1_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS1_RED_MARKS CSR.
 <39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present
                                                 Average Queue Size is used to calculate the new
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present
                                                 Actual Queue Size is used to calculate the new
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page
                                                 Count in place of the Average for RED calculations.
 <63:49> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===
 *
 *                  IPD_RED_QUE2_PARAM = IPD RED Queue-2 Parameters
 *
 * Value control the Passing and Dropping of packets by the red engine for QOS Level-2.
 *

     ==============================================================
     IPD_RED_QUE2_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS2_RED_MARKS CSR.
 <39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present
                                                 Average Queue Size is used to calculate the new
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present
                                                 Actual Queue Size is used to calculate the new
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page
                                                 Count in place of the Average for RED calculations.
 <63:49> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===
 *
 *                  IPD_RED_QUE3_PARAM = IPD RED Queue-3 Parameters
 *
 * Value control the Passing and Dropping of packets by the red engine for QOS Level-3.
 *

     ==============================================================
     IPD_RED_QUE3_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS3_RED_MARKS CSR.
 <39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present
                                                 Average Queue Size is used to calculate the new
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present
                                                 Actual Queue Size is used to calculate the new
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page
                                                 Count in place of the Average for RED calculations.
 <63:49> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===
 *
 *                  IPD_RED_QUE4_PARAM = IPD RED Queue-4 Parameters
 *
 * Value control the Passing and Dropping of packets by the red engine for QOS Level-4.
 *

     ==============================================================
     IPD_RED_QUE4_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS4_RED_MARKS CSR.
 <39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present
                                                 Average Queue Size is used to calculate the new
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present
                                                 Actual Queue Size is used to calculate the new
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page
                                                 Count in place of the Average for RED calculations.
 <63:49> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===
 *
 *                  IPD_RED_QUE5_PARAM = IPD RED Queue-5 Parameters
 *
 * Value control the Passing and Dropping of packets by the red engine for QOS Level-5.
 *

     ==============================================================
     IPD_RED_QUE5_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS5_RED_MARKS CSR.
 <39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present
                                                 Average Queue Size is used to calculate the new
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present
                                                 Actual Queue Size is used to calculate the new
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page
                                                 Count in place of the Average for RED calculations.
 <63:49> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===
 *
 *                  IPD_RED_QUE6_PARAM = IPD RED Queue-6 Parameters
 *
 * Value control the Passing and Dropping of packets by the red engine for QOS Level-6.
 *

     ==============================================================
     IPD_RED_QUE6_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS6_RED_MARKS CSR.
 <39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present
                                                 Average Queue Size is used to calculate the new
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present
                                                 Actual Queue Size is used to calculate the new
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page
                                                 Count in place of the Average for RED calculations.
 <63:49> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===
 *
 *                  IPD_RED_QUE7_PARAM = IPD RED Queue-7 Parameters
 *
 * Value control the Passing and Dropping of packets by the red engine for QOS Level-7.
 *

     ==============================================================
     IPD_RED_QUE7_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS7_RED_MARKS CSR.
 <39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present
                                                 Average Queue Size is used to calculate the new
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present
                                                 Actual Queue Size is used to calculate the new
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page
                                                 Count in place of the Average for RED calculations.
 <63:49> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_PTR_COUNT = IPD Page Pointer Count
 *
 * Shows the number of WQE and Packet Page Pointers stored in the IPD.
 *

     ==============================================================
     IPD_PTR_COUNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <6:0>   WQE_PCNT RO       0x0         0         Number of page pointers for WQE storage that are
                                                 buffered in the IPD. The total count is the value
                                                 of this buffer plus the field [WQEV_CNT]. For
						 PASS-1 (which does not have the WQEV_CNT field)
						 when the value of this register is '0' there still
                                                 may be 1 pointer being held by IPD.
 <13:7>  PKT_PCNT RO       0x0         0         This value plus PFIF_CNT plus
	                                         IPD_PORT_PTR_FIFO_CTL[MAX_PKT] is the number
 						 of PKT Page Pointers in IPD.
 <16:14> PFIF_CNT RO       0x0         0         See PKT_PCNT.
 <17>    WQEV_CNT RO       0x0         0         WQE Ptr Valid. This value is '1' when a WQE
						 is being for use by the IPD. The value of this
						 field should be added to tha value of the
						 WQE_PCNT field, of this register, for a total
						 count of the WQE Page Pointers being held by IPD.
                                                 When IPD_CTL_STATUS[NO_WPTR] is set '1' this field
                                                 represents a Packet-Pointer NOT a WQE pointer.
 <18>    PKTV_CNT RO       0x0         0         PKT Ptr Valid.
 <63:19> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_QUE0_FREE_PAGE_CNT = IPD Queue0 Free Page Count
 *
 * Number of Free-Page Pointer that are available for use in the FPA for Queue-0.
 *

     ==============================================================
     IPD_QUE0_FREE_PAGE_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  Q0_PCNT  RO       0x0         0         Number of Queue-0 Page Pointers Available.
 <63:32> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_CLK_COUNT = IPD Clock Count
 *
 * Counts the number of core clocks periods since the de-asserition of reset.
 *

     ==============================================================
     IPD_CLK_COUNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  CLK_CNT  RO       0x0         0         This counter will be zeroed when reset is applied
                                                 and will increment every rising edge of the
			 			 core-clock.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_PKT_ERR = IPD Packet Error Register
 *
 * Provides status about the failing packet recevie error.
 *

     ==============================================================
     IPD_PKT_ERR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <5:0>   REASM    RO       0x0         NS        When IPD_INT_SUM[14:12] bit is set, this field
                                                 latches the failing reasm number associated with
                                                 the IPD_INT_SUM[14:12] bit set.
                                                 Values 0-62 can be seen here, reasm-id 63 is not
                                                 used.
 <63:6>  NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_FREE_PTR_FIFO_CTL = IPD's FREE Pointer FIFO Control
 *
 * Allows reading of the Page-Pointers stored in the IPD's FREE Fifo.
 * See also the IPD_FREE_PTR_VALUE
 *

     ==============================================================
     IPD_FREE_PTR_FIFO_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   RADDR    R/W      0x0         0         Sets the address to read from in the pwp_fifo.
                                                 Addresses 0 through 63 contain Packet-Pointers and
                                                 addresses 64 through 127 contain WQE-Pointers.
                                                 When IPD_CTL_STATUS[NO_WPTR] is set '1' addresses
                                                 64 through 127 are not valid.
 <8>     CENA     R/W      0x1         1         Active low Chip Enable to the read the
						 pwp_fifo. This bit also controls the MUX-select
                                                 that steers [RADDR] to the pwp_fifo.
						 *WARNING - Setting this field to '0' will allow
                                                 reading of the memories thorugh the PTR field,
						 but will cause unpredictable operation of the IPD
						 under normal operation.
 <16:9>  PRADDR   RO       NS          NS        Present FIFO Packet Read address.
 <24:17> WRADDR   RO       NS          NS        Present FIFO WQE Read address.
 <31:25> MAX_CNTS RO       0x40        0x40      Maximum number of Packet-Pointers or WQE-Pointers
                                                 that COULD be in the FIFO.
                                                 When IPD_CTL_STATUS[NO_WPTR] is set '1' this field
                                                 only represents the Max number of Packet-Pointers,
                                                 WQE-Pointers are not used in this mode.
 <63:32> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_FREE_PTR_VALUE = IPD's FREE Pointer Value
 *
 * The value of the pointer selected through the IPD_FREE_PTR_FIFO_CTL
 *

     ==============================================================
     IPD_FREE_PTR_VALUE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <32:0>  PTR      RO       NS          NS        The output of the pwp_fifo.
 <63:33> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_HOLD_PTR_FIFO_CTL = IPD's Holding Pointer FIFO Control
 *
 * Allows reading of the Page-Pointers stored in the IPD's Holding Fifo.
 *

     ==============================================================
     IPD_HOLD_PTR_FIFO_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <2:0>   RADDR    R/W      0x0         0         Sets the address to read from in the holding.
						 fifo in the IPD. This FIFO holds Packet-Pointers
                                                 to be used for packet data storage.
 <3>     CENA     R/W      0x1         1         Active low Chip Enable that controls the
						 MUX-select that steers [RADDR] to the fifo.
						 *WARNING - Setting this field to '0' will allow
                                                 reading of the memories thorugh the PTR field,
						 but will cause unpredictable operation of the IPD
						 under normal operation.
 <6:4>   PRADDR   RO       NS          NS        Present Packet-Pointer read address.
 <9:7>   MAX_PKT  RO       0x5         0x5       Maximum number of Packet-Pointers that COULD be
                                                 in the FIFO.
 <42:10> PTR      RO       NS          NS        The output of the holding-fifo.
 <63:43> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_PORT_PTR_FIFO_CTL = IPD's Reasm-Id Pointer FIFO Control
 *
 * Allows reading of the Page-Pointers stored in the IPD's Reasm-Id Fifo.
 *

     ==============================================================
     IPD_PORT_PTR_FIFO_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <6:0>   RADDR    R/W      0x0         0         Sets the address to read from in the reasm-id
						 fifo in the IPD. This FIFO holds Packet-Pointers
                                                 to be used for packet data storage.
 <7>     CENA     R/W      0x1         1         Active low Chip Enable to the read the
						 pwp_fifo. This bit also controls the MUX-select
                                                 that steers [RADDR] to the pwp_fifo.
						 *WARNING - Setting this field to '0' will allow
                                                 reading of the memories thorugh the PTR field,
						 but will cause unpredictable operation of the IPD
						 under normal operation.
 <14:8>  MAX_PKT  RO       0x40        0x40      Maximum number of Packet-Pointers that are in
                                                 in the FIFO.
 <47:15> PTR      RO       NS          NS        The output of the reasm-id-ptr-fifo.
 <63:48> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_NEXT_PKT_PTR = IPD's Next Packet Pointer
 *
 * The value of the packet-pointer fetched and in the valid register.
 *

     ==============================================================
     IPD_NEXT_PKT_PTR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <32:0>  PTR      RO       NS          NS        Pointer value.
 <63:33> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_NEXT_WQE_PTR = IPD's NEXT_WQE Pointer
 *
 * The value of the WQE-pointer fetched and in the valid register.
 *

     ==============================================================
     IPD_NEXT_WQE_PTR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <32:0>  PTR      RO       NS          NS        Pointer value.
                                                 When IPD_CTL_STATUS[NO_WPTR] is set '1' this field
                                                 represents a Packet-Pointer NOT a WQE pointer.
 <63:33> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===


 *
 *                  IPD_BIST_STATUS = IPD BIST STATUS
 *
 * BIST Status for IPD's Memories.
 *

     ==============================================================
     IPD_BIST_STATUS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     PWP      RO       0x0         0         PWP Memory Bist Status.
 <1>     IPD_NEW  RO       0x0         0         IPD_NEW Memory Bist Status.
 <2>     IPD_OLD  RO       0x0         0         IPD_OLD Memory Bist Status.
 <3>     PRC_OFF  RO       0x0         0         PRC_OFF Memory Bist Status.
 <4>     PWQ0     RO       0x0         0         PWQ0 Memory Bist Status.
 <5>     PWQ1     RO       0x0         0         PWQ1 Memory Bist Status.
 <6>     PBM_WORD RO       0x0         0         PBM_WORD Memory Bist Status.
 <7>     PBM0     RO       0x0         0         PBM0 Memory Bist Status.
 <8>     PBM1     RO       0x0         0         PBM1 Memory Bist Status.
 <9>     PBM2     RO       0x0         0         PBM2 Memory Bist Status.
 <10>    PBM3     RO       0x0         0         PBM3 Memory Bist Status.
 <11>    IPQ_PBE0 RO       0x0         0         IPQ PBE0 Memory Bist Status.
 <12>    IPQ_PBE1 RO       0x0         0         IPQ PBE1 Memory Bist Status.
 <13>    PWQ_POW  RO       0x0         0         PWQ POW MEM Memory Bist Status.
 <14>    PWQ_WP1  RO       0x0         0         PWQ WQE PAGE1 PTR Memory Bist Status.
 <15>    PWQ_WQED RO       0x0         0         PWQ PIP WQE DONE Memory Bist Status.
 <16>    CSR_NCMD RO       0x0         0         CSR NCB Commands Memory Bist Status.
 <17>    CSR_MEM  RO       0x0         0         CSR Register Memory Bist Status.
 <18>    PBM4     RO       0x0         0         PBM4Memory Bist Status.
 <19>    IIO0     RO       0x0         0         IPD IOB Dataout MEM0 Bist Status.
 <20>    IIO1     RO       0x0         0         IPD IOB Dataout MEM1 Bist Status.
 <21>    IIWO0    RO       0x0         0         IPD IOB WQE Dataout MEM0 Bist Status.
 <22>    IIWO1    RO       0x0         0         IPD IOB WQE Dataout MEM1 Bist Status.
 <63:23> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_SUB_PORT_QOS_CNT = IPD Subtract BPID QOS Count
 *
 * Will add the value (CNT) to the indicated BPID-QOS register (PORT_QOS). The value added must be
 * be the 2's complement of the value that needs to be subtracted.
 *
 *

     ==============================================================
     IPD_SUB_PORT_QOS_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  CNT      R/W      NS          0         The value to be added to the register selected
                                                 in the PORT_QOS field.
 <40:32> PORT_QOS R/W      NS          0         Selects which IPD_PORT_QOS_*_CNT[CNT] CSR field to
                                                 add the CNT field to. The low 3 bits of this field
                                                 select the QOS value, and the remaining upper bits
                                                 select the BPID value.
 <63:41> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_PORT_QOS_INT@ = IPD PORT-QOS Interrupt
 *
 * See the description for IPD_PORT_QOS_@_CNT
 *
 *
 *

     ==============================================================
     IPD_PORT_QOS_INT(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  INT       R/W1C   0           0         Interrupt bits.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_PORT_QOS_INT_ENB@ = IPD PORT-QOS Interrupt Enable
 *
 * When the IPD_PORT_QOS_INT@[#] is '1' and IPD_PORT_QOS_INT_ENB@[#] is '1' a interrupt will be generated.
 *
 *

     ==============================================================
     IPD_PORT_QOS_INT_ENB(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ENB      R/W      0           1         Enable bits.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_PORT_QOS_@_CNT = IPD BPID@ QOS-0 Count
 *
 * A counter per BPID/qos. Counter are originzed in sequence where the first 8 counter (0-7) belong to BPID-0
 * QOS 0-7 respectively followed by BPID 1 at (8-15), etc..
 *

     ==============================================================
     IPD_PORT_QOS_(0..511)_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  CNT      RO       0x0         NS        The packet related count that is incremented as    |
                                                  specified by IPD_SUB_PORT_QOS_CNT.                |
 <63:32> WMARK    R/W      0xFFFFFFFF  NS        When the field CNT after being modified is equal to|
                                                 or crosses this value (i.e. value was greater than |
                                                 then becomes less then, or value was less than and |
                                                 becomes greater than) the corresponding bit in     |
                                                 IPD_PORT_QOS_INT@ is set.                          |
----------------------------------------------------------------------------------------------------
===

// 0x2000 2FFF
 *
 *                  IPD_BPID@_MBUF_TH = IPD BPID  MBUFF Threshold
 *
 * The number of MBUFFs in use by the BPID, that when exceeded, backpressure will be applied to the BPID.
 *

     ==============================================================
     IPD_BPID(0..63)_MBUF_TH Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <16:0>  PAGE_CNT R/W      0x0         0         The number of page pointers assigned to
                                                 the BPID, that when exceeded will cause
                                                 back-pressure to be applied to the BPID.
                                                 This value is in 256 page-pointer increments,
                                                 (i.e. 0 = 0-page-ptrs, 1 = 256-page-ptrs,..)
 <17>    BP_ENB   R/W      0x0         0         When set '1' BP will be applied, if '0' BP will
                                                 not be applied to bpid.
 <63:18> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===
//
// RESERVE SPACE UPTO 0x2FFF
//


// 0x3000 0x3ffff
 *
 * IPD_BPID_BP_COUNTER@ = MBUF BPID Counters used to generate Back Pressure Per BPID.
 *

     ==============================================================
     IPD_BPID_BP_COUNTER(0..63) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:25> NS       RAZ      NS          NS        Reserved				            |
 <24:0>  CNT_VAL  RO       0x0         NS        Number of MBUFs being used by data on this BPID.   |
----------------------------------------------------------------------------------------------------
===
//
// RESERVE SPACE UPTO 0x3FFF
//

//
// RESERVED FOR FORMER IPD_SUB_PKIND_FCS - MOVED TO PIP

//
// RESERVE 4008 - 40FF
//
 *
 *                  IPD_ON_BP_DROP_PKT = IPD On Backpressure Drop Packet
 *
 * When IPD applies backpressure to a BPID and the corresponding bit in this register is set,
 * then previously received packets will be dropped when processed.
 *

     ==============================================================
     IPD_ON_BP_DROP_PKT(0..0) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  PRT_ENB  R/W      0x0         0         The BPID corresponding to the bit position in this
                                                 field will drop all NON-RAW packets to that BPID
                                                 when BPID level backpressure is applied to that
                                                 BPID.  The applying of BPID-level backpressure for
                                                 this dropping does not take into consideration the
                                                 value of IPD_BPID@_MBUF_TH[BP_ENB], nor
                                                 IPD_RED_BPID_ENABLE[PRT_ENB].
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_RED_BPID_ENABLE = IPD RED BPID Enable
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_RED_BPID_ENABLE(0..0) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  PRT_ENB  R/W      0x0         0         The bit position will enable the corresponding
                                                 BPIDs ability to have packets dropped by RED
                                     		 probability.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_RED_DELAY = IPD RED BPID Enable
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_RED_DELAY Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <13:0> AVG_DLY  R/W      0x0         NS        Number (core clocks periods + 10) * 8 to wait
                                                 before calculating the moving average for each
						 QOS level.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <27:14> PRB_DLY  R/W      0x0         0         Number (core clocks periods + 68) * 8 to wait
	                                         before calculating the new packet drop
						 probability for each QOS level.
 <63:28> NS       RAZ      NS          NS        Reserved				            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_PORT_SOP = IPD Reasm-Id SOP
 *
 * Set when a SOP is detected on a reasm-num. Where the reasm-num value set the bit vector of this register.
 *

     ==============================================================
     IPD_PORT_SOP(0..0) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  SOP      RO       0x0         NS        When set '1' a SOP was detected on a reasm-num,
                                                 When clear '0' no SOP was yet received or an EOP
                                                 was received on the reasm-num.
                                                 IPD only supports 63 reasm-nums, so bit [63]
                                                 should never be set.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_ECC_CTL = IPD ECC Control
 *
 * Allows inserting ECC errors for testing.
 *

     ==============================================================
     IPD_ECC_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>  PM0_SYN   R/W      0x0         0x0       Flip the syndrom to generate 1-bit/2-bits error
                                                 for testing of Packet Memory 0.
                                                  2'b00       : No Error Generation
                                                  2'b10, 2'b01: Flip 1 bit
                                                  2'b11       : Flip 2 bits
 <3:2>  PM1_SYN   R/W      0x0         0x0       Flip the syndrom to generate 1-bit/2-bits error
                                                 for testing of Packet Memory 1.
                                                  2'b00       : No Error Generation
                                                  2'b10, 2'b01: Flip 1 bit
                                                  2'b11       : Flip 2 bits
 <5:4>  PM2_SYN   R/W      0x0         0x0       Flip the syndrom to generate 1-bit/2-bits error
                                                 for testing of Packet Memory 2.
                                                  2'b00       : No Error Generation
                                                  2'b10, 2'b01: Flip 1 bit
                                                  2'b11       : Flip 2 bits
 <7:6>  PM3_SYN   R/W      0x0         0x0       Flip the syndrom to generate 1-bit/2-bits error
                                                 for testing of Packet Memory 3.
                                                  2'b00       : No Error Generation
                                                  2'b10, 2'b01: Flip 1 bit
                                                  2'b11       : Flip 2 bits
 <63:8> NS        RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===


 *
 *                  IPD_CREDITS = IPD Credits
 *
 * The credits allowed for IPD.
 *

     ==============================================================
     IPD_CREDITS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>  IOB_WR    R/W      0x8         0x8       The number of command credits the IPD has to send
                                                 stores to the IOB. Legal values for this field
                                                 are 1-8 (a value of 0 will be treated as a 1 and
                                                 a value greater than 8 will be treated as an 8.
 <15:8>  IOB_WRC   RO      0x8          NS       The present number of credits available for
                                                 stores to the IOB.
 <63:16> NS        RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===




 *
 *                  KEY_INT_SUM = KEY's Interrupt Summary Register
 *
 * Contains the diffrent interrupt summary bits of the KEY.
 *

     ==============================================================
     KEY_INT_SUM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     KED0_SBE R/W1C     0           0
 <1>     KED0_DBE R/W1C     0           0
 <2>     KED1_SBE R/W1C     0           0
 <3>     KED1_DBE R/W1C     0           0
 <63:4>  NS       RAZ       NS          NS       Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  KEY_INT_ENB = KEY's Interrupt Enable
 *
 * The KEY's interrupt enable register.
 *

     ==============================================================
     KEY_INT_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     KED0_SBE R/W      0           0         When set (1) and bit 0 of the KEY_INT_SUM
                                                 register is asserted the KEY will assert an
                                                 interrupt.
 <1>     KED0_DBE R/W      0           0         When set (1) and bit 1 of the KEY_INT_SUM
                                                 register is asserted the KEY will assert an
                                                 interrupt.
 <2>     KED1_SBE R/W      0           0         When set (1) and bit 2 of the KEY_INT_SUM
                                                 register is asserted the KEY will assert an
                                                 interrupt.
 <3>     KED1_DBE R/W      0           0         When set (1) and bit 3 of the KEY_INT_SUM
                                                 register is asserted the KEY will assert an
                                                 interrupt.
 <63:4>  NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  KEY_CTL_STATUS = KEY's Control/Status Register
 *
 * The KEY's interrupt enable register.
 *

     ==============================================================
     KEY_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <6:0>   MEM0_ERR R/W      0           0         Causes a flip of the ECC bit associated 38:32
                                                 respective to bit 6:0 of this field, for FPF
                                                 FIFO 0.
 <13:7>  MEM1_ERR R/W      0           0         Causes a flip of the ECC bit associated 38:32
                                                 respective to bit 13:7 of this field, for FPF
                                                 FIFO 1.
 <63:14> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===


 *
 *                  KEY_BIST_REG = KEY's BIST Status Register
 *
 * The KEY's BIST status for memories.
 *

     ==============================================================
     KEY_BIST_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     MEM0     RO       0           0         MEM - 0 bist status.
 <1>     MEM1     RO       0           0         MEM - 1 bist status.
 <2>     RRC      RO       0           0         RRC bist status.
 <63:3>  NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===



 *
 * L2C_CTL = L2C Control
 *

     ==============================================================
     L2C_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>      DISIDXALIAS   R/W    0      0        Index Alias Disable 				    |
 <1>      DISECC        R/W    0      0        Tag and Data ECC Disable				    |
 <5:2>    VAB_THRESH    R/W    0      0        VAB Threshold 				            |
                     	              	       When the number of valid VABs exceeds this number the|
                                               L2C increases the priority of all writes in the LMC. |
 <12:6>   EF_CNT        R/W    0      4        LMC early fill count                                 |
                                               Specifies the number of cycles after the first LMC   |
                                               fill cycle to wait before requesting a fill on the   |
					       RSC/RSD bus.                                         |
 	 		              	         // 7 dclks (we've received 1st out of 8 	    |
 			              	         // by the time we start counting)		    |
 	 		              	         ef_cnt = (7 * dclk0_period) / rclk_period;	    |
 	 		              	         // + 1 rclk if the dclk and rclk edges don't 	    |
 			              	         // stay in the same position			    |
 	 		              	         if ((dclk0_gen.period % rclk_gen.period) != 0)	    |
 	 		              	            ef_cnt = ef_cnt + 1;			    |
 	 		              	         // + 2 rclk synchronization uncertainty	    |
 	 		              	         ef_cnt = ef_cnt + 2;				    |
 	 		              	         // - 3 rclks to recognize first write              |
 	 		              	         ef_cnt = ef_cnt - 3;                    	    |
 	 		              	         // + 3 rclks to perform first write                |
 	 		              	         ef_cnt = ef_cnt + 3;                    	    |
 	 		              	         // - 9 rclks minimum latency from counter expire   |
 			              	         // to final fbf read				    |
 	 		              	         ef_cnt = ef_cnt - 9;                   	    |
 <13>     EF_ENA        R/W    0      1        LMC early fill enable                                |
 <14>     XMC_ARB_MODE  R/W    0      0        Arbitration mode for XMC QOS queues                  |
                                               == 0, fully determined through QOS		    |
                                               == 1, QOS0 highest priority, QOS1-7 use normal mode  |
 <15>     RSP_ARB_MODE  R/W    0      0        Arbitration mode for RSC/RSD bus                     |
                                               == 0, round-robin				    |
                                               == 1, static priority				    |
                                                   1. IOR data					    |
                                                   2. STIN/FILLs				    |
                                                   3. STDN/SCDN/SCFL				    |
 <19:16>  MAXLFB        R/W    0      0        Maximum LFBs in use at once                          |
                                                (0 means 16, 1-15 as expected)			    |
 <23:20>  MAXVAB        R/W    0      0        Maximum VABs in use at once                          |
                                                (0 means 16, 1-15 as expected)			    |
 <24>     DISCCLK       R/W    0      0        Disable conditional clocking in L2C PNR blocks       |
 <25>     L2DFDBE       R/W    0      0        Force double bit ECC error on PL2 allocates (2)      |
 <26>     L2DFSBE       R/W    0      0        Force single bit ECC error on PL2 allocates (2)      |
 <27>     DISSTGL2I     R/W    0      0        Disable STGL2I's from changing the tags              |
 <63:28>  NS            RAZ    NS     NS       RESERVED						    |

Notes:

(1) If MAXVAB is != 0, VAB_THRESH should be less than MAXVAB.

(2) L2DFDBE and L2DFSBE allows software to generate L2DSBE, L2DDBE, VBFSBE, and VBFDBE errors for
    the purposes of testing error handling code.  When one (or both) of these bits are set a PL2
    which misses in the L2 will fill with the appropriate error in the first 2 OWs of the fill.
    Software can determine which OW pair gets the error by choosing the desired fill order
    (address<6:5>).  A PL2 which hits in the L2 will not inject any errors.  Therefore sending a
    WBIL2 prior to the PL2 is recommended to make a miss likely (if multiple processors are involved
    software must be careful to be sure no other processor or IO device can bring the block into the
    L2).

    To generate a VBFSBE or VBFDBE, software must first get the cache block into the cache with an
    error using a PL2 which misses the L2.  Then a store partial to a portion of the cache block
    without the error must change the block to dirty.  Then, a subsequent WBL2/WBIL2/victim will
    trigger the VBFSBE/VBFDBE error.

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_QOS_WGT = L2C QOS weights
 *

     ==============================================================
     L2C_QOS_WGT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>    WGT0      	R/W    0xFF   0xFF     Weight for QOS level 0			    	    |
 <15:8>   WGT1      	R/W    0xFF   0xFF     Weight for QOS level 1			    	    |
 <23:16>  WGT2      	R/W    0xFF   0xFF     Weight for QOS level 2			    	    |
 <31:24>  WGT3      	R/W    0xFF   0xFF     Weight for QOS level 3			    	    |
 <39:32>  WGT4      	R/W    0xFF   0xFF     Weight for QOS level 4			    	    |
 <47:40>  WGT5      	R/W    0xFF   0xFF     Weight for QOS level 5			    	    |
 <55:48>  WGT6      	R/W    0xFF   0xFF     Weight for QOS level 6			    	    |
 <63:56>  WGT7      	R/W    0xFF   0xFF     Weight for QOS level 7			    	    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_VRT_CTL = L2C Virtualization control register
 *

     ==============================================================
     L2C_VRT_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>      ENABLE    	R/W    0      1        Global virtualization enable		            |
                                               When ENABLE is clear, stores are never blocked by    |
                                               the L2C virtualization hardware and none of NUMID,   |
                                               MEMSZ, OOBERR are used.                              |
 <3:1>    NUMID     	R/W    5      5        Number of allowed virtualization IDs (encoded)       |
                                                   0 = 2                                            |
                                                   1 = 4                                            |
                                                   2 = 8                                            |
                                                   3 = 16                                           |
                                                   4 = 32                                           |
                                                   5 = 64                                           |
                                                   6,7 illegal                                      |
                                               Violations of this limit causes                      |
                                               L2C to set L2C_INT_REG[VRTIDRNG].                    |
 <6:4>    MEMSZ     	R/W    5      5        Memory space coverage of L2C_VRT_MEM (encoded)	    |
                                                   0 = 1GB                                          |
                                                   1 = 2GB                                          |
                                                   2 = 4GB                                          |
                                                   3 = 8GB                                          |
                                                   4 = 16GB                                         |
                                                   5 = 32GB                                         |
                                                   6 = 64GB (**reserved in 63xx**)                  |
                                                   7 = 128GB (**reserved in 63xx**)                 |
 <7>      NS        	RAZ    NS     NS       RESERVED					    	    |
 <8>      OOBERR    	R/W    0      0        Whether out of bounds writes are an error            |
                                               Determines virtualization hardware behavior for      |
                                               a store to an L2/DRAM address larger than            |
                                               indicated by MEMSZ. If OOBERR is set, all these      |
                                               stores (from any virtualization ID) are blocked. If  |
                                               OOBERR is clear, none of these stores are blocked.   |
 <63:9>   NS        	RAZ    NS     NS       RESERVED					    	    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_INT_REG = L2C Interrupt Register
 *

     ==============================================================
     L2C_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>      HOLERD        R/W1C  0      0        Read reference to 256MB hole occurred          	    |
 <1>      HOLEWR        R/W1C  0      0        Write reference to 256MB hole occurred         	    |
 <2>      VRTWR         R/W1C  0      0        Virtualization ID prevented a write            	    |
                                               Set when L2C_VRT_MEM blocked a store.                |
 <3>      VRTIDRNG      R/W1C  0      0        Virtualization ID out of range                 	    |
                                               Set when a L2C_VRT_CTL[NUMID] violation blocked a    |
                                               store.                                               |
 <4>      VRTADRNG      R/W1C  0      0        Address outside of virtualization range        	    |
                                               Set when a L2C_VRT_CTL[MEMSZ] violation blocked a    |
                                               store.                                               |
                                               L2C_VRT_CTL[OOBERR] must be set for L2C to set this. |
 <5>      VRTPE         R/W1C  0      0        L2C_VRT_MEM read found a parity error          	    |
                                               Whenever an L2C_VRT_MEM read finds a parity error,   |
                                               that L2C_VRT_MEM cannot cause stores to be blocked.  |
                                               Software should correct the error.                   |
 <6>      BIGWR         R/W1C  0      0        Write reference past L2C_BIG_CTL[MAXDRAM] occurred   |
 <7>      BIGRD         R/W1C  0      0        Read reference past L2C_BIG_CTL[MAXDRAM] occurred    |
 <15:8>   NS        	RAZ    NS     NS       RESERVED					    	    |
 <16>     TAD0          RO     0      0        When set, the enabled interrupt is in                |
                                                  the L2C_TAD0_INT CSR                              |
 <17>     TAD1          RO     0      0        When set, the enabled interrupt is in                |
                                                  the L2C_TAD1_INT CSR                              |
 <18>     TAD2          RO     0      0        When set, the enabled interrupt is in                |
                                                  the L2C_TAD2_INT CSR                              |
 <19>     TAD3          RO     0      0        When set, the enabled interrupt is in                |
                                                  the L2C_TAD3_INT CSR                              |
 <63:20>  NS        	RAZ    NS     NS       RESERVED					    	    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_INT_ENA = L2C Interrupt Enable
 *

     ==============================================================
     L2C_INT_ENA Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>      HOLERD        R/W    0      1        Read reference to 256MB hole enable            	    |
 <1>      HOLEWR        R/W    0      1        Write reference to 256MB hole enable           	    |
 <2>      VRTWR         R/W    0      1        Virtualization ID prevented a write enable     	    |
 <3>      VRTIDRNG      R/W    0      1        Virtualization ID out of range enable          	    |
 <4>      VRTADRNG      R/W    0      1        Address outside of virtualization range enable 	    |
 <5>      VRTPE         R/W    0      1        Virtualization memory parity error             	    |
 <6>      BIGWR         R/W    0      1        Write reference past MAXDRAM enable            	    |
 <7>      BIGRD         R/W    0      1        Read reference past MAXDRAM enable           	    |
 <63:8>   NS        	RAZ    NS     NS       RESERVED					    	    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_XMC_CMD = L2C XMC command register
 *

     ==============================================================
     L2C_XMC_CMD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <37:0>   ADDR          R/W    NS     NS       Address to use for simulated XMC request (see Note 6)|
 <56:38>  NS        	RAZ    NS     NS       RESERVED					    	    |
 <62:57>  CMD           R/W    NS     NS       Command to use for simulated XMC request             |
                                               a new request can be accepted                        |
 <63>     INUSE         RO     0      0        Set to 1 by HW upon receiving a write, cleared when  |
                                               command has issued (not necessarily completed, but   |
                                               ordered relative to other traffic) and HW can accept |
                                               another command.                                     |

Notes:

(1) the XMC command chosen MUST NOT be a IOB destined command or operation is UNDEFINED.

(2) the XMC command will have sid forced to IOB, did forced to L2C, no virtualization checks
    performed (always pass), and xmdmsk forced to 0.  Note that this implies that commands which
    REQUIRE an XMD cycle (STP,STC,SAA,FAA,FAS) should not be used or the results are unpredictable.
    The sid=IOB means that the way partitioning used for the command is L2C_WPAR_IOB.
    None of L2C_QOS_IOB, L2C_QOS_PP, L2C_VIRTID_IOB, L2C_VIRTID_PP are used for these commands.

(3) PASS 1: operation is undefined if the XMC command generates a FILL response.  Generated STINs,
    however, will correctly invalidate the required PPs.

(3) PASS 2: any FILL responses generated by the XMC command will be ignored.  Generated STINs,
    however, will correctly invalidate the required PPs.

(4) any L2D read generated by the XMC command will record the syndrome information in
    L2C_TAD_ECC0/1.  If ECC is disabled prior to the CSR write this provides the ability to read the
    ECC bits directly.  If ECC is not disabled this should log 0's (assuming no ECC errors were
    found in the block).

(5) A write which arrives while the INUSE bit is set will block until the INUSE bit clears.  This
    gives software 2 options when needing to issue a stream of writes to L2C_XMC_CMD: polling on the
    INUSE bit, or allowing HW to handle the interlock -- at the expense of locking up the RSL bus
    for potentially tens of cycles at a time while waiting for an available LFB/VAB entry.

(6) The address written to L2C_XMC_CMD is a 38-bit OCTEON physical address.  L2C performs hole
    removal and index aliasing (if enabled) on the written address and uses that for the
    command. This hole removed/index aliased 38-bit address is what is returned on a read of the
    L2C_XMC_CMD register.

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_BIG_CTL = L2C Big memory control register
 *

     ==============================================================
     L2C_BIG_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>      DISABLE    	R/W    0      0        When set, disables the BIGWR/BIGRD logic completely  |
                                               and reverts HOLEWR to 63xx pass 1.x behavior.        |
                                               When clear, BIGWR and HOLEWR block stores in the same|
					       same manner as the VRT logic, and BIGRD is reported. |
 <3:1>    NS        	RAZ    NS     NS       RESERVED					    	    |
 <7:4>    MAXDRAM     	R/W    9      9        Amount of configured DRAM                            |
                                                   0 = reserved                                     |
                                                   1 = 512MB                                        |
                                                   2 = 1GB                                          |
                                                   3 = 2GB                                          |
                                                   4 = 4GB                                          |
                                                   5 = 8GB                                          |
                                                   6 = 16GB                                         |
                                                   7 = 32GB                                         |
                                                   8 = 64GB                                         |
                                                   9 = 128GB                                        |
                                                   10-15 reserved                                   |
                                               Violations of this limit causes                      |
                                               L2C to set L2C_INT_REG[BIGRD/BIGWR].                 |
 <63:8>   NS        	RAZ    NS     NS       RESERVED					    	    |

Notes:

(1) BIGRD interrupts can occur during normal operation as the PP's are allowed to prefetch to
    non-existent memory locations.  Therefore, BIGRD is for informational purposes only.

(2) When HOLEWR/BIGWR blocks a store L2C_VER_ID, L2C_VER_PP, L2C_VER_IOB, and L2C_VER_MSC will be
    loaded just like a store which is blocked by VRTWR.  Additionally, L2C_ERR_XMC will be loaded.

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_XMC_PFC = L2C XMC Performance Counter(s)
 *

     ==============================================================
     L2C_XMC(0..3)_PFC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_XMD_PFC = L2C XMD Performance Counter(s)
 *

     ==============================================================
     L2C_XMD(0..3)_PFC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_RSC_PFC = L2C RSC Performance Counter(s)
 *

     ==============================================================
     L2C_RSC(0..3)_PFC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_RSD_PFC = L2C RSD Performance Counter(s)
 *

     ==============================================================
     L2C_RSD(0..3)_PFC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_IOC_PFC = L2C IOC Performance Counter(s)
 *

     ==============================================================
     L2C_IOC(0..0)_PFC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_IOR_PFC = L2C IOR Performance Counter(s)
 *

     ==============================================================
     L2C_IOR(0..0)_PFC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |
----------------------------------------------------------------------------------------------------
===


 *
 *                  L2C_WPAR_PP = L2C PP way partitioning
 *

     ==============================================================
     L2C_WPAR_PP(0..31) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>   MASK     R/W      0           0         Way partitioning mask. (1 means do not use)	    |
<63:16>  NS       RAZ      NS          NS        RESERVED					    |

Notes:

(1) The read value of MASK will include bits set because of the L2C cripple fuses.

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_WPAR_IOB = L2C IOB way partitioning
 *

     ==============================================================
     L2C_WPAR_IOB(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>   MASK     R/W      0           0         Way partitioning mask. (1 means do not use)	    |
<63:16>  NS       RAZ      NS          NS        RESERVED					    |

Notes:

(1) The read value of MASK will include bits set because of the L2C cripple fuses.

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_QOS_PP = L2C PP QOS level
 *
 * Description:
 *

     ==============================================================
     L2C_QOS_PP(0..31) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<2:0>    LVL      R/W      0           0         QOS level to use for this PP.                      |
<63:3>   NS       RAZ      NS          NS        RESERVED					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_QOS_IOB = L2C IOB QOS level
 *
 * Description:
 *

     ==============================================================
     L2C_QOS_IOB(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<2:0>    LVL      R/W      0           0         QOS level for non-DWB commands.                    |
<3>      NS       RAZ      NS          NS        RESERVED					    |
<6:4>    DWBLVL   R/W      0           0         QOS level for DWB commands.                        |
<63:7>   NS       RAZ      NS          NS        RESERVED					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_VIRTID_PP = L2C PP virtualization ID
 *
 * Description:
 *

     ==============================================================
     L2C_VIRTID_PP(0..31) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    ID       R/W      0           0         Virtualization ID to use for this PP.              |
<63:6>   NS       RAZ      NS          NS        RESERVED					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_VIRTID_IOB = L2C IOB virtualization ID
 *
 * Description:
 *

     ==============================================================
     L2C_VIRTID_IOB(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    ID       R/W      0           0         Virtualization ID to use for non-DWB commands      |
<7:6>    NS       RAZ      NS          NS        RESERVED					    |
<13:8>   DWBID    R/W      0           0         Virtualization ID to use for DWB commands          |
<63:14>  NS       RAZ      NS          NS        RESERVED					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_VRT_MEM = L2C Virtualization Memory
 *
 * Description: Virtualization memory mapped region.  There are 1024 32b
 * byte-parity protected entries.
 *

     ==============================================================
     L2C_VRT_MEM(0..1023) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>   DATA     R/W      0           0         Data to write into (or read from) the              |
                                                 virtualization memory.				    |
<35:32>  PARITY   R/W      0           0         Parity to write into (or read from) the            |
                                                 virtualization memory.				    |
                                                 PARITY<i> is the even parity of DATA<(i*8)+7:i*8>  |
<63:36>  NS       RAZ      NS          NS        RESERVED					    |

Notes:

When a DATA bit is set in L2C_VRT_MEM when L2C virtualization is enabled, L2C
prevents the selected virtual machine from storing to the selected L2/DRAM region.
L2C uses L2C_VRT_MEM to block stores when:
 - L2C_VRT_CTL[ENABLE] is set, and
 - the address of the store exists in L2C+LMC internal L2/DRAM Address space
   and is within the L2C_VRT_CTL[MEMSZ] bounds, and
 - the virtID of the store is within the L2C_VRT_CTL[NUMID] bounds

L2C_VRT_MEM is never used for these L2C transactions which are always allowed:
  - L2C CMI L2/DRAM transactions that cannot modify L2/DRAM, and
  - any L2/DRAM transaction originated from L2C_XMC_CMD

L2C_VRT_MEM contains one DATA bit per L2C+LMC internal L2/DRAM region and virtID indicating whether the store
to the region is allowed. The granularity of the checking is the region size, which is:
      2 ^^ (L2C_VRT_CTL[NUMID]+L2C_VRT_CTL[MEMSZ]+16)
which ranges from a minimum of 64KB to a maximum of 256MB, depending on the size
of L2/DRAM that is protected and the number of virtual machines.

The L2C_VRT_MEM DATA bit that L2C uses is:

  l2c_vrt_mem_bit_index = address >> (L2C_VRT_CTL[MEMSZ]+L2C_VRT_CTL[NUMID]+16); // address is a byte address
  l2c_vrt_mem_bit_index = l2c_vrt_mem_bit_index | (virtID << (14-L2C_VRT_CTL[NUMID]));

  L2C_VRT_MEM(l2c_vrt_mem_bit_index >> 5)[DATA<l2c_vrt_mem_bit_index & 0x1F>] is used

A specific example:

  L2C_VRT_CTL[NUMID]=2 (i.e. 8 virtual machine ID's used)
  L2C_VRT_CTL[MEMSZ]=4 (i.e. L2C_VRT_MEM covers 16 GB)

  L2/DRAM region size (granularity) is 4MB

  l2c_vrt_mem_bit_index<14:12> = virtID<2:0>
  l2c_vrt_mem_bit_index<11:0> = address<33:22>

  For L2/DRAM physical address 0x51000000 with virtID=5:
     L2C_VRT_MEM648[DATA<4>] determines when the store is allowed (648 is decimal, not hex)

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_COP0_MAP = PP COP0 register memory mapped region
 *
 * Description: PP COP0 register mapped region.
 *
 * NOTE: for 63xx, if the PPID is outside the range of 0-5,63 the write will be ignored and reads
 * will return 0x2bad2bad2bad2bad
 *

     ==============================================================
     L2C_COP0_MAP(0..8191,16128..16383) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   DATA          R/W    NS     NS       Data to write to/read from designated PP's COP0      |
                                               register.                                            |

Notes:

(1) There are 256 COP0 registers per PP.  Registers 0-255 map to PP0's COP0 registers, 256-511 are
    mapped to PP1's, etc.  A special set @ PP63 (registers 16128-16383) are for broadcast writes.
    Any write done to these registers will take effect in ALL PPs.  Note the means the L2C_COP0_MAP
    register to access can be gotten by:

        REGNUM = { PPID[5:0], rd[4:0], sel[2:0] }

    where rd and sel are as defined in the HRM description of Core Coprocessor 0 registers
    and note 4 below.

(2) if a COP0 register cannot be accessed by this mechanism the write be silently ignored and the
    read data will be 0xBADDEED.

(3) for 63xx, if the PPID is outside the range of 0-5,63 or if the PP in question is in reset a
    write will be ignored and reads will timeout the RSL bus.

(4) Referring to note (1) above, the following rd/sel values are supported:

    NOTE: Put only the "Customer type" in HRM. do not put the "Real type" in HRM.

                   Customer                                                    Real
       rd     sel     type         Description                                 type
    ======+=======+==========+==============================================+=========
       4      2       RO          COP0 UserLocal                                RW
       7      0       RO          COP0 HWREna                                   RW
       9      0       RO          COP0 Count                                    RW
       9      6       RO          COP0 CvmCount                                 RW
       9      7       RO          COP0 CvmCtl                                   RW
      11      0       RO          COP0 Compare                                  RW
      11      6       RW          COP0 PowThrottle                              RW
      12      0       RO          COP0 Status                                   RW
      12      1       RO          COP0 IntCtl                                   RO
      12      2       RO          COP0 SRSCtl                                   RO
      13      0       RO          COP0 Cause                                    RW
      14      0       RO          COP0 EPC                                      RW
      15      0       RO          COP0 PrID                                     RO
      15      1       RO          COP0 EBase                                    RW
      16      0       RO          PC Issue Debug Info (see details below)       RO
      16      1       RO          PC Fetch Debug Info (see details below)       RO
      16      2       RO          PC Fill Debug Info (see details below)        RO
      16      3       RO          PC Misc Debug Info (see details below)        RO
      18      0       RO          COP0 WatchLo0                                 RW
      19      0       RO          COP0 WatchHi0                                 RW
      22      0       RO          COP0 MultiCoreDebug                           RW
      22      1                   COP0 VoltageMonitor                           RW
      23      0       RO          COP0 Debug                                    RW
      23      6       RO          COP0 Debug2                                   RO
      24      0       RO          COP0 DEPC                                     RW
      25      0       RO          COP0 PerfCnt Control0                         RW
      25      1       RO          COP0 PerfCnt Counter0                         RW
      25      2       RO          COP0 PerfCnt Control1                         RW
      25      3       RO          COP0 PerfCnt Counter1                         RW
      27      0       RO          COP0 CacheErr (icache)                        RW
      28      0       RO          COP0 TagLo (icache)                           RW
      28      1       RO          COP0 DataLo (icache)                          RW
      29      1       RO          COP0 DataHi (icache)                          RW
      30      0       RO          COP0 ErrorEPC                                 RW
      31      0       RO          COP0 DESAVE                                   RW
      31      2       RO          COP0 Scratch                                  RW
      31      3       RO          COP0 Scratch1                                 RW
      31      4       RO          COP0 Scratch2                                 RW

    - PC Issue Debug Info

      63:2 pc0_5a<63:2> // often VA<63:2> of the next instruction to issue
                          //    but can also be the VA of an instruction executing/replaying on pipe 0
                          //    or can also be a VA being filled into the instruction cache
                          //    or can also be unpredictable
                          // <61:49> RAZ
      1    illegal      // set when illegal VA
      0    delayslot    // set when VA is delayslot (prior branch may be either taken or not taken)

    - PC Fetch Debug Info

      63:0 fetch_address_3a // VA being fetched from the instruction cache
                              // <61:49>, <1:0> RAZ

    - PC Fill Debug Info

      63:0 fill_address_4a<63:2> // VA<63:2> being filled into instruction cache
                                   // valid when waiting_for_ifill_4a is set (see PC Misc Debug Info below)
                                   // <61:49> RAZ
         1 illegal               // set when illegal VA
         0 RAZ

    - PC Misc Debug Info

      63:3 RAZ
         2 mem_stall_3a         // stall term from L1 memory system
         1 waiting_for_pfill_4a // when waiting_for_ifill_4a is set, indicates whether instruction cache fill is due to a prefetch
         0 waiting_for_ifill_4a // set when there is an outstanding instruction cache fill

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_TAD_IEN = L2C TAD Interrupt Enable
 *

     ==============================================================
     L2C_TAD(0..3)_IEN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>      L2DSBE        R/W    0      1        L2D Single-Bit Error enable                          |
                                                Enables L2C_ERR_TDT@[SBE]/L2C_TAD@_INT[L2DSBE] to   |
                                                assert L2C_INT_REG[TAD@] (and cause an interrupt)   |
 <1>      L2DDBE        R/W    0      1        L2D Double-Bit Error enable                          |
                                                Enables L2C_ERR_TDT@[DBE]/L2C_TAD@_INT[L2DDBE] to   |
                                                assert L2C_INT_REG[TAD@] (and cause an interrupt)   |
 <2>      TAGSBE        R/W    0      1        TAG Single-Bit Error enable                          |
                                                Enables L2C_ERR_TTG@[SBE]/L2C_TAD@_INT[TAGSBE] to   |
                                                assert L2C_INT_REG[TAD@] (and cause an interrupt)   |
 <3>      TAGDBE        R/W    0      1        TAG Double-Bit Error enable                          |
                                                Enables L2C_ERR_TTG@[DBE]/L2C_TAD@_INT[TAGDBE] to   |
                                                assert L2C_INT_REG[TAD@] (and cause an interrupt)   |
 <4>      VBFSBE        R/W    0      1        VBF Single-Bit Error enable                          |
                                                Enables L2C_ERR_TDT@[VSBE]/L2C_TAD@_INT[VBFSBE] to  |
                                                assert L2C_INT_REG[TAD@] (and cause an interrupt)   |
 <5>      VBFDBE        R/W    0      1        VBF Double-Bit Error enable                          |
                                                Enables L2C_ERR_TDT@[VDBE]/L2C_TAD@_INT[VBFSBE] to  |
                                                assert L2C_INT_REG[TAD@] (and cause an interrupt)   |
 <6>      NOWAY         R/W    0      0        No way available interrupt enable                    |
                                                Enables L2C_ERR_TTG@[NOWAY]/L2C_TAD@_INT[NOWAY] to  |
                                                assert L2C_INT_REG[TAD@] (and cause an interrupt)   |
 <7>      RDDISLMC      R/W    0      1        Illegal Read  to Disabled LMC Error enable           |
                                                Enables L2C_TAD@_INT[RDDISLMC] to                   |
                                                assert L2C_INT_REG[TAD@] (and cause an interrupt)   |
 <8>      WRDISLMC      R/W    0      1        Illegal Write to Disabled LMC Error enable           |
                                                Enables L2C_TAD@_INT[WRDISLMC] to                   |
                                                assert L2C_INT_REG[TAD@] (and cause an interrupt)   |
 <63:9>   NS            RAZ    NS     NS       RESERVED                                             |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_TAD_PRF = L2C TAD Performance Counter Control
 *

     ==============================================================
     L2C_TAD(0..3)_PRF Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>    CNT0SEL       R/W    0      1        Selects event to count for L2C_TAD_PFC0        	    |
 <15:8>   CNT1SEL       R/W    0      1        Selects event to count for L2C_TAD_PFC1        	    |
 <23:16>  CNT2SEL       R/W    0      1        Selects event to count for L2C_TAD_PFC2        	    |
 <31:24>  CNT3SEL       R/W    0      1        Selects event to count for L2C_TAD_PFC3        	    |
 <63:32>  NS        	RAZ    NS     NS       RESERVED					    	    |

Notes:

(1) All four counters are equivalent and can use any of the defined selects.

(2) the CNTnSEL legal values are:
        0x00 -- Nothing (disabled)
	0x01 -- L2 Tag Hit
	0x02 -- L2 Tag Miss
	0x03 -- L2 Tag NoAlloc (forced no-allocate)
	0x04 -- L2 Victim
        0x05 -- SC Fail
        0x06 -- SC Pass
	0x07 -- LFB Occupancy (each cycle adds # of LFBs valid)
	0x08 -- LFB Wait LFB (each cycle adds # LFBs waiting for other LFBs)
	0x09 -- LFB Wait VAB (each cycle adds # LFBs waiting for VAB)
	0x80 -- Quad 0 index bus inuse
	0x81 -- Quad 0 read data bus inuse
        0x82 -- Quad 0 # banks inuse (0-4/cycle)
	0x83 -- Quad 0 wdat flops inuse (0-4/cycle)
	0x90 -- Quad 1 index bus inuse
	0x91 -- Quad 1 read data bus inuse
        0x92 -- Quad 1 # banks inuse (0-4/cycle)
	0x93 -- Quad 1 wdat flops inuse (0-4/cycle)
	0xA0 -- Quad 2 index bus inuse
	0xA1 -- Quad 2 read data bus inuse
        0xA2 -- Quad 2 # banks inuse (0-4/cycle)
	0xA3 -- Quad 2 wdat flops inuse (0-4/cycle)
	0xB0 -- Quad 3 index bus inuse
	0xB1 -- Quad 3 read data bus inuse
        0xB2 -- Quad 3 # banks inuse (0-4/cycle)
	0xB3 -- Quad 3 wdat flops inuse (0-4/cycle)

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_TAD_TAG = L2C tag data
 *
 * Description: holds the tag information for LTGL2I and STGL2I commands
 *

     ==============================================================
     L2C_TAD(0..3)_TAG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      LOCK     R/W      0           0	 The lock bit                                       |
<1>      DIRTY    R/W      0           0         The dirty bit                                      |
<2>      VALID    R/W      0           0         The valid bit                                      |
<3>      USE      R/W      0           0	 The LRU use bit                                    |
<16:4>   NS       RAZ      NS          NS        RESERVED					    |
<35:17>  TAG      R/W      0           0         The tag (see notes 1 and 3)                        |
<39:36>  NS       RAZ      NS          NS        RESERVED					    |
<45:40>  ECC      R/W      0           NS        The tag ECC (see note 4)			    |
<63:46>  NS       RAZ      NS          NS        RESERVED					    |

Notes:

(1) For 63xx TAG[35] must be written zero for STGL2I's or operation is undefined.  During normal
    operation, TAG[35] will also read 0.

(2) If setting the LOCK bit, the USE bit should also be set or operation is undefined.

(3) The tag is the corresponding bits from the L2C+LMC internal L2/DRAM byte address.

(4) The ECC field is undefined if L2C_CTL[DISECC] is not 1 when the LTGL2I reads the tags.

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_TAD_ECC0 = L2C ECC logging
 *
 * Description: holds the syndromes for a L2D read generated from L2C_XMC_CMD
 *

     ==============================================================
     L2C_TAD(0..3)_ECC0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<9:0>    OW0ECC   RO       0           NS        ECC for OW0 of cache block                         |
<15:10>  NS       RAZ      NS          NS        RESERVED					    |
<25:16>  OW1ECC   RO       0           NS        ECC for OW1 of cache block                         |
<31:26>  NS       RAZ      NS          NS        RESERVED					    |
<41:32>  OW2ECC   RO       0           NS        ECC for OW2 of cache block                         |
<47:42>  NS       RAZ      NS          NS        RESERVED					    |
<57:48>  OW3ECC   RO       0           NS        ECC for OW3 of cache block                         |
<63:58>  NS       RAZ      NS          NS        RESERVED					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_TAD_ECC1 = L2C ECC logging
 *
 * Description: holds the syndromes for a L2D read generated from L2C_XMC_CMD
 *

     ==============================================================
     L2C_TAD(0..3)_ECC1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<9:0>    OW4ECC   RO       0           NS        ECC for OW4 of cache block                         |
<15:10>  NS       RAZ      NS          NS        RESERVED					    |
<25:16>  OW5ECC   RO       0           NS        ECC for OW5 of cache block                         |
<31:26>  NS       RAZ      NS          NS        RESERVED					    |
<41:32>  OW6ECC   RO       0           NS        ECC for OW6 of cache block                         |
<47:42>  NS       RAZ      NS          NS        RESERVED					    |
<57:48>  OW7ECC   RO       0           NS        ECC for OW7 of cache block                         |
<63:58>  NS       RAZ      NS          NS        RESERVED					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_TAD_INT = L2C TAD Interrupt Register (not present in pass 1 O63)
 *

     ==============================================================
     L2C_TAD(0..3)_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>      L2DSBE        R/W1C  0      1        L2D Single-Bit Error                                 |
                                                Shadow copy of L2C_ERR_TDT@[SBE]                    |
                                                Writes of 1 also clear L2C_ERR_TDT@[SBE]            |
 <1>      L2DDBE        R/W1C  0      1        L2D Double-Bit Error                                 |
                                                Shadow copy of L2C_ERR_TDT@[DBE]                    |
                                                Writes of 1 also clear L2C_ERR_TDT@[DBE]            |
 <2>      TAGSBE        R/W1C  0      1        TAG Single-Bit Error                                 |
                                                Shadow copy of L2C_ERR_TTG@[SBE]                    |
                                                Writes of 1 also clear L2C_ERR_TTG@[SBE]            |
 <3>      TAGDBE        R/W1C  0      1        TAG Double-Bit Error                                 |
                                                Shadow copy of L2C_ERR_TTG@[DBE]                    |
                                                Writes of 1 also clear L2C_ERR_TTG@[DBE]            |
 <4>      VBFSBE        R/W1C  0      1        VBF Single-Bit Error                                 |
                                                Shadow copy of L2C_ERR_TDT@[VSBE]                   |
                                                Writes of 1 also clear L2C_ERR_TDT@[VSBE]           |
 <5>      VBFDBE        R/W1C  0      1        VBF Double-Bit Error                                 |
                                                Shadow copy of L2C_ERR_TDT@[VDBE]                   |
                                                Writes of 1 also clear L2C_ERR_TDT@[VDBE]           |
 <6>      NOWAY         R/W1C  0      0        No way available interrupt                           |
                                                Shadow copy of L2C_ERR_TTG@[NOWAY]                  |
                                                Writes of 1 also clear L2C_ERR_TTG@[NOWAY]          |
 <7>      RDDISLMC      R/W1C  0      0        Illegal Read  to Disabled LMC Error                  |
                                                A DRAM read  arrived before the LMC(s) were enabled |
 <8>      WRDISLMC      R/W1C  0      0        Illegal Write to Disabled LMC Error                  |
                                                A DRAM write arrived before the LMC(s) were enabled |
 <63:9>   NS            RAZ    NS     NS       RESERVED                                             |
Notes:                                                                                              |
 L2C_TAD_IEN is the interrupt enable register corresponding to this register.                       |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_TAD_PFC0 = L2C TAD Performance Counter 0
 *

     ==============================================================
     L2C_TAD(0..3)_PFC0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_TAD_PFC1 = L2C TAD Performance Counter 1
 *

     ==============================================================
     L2C_TAD(0..3)_PFC1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_TAD_PFC2 = L2C TAD Performance Counter 2
 *

     ==============================================================
     L2C_TAD(0..3)_PFC2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_TAD_PFC3 = L2C TAD Performance Counter 3
 *

     ==============================================================
     L2C_TAD(0..3)_PFC3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_DUT_MAP = L2C DUT memory map region
 *
 * Description: Address of the start of the region mapped to the duplicate tag.  Can be used to read
 * and write the raw duplicate tag CAM.  Writes should be used only with great care as they can easily
 * destroy the coherency of the memory system.  In any case this region is expected to only be used
 * for debug.
 *
 * This base address should be combined with PP virtual ID, L1 way and L1 set to produce the final
 * address as follows:
 *     addr<63:14>      L2C_DUT_MAP<63:16>
 *     addr<15:11>      PP VID
 *     addr<10:6>       L1 way
 *     addr<5:3>	L1 set
 *     addr<2:0>	UNUSED
 *

     ==============================================================
     L2C_DUT_MAP(0..8191) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      VALID    R/W      0           0	 The valid bit                                      |
<9:1>    NS       RAZ      NS          NS        RESERVED					    |
<37:10>  TAG      R/W      0           0         The tag value (see Note 1)                         |
<63:38>  NS       RAZ      NS          NS        RESERVED					    |

Notes:

(1) The tag is 37:10 from the 38-bit OCTEON physical address after hole removal. (The hole is between DR0
    and DR1. Remove the hole by subtracting 256MB from 38-bit OCTEON L2/DRAM physical addresses >= 512 MB.)

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_BST = L2C BIST Status
 *

     ==============================================================
     L2C_BST Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>    TDFFL      	RO     NS     0        BIST failure status for TDF0-3		    	    |
 <7:4>    VRTFL      	RO     NS     0        BIST failure status for VRT0-3		    	    |
 <11:8>   DUTRESFL     	RO     NS     0        BIST failure status for DUTRES0-3    		    |
 <15:12>  IOCDATFL     	RO     NS     0        BIST failure status for IOCDAT0-3	    	    |
 <19:16>  IOCCMDFL     	RO     NS     0        BIST failure status for IOCCMD0-3	    	    |
 <23:20>  TDPFL        	RO     NS     0        BIST failure status for TDP0-3		    	    |
 <27:24>  XBFFL     	RO     NS     0        BIST failure status for XBF0-3		    	    |
 <31:28>  RBFFL     	RO     NS     0        BIST failure status for RBF0-3		    	    |
 <63:32>  DUTFL         RO     NS     0        BIST failure status for PP0-31 DUT                   |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_BST_TDT = L2C TAD DaTa BIST Status
 *

     ==============================================================
     L2C_BST_TDT(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>    L2DFL      	RO     NS     0        BIST failure status for quad 0-7 L2D	    	    |
 <15:8>   FBFFL      	RO     NS     0        BIST failure status for quad 0-7 FBF WRP read port   |
 <23:16>  SBFFL      	RO     NS     0        BIST failure status for quad 0-7 SBF	    	    |
 <31:24>  FBFRSPFL     	RO     NS     0        BIST failure status for quad 0-7 FBF RSP read port   |
 <63:32>  NS        	RAZ    NS     NS       RESERVED					    	    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_BST_TTG = L2C TAD TaG BIST Status
 *

     ==============================================================
     L2C_BST_TTG(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>   TAGFL      	RO     NS     0        BIST failure status for tag ways 0-15	    	    |
 <16>     LRUFL      	RO     NS     0        BIST failure status for tag LRU     	    	    |
 <63:17>  NS        	RAZ    NS     NS       RESERVED					    	    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_BST_MEM = L2C MEM BIST Status
 *

     ==============================================================
     L2C_BST_MEM(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>    VBFFL      	RO     NS     0        BIST failure status for VBF0-3      	    	    |
 <4>      RDFFL      	RO     NS     0        BIST failure status for RDF         	    	    |
 <61:5>   NS        	RAZ    NS     NS       RESERVED					    	    |
 <62>     CLEAR_BIST    R/W    0      0        When BIST is triggered, run clear BIST (see Note)    |
 <63>     START_BIST    R/W    0      0        When written to 1, starts BIST.  Will read 1 until   |
                                               BIST is complete (see Note).                         |

Notes:

(1) CLEAR_BIST must be written to 1 before START_BIST is written to 1 using a separate CSR write.

(2) CLEAR_BIST must not be changed after writing START_BIST to 1 until the BIST operation completes
    (indicated by START_BIST returning to 0) or operation is undefined.

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_VER_MSC = L2C Virtualization Miscellaneous Error Register (not in 63xx pass 1.x)
 *
 * Description: records type of command associated with HOLEWR/BIGWR/VRTWR/VRTIDRNG/VRTADRNG interrupts
 *

     ==============================================================
     L2C_VER_MSC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>      DWB           R/W1C  0      0        If set, a DWB caused HOLEWR/BIGWR/VRT* to set        |
 <1>      INVL2         R/W1C  0      0        If set, a INVL2 caused HOLEWR/BIGWR/VRT* to set      |
 <63:2>   NS        	RAZ    NS     NS       RESERVED					    	    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_ERR_XMC = L2C XMC request error
 *
 * Description: records error information for HOLE*, BIG* and VRT* interrupts.
 *

     ==============================================================
     L2C_ERR_XMC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <37:0>   ADDR          RO     0      NS       XMC address causing the error (see Notes 2 and 3)    |
 <47:38>  NS        	RAZ    NS     NS       RESERVED					    	    |
 <53:48>  SID      	RO     0      NS       XMC sid of request causing error          	    |
 <57:54>  NS        	RAZ    NS     NS       RESERVED					    	    |
 <63:58>  CMD       	RO     0      NS       XMC command or request causing error    	            |

Notes:

(1) The first BIGWR/HOLEWR/VRT* interrupt will lock the register until L2C_INT_REG[6:1] are
    cleared.

(2) ADDR<15:0> will always be zero for VRT* interrupts.

(3) ADDR is the 38-bit OCTEON physical address after hole removal. (The hole is between DR0
    and DR1. Remove the hole by subtracting 256MB from all 38-bit OCTEON L2/DRAM physical addresses
    >= 512 MB.)

(4) For 63xx pass 2.0 and all 68xx ADDR<15:0> will ALWAYS be zero.

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_VER_ID = L2C Virtualization ID Error Register
 *
 * Description: records virtualization IDs associated with HOLEWR/BIGWR/VRTWR/VRTIDRNG/VRTADRNG interrupts.
 *

     ==============================================================
     L2C_VER_ID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   MASK          R/W1C  0      0        Mask of virtualization IDs which had a               |
                                               HOLEWR/BIGWR/VRTWR error                             |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_VER_PP = L2C Virtualization ID PP Error Register
 *
 * Description: records PPs associated with HOLEWR/BIGWR/VRTWR/VRTIDRNG/VRTADRNG interrupts.
 *

     ==============================================================
     L2C_VER_PP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>    MASK         R/W1C  0      0        Mask of PPs which had a HOLEWR/BIGWR/VRTWR error     |
 <63:32>   NS        	RAZ    NS     NS       RESERVED					    	    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_VER_IOB = L2C Virtualization ID IOB Error Register
 *
 * Description: records IOBs associated with HOLEWR/BIGWR/VRTWR/VRTIDRNG/VRTADRNG interrupts.
 *

     ==============================================================
     L2C_VER_IOB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>    MASK          R/W1C  0      0        Mask of IOBs which had a HOLEWR/BIGWR/VRTWR error    |
 <63:2>   NS        	RAZ    NS     NS       RESERVED					    	    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_ERR_TDT = L2C TAD DaTa Error Info
 *

     ==============================================================
     L2C_ERR_TDT(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>    TYPE       	RO     0      0        The type of error the WAYIDX,SYN were latched for.   |
                                                  0 - VSBE                                          |
                                                  1 - VDBE                                          |
                                                  2 - SBE                                           |
                                                  3 - DBE                                           |
 <3:2>    NS            RAZ    NS     NS       RESERVED					    	    |
 <21:4>   WAYIDX       	RO     NS     0        Way, index, OW of the L2 block containing the error  |
 <49:22>  NS        	RAZ    NS     NS       RESERVED					    	    |
 <59:50>  SYN        	RO     0      0        L2D syndrome (valid only for SBE/DBE, not VSBE/VDBE) |
 <60>     VSBE        	R/W1C  0      0        VBF Single-Bit error has occurred     	            |
 <61>     VDBE        	R/W1C  0      0        VBF Double-Bit error has occurred		    |
 <62>     SBE        	R/W1C  0      0        L2D Single-Bit error has occurred		    |
 <63>     DBE        	R/W1C  0      0        L2D Double-Bit error has occurred		    |

Notes:

(1) If the status bit corresponding to the value of the TYPE field is not set the WAYIDX/SYN fields
    are not associated with the errors currently logged by the status bits and should be ignored.
    This can occur, for example, because of a race between a write to clear a DBE and a new, lower
    priority, SBE error occuring.  If the SBE arrives prior to the DBE clear the WAYIDX/SYN fields
    will still be locked, but the new SBE error status bit will still be set.

(2) The four types of errors have differing priorities.  Priority (from lowest to highest) is SBE,
    VSBE, DBE, VDBE.  A error will lock the WAYIDX, and SYN fields for other errors of equal or
    lower priority until cleared by software.  This means that the error information is always
    (assuming the TYPE field matches) for the highest priority error logged in the status bits.

(3) If VSBE or VDBE are set (and the TYPE field matches), the WAYIDX fields are valid and the
    syndrome can be found in L2C_ERR_VBF.

(4) The syndrome is recorded for DBE errors, though the utility of the value is not clear.

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_ERR_TTG = L2C TAD TaG Error Info
 *

     ==============================================================
     L2C_ERR_TTG(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>    TYPE       	RO     0      0        The type of error the WAYIDX,SYN were latched for.   |
                                                  0 - not valid                                     |
                                                  1 - NOWAY                                         |
                                                  2 - SBE                                           |
                                                  3 - DBE                                           |
 <6:2>    NS            RAZ    NS     NS       RESERVED					    	    |
 <21:7>   WAYIDX       	RO     NS     0        Way and index of the L2 block containing the error   |
 <49:22>  NS        	RAZ    NS     NS       RESERVED					    	    |
 <55:50>  SYN        	RO     0      0        Syndrome for the single-bit error	    	    |
 <60:56>  NS        	RAZ    NS     NS       RESERVED					    	    |
 <61>     NOWAY        	R/W1C  0      0        No way was available for allocation.	            |
                                                L2C sets NOWAY during its processing of a           |
                                                transaction whenever it needed/wanted to allocate   |
                                                a WAY in the L2 cache, but was unable to. NOWAY==1  |
                                                is (generally) not an indication that L2C failed to |
                                                complete transactions. Rather, it is a hint of      |
                                                possible performance degradation. (For example, L2C |
                                                must read-modify-write DRAM for every transaction   |
                                                that updates some, but not all, of the bytes in a   |
                                                cache block, misses in the L2 cache, and cannot     |
                                                allocate a WAY.) There is one "failure" case where  |
                                                L2C will set NOWAY: when it cannot leave a block    |
                                                locked in the L2 cache as part of a LCKL2           |
                                                transaction.                                        |
 <62>     SBE        	R/W1C  0      0        Single-Bit ECC error			            |
 <63>     DBE        	R/W1C  0      0        Double-Bit ECC error			            |

Notes:

(1) The priority of errors (highest to lowest) is DBE, SBE, NOWAY.  An error will lock the SYN, and
    WAYIDX fields for equal or lower priority errors until cleared by software.

(2) The syndrome is recorded for DBE errors, though the utility of the value is not clear.

(3) A NOWAY error does not change the value of the SYN field, and leaves WAYIDX[20:17]
    unpredictable.  WAYIDX[16:7] is the L2 block index associated with the command which had no way
    to allocate.

(4) If the status bit corresponding to the value of the TYPE field is not set the WAYIDX/SYN fields
    are not associated with the errors currently logged by the status bits and should be ignored.
    This can occur, for example, because of a race between a write to clear a DBE and a new, lower
    priority, SBE error occuring.  If the SBE arrives prior to the DBE clear the WAYIDX/SYN fields
    will still be locked, but the new SBE error status bit will still be set.

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_ERR_VBF = L2C VBF Error Info
 *

     ==============================================================
     L2C_ERR_VBF(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>    TYPE       	RO     0      0        The type of error the SYN were latched for.          |
                                                  0 - VSBE                                          |
                                                  1 - VDBE                                          |
 <49:2>   NS        	RAZ    NS     NS       RESERVED					    	    |
 <59:50>  VSYN        	RO     0      0        VBF syndrome (valid only if VSBE/VDBE is set)        |
 <60>     VSBE        	RO     0      0        VBF Single-Bit error has occurred	    	    |
 <61>     VDBE        	RO     0      0        VBF Double-Bit error has occurred	    	    |
 <63:62>  NS        	RAZ    NS     NS       RESERVED					    	    |

Notes:

(1) The way/index information is stored in L2C_ERR_TDT, assuming no later interrupt occurred to
    overwrite the information.  See the notes associated with L2C_ERR_TDT for full details.

(2) The first VSBE will lock the register for other VSBE's.  A VDBE, however, will overwrite a
    previously logged VSBE.  Once a VDBE has been logged all later errors will not be logged.  This
    means that if VDBE is set the information in the register is for the VDBE, if VDBE is clear and
    VSBE is set the register contains information about the VSBE.

(3) The syndrome is recorded for VDBE errors, though the utility of the value is not clear.

(4) If the status bit corresponding to the value of the TYPE field is not set the SYN field is not
    associated with the errors currently logged by the status bits and should be ignored.  This can
    occur, for example, because of a race between a write to clear a VDBE and a new, lower priority,
    VSBE error occuring.  If the VSBE arrives prior to the VDBE clear the SYN field will still be
    locked, but the new VSBE error status bit will still be set.

----------------------------------------------------------------------------------------------------
===

 * Specify the RSL base addresses for the block

 *

     ==============================================================
     LMC(0..3)_RESET_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     DDR3RST   R/W       0           0        Memory Reset
                                                 0 = Reset asserted
                                                 1 = Reset de-asserted
<1>     DDR3PWARM R/W       0           0        Memory Reset
                                                 1 = Enable Preserve mode during warm reset
<2>     DDR3PSOFT R/W       0           0        Memory Reset
                                                 1 = Enable Preserve mode during soft reset
<3>     DDR3PSV   R/W       0           0        Memory Reset
                                                 1 = DDR contents preserved
<63:4>  NS        RAZ       NS          NS       RESERVED

Notes:
 DDR3RST - DDR3 DRAM parts have a new RESET#
   pin that wasn't present in DDR2 parts. The
   DDR3RST CSR field controls the assertion of
   the new 6xxx pin that attaches to RESET#.
   When DDR3RST is set, 6xxx asserts RESET#.
   When DDR3RST is clear, 6xxx de-asserts
   RESET#.

   DDR3RST is set on a cold reset. Warm and
   soft chip resets do not affect the DDR3RST
   value. Outside of cold reset, only software
   CSR writes change the DDR3RST value.

 DDR3PWARM - Enables preserve mode during a warm
   reset. When set, the DDR3 controller hardware
   automatically puts the attached DDR3 DRAM parts
   into self refresh (see LMC*CONFIG[SEQUENCE] below) at the beginning of a warm
   reset sequence, provided that the DDR3 controller
   is up. When clear, the DDR3 controller hardware
   does not put the attached DDR3 DRAM parts into
   self-refresh during a warm reset sequence.

   DDR3PWARM is cleared on a cold reset. Warm and
   soft chip resets do not affect the DDR3PWARM
   value. Outside of cold reset, only software
   CSR writes change the DDR3PWARM value.

   Note that if a warm reset follows a soft reset,
   DDR3PWARM has no effect, as the DDR3 controller
   is no longer up after any cold/warm/soft
   reset sequence.

 DDR3PSOFT - Enables preserve mode during a soft
   reset. When set, the DDR3 controller hardware
   automatically puts the attached DDR3 DRAM parts
   into self refresh (see LMC*CONFIG[SEQUENCE] below) at the beginning of a soft
   reset sequence, provided that the DDR3 controller
   is up. When clear, the DDR3 controller hardware
   does not put the attached DDR3 DRAM parts into
   self-refresh during a soft reset sequence.

   DDR3PSOFT is cleared on a cold reset. Warm and
   soft chip resets do not affect the DDR3PSOFT
   value. Outside of cold reset, only software
   CSR writes change the DDR3PSOFT value.

 DDR3PSV - May be useful for system software to
   determine when the DDR3 contents have been
   preserved.

   Cleared by hardware during a cold reset. Never
   cleared by hardware during a warm/soft reset.
   Set by hardware during a warm/soft reset if
   the hardware automatically put the DDR3 DRAM
   into self-refresh during the reset sequence.

   Can also be written by software (to any value).

----------------------------------------------------------------------------------------------------
===
 *
 *                  LMC_CONFIG = LMC Configuration Register
 *
 * This register controls certain parameters of  Memory Configuration
 *

     ==============================================================
     LMC(0..3)_CONFIG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      INIT_START  WR0     0       0      A 0->1 transition starts the DDR memory sequence that is
                                            selected by LMC*_CONFIG[SEQUENCE].  This register is a
                                            oneshot and clears itself each time it is set.

<1>      ECC_ENA     R/W     0       1      ECC Enable: When set will enable the 8b ECC
                                            check/correct logic. Should be 1 when used with DIMMs
                                            with ECC. 0, otherwise.
                                            When this mode is turned on, DQ[71:64]
                                            on writes, will contain the ECC code generated for
                                            the 64 bits of data which will
                                            written in the memory and then later on reads, used
                                            to check for Single bit error (which will be auto-
                                            corrected) and Double Bit error (which will be
                                            reported). When not turned on, DQ[71:64]
                                            are driven to 0.  Please refer to SEC_ERR, DED_ERR,
                                            LMC*_FADR, and LMC*_ECC_SYND registers
                                            for diagnostics information when there is an error.

<4:2>    ROW_LSB     R/W    0x3     NS      Row Address bit select
                                            Encoding used to determine which memory address
                                            bit position represents the low order DDR ROW address.

                                            The processor's memory address[34:7] needs to be
                                            translated to DRAM addresses (bnk,row,col,rank and DIMM)
                                            and that is a function of the following:
                                            1. Datapath Width (64)
                                            2. # Banks (8)
                                            3. # Column Bits of the memory part - spec'd indirectly
                                            by this register.
                                            4. # Row Bits of the memory part - spec'd indirectly
                                            5. # Ranks in a DIMM - spec'd by RANK_ENA
                                            6. # DIMM's in the system by the register below (PBANK_LSB).

				            Decoding for row_lsb
                                                 000: row_lsb = mem_adr[14]
                                                 001: row_lsb = mem_adr[15]
                                                 010: row_lsb = mem_adr[16]
                                                 011: row_lsb = mem_adr[17]
                                                 100: row_lsb = mem_adr[18]
                                                 101: row_lsb = mem_adr[19]
                                                 110: row_lsb = mem_adr[20]
                                                 111: RESERVED

	                                    For example, for a DIMM made of Samsung's k4b1g0846c-f7 1Gb (16M x 8 bit x 8 bank)
                                            DDR3 parts, the column address width = 10, so with
                                            10b of col, 3b of bus, 3b of bank, row_lsb = 16. So, row = mem_adr[29:16]

<8:5>   PBANK_LSB    R/W    0x5     NS      DIMM address bit select
                                            Reverting to the explanation for ROW_LSB,
                                            PBank_LSB would be Row_LSB bit + #rowbits + #rankbits
				            Decoding for pbank_lsb
                                                 0000:DIMM = mem_adr[28]    / rank = mem_adr[27] (if RANK_ENA)
                                                 0001:DIMM = mem_adr[29]    / rank = mem_adr[28]      "
                                                 0010:DIMM = mem_adr[30]    / rank = mem_adr[29]      "
                                                 0011:DIMM = mem_adr[31]    / rank = mem_adr[30]      "
                                                 0100:DIMM = mem_adr[32]    / rank = mem_adr[31]      "
                                                 0101:DIMM = mem_adr[33]    / rank = mem_adr[32]      "
                                                 0110:DIMM = mem_adr[34]    / rank = mem_adr[33]      "
                                                 0111:DIMM = 0              / rank = mem_adr[34]      "
                                                 1000-1111: RESERVED

	                                    For example, for a DIMM made of Samsung's k4b1g0846c-f7 1Gb (16M x 8 bit x 8 bank)
                                            DDR3 parts, the column address width = 10, so with
                                            10b of col, 3b of bus, 3b of bank, row_lsb = 16. So, row = mem_adr[29:16]
                                            With rank_ena = 0, pbank_lsb = 2
                                            With rank_ena = 1, pbank_lsb = 3

<11:9>  IDLEPOWER    R/W    0x0      6      Enter precharge power-down mode after the memory
                                            controller has been idle for 2^(2+IDLEPOWER) CK cycles.
                                            0=disabled.
                                            This field should only be programmed after initialization.
                                            LMC*_MODEREG_PARAMS0[PPD] determines whether the DRAM DLL
                                            is disabled during the precharge power-down.

<15:12> FORCEWRITE   R/W    0x0      0      Force the oldest outstanding write to complete after
                                            having waited for 2^FORCEWRITE CK cycles.  0=disabled.

<16>    ECC_ADR      R/W    0x0      1      Include memory reference address in the ECC calculation
                                            0=disabled, 1=enabled

<17>    RESET        R/W    0x0     NS      Reset oneshot pulse for refresh counter,
                                            and LMC*_OPS_CNT, LMC*_IFB_CNT, and LMC*_DCLK_CNT
                                            CSR's. SW should write this to a one, then re-write
                                            it to a zero to cause the reset.

<36:18> REF_ZQCS_INT R/W     NS     NS      Refresh & ZQCS interval represented in #of 512 CK cycle
                                            increments. A Refresh sequence is triggered when bits
                                            [24:18] are equal to 0, and a ZQCS sequence is triggered
                                            when [36:18] are equal to 0.

                                            Program [24:18] to RND-DN(tREFI/clkPeriod/512)
                                            Program [36:25] to RND-DN(ZQCS_Interval/clkPeriod/(512*64)). Note
                                            that this value should always be greater than 32, to account for
                                            resistor calibration delays.

                                            000_00000000_00000000: RESERVED
	                                    Max Refresh interval = 127 * 512           = 65024 CKs
                                            Max ZQCS interval    = (8*256*256-1) * 512 = 268434944 CKs ~ 335ms for a 800 MHz CK

                                            LMC*_CONFIG[INIT_STATUS] determines which ranks receive
                                            the REF / ZQCS. LMC does not send any refreshes / ZQCS's
                                            when LMC*_CONFIG[INIT_STATUS]=0.

<39:37> SEQUENCE     R/W    0x0      0      Selects the sequence that LMC runs after a 0->1
                                            transition on LMC*_CONFIG[INIT_START].

                                            SEQUENCE=0=power-up/init:
                                              - RANKMASK selects participating ranks (should be all ranks with attached DRAM)
                                              - INIT_STATUS must equal RANKMASK
                                              - DDR_DIMM*_CKE signals activated (if they weren't already active)
                                              - RDIMM register control words 0-15 will be written to RANKMASK-selected
                                                  RDIMM's when LMC(0..3)_CONTROL[RDIMM_ENA]=1 and corresponding
                                                  LMC*_DIMM_CTL[DIMM*_WMASK] bits are set. (Refer to LMC*_DIMM*_PARAMS and
                                                  LMC*_DIMM_CTL descriptions below for more details.)
                                              - MR0, MR1, MR2, and MR3 will be written to selected ranks
                                            SEQUENCE=1=read-leveling:
                                              - RANKMASK selects the rank to be read-leveled
                                              - MR3 written to selected rank
					    SEQUENCE=2=self-refresh entry:
                                              - INIT_STATUS selects participating ranks (should be all ranks with attached DRAM)
                                              - MR1 and MR2 will be written to selected ranks if SREF_WITH_DLL=1
                                              - DDR_DIMM*_CKE signals de-activated
                                            SEQUENCE=3=self-refresh exit:
                                              - INIT_STATUS must be set to indicate participating ranks (should be all ranks with attached DRAM)
                                              - DDR_DIMM*_CKE signals activated
                                              - MR0, MR1, MR2, and MR3 will be written to participating ranks if SREF_WITH_DLL=1
                                            SEQUENCE=4=precharge power-down entry:
                                              - INIT_STATUS selects participating ranks (should be all ranks with attached DRAM)
                                              - DDR_DIMM*_CKE signals de-activated
                                            SEQUENCE=5=precharge power-down exit:
                                              - INIT_STATUS selects participating ranks (should be all ranks with attached DRAM)
                                              - DDR_DIMM*_CKE signals activated
                                            SEQUENCE=6=write-leveling:
                                              - RANKMASK selects the rank to be write-leveled
                                              - INIT_STATUS must indicate all ranks with attached DRAM
                                              - MR1 and MR2 written to INIT_STATUS-selected ranks
                                            SEQUENCE=7=illegal

                                            Precharge power-down entry and exit SEQUENCE's may also
                                            be automatically generated by the HW when IDLEPOWER!=0.

                                            Self-refresh entry SEQUENCE's may also be automatically
                                            generated by hardware upon a chip warm or soft reset
                                            sequence when LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT] are set.

                                            LMC writes the LMC*_MODEREG_PARAMS0 and LMC*_MODEREG_PARAMS1 CSR field values
                                            to the Mode registers in the DRAM parts (i.e. MR0, MR1, MR2, and MR3) as part of some of these sequences.
                                            Refer to the LMC*_MODEREG_PARAMS0 and LMC*_MODEREG_PARAMS1 descriptions for more details.

                                            If there are two consecutive power-up/init's without
                                            a DRESET assertion between them, LMC asserts DDR_DIMM*_CKE as part of
                                            the first power-up/init, and continues to assert DDR_DIMM*_CKE
                                            through the remainder of the first and the second power-up/init.
                                            If DDR_DIMM*_CKE deactivation and reactivation is needed for
                                            a second power-up/init, a DRESET assertion is required
                                            between the first and the second.

<40>    EARLY_DQX    R/W    0x0     0x0     Send DQx signals one CK cycle earlier for the case when
                                            the shortest DQx lines have a larger delay than the CK line

<41>    SREF_WITH_DLL R/W   0x0     0x0     Self-refresh entry/exit write MR1 and MR2
                                            When set, self-refresh entry and exit instruction sequences
                                            write MR1 and MR2 (in all ranks). (The writes occur before
                                            self-refresh entry, and after self-refresh exit.)
                                            When clear, self-refresh entry and exit instruction sequences
                                            do not write any registers in the DDR3 parts.

<42>    RANK_ENA     R/W     0      NS      RANK ena (for use with dual-rank DIMMs)
                                            For dual-rank DIMMs, the rank_ena bit will enable
                                            the drive of the CS*_L[1:0] and ODT_<1:0> pins differently based on the
                                            (pbank_lsb-1) address bit.
                                            Write 0 for SINGLE ranked DIMM's.

<46:43> RANKMASK     R/W    0x0     NS      Mask to select rank to be leveled/initialized.
                                            To write-level/read-level/initialize rank i, set RANKMASK<i>
                                                            RANK_ENA=1               RANK_ENA=0
                                              RANKMASK<0> = DIMM0_CS0                DIMM0_CS0
                                              RANKMASK<1> = DIMM0_CS1                  MBZ
                                              RANKMASK<2> = DIMM1_CS0                DIMM1_CS0
                                              RANKMASK<3> = DIMM1_CS1                  MBZ
	                                    For read/write leveling, each rank has to be leveled separately,
                                            so RANKMASK should only have one bit set.
                                            RANKMASK is not used during self-refresh entry/exit and
                                            precharge power-down entry/exit instruction sequences.
                                            When RANK_ENA=0, RANKMASK<1> and RANKMASK<3> MBZ

<50:47> MIRRMASK     R/W    0x0     NS      Mask determining which ranks are address-mirrored.

                                            MIRRMASK<n> = 1 means Rank n addresses are mirrored
                                            for 0 <= n <= 3

                                            A mirrored read/write has these differences:
                                             - DDR_BA<1> is swapped with DDR_BA<0>
                                             - DDR_A<8> is swapped with DDR_A<7>
                                             - DDR_A<6> is swapped with DDR_A<5>
                                             - DDR_A<4> is swapped with DDR_A<3>

                                            When RANK_ENA=0, MIRRMASK<1> and MIRRMASK<3> MBZ

<54:51> INIT_STATUS  R/W1   0x0     NS      Indicates status of initialization

                                            INIT_STATUS[n] = 1 implies rank n has been initialized

                                            SW must set necessary INIT_STATUS bits with the
                                            same LMC*_CONFIG write that initiates
                                            power-up/init and self-refresh exit sequences
                                            (if the required INIT_STATUS bits are not already
                                            set before LMC initiates the sequence).

                                            INIT_STATUS determines the chip-selects that assert
                                            during refresh, ZQCS, and precharge power-down and
                                            self-refresh entry/exit SEQUENCE's.
<55>    EARLY_UNLOAD_D0_R0 R/W 0x0  NS      When set, unload the PHY silo one cycle early for Rank 0
                                            reads.
                                            The recommended EARLY_UNLOAD_D0_R0 value can be calculated
                                            after the final LMC*_RLEVEL_RANK0[BYTE*] values are
                                            selected (as part of read-leveling initialization).
                                            Then, determine the largest read-leveling setting
                                            for rank 0 (i.e. calculate maxset=MAX(LMC*_RLEVEL_RANK0[BYTEi])
                                            across all i), then set EARLY_UNLOAD_D0_R0
                                            when the low two bits of this largest setting is not
                                            3 (i.e. EARLY_UNLOAD_D0_R0 = (maxset<1:0>!=3)).
<56>    EARLY_UNLOAD_D0_R1 R/W 0x0  NS      When set, unload the PHY silo one cycle early for Rank 1
                                            reads
                                            The recommended EARLY_UNLOAD_D0_R1 value can be calculated
                                            after the final LMC*_RLEVEL_RANK1[BYTE*] values are
                                            selected (as part of read-leveling initialization).
                                            Then, determine the largest read-leveling setting
                                            for rank 1 (i.e. calculate maxset=MAX(LMC*_RLEVEL_RANK1[BYTEi])
                                            across all i), then set EARLY_UNLOAD_D0_R1
                                            when the low two bits of this largest setting is not
                                            3 (i.e. EARLY_UNLOAD_D0_R1 = (maxset<1:0>!=3)).
<57>    EARLY_UNLOAD_D1_R0 R/W 0x0  NS      When set, unload the PHY silo one cycle early for Rank 2
                                            reads
                                            The recommended EARLY_UNLOAD_D1_RO value can be calculated
                                            after the final LMC*_RLEVEL_RANK2[BYTE*] values are
                                            selected (as part of read-leveling initialization).
                                            Then, determine the largest read-leveling setting
                                            for rank 2 (i.e. calculate maxset=MAX(LMC*_RLEVEL_RANK2[BYTEi])
                                            across all i), then set EARLY_UNLOAD_D1_RO
                                            when the low two bits of this largest setting is not
                                            3 (i.e. EARLY_UNLOAD_D1_RO = (maxset<1:0>!=3)).
<58>    EARLY_UNLOAD_D1_R1 R/W 0x0  NS      When set, unload the PHY silo one cycle early for Rank 3
                                            reads
                                            The recommended EARLY_UNLOAD_D1_R1 value can be calculated
                                            after the final LMC*_RLEVEL_RANK3[BYTE*] values are
                                            selected (as part of read-leveling initialization).
                                            Then, determine the largest read-leveling setting
                                            for rank 3 (i.e. calculate maxset=MAX(LMC*_RLEVEL_RANK3[BYTEi])
                                            across all i), then set EARLY_UNLOAD_D1_R1
                                            when the low two bits of this largest setting is not
                                            3 (i.e. EARLY_UNLOAD_D1_R1 = (maxset<1:0>!=3)).
<63:59> NS           RAZ     NS     NS      RESERVED

Notes:
a. Priority order for hardware writes to LMC*_CONFIG/LMC*_FADR/LMC*_ECC_SYND: DED error >= NXM error > SEC error
b. The self refresh entry sequence(s) power the DLL up/down (depending on LMC*_MODEREG_PARAMS0[DLL])
when LMC*_CONFIG[SREF_WITH_DLL] is set
c. Prior to the self-refresh exit sequence, LMC*_MODEREG_PARAMS0 and LMC*_MODEREG_PARAMS1 should be re-programmed (if needed) to the
appropriate values

LMC Bringup Sequence:
1. SW must ensure there are no pending DRAM transactions and that the DDR PLL and the DLL have been initialized.
2. Write LMC*_COMP_CTL2, LMC*_CONTROL, LMC*_WODT_MASK, LMC*_DUAL_MEMCFG, LMC*_TIMING_PARAMS0, LMC*_TIMING_PARAMS1,
   LMC*_MODEREG_PARAMS0, LMC*_MODEREG_PARAMS1, LMC*_RESET_CTL (with DDR3RST=0), LMC*_CONFIG (with INIT_START=0)
   with appropriate values, if necessary.
3. Wait 200us, then write LMC*_RESET_CTL[DDR3RST] = 1.
4. Initialize all ranks at once by writing LMC*_CONFIG[RANKMASK][n] = 1, LMC*_CONFIG[INIT_STATUS][n] = 1, and LMC*_CONFIG[INIT_START] = 1
   where n is a valid rank index for the specific board configuration.
5. for each rank n to be write-leveled {
      if auto write-leveling is desired {
          write LMC*_CONFIG[RANKMASK][n] = 1, LMC*_WLEVEL_CTL appropriately and LMC*_CONFIG[INIT_START] = 1
          wait until LMC*_WLEVEL_RANKn[STATUS] = 3
      } else {
          write LMC*_WLEVEL_RANKn with appropriate values
      }
   }
6. for each rank n to be read-leveled {
      if auto read-leveling is desired {
          write LMC*_CONFIG[RANKMASK][n] = 1, LMC*_RLEVEL_CTL appropriately and LMC*_CONFIG[INIT_START] = 1
          wait until LMC*_RLEVEL_RANKn[STATUS] = 3
      } else {
          write LMC*_RLEVEL_RANKn with appropriate values
      }
   }

----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_CONTROL = LMC Control
 * This register is an assortment of various control fields needed by the memory controller
 *

     ==============================================================
     LMC(0..3)_CONTROL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     RDIMM_ENA    R/W     0       NS     Registered DIMM Enable - When set allows the use
                                            of JEDEC Registered DIMMs which require address and
                                            control bits to be registered in the controller.
<1>     BWCNT        R/W     0      0x0     Bus utilization counter Clear.
                                            Clears the LMC*_OPS_CNT, LMC*_IFB_CNT, and
                                            LMC*_DCLK_CNT registers. SW should first write this
                                            field to a one, then write this field to a zero to
                                            clear the CSR's.
<2>     DDR2T        R/W     0      0x1     Turn on the DDR 2T mode. 2 CK cycle window for CMD and
                                            address. This mode helps relieve setup time pressure
                                            on the Address and command bus which nominally have
                                            a very large fanout. Please refer to Micron's tech
                                            note tn_47_01 titled "DDR2-533 Memory Design Guide
                                            for Two Dimm Unbuffered Systems" for physical details.
<3>     POCAS        R/W     0       0      Enable the Posted CAS feature of DDR3.
                                            This bit must be set whenever LMC*_MODEREG_PARAMS0[AL]!=0,
                                            and clear otherwise.
                                            *DON'T PUT IN HRM*
<5:4>   FPRCH2       R/W     0     0x1      Front Porch Enable: When set, the turn-off
                                            time for the default DDR_DQ/DQS drivers is FPRCH2 CKs earlier.
                                            00 = 0 CKs
                                            01 = 1 CKs
                                            10 = 2 CKs
                                            11 = RESERVED
<6>     THROTTLE_RD  R/W     0       0      When set, use at most one IFB for reads
<7>     THROTTLE_WR  R/W     0       0      When set, use at most one IFB for writes
<8>     INORDER_RD   R/W     0       0      Send reads in order (regardless of priority)
<9>     INORDER_WR   R/W     0       0      Send writes in order(regardless of priority)
<10>    ELEV_PRIO_DIS R/W    0     0x0      Disable elevate priority logic.
                                            When set, writes are sent in
                                            regardless of priority information from L2C.
<11>    NXM_WRITE_EN  R/W    0     0x0      NXM Write mode
                                            When clear, LMC discards writes to addresses that don't
                                            exist in the DRAM (as defined by LMC*_NXM configuration).
                                            When set, LMC completes writes to addresses that don't
                                            exist in the DRAM at an aliased address.
<15:12> MAX_WRITE_BATCH R/W 0x8    0x8      Maximum number of consecutive writes to service before
                                            forcing reads to interrupt.
<16>    XOR_BANK    R/W     0x0     0x1     If (XOR_BANK == 1), then
                                              bank[2:0]=address[9:7] ^ address[14:12]
                                             else
                                              bank[2:0]=address[9:7]
<17>    AUTO_DCLKDIS R/W    0x0      1      When 1, LMC will automatically shut off its internal
                                            clock to conserve power when there is no traffic. Note
                                            that this has no effect on the DDR3 PHY and pads clocks.
<18>    INT_ZQCS_DIS R/W    0x1     0x0     Disable (internal) auto-zqcs calibration
                                            When clear, LMC runs internal ZQ calibration
                                            every LMC*_CONFIG[REF_ZQCS_INT] CK cycles.
<19>    EXT_ZQCS_DIS R/W    0x0     0x0     Disable (external) auto-zqcs calibration
                                            When clear, LMC runs external ZQ calibration
                                            every LMC*_CONFIG[REF_ZQCS_INT] CK cycles.
<21:20> BPRCH        R/W    0x0     0x0     Back Porch Enable: When set, the turn-on time for
                                            the default DDR_DQ/DQS drivers is delayed an additional BPRCH
                                            CK cycles.
                                            00 = 0 CKs
                                            01 = 1 CKs
                                            10 = 2 CKs
                                            11 = 3 CKs
<22>    WODT_BPRCH   R/W    0x0     0x0     When set, the turn-off time for the ODT pin during a
                                            WR cmd is delayed an additional CK cycle.
<23>    RODT_BPRCH   R/W    0x0     0x0     When set, the turn-off time for the ODT pin during a
                                            RD cmd is delayed an additional CK cycle.
<28:24> CRM_MAX      R/W    0x1f    0x1f    Coarse Rate Matching Max Bucket Size
                                            0 = Reserved
                                            The Coarse Rate Matching Logic is used to control the bandwidth
                                            allocated to DFA Rds. CRM_MAX is subdivided into two regions
                                            with DFA Rds being preferred over LMC Rd/Wrs when
                                            CRM_CNT < CRM_THR. CRM_CNT increments by 1 when a DFA Rd is
                                            slotted and by 2 when a LMC Rd/Wr is slotted, and rolls over
                                            when CRM_MAX is reached.
<33:29> CRM_THR      R/W    0x0     0x8     Coarse Rate Matching Threshold
<38:34> CRM_CNT      RO     0x0     0x0     Coarse Count
<42:39> THRMAX       R/W    0xf     0x2     Fine Rate Matching Max Bucket Size
                                            0 = Reserved
                                            In conjunction with the Coarse Rate Matching Logic, the Fine Rate
                                            Matching Logic gives SW the ability to prioritize DFA Rds over
                                            L2C Writes. Higher PERSUB values result in a lower DFA Rd
                                            bandwidth.
<50:43> PERSUB       R/W    0x0     0x0     Offset for DFA rate-matching
<62:51> THRCNT       RO     0x0     0x0     Fine Count
<63:63> NS           RAZ     NS      NS     RESERVED
----------------------------------------------------------------------------------------------------
===
 *

     ==============================================================
     LMC(0..3)_TIMING_PARAMS0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:47>  NS          RAZ     NS      NS     RESERVED
<46:46>  TRP_EXT     R/W    0x0     0x0     Indicates tRP constraints.
                                            Set {TRP_EXT[0:0], TRP[3:0]} (CSR field) = RNDUP[tRP(ns)/tCYC(ns)]
                                            + (RNDUP[tRTP(ns)/tCYC(ns)]-4)-1,
                                            where tRP, tRTP are from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP tRP=10-15ns
                                            TYP tRTP=max(4nCK, 7.5ns)
<45:42>  TCKSRE      R/W    0x5     0x5     Indicates tCKSRE constraints.
                                            Set TCKSRE (CSR field) = RNDUP[tCKSRE(ns)/tCYC(ns)]-1,
                                            where tCKSRE is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(5nCK, 10ns)
<41:38>  TRP         R/W    0x6     0x6     Indicates tRP constraints.
                                            Set {TRP_EXT[0:0], TRP[3:0]} (CSR field) = RNDUP[tRP(ns)/tCYC(ns)]
                                            + (RNDUP[tRTP(ns)/tCYC(ns)])-4)-1,
                                            where tRP, tRTP are from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP tRP=10-15ns
                                            TYP tRTP=max(4nCK, 7.5ns)
<37:34>  TZQINIT     R/W    0x2     0x2     Indicates tZQINIT constraints.
                                            Set TZQINIT (CSR field) = RNDUP[tZQINIT(ns)/(256*tCYC(ns))],
                                            where tZQINIT is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=2 (equivalent to 512)
<33:30>  TDLLK       R/W    0x2     0x2     Indicates tDLLK constraints.
                                            Set TDLLK (CSR field) = RNDUP[tDLLK(ns)/(256*tCYC(ns))],
                                            where tDLLK is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=2 (equivalent to 512)
                                            This parameter is used in self-refresh exit
                                            and assumed to be greater than tRFC
<29:26>  TMOD        R/W    0xC     0xC     Indicates tMOD constraints.
                                            Set TMOD (CSR field) = RNDUP[tMOD(ns)/tCYC(ns)]-1,
                                            where tMOD is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(12nCK, 15ns)
<25:22>  TMRD        R/W    0x4     0x4     Indicates tMRD constraints.
                                            Set TMRD (CSR field) = RNDUP[tMRD(ns)/tCYC(ns)]-1,
                                            where tMRD is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=4nCK
<21:18>  TXPR        R/W    0x5     0x5     Indicates tXPR constraints.
                                            Set TXPR (CSR field) = RNDUP[tXPR(ns)/(16*tCYC(ns))],
                                            where tXPR is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(5nCK, tRFC+10ns)
<17:14>  TCKE        R/W    0x3     0x3     Indicates tCKE constraints.
                                            Set TCKE (CSR field) = RNDUP[tCKE(ns)/tCYC(ns)]-1,
                                            where tCKE is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(3nCK, 7.5/5.625/5.625/5ns)
<13:10>  TZQCS       R/W    0x4     0x4     Indicates tZQCS constraints.
                                            Set TZQCS (CSR field) = RNDUP[tZQCS(ns)/(16*tCYC(ns))],
                                            where tZQCS is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=4 (equivalent to 64)
<9:0>    NS          RAZ     NS      NS     RESERVED

Notes:
----------------------------------------------------------------------------------------------------
===

 *

     ==============================================================
     LMC(0..3)_TIMING_PARAMS1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>    TMPRR       R/W    0x1     0x1     Indicates tMPRR constraints.
                                            Set TMPRR (CSR field) = RNDUP[tMPRR(ns)/tCYC(ns)]-1,
                                            where tMPRR is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=1nCK
<8:4>    TRAS        R/W    0xC     0xC     Indicates tRAS constraints.
                                            Set {TRAS_EXT[0:0], TRAS[4:0]} (CSR field) = RNDUP[tRAS(ns)/tCYC(ns)]-1,
                                            where tRAS is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=35ns-9*tREFI
                                                000000: RESERVED
                                                000001: 2 tCYC
                                                000010: 3 tCYC
                                                ..
                                                111111: 64 tCYC
<12:9>   TRCD        R/W    0x4     0x4     Indicates tRCD constraints.
                                            Set TRCD (CSR field) = RNDUP[tRCD(ns)/tCYC(ns)],
                                            where tRCD is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=10-15ns
                                                0000: RESERVED
                                                0001: 2 (2 is the smallest value allowed)
                                                0002: 2
                                                ..
                                                1110: 14
                                                1111: RESERVED
                                            In 2T mode, make this register TRCD-1, not going
                                            below 2.
<16:13>  TWTR        R/W    0x2     0x3     Indicates tWTR constraints.
                                            Set TWTR (CSR field) = RNDUP[tWTR(ns)/tCYC(ns)]-1,
                                            where tWTR is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(4nCK, 7.5ns)
                                                0000: RESERVED
                                                0001: 2
                                                ..
                                                0111: 8
                                                1000-1111: RESERVED
<21:17>  TRFC        R/W    0x6     0x7     Indicates tRFC constraints.
                                            Set TRFC (CSR field) = RNDUP[tRFC(ns)/(8*tCYC(ns))],
                                            where tRFC is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=90-350ns
                                                 00000: RESERVED
                                                 00001: 8 tCYC
                                                 00010: 16 tCYC
                                                 00011: 24 tCYC
                                                 00100: 32 tCYC
                                                 ...
                                                 11110: 240 tCYC
                                                 11111: 248 tCYC
<24:22>  TRRD        R/W    0x2     0x2     Indicates tRRD constraints.
                                            Set TRRD (CSR field) = RNDUP[tRRD(ns)/tCYC(ns)]-2,
                                            where tRRD is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(4nCK, 10ns)
                                               000: RESERVED
                                               001: 3 tCYC
                                               ...
                                               110: 8 tCYC
                                               111: 9 tCYC
<27:25>  TXP         R/W    0x3     0x3     Indicates tXP constraints.
                                            Set TXP (CSR field) = RNDUP[tXP(ns)/tCYC(ns)]-1,
                                            where tXP is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(3nCK, 7.5ns)
<31:28>  TWLMRD      R/W    0xA     0xA     Indicates tWLMRD constraints.
                                            Set TWLMRD (CSR field) = RNDUP[tWLMRD(ns)/(4*tCYC(ns))],
                                            where tWLMRD is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(40nCK)
<35:32>  TWLDQSEN    R/W    0x7     0x7     Indicates tWLDQSEN constraints.
                                            Set TWLDQSEN (CSR field) = RNDUP[tWLDQSEN(ns)/(4*tCYC(ns))],
                                            where tWLDQSEN is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(25nCK)
<40:36>  TFAW        R/W    0x0     0x9     Indicates tFAW constraints.
                                            Set TFAW (CSR field) = RNDUP[tFAW(ns)/(4*tCYC(ns))],
                                            where tFAW is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=30-40ns
<45:41>  TXPDLL      R/W    0x0     0xA     Indicates tXPDLL constraints.
                                            Set TXPDLL (CSR field) = RNDUP[tXPDLL(ns)/tCYC(ns)]-1,
                                            where tXPDLL is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(10nCK, 24ns)
<46:46>  TRAS_EXT    R/W    0x0     0x0     Indicates tRAS constraints.
                                            Set {TRAS_EXT[0:0], TRAS[4:0]} (CSR field) = RNDUP[tRAS(ns)/tCYC(ns)]-1,
                                            where tRAS is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=35ns-9*tREFI
                                                000000: RESERVED
                                                000001: 2 tCYC
                                                000010: 3 tCYC
                                                ..
                                                111111: 64 tCYC
<63:47>  NS          RAZ     NS      NS     RESERVED

Notes:
----------------------------------------------------------------------------------------------------
===

 *

     ==============================================================
     LMC(0..3)_MODEREG_PARAMS0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:25>  NS          RAZ     NS      NS     RESERVED
<24:24>  PPD         R/W    0x0      0x0    DLL Control for precharge powerdown
                                            0 = Slow exit (DLL off)
                                            1 = Fast exit (DLL on)
                                            LMC writes this value to MR0[PPD] in the selected DDR3 parts
                                            during power-up/init and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            This value must equal the MR0[PPD] value in all the DDR3
                                            parts attached to all ranks during normal operation.
<23:21>  WRP         R/W    0x0      0x0    Write recovery for auto precharge
                                            Should be programmed to be equal to or greater than
                                            RNDUP[tWR(ns)/tCYC(ns)]
					    000 = 5
					    001 = 5
					    010 = 6
					    011 = 7
					    100 = 8
					    101 = 10
					    110 = 12
					    111 = 14
                                            LMC writes this value to MR0[WR] in the selected DDR3 parts
                                            during power-up/init and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            This value must equal the MR0[WR] value in all the DDR3
                                            parts attached to all ranks during normal operation.
<20:20>  DLLR        R/W    0x0      0x0    DLL Reset
                                            LMC writes this value to MR0[DLL] in the selected DDR3 parts
                                            during power-up/init and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            The MR0[DLL] value must be 0 in all the DDR3
                                            parts attached to all ranks during normal operation.
<19:19>  TM          R/W    0x0      0x0    Test Mode
                                            LMC writes this value to MR0[TM] in the selected DDR3 parts
                                            during power-up/init and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            The MR0[TM] value must be 0 in all the DDR3
                                            parts attached to all ranks during normal operation.
<18:18>  RBT         RO     0x1      0x1    Read Burst Type
                                            1 = interleaved (fixed)
                                            LMC writes this value to MR0[RBT] in the selected DDR3 parts
                                            during power-up/init and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            The MR0[RBT] value must be 1 in all the DDR3
                                            parts attached to all ranks during normal operation.
<17:14>  CL          R/W    0x2      0x2    CAS Latency
                                            0010 = 5
                                            0100 = 6
                                            0110 = 7
                                            1000 = 8
                                            1010 = 9
                                            1100 = 10
                                            1110 = 11
	                                    0001 = 12
	                                    0011 = 13
	                                    0101 = 14
	                                    0111 = 15
	                                    1001 = 16
                                            0000, 1011, 1101, 1111 = Reserved
                                            LMC writes this value to MR0[CAS Latency / CL] in the selected DDR3 parts
                                            during power-up/init and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            This value must equal the MR0[CAS Latency / CL] value in all the DDR3
                                            parts attached to all ranks during normal operation.
<13:12>  BL          RO     0x0      0x0    Burst Length
                                            0 = 8 (fixed)
                                            LMC writes this value to MR0[BL] in the selected DDR3 parts
                                            during power-up/init and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            The MR0[BL] value must be 0 in all the DDR3
                                            parts attached to all ranks during normal operation.
<11:11>  QOFF        R/W    0x0      0x0    Qoff Enable
                                            0 = enable
                                            1 = disable
                                            LMC writes this value to MR1[Qoff] in the DDR3 parts in the selected ranks
                                            during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK,INIT_STATUS] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            The MR1[Qoff] value must be 0 in all the DDR3
                                            parts attached to all ranks during normal operation.
<10:10>  TDQS        R/W    0x0      0x0    TDQS Enable
                                            0 = disable
                                            LMC writes this value to MR1[TDQS] in the DDR3 parts in the selected ranks
                                            during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK,INIT_STATUS] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<9:9>    WLEV        RO     0x0      0x0    Write Leveling Enable
                                            0 = disable
                                            LMC writes MR1[Level]=0 in the DDR3 parts in the selected ranks
                                            during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            (Write-leveling can only be initiated via the
                                            write-leveling instruction sequence.)
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK,INIT_STATUS] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<8:7>    AL          R/W    0x0      0x0    Additive Latency
                                            00 = 0
                                            01 = CL-1
                                            10 = CL-2
                                            11 = Reserved
                                            LMC writes this value to MR1[AL] in the selected DDR3 parts
                                            during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            This value must equal the MR1[AL] value in all the DDR3
                                            parts attached to all ranks during normal operation.
                                            See also LMC*_CONTROL[POCAS].
                                            *DON'T PUT IN HRM*
<6:6>    DLL         R/W    0x0      0x0    DLL Enable
                                            0 = enable
                                            1 = disable.
                                            LMC writes this value to MR1[DLL] in the selected DDR3 parts
                                            during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            This value must equal the MR1[DLL] value in all the DDR3
                                            parts attached to all ranks during normal operation.
                                            In dll-off mode, CL/CWL must be programmed
                                            equal to 6/6, respectively, as per the DDR3 specifications.
<5:5>    MPR         R/W    0x0      0x0    MPR
                                            LMC writes this value to MR3[MPR] in the selected DDR3 parts
                                            during power-up/init, read-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh exit instruction sequences.
                                            (LMC also writes MR3[MPR]=1 at the beginning of the
                                            read-leveling instruction sequence. Read-leveling should only be initiated via the
                                            read-leveling instruction sequence.)
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            The MR3[MPR] value must be 0 in all the DDR3
                                            parts attached to all ranks during normal operation.
<4:3>    MPRLOC      R/W    0x0      0x0    MPR Location
                                            LMC writes this value to MR3[MPRLoc] in the selected DDR3 parts
                                            during power-up/init, read-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh exit instruction sequences.
                                            (LMC also writes MR3[MPRLoc]=0 at the beginning of the
                                            read-leveling instruction sequence.)
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            The MR3[MPRLoc] value must be 0 in all the DDR3
                                            parts attached to all ranks during normal operation.
<2:0>    CWL         R/W    0x0      0x0    CAS Write Latency
                                            000: 5
                                            001: 6
                                            010: 7
                                            011: 8
                                            100: 9
                                            101: 10
                                            110: 11
                                            111: 12
                                            LMC writes this value to MR2[CWL] in the selected DDR3 parts
                                            during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            This value must equal the MR2[CWL] value in all the DDR3
                                            parts attached to all ranks during normal operation.

Notes:
 These parameters are written into the DDR3 MR0, MR1, MR2 and MR3 registers.

----------------------------------------------------------------------------------------------------
===

 *

     ==============================================================
     LMC(0..3)_MODEREG_PARAMS1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48>  NS          RAZ     NS      NS     RESERVED

<47:45>  RTT_NOM_11  R/W    0x0      0x0    RTT_NOM Rank 3
                                            LMC writes this value to MR1[Rtt_Nom] in the rank 3 (i.e. DIMM1_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            Per JEDEC DDR3 specifications, if RTT_Nom is used during writes,
                                            only values MR1[Rtt_Nom] = 1 (RQZ/4), 2 (RQZ/2), or 3 (RQZ/6) are allowed.
                                            Otherwise, values MR1[Rtt_Nom] = 4 (RQZ/12) and 5 (RQZ/8) are also allowed.
<44:43>  DIC_11      R/W    0x0      0x0    Output Driver Impedance Control Rank 3
                                            LMC writes this value to MR1[D.I.C.] in the rank 3 (i.e. DIMM1_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<42:41>  RTT_WR_11   R/W    0x0      0x0    RTT_WR Rank 3
                                            LMC writes this value to MR2[Rtt_WR] in the rank 3 (i.e. DIMM1_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<40:40>  SRT_11      R/W    0x0      0x0    Self-refresh temperature range Rank 3
                                            LMC writes this value to MR2[SRT] in the rank 3 (i.e. DIMM1_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<39:39>  ASR_11      R/W    0x0      0x0    Auto self-refresh Rank 3
                                            LMC writes this value to MR2[ASR] in the rank 3 (i.e. DIMM1_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<38:36>  PASR_11     R/W    0x0      0x0    Partial array self-refresh Rank 3
                                            LMC writes this value to MR2[PASR] in the rank 3 (i.e. DIMM1_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].

<35:33>  RTT_NOM_10  R/W    0x0      0x0    RTT_NOM Rank 2
                                            LMC writes this value to MR1[Rtt_Nom] in the rank 2 (i.e. DIMM1_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            Per JEDEC DDR3 specifications, if RTT_Nom is used during writes,
                                            only values MR1[Rtt_Nom] = 1 (RQZ/4), 2 (RQZ/2), or 3 (RQZ/6) are allowed.
                                            Otherwise, values MR1[Rtt_Nom] = 4 (RQZ/12) and 5 (RQZ/8) are also allowed.
<32:31>  DIC_10      R/W    0x0      0x0    Output Driver Impedance Control Rank 2
                                            LMC writes this value to MR1[D.I.C.] in the rank 2 (i.e. DIMM1_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<30:29>  RTT_WR_10   R/W    0x0      0x0    RTT_WR Rank 2
                                            LMC writes this value to MR2[Rtt_WR] in the rank 2 (i.e. DIMM1_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<28:28>  SRT_10      R/W    0x0      0x0    Self-refresh temperature range Rank 2
                                            LMC writes this value to MR2[SRT] in the rank 2 (i.e. DIMM1_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<27:27>  ASR_10      R/W    0x0      0x0    Auto self-refresh Rank 2
                                            LMC writes this value to MR2[ASR] in the rank 2 (i.e. DIMM1_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<26:24>  PASR_10     R/W    0x0      0x0    Partial array self-refresh Rank 2
                                            LMC writes this value to MR2[PASR] in the rank 2 (i.e. DIMM1_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].

<23:21>  RTT_NOM_01  R/W    0x0      0x0    RTT_NOM Rank 1
                                            LMC writes this value to MR1[Rtt_Nom] in the rank 1 (i.e. DIMM0_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            Per JEDEC DDR3 specifications, if RTT_Nom is used during writes,
                                            only values MR1[Rtt_Nom] = 1 (RQZ/4), 2 (RQZ/2), or 3 (RQZ/6) are allowed.
                                            Otherwise, values MR1[Rtt_Nom] = 4 (RQZ/12) and 5 (RQZ/8) are also allowed.
<20:19>  DIC_01      R/W    0x0      0x0    Output Driver Impedance Control Rank 1
                                            LMC writes this value to MR1[D.I.C.] in the rank 1 (i.e. DIMM0_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<18:17>  RTT_WR_01   R/W    0x0      0x0    RTT_WR Rank 1
                                            LMC writes this value to MR2[Rtt_WR] in the rank 1 (i.e. DIMM0_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<16:16>  SRT_01      R/W    0x0      0x0    Self-refresh temperature range Rank 1
                                            LMC writes this value to MR2[SRT] in the rank 1 (i.e. DIMM0_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<15:15>  ASR_01      R/W    0x0      0x0    Auto self-refresh Rank 1
                                            LMC writes this value to MR2[ASR] in the rank 1 (i.e. DIMM0_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<14:12>  PASR_01     R/W    0x0      0x0    Partial array self-refresh Rank 1
                                            LMC writes this value to MR2[PASR] in the rank 1 (i.e. DIMM0_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].

<11:9>   RTT_NOM_00  R/W    0x0      0x0    RTT_NOM Rank 0
                                            LMC writes this value to MR1[Rtt_Nom] in the rank 0 (i.e. DIMM0_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            Per JEDEC DDR3 specifications, if RTT_Nom is used during writes,
                                            only values MR1[Rtt_Nom] = 1 (RQZ/4), 2 (RQZ/2), or 3 (RQZ/6) are allowed.
                                            Otherwise, values MR1[Rtt_Nom] = 4 (RQZ/12) and 5 (RQZ/8) are also allowed.
<8:7>    DIC_00      R/W    0x0      0x0    Output Driver Impedance Control Rank 0
                                            LMC writes this value to MR1[D.I.C.] in the rank 0 (i.e. DIMM0_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<6:5>    RTT_WR_00   R/W    0x0      0x0    RTT_WR Rank 0
                                            LMC writes this value to MR2[Rtt_WR] in the rank 0 (i.e. DIMM0_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<4:4>    SRT_00      R/W    0x0      0x0    Self-refresh temperature range Rank 0
                                            LMC writes this value to MR2[SRT] in the rank 0 (i.e. DIMM0_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<3:3>    ASR_00      R/W    0x0      0x0    Auto self-refresh Rank 0
                                            LMC writes this value to MR2[ASR] in the rank 0 (i.e. DIMM0_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<2:0>    PASR_00     R/W    0x0      0x0    Partial array self-refresh Rank 0
                                            LMC writes this value to MR2[PASR] in the rank 0 (i.e. DIMM0_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].

Notes:
 These parameters are written into the DDR3 MR0, MR1, MR2 and MR3 registers.

----------------------------------------------------------------------------------------------------
===

 *
 *                    LMC_WODT_MASK = LMC Write OnDieTermination mask
 * System designers may desire to terminate DQ/DQS lines for higher frequency DDR operations
 * especially on a multi-rank system. DDR3 DQ/DQS I/O's have built in
 * Termination resistor that can be turned on or off by the controller, after meeting tAOND and tAOF
 * timing requirements. Each Rank has its own ODT pin that fans out to all the memory parts
 * in that DIMM. System designers may prefer different combinations of ODT ON's for writes
 * into different ranks. Octeon supports full programmability by way of the mask register below.
 * Each Rank position has its own 8-bit programmable field.
 * When the controller does a write to that rank, it sets the 4 ODT pins to the MASK pins below.
 * For eg., When doing a write into Rank0, a system designer may desire to terminate the lines
 * with the resistor on DIMM0/Rank1. The mask WODT_D0_R0 would then be {00000010}.
 * Octeon drives the appropriate mask values on the ODT pins by default. If this feature is not
 * required, write 0 in this register.
 *

     ==============================================================
     LMC(0..3)_WODT_MASK Type=RSL
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:56>  WODT_D3_R1  R/W    0xff    0x0     Write ODT mask DIMM3, RANK1/DIMM3 in SingleRanked
                                            *UNUSED IN 6xxx, and MBZ*
<55:48>  WODT_D3_R0  R/W    0xff    0x0     Write ODT mask DIMM3, RANK0
                                            *UNUSED IN 6xxx, and MBZ*
<47:40>  WODT_D2_R1  R/W    0xff    0x0     Write ODT mask DIMM2, RANK1/DIMM2 in SingleRanked
                                            *UNUSED IN 6xxx, and MBZ*
<39:32>  WODT_D2_R0  R/W    0xff    0x0     Write ODT mask DIMM2, RANK0
                                            *UNUSED IN 6xxx, and MBZ*
<31:24>  WODT_D1_R1  R/W    0xff    NS      Write ODT mask DIMM1, RANK1/DIMM1 in SingleRanked
                                            if (!RANK_ENA) then WODT_D1_R1[3:0] MBZ
                                            *Upper 4 bits UNUSED IN 6xxx, and MBZ*
<23:16>  WODT_D1_R0  R/W    0xff    NS      Write ODT mask DIMM1, RANK0
                                            if (!RANK_ENA) then WODT_D1_R0[3,1] MBZ
                                            *Upper 4 bits UNUSED IN 6xxx, and MBZ*
<15:8>   WODT_D0_R1  R/W    0xff    NS      Write ODT mask DIMM0, RANK1/DIMM0 in SingleRanked
                                            if (!RANK_ENA) then WODT_D0_R1[3:0] MBZ
                                            *Upper 4 bits UNUSED IN 6xxx, and MBZ*
<7:0>    WODT_D0_R0  R/W    0xff    NS      Write ODT mask DIMM0, RANK0
                                            if (!RANK_ENA) then WODT_D0_R0[3,1] MBZ
                                            *Upper 4 bits UNUSED IN 6xxx, and MBZ*

Notes:

When a given RANK is selected, the WODT mask for that RANK is used.  The resulting WODT mask is
driven to the DIMMs in the following manner:
	    RANK_ENA=1                    RANK_ENA=0
Mask[3] -> DIMM1_ODT_1                     MBZ
Mask[2] -> DIMM1_ODT_0                     DIMM1_ODT_0
Mask[1] -> DIMM0_ODT_1                     MBZ
Mask[0] -> DIMM0_ODT_0                     DIMM0_ODT_0

LMC always writes entire cache blocks and always writes them via two consecutive
write CAS operations to the same rank+bank+row spaced exactly 4 CK's apart.
When a WODT mask bit is set, LMC asserts the OCTEON ODT output
pin(s) starting the same CK as the first write CAS operation. Then, OCTEON
normally continues to assert the ODT output pin(s) for 9+LMC*_CONTROL[WODT_BPRCH] more CK's
- for a total of 10+LMC*_CONTROL[WODT_BPRCH] CK's for the entire cache block write -
through the second write CAS operation of the cache block,
satisfying the 6 CK DDR3 ODTH8 requirements.
But it is possible for OCTEON to issue two cache block writes separated by as few as
WtW = 8 or 9 (10 if LMC*_CONTROL[WODT_BPRCH]=1) CK's. In that case, OCTEON asserts the ODT output pin(s)
for the WODT mask of the first cache block write for WtW CK's, then asserts
the ODT output pin(s) for the WODT mask of the second cache block write for 10+LMC*_CONTROL[WODT_BPRCH] CK's
(or less if a third cache block write follows within 8 or 9 (or 10) CK's of this second cache block write).
Note that it may be necessary to force LMC to space back-to-back cache block writes
to different ranks apart by at least 10+LMC*_CONTROL[WODT_BPRCH] CK's to prevent DDR3 ODTH8 violations.
----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_COMP_CTL2 = LMC Compensation control
 *

     ==============================================================
     LMC(0..3)_COMP_CTL2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:34>  NS           RAZ     NS      NS    RESERVED
<33:30>  DDR__PTUNE   RO      NS      NS    DDR PCTL from compensation circuit
                                            The encoded value provides debug information for the
                                            compensation impedance on P-pullup
<29:26>  DDR__NTUNE   RO      NS      NS    DDR NCTL from compensation circuit
                                            The encoded value provides debug information for the
                                            compensation impedance on N-pulldown
<25:25>  M180         R/W     0x0     NS    Cap impedance at 180 Ohm (instead of 240 Ohm)
                                            *DON'T PUT IN HRM*
<24:24>  BYP          R/W     0x0     NS    Bypass mode
                                            When set, PTUNE,NTUNE are the compensation setting.
                                            When clear, DDR_PTUNE,DDR_NTUNE are the compensation setting.
<23:20>  PTUNE        R/W     0x0     NS    PCTL impedance control in bypass mode
<19:16>  NTUNE        R/W     0x0     NS    NCTL impedance control in bypass mode

<15:12> RODT_CTL      R/W      0x0    NS    NCTL RODT impedance control bits
	                                    This field controls ODT values during a memory read
                                            on the Octeon side
                                            0000 = No ODT
                                            0001 = 20 ohm
                                            0010 = 30 ohm
                                            0011 = 40 ohm
                                            0100 = 60 ohm
                                            0101 = 120 ohm
                                            0110-1111 = Reserved
<11:8>  CMD_CTL       R/W      0x4    NS    Drive strength control for CMD/A/RESET_L drivers
                                            0001 = 24 ohm
                                            0010 = 26.67 ohm
                                            0011 = 30 ohm
                                            0100 = 34.3 ohm
                                            0101 = 40 ohm
                                            0110 = 48 ohm
                                            0111 = 60 ohm
                                            0000,1000-1111 = Reserved
<7:4>   CK_CTL        R/W     0x4     NS    Drive strength control for CK/CS*_L/ODT/CKE* drivers
                                            0001 = 24 ohm
                                            0010 = 26.67 ohm
                                            0011 = 30 ohm
                                            0100 = 34.3 ohm
                                            0101 = 40 ohm
                                            0110 = 48 ohm
                                            0111 = 60 ohm
                                            0000,1000-1111 = Reserved
<3:0>    DQX_CTL      R/W     0x4     NS    Drive strength control for DQ/DQS drivers
                                            0001 = 24 ohm
                                            0010 = 26.67 ohm
                                            0011 = 30 ohm
                                            0100 = 34.3 ohm
                                            0101 = 40 ohm
                                            0110 = 48 ohm
                                            0111 = 60 ohm
                                            0000,1000-1111 = Reserved
----------------------------------------------------------------------------------------------------
===
 *

     ==============================================================
     LMC(0..3)_RLEVEL_RANK(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> NS       RAZ       NS          NS       RESERVED
 <55:54> STATUS   RO        0x0         NS       Indicates status of the read-levelling and where
                                                 the BYTE* programmings in <35:0> came from:
                                                 0 = BYTE* values are their reset value
                                                 1 = BYTE* values were set via a CSR write to this register
                                                 2 = read-leveling sequence currently in progress (BYTE* values are unpredictable)
                                                 3 = BYTE* values came from a complete read-leveling sequence
 <53:48> BYTE8    R/W       0x0         NS       Deskew setting
                                                 When ECC DRAM is not present (i.e. when DRAM is not
                                                 attached to chip signals DDR_CBS_0_* and DDR_CB[7:0]),
                                                 SW should write BYTE8 to a value that does
                                                 not increase the range of possible BYTE* values. The
                                                 easiest way to do this is to set
                                                 LMC*_RLEVEL_RANK*[BYTE8] = LMC*_RLEVEL_RANK*[BYTE0]
                                                 when there is no ECC DRAM, using the final BYTE0 value.
 <47:42> BYTE7    R/W       0x0         NS       Deskew setting
 <41:36> BYTE6    R/W       0x0         NS       Deskew setting
 <35:30> BYTE5    R/W       0x0         NS       Deskew setting
 <29:24> BYTE4    R/W       0x0         NS       Deskew setting
 <23:18> BYTE3    R/W       0x0         NS       Deskew setting
 <17:12> BYTE2    R/W       0x0         NS       Deskew setting
 <11:6>  BYTE1    R/W       0x0         NS       Deskew setting
 <5:0>   BYTE0    R/W       0x0         NS       Deskew setting

Notes:
  This is four CSRs per LMC, one per each rank.

  Deskew setting is measured in units of 1/4 CK, so the above BYTE* values can range over 16 CKs.

  Each CSR is written by HW during a read-leveling sequence for the rank. (HW sets STATUS==3 after HW read-leveling completes for the rank.)
  If HW is unable to find a match per LMC*_RLEVEL_CTL[OFFSET_ENA] and LMC*_RLEVEL_CTL[OFFSET], then HW will set LMC*_RLEVEL_RANKi[BYTE*<5:0>]
  to  0.

  Each CSR may also be written by SW, but not while a read-leveling sequence is in progress. (HW sets STATUS==1 after a CSR write.)

  SW initiates a HW read-leveling sequence by programming LMC*_RLEVEL_CTL and writing INIT_START=1 with SEQUENCE=1.
  See LMC*_RLEVEL_CTL.

  LMC*_RLEVEL_RANKi values for ranks i without attached DRAM should be set such that
  they do not increase the range of possible BYTE values for any byte
  lane. The easiest way to do this is to set
      LMC*_RLEVEL_RANKi = LMC*_RLEVEL_RANKj,
  where j is some rank with attached DRAM whose LMC*_RLEVEL_RANKj is already fully initialized.
----------------------------------------------------------------------------------------------------
===

 *

     ==============================================================
     LMC(0..3)_RLEVEL_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:22> NS       RAZ      NS          NS        RESERVED
 <21>    DELAY_UNLOAD_3 R/W  0x0       0x1       When set, unload the PHY silo one cycle later
                                                 during read-leveling if LMC*_RLEVEL_RANKi[BYTE*<1:0>] = 3
                                                 DELAY_UNLOAD_3 should normally be set, particularly at higher speeds.
 <20>    DELAY_UNLOAD_2 R/W  0x0       0x0       When set, unload the PHY silo one cycle later
                                                 during read-leveling if LMC*_RLEVEL_RANKi[BYTE*<1:0>] = 2
                                                 DELAY_UNLOAD_2 should normally not be set.
 <19>    DELAY_UNLOAD_1 R/W  0x0       0x0       When set, unload the PHY silo one cycle later
                                                 during read-leveling if LMC*_RLEVEL_RANKi[BYTE*<1:0>] = 1
                                                 DELAY_UNLOAD_1 should normally not be set.
 <18>    DELAY_UNLOAD_0 R/W  0x0       0x0       When set, unload the PHY silo one cycle later
                                                 during read-leveling if LMC*_RLEVEL_RANKi[BYTE*<1:0>] = 0
                                                 DELAY_UNLOAD_0 should normally not be set.
 <17:10> BITMASK  R/W      0x0         0x0       Mask to select bit lanes on which read-leveling
                                                 feedback is returned when OR_DIS is set to 1
 <9>     OR_DIS   R/W      0x0         0x0       Disable or'ing of bits in a byte lane when computing
                                                 the read-leveling bitmask
                                                 OR_DIS should normally not be set.
 <8>     OFFSET_EN R/W     0x1         0x1       When set, LMC attempts to select the read-leveling
                                                 setting that is LMC*RLEVEL_CTL[OFFSET] settings earlier than the
                                                 last passing read-leveling setting in the largest
                                                 contiguous sequence of passing settings.
                                                 When clear, or if the setting selected by LMC*RLEVEL_CTL[OFFSET]
                                                 did not pass, LMC selects the middle setting in the
                                                 largest contiguous sequence of passing settings,
                                                 rounding earlier when necessary.
 <7:4>   OFFSET   R/W      0x2         0x2       The offset used when LMC*RLEVEL_CTL[OFFSET] is set
 <3:0>   BYTE     R/W      0x0         NS        0 <= BYTE <= 8
                                                 Byte index for which bitmask results are saved
                                                 in LMC*_RLEVEL_DBG
Notes:
----------------------------------------------------------------------------------------------------
===

 *

     ==============================================================
     LMC(0..3)_RLEVEL_DBG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  BITMASK  RO       0x0         0x0       Bitmask generated during deskew settings sweep
                                                 BITMASK[n]=0 means deskew setting n failed
                                                 BITMASK[n]=1 means deskew setting n passed
                                                 for 0 <= n <= 63
Notes:
  A given read of LMC*_RLEVEL_DBG returns the read-leveling pass/fail results for all possible
  delay settings (i.e. the BITMASK) for only one byte in the last rank that the HW read-leveled.
  LMC*_RLEVEL_CTL[BYTE] selects the particular byte.

  To get these pass/fail results for another different rank, you must run the hardware read-leveling
  again. For example, it is possible to get the BITMASK results for every byte of every rank
  if you run read-leveling separately for each rank, probing LMC*_RLEVEL_DBG between each
  read-leveling.
----------------------------------------------------------------------------------------------------
===

 *

     ==============================================================
     LMC(0..3)_WLEVEL_RANK(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:47> NS       RAZ       NS          NS       RESERVED
 <46:45> STATUS   RO        0x0         NS       Indicates status of the write-leveling and where
                                                 the BYTE* programmings in <44:0> came from:
                                                 0 = BYTE* values are their reset value
                                                 1 = BYTE* values were set via a CSR write to this register
                                                 2 = write-leveling sequence currently in progress (BYTE* values are unpredictable)
                                                 3 = BYTE* values came from a complete write-leveling sequence, irrespective of
                                                     which lanes are masked via LMC*WLEVEL_CTL[LANEMASK]
 <44:40> BYTE8    R/W       0x0         NS       Deskew setting
                                                 Bit 0 of BYTE8 must be zero during normal operation.
                                                 When ECC DRAM is not present (i.e. when DRAM is not
                                                 attached to chip signals DDR_CBS_0_* and DDR_CB[7:0]),
                                                 SW should write BYTE8 with a value that does
                                                 not increase the range of possible BYTE* values. The
                                                 easiest way to do this is to set
                                                 LMC*_WLEVEL_RANK*[BYTE8] = LMC*_WLEVEL_RANK*[BYTE0]
                                                 when there is no ECC DRAM, using the final BYTE0 value.
 <39:35> BYTE7    R/W       0x0         NS       Deskew setting
                                                 Bit 0 of BYTE7 must be zero during normal operation
 <34:30> BYTE6    R/W       0x0         NS       Deskew setting
                                                 Bit 0 of BYTE6 must be zero during normal operation
 <29:25> BYTE5    R/W       0x0         NS       Deskew setting
                                                 Bit 0 of BYTE5 must be zero during normal operation
 <24:20> BYTE4    R/W       0x0         NS       Deskew setting
                                                 Bit 0 of BYTE4 must be zero during normal operation
 <19:15> BYTE3    R/W       0x0         NS       Deskew setting
                                                 Bit 0 of BYTE3 must be zero during normal operation
 <14:10> BYTE2    R/W       0x0         NS       Deskew setting
                                                 Bit 0 of BYTE2 must be zero during normal operation
 <9:5>   BYTE1    R/W       0x0         NS       Deskew setting
                                                 Bit 0 of BYTE1 must be zero during normal operation
 <4:0>   BYTE0    R/W       0x0         NS       Deskew setting
                                                 Bit 0 of BYTE0 must be zero during normal operation

Notes:
  This is four CSRs per LMC, one per each rank.

  Deskew setting is measured in units of 1/8 CK, so the above BYTE* values can range over 4 CKs.

  Assuming LMC*_WLEVEL_CTL[SSET]=0, the BYTE*<2:0> values are not used during write-leveling, and
  they are over-written by the hardware as part of the write-leveling sequence. (HW sets STATUS==3
  after HW write-leveling completes for the rank). SW needs to set BYTE*<4:3> bits.

  Each CSR may also be written by SW, but not while a write-leveling sequence is in progress. (HW sets STATUS==1 after a CSR write.)

  SW initiates a HW write-leveling sequence by programming LMC*_WLEVEL_CTL and writing RANKMASK and INIT_START=1 with SEQUENCE=6 in LMC*_CONFIG.
  LMC will then step through and accumulate write leveling results for 8 unique delay settings (twice), starting at a delay of
  LMC*_WLEVEL_RANKn[BYTE*<4:3>]*8 CK increasing by 1/8 CK each setting. HW will then set LMC*_WLEVEL_RANKi[BYTE*<2:0>] to indicate the
  first write leveling result of '1' that followed a reslt of '0' during the sequence by searching for a '1100' pattern in the generated
  bitmask, except that LMC will always write LMC*_WLEVEL_RANKi[BYTE*<0>]=0. If HW is unable to find a match for a '1100' pattern, then HW will
  set LMC*_WLEVEL_RANKi[BYTE*<2:0>] to 4.
  See LMC*_WLEVEL_CTL.

  LMC*_WLEVEL_RANKi values for ranks i without attached DRAM should be set such that
  they do not increase the range of possible BYTE values for any byte
  lane. The easiest way to do this is to set
      LMC*_WLEVEL_RANKi = LMC*_WLEVEL_RANKj,
  where j is some rank with attached DRAM whose LMC*_WLEVEL_RANKj is already fully initialized.
----------------------------------------------------------------------------------------------------
===

 *

     ==============================================================
     LMC(0..3)_WLEVEL_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:22> NS       RAZ      NS          NS        RESERVED
 <21:19> RTT_NOM  R/W      0x0        0x0        RTT_NOM
                                                 LMC writes a decoded value to MR1[Rtt_Nom] of the rank during
                                                 write leveling. Per JEDEC DDR3 specifications,
                                                 only values MR1[Rtt_Nom] = 1 (RQZ/4), 2 (RQZ/2), or 3 (RQZ/6)
                                                 are allowed during write leveling with output buffer enabled.
				                 000 : LMC writes 001 (RZQ/4)   to MR1[Rtt_Nom]
				                 001 : LMC writes 010 (RZQ/2)   to MR1[Rtt_Nom]
				                 010 : LMC writes 011 (RZQ/6)   to MR1[Rtt_Nom]
				                 011 : LMC writes 100 (RZQ/12)  to MR1[Rtt_Nom]
				                 100 : LMC writes 101 (RZQ/8)   to MR1[Rtt_Nom]
				                 101 : LMC writes 110 (Rsvd)    to MR1[Rtt_Nom]
				                 110 : LMC writes 111 (Rsvd)    to  MR1[Rtt_Nom]
				                 111 : LMC writes 000 (Disabled) to MR1[Rtt_Nom]
 <18:11> BITMASK  R/W      0x0         NS        Mask to select bit lanes on which write-leveling
                                                 feedback is returned when OR_DIS is set to 1
 <10>    OR_DIS   R/W      0x0         NS        Disable or'ing of bits in a byte lane when computing
                                                 the write-leveling bitmask
 <9>     SSET     R/W      0x0         NS        Run write-leveling on the current setting only.
 <8:0>   LANEMASK R/W      0x0         NS        One-hot mask to select byte lane to be leveled by
                                                 the write-leveling sequence
                                                 Used with x16 parts where the upper and lower byte
                                                 lanes need to be leveled independently
Notes:
----------------------------------------------------------------------------------------------------
===

 *

     ==============================================================
     LMC(0..3)_WLEVEL_DBG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:12> NS       RAZ       NS          NS       RESERVED
 <11:4>  BITMASK  RO       0x0         0x0       Bitmask generated during deskew settings sweep
                                                 if LMCX_WLEVEL_CTL[SSET]=0
                                                   BITMASK[n]=0 means deskew setting n failed
                                                   BITMASK[n]=1 means deskew setting n passed
                                                   for 0 <= n <= 7
                                                   BITMASK contains the first 8 results of the total 16
                                                   collected by LMC during the write-leveling sequence
                                                 else if LMCX_WLEVEL_CTL[SSET]=1
                                                   BITMASK[0]=0 means curr deskew setting failed
                                                   BITMASK[0]=1 means curr deskew setting passed

 <3:0>   BYTE     R/W      0x0         0x0       0 <= BYTE <= 8

Notes:
  A given write of LMC*_WLEVEL_DBG returns the write-leveling pass/fail results for all possible
  delay settings (i.e. the BITMASK) for only one byte in the last rank that the HW write-leveled.
  LMC*_WLEVEL_DBG[BYTE] selects the particular byte.
  To get these pass/fail results for another different rank, you must run the hardware write-leveling
  again. For example, it is possible to get the BITMASK results for every byte of every rank
  if you run write-leveling separately for each rank, probing LMC*_WLEVEL_DBG between each
  write-leveling.
----------------------------------------------------------------------------------------------------
===

 *
 *                    LMC_FADR = LMC Failing Address Register (SEC/DED/NXM)
 *
 *This register only captures the first transaction with ecc/nxm errors. A DED/NXM error can
 *over-write this register with its failing addresses if the first error was a SEC. If you write
 *LMC*_CONFIG->SEC_ERR/DED_ERR/NXM_ERR then it will clear the error bits and capture the
 *next failing address.
 *
 *If FDIMM is 2 that means the error is in the higher bits DIMM.

     ==============================================================
     LMC(0..3)_FADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>   FCOL        RO      0       0      Failing Column Address[13:0]
                                            Technically, represents the address of the 128b data
                                            that had an ecc error, i.e., fcol[0] is always 0. Can
                                            be used in conjuction with LMC*_CONFIG[DED_ERR] to
                                            isolate the 64b chunk of data in error
<29:14>  FROW        RO      0       0      Failing Row Address[15:0]
<32:30>  FBANK       RO      0       0      Failing Bank[2:0]
<33>     FBUNK       RO      0       0      Failing Rank
<35:34>  FDIMM       RO      0       0      Failing DIMM#
<63:36>  NS          RAZ     NS      NS     RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_ECC_SYND = MRD ECC Syndromes
 *

     ==============================================================
     LMC(0..3)_ECC_SYND Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    MRDSYN0     RO      0       0      MRD ECC Syndrome Quad0
                                            MRDSYN0 corresponds to DQ[63:0]_c0_p0
                                              where _cC_pP denotes cycle C and phase P
<15:8>   MRDSYN1     RO      0       0      MRD ECC Syndrome Quad1
                                            MRDSYN1 corresponds to DQ[63:0]_c0_p1
                                              where _cC_pP denotes cycle C and phase P
<23:16>  MRDSYN2     RO      0       0      MRD ECC Syndrome Quad2
                                            MRDSYN2 corresponds to DQ[63:0]_c1_p0
                                              where _cC_pP denotes cycle C and phase P
<31:24>  MRDSYN3     RO      0       0      MRD ECC Syndrome Quad3
                                            MRDSYN3 corresponds to DQ[63:0]_c1_p1
                                              where _cC_pP denotes cycle C and phase P
<63:32>  NS          RAZ     NS      NS     RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  LMC_IFB_CNT  = Performance Counters
 *

     ==============================================================
     LMC(0..3)_IFB_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   IFBCNT      RO      1      NS      Performance Counter
                                            64-bit counter that increments every
                                            CK cycle there is something in the in-flight buffer.
----------------------------------------------------------------------------------------------------
===
 *
 *                  LMC_OPS_CNT  = Performance Counters
 *

     ==============================================================
     LMC(0..3)_OPS_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   OPSCNT      RO      1      NS      Performance Counter
                                            64-bit counter that increments when the DDR3 data bus
                                            is being used
                                            DRAM bus utilization = LMC*_OPS_CNT/LMC*_DCLK_CNT
----------------------------------------------------------------------------------------------------
===
 *
 *                  LMC_DCLK_CNT  = Performance Counters
 *

     ==============================================================
     LMC(0..3)_DCLK_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   DCLKCNT     RO      0      NS      Performance Counter
                                            64-bit counter that increments every CK cycle
----------------------------------------------------------------------------------------------------
===
 *
 *                  LMC_DUAL_MEMCFG = LMC Dual Memory Configuration Register
 *
 * This register controls certain parameters of Dual Memory Configuration
 *

     ==============================================================
     LMC(0..3)_DUAL_MEMCFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:19> NS           RAZ     NS     NS      RESERVED
<18:16> ROW_LSB      R/W    0x3     NS      See LMC*_CONFIG[ROW_LSB]
<15:8>  NS           RAZ     NS     NS      RESERVED
<7:0>   CS_MASK      R/W    0x0     NS      Chip select mask.
                                            This mask corresponds to the 8 chip selects for a memory
                                            configuration.  Each reference address will assert one of
                                            the chip selects.  If that chip select has its
                                            corresponding CS_MASK bit set, then the "config1"
                                            parameters are used, otherwise the "config0" parameters
                                            are used.  See additional notes below.
                                            [7:4] *UNUSED IN 6xxx*

Notes:
 This register enables the design to have two, separate memory configurations, selected dynamically
 by the reference address.  Note however, that both configurations share
 LMC*_CONTROL[XOR_BANK], LMC*_CONFIG[PBANK_LSB], LMC*_CONFIG[RANK_ENA], and all timing parameters.
 In this description, "config0" refers to the normal memory configuration that is defined by the
 LMC*_CONFIG[ROW_LSB] parameters and "config1" refers to the dual (or second)
 memory configuration that is defined by this register.

 Enable mask to chip select mapping is shown below:
   CS_MASK[3] -> DIMM1_CS_<1>
   CS_MASK[2] -> DIMM1_CS_<0>

   CS_MASK[1] -> DIMM0_CS_<1>
   CS_MASK[0] -> DIMM0_CS_<0>

  DIMM n uses the pair of chip selects DIMMn_CS_<1:0>.

  Programming restrictions for CS_MASK:
    when LMC*_CONFIG[RANK_ENA] == 0, CS_MASK[2n + 1] = CS_MASK[2n]

----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_DLL_CTL2 = LMC (Octeon) DLL control and DCLK reset
 *

     ==============================================================
     LMC(0..3)_DLL_CTL2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    BYP_SETTING R/W    0x0     0x0     Bypass setting
                                            DDR3-1600: 00100010
                                            DDR3-1333: 00110010
                                            DDR3-1066: 01001011
                                            DDR3-800 : 01110101
                                            DDR3-667 : 10010110
                                            DDR3-600 : 10101100
                                            *DON'T PUT IN HRM*

<11:8>   BYP_SEL     R/W    0x0     0x0     Bypass select
                                            0000 : no byte
                                            0001 : byte 0
                                            ...
                                            1001 : byte 8
                                            1010 : all bytes
                                            1011-1111 : Reserved
                                            *DON'T PUT IN HRM*

<12>     QUAD_DLL_ENA R/W   0x0     0x0     DLL Enable

<13>     DRESET       R/W   0x1     0x0     Dclk domain reset.  The reset signal that is used by the
                                            Dclk domain is (DRESET || ECLK_RESET).

<14>     DLL_BRINGUP  R/W   0x0     0x0     DLL Bringup
<15>     INTF_EN    R/W     0x0     NS      Interface Enable
<63:16>  NS          RAZ    NS      NS      RESERVED

Notes:
DLL Bringup sequence:
1. If not done already, set LMC*_DLL_CTL2 = 0, except when LMC*_DLL_CTL2[DRESET] = 1.
2. Write 1 to LMC*_DLL_CTL2[DLL_BRINGUP]
3. Wait for 10 CK cycles, then write 1 to LMC*_DLL_CTL2[QUAD_DLL_ENA]. It may not be feasible to count 10 CK cycles, but the
   idea is to configure the delay line into DLL mode by asserting DLL_BRING_UP earlier than [QUAD_DLL_ENA], even if it is one
   cycle early. LMC*_DLL_CTL2[QUAD_DLL_ENA] must not change after this point without restarting the LMC and/or DRESET initialization
   sequence.
4. Read L2D_BST0 and wait for the result. (L2D_BST0 is subject to change depending on how it called in o63. It is still ok to go
   without step 4, since step 5 has enough time)
5. Wait 10 us.
6. Write 0 to LMC*_DLL_CTL2[DLL_BRINGUP]. LMC*_DLL_CTL2[DLL_BRINGUP] must not change after this point without restarting the LMC
   and/or DRESET initialization sequence.
7. Read L2D_BST0 and wait for the result. (same as step 4, but the idea here is the wait some time before going to step 8, even it
   is one cycle is fine)
8. Write 0 to LMC*_DLL_CTL2[DRESET].  LMC*_DLL_CTL2[DRESET] must not change after this point without restarting the LMC and/or
   DRESET initialization sequence.
----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_PHY_CTL = LMC PHY Control
 *

     ==============================================================
     LMC(0..3)_PHY_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:15>  NS         RAZ     NS      NS      RESERVED
<14>     RX_ALWAYS_ON R/W   0x0     NS      Disable dynamic DDR3 IO Rx power gating
                                            *DON'T PUT IN HRM*
<13>     LV_MODE    R/W     0x0     NS      Low Voltage Mode (1.35V)
                                            *DON'T PUT IN HRM*
<12>     CK_TUNE1   R/W     0x0     NS      Clock Tune
                                            *DON'T PUT IN HRM*
<11:8>   CK_DLYOUT1 R/W     0x0     NS      Clock delay out setting
                                            *DON'T PUT IN HRM*
<7>      CK_TUNE0   R/W     0x0     NS      Clock Tune
                                            *DON'T PUT IN HRM*
<6:3>    CK_DLYOUT0 R/W     0x0     NS      Clock delay out setting
                                            *DON'T PUT IN HRM*
<2>      LOOPBACK   R/W     0x0     NS      Loopback enable
                                            *DON'T PUT IN HRM*
<1>      LOOPBACK_POS R/W   0x0     NS      Loopback pos mode
                                            *DON'T PUT IN HRM*
<0>      TS_STAGGER R/W     0x0     NS      TS Staggermode
                                            This mode configures output drivers with 2-stage drive
                                            strength to avoid undershoot issues on the bus when strong
                                            drivers are suddenly turned on. When this mode is asserted,
                                            Octeon will configure output drivers to be weak drivers
                                            (60 ohm output impedance) at the first CK cycle, and
                                            change drivers to the designated drive strengths specified
                                            in $LMC(0..3)_COMP_CTL2 [CMD_CTL/CK_CTL/DQX_CTL] starting
                                            at the following cycle

Notes:
----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_DLL_CTL3 = LMC DLL control and DCLK reset
 *

     ==============================================================
     LMC(0..3)_DLL_CTL3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    OFFSET      R/W    0x0     0x0     Write/read offset setting
                                            [4:0] : offset
	                                    [5]   : 0 = increment, 1 = decrement
                                            Not a 2's complement value
                                            *DON'T PUT IN HRM*
<9:6>    BYTE_SEL    R/W    0x0     0x0     Byte select
                                            0000 : no byte
                                            0001 : byte 0
                                            ...
                                            1001 : byte 8
                                            1010 : all bytes
                                            1011-1111 : Reserved
                                            *DON'T PUT IN HRM*
<11:10>  MODE_SEL    R/W    0x0     0x0     Mode select
                                            00 : reset
                                            01 : write
                                            10 : read
                                            11 : write & read
                                            *DON'T PUT IN HRM*
<12>     LOAD_OFFSET WR0    0x0     0x0     Load offset
                                            0 : disable
                                            1 : load (generates a 1 cycle pulse to the PHY)
                                            This register is oneshot and clears itself each time
                                            it is set
                                            *DON'T PUT IN HRM*
<13>     OFFSET_ENA  R/W    0x0     0x0     Offset enable
                                            0 = disable
                                            1 = enable
                                            *DON'T PUT IN HRM*
<17:14>  DLL90_BYTE_SEL R/W 0x1     0x1     Observe DLL settings for selected byte
                                            0001 : byte 0
                                            ...
                                            1001 : byte 8
                                            0000,1010-1111 : Reserved
<18>     DLL_MODE    R/W    0x0     0x0     DLL Mode
                                            *DON'T PUT IN HRM*
<19>     FINE_TUNE_MODE R/W 0x0     0x1     DLL Fine Tune Mode
                                            0 = disabled
                                            1 = enable.
                                            When enabled, calibrate internal PHY DLL every
                                            LMC*_CONFIG[REF_ZQCS_INT] CK cycles.
<27:20>  DLL90_SETTING RO   NS      NS      Encoded DLL settings. Works in conjuction with
                                            DLL90_BYTE_SEL
                                            *DON'T PUT IN HRM*
<28>     DLL_FAST    RO     NS      NS      DLL lock
                                            0 = DLL locked
                                            *DON'T PUT IN HRM*
<36:29>  DCLK90_BYP_SETTING R/W 0x0  0x0    Bypass Setting for DDR90 Delay Line
<37>     DCLK90_BYP_SEL     R/W 0x0  0x0    Bypass Setting Select for DDR90 Delay Line
<38>     DCLK90_RECAL_DIS   R/W 0x0  0x1    Disable periodic recalibration of DDR90 Delay Line in
<39>     DDR_90_DLY_BYP     R/W 0x0  0x0    Bypass DDR90_DLY in Clock Tree
                                            *DON'T PUT IN HRM*
<40>     DCLK90_FWD          WR0    0x0     0x0     Forward setting
                                            0 : disable
                                            1 : forward (generates a 1 cycle pulse to forward setting)
                                            This register is oneshot and clears itself each time
                                            it is set
                                            *DON'T PUT IN HRM*
<63:41>  NS          RAZ    NS      NS      RESERVED

Notes:
----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_NXM = LMC non-existent memory
 *

     ==============================================================
     LMC(0..3)_NXM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:40>  NS            RAZ     NS     NS     RESERVED
<39:36>  MEM_MSB_D3_R1 R/W    0x0     NS     Max Row MSB for DIMM3, RANK1/DIMM3 in Single Ranked
                                             *UNUSED IN 6xxx*
<35:32>  MEM_MSB_D3_R0 R/W    0x0     NS     Max Row MSB for DIMM3, RANK0
                                             *UNUSED IN 6xxx*
<31:28>  MEM_MSB_D2_R1 R/W    0x0     NS     Max Row MSB for DIMM2, RANK1/DIMM2 in Single Ranked
                                             *UNUSED IN 6xxx*
<27:24>  MEM_MSB_D2_R0 R/W    0x0     NS     Max Row MSB for DIMM2, RANK0
                                             *UNUSED IN 6xxx*
<23:20>  MEM_MSB_D1_R1 R/W    0x0     NS     Max Row MSB for DIMM1, RANK1/DIMM1 in Single Ranked
<19:16>  MEM_MSB_D1_R0 R/W    0x0     NS     Max Row MSB for DIMM1, RANK0
<15:12>  MEM_MSB_D0_R1 R/W    0x0     NS     Max Row MSB for DIMM0, RANK1/DIMM0 in Single Ranked
<11:8>   MEM_MSB_D0_R0 R/W    0x0     NS     Max Row MSB for DIMM0, RANK0
<7:0>    CS_MASK       R/W    0x0     NS     Chip select mask.
                                             This mask corresponds to the 8 chip selects for a memory
                                             configuration.  If LMC*_CONFIG[RANK_ENA]==0 then this
                                             mask must be set in pairs because each reference address
                                             will assert a pair of chip selects.  If the chip
                                             select(s) have a corresponding CS_MASK bit set, then the
                                             reference is to non-existent memory (NXM).  LMC will alias a
                                             NXM read reference to use the lowest, legal chip select(s)
                                             and return 0's. LMC normally discards NXM writes, but will
                                             also alias them when LMC*_CONTROL[NXM_WRITE_EN]=1.
                                             CS_MASK<7:4> MBZ in 6xxx
Notes:
				            Decoding for mem_msb/rank
                                                 0000: mem_msb = mem_adr[25]
                                                 0001: mem_msb = mem_adr[26]
                                                 0010: mem_msb = mem_adr[27]
                                                 0011: mem_msb = mem_adr[28]
                                                 0100: mem_msb = mem_adr[29]
                                                 0101: mem_msb = mem_adr[30]
                                                 0110: mem_msb = mem_adr[31]
                                                 0111: mem_msb = mem_adr[32]
                                                 1000: mem_msb = mem_adr[33]
                                                 1001: mem_msb = mem_adr[34]
                                                 1010-1111 = Reserved
	                                    For example, for a DIMM made of Samsung's k4b1g0846c-f7 1Gb (16M x 8 bit x 8 bank)
                                            DDR3 parts, the column address width = 10, so with
                                            10b of col, 3b of bus, 3b of bank, row_lsb = 16. So, row = mem_adr[29:16] and
                                            mem_msb = 4

                                            Note also that addresses greater the max defined space (pbank_msb) are also treated
                                            as NXM accesses
----------------------------------------------------------------------------------------------------
===
 *
 *                  LMC_INT_EN = LMC Interrupt Enable Register
 *

     ==============================================================
     LMC(0..3)_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>  INTR_NXM_WR_ENA R/W    0       1       Non Write Error Interrupt Enable bit
                                            When set, the memory controller raises a processor
                                            interrupt on detecting an non-existent memory write
<1>  INTR_SEC_ENA   R/W     0       1       ECC Single Error Correct(SEC) Interrupt Enable bit
                                            When set, the memory controller raises a processor
                                            interrupt on detecting a correctable Single Bit ECC
                                            error.
<2>  INTR_DED_ENA   R/W     0       1       ECC Double Error Detect(DED) Interrupt Enable bit
                                            When set, the memory controller raises a processor
                                            interrupt on detecting an uncorrectable Dbl Bit ECC
                                            error.
<63:3>  NS          RAZ     NS      NS      RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  LMC_INT = LMC Interrupt Register
 *

     ==============================================================
     LMC(0..3)_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     NXM_WR_ERR   R/W1C   0x0     0x0    Write to non-existent memory
                                            Write of 1 will clear the corresponding error bit
<4:1>   SEC_ERR      R/W1C   0x0     0x0     Single Error (corrected) of Rd Data
                                             [0] corresponds to DQ[63:0]_c0_p0
                                             [1] corresponds to DQ[63:0]_c0_p1
                                             [2] corresponds to DQ[63:0]_c1_p0
                                             [3] corresponds to DQ[63:0]_c1_p1
                                             where _cC_pP denotes cycle C and phase P
                                             Write of 1 will clear the corresponding error bit
<8:5>   DED_ERR      R/W1C   0x0     0x0     Double Error detected (DED) of Rd Data
                                             [0] corresponds to DQ[63:0]_c0_p0
                                             [1] corresponds to DQ[63:0]_c0_p1
                                             [2] corresponds to DQ[63:0]_c1_p0
                                             [3] corresponds to DQ[63:0]_c1_p1
                                             where _cC_pP denotes cycle C and phase P
                                             Write of 1 will clear the corresponding error bit
<63:9>  NS           RAZ     NS      NS      RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_SLOT_CTL0 = LMC Slot Control0
 * This register is an assortment of various control fields needed by the memory controller
 *

     ==============================================================
     LMC(0..3)_SLOT_CTL0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    R2R_INIT    R/W   0x1     NS        Read-to-read spacing control
                                             for back to back accesses to the same rank and DIMM
<11:6>   R2W_INIT    R/W   0x6     NS        Read-to-write spacing control
                                             for back to back accesses to the same rank and DIMM
<17:12>  W2R_INIT    R/W   0x9     NS        Write-to-read spacing control
                                             for back to back accesses to the same rank and DIMM
<23:18>  W2W_INIT    R/W   0x1     NS        Write-to-write spacing control
                                             for back to back accesses to the same rank and DIMM
<63:24>  NS          RAZ   NS      NS        RESERVED

Notes:

If SW has not previously written to this register (since the last DRESET),
HW updates the fields in this register to the minimum allowed value
when any of LMC*_RLEVEL_RANKn, LMC*_WLEVEL_RANKn, LMC*_CONTROL and
LMC*_MODEREG_PARAMS0 CSR's change. Ideally, only read this register
after LMC has been initialized and LMC*_RLEVEL_RANKn, LMC*_WLEVEL_RANKn
have valid data.

The interpretation of the fields in this CSR depends on LMC*_CONFIG[DDR2T]:
 - If LMC*_CONFIG[DDR2T]=1, (FieldValue + 4) is the minimum CK cycles
   between when the DRAM part registers CAS commands of the 1st and 2nd types
   from different cache blocks.
 - If LMC*_CONFIG[DDR2T]=0, (FieldValue + 3) is the minimum CK cycles
   between when the DRAM part registers CAS commands of the 1st and 2nd types
   from different cache blocks. FieldValue = 0 is always illegal in this
   case.

The hardware-calculated minimums are:

min R2R_INIT = 1 - LMC*_CONFIG[DDR2T]
min R2W_INIT = 5 - LMC*_CONFIG[DDR2T] + (RL + MaxRdSkew) - (WL + MinWrSkew) + LMC*_CONTROL[BPRCH]
min W2R_INIT = 2 - LMC*_CONFIG[DDR2T] + LMC*_TIMING_PARAMS1[TWTR] + WL
min W2W_INIT = 1 - LMC*_CONFIG[DDR2T]

where

RL        = CL  + AL (LMC*_MODEREG_PARAMS0[CL] selects CL, LMC*_MODEREG_PARAMS0[AL] selects AL)
WL        = CWL + AL (LMC*_MODEREG_PARAMS0[CWL] selects CWL)
MaxRdSkew = max(LMC*_RLEVEL_RANKi[BYTEj]/4) + 1                          (max is across all ranks i (0..3) and bytes j (0..8))
MinWrSkew = min(LMC*_WLEVEL_RANKi[BYTEj]/8) - LMC*_CONFIG[EARLY_DQX]     (min is across all ranks i (0..3) and bytes j (0..8))

R2W_INIT has 1 CK cycle built in for OCTEON-internal ODT settling/channel turnaround time.

----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_SLOT_CTL1 = LMC Slot Control1
 * This register is an assortment of various control fields needed by the memory controller
 *

     ==============================================================
     LMC(0..3)_SLOT_CTL1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    R2R_XRANK_INIT R/W 0x3    NS        Read-to-read spacing control
                                             for back to back accesses across ranks of the same DIMM
<11:6>   R2W_XRANK_INIT R/W 0x6    NS        Read-to-write spacing control
                                             for back to back accesses across ranks of the same DIMM
<17:12>  W2R_XRANK_INIT R/W 0x4    NS        Write-to-read spacing control
                                             for back to back accesses across ranks of the same DIMM
<23:18>  W2W_XRANK_INIT R/W 0x5    NS        Write-to-write spacing control
                                             for back to back accesses across ranks of the same DIMM
<63:24>  NS          RAZ   NS      NS        RESERVED

Notes:

If SW has not previously written to this register (since the last DRESET),
HW updates the fields in this register to the minimum allowed value
when any of LMC*_RLEVEL_RANKn, LMC*_WLEVEL_RANKn, LMC*_CONTROL and
LMC*_MODEREG_PARAMS0 CSR's change. Ideally, only read this register
after LMC has been initialized and LMC*_RLEVEL_RANKn, LMC*_WLEVEL_RANKn
have valid data.

The interpretation of the fields in this CSR depends on LMC*_CONFIG[DDR2T]:
 - If LMC*_CONFIG[DDR2T]=1, (FieldValue + 4) is the minimum CK cycles
   between when the DRAM part registers CAS commands of the 1st and 2nd types
   from different cache blocks.
 - If LMC*_CONFIG[DDR2T]=0, (FieldValue + 3) is the minimum CK cycles
   between when the DRAM part registers CAS commands of the 1st and 2nd types
   from different cache blocks. FieldValue = 0 is always illegal in this
   case.

The hardware-calculated minimums are:

min R2R_XRANK_INIT = 2 - LMC*_CONFIG[DDR2T] + MaxRdSkew - MinRdSkew + LMC*_CONTROL[RODT_BPRCH]
min R2W_XRANK_INIT = 5 - LMC*_CONFIG[DDR2T] + (RL + MaxRdSkew) - (WL + MinWrSkew) + LMC*_CONTROL[BPRCH]
min W2R_XRANK_INIT = 3 - LMC*_CONFIG[DDR2T] + MaxWrSkew + LMC*_CONTROL[FPRCH2]
min W2W_XRANK_INIT = 4 - LMC*_CONFIG[DDR2T] + MaxWrSkew - MinWrSkew

where

RL        = CL  + AL (LMC*_MODEREG_PARAMS0[CL] selects CL, LMC*_MODEREG_PARAMS0[AL] selects AL)
WL        = CWL + AL (LMC*_MODEREG_PARAMS0[CWL] selects CWL)
MinRdSkew = min(LMC*_RLEVEL_RANKi[BYTEj]/4)                              (min is across all ranks i (0..3) and bytes j (0..8))
MaxRdSkew = max(LMC*_RLEVEL_RANKi[BYTEj]/4) + 1                          (max is across all ranks i (0..3) and bytes j (0..8))
MinWrSkew = min(LMC*_WLEVEL_RANKi[BYTEj]/8) - LMC*_CONFIG[EARLY_DQX]     (min is across all ranks i (0..3) and bytes j (0..8))
MaxWrSkew = max(LMC*_WLEVEL_RANKi[BYTEj]/8) - LMC*_CONFIG[EARLY_DQX] + 1 (max is across all ranks i (0..3) and bytes j (0..8))

R2W_XRANK_INIT has 1 extra CK cycle built in for OCTEON-internal ODT settling/channel turnaround time.

W2R_XRANK_INIT has 1 extra CK cycle built in for channel turnaround time.

----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_SLOT_CTL2 = LMC Slot Control2
 * This register is an assortment of various control fields needed by the memory controller
 *

     ==============================================================
     LMC(0..3)_SLOT_CTL2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    R2R_XDIMM_INIT R/W 0x4    NS        Read-to-read spacing control
                                             for back to back accesses across DIMMs
<11:6>   R2W_XDIMM_INIT R/W 0x7    NS        Read-to-write spacing control
                                             for back to back accesses across DIMMs
<17:12>  W2R_XDIMM_INIT R/W 0x4    NS        Write-to-read spacing control
                                             for back to back accesses across DIMMs
<23:18>  W2W_XDIMM_INIT R/W 0x6    NS        Write-to-write spacing control
                                             for back to back accesses across DIMMs
<63:24>  NS          RAZ   NS      NS        RESERVED

Notes:

If SW has not previously written to this register (since the last DRESET),
HW updates the fields in this register to the minimum allowed value
when any of LMC*_RLEVEL_RANKn, LMC*_WLEVEL_RANKn, LMC*_CONTROL and
LMC*_MODEREG_PARAMS0 CSR's change. Ideally, only read this register
after LMC has been initialized and LMC*_RLEVEL_RANKn, LMC*_WLEVEL_RANKn
have valid data.

The interpretation of the fields in this CSR depends on LMC*_CONFIG[DDR2T]:
 - If LMC*_CONFIG[DDR2T]=1, (FieldValue + 4) is the minimum CK cycles
   between when the DRAM part registers CAS commands of the 1st and 2nd types
   from different cache blocks.
 - If LMC*_CONFIG[DDR2T]=0, (FieldValue + 3) is the minimum CK cycles
   between when the DRAM part registers CAS commands of the 1st and 2nd types
   from different cache blocks. FieldValue = 0 is always illegal in this
   case.

The hardware-calculated minimums are:

min R2R_XDIMM_INIT = 3 - LMC*_CONFIG[DDR2T] + MaxRdSkew - MinRdSkew + LMC*_CONTROL[RODT_BPRCH]
min R2W_XDIMM_INIT = 6 - LMC*_CONFIG[DDR2T] + (RL + MaxRdSkew) - (WL + MinWrSkew) + LMC*_CONTROL[BPRCH]
min W2R_XDIMM_INIT = 3 - LMC*_CONFIG[DDR2T] + MaxWrSkew + LMC*_CONTROL[FPRCH2]
min W2W_XDIMM_INIT = 5 - LMC*_CONFIG[DDR2T] + MaxWrSkew - MinWrSkew

where

RL        = CL  + AL (LMC*_MODEREG_PARAMS0[CL] selects CL, LMC*_MODEREG_PARAMS0[AL] selects AL)
WL        = CWL + AL (LMC*_MODEREG_PARAMS0[CWL] selects CWL)
MinRdSkew = min(LMC*_RLEVEL_RANKi[BYTEj]/4)                              (min is across all ranks i (0..3) and bytes j (0..8))
MaxRdSkew = max(LMC*_RLEVEL_RANKi[BYTEj]/4) + 1                          (max is across all ranks i (0..3) and bytes j (0..8))
MinWrSkew = min(LMC*_WLEVEL_RANKi[BYTEj]/8) - LMC*_CONFIG[EARLY_DQX]     (min is across all ranks i (0..3) and bytes j (0..8))
MaxWrSkew = max(LMC*_WLEVEL_RANKi[BYTEj]/8) - LMC*_CONFIG[EARLY_DQX] + 1 (max is across all ranks i (0..3) and bytes j (0..8))

R2W_XDIMM_INIT has 2 extra CK cycles built in for OCTEON-internal ODT settling/channel turnaround time.

R2R_XDIMM_INIT, W2R_XRANK_INIT, W2W_XDIMM_INIT have 1 extra CK cycle built in for channel turnaround time.

----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_CHAR_CTL = LMC Characterization Control
 * This register is an assortment of various control fields needed to charecterize the DDR3 interface
 * *DON'T PUT IN HRM*

     ==============================================================
     LMC(0..3)_CHAR_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>   PRBS           R/W NS     NS        PRBS Polynomial
<39:32>  PROG           R/W NS     NS        Programmable pattern
<40>     SEL            R/W NS     NS        Pattern select
                                             0 = PRBS
                                             1 = Programmable pattern
<41>     EN             R/W NS     NS        Enable characterization
<63:42>  NS             R/W NS      NS        RESERVED

Notes:
----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_CHAR_MASK0 = LMC Characterization Mask0
 * This register is an assortment of various control fields needed to charecterize the DDR3 interface
 * *DON'T PUT IN HRM*

     ==============================================================
     LMC(0..3)_CHAR_MASK0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   MASK        R/W   NS      NS        Mask for DQ0[63:0]

Notes:
----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_CHAR_MASK1 = LMC Characterization Mask1
 * This register is an assortment of various control fields needed to charecterize the DDR3 interface
 * *DON'T PUT IN HRM*

     ==============================================================
     LMC(0..3)_CHAR_MASK1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   MASK        R/W   NS      NS        Mask for DQ0[71:64]
<63:8>  NS          R/W   NS      NS        RESERVED

Notes:
----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_CHAR_MASK2 = LMC Characterization Mask2
 * This register is an assortment of various control fields needed to charecterize the DDR3 interface
 * *DON'T PUT IN HRM*

     ==============================================================
     LMC(0..3)_CHAR_MASK2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   MASK        R/W   NS      NS        Mask for DQ1[63:0]

Notes:
----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_CHAR_MASK3 = LMC Characterization Mask3
 * This register is an assortment of various control fields needed to charecterize the DDR3 interface
 * *DON'T PUT IN HRM*

     ==============================================================
     LMC(0..3)_CHAR_MASK3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   MASK        R/W   NS      NS        Mask for DQ1[71:64]
<63:8>  NS          R/W   NS      NS        RESERVED

Notes:
----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_TRO_CTL = LMC Temperature Ring Osc Control
 * This register is an assortment of various control fields needed to control the temperature ring oscillator
 * *DON'T PUT IN HRM*

     ==============================================================
     LMC(0..3)_TRO_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     TRESET      R/W   0x1     NS        Reset ring oscillator
<32:1>  RCLK_CNT    R/W   0x0     NS        rclk counter
<63:33> NS          RAZ   NS      NS        RESERVED
Notes:
To bring up the temperature ring oscillator, write TRESET to 0, and follow by initializing RCLK_CNT to desired
value
----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_TRO_STAT = LMC Temperature Ring Osc Status
 * This register is an assortment of various control fields needed to control the temperature ring oscillator
 * *DON'T PUT IN HRM*

     ==============================================================
     LMC(0..3)_TRO_STAT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  RING_CNT    RO    0x0     NS        ring counter
<63:32> NS          RAZ   NS      NS        RESERVED

Notes:
----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_DDR_PLL_CTL = LMC DDR PLL control
 *

     ==============================================================
     LMC(0..3)_DDR_PLL_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:27>  NS         RAZ     NS      NS      RESERVED
<26>     JTG_TEST_MODE R/W  0x0      0      JTAG Test Mode
                                            Clock alignment between DCLK & REFCLK as well as FCLK &
                                            REFCLK can only be performed after the ddr_pll_divider_reset
                                            is deasserted. SW need to wait atleast 10 reference clock
                                            cycles after deasserting pll_divider_reset before asserting
                                            LMC(0..3)_DDR_PLL_CTL[JTG_TEST_MODE]. During alignment (which can
                                            take upto 160 microseconds) DCLK and FCLK can exhibit some
                                            high frequency pulses. Therefore, all bring up activities in
                                            that clock domain need to be delayed (when the chip operates
                                            in jtg_test_mode) by about 160 microseconds to ensure that
                                            lock is achieved.
                                            *DON'T PUT IN HRM*
<25>     DFM_DIV_RESET R/W  0x1      0      DFM postscalar divider reset
<24:22>  DFM_PS_EN  R/W     0x2     NS      DFM postscalar divide ratio
                                            Determines the DFM CK speed.
                                            0x0 : Divide LMC+DFM PLL output by 1
                                            0x1 : Divide LMC+DFM PLL output by 2
                                            0x2 : Divide LMC+DFM PLL output by 3
                                            0x3 : Divide LMC+DFM PLL output by 4
                                            0x4 : Divide LMC+DFM PLL output by 6
                                            0x5 : Divide LMC+DFM PLL output by 8
                                            0x6 : Divide LMC+DFM PLL output by 12
                                            0x7 : Divide LMC+DFM PLL output by 12
                                            DFM_PS_EN is not used when DFM_DIV_RESET = 1
<21>     DDR_DIV_RESET R/W  0x1      0      DDR postscalar divider reset
<20:18>  DDR_PS_EN  R/W     0x2     NS      DDR postscalar divide ratio
                                            Determines the LMC CK speed.
                                            0x0 : Divide LMC+DFM PLL output by 1
                                            0x1 : Divide LMC+DFM PLL output by 2
                                            0x2 : Divide LMC+DFM PLL output by 3
                                            0x3 : Divide LMC+DFM PLL output by 4
                                            0x4 : Divide LMC+DFM PLL output by 6
                                            0x5 : Divide LMC+DFM PLL output by 8
                                            0x6 : Divide LMC+DFM PLL output by 12
                                            0x7 : Divide LMC+DFM PLL output by 12
                                            DDR_PS_EN is not used when DDR_DIV_RESET = 1
<17:14>  DIFFAMP    R/W     0x0      1      PLL diffamp input transconductance
                                            *DON'T PUT IN HRM*
<13:11>  CPS        R/W     0x0      1      PLL charge-pump current
                                            *DON'T PUT IN HRM*
<10:8>   CPB        R/W     0x0      1      PLL charge-pump current
                                            *DON'T PUT IN HRM*
<7>      RESET_N    R/W     0x0      1      PLL reset
<6:0>    CLKF       R/W     0x30     NS     Multiply reference by CLKF
                                            32 <= CLKF <= 64
                                            LMC+DFM PLL frequency = 50 * CLKF
                                            min = 1.6 GHz, max = 3.2 GHz
Notes:
DDR PLL Bringup sequence:
1.  Write CLKF, DDR_PS_EN, DFM_PS_EN, DIFFAMP, CPS, CPB.
    If test mode is going to be activated, then also write jtg__ddr_pll_tm_en1, jtg__ddr_pll_tm_en2, jtg__ddr_pll_tm_en3,
    jtg__ddr_pll_tm_en4, jtg__dfa_pll_tm_en1, jtg__dfa_pll_tm_en2, jtg__dfa_pll_tm_en3, jtg__dfa_pll_tm_en4, JTAG_TEST_MODE
2.  Wait 128 ref clock cycles (7680 rclk cycles)
3.  Write 1 to RESET_N
4.  Wait 1152 ref clocks (1152*16 rclk cycles)
5.  Write 0 to  DDR_DIV_RESET and DFM_DIV_RESET
6.  Wait 10 ref clock cycles (160 rclk cycles) before bringing up the DDR interface
    If test mode is going to be activated, wait an additional 8191 ref clocks (8191*16 rclk cycles) to allow PLL
    clock alignment
----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_RODT_MASK = LMC Read OnDieTermination mask
 * System designers may desire to terminate DQ/DQS lines for higher frequency DDR operations
 * especially on a multi-rank system. DDR3 DQ/DQS I/O's have built in
 * Termination resistor that can be turned on or off by the controller, after meeting tAOND and tAOF
 * timing requirements. Each Rank has its own ODT pin that fans out to all the memory parts
 * in that DIMM. System designers may prefer different combinations of ODT ON's for reads
 * into different ranks. Octeon supports full programmability by way of the mask register below.
 * Each Rank position has its own 8-bit programmable field.
 * When the controller does a read to that rank, it sets the 4 ODT pins to the MASK pins below.
 * For eg., When doing a read from Rank0, a system designer may desire to terminate the lines
 * with the resistor on DIMM0/Rank1. The mask RODT_D0_R0 would then be {00000010}.
 * Octeon drives the appropriate mask values on the ODT pins by default. If this feature is not
 * required, write 0 in this register. Note that, as per the DDR3 specifications, the ODT pin
 * for the rank that is being read should always be 0.


     ==============================================================
     LMC(0..3)_RODT_MASK Type=RSL
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:56>  RODT_D3_R1  R/W    0x00    0x00    Read ODT mask DIMM3, RANK1/DIMM3 in SingleRanked
                                            *UNUSED IN 6xxx, and MBZ*
<55:48>  RODT_D3_R0  R/W    0x00    0x00    Read ODT mask DIMM3, RANK0
                                            *UNUSED IN 6xxx, and MBZ*
<47:40>  RODT_D2_R1  R/W    0x00    0x00    Read ODT mask DIMM2, RANK1/DIMM2 in SingleRanked
                                            *UNUSED IN 6xxx, and MBZ*
<39:32>  RODT_D2_R0  R/W    0x00    0x00    Read ODT mask DIMM2, RANK0
                                            *UNUSED IN 6xxx, and MBZ*
<31:24>  RODT_D1_R1  R/W    0x00    NS      Read ODT mask DIMM1, RANK1/DIMM1 in SingleRanked
                                            if (RANK_ENA) then
                                                RODT_D1_R1[3] must be 0
                                            else
                                                RODT_D1_R1[3:0] is not used and MBZ
                                            *Upper 4 bits UNUSED IN 6xxx, and MBZ*
<23:16>  RODT_D1_R0  R/W    0x00    NS      Read ODT mask DIMM1, RANK0
                                            if (RANK_ENA) then
                                                RODT_D1_RO[2] must be 0
                                            else
                                                RODT_D1_RO[3:2,1] must be 0
                                            *Upper 4 bits UNUSED IN 6xxx, and MBZ*
<15:8>   RODT_D0_R1  R/W    0x00    NS      Read ODT mask DIMM0, RANK1/DIMM0 in SingleRanked
                                            if (RANK_ENA) then
                                                RODT_D0_R1[1] must be 0
                                            else
                                                RODT_D0_R1[3:0] is not used and MBZ
                                            *Upper 4 bits UNUSED IN 6xxx, and MBZ*
<7:0>    RODT_D0_R0  R/W    0x00    NS      Read ODT mask DIMM0, RANK0
                                            if (RANK_ENA) then
                                                RODT_D0_RO[0] must be 0
                                            else
                                                RODT_D0_RO[1:0,3] must be 0
                                            *Upper 4 bits UNUSED IN 6xxx, and MBZ*

Notes:
When a given RANK is selected, the RODT mask for that RANK is used.  The resulting RODT mask is
driven to the DIMMs in the following manner:
	    RANK_ENA=1                    RANK_ENA=0
Mask[3] -> DIMM1_ODT_1                    MBZ
Mask[2] -> DIMM1_ODT_0	                  DIMM1_ODT_0
Mask[1] -> DIMM0_ODT_1                    MBZ
Mask[0] -> DIMM0_ODT_0                    DIMM0_ODT_0

LMC always reads entire cache blocks and always reads them via two consecutive
read CAS operations to the same rank+bank+row spaced exactly 4 CK's apart.
When a RODT mask bit is set, LMC asserts the OCTEON ODT output
pin(s) starting (CL - CWL) CK's after the first read CAS operation. Then, OCTEON
normally continues to assert the ODT output pin(s) for 9+LMC*_CONTROL[RODT_BPRCH] more CK's
- for a total of 10+LMC*_CONTROL[RODT_BPRCH] CK's for the entire cache block read -
through the second read CAS operation of the cache block,
satisfying the 6 CK DDR3 ODTH8 requirements.
But it is possible for OCTEON to issue two cache block reads separated by as few as
RtR = 8 or 9 (10 if LMC*_CONTROL[RODT_BPRCH]=1) CK's. In that case, OCTEON asserts the ODT output pin(s)
for the RODT mask of the first cache block read for RtR CK's, then asserts
the ODT output pin(s) for the RODT mask of the second cache block read for 10+LMC*_CONTROL[RODT_BPRCH] CK's
(or less if a third cache block read follows within 8 or 9 (or 10) CK's of this second cache block read).
Note that it may be necessary to force LMC to space back-to-back cache block reads
to different ranks apart by at least 10+LMC*_CONTROL[RODT_BPRCH] CK's to prevent DDR3 ODTH8 violations.
----------------------------------------------------------------------------------------------------
===
 *                    LMC_DIMM@_PARAMS = LMC DIMM@ Params
 * This register contains values to be programmed into each control word in the corresponding (registered) DIMM. The control words allow
 * optimization of the device properties for different raw card designs.

     ==============================================================
     LMC(0..3)_DIMM(0..1)_PARAMS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>    RC0         R/W    0x00    0x00    RC0 , Global Features Control Word
<7:4>    RC1         R/W    0x00    0x00    RC1 , Clock Driver Enable Control Word
<11:8>   RC2         R/W    0x00    0x00    RC2 , Timing Control Word
<15:12>  RC3         R/W    0x00    0x00    RC3 , CA Signals Driver Characterstics Control Word
<19:16>  RC4         R/W    0x00    0x00    RC4 , Control Signals Driver Characteristics Control Word
<23:20>  RC5         R/W    0x00    0x00    RC5 , CK Driver Characterstics Control Word
<27:24>  RC6         R/W    0x00    0x00    RC6 , Reserved
<31:28>  RC7         R/W    0x00    0x00    RC7 , Reserved
<35:32>  RC8         R/W    0x00    0x00    RC8 , Additional IBT Settings Control Word
<39:36>  RC9         R/W    0x00    0x00    RC9 , Power Savings Settings Control Word
<43:40>  RC10        R/W    0x00    0x00    RC10, Encoding for RDIMM Operating Speed
<47:44>  RC11        R/W    0x00    0x00    RC11, Encoding for RDIMM Operating VDD
<51:48>  RC12        R/W    0x00    0x00    RC12, Reserved
<55:52>  RC13        R/W    0x00    0x00    RC13, Reserved
<59:56>  RC14        R/W    0x00    0x00    RC14, Reserved
<63:60>  RC15        R/W    0x00    0x00    RC15, Reserved

Notes: LMC only uses this CSR when LMC*_CONTROL[RDIMM_ENA]=1. During a power-up/init sequence, LMC writes
       these fields into the control words in the JEDEC standard SSTE32882 registering clock driver on an
       RDIMM when corresponding LMC*_DIMM_CTL[DIMM*_WMASK] bits are set.
----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_DIMM_CTL = LMC DIMM Control

     ==============================================================
     LMC(0..3)_DIMM_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>   DIMM0_WMASK R/W    0xffff  0xffff  DIMM0 Write Mask
                                            if (DIMM0_WMASK[n] = 1)
                                                Write DIMM0.RCn
<31:16>  DIMM1_WMASK R/W    0xffff  0xffff  DIMM1 Write Mask
                                            if (DIMM1_WMASK[n] = 1)
                                                Write DIMM1.RCn
<44:32>  TCWS        R/W    0x4e0   0x4e0   LMC waits for this time period before and after a RDIMM
                                            Control Word Access during a power-up/init SEQUENCE.
                                            TCWS is in multiples of 8 CK cycles.
                                            Set TCWS (CSR field) = RNDUP[tcws(ns)/(8*tCYC(ns))],
                                            where tCWS is the desired time (ns), and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=0x4e0 (equivalent to 15us) when changing
                                            clock timing (RC2.DBA1, RC6.DA4, RC10.DA3, RC10.DA4,
                                            RC11.DA3, and RC11.DA4)
                                            TYP=0x8, otherwise
                                            0x0 = Reserved
<45:45>  PARITY      R/W    0x00    0x00    Parity
<63:46>  NS          RAZ     NS      NS     RESERVED

Notes: This CSR is only used when LMC*_CONTROL[RDIMM_ENA]=1. During a power-up/init sequence, this CSR
       controls LMC's writes to the control words in the JEDEC standard SSTE32882 registering clock driver
       on an RDIMM.
----------------------------------------------------------------------------------------------------
===
 *
 *                    LMC_CHAR_MASK4 = LMC Characterization Mask4
 * This register is an assortment of various control fields needed to charecterize the DDR3 interface
 * *DON'T PUT IN HRM*

     ==============================================================
     LMC(0..3)_CHAR_MASK4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<1:0>    CKE_MASK   R/W  NS      NS        Mask for CKE*
<3:2>    CS0_N_MASK R/W  NS      NS        Mask for CS0_N
<5:4>    CS1_N_MASK R/W  NS      NS        Mask for CS1_N
<7:6>    ODT0_MASK  R/W  NS      NS        Mask for ODT0
<9:8>    ODT1_MASK  R/W  NS      NS        Mask for ODT1
<10>     RAS_N_MASK R/W  NS      NS        Mask for RAS_N
<11>     CAS_N_MASK R/W  NS      NS        Mask for CAS_N
<12>     WE_N_MASK  R/W  NS      NS        Mask for WE_N
<15:13>  BA_MASK    R/W  NS      NS        Mask for BA[2:0]
<31:16>  A_MASK     R/W  NS      NS        Mask for A[15:0]
<32>     RESET_N_MASK R/W NS     NS        Mask for RESET_L
<63:33>  NS         R/W  NS      NS        RESERVED

Notes:
----------------------------------------------------------------------------------------------------
===


 *
 * MIO_BOOT_REG_CFG = MIO Boot Region Config Register (1 per region * 8 regions)
 *
 * Contains region enable, region or, region ALE/SAM mode, region width, region size, and region base
 * address parameters.
 *
 * DMACK, if non-zero, will assert the corresponding boot_dmack[n] pin when an access to this region
 * is performed.  DMACK is encoded as follows: 0 = disabled, 1 = boot_dmack[0], 2 = boot_dmack[1].
 * This is useful for CF cards in PC card memory mode that support DMA because the -REG and -DMACK pins
 * are shared.  Note: the assertion level of boot_dmack is specified by MIO_BOOT_DMA_TIMn[DMACK_PI].
 *
 * TIM_MULT specifies the timing multiplier for a region.  The timing multiplier applies to all timing
 * parameters, except for WAIT and RD_DLY, which simply count eclks.  TIM_MULT is encoded as follows:
 * 0 = 4x, 1 = 1x, 2 = 2x, 3 = 8x.
 *
 * RD_DLY specifies the read sample delay in eclk cycles for a region.  For reads, the data bus is
 * normally sampled on the same eclk edge that drives boot_oe_n to the inactive state (or the eclk edge
 * that toggles the lower address bits in page mode).  This parameter can delay that sampling edge by up
 * to 7 eclks.  Note: the number of eclk cycles counted by the PAGE and RD_HLD timing parameters must be
 * greater than RD_DLY.
 *
 * Region or bit will assert the given region's chip enable when there is an address hit in the previous
 * region (no function for region 0, since there is no previous region).  This is useful for CF cards
 * because it allows the use of 2 separate timing configurations for common memory and attribute memory.
 *
 * ALE (address latch enable) mode enables the multiplexed address/data bus mode.  The reset value for
 * region 0 is the value of boot_ad[15] on the first de-assertion of reset.  This pin has an internal
 * pulldown, so place a pullup on boot_ad[15] to enable this mode out of reset for region 0.
 *
 * SAM (strobe AND mode) internally combines the output enable and write enable strobes into a single
 * strobe that is then driven onto both boot_oe_n and boot_we_n.  This is useful for parts that use a
 * single strobe along with a read/write bit (the read/write bit can be driven from an address pin).
 *
 * Bus width can be specified as either 8 bits (WIDTH low) or 16 bits (WIDTH high).  The reset value for
 * region 0 is the value of boot_ad[14] on the first de-assertion of reset.  This pin has an internal
 * pulldown, so place a pullup on boot_ad[14] if a 16 bit bus is desired out of reset for region 0.
 *
 * Region size is in 64k blocks and in -1 notation (i.e. 0 = 1 64k block, 1 = 2 64k blocks, etc.).
 *
 * Base address specifies address bits [31:16] of the first 64k block of the region.
 *
 * Note: When region 0 is defined to be NAND flash, only MIO_BOOT_REG_CFG0[EN], MIO_BOOT_REG_CFG0[SIZE],
 * and MIO_BOOT_REG_CFG0[BASE] remain functional.  All other fields in MIO_BOOT_REG_CFG0 have no effect.
 *

     ==============================================================
     MIO_BOOT_REG_CFG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:44> NS       RAZ      NS          NS        Reserved                                           |
 <43:42> DMACK    R/W      0x0         NS        Region 0 DMACK                                     |
 <41:40> TIM_MULT R/W      0x0         NS        Region 0 timing multiplier                         |
 <39:37> RD_DLY   R/W      0x0         NS        Region 0 read sample delay                         |
 <36>    SAM      R/W      0x0         NS        Region 0 SAM                                       |
 <35:34> WE_EXT   R/W      0x0         NS        Region 0 write enable count extension              |
 <33:32> OE_EXT   R/W      0x0         NS        Region 0 output enable count extension             |
 <31>    EN       R/W      0x1         0x1       Region 0 enable                                    |
 <30>    OR       R/W      0x0         0x0       No function for region 0                           |
 <29>    ALE      R/W      0x0         NS        Region 0 ALE mode                                  |
 <28>    WIDTH    R/W      0x0         NS        Region 0 bus width                                 |
 <27:16> SIZE     R/W      0xfff       NS        Region 0 size                                      |
 <15:0>  BASE     R/W      0x1fc0      0x1fc0    Region 0 base address                              |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_BOOT_REG_CFG(0..7) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:44> NS       RAZ      NS          NS        Reserved                                           |
 <43:42> DMACK    R/W      0x0         NS        Region @ DMACK                                     |
 <41:40> TIM_MULT R/W      0x0         NS        Region @ timing multiplier                         |
 <39:37> RD_DLY   R/W      0x0         NS        Region @ read sample delay                         |
 <36>    SAM      R/W      0x0         NS        Region @ SAM mode                                  |
 <35:34> WE_EXT   R/W      0x0         NS        Region @ write enable count extension              |
 <33:32> OE_EXT   R/W      0x0         NS        Region @ output enable count extension             |
 <31>    EN       R/W      0x0         NS        Region @ enable                                    |
 <30>    OR       R/W      0x0         NS        Region @ or bit                                    |
 <29>    ALE      R/W      0x0         NS        Region @ ALE mode                                  |
 <28>    WIDTH    R/W      0x0         NS        Region @ bus width                                 |
 <27:16> SIZE     R/W      0x0         NS        Region @ size                                      |
 <15:0>  BASE     R/W      0x0         NS        Region @ base address                              |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_REG_TIM = MIO Boot Region Timing Register (1 per region * 8 regions)
 *
 * Contains page mode, wait mode, page size, and region timing parameters.
 *
 * Page size is encoded as follows: 0 = 8 bytes, 1 = 2 bytes, 2 = 4 bytes, 3 = 8 bytes.
 *
 * Note: OE, WE, PAGE, and ALE must be non-zero to ensure legal transitions on the corresponding boot bus outputs.
 *
 * Note: WAIT must be non-zero if WAITM is set.
 *
 * Note: When region 0 is defined to be NAND flash, all fields in MIO_BOOT_TIM_CFG0 have no effect.
 *

     ==============================================================
     MIO_BOOT_REG_TIM0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    PAGEM    R/W      0x0         NS        Region 0 page mode                                 |
 <62>    WAITM    R/W      0x0         NS        Region 0 wait mode                                 |
 <61:60> PAGES    R/W      0x0         NS        Region 0 page size                                 |
 <59:54> ALE      R/W      4           NS        Region 0 ALE count                                 |
 <53:48> PAGE     R/W      63          NS        Region 0 page count                                |
 <47:42> WAIT     R/W      63          NS        Region 0 wait count                                |
 <41:36> PAUSE    R/W      17          NS        Region 0 pause count                               |
 <35:30> WR_HLD   R/W      63          NS        Region 0 write hold count                          |
 <29:24> RD_HLD   R/W      5           NS        Region 0 read hold count                           |
 <23:18> WE       R/W      63          NS        Region 0 write enable count                        |
 <17:12> OE       R/W      63          NS        Region 0 output enable count                       |
 <11:6>  CE       R/W      5           NS        Region 0 chip enable count                         |
 <5:0>   ADR      R/W      8           NS        Region 0 address count                             |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_BOOT_REG_TIM(0..7) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    PAGEM    R/W      0x0         NS        Region @ page mode                                 |
 <62>    WAITM    R/W      0x0         NS        Region @ wait mode                                 |
 <61:60> PAGES    R/W      0x0         NS        Region @ page size                                 |
 <59:54> ALE      R/W      63          NS        Region @ ALE count                                 |
 <53:48> PAGE     R/W      63          NS        Region @ page count                                |
 <47:42> WAIT     R/W      63          NS        Region @ wait count                                |
 <41:36> PAUSE    R/W      63          NS        Region @ pause count                               |
 <35:30> WR_HLD   R/W      63          NS        Region @ write hold count                          |
 <29:24> RD_HLD   R/W      63          NS        Region @ read hold count                           |
 <23:18> WE       R/W      63          NS        Region @ write enable count                        |
 <17:12> OE       R/W      63          NS        Region @ output enable count                       |
 <11:6>  CE       R/W      63          NS        Region @ chip enable count                         |
 <5:0>   ADR      R/W      63          NS        Region @ address count                             |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_LOC_CFG = MIO Boot Local Region Config Register (1 per region * 2 regions)
 *
 * Contains local region enable and local region base address parameters.  Each local region is 128
 * bytes organized as 16 entries x 8 bytes.
 *
 * Base address specifies address bits [31:7] of the region.
 *

     ==============================================================
     MIO_BOOT_LOC_CFG(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved                                           |
 <31>    EN       R/W      0x0         NS        Local region @ enable                              |
 <30:28> NS       RAZ      NS          NS        Reserved                                           |
 <27:3>  BASE     R/W      0x0         NS        Local region @ base address                        |
 <2:0>   NS       RAZ      NS          NS        Reserved                                           |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_LOC_ADR = MIO Boot Local Memory Address Register
 *
 * Specifies the address for reading or writing the local memory.  This address will post-increment
 * following an access to the MIO Boot Local Memory Data Register (MIO_BOOT_LOC_DAT).
 *
 * Local memory region 0 exists from addresses 0x00 - 0x78.
 * Local memory region 1 exists from addresses 0x80 - 0xf8.
 *

     ==============================================================
     MIO_BOOT_LOC_ADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |
 <7:3>   ADR      R/W      0x0         NS        Local memory address                               |
 <2:0>   NS       RAZ      NS          NS        Reserved                                           |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_LOC_DAT = MIO Boot Local Memory Data Register
 *
 * This is a pseudo-register that will read/write the local memory at the address specified by the MIO
 * Boot Local Address Register (MIO_BOOT_LOC_ADR) when accessed.
 *

     ==============================================================
     MIO_BOOT_LOC_DAT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DATA     R/W      NS          NS        Local memory data                                  |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_ERR = MIO Boot Error Register
 *
 * Contains the address decode error and wait mode error bits.  Address decode error is set when a
 * boot bus access does not hit in any of the 8 remote regions or 2 local regions.  Wait mode error is
 * set when wait mode is enabled and the external wait signal is not de-asserted after 32k eclk cycles.
 *

     ==============================================================
     MIO_BOOT_ERR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved                                           |
 <1>     WAIT_ERR R/W1C    0x0         0x0       Wait mode error                                    |
 <0>     ADR_ERR  R/W1C    0x0         0x0       Address decode error                               |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_INT = MIO Boot Interrupt Register
 *
 * Contains the interrupt enable bits for address decode error and wait mode error.
 *

     ==============================================================
     MIO_BOOT_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved                                           |
 <1>     WAIT_INT R/W      0x0         NS        Wait mode error interrupt enable                   |
 <0>     ADR_INT  R/W      0x0         NS        Address decode error interrupt enable              |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_THR = MIO Boot Threshold Register
 *
 * Contains MIO Boot threshold values:
 *
 * FIF_THR = Assert ncb__busy when the Boot NCB input FIFO reaches this level (not typically for
 *           customer use).
 *
 * DMA_THR = When non-DMA accesses are pending, perform a DMA access after this value of non-DMA
 *           accesses have completed.  If set to zero, only perform a DMA access when non-DMA
 *           accesses are not pending.
 *

     ==============================================================
     MIO_BOOT_THR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:22> NS       RAZ      NS          NS        Reserved                                           |
 <21:16> DMA_THR  R/W      0x0         NS        DMA threshold                                      |
 <15:14> NS       RAZ      NS          NS        Reserved                                           |
 <13:8>  FIF_CNT  RO       0x0         NS        Current NCB FIFO count                             |
 <7:6>   NS       RAZ      NS          NS        Reserved                                           |
 <5:0>   FIF_THR  R/W      25          25        NCB busy threshold                                 |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_COMP = MIO Boot Compensation Register
 *
 * Reset value is as follows:
 *
 * no pullups,               PCTL=38, NCTL=30 (25 ohm termination)
 * pullup on boot_ad[9],     PCTL=19, NCTL=15 (50 ohm termination)
 * pullup on boot_ad[10],    PCTL=15, NCTL=12 (65 ohm termination)
 * pullups on boot_ad[10:9], PCTL=15, NCTL=12 (65 ohm termination)
 *

     ==============================================================
     MIO_BOOT_COMP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:12> NS       RAZ      NS          NS        Reserved                                           |
 <11:6>  PCTL     R/W      NS          NS        Boot bus PCTL                                      |
 <5:0>   NCTL     R/W      NS          NS        Boot bus NCTL                                      |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_PIN_DEFS = MIO Boot Pin Defaults Register
 *

     ==============================================================
     MIO_BOOT_PIN_DEFS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |
 <15>    ALE      RO       NS          NS        Region 0 default ALE mode                          |
 <14>    WIDTH    RO       NS          NS        Region 0 default bus width                         |
 <13>    NS       RAZ      NS          NS        Reserved                                           |
 <12>    DMACK_P1 RO       NS          NS        boot_dmack[1] default polarity                     |
 <11>    DMACK_P0 RO       NS          NS        boot_dmack[0] default polarity                     |
 <10:9>  TERM     RO       NS          NS        Selects default driver termination                 |
 <8>     NAND     RO       NS          NS        Region 0 is NAND flash                             |
 <7:0>   NS       RAZ      NS          NS        Reserved                                           |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_GPIO_COMP = MIO GPIO Compensation Register
 *

     ==============================================================
     MIO_GPIO_COMP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:12> NS       RAZ      NS          NS        Reserved                                           |
 <11:6>  PCTL     R/W      19          NS        GPIO bus PCTL                                      |
 <5:0>   NCTL     R/W      15          NS        GPIO bus NCTL                                      |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_BIST_STAT = MIO Boot BIST Status Register
 *
 * Contains the BIST status for the MIO boot memories.  '0' = pass, '1' = fail.
 *

     ==============================================================
     MIO_BOOT_BIST_STAT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10>  NS       RAZ      NS          NS        Reserved                                           |
 <9:0>   STAT     RO       0x0         0x0       BIST status                                        |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_DMA_CFG = MIO Boot DMA Config Register (1 per engine * 2 engines)
 *
 * SIZE is specified in number of bus transfers, where one transfer is equal to the following number
 * of bytes dependent on MIO_BOOT_DMA_TIMn[WIDTH] and MIO_BOOT_DMA_TIMn[DDR]:
 *
 * WIDTH     DDR      Transfer Size (bytes)
 * ----------------------------------------
 *   0        0               2
 *   0        1               4
 *   1        0               4
 *   1        1               8
 *
 * Note: ADR must be aligned to the bus width (i.e. 16 bit aligned if WIDTH=0, 32 bit aligned if WIDTH=1).
 *

     ==============================================================
     MIO_BOOT_DMA_CFG(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    EN       R/W      0x0         NS        DMA Engine @ enable                                |
 <62>    RW       R/W      0x0         NS        DMA Engine @ R/W bit (0 = read, 1 = write)         |
 <61>    CLR      R/W      0x0         NS        DMA Engine @ clear EN on device terminated burst   |
 <60>    NS       RAZ      NS          NS        Reserved                                           |
 <59>    SWAP32   R/W      0x0         NS        DMA Engine @ 32 bit swap                           |
 <58>    SWAP16   R/W      0x0         NS        DMA Engine @ 16 bit swap                           |
 <57>    SWAP8    R/W      0x0         NS        DMA Engine @ 8 bit swap                            |
 <56>    ENDIAN   R/W      0x0         NS        DMA Engine @ NCB endian mode (0 = big, 1 = little) |
 <55:36> SIZE     R/W      0x0         NS        DMA Engine @ size                                  |
 <35:0>  ADR      R/W      0x0         NS        DMA Engine @ address                               |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_DMA_TIM = MIO Boot DMA Timing Register (1 per engine * 2 engines)
 *
 * DMACK_PI inverts the assertion level of boot_dmack[n].  The default polarity of boot_dmack[1:0] is
 * selected on the first de-assertion of reset by the values on boot_ad[12:11], where 0 is active high
 * and 1 is active low (see MIO_BOOT_PIN_DEFS for a read-only copy of the default polarity).
 * boot_ad[12:11] have internal pulldowns, so place a pullup on boot_ad[n+11] for active low default
 * polarity on engine n.  To interface with CF cards in True IDE Mode, either a pullup should be placed
 * on boot_ad[n+11] OR the corresponding DMACK_PI[n] should be set.
 *
 * DMARQ_PI inverts the assertion level of boot_dmarq[n].  The default polarity of boot_dmarq[1:0] is
 * active high, thus setting the polarity inversion bits changes the polarity to active low.  To
 * interface with CF cards in True IDE Mode, the corresponding DMARQ_PI[n] should be clear.
 *
 * TIM_MULT specifies the timing multiplier for an engine.  The timing multiplier applies to all timing
 * parameters, except for DMARQ and RD_DLY, which simply count eclks.  TIM_MULT is encoded as follows:
 * 0 = 4x, 1 = 1x, 2 = 2x, 3 = 8x.
 *
 * RD_DLY specifies the read sample delay in eclk cycles for an engine.  For reads, the data bus is
 * normally sampled on the same eclk edge that drives boot_oe_n high (and also low in DDR mode).
 * This parameter can delay that sampling edge by up to 7 eclks.  Note: the number of eclk cycles
 * counted by the OE_A and DMACK_H + PAUSE timing parameters must be greater than RD_DLY.
 *
 * If DDR is set, then WE_N must be less than WE_A.
 *

     ==============================================================
     MIO_BOOT_DMA_TIM(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    DMACK_PI R/W      0x0         NS        DMA Engine @ DMA ack polarity inversion            |
 <62>    DMARQ_PI R/W      0x0         NS        DMA Engine @ DMA request polarity inversion        |
 <61:60> TIM_MULT R/W      0x0         NS        DMA Engine @ timing multiplier                     |
 <59:57> RD_DLY   R/W      0x0         NS        DMA Engine @ read sample delay                     |
 <56>    DDR      R/W      0x0         NS        DMA Engine @ DDR mode                              |
 <55>    WIDTH    R/W      0x0         NS        DMA Engine @ bus width (0 = 16 bits, 1 = 32 bits)  |
 <54:48> NS       RAZ      NS          NS        Reserved                                           |
 <47:42> PAUSE    R/W      63          NS        DMA Engine @ pause count                           |
 <41:36> DMACK_H  R/W      63          NS        DMA Engine @ DMA ack hold count                    |
 <35:30> WE_N     R/W      63          NS        DMA Engine @ write enable negated count            |
 <29:24> WE_A     R/W      63          NS        DMA Engine @ write enable asserted count           |
 <23:18> OE_N     R/W      63          NS        DMA Engine @ output enable negated count           |
 <17:12> OE_A     R/W      63          NS        DMA Engine @ output enable asserted count          |
 <11:6>  DMACK_S  R/W      63          NS        DMA Engine @ DMA ack setup count                   |
 <5:0>   DMARQ    R/W      63          NS        DMA Engine @ DMA request count (must be non-zero)  |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_DMA_INT = MIO Boot DMA Interrupt Register (1 per engine * 2 engines)
 *

     ==============================================================
     MIO_BOOT_DMA_INT(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved                                           |
 <1>     DMARQ    RO       NS          NS        DMA Engine @ DMARQ asserted interrupt              |
 <0>     DONE     R/W1C    0x0         NS        DMA Engine @ request completion interrupt          |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_DMA_INT_EN = MIO Boot DMA Interrupt Enable Register (1 per engine * 2 engines)
 *

     ==============================================================
     MIO_BOOT_DMA_INT_EN(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved                                           |
 <1>     DMARQ    R/W      0x0         NS        DMA Engine @ DMARQ asserted interrupt enable       |
 <0>     DONE     R/W      0x0         NS        DMA Engine @ request completion interrupt enable   |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_NDF_DMA_CFG = MIO NAND Flash DMA Config Register
 *
 * SIZE is specified in number of 64 bit transfers (encoded in -1 notation).
 *
 * ADR must be 64 bit aligned.
 *

     ==============================================================
     MIO_NDF_DMA_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    EN       R/W      0x0         NS        DMA Engine enable                                  |
 <62>    RW       R/W      0x0         NS        DMA Engine R/W bit (0 = read, 1 = write)           |
 <61>    CLR      R/W      0x0         NS        DMA Engine clear EN on device terminated burst     |
 <60>    NS       RAZ      NS          NS        Reserved                                           |
 <59>    SWAP32   R/W      0x0         NS        DMA Engine 32 bit swap                             |
 <58>    SWAP16   R/W      0x0         NS        DMA Engine 16 bit swap                             |
 <57>    SWAP8    R/W      0x0         NS        DMA Engine 8 bit swap                              |
 <56>    ENDIAN   R/W      0x0         NS        DMA Engine NCB endian mode (0 = big, 1 = little)   |
 <55:36> SIZE     R/W      0x0         NS        DMA Engine size                                    |
 <35:0>  ADR      R/W      0x0         NS        DMA Engine address                                 |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_NDF_DMA_INT = MIO NAND Flash DMA Interrupt Register
 *

     ==============================================================
     MIO_NDF_DMA_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved                                           |
 <0>     DONE     R/W1C    0x0         NS        DMA Engine request completion interrupt            |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_NDF_DMA_INT_EN = MIO NAND Flash DMA Interrupt Enable Register
 *

     ==============================================================
     MIO_NDF_DMA_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved                                           |
 <0>     DONE     R/W      0x0         NS        DMA Engine request completion interrupt enable     |
----------------------------------------------------------------------------------------------------
===


 *
 * MIO_UART@_RBR = MIO UART@ Receive Buffer Register
 *
 * The Receive Buffer Register (RBR) is a read-only register that contains the data byte received on the
 * serial input port (sin). The data in this register is valid only if the Data Ready (DR) bit in the
 * Line status Register (LSR) is set. When the FIFOs are programmed OFF, the data in the RBR must be
 * read before the next data arrives, otherwise it is overwritten, resulting in an overrun error. When
 * the FIFOs are programmed ON, this register accesses the head of the receive FIFO. If the receive FIFO
 * is full (64 characters) and this register is not read before the next data character arrives, then the
 * data already in the FIFO is preserved, but any incoming data is lost. An overrun error also occurs.
 *
 * Note: The Divisor Latch Address Bit (DLAB) of the Line Control Register (LCR) must be clear to access
 * this register.
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * RBR, THR, and DLL registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_RBR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |
 <7:0>   RBR      RO       0x0         NS        Receive Buffer Register                            |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_THR = MIO UART@ Transmit Holding Register
 *
 * Transmit Holding Register (THR) is a write-only register that contains data to be transmitted on the
 * serial output port (sout). Data can be written to the THR any time that the THR Empty (THRE) bit of
 * the Line Status Register (LSR) is set.
 *
 * If FIFOs are not enabled and THRE is set, writing a single character to the THR clears the THRE. Any
 * additional writes to the THR before the THRE is set again causes the THR data to be overwritten.
 *
 * If FIFOs are enabled and THRE is set (and Programmable THRE mode disabled), 64 characters of data may
 * be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results
 * in the write data being lost.
 *
 * Note: The Divisor Latch Address Bit (DLAB) of the Line Control Register (LCR) must be clear to access
 * this register.
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * RBR, THR, and DLL registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_THR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |
 <7:0>   THR      WO       0x0         NS        Transmit Holding Register                          |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_DLL = MIO UART@ Divisor Latch Low Register
 *
 * The DLH (Divisor Latch High) register in conjunction with DLL (Divisor Latch Low) register form a
 * 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. It is
 * accessed by first setting the DLAB bit (bit 7) in the Line Control Register (LCR). The output baud
 * rate is equal to eclk frequency divided by sixteen times the value of the baud rate divisor, as
 * follows: baud rate = eclk / (16 * divisor).
 *
 * Note that the BUSY bit (bit 0) of the UART Status Register (USR) must be clear before writing this
 * register. BUSY bit is always clear in PASS3.
 *
 * Note that with the Divisor Latch Registers (DLL and DLH) set to zero, the baud clock is disabled
 * and no serial communications will occur. Also, once the DLL or DLH is set, at least 8 clock cycles
 * of eclk should be allowed to pass before transmitting or receiving data.
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * RBR, THR, and DLL registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_DLL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |
 <7:0>   DLL      R/W      0x0         NS        Divisor Latch Low Register                         |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_IER = MIO UART@ Interrupt Enable Register
 *
 * Interrupt Enable Register (IER) is a read/write register that contains four bits that enable
 * the generation of interrupts. These four bits are the Enable Received Data Available Interrupt
 * (ERBFI), the Enable Transmitter Holding Register Empty Interrupt (ETBEI), the Enable Receiver Line
 * Status Interrupt (ELSI), and the Enable Modem Status Interrupt (EDSSI).
 *
 * The IER also contains an enable bit (PTIME) for the Programmable THRE Interrupt mode.
 *
 * Note: The Divisor Latch Address Bit (DLAB) of the Line Control Register (LCR) must be clear to access
 * this register.
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * IER and DLH registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_IER Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |
 <7>     PTIME    R/W      0x0         NS        Programmable THRE Interrupt mode enable            |
 <6:4>   NS       RAZ      NS          NS        Reserved                                           |
 <3>     EDSSI    R/W      0x0         NS        Enable Modem Status Interrupt                      |
 <2>     ELSI     R/W      0x0         NS        Enable Receiver Line Status Interrupt              |
 <1>     ETBEI    R/W      0x0         NS        Enable Transmitter Holding Register Empty Interrupt|
 <0>     ERBFI    R/W      0x0         NS        Enable Received Data Available Interrupt           |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_DLH = MIO UART@ Divisor Latch High Register
 *
 * The DLH (Divisor Latch High) register in conjunction with DLL (Divisor Latch Low) register form a
 * 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. It is
 * accessed by first setting the DLAB bit (bit 7) in the Line Control Register (LCR). The output baud
 * rate is equal to eclk frequency divided by sixteen times the value of the baud rate divisor, as
 * follows: baud rate = eclk / (16 * divisor).
 *
 * Note that the BUSY bit (bit 0) of the UART Status Register (USR) must be clear before writing this
 * register. BUSY bit is always clear in PASS3.
 *
 * Note that with the Divisor Latch Registers (DLL and DLH) set to zero, the baud clock is disabled
 * and no serial communications will occur. Also, once the DLL or DLH is set, at least 8 clock cycles
 * of eclk should be allowed to pass before transmitting or receiving data.
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * IER and DLH registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_DLH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |
 <7:0>   DLH      R/W      0x0         NS        Divisor Latch High Register                        |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_IIR = MIO UART@ Interrupt Identity Register
 *
 * The Interrupt Identity Register (IIR) is a read-only register that identifies the source of an
 * interrupt. The upper two bits of the register are FIFO-enabled bits. These bits are '00' if the FIFOs
 * are disabled, and '11' if they are enabled. The lower four bits identify the highest priority pending
 * interrupt. The following table defines interrupt source decoding, interrupt priority, and interrupt
 * reset control:
 *
 * Interrupt   Priority   Interrupt         Interrupt                                       Interrupt
 * ID          Level      Type              Source                                          Reset By
 * ---------------------------------------------------------------------------------------------------------------------------------
 * 0001        -          None              None                                            -
 *
 * 0110        Highest    Receiver Line     Overrun, parity, or framing errors or break     Reading the Line Status Register
 *                        Status            interrupt
 *
 * 0100        Second     Received Data     Receiver data available (FIFOs disabled) or     Reading the Receiver Buffer Register
 *                        Available         RX FIFO trigger level reached (FIFOs            (FIFOs disabled) or the FIFO drops below
 *                                          enabled)                                        the trigger level (FIFOs enabled)
 *
 * 1100        Second     Character         No characters in or out of the RX FIFO          Reading the Receiver Buffer Register
 *                        Timeout           during the last 4 character times and there
 *                        Indication        is at least 1 character in it during this
 *                                          time
 *
 * 0010        Third      Transmitter       Transmitter Holding Register Empty              Reading the Interrupt Identity Register
 *                        Holding           (Programmable THRE Mode disabled) or TX         (if source of interrupt) or writing into
 *                        Register          FIFO at or below threshold (Programmable        THR (FIFOs or THRE Mode disabled) or TX
 *                        Empty             THRE Mode enabled)                              FIFO above threshold (FIFOs and THRE
 *                                                                                          Mode enabled)
 *
 * 0000        Fourth     Modem Status      Clear To Send (CTS) or Data Set Ready (DSR)     Reading the Modem Status Register
 *                        Changed           or Ring Indicator (RI) or Data Carrier
 *                                          Detect (DCD) changed (note: if auto flow
 *                                          control mode is enabled, a change in CTS
 *                                          will not cause an interrupt)
 *
 * 0111        Fifth      Busy Detect       Software has tried to write to the Line         Reading the UART Status Register
 *                        Indication        Control Register while the BUSY bit of the
 *                                          UART Status Register was set
 *
 * Note: The Busy Detect Indication interrupt has been removed from PASS3 and will never assert.
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * IIR and FCR registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_IIR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |
 <7:6>   FEN      RO       0x0         NS        FIFO-enabled bits                                  |
 <5:4>   NS       RAZ      0x0         NS        Reserved                                           |
 <3:0>   IID      RO       0x1         NS        Interrupt ID                                       |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_FCR = MIO UART@ FIFO Control Register
 *
 * The FIFO Control Register (FCR) is a write-only register that controls the read and write data FIFO
 * operation. When FIFOs and Programmable THRE Interrupt mode are enabled, this register also controls
 * the THRE Interrupt empty threshold level.
 *
 * Setting bit 0 of the FCR enables the transmit and receive FIFOs. Whenever the value of this bit is
 * changed both the TX and RX FIFOs will be reset.
 *
 * Writing a '1' to bit 1 of the FCR resets and flushes data in the receive FIFO. Note that this bit is
 * self-clearing and it is not necessary to clear this bit.
 *
 * Writing a '1' to bit 2 of the FCR resets and flushes data in the transmit FIFO. Note that this bit is
 * self-clearing and it is not necessary to clear this bit.
 *
 * If the FIFOs and Programmable THRE Interrupt mode are enabled, bits 4 and 5 control the empty
 * threshold level at which THRE Interrupts are generated when the mode is active.  See the following
 * table for encodings:
 *
 * TX Trigger
 * ----------
 * 00 = empty FIFO
 * 01 = 2 chars in FIFO
 * 10 = FIFO 1/4 full
 * 11 = FIFO 1/2 full
 *
 * If the FIFO mode is enabled (bit 0 of the FCR is set to '1') bits 6 and 7 are active. Bit 6 and bit 7
 * set the trigger level in the receiver FIFO for the Enable Received Data Available Interrupt (ERBFI).
 * In auto flow control mode the trigger is used to determine when the rts_n signal will be deasserted.
 * See the following table for encodings:
 *
 * RX Trigger
 * ----------
 * 00 = 1 char in FIFO
 * 01 = FIFO 1/4 full
 * 10 = FIFO 1/2 full
 * 11 = FIFO 2 chars less than full
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * IIR and FCR registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_FCR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |
 <7:6>   RXTRIG   WO       0x0         NS        RX Trigger                                         |
 <5:4>   TXTRIG   WO       0x0         NS        TX Trigger                                         |
 <3>     NS       RAZ      NS          NS        Reserved                                           |
 <2>     TXFR     WO       0x0         NS        TX FIFO reset                                      |
 <1>     RXFR     WO       0x0         NS        RX FIFO reset                                      |
 <0>     EN       WO       0x0         NS        FIFO enable                                        |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_LCR = MIO UART@ Line Control Register
 *
 * The Line Control Register (LCR) controls the format of the data that is transmitted and received by
 * the UART.
 *
 * LCR bits 0 and 1 are the Character Length Select field. This field is used to select the number of
 * data bits per character that are transmitted and received. See the following table for encodings:
 *
 * CLS
 * ---
 * 00 = 5 bits (bits 0-4 sent)
 * 01 = 6 bits (bits 0-5 sent)
 * 10 = 7 bits (bits 0-6 sent)
 * 11 = 8 bits (all bits sent)
 *
 * LCR bit 2 controls the number of stop bits transmitted. If bit 2 is a '0', one stop bit is transmitted
 * in the serial data. If bit 2 is a '1' and the data bits are set to '00', one and a half stop bits are
 * generated. Otherwise, two stop bits are generated and transmitted in the serial data out. Note that
 * regardless of the number of stop bits selected the receiver will only check the first stop bit.
 *
 * LCR bit 3 is the Parity Enable bit. This bit is used to enable and disable parity generation and
 * detection in transmitted and received serial character respectively.
 *
 * LCR bit 4 is the Even Parity Select bit. If parity is enabled, bit 4 selects between even and odd
 * parity. If bit 4 is a '1', an even number of ones is transmitted or checked. If bit 4 is a '0', an odd
 * number of ones is transmitted or checked.
 *
 * LCR bit 6 is the Break Control bit. Setting the Break bit sends a break signal by holding the sout
 * line low (when not in Loopback mode, as determined by Modem Control Register bit 4). When in Loopback
 * mode, the break condition is internally looped back to the receiver.
 *
 * LCR bit 7 is the Divisor Latch Address bit. Setting this bit enables reading and writing of the
 * Divisor Latch register (DLL and DLH) to set the baud rate of the UART. This bit must be cleared after
 * initial baud rate setup in order to access other registers.
 *
 * Note: The LCR is writeable only when the UART is not busy (when the BUSY bit (bit 0) of the UART
 * Status Register (USR) is clear). The LCR is always readable. In PASS3, the LCR is always writable
 * because the BUSY bit is always clear.
 *

     ==============================================================
     MIO_UART(0..1)_LCR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |
 <7>     DLAB     R/W      0x0         NS        Divisor Latch Address bit                          |
 <6>     BREAK    R/W      0x0         NS        Break Control bit                                  |
 <5>     NS       RAZ      NS          NS        Reserved                                           |
 <4>     EPS      R/W      0x0         NS        Even Parity Select bit                             |
 <3>     PEN      R/W      0x0         NS        Parity Enable bit                                  |
 <2>     STOP     R/W      0x0         NS        Stop Control bit                                   |
 <1:0>   CLS      R/W      0x0         NS        Character Length Select                            |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_MCR = MIO UART@ Modem Control Register
 *
 * The lower four bits of the Modem Control Register (MCR) directly manipulate the outputs of the UART.
 * The DTR (bit 0), RTS (bit 1), OUT1 (bit 2), and OUT2 (bit 3) bits are inverted and then drive the
 * corresponding UART outputs, dtr_n, rts_n, out1_n, and out2_n.  In loopback mode, these outputs are
 * driven inactive high while the values in these locations are internally looped back to the inputs.
 *
 * Note: When Auto RTS is enabled, the rts_n output is controlled in the same way, but is also gated
 * with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The
 * rts_n output will be de-asserted whenever RTS (bit 1) is set low.
 *
 * Note: The UART0 out1_n and out2_n outputs are not present on the pins of the chip, but the UART0 OUT1
 * and OUT2 bits still function in Loopback mode.  The UART1 dtr_n, out1_n, and out2_n outputs are not
 * present on the pins of the chip, but the UART1 DTR, OUT1, and OUT2 bits still function in Loopback
 * mode.
 *
 * MCR bit 4 is the Loopback bit. When set, data on the sout line is held high, while serial data output
 * is looped back to the sin line, internally. In this mode all the interrupts are fully functional. This
 * feature is used for diagnostic purposes. Also, in loopback mode, the modem control inputs (dsr_n,
 * cts_n, ri_n, dcd_n) are disconnected and the four modem control outputs (dtr_n, rts_n, out1_n, out1_n)
 * are looped back to the inputs, internally.
 *
 * MCR bit 5 is the Auto Flow Control Enable (AFCE) bit. When FIFOs are enabled and this bit is set,
 * 16750-compatible Auto RTS and Auto CTS serial data flow control features are enabled.
 *
 * Auto RTS becomes active when the following occurs:
 * 1. MCR bit 1 is set
 * 2. FIFOs are enabled by setting FIFO Control Register (FCR) bit 0
 * 3. MCR bit 5 is set (must be set after FCR bit 0)
 *
 * When active, the rts_n output is forced inactive-high when the receiver FIFO level reaches the
 * threshold set by FCR[7:6]. When rts_n is connected to the cts_n input of another UART device, the
 * other UART stops sending serial data until the receiver FIFO has available space.
 *
 * The selectable receiver FIFO threshold values are: 1, 1/4, 1/2, and 2 less than full. Since one
 * additional character may be transmitted to the UART after rts_n has become inactive (due to data
 * already having entered the transmitter block in the other UART), setting the threshold to 2 less
 * than full allows maximum use of the FIFO with a safety zone of one character.
 *
 * Once the receiver FIFO becomes completely empty by reading the Receiver Buffer Register (RBR), rts_n
 * again becomes active-low, signalling the other UART to continue sending data. It is important to note
 * that, even if everything else is set to Enabled and the correct MCR bits are set, if the FIFOs are
 * disabled through FCR[0], Auto Flow Control is also disabled. When Auto RTS is disabled or inactive,
 * rts_n is controlled solely by MCR[1].
 *
 * Auto CTS becomes active when the following occurs:
 * 1. FIFOs are enabled by setting FIFO Control Register (FCR) bit 0
 * 2. MCR bit 5 is set (must be set after FCR bit 0)
 *
 * When active, the UART transmitter is disabled whenever the cts_n input becomes inactive-high. This
 * prevents overflowing the FIFO of the receiving UART.
 *
 * Note that, if the cts_n input is not inactivated before the middle of the last stop bit, another
 * character is transmitted before the transmitter is disabled. While the transmitter is disabled, the
 * transmitter FIFO can still be written to, and even overflowed. Therefore, when using this mode, either
 * the true FIFO depth (64 characters) must be known to software, or the Programmable THRE Interrupt mode
 * must be enabled to access the FIFO full status through the Line Status Register. When using the FIFO
 * full status, software can poll this before each write to the Transmitter FIFO.
 *
 * Note: FIFO full status is also available in the UART Status Register (USR) or the actual level of the
 * FIFO may be read through the Transmit FIFO Level (TFL) register.
 *
 * When the cts_n input becomes active-low again, transmission resumes. It is important to note that,
 * even if everything else is set to Enabled, Auto Flow Control is also disabled if the FIFOs are
 * disabled through FCR[0]. When Auto CTS is disabled or inactive, the transmitter is unaffected by
 * cts_n.
 *

     ==============================================================
     MIO_UART(0..1)_MCR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |
 <7:6>   NS       RAZ      NS          NS        Reserved                                           |
 <5>     AFCE     R/W      0x0         NS        Auto Flow Control Enable bit                       |
 <4>     LOOP     R/W      0x0         NS        Loopback bit                                       |
 <3>     OUT2     R/W      0x0         NS        OUT2 output bit                                    |
 <2>     OUT1     R/W      0x0         NS        OUT1 output bit                                    |
 <1>     RTS      R/W      0x0         NS        Request To Send output bit                         |
 <0>     DTR      R/W      0x0         NS        Data Terminal Ready output bit                     |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_LSR = MIO UART@ Line Status Register
 *
 * The Line Status Register (LSR) contains status of the receiver and transmitter data transfers. This
 * status can be read by the user at anytime.
 *
 * LSR bit 0 is the Data Ready (DR) bit. When set, this bit indicates the receiver contains at least one
 * character in the RBR or the receiver FIFO. This bit is cleared when the RBR is read in the non-FIFO
 * mode, or when the receiver FIFO is empty, in FIFO mode.
 *
 * LSR bit 1 is the Overrun Error (OE) bit. When set, this bit indicates an overrun error has occurred
 * because a new data character was received before the previous data was read. In the non-FIFO mode, the
 * OE bit is set when a new character arrives in the receiver before the previous character was read from
 * the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error
 * occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is
 * retained and the data in the receive shift register is lost.
 *
 * LSR bit 2 is the Parity Error (PE) bit. This bit is set whenever there is a parity error in the
 * receiver if the Parity Enable (PEN) bit in the LCR is set. In the FIFO mode, since the parity error is
 * associated with a character received, it is revealed when the character with the parity error arrives
 * at the top of the FIFO. It should be noted that the Parity Error (PE) bit will be set if a break
 * interrupt has occurred, as indicated by the Break Interrupt (BI) bit.
 *
 * LSR bit 3 is the Framing Error (FE) bit. This bit is set whenever there is a framing error in the
 * receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received
 * data. In the FIFO mode, since the framing error is associated with a character received, it is
 * revealed when the character with the framing error is at the top of the FIFO. When a framing error
 * occurs the UART will try resynchronize. It does this by assuming that the error was due to the start
 * bit of the next character and then continues receiving the other bits (i.e. data and/or parity and
 * stop). It should be noted that the Framing Error (FE) bit will be set if a break interrupt has
 * occurred, as indicated by the Break Interrupt (BI) bit.
 *
 * Note: The OE, PE, and FE bits are reset when a read of the LSR is performed.
 *
 * LSR bit 4 is the Break Interrupt (BI) bit. This bit is set whenever the serial input (sin) is held in
 * a 0 state for longer than the sum of start time + data bits + parity + stop bits. A break condition on
 * sin causes one and only one character, consisting of all zeros, to be received by the UART. In the
 * FIFO mode, the character associated with the break condition is carried through the FIFO and is
 * revealed when the character is at the top of the FIFO. Reading the LSR clears the BI bit. In the non-
 * FIFO mode, the BI indication occurs immediately and persists until the LSR is read.
 *
 * LSR bit 5 is the Transmitter Holding Register Empty (THRE) bit. When Programmable THRE Interrupt mode
 * is disabled, this bit indicates that the UART can accept a new character for transmission. This bit is
 * set whenever data is transferred from the THR (or TX FIFO) to the transmitter shift register and no
 * new data has been written to the THR (or TX FIFO). This also causes a THRE Interrupt to occur, if the
 * THRE Interrupt is enabled. When FIFOs and Programmable THRE Interrupt mode are enabled, LSR bit 5
 * functionality is switched to indicate the transmitter FIFO is full, and no longer controls THRE
 * Interrupts, which are then controlled by the FCR[5:4] threshold setting.
 *
 * LSR bit 6 is the Transmitter Empty (TEMT) bit. In the FIFO mode, this bit is set whenever the
 * Transmitter Shift Register and the FIFO are both empty. In the non-FIFO mode, this bit is set whenever
 * the Transmitter Holding Register and the Transmitter Shift Register are both empty. This bit is
 * typically used to make sure it is safe to change control registers. Changing control registers while
 * the transmitter is busy can result in corrupt data being transmitted.
 *
 * LSR bit 7 is the Error in Receiver FIFO (FERR) bit. This bit is active only when FIFOs are enabled. It
 * is set when there is at least one parity error, framing error, or break indication in the FIFO. This
 * bit is cleared when the LSR is read and the character with the error is at the top of the receiver
 * FIFO and there are no subsequent errors in the FIFO.
 *

     ==============================================================
     MIO_UART(0..1)_LSR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |
 <7>     FERR     RC       0x0         NS        Error in Receiver FIFO bit                         |
 <6>     TEMT     RO       0x1         NS        Transmitter Empty bit                              |
 <5>     THRE     RO       0x1         NS        Transmitter Holding Register Empty bit             |
 <4>     BI       RC       0x0         NS        Break Interrupt bit                                |
 <3>     FE       RC       0x0         NS        Framing Error bit                                  |
 <2>     PE       RC       0x0         NS        Parity Error bit                                   |
 <1>     OE       RC       0x0         NS        Overrun Error bit                                  |
 <0>     DR       RO       0x0         NS        Data Ready bit                                     |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_MSR = MIO UART@ Modem Status Register
 *
 * The Modem Status Register (MSR) contains the current status of the modem control input lines and if
 * they changed.
 *
 * DCTS (bit 0), DDSR (bit 1), and DDCD (bit 3) bits record whether the modem control lines (cts_n,
 * dsr_n, and dcd_n) have changed since the last time the user read the MSR. TERI (bit 2) indicates ri_n
 * has changed from an active-low, to an inactive-high state since the last time the MSR was read. In
 * Loopback mode, DCTS reflects changes on MCR bit 1 (RTS), DDSR reflects changes on MCR bit 0 (DTR), and
 * DDCD reflects changes on MCR bit 3 (Out2), while TERI reflects when MCR bit 2 (Out1) has changed state
 * from a high to a low.
 *
 * Note: if the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software
 * or otherwise), then the DCTS bit will get set when the reset is removed if the cts_n signal remains
 * asserted.
 *
 * The CTS, DSR, RI, and DCD Modem Status bits contain information on the current state of the modem
 * control lines. CTS (bit 4) is the compliment of cts_n, DSR (bit 5) is the compliment of dsr_n, RI
 * (bit 6) is the compliment of ri_n, and DCD (bit 7) is the compliment of dcd_n. In Loopback mode, CTS
 * is the same as MCR bit 1 (RTS), DSR is the same as MCR bit 0 (DTR), RI is the same as MCR bit 2
 * (Out1), and DCD is the same as MCR bit 3 (Out2).
 *
 * Note: The UART0 dsr_n and ri_n inputs are internally tied to power and not present on the pins of chip.
 * Thus the UART0 DSR and RI bits will be '0' when not in Loopback mode.  The UART1 dsr_n, ri_n, and dcd_n
 * inputs are internally tied to power and not present on the pins of chip. Thus the UART1 DSR, RI, and
 * DCD bits will be '0' when not in Loopback mode.
 *

     ==============================================================
     MIO_UART(0..1)_MSR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |
 <7>     DCD      RO       0x0         NS        Data Carrier Detect input bit                      |
 <6>     RI       RO       0x0         NS        Ring Indicator input bit                           |
 <5>     DSR      RO       0x0         NS        Data Set Ready input bit                           |
 <4>     CTS      RO       NS          NS        Clear To Send input bit                            |
 <3>     DDCD     RC       0x0         NS        Delta Data Carrier Detect bit                      |
 <2>     TERI     RC       0x0         NS        Trailing Edge of Ring Indicator bit                |
 <1>     DDSR     RC       0x0         NS        Delta Data Set Ready bit                           |
 <0>     DCTS     RC       0x0         NS        Delta Clear To Send bit                            |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_SCR = MIO UART@ Scratchpad Register
 *
 * The Scratchpad Register (SCR) is an 8-bit read/write register for programmers to use as a temporary
 * storage space.
 *

     ==============================================================
     MIO_UART(0..1)_SCR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |
 <7:0>   SCR      R/W      0x0         NS        Scratchpad Register                                |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_FAR = MIO UART@ FIFO Access Register
 *
 * The FIFO Access Register (FAR) is used to enable a FIFO access mode for testing, so that the receive
 * FIFO can be written by software and the transmit FIFO can be read by software when the FIFOs are
 * enabled. When FIFOs are not enabled it allows the RBR to be written by software and the THR to be read
 * by software. Note, that when the FIFO access mode is enabled/disabled, the control portion of the
 * receive FIFO and transmit FIFO is reset and the FIFOs are treated as empty.
 *

     ==============================================================
     MIO_UART(0..1)_FAR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved                                           |
 <0>     FAR      R/W      0x0         NS        FIFO Access Register                               |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_TFR = MIO UART@ Transmit FIFO Read Register
 *
 * The Transmit FIFO Read Register (TFR) is only valid when FIFO access mode is enabled (FAR bit 0 is
 * set). When FIFOs are enabled, reading this register gives the data at the top of the transmit FIFO.
 * Each consecutive read pops the transmit FIFO and gives the next data value that is currently at the
 * top of the FIFO. When FIFOs are not enabled, reading this register gives the data in the THR.
 *

     ==============================================================
     MIO_UART(0..1)_TFR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |
 <7:0>   TFR      RO       0x0         NS        Transmit FIFO Read Register                        |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_RFW = MIO UART@ Receive FIFO Write Register
 *
 * The Receive FIFO Write Register (RFW) is only valid when FIFO access mode is enabled (FAR bit 0 is
 * set). When FIFOs are enabled, this register is used to write data to the receive FIFO. Each
 * consecutive write pushes the new data to the next write location in the receive FIFO. When FIFOs are
 * not enabled, this register is used to write data to the RBR.
 *

     ==============================================================
     MIO_UART(0..1)_RFW Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS       RAZ      NS          NS        Reserved                                           |
 <9>     RFFE     WO       0x0         NS        Receive FIFO Framing Error                         |
 <8>     RFPE     WO       0x0         NS        Receive FIFO Parity Error                          |
 <7:0>   RFWD     WO       0x0         NS        Receive FIFO Write Data                            |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_USR = MIO UART@ UART Status Register
 *
 * The UART Status Register (USR) contains UART status information.
 *
 * USR bit 0 is the BUSY bit.  When set this bit indicates that a serial transfer is in progress, when
 * clear it indicates that the UART is idle or inactive.
 *
 * Note: In PASS3, the BUSY bit will always be clear.
 *
 * USR bits 1-4 indicate the following FIFO status: TX FIFO Not Full (TFNF), TX FIFO Empty (TFE), RX
 * FIFO Not Empty (RFNE), and RX FIFO Full (RFF).
 *

     ==============================================================
     MIO_UART(0..1)_USR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:5>  NS       RAZ      NS          NS        Reserved                                           |
 <4>     RFF      RO       0x0         NS        RX FIFO Full                                       |
 <3>     RFNE     RO       0x0         NS        RX FIFO Not Empty                                  |
 <2>     TFE      RO       0x1         NS        TX FIFO Empty                                      |
 <1>     TFNF     RO       0x1         NS        TX FIFO Not Full                                   |
 <0>     BUSY     RO       0x0         NS        Busy bit (always 0 in PASS3)                       |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_TFL = MIO UART@ Transmit FIFO Level Register
 *
 * The Transmit FIFO Level Register (TFL) indicates the number of data entries in the transmit FIFO.
 *

     ==============================================================
     MIO_UART(0..1)_TFL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved                                           |
 <6:0>   TFL      RO       0x0         NS        Transmit FIFO Level Register                       |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_RFL = MIO UART@ Receive FIFO Level Register
 *
 * The Receive FIFO Level Register (RFL) indicates the number of data entries in the receive FIFO.
 *

     ==============================================================
     MIO_UART(0..1)_RFL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved                                           |
 <6:0>   RFL      RO       0x0         NS        Receive FIFO Level Register                        |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_SRR = MIO UART@ Software Reset Register
 *
 * The Software Reset Register (SRR) is a write-only register that resets the UART and/or the receive
 * FIFO and/or the transmit FIFO.
 *
 * Bit 0 of the SRR is the UART Soft Reset (USR) bit.  Setting this bit resets the UART.
 *
 * Bit 1 of the SRR is a shadow copy of the RX FIFO Reset bit (FCR bit 1). This can be used to remove
 * the burden on software having to store previously written FCR values (which are pretty static) just
 * to reset the receive FIFO.
 *
 * Bit 2 of the SRR is a shadow copy of the TX FIFO Reset bit (FCR bit 2). This can be used to remove
 * the burden on software having to store previously written FCR values (which are pretty static) just
 * to reset the transmit FIFO.
 *

     ==============================================================
     MIO_UART(0..1)_SRR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:3>  NS       RAZ      NS          NS        Reserved                                           |
 <2>     STFR     WO       0x0         NS        Shadow TX FIFO Reset                               |
 <1>     SRFR     WO       0x0         NS        Shadow RX FIFO Reset                               |
 <0>     USR      WO       0x0         NS        UART Soft Reset                                    |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_SRTS = MIO UART@ Shadow Request To Send Register
 *
 * The Shadow Request To Send Register (SRTS) is a shadow register for the RTS bit (MCR bit 1) that can
 * be used to remove the burden of having to perform a read-modify-write on the MCR.
 *

     ==============================================================
     MIO_UART(0..1)_SRTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved                                           |
 <0>     SRTS     R/W      0x0         NS        Shadow Request To Send                             |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_SBCR = MIO UART@ Shadow Break Control Register
 *
 * The Shadow Break Control Register (SBCR) is a shadow register for the BREAK bit (LCR bit 6) that can
 * be used to remove the burden of having to perform a read-modify-write on the LCR.
 *

     ==============================================================
     MIO_UART(0..1)_SBCR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved                                           |
 <0>     SBCR     R/W      0x0         NS        Shadow Break Control                               |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_SFE = MIO UART@ Shadow FIFO Enable Register
 *
 * The Shadow FIFO Enable Register (SFE) is a shadow register for the FIFO enable bit (FCR bit 0) that
 * can be used to remove the burden of having to store the previously written value to the FCR in memory
 * and having to mask this value so that only the FIFO enable bit gets updated.
 *

     ==============================================================
     MIO_UART(0..1)_SFE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved                                           |
 <0>     SFE      R/W      0x0         NS        Shadow FIFO Enable                                 |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_SRT = MIO UART@ Shadow RX Trigger Register
 *
 * The Shadow RX Trigger Register (SRT) is a shadow register for the RX Trigger bits (FCR bits 7:6) that
 * can be used to remove the burden of having to store the previously written value to the FCR in memory
 * and having to mask this value so that only the RX Trigger bits get updated.
 *

     ==============================================================
     MIO_UART(0..1)_SRT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved                                           |
 <1:0>   SRT      R/W      0x0         NS        Shadow RX Trigger                                  |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_STT = MIO UART@ Shadow TX Trigger Register
 *
 * The Shadow TX Trigger Register (STT) is a shadow register for the TX Trigger bits (FCR bits 5:4) that
 * can be used to remove the burden of having to store the previously written value to the FCR in memory
 * and having to mask this value so that only the TX Trigger bits get updated.
 *

     ==============================================================
     MIO_UART(0..1)_STT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved                                           |
 <1:0>   STT      R/W      0x0         NS        Shadow TX Trigger                                  |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_HTX = MIO UART@ Halt TX Register
 *
 * The Halt TX Register (HTX) is used to halt transmissions for testing, so that the transmit FIFO can be
 * filled by software when FIFOs are enabled. If FIFOs are not enabled, setting the HTX register will
 * have no effect.
 *

     ==============================================================
     MIO_UART(0..1)_HTX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved                                           |
 <0>     HTX      R/W      0x0         NS        Halt TX                                            |
----------------------------------------------------------------------------------------------------
===




     ==============================================================
     MIO_FUS_DAT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>  MAN_INFO RO       NS          NS        Fuse information - manufacturing info [31:0]       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_DAT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>  MAN_INFO RO       NS          NS        Fuse information - manufacturing info [63:32]      |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_DAT2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:37> NS          RAZ      NS          NS       Reserved				            |
 <36:35> POWER_LIMIT RO       NS          NS       Fuse information - Power limit                   |
 <34>    DORM_CRYPTO RO       NS          NS       Fuse information - Dormant Encryption enable     |
 <33>	 FUS318	     RO	      NS	  NS	   Reserved                                 	    |
 <32>    RAID_EN     RO	      NS	  NS  	   Fuse information - RAID enabled		    |
 <31:29> NS          RO       NS          NS       Fuse information - Spare Fuse[76:74]             |
 <28>    NODFA_CP2   RO       NS          NS       Fuse information - DFA Disable (CP2)             |
 <27>    NOMUL       RO       NS          NS       Fuse information - VMUL disable                  |
 <26>    NOCRYPTO    RO       NS          NS       Fuse information - AES/DES/HASH disable          |
 <25:24> NS          RO       NS          NS       Fuse information - Spare fuse[73:72]             |
 <23:16> CHIP_ID     RO       NS          NS       Fuse information - CHIP_ID                       |
 <15:0>  NS          RO       NS          NS       Fuse information - Spare fuse[15:0]              |

Notes:
CHIP_ID is consumed in several places within Octeon.

   * Core COP0 ProcessorIdentification[Revision]
   * Core EJTAG DeviceIdentification[Version]
   * PCI_CFG02[RID]
   * JTAG controller

Note: The JTAG controller gets CHIP_ID[3:0] solely from the laser fuses.
Modification to the efuses will not change what the JTAG controller reports
for CHIP_ID.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_DAT3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:58> NS           RAZ      NS          NS        Reserved				                |
 <57:48> PLL_CTL      RO       NS          NS        Fuse information - PLL control                     |
 <47:45> DFA_INFO_DTE RO       NS          NS        Fuse information - DFA information (DTE)           |
 <44:41> DFA_INFO_CLM RO       NS          NS        Fuse information - DFA information (Cluster mask)  |
 <40>    NS           RAZ      NS          NS        Reserved				                |
 <39:38> EMA          RO       NS          NS        Fuse information - EMA                             |
 <37>    EFUS_LCK_RSV RO       NS          NS        Fuse information - efuse lockdown                  |
 <36>    EFUS_LCK_MAN RO       NS          NS        Fuse information - efuse lockdown                  |
 <35>    PLL_HALF_DIS RO       NS          NS        Fuse information - RCLK PLL control                |
 <34:32> L2C_CRIP     RO       NS          NS        Fuse information - L2C Cripple (1/8, 1/4, 1/2)     |
 <31>    SPARE        RO       NS          NS        Spare Fuses                                        |
 <30:29> ZIP_INFO     RO       NS          NS        Fuse information - Zip information                 |
 <28>    BAR2_EN      RO       NS          NS        Fuse information - BAR2 Present (when blown '1')   |
 <27>    EFUS_LCK     RO       NS          NS        Fuse information - efuse lockdown                  |
 <26>    EFUS_IGN     RO       NS          NS        Fuse information - efuse ignore                    |
 <25>    NOZIP        RO       NS          NS        Fuse information - ZIP disable                     |
 <24>    NODFA_DTE    RO       NS          NS        Fuse information - DFA Disable (DTE)               |
 <23:0>  NS           RAZ      NS          NS        Reserved			  	                |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_PDF Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  PDF      RO       NS          NS        Fuse information - Product Definition Field        |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_RCMD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:24> NS       RAZ      NS          NS        Reserved				            |
 <23:16> DAT      RO       NS          NS        8bits of fuse data				    |
 <15:13> NS       RAZ      NS          NS        Reserved				            |
 <12>    PEND     R/W	   0	       0	 SW sets this bit on a write to start FUSE read	    |
						  operation.  HW clears when read is complete and   |
						  the DAT is valid				    |
 <11:9>  NS       RAZ      NS          NS        Reserved				            |
 <8>     EFUSE    R/W      0           0         When set, return data from the efuse storage	    |
						  rather than the local storage                     |
 <7:0>   ADDR     R/W      0           0         The byte address of the fuse to read               |

Notes:
To read an efuse, SW writes MIO_FUS_RCMD[ADDR,PEND] with the byte address of
the fuse in question, then SW can poll MIO_FUS_RCMD[PEND].  When PEND is
clear, then MIO_FUS_RCMD[DAT] is valid.  In addition, if the efuse read went
to the efuse banks (eg. ((ADDR/16) not {0,1,7}) || EFUSE) SW can read
MIO_FUS_BNK_DATX which contains all 128 fuses in the bank associated in
ADDR.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_WADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        Reserved				            |
 <3:0>   ADDR     R/W      NS          NS        Which of the banks of 128 fuses to blow            |
----------------------------------------------------------------------------------------------------
===

 *DON'T PUT IN HRM*

     ==============================================================
     MIO_FUS_PROG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved				            |
 <1>     SOFT     R/W      0           0         When set with PROG, causes only the local storeage |
						  to change.  Will not really blow any fuses.  HW   |
                                                  will clear when the program operation is complete |

 <0>     PROG     R/W      NS          NS        Blow the fuse bank                                 |
						  SW will set PROG, and then the HW will clear	    |
						  when the program operation is complete            |

Notes:

This CSR is not present in the HRM.

To write a bank of fuses, SW must set MIO_FUS_WADR[ADDR] to the bank to be
programmed and then set each bit within MIO_FUS_BNK_DATX to indicate which
fuses to blow.  Once ADDR, and DAT are setup, SW can write to
MIO_FUS_PROG[PROG] to start the bank write and poll on PROG.  Once PROG is
clear, the bank write is complete.

A soft blow is still subject to lockdown fuses.  After a soft/warm reset, the
chip will behave as though the fuses were actually blown.  A cold reset restores
the actual fuse valuse.

----------------------------------------------------------------------------------------------------
===

 *DON'T PUT IN HRM*

     ==============================================================
     MIO_FUS_PROG_TIMES Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:35> NS        RAZ      NS          NS        Reserved				            |
 <34>    VGATE_PIN RO       0           0         efuse vgate pin (L6G)				    |
 <33>    FSRC_PIN  RO       0           0         efuse fsource pin (L6G)			    |
 <32>    PROG_PIN  RO       0           0         efuse program pin (IFB)			    |
 <31:25> OUT       R/W      1           NS        efuse timing param                                |
						 						    |
                                                 OUT = (tOUT/refclk period)-1                       |
						 						    |
						 For IFB: tOUT =  20ns                              |
                                                 For L6G: tOUT =  20ns				    |
						 						    |
 <24:21> SCLK_LO  R/W      1           NS        efuse timing param                                 |
						 						    |
                                                 SCLK_LO=(tSLO/refclk period)-1                     |
						 						    |
						 For IFB: tSLO =  20ns                              |
                                                 For L6G: tSLO =  20ns				    |
						 						    |
 <20:6>  SCLK_HI  R/W      5000        NS        efuse timing param                                 |
						 						    |
                                                 SCLK_HI=(tSHI/refclk period)-1                     |
						 						    |
						 For IFB: tSHI =  200us                             |
                                                 For L6G: tSHI =  25us				    |
						 						    |
 <5:0>   SETUP    R/W      1           NS        efuse timing param                                 |
						 						    |
                                                 SETUP = (tWRS/refclk period)-1                     |
						 						    |
						 For IFB: tWRS =  20ns                              |
                                                 For L6G: tWRS =  20ns	                            |
						 						    |

Notes:

This CSR is not present in the HRM.

All values must be > 0 for correct electrical operation.

IFB fuses are 0..1791
L6G fuses are 1792 to 2047

The reset values are for IFB fuses for ref_clk of 100MHZ

----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_BNK_DAT(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DAT      R/W      NS          NS        Efuse bank store			            |
					 	 For reads, the DAT gets the fus bank last read     |
					 	 For write, the DAT determines which fuses to blow  |

Notes:
The intial state of MIO_FUS_BNK_DAT* is as if bank6 was just read i.e. DAT* = fus[895:768]
----------------------------------------------------------------------------------------------------
===

 *DON'T PUT IN HRM*

     ==============================================================
     MIO_FUS_SPR_REPAIR_SUM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved (see 	MIO_FUS_REPAIR_RES*)                |
 <0>     TOO_MANY RAZ      NS          NS        Reserved (see 	MIO_FUS_REPAIR_RES*)                |
----------------------------------------------------------------------------------------------------
===

 *DON'T PUT IN HRM*

     ==============================================================
     MIO_FUS_SPR_REPAIR_RES Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:42> NS       RAZ      NS          NS        Reserved (see 	MIO_FUS_REPAIR_RES*)                |
 <41:28> REPAIR2  RAZ      NS          NS        Reserved (see 	MIO_FUS_REPAIR_RES*)                |
 <27:14> REPAIR1  RAZ      NS          NS        Reserved (see 	MIO_FUS_REPAIR_RES*)                |
 <13:0>  REPAIR0  RAZ      NS          NS        Reserved (see 	MIO_FUS_REPAIR_RES*)                |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_EMA Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved				            |
 <6:4>   EFF_EMA  RAZ      NS          NS        Reserved				            |
 <3>     NS       RAZ      NS          NS        Reserved				            |
 <2:0>   EMA      RAZ      NS          NS        Reserved				            |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_REPAIR_RES0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:55> NS       RAZ      NS          NS        Reserved				            |
 <54>    TOO_MANY RO       0           0         Too many defects			            |
 <53:36> REPAIR2  RO       0           0         BISR Results				            |
 <35:18> REPAIR1  RO       0           0         BISR Results				            |
 <17:0>  REPAIR0  RO       0           0         BISR Results				            |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_REPAIR_RES1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:54> NS       RAZ      NS          NS        Reserved				            |
 <53:36> REPAIR5  RO       0           0         BISR Results				            |
 <35:18> REPAIR4  RO       0           0         BISR Results				            |
 <17:0>  REPAIR3  RO       0           0         BISR Results				            |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_REPAIR_RES2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:18> NS       RAZ      NS          NS        Reserved				            |
 <17:0>  REPAIR6  RO       0           0         BISR Results				            |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_READ_TIMES Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:26> NS         RAZ      NS          NS      Reserved				             |
 <25:22> SCH        R/W      15          NS      Hold CS for (SCH+1) refclks after FSET desserts     |
						 						     |
                                                 SCH = (tSCH/refclk period)-1                        |
						 						     |
						 For IFB: tSCH = 160ns                               |
                                                 For L6G: tSCH =  10ns				     |
						 						     |
 <21:18> FSH        R/W      15          NS      Hold FSET for (FSH+1) refclks after PRCHG deasserts |
						 						     |
                                                 FSH = (tFSH/refclk period)-1                        |
						 						     |
						 For IFB: tFSH = 160ns                               |
                                                 For L6G: tFSH =  10ns				     |
						 						     |
 <17:14> PRH        R/W      6           NS      Assert PRCHG (PRH+1) refclks after SIGDEV deasserts |
						 						     |
                                                 PRH = (tPRH/refclk period)-1                        |
						 						     |
                                                 For IFB: tPRH =  70ns			             |
                                                 For L6G: tPRH =  10ns			             |
						 						     |
 <13:10> SDH        R/W      0           NS      Hold SIGDEV for (SDH+1) refclks after FSET asserts  |
						 						     |
                                                 SDH = (tSDH/refclk period)-1                        |
						 						     |
                                                 For IFB: tPRH =  10ns			             |
                                                 For L6G: tPRH =  10ns			             |
						 						     |
 <9:0>   SETUP      R/W      999         NS      Assert CS for (SETUP+1) refclks before asserting    |
						 SIGDEV, FSET, or PRCHG				     |
						 						     |
                                                 SETUP=(tRDS/refclk period)-1                        |
						 						     |
                                                 For IFB: tRDS = 10000ns		             |
                                                 For L6G: tRDS = max(tSCS,tSDS,tPRS)		     |
                                                   where tSCS   = 10ns                               |
						         tSDS   = 10ns                               |
						         tPRS   = 10ns                               |
Notes:
IFB fuses are 0..1791
L6G fuses are 1792 to 2047

The reset values are for IFB fuses for refclk up to 100MHZ when core PLL is enagaged

If any of the formulas above result in a value less than zero, the corresponding
timing parameter should be set to zero.

Prior to issuing a read to the fuse banks (via. MIO_FUS_RCMD), this register
should be written with the timing parameters which correspond to the fuse bank type (IFB vs L6G)
that will be read.

This register should not be written while MIO_FUS_RCMD[PEND]=1.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_PLL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS           RO       NS        NS        Reserved                                         |
 <47:40> RCLK_ALIGN_R RO       NS        NS        RCLK right alignment settings                    |
 <39:32> RCLK_ALIGN_L RO       NS        NS        RCLK left alignment settings                     |
 <31:8>  NS           RAZ      NS        NS        Reserved                                         |
 <7>     C_COUT_RST   R/W      0x0       NS        Core clkout postscaler reset                     |
 <6:5>   C_COUT_SEL   R/W      0x0       NS        Core clkout select                    	    |
                                                   0=RCLK,1=PS output,2=PLL output,3=undivided RCLK |   $PR
 <4>     PNR_COUT_RST R/W      0x0       NS        PNR  clkout postscaler reset	                    |
 <3:2>   PNR_COUT_SEL R/W      0x0       NS        PNR  clkout select                               |
                                                   0=SCLK,1=PS output,2=PLL output,3=undivided RCLK |   $PR
 <1>     RFSLIP       RAZ      0x0       NS        Reserved                                         |
 <0>     FBSLIP       RAZ      0x0       NS        Reserved                                         |

Notes:
The core clkout postscaler should be placed in reset at least 10 ref clocks prior to changing
the core clkout select.  The core clkout postscaler should remain under reset for at least 10
ref clocks after the core clkout select changes.

The pnr clkout postscaler should be placed in reset at least 10 ref clocks prior to changing
the pnr clkout select.  The pnr clkout postscaler should remain under reset for at least 10
ref clocks after the pnr clkout select changes.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_QLM(0..4)_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:12> NS           RAZ      NS        NS        Reserved                                         |
 <11:8>  QLM_SPD      RO       NS        NS        QLM speed                                        |
                                                      0   = 5     Gbaud	                            |
                                                      1   = 2.5   Gbaud	                            |
                                                      2   = 2.5   Gbaud                             |
                                                      3   = 1.25  Gbaud                             |
                                                      4   = 1.25  Gbaud                             |
                                                      5   = 6.25  Gbaud                             |
                                                      6   = 5     Gbaud                             |
                                                      7   = 2.5   Gbaud                             |
                                                      8   = 3.125 Gbaud                             |
                                                      9   = 2.5   Gbaud                             |
                                                      10  = 1.25  Gbaud                             |
                                                      11  = 5     Gbaud                             |
                                                      12  = 6.25  Gbaud                             |
                                                      13  = 3.75  Gbaud                             |
                                                      14  = 3.125 Gbaud                             |
                                                      15  = QLM Disabled                            |
 <7:3>   NS           RAZ      NS        NS        Reserved                                         |
 <2:0>   QLM_CFG      RO       NS        NS        QLM configuration mode                           |
                                                      000 = PCIE	                            |
                                                      001 = ILK                                     |
                                                      010 = SGMII                                   |
                                                      011 = XAUI                                    |
                                                      100 = RESERVED                                |
                                                      101 = RESERVED                                |
                                                      110 = RESERVED                        	    |
                                                      111 = RXAUI                                   |
                                                   NOTE: Internal encodings differ from QLM_MODE    |
                                                         pins encodings                             |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_RST_BOOT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:44> NS         RAZ      NS          NS        Reserved				            |
 <43:40> QLM4_SPD   RO       NS          NS        QLM4_SPD pins sampled at DCOK assertion          |
 <39:36> QLM3_SPD   RO       NS          NS        QLM3_SPD pins sampled at DCOK assertion          |
 <35:30> C_MUL      RO       NS          NS        Core clock multiplier:                           |
                                                      C_MUL = (core clk speed) / (ref clock speed)  |
                                                    "ref clock" is PLL_REF_CLK pin, which should    |
                                                    always be 50 MHz.                               |
 <29:24> PNR_MUL    RO       NS          NS        Coprocessor clock multiplier:                    |
                                                      PNR_MUL = (coprocessor clk speed)             |
                                                                    (ref clock speed)               |
                                                    See C_MUL comments about ref clock.             |
 <23:20> QLM2_SPD   RO       NS          NS        QLM2_SPD pins sampled at DCOK assertion          |
 <19:16> QLM1_SPD   RO       NS          NS        QLM1_SPD pins sampled at DCOK assertion          |
 <15:12> QLM0_SPD   RO       NS          NS        QLM0_SPD pins sampled at DCOK assertion          |
 <11:2>  LBOOT      R/W1C    NS          NS        Last boot cause mask, resets only with dock.     |
												    |
                                                     bit9 - Soft reset due to watchdog		    |
                                                     bit8 - Soft reset due to CIU_SOFT_RST write    |
                                                     bit7 - Warm reset due to cntl0 link-down or    |
                                                            hot-reset                               |
                                                     bit6 - Warm reset due to cntl1 link-down or    |
                                                            hot-reset                               |
                                                     bit5 - Cntl1 reset due to PERST1_L pin	    |
                                                     bit4 - Cntl0 reset due to PERST0_L pin	    |
                                                     bit3 - Warm reset due to PERST1_L pin	    |
                                                     bit2 - Warm reset due to PERST0_L pin	    |
                                                     bit1 - Warm reset due to CHIP_RESET_L pin	    |
                                                     bit0 - Cold reset due to DCOK pin		    |
												    |
 <1>     RBOOT      R/W      NS          NS        Determines whether core 0 remains in reset after |
 	 	    	     		             after chip cold/warm/soft reset.		    |
 <0>     RBOOT_PIN  RO       NS          NS        Read-only access to REMOTE_BOOT pin              |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_RST_DELAY Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS           RAZ      NS          NS        Reserved				            |
 <31:16> WARM_RST_DLY R/W      0x7ff       NS        A warm reset immediately causes an early warm  |
                                                     reset notification.  However, the assertion of |
						     warm reset will be delayed this many sclks.    |
                                                     A warm/soft reset will not change this field.  |
                                                     NOTE: This must be at least 500 dclks          |
												    |
 <15:0>  SOFT_RST_DLY R/W      0x7ff       NS        A soft reset immediately causes an early soft  |
                                                     reset notification.  However, the assertion of |
						     soft reset will be delayed this many sclks.    |
                                                     A warm/soft reset will not change this field.  |
                                                     NOTE: This must be at least 500 dclks          |
												    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_RST_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  BIST_DELAY    RO      NS          NS        Reserved			   	            |
 <7:3>   NS            RAZ     NS          NS        Reserved                                       |
 <2>     CNTL_CLR_BIST R/W     0           0         Peform clear bist during cntl only reset,      |
                                                     instead of a full bist. A warm/soft reset will |
                                                     not change this field.                         |
 <1>     WARM_CLR_BIST R/W     0           0         Peform clear bist during warm reset, instead   |
                                                     of a full bist. A warm/soft reset will not     |
                                                     change this field.                             |
 <0>     SOFT_CLR_BIST R/W     0           0         Peform clear bist during soft reset, instead   |
                                                     of a full bist. A warm/soft reset will not     |
                                                     change this field.                             |
Notes:												    |
Cold reset will always performs a full bist.                                                        |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_RST_CTL(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS         RAZ      NS          NS        Reserved				            |
												    |
 <9>     PRST_LINK  R/W      0           NS        Controls whether corresponding controller        |
                                                   link-down or hot-reset causes the assertion of   |
                                                   CIU_SOFT_PRST*[SOFT_PRST]                        |
 						    						    |
                                                   A warm/soft reset will not change this field.    |
 						   On cold reset, this field is initialized to 0    |
												    |
 <8>     RST_DONE   RO       NS          NS        Read-only access to controller reset status      |
                                                                                                    |
                                                   RESET_DONE is always zero (i.e. the controller   |
                                                   is held in reset) when:                          |
                                                     - CIU_SOFT_PRST*[SOFT_PRST]=1, or              |
                                                     - RST_RCV==1 and PERST*_L pin is asserted      |
                                                                                                    |
 <7>     RST_LINK   R/W      NS          NS        Controls whether corresponding controller        |
                                                   link-down or hot-reset causes a warm chip reset  |
						   On cold reset, this field is initialized as 	    |
                                                   follows:					    |
                                                      0 = when corresponding strap PCIE*_HOST_MODE=1|
                                                      1 = when corresponding strap PCIE*_HOST_MODE=0|
                                                                                                    |
                                                   Note that a link-down or hot-reset event can     |
                                                   never cause a warm chip reset when the           |
                                                   controller is in reset (i.e. can never cause a   |
                                                   warm reset when RST_DONE==0).                    |
												    |
 <6>     HOST_MODE  RO       NS          NS        RO access to corresponding strap PCIE*_HOST_MODE |
                                                                                                    |
 <5:4>   PRTMODE    R/W      NS          NS        Port mode                                        |
 	 	    	     		   	      0 = port is EP mode		            |
						      1 = port is RC mode		            |
						      2,3 = Reserved                                |
                                                   A warm/soft reset will not change this field.    |
						   On cold reset, this field is initialized as 	    |
                                                   follows:					    |
                                                      0 = when corresponding strap PCIE*_HOST_MODE=0|
                                                      1 = when corresponding strap PCIE*_HOST_MODE=1|
												    |
 <3>     RST_DRV    R/W      NS          NS        Controls whether corresponding PERST*_L chip pin |
						     is driven by the OCTEON.  A warm/soft reset    |
						     will not change this field.  On cold reset,    |
                                                     this field is initialized as follows:	    |
                                                      0 = when corresponding strap PCIE*_HOST_MODE=0|
                                                      1 = when corresponding strap PCIE*_HOST_MODE=1|
                                                                                                    |
                                                     When set, OCTEON drives the corresponding      |
                                                     PERST*_L pin. Otherwise, OCTEON does not drive |
                                                     the corresponding PERST*_L pin.                |
						     						    |
 <2>     RST_RCV    R/W      NS          NS        Controls whether corresponding PERST*_L chip pin |
                                                     is recieved by OCTEON.  A warm/soft reset	    |
						     will not change this field.  On cold reset,    |
                                                     this field is initialized as follows:	    |
                                                      0 = when corresponding strap PCIE*_HOST_MODE=1|
                                                      1 = when corresponding strap PCIE*_HOST_MODE=0|
                                                                                                    |
                                                     When RST_RCV==1, the PERST*_L value is         |
                                                     received and may be used to reset the          |
                                                     controller and (optionally, based on RST_CHIP) |
                                                     warm reset the chip.                           |
                                                                                                    |
                                                     When RST_RCV==1 (and RST_CHIP=0),              |
                                                     MIO_RST_INT[PERST*] gets set when the PERST*_L |
                                                     pin asserts. (This interrupt can alert SW      |
                                                     whenever the external reset pin initiates a    |
                                                     controller reset sequence.)                    |
                                                                                                    |
                                                     RST_VAL gives the PERST*_L pin value when      |
                                                     RST_RCV==1.                                    |
                                                                                                    |
                                                     When RST_RCV==0, the PERST*_L pin value is     |
                                                     ignored.                                       |
						     						    |
 <1>     RST_CHIP   R/W       0          NS        Controls whether corresponding PERST*_L chip     |
                                                     pin causes a chip warm reset like CHIP_RESET_L.|
						     A warm/soft reset will not change this field.  |
                                                     On cold reset, this field is initialized to 0. |
                                                                                                    |
                                                     RST_CHIP is not used when RST_RCV==0.          |
                                                                                                    |
                                                     When RST_RCV==0, RST_CHIP is ignored.          |
                                                                                                    |
                                                     When RST_RCV==1, RST_CHIP==1, and PERST*_L     |
                                                     asserts, a chip warm reset will be generated.  |
												    |
 <0>     RST_VAL    RO       NS          NS        Read-only access to corresponding PERST*_L pin   |
                                                     Unpredictable when RST_RCV==0. Reads as 1 when |
                                                     RST_RCV==1 and the PERST*_L pin is asserted.   |
                                                     Reads as 0 when RST_RCV==1 and the PERST*_L    |
                                                     pin is not asserted.                           |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_RST_INT = MIO Reset Interrupt Register
 *

     ==============================================================
     MIO_RST_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS         RAZ      NS          NS        Reserved                                         |
 <9>     PERST1     R/W1C    0x0         NS        PERST1_L asserted while MIO_RST_CTL1[RST_RCV]=1  |
                                                   and MIO_RST_CTL1[RST_CHIP]=0                     |
 <8>     PERST0     R/W1C    0x0         NS        PERST0_L asserted while MIO_RST_CTL0[RST_RCV]=1  |
                                                   and MIO_RST_CTL0[RST_CHIP]=0                     |
 <7:2>   NS         RAZ      NS          NS        Reserved                                         |
 <1>     RST_LINK1  R/W1C    0x0         NS        A controller1 link-down/hot-reset occurred while |
                                                   MIO_RST_CTL1[RST_LINK]=0.  Software must assert  |
                                                   then de-assert CIU_SOFT_PRST1[SOFT_PRST]         |
												    |
 <0>     RST_LINK0  R/W1C    0x0         NS        A controller0 link-down/hot-reset occurred while |
                                                   MIO_RST_CTL0[RST_LINK]=0.  Software must assert  |
                                                   then de-assert CIU_SOFT_PRST[SOFT_PRST]          |
----------------------------------------------------------------------------------------------------
===


 *
 * MIO_RST_INT_EN = MIO Reset Interrupt Enable Register
 *

     ==============================================================
     MIO_RST_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS         RAZ      NS          NS        Reserved                                         |
 <9>     PERST1     R/W      0           NS        Controller1 PERST reset interrupt enable         |
 <8>     PERST0     R/W      0           NS        Controller0 PERST reset interrupt enable         |
 <7:2>   NS         RAZ      NS          NS        Reserved                                         |
 <1>     RST_LINK1  R/W      0           NS        Controller1 link-down/hot reset interrupt enable |
 <0>     RST_LINK0  R/W      0           NS        Controller0 link-down/hot reset interrupt enable |
----------------------------------------------------------------------------------------------------
===




     ==============================================================
     GPIO_BIT_CFG(0..15) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:17> NS       RAZ      NS          NS        Reserved				            |
 <16:15> SYNCE_SEL R/W     0x0         0         Selects the QLM clock output			    |
						  x0=Normal GPIO output				    |
						  01=GPIO QLM clock selected by CSR GPIO_CLK_QLM0   |
						  11=GPIO QLM clock selected by CSR GPIO_CLK_QLM1   |
 <14>    CLK_GEN  R/W      0x0         0         When TX_OE is set, GPIO pin becomes a clock	    |
 <13:12> CLK_SEL  R/W      0x0         0         Selects which of the 4 GPIO clock generators	    |
 <11:8>  FIL_SEL  R/W      0x0         0         Global counter bit-select (controls sample rate)   |
 <7:4>   FIL_CNT  R/W      0x0         0         Number of consecutive samples to change state	    |
 <3>	 INT_TYPE R/W      0x0         0         Type of interrupt				    |
						  0 = level (default)				    |
						  1 = rising edge				    |
 <2>	 INT_EN   R/W      0x0         0         Bit mask to indicate which bits to raise interrupt |
 <1>	 RX_XOR	  R/W      0x0         0         Invert the GPIO pin				    |
 <0>	 TX_OE	  R/W      0x0         0         Drive the GPIO pin as an output pin		    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GPIO_RX_DAT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>  DAT      RO       0x0         0         GPIO Read Data                                     |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GPIO_TX_SET Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>  SET      R/W1     0x0         0         Bit mask to indicate which GPIO_TX_DAT bits to set |
						  to '1'. When read, SET returns the GPIO_TX_DAT    |
						  storage.					    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GPIO_TX_CLR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>  CLR      R/W1C    0x0         0         Bit mask to indicate which GPIO_TX_DAT bits to set |
						  to '0'. When read, CLR returns the GPIO_TX_DAT    |
						  storage.					    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GPIO_INT_CLR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>  TYPE     R/W1C    0x0         0         Clear the interrupt rising edge detector	    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GPIO_TIM_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>  NS       RAZ      NS          NS        Reserved                                            |
<3:0>   SEL      R/W      0x0         0         Selects the GPIO pin to route to TIM                |
----------------------------------------------------------------------------------------------------
===




     ==============================================================
     GPIO_CLK_GEN(0..3) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>  N        R/W      0x0         NS        Determines the frequency of the GPIO clk generator |
		   				  NOTE: Fgpio_clk = Feclk * N / 2^32                |
                                                        N = (Fgpio_clk / Feclk) * 2^32              |
                                                  NOTE: writing N == 0 stops the clock generator
						  N  should be <= 2^31-1.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GPIO_CLK_QLM(0..1) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:11> NS       RAZ      NS          NS        Reserved				            |
 <10:8>  QLM_SEL  R/W      0x0         0x0       Selects which QLM to select from		    |
 <7:3>   NS       RAZ      NS          NS        Reserved				            |
 <2>     DIV      R/W      0x0         0x0       Internal clock divider				    |
						  0=DIV2					    |
						  1=DIV4					    |
 <1:0>   LANE_SEL R/W      0x0         0x0       Selects which RX lane clock from QLM_SEL to use as |
						  the GPIO internal QLMx clock.  The GPIO block can |
						  support upto two unique clocks to send out any    |
						  GPIO pin as configured by GPIO_BIT_CFG[SYNCE_SEL] |
						  The clock can either be a divided by 2 or divide  |
						  by 4 of the selected RX lane clock.		    |
Notes:

Clock speed output for different modes ...

                       Speed With      Speed with
SERDES speed (Gbaud)   DIV=0 (MHz)     DIV=1 (MHz)
**********************************************************
     1.25                 62.5            31.25
     2.5                 125              62.5
     3.125               156.25           78.125
     5.0                 250             125
     6.25                312.5           156.25

----------------------------------------------------------------------------------------------------
===


 *
 * SMI_CMD = Force a Read/Write command to the PHY
 *

     ==============================================================
     SMI(0..3)_CMD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:18> NS       RAZ      NS          NS        Reserved				            |
 <17:16> PHY_OP   R/W      0           NS        PHY Opcode depending on SMI_CLK[MODE]              |
						  SMI_CLK[MODE] == 0 (<=1Gbs / Clause 22)	    |
						   x0=write					    |
						   x1=read					    |
						  SMI_CLK[MODE] == 1 (>1Gbs / Clause 45)	    |
						   00=address					    |
						   01=write					    |
						   11=read					    |
						   10=post-read-increment-address		    |
 <15:13> NS       RAZ      NS          NS        Reserved				            |
 <12:8>  PHY_ADR  R/W      0           NS        PHY Address                                        |
 <7:5>   NS       RAZ      NS          NS        Reserved				            |
 <4:0>   REG_ADR  R/W      0           NS        PHY Register Offset                                |

Notes:
Writes to this register will create SMI xactions.  Software will poll on (depending on the xaction type).
----------------------------------------------------------------------------------------------------
===


 *
 * SMI_WR_DAT = SMI Write Data
 *

     ==============================================================
     SMI(0..3)_WR_DAT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:18> NS       RAZ      NS          NS        Reserved				            |
 <17>    PENDING  RO       0           NS        Write Xaction Pending			            |
 <16>    VAL      RO       0           NS        Write Data Valid			            |
 <15:0>  DAT      R/W      0           NS        Write Data                                         |

Notes:
VAL will assert when the write xaction completes.  A read to this register
will clear VAL.  PENDING indicates that an SMI WR transaction is in flight.
----------------------------------------------------------------------------------------------------
===


 *
 * SMI_RD_DAT = SMI Read Data
 *

     ==============================================================
     SMI(0..3)_RD_DAT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:18> NS       RAZ      NS          NS        Reserved				            |
 <17>    PENDING  RO       0           NS        Read Xaction Pending			            |
 <16>    VAL      RO       0           NS        Read Data Valid			            |
 <15:0>  DAT      RO       0           NS        Read Data                                          |

Notes:
VAL will assert when the read xaction completes.  A read to this register
will clear VAL.  PENDING indicates that an SMI RD transaction is in flight.
----------------------------------------------------------------------------------------------------
===


 *
 * SMI_CLK = Clock Control Register
 *

     ==============================================================
     SMI(0..3)_CLK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:25> NS       RAZ      NS          NS        Reserved				            |
 <24>    MODE     R/W      0           0         IEEE operating mode            		    |
						  0=Clause 22 complient				    |
						  1=Clause 45 complient				    |
 <23:21> NS       RAZ      NS          NS        Reserved				            |
 <20:16> SAMPLE_HI R/W     0           0         When to sample read data (extended bits)	    |
 <15>    SAMPLE_MODE R/W   0	       0         Read Data sampling mode		            |
						  According to the 802.3 spec, on reads, the STA    |
						  transitions MDC and the PHY drives MDIO with	    |
						  some delay relative to that edge.  This is edge1. |
						  The STA then samples MDIO on the next rising edge |
						  of MDC.  This is edge2. Octeon can sample the	    |
						  read data relative to either edge.		    |
						   0={SAMPLE_HI,SAMPLE} specify the sample time	    |
						     relative to edge2				    |
						   1={SAMPLE_HI,SAMPLE} specify the sample time	    |
						     relative to edge1				    |
 <14>    NS       RAZ      NS          NS        Reserved				            |
 <13>    CLK_IDLE R/W      0           0         Do not toggle MDC on idle cycles	            |
 <12>    PREAMBLE R/W      1           1         Send PREAMBLE on SMI transacton		    |
						  PREAMBLE must be set 1 when MODE=1 in order	    |
						  for the receiving PHY to correctly frame the	    |
						  transaction.					    |
 <11:8>  SAMPLE   R/W      2           2         When to sample read data			    |
						  (number of eclks after the rising edge of mdc)    |
						  ( {SAMPLE_HI,SAMPLE} > 1 )			    |
						  ( {SAMPLE_HI, SAMPLE} + 3 <= 2*PHASE )	    |
 <7:0>   PHASE    R/W      100         100       MDC Clock Phase                                    |
						  (number of eclks that make up an mdc phase)	    |
						  (PHASE > 2)					    |
----------------------------------------------------------------------------------------------------
===


 *
 * SMI_EN = Enable the SMI interface
 *

     ==============================================================
     SMI(0..3)_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved				            |
 <0>     EN       R/W      0           1         Interface enable				    |
						  0=SMI Interface is down / no transactions, no MDC |
						  1=SMI Interface is up				    |
----------------------------------------------------------------------------------------------------
===


 *
 * SMI_DRV_CTL = SMI Drive Strength Control
 *

     ==============================================================
     SMI_DRV_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:14> NS       RAZ      NS          NS        Reserved				            |
 <13:8>  PCTL     R/W      19          19        PCTL Drive strength control bits		    |
						  Assuming a 50ohm termination			    |
						  3.3v supply = 19				    |
						  2.5v supply = TBD				    |
 <7:6>   NS       RAZ      NS          NS        Reserved				            |
 <5:0>   NCTL     R/W      15          15        NCTL Drive strength control bits		    |
						  Assuming a 50ohm termination			    |
						  3.3v supply = 15				    |
						  2.5v supply = TBD				    |
----------------------------------------------------------------------------------------------------
===




 *
 * MIO_TWS@_SW_TWSI = TWS@ Software to TWSI Register
 *
 * This register allows software to
 *    - initiate TWSI interface master-mode operations with a write and read the result with a read
 *    - load four bytes for later retrieval (slave mode) with a write and check validity with a read
 *    - launch a TWSI controller configuration read/write with a write and read the result with a read
 *
 * This register should be read or written by software, and read by the TWSI device. The TWSI device can
 * use either two-byte or five-byte reads to reference this register.
 *
 * The TWSI device considers this register valid when V==1 and SLONLY==1.
 *

     ==============================================================
     MIO_TWS(0..1)_SW_TWSI Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  D        R/W      0x0         NS        Data Field                                         |
                                                 Used on a write when                               |
                                                   - initiating a master-mode write (SLONLY==0)     |
                                                   - writing a TWSI config register (SLONLY==0)     |
                                                   - a slave mode write (SLONLY==1)                 |
                                                 The read value is updated by                       |
                                                   - a write to this register                       |
                                                   - master mode completion (contains result or     |
                                                     error code)                                    |
                                                   - TWSI config register read (contains result)    |
 <34:32> EOP_IA   R/W      0x0         NS        Extra opcode (when OP<3:0> == 0110 and SLONLY==0): |
                                                   000 => TWSI Slave Address Register               |
                                                   001 => TWSI Data Register                        |
                                                   010 => TWSI Control Register                     |
                                                   011 => TWSI Clock Control Register (when R == 0) |
                                                   011 => TWSI Status Register (when R == 1)        |
                                                   100 => TWSI Extended Slave Register              |
                                                   111 => TWSI Soft Reset Register                  |
                                                 Also the lower 3 bits of Internal Address when     |
                                                   launching a master mode combined read / write    |
                                                   with internal address                            |
 <39:35> IA       R/W      0x0         NS        Internal Address - Used when launching a master    |
                                                   mode combined read / write with internal address |
                                                   (lower 3 bits are contained in the EOP_IA field) |
 <49:40> A        R/W      0x0         NS        Address field                                      |
                                                   - the address of the remote device for a master  |
                                                     mode operation                                 |
                                                   - A<9:7> are only used for 10-bit addressing     |
                                                  Note that when mastering a 7-bit OP, A<6:0> should|
                                                  not take any of the values 0x78, 0x79, 0x7A nor   |
                                                  0x7B (these 7-bit addresses are reserved to       |
                                                  extend to 10-bit addressing).                     |
 <51:50> SCR      R/W      0x0         NS        Scratch - unused, but retain state                 |
 <54:52> SIZE     R/W      0x0         NS        Size in bytes of Master Mode Op if the Size        |
                                                  Override bit is set.  Specified in -1 notation    |
                                                  (i.e. 0 = 1 byte, 1 = 2 bytes ... 7 = 8 bytes)    |
 <55>    SOVR     R/W      0x0         NS        Size Override - if set, use the SIZE field to      |
                                                  determine Master Mode Op size rather than what    |
                                                  the Opcode field specifies.  For operations       |
                                                  greater than 4 bytes, the additional data will be |
                                                  contained in the D field of MIO_TWS_SW_TWSI_EXT   |
 <56>    R        R/W      0x0         NS        Read bit or result                                 |
                                                   - If set on a write when SLONLY==0, the          |
                                                     operation is a read                            |
                                                   - On a read, this bit returns the result         |
                                                     indication for the most recent master mode     |
                                                     operation (1 = success, 0 = fail)              |
 <60:57> OP       R/W      0x0         NS        Opcode field - When the register is written with   |
                                                 SLONLY==0, initiate a read or write:               |
                                                   0000 => 7-bit Byte Master Mode TWSI Op           |
                                                   0001 => 7-bit Byte Combined Read Master Mode Op  |
                                                           7-bit Byte Write w/ IA Master Mode Op    |
                                                   0010 => 10-bit Byte Master Mode TWSI Op          |
                                                   0011 => 10-bit Byte Combined Read Master Mode Op |
                                                           10-bit Byte Write w/ IA Master Mode Op   |
                                                   0100 => TWSI Master Clock Register               |
                                                   0110 => See EOP field                            |
                                                   1000 => 7-bit 4-byte Master Mode TWSI Op         |
                                                   1001 => 7-bit 4-byte Comb. Read Master Mode Op   |
                                                           7-bit 4-byte Write w/ IA Master Mode Op  |
                                                   1010 => 10-bit 4-byte Master Mode TWSI Op        |
                                                   1011 => 10-bit 4-byte Comb. Read Master Mode Op  |
                                                           10-bit 4-byte Write w/ IA Master Mode Op |
 <61>    EIA      R/W      0x0         NS        Extended Internal Address - send additional        |
                                                  internal address byte (MSB of IA is from IA field |
                                                  of MIO_TWS_SW_TWSI_EXT)                           |
 <62>    SLONLY   R/W      0x0         NS        Slave Only Mode                                    |
                                                   - No operation is initiated with a write when    |
                                                     this bit is set - only D field is updated in   |
                                                     this case                                      |
                                                   - When clear, a write initiates either a TWSI    |
                                                     master-mode operation or a TWSI configuration  |
                                                     register access                                |
 <63>    V        RC/W     0x0         NS        Valid bit                                          |
                                                   - Set on a write (should always be written with  |
                                                     a 1)                                           |
                                                   - Cleared when a TWSI master mode op completes   |
                                                   - Cleared when a TWSI configuration register     |
                                                     access completes                               |
                                                   - Cleared when the TWSI device reads the         |
                                                     register if SLONLY==1                          |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_TWS@_TWSI_SW = TWS@ TWSI to Software Register
 *
 * This register allows the TWSI device to transfer data to software and later check that software has
 * received the information.
 *
 * This register should be read or written by the TWSI device, and read by software. The TWSI device can
 * use one-byte or four-byte payload writes, and two-byte payload reads.
 *
 * The TWSI device considers this register valid when V==1.
 *

     ==============================================================
     MIO_TWS(0..1)_TWSI_SW Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  D        R/W      NS          NS        Data Field - updated on a write by the TWSI device |
 <61:32> NS       RAZ      NS          NS        Reserved                                           |
 <63:62> V        RC/W     0x0         NS        Valid Bits                                         |
                                                   - Not directly writable                          |
                                                   - Set to 1 on any write by the TWSI device       |
                                                   - Cleared on any read by software                |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_TWS@_INT = TWS@ Interrupt Register
 *
 * This register contains the TWSI interrupt enable mask and the interrupt source bits.  Note: the
 * interrupt source bit for the TWSI core interrupt (CORE_INT) is read-only, the appropriate sequence
 * must be written to the TWSI core to clear this interrupt.  The other interrupt source bits are write-
 * one-to-clear.  TS_INT is set on the update of the MIO_TWS_TWSI_SW register (i.e. when it is written
 * by a TWSI device).  ST_INT is set whenever the valid bit of the MIO_TWS_SW_TWSI is cleared (see above
 * for reasons).
 *
 * Note: When using the high-level controller, CORE_EN should be clear and CORE_INT should be ignored.
 * Conversely, when the high-level controller is disabled, ST_EN / TS_EN should be clear and ST_INT /
 * TS_INT should be ignored.
 *
 * This register also contains a read-only copy of the TWSI bus (SCL and SDA) as well as control bits to
 * override the current state of the TWSI bus (SCL_OVR and SDA_OVR).  Setting an override bit high will
 * result in the open drain driver being activated, thus driving the corresponding signal low.
 *

     ==============================================================
     MIO_TWS(0..1)_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:12> NS       RAZ      NS          NS        Reserved                                           |
 <11>    SCL      RO       NS          NS        SCL                                                |
 <10>    SDA      RO       NS          NS        SDA                                                |
 <9>     SCL_OVR  R/W      0x0         NS        SCL override                                       |
 <8>     SDA_OVR  R/W      0x0         NS        SDA override                                       |
 <7>     NS       RAZ      NS          NS        Reserved                                           |
 <6>     CORE_EN  R/W      0x0         NS        TWSI core interrupt enable                         |
 <5>     TS_EN    R/W      0x0         NS        MIO_TWS_TWSI_SW register update interrupt enable   |
 <4>     ST_EN    R/W      0x0         NS        MIO_TWS_SW_TWSI register update interrupt enable   |
 <3>     NS       RAZ      NS          NS        Reserved                                           |
 <2>     CORE_INT RO       0x0         NS        TWSI core interrupt                                |
 <1>     TS_INT   R/W1C    0x0         NS        MIO_TWS_TWSI_SW register update interrupt          |
 <0>     ST_INT   R/W1C    0x0         NS        MIO_TWS_SW_TWSI register update interrupt          |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_TWS@_SW_TWSI_EXT = TWS@ Software to TWSI Extension Register
 *
 * This register contains an additional byte of internal address and 4 additional bytes of data to be
 * used with TWSI master mode operations.  IA will be sent as the first byte of internal address when
 * performing master mode combined read / write with internal address operations and the EIA bit of
 * MIO_TWS_SW_TWSI is set.  D extends the data field of MIO_TWS_SW_TWSI for a total of 8 bytes (SOVR
 * must be set to perform operations greater than 4 bytes).
 *

     ==============================================================
     MIO_TWS(0..1)_SW_TWSI_EXT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  D        R/W      0x0         NS        Extended Data Field                                |
 <39:32> IA       R/W      0x0         NS        Extended Internal Address                          |
 <63:40> NS       RAZ      NS          NS        Reserved                                           |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_PTP_CLOCK_CFG = Configuration
 *

     ==============================================================
     MIO_PTP_CLOCK_CFG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     PTP_EN     R/W     0x0	       0	 Enable PTP Module                                  |
 <1>     EXT_CLK_EN R/W     0x0	       0	 Use positive edge of external clock                |
 <7:2>   EXT_CLK_IN R/W     0x0	       0	 Source for external clock                          |
                                                 0x00-0x0f : GPIO[EXT_CLK_IN[3:0]]
                                                 0x10      : QLM0_REF_CLK
                                                 0x11      : QLM1_REF_CLK
                                                 0x12      : QLM2_REF_CLK
                                                 0x13      : QLM3_REF_CLK
                                                 0x14      : QLM4_REF_CLK
                                                 0x15-0x3f : Reserved
 <8>     TSTMP_EN   R/W     0x0	       0	 Enable external timestamp                          |
 <9>     TSTMP_EDGE R/W     0x0	       0	 External timestamp input edge                      |
                                                 0 = falling edge
                                                 1 = rising edge
 <15:10> TSTMP_IN   R/W     0x0	       0	 Source for timestamp input                         |
                                                 0x00-0x0f : GPIO[TSTMP_IN[3:0]]
                                                 0x10      : QLM0_REF_CLK
                                                 0x11      : QLM1_REF_CLK
                                                 0x12      : QLM2_REF_CLK
                                                 0x13      : QLM3_REF_CLK
                                                 0x14      : QLM4_REF_CLK
                                                 0x15-0x3f : Reserved
 <16>    EVCNT_EN   R/W     0x0	       0	 Enable event counter                               |
 <17>    EVCNT_EDGE R/W     0x0	       0	 Event counter input edge                           |
                                                 0 = falling edge
                                                 1 = rising edge
 <23:18> EVCNT_IN   R/W     0x0	       0	 Source for event counter input                     |
                                                 0x00-0x0f : GPIO[EVCNT_IN[3:0]]
                                                 0x10      : QLM0_REF_CLK
                                                 0x11      : QLM1_REF_CLK
                                                 0x12      : QLM2_REF_CLK
                                                 0x13      : QLM3_REF_CLK
                                                 0x14      : QLM4_REF_CLK
                                                 0x15-0x3f : Reserved
 <63:24> NS         RAZ     NS         NS        Reserved				            |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_PTP_CLOCK_LO = Lo bytes of CLOCK
 *

     ==============================================================
     MIO_PTP_CLOCK_LO Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  FRNANOSEC  R/W     0x0	       0	 Fractions of Nanoseconds                           |
 <63:32> NS         RAZ     NS         NS        Reserved				            |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_PTP_CLOCK_HI = Hi bytes of CLOCK
 *
 * Writes to MIO_PTP_CLOCK_HI also clear MIO_PTP_CLOCK_LO. To update all 96 bits, write MIO_PTP_CLOCK_HI followed
 * by MIO_PTP_CLOCK_LO
 *

     ==============================================================
     MIO_PTP_CLOCK_HI Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  NANOSEC    R/W     0x0	       0	 Nanoseconds                                        |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_PTP_CLOCK_COMP = Compensator
 *

     ==============================================================
     MIO_PTP_CLOCK_COMP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  FRNANOSEC  R/W     0x0	       0	 Fractions of Nanoseconds                           |
 <63:32> NANOSEC    R/W     0x0	       0	 Nanoseconds                                        |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_PTP_TIMESTAMP = Timestamp latched on MIO_PTP_CLOCK_CFG[TSTMP_EDGE] edge of MIO_PTP_CLOCK_CFG[TSTMP_IN]
 *

     ==============================================================
     MIO_PTP_TIMESTAMP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  NANOSEC    R/W     0x0	       0	 Nanoseconds                                        |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_PTP_EVT_CNT = Event Counter
 *
 * Writes to MIO_PTP_EVT_CNT increment this register by the written data. The register counts down by
 * 1 for every MIO_PTP_CLOCK_CFG[EVCNT_EDGE] edge of MIO_PTP_CLOCK_CFG[EVCNT_IN]. When register equals
 * 0, an interrupt gets gerated
 *

     ==============================================================
     MIO_PTP_EVT_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  CNTR     R/W     0x0	       0	 Nanoseconds                                        |
----------------------------------------------------------------------------------------------------
===





     ==============================================================
     CIU2_SUM_PP(0..31)_IP2 Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SUM_PP(0..31)_IP3 Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SUM_PP(0..31)_IP4 Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SUM_IO(0..1)_INT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:60> MBOX     RO	   0x0	       0	 MBOX interrupt summary                             |
						 Direct connect to CIU2_SRC_*_MBOX[MBOX]    	    |
						 See CIU2_MBOX_SET/CLR / CIU2_SRC_*_MBOX	    |
 <59:8>  NS       RAZ      NS          NS        Reserved                                           |
 <7>	 GPIO     RO	   0x0	       0	 GPIO interrupt summary, 			    |
						 Report ORed result of CIU2_SRC_*_GPIO[63:0]        |
						 See CIU2_RAW_GPIO / CIU2_SRC_*_GPIO		    |
 <6>	 PKT      RO	   0x0	       0	 Packet I/O interrupt summary			    |
						 Report ORed result of CIU2_SRC_*_PKT[63:0]         |
						 See CIU2_RAW_PKT / CIU2_SRC_*_PKT		    |
 <5>	 MEM      RO	   0x0	       0	 MEM  interrupt Summary				    |
						 Report ORed result of CIU2_SRC_*_MEM[63:0]         |
						 See CIU2_RAW_MEM / CIU2_SRC_*_MEM		    |
 <4>	 IO       RO	   0x0	       0	 I/O  interrupt summary				    |
						 Report ORed result of CIU2_SRC_*_IO[63:0]          |
						 See CIU2_RAW_IO / CIU2_SRC_*_IO		    |
 <3>	 MIO      RO	   0x0	       0	 MIO  interrupt summary				    |
						 Report ORed result of CIU2_SRC_*_MIO[63:0]         |
						 See CIU2_RAW_MIO / CIU2_SRC_*_MIO		    |
 <2>	 RML      RO	   0x0	       0	 RML Interrupt					    |
						 Report ORed result of CIU2_SRC_*_RML[63:0]         |
						 See CIU2_RAW_RML / CIU2_SRC_*_RML		    |
 <1>	 WDOG     RO	   0x0	       0	 WDOG summary bit				    |
						 Report ORed result of CIU2_SRC_*_WDOG[63:0]        |
						 See CIU2_RAW_WDOG / CIU2_SRC_*_WDOG		    |
                                                  This read-only bit reads as a one whenever        |
                                                  CIU2_RAW_WDOG bit is set and corresponding        |
                                                  enable bit in CIU2_EN_PPx_IPy_WDOG or		    |
						  CIU2_EN_IOx_INT_WDOG is set, where x and y are    |
                                                  the same x and y in the CIU2_SUM_PPx_IPy or	    |
						  CIU2_SUM_IOx_INT registers.			    |
						  Alternatively, the CIU2_SRC_PPx_IPy_WDOG and	    |
						  CIU2_SRC_IOx_INT_WDOG registers can be used.	    |
 <0>     WORKQ    RO	   0x0	       0	 64 work queue interrupts			    |
						 Report ORed result of CIU2_SRC_*_WRKQ[63:0]        |
						 See CIU2_RAW_WRKQ / CIU2_SRC_*_WRKQ		    |
                                                 See SSO_WQ_INT[WQ_INT]                             |
						  1 bit/group. A copy of the R/W1C bit in the SSO.  |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU2_RAW_PP(0..31)_IP2_WRKQ Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_PP(0..31)_IP3_WRKQ Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_PP(0..31)_IP4_WRKQ Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_IO(0..1)_INT_WRKQ Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  WORKQ    RO	   0	       0	 64 work queue interrupts			    |
                                                 See SSO_WQ_INT[WQ_INT]                             |
						  1 bit/group. A copy of the R/W1C bit in the SSO.  |
						  For WRKQ, all 98 RAW readout will be same value   |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU2_RAW_PP(0..31)_IP2_WDOG Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_PP(0..31)_IP3_WDOG Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_PP(0..31)_IP4_WDOG Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_IO(0..1)_INT_WDOG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS 	  RAZ      0           0         Reserved for PP expansion                          |
 <31:0>	 WDOG     RO	   0	       0	 32 watchdog interrupts				    |
						  For WDOG, all 98 RAW readout will be same value   |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_RAW_PP(0..31)_IP2_RML Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_PP(0..31)_IP3_RML Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_PP(0..31)_IP4_RML Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_IO(0..1)_INT_RML Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> NS       RAZ      NS          NS        Reserved                                           |
 <55:52> TRACE	  RO	   0	       0	 Trace buffer interrupt 			    |
                                                  See TRA_INT_STATUS                                |
 <51:49> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <48>    L2C      RO       0x0         0         L2C interrupt                                      |
                                                  See L2C_INT_REG                                   |
 <47:44> NS       RAZ      NS          NS        Reserved for DFM expansion                         |
 <43:41> NS       RAZ      NS          NS        Reserved for DFA expansion                         |
 <40>    DFA      RO       0x0         0         DFA interrupt                                      |
                                                  See DFA_ERROR                                     |
 <39:34> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <33>    DPI      RO       0x0         0         DPI interrupt                                      |
                                                  See DPI_INT_REG                                   |
 <32>    SLI      RO       0x0         0         SLI interrupt                                      |
                                                  See SLI_INT_SUM (enabled by SLI_INT_ENB_CIU)      |
 <31>    NS       RAZ      NS          NS        Reserved                                           |
 <30>    KEY      RO       0x0         0         KEY interrupt                                      |
                                                  See KEY_INT_SUM                                   |
 <29>    RAD      RO       0x0         0         RAD interrupt                                      |
                                                  See RAD_REG_ERROR                                 |
 <28>    TIM      RO       0x0         0         TIM interrupt                                      |
                                                  See TIM_INT_ECCERR, TIM_INT0                      |
 <27:25> NS       RAZ      NS          NS        Reserved for ZIP expansion                         |
 <24>    ZIP      RO       0x0         0         ZIP interrupt                                      |
                                                  See ZIP_INT_REG                                   |
 <23:17> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <16>    SSO      RO       0x0         0         SSO err interrupt                                  |
                                                  See SSO_ERR                                       |
 <15:8>  NS       RAZ      NS          NS        Reserved for future expansion                      |
 <7>     PKO      RO       0x0         0         PKO interrupt                                      |
                                                  See PKO_REG_ERROR                                 |
 <6>     PIP      RO       0x0         0         PIP interrupt                                      |
                                                  See PIP_INT_REG                                   |
 <5>     IPD      RO       0x0         0         IPD interrupt                                      |
                                                  See IPD_INT_SUM                                   |
 <4>     FPA      RO       0x0         0         FPA interrupt                                      |
                                                  See FPA_INT_SUM                                   |
 <3:1>   NS       RAZ      NS          NS        Reserved for IOB expansion                         |
 <0>     IOB      RO       0x0         0         IOB interrupt                                      |
                                                  See IOB_INT_SUM                                   |
						  For RML, all 98 RAW readout will be same value    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU2_RAW_PP(0..31)_IP2_MIO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_PP(0..31)_IP3_MIO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_PP(0..31)_IP4_MIO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_IO(0..1)_INT_MIO Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    RST      RO       0x0         0         MIO RST interrupt                                  |
		                                 See MIO_RST_INT                                    |
 <62:49> NS       RAZ      NS          NS        Reserved                                           |
 <48>    PTP      R/W1C    0x0         0         PTP interrupt                                      |
                                                 Set when HW decrements MIO_PTP_EVT_CNT to zero     |
 <47:45> NS       RAZ      NS          NS        Reserved for USB expansion                         |
 <44>    USB_HCI  RO       0           0         USB EHCI or OHCI Interrupt          	            |
                                                 See UAHC0_EHCI_USBSTS UAHC0_OHCI0_HCINTERRUPTSTATUS|
 <43:41> NS       RAZ      NS          NS        Reserved for USB expansion                         |
 <40>    USB_UCTL RO       0x0         0         USB UCTL* interrupt                                |
                                                 See UCTL*_INT_REG                                  |
 <39:38> NS       RAZ      NS          NS        Reserved for UART expansion                        |
 <37:36> UART     RO	   0	       0	 Two UART interrupts				    |
                                                  See MIO_UARTn_IIR[IID] for bit <34+n>             |
 <35:34> NS       RAZ      NS          NS        Reserved for TWSI expansion                        |
 <33:32> TWSI	  RO	   0	       0	 TWSI x Interrupt				    |
                                                 See MIO_TWSx_INT                                   |
 <31:19> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <18>    BOOTDMA  RO       0           0         Boot bus DMA engines Interrupt		            |
                                                  See MIO_BOOT_DMA_INT*, MIO_NDF_DMA_INT            |
 <17>    MIO      RO       0x0         0         MIO boot interrupt                                 |
                                                  See MIO_BOOT_ERR                                  |
 <16>	 NAND	  RO       0           0         NAND Flash Controller interrupt		    |
                                                  See NDF_INT                                       |
 <15:12> NS       RAZ      NS          NS        Reserved for timer expansion                       |
 <11:8>  TIMER	  R/W1C	   0	       0	 General timer interrupts			    |
                                                  Set any time the corresponding CIU timer expires  |
 <7:3>   NS       RAZ      NS          NS        Reserved for future expansion                      |
 <2>	 IPD_DRP  R/W1C	   0	       0	 IPD QOS packet drop interrupt			    |
                                                  Set any time PIP/IPD drops a packet               |
 <1>     SSOIQ	  RO       0           0         SSO IQ interrupt			            |
                                                  See SSO_IQ_INT                                    |
 <0>     IPDPPTHR RO       0           0         IPD per-port counter threshold interrupt           |
                                                  See IPD_PORT_QOS_INT*                             |
						  For MIO, all 98 RAW readout will be same value    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_RAW_PP(0..31)_IP2_IO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_PP(0..31)_IP3_IO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_PP(0..31)_IP4_IO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_IO(0..1)_INT_IO Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:34> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <33:32> PEM      RO       0x0         0         PEMx interrupt                                     |
                                                  See PEMx_INT_SUM (enabled by PEMx_INT_ENB)        |
 <31:18> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <17:16> PCI_INTA RO	   0	       0	 PCI_INTA software enable        		    |
                                                  See CIU_PCI_INTA				    |
 <15:13> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <12:12> MSIRED   RO	   0	       0	 MSI summary bit, copy of 		   	    |
                                                  CIU2_MSIRED_PPx_IPy.INT, all IO interrupts        |
						  CIU2_RAW_IO@_INT_IO[MSIRED] always zero.          |
						  This bit may not be functional in pass 1.         |
 <11:8>  PCI_MSI  RO	   0	       0	 PCIe/sRIO MSI					    |
                                                  See SLI_MSI_RCVn for bit <40+n>                   |
 <7:4>   NS       RAZ      NS          NS        Reserved for future expansion                      |
 <3:0>   PCI_INTR RO	   0	       0	 PCIe INTA/B/C/D				    |
                                                  PCI_INTR[3] = INTD				    |
                                                  PCI_INTR[2] = INTC				    |
                                                  PCI_INTR[1] = INTB				    |
                                                  PCI_INTR[0] = INTA				    |
                                                  Refer to "Receiving Emulated INTA/INTB/           |
                                                  INTC/INTD" in the SLI chapter of the spec         |
						  For IO, all 98 RAW readout will be different      |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_RAW_PP(0..31)_IP2_MEM Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_PP(0..31)_IP3_MEM Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_PP(0..31)_IP4_MEM Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_IO(0..1)_INT_MEM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |
 <15:4>  NS       RAZ      NS          NS        Reserved for LMC expansion                         |
 <3:0>   LMC      RO       0x0         0         LMC* interrupt                                     |
                                                  See LMC*_INT                                      |
						  For MEM, all 98 RAW readout will be same value    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_RAW_PP(0..31)_IP2_PKT Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_PP(0..31)_IP3_PKT Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_PP(0..31)_IP4_PKT Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_IO(0..1)_INT_PKT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:52> NS       RAZ      NS          NS        Reserved                                           |
 <51:49> NS       RAZ      NS          NS        Reserved for ILK expansion                         |
 <48>    ILK      RO       0           0         ILK interface interrupts                           |
 <47:41> NS       RAZ      NS          NS        Reserved for PKT expansion                         |
 <40>	 MII      RO       0           0         RGMII/MII/MIX Interface x Interrupts	            |
                                                  See MIX*_ISR                                      |
 <39:33> NS       RAZ      NS          NS        Reserved for PKT expansion                         |
 <32>    AGL      RO       0x0         0         AGL interrupt                                      |
                                                  See AGL_GMX_RX*_INT_REG, AGL_GMX_TX_INT_REG       |
 <31:13> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <12:8>  GMX_DRP  R/W1C	   0	       0	 GMX 0-4 packet drop interrupt pulse		    |
                                                  Set any time corresponding GMX drops a packet     |
 <7:5>   NS       RAZ      NS          NS        Reserved for PKT expansion                         |
 <4:0>   AGX      RO       0x0         0         GMX 0-4 interrupt                                  |
                                                  See GMX*_RX*_INT_REG, GMX*_TX_INT_REG,            |
                                                  PCS0_INT*_REG, PCSX*_INT_REG                      |
						  For PKT, all 98 RAW readout will be same value    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_RAW_PP(0..31)_IP2_GPIO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_PP(0..31)_IP3_GPIO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_PP(0..31)_IP4_GPIO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_RAW_IO(0..1)_INT_GPIO Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ	   0	       0	 Reserved                  			    |
 <31:16> NS       RAZ	   0	       0	 Reserved for future GPIOs			    |
 <15:0>  GPIO     RO	   0	       0	 16 GPIO interrupts				    |
						  For GPIO, all 98 RAW readout will be same value   |
----------------------------------------------------------------------------------------------------
===

// All SRC values is generated by AND Raw value (CIU2_RAW_XXX) with CIU2_EN_PP@_IPx_XXX


     ==============================================================
     CIU2_SRC_PP(0..31)_IP2_WRKQ Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_PP(0..31)_IP3_WRKQ Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_PP(0..31)_IP4_WRKQ Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_IO(0..1)_INT_WRKQ Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  WORKQ    RO	   0	       0	 64 work queue intr source,                         |
						 CIU2_RAW_WRKQ & CIU2_EN_xx_yy_WRKQ     	    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_SRC_PP(0..31)_IP2_WDOG Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_PP(0..31)_IP3_WDOG Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_PP(0..31)_IP4_WDOG Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_IO(0..1)_INT_WDOG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS 	  RAZ      0           0         Reserved for PP expansion                          |
 <31:0>	 WDOG     RO	   0	       0	 32 watchdog interrupts source		            |
						 CIU2_RAW_WDOG & CIU2_EN_xx_yy_WDOG                 |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_SRC_PP(0..31)_IP2_RML Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_PP(0..31)_IP3_RML Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_PP(0..31)_IP4_RML Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_IO(0..1)_INT_RML Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> NS       RAZ      NS          NS        Reserved                                           |
 <55:52> TRACE	  RO	   0	       0	 Trace buffer interrupt source			    |
						 CIU2_RAW_RML[TRACE] & CIU2_EN_xx_yy_RML[TRACE]     |
 <51:49> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <48>    L2C      RO       0x0         0         L2C interrupt source				    |
						 CIU2_RAW_RML[L2C] & CIU2_EN_xx_yy_RML[L2C]         |
 <47:44> NS       RAZ      NS          NS        Reserved for DFM expansion                         |
 <43:41> NS       RAZ      NS          NS        Reserved for DFA expansion                         |
 <40>    DFA      RO       0x0         0         DFA interrupt source                               |
						 CIU2_RAW_RML[DFA] & CIU2_EN_xx_yy_RML[DFA]         |
 <39:34> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <33>    DPI      RO       0x0         0         DPI interrupt source                               |
						 CIU2_RAW_RML[DPI] & CIU2_EN_xx_yy_RML[DPI]         |
 <32>    SLI      RO       0x0         0         SLI interrupt source                               |
						 CIU2_RAW_RML[SLI] & CIU2_EN_xx_yy_RML[SLI]         |
 <31>    NS       RAZ      NS          NS        Reserved                                           |
 <30>    KEY      RO       0x0         0         KEY interrupt source                               |
						 CIU2_RAW_RML[KEY] & CIU2_EN_xx_yy_RML[KEY]         |
 <29>    RAD      RO       0x0         0         RAD interrupt source                               |
						 CIU2_RAW_RML[RAD] & CIU2_EN_xx_yy_RML[RAD]         |
 <28>    TIM      RO       0x0         0         TIM interrupt source                               |
						 CIU2_RAW_RML[TIM] & CIU2_EN_xx_yy_RML[TIM]         |
 <27:25> NS       RAZ      NS          NS        Reserved for ZIP expansion                         |
 <24>    ZIP      RO       0x0         0         ZIP interrupt source                               |
						 CIU2_RAW_RML[ZIP] & CIU2_EN_xx_yy_RML[ZIP]         |
 <23:17> NS       RAZ      NS          NS        Reserved for expansion                             |
 <16>    SSO      RO       0x0         0         SSO err interrupt source                           |
						 CIU2_RAW_RML[SSO] & CIU2_EN_xx_yy_RML[SSO]         |
 <15:8>  NS       RAZ      NS          NS        Reserved for future expansion                      |
 <7>     PKO      RO       0x0         0         PKO interrupt source                               |
						 CIU2_RAW_RML[PKO] & CIU2_EN_xx_yy_RML[PKO]         |
 <6>     PIP      RO       0x0         0         PIP interrupt source                               |
						 CIU2_RAW_RML[PIP] & CIU2_EN_xx_yy_RML[PIP]         |
 <5>     IPD      RO       0x0         0         IPD interrupt source                               |
						 CIU2_RAW_RML[IPD] & CIU2_EN_xx_yy_RML[IPD]         |
 <4>     FPA      RO       0x0         0         FPA interrupt source                               |
						 CIU2_RAW_RML[FPA] & CIU2_EN_xx_yy_RML[FPA]         |
 <3:1>   NS       RAZ      NS          NS        Reserved for IOB expansion                         |
 <0>     IOB      RO       0x0         0         IOB interrupt source                               |
						 CIU2_RAW_RML[IOB] & CIU2_EN_xx_yy_RML[IOB]         |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_SRC_PP(0..31)_IP2_MIO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_PP(0..31)_IP3_MIO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_PP(0..31)_IP4_MIO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_IO(0..1)_INT_MIO Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    RST      RO       0x0         0         MIO RST interrupt source                           |
						 CIU2_RAW_MIO[RST] & CIU2_EN_xx_yy_MIO[RST]         |
 <62:49> NS       RAZ      NS          NS        Reserved                                           |
 <48>    PTP      RO       0x0         0         PTP interrupt source                               |
						 CIU2_RAW_MIO[PTP] & CIU2_EN_xx_yy_MIO[PTP]         |
 <47:45> NS       RAZ      NS          NS        Reserved for USB expansion                         |
 <44>    USB_HCI  RO       0           0         USB HCI Interrupt source               	    |
						 CIU2_RAW_MIO[USB_HCI] & CIU2_EN_xx_yy_MIO[USB_HCI] |
 <43:41> NS       RAZ      NS          NS        Reserved for USB expansion                         |
 <40>    USB_UCTL RO       0x0         0         USB UCTL* interrupt source                         |
						 CIU2_RAW_MIO[USB_UCTL] &CIU2_EN_xx_yy_MIO[USB_UCTL]|
 <39:38> NS       RAZ      NS          NS        Reserved for UART expansion                        |
 <37:36> UART     RO	   0	       0	 Two UART interrupts source              	    |
						 CIU2_RAW_MIO[UART] & CIU2_EN_xx_yy_MIO[UART]       |
 <35:34> NS       RAZ      NS          NS        Reserved for TWSI expansion                        |
 <33:32> TWSI	  RO	   0	       0	 TWSI x Interrupt source			    |
						 CIU2_RAW_MIO[TWSI] & CIU2_EN_xx_yy_MIO[TWSI]       |
 <31:19> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <18>    BOOTDMA  RO       0           0         Boot bus DMA engines Interrupt source              |
						 CIU2_RAW_MIO[BOOTDMA] & CIU2_EN_xx_yy_MIO[BOOTDMA] |
 <17>    MIO      RO       0x0         0         MIO boot interrupt source                          |
						 CIU2_RAW_MIO[MIO] & CIU2_EN_xx_yy_MIO[MIO]         |
 <16>	 NAND	  RO       0           0         NAND Flash Controller interrupt source             |
						 CIU2_RAW_MIO[NAND] & CIU2_EN_xx_yy_MIO[NANAD]      |
 <15:12> NS       RAZ      NS          NS        Reserved for timer expansion                       |
 <11:8>  TIMER	  RO	   0	       0	 General timer interrupts source         	    |
						 CIU2_RAW_MIO[TIMER] & CIU2_EN_xx_yy_MIO[TIMER]     |
 <7:3>   NS       RAZ      NS          NS        Reserved for future expansion                      |
 <2>	 IPD_DRP  RO	   0	       0	 IPD QOS packet drop interrupt source	            |
						 CIU2_RAW_MIO[IPD_DRP] & CIU2_EN_xx_yy_MIO[IPD_DRP] |
 <1>     SSOIQ	  RO       0           0         SSO IQ interrupt source		            |
						 CIU2_RAW_MIO[SSOIQ] & CIU2_EN_xx_yy_MIO[SSOIQ]     |
 <0>     IPDPPTHR RO       0           0         IPD per-port cnt threshold interrupt source        |
						 CIU2_RAW_MIO[IPDPPTHR] &CIU2_EN_xx_yy_MIO[IPDPPTHR]|
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_SRC_PP(0..31)_IP2_IO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_PP(0..31)_IP3_IO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_PP(0..31)_IP4_IO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_IO(0..1)_INT_IO Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:34> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <33:32> PEM      RO       0x0         0         PEMx interrupt source                              |
						 CIU2_RAW_IO[PEM] & CIU2_EN_xx_yy_IO[PEM]           |
 <31:18> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <17:16> PCI_INTA RO	   0	       0	 PCI_INTA source 			            |
						 CIU2_RAW_IO[PCI_INTA] & CIU2_EN_xx_yy_IO[PCI_INTA] |
 <15:13> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <12:12> MSIRED   RO	   0	       0	 MSI summary bit source 		   	    |
                                                 CIU2_RAW_IO[MSIRED] & CIU2_EN_xx_yy_IO[MSIRED]     |
						  This bit may not be functional in pass 1.         |
 <11:8>  PCI_MSI  RO	   0	       0	 PCIe/sRIO MSI source		         	    |
						 CIU2_RAW_IO[PCI_MSI] & CIU2_EN_xx_yy_IO[PCI_MSI]   |
 <7:4>   NS       RAZ      NS          NS        Reserved for future expansion                      |
 <3:0>   PCI_INTR RO       0	       0	 PCIe INTA/B/C/D interrupt source                   |
						 CIU2_RAW_IO[PCI_INTR] &CIU2_EN_xx_yy_IO[PCI_INTR]  |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_SRC_PP(0..31)_IP2_MEM Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_PP(0..31)_IP3_MEM Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_PP(0..31)_IP4_MEM Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_IO(0..1)_INT_MEM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |
 <15:4>  NS       RAZ      NS          NS        Reserved for LMC expansion                         |
 <3:0>   LMC      RO       0x0         0         LMC* interrupt source                              |
						 CIU2_RAW_MEM[LMC] & CIU2_EN_xx_yy_MEM[LMC]         |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_SRC_PP(0..31)_IP2_PKT Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_PP(0..31)_IP3_PKT Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_PP(0..31)_IP4_PKT Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_IO(0..1)_INT_PKT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:52> NS       RAZ      NS          NS        Reserved for PKT expansion                         |
 <51:49> NS       RAZ      NS          NS        Reserved for ILK expansion                         |
 <48>    ILK      RO       0           0         ILK interface interrupts source                    |
						 CIU2_RAW_PKT[ILK] & CIU2_EN_xx_yy_PKT[ILK]         |
 <47:41> NS       RAZ      NS          NS        Reserved for PKT expansion                         |
 <40>	 MII      RO       0           0         RGMII/MII/MIX Interface x Interrupts source        |
						 CIU2_RAW_PKT[MII] & CIU2_EN_xx_yy_PKT[MII]         |
 <39:33> NS       RAZ      NS          NS        Reserved for PKT expansion                         |
 <32>    AGL      RO       0x0         0         AGL interrupt source                               |
						 CIU2_RAW_PKT[AGL] & CIU2_EN_xx_yy_PKT[AGL]         |
 <31:13> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <12:8>  GMX_DRP  RO       0	       0	 GMX packet drop interrupt, RAW & ENABLE	    |
						 CIU2_RAW_PKT[GMX_DRP] & CIU2_EN_xx_yy_PKT[GMX_DRP] |
 <7:5>   NS       RAZ      NS          NS        Reserved for PKT expansion                         |
 <4:0>   AGX      RO       0x0         0         GMX interrupt source                               |
						 CIU2_RAW_PKT[AGX] & CIU2_EN_xx_yy_PKT[AGX]         |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU2_SRC_PP(0..31)_IP2_GPIO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_PP(0..31)_IP3_GPIO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_PP(0..31)_IP4_GPIO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_IO(0..1)_INT_GPIO Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ	   0	       0	 Reserved                  			    |
 <31:16> NS       RAZ	   0	       0	 Reserved for future GPIOs			    |
 <15:0>  GPIO     RO	   0	       0	 16 GPIO interrupts source      		    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU2_SRC_PP(0..31)_IP2_MBOX Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_PP(0..31)_IP3_MBOX Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_PP(0..31)_IP4_MBOX Type=NCB
     ==============================================================


     ==============================================================
     CIU2_SRC_IO(0..1)_INT_MBOX Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ	   0	       0	 Reserved for future MBOX			    |
 <3:0>   MBOX     RO	   0	       0	 Mailbox interrupt Source (RAW & ENABLE)	    |
						 For CIU2_SRC_PP@_IPx_MBOX:             	    |
						 Four mailbox interrupts for entries 0-31	    |
						 RAW & ENABLE                                       |
						  [3]  is the or of <31:24> of CIU2_MBOX	    |
						  [2]  is the or of <23:16> of CIU2_MBOX	    |
						  [1]  is the or of <15:8> of CIU2_MBOX		    |
						  [0]  is the or of <7:0> of CIU2_MBOX		    |
						  CIU2_MBOX value can be read out via CSR address   |
						  CIU2_MBOX_SET/CLR				    |
						 For CIU2_SRC_IO@_INT_MBOX:			    |
						   always zero					    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_WRKQ Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_WRKQ Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_WRKQ Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_WRKQ Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  WORKQ    R/W	   0	       0	 64 work queue interrupt-enable	         	    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_WDOG Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_WDOG Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_WDOG Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_WDOG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS 	  RAZ      0           0         Reserved for PP expansion                          |
 <31:0>	 WDOG     R/W	   0	       0	 32 watchdog interrupt-enable 		            |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_RML Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_RML Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_RML Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_RML Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> NS       RAZ      NS          NS        Reserved                                           |
 <55:52> TRACE	  R/W	   0	       0	 Trace buffer interrupt-enable           	    |
 <51:49> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <48>    L2C      R/W      0x0         0         L2C interrupt-enable                               |
 <47:44> NS       RAZ      NS          NS        Reserved for DFM expansion                         |
 <43:41> NS       RAZ      NS          NS        Reserved for DFA expansion                         |
 <40>    DFA      R/W      0x0          0        DFA interrupt-enable                               |
 <39:34> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <33>    DPI      R/W      0x0          0        DPI interrupt-enable                               |
 <32>    SLI      R/W      0x0          0        SLI interrupt-enable                               |
 <31>    NS       RAZ      NS          NS        Reserved                                           |
 <30>    KEY      R/W      0x0         0         KEY interrupt-enable                               |
 <29>    RAD      R/W      0x0         0         RAD interrupt-enable                               |
 <28>    TIM      R/W      0x0         0         TIM interrupt-enable                               |
 <27:25> NS       RAZ      NS          NS        Reserved for ZIP expansion                         |
 <24>    ZIP      R/W      0x0         0         ZIP interrupt-enable                               |
 <23:17> NS       RAZ      NS          NS        Reserved for expansion                             |
 <16>    SSO      R/W      0x0         0         SSO err interrupt-enable                           |
 <15:8>  NS       RAZ      NS          NS        Reserved for future expansion                      |
 <7>     PKO      R/W      0x0         0         PKO interrupt-enable                               |
 <6>     PIP      R/W      0x0         0         PIP interrupt-enable                               |
 <5>     IPD      R/W      0x0         0         IPD interrupt-enable                               |
 <4>     FPA      R/W      0x0         0         FPA interrupt-enable                               |
 <3:1>   NS       RAZ      NS          NS        Reserved for IOB expansion                         |
 <0>     IOB      R/W      0x0         0         IOB interrupt-enable                               |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_MIO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_MIO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_MIO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_MIO Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    RST      R/W      0x0         0         MIO RST interrupt-enable                           |
 <62:49> NS       RAZ      NS          NS        Reserved                                           |
 <48>    PTP      R/W      0x0         0         PTP interrupt-enable                               |
 <47:45> NS       RAZ      NS          NS        Reserved for USB expansion                         |
 <44>    USB_HCI  R/W      0           0         USB HCI Interrupt-enable          		    |
 <43:41> NS       RAZ      NS          NS        Reserved for USB expansion                         |
 <40>    USB_UCTL R/W      0x0         0         USB UCTL* interrupt-enable                         |
 <39:38> NS       RAZ      NS          NS        Reserved for UART expansion                        |
 <37:36> UART     R/W	   0	       0	 Two UART interrupt-enable			    |
 <35:34> NS       RAZ      NS          NS        Reserved for TWSI expansion                        |
 <33:32> TWSI	  R/W	   0	       0	 TWSI x interrupt-enable			    |
 <31:19> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <18>    BOOTDMA  R/W      0           0         Boot bus DMA engines interrupt-enable	            |
 <17>    MIO      R/W      0x0         0         MIO boot interrupt-enable                          |
 <16>	 NAND	  R/W      0           0         NAND Flash Controller interrupt-enable		    |
 <15:12> NS       RAZ      NS          NS        Reserved for timer expansion                       |
 <11:8>  TIMER	  R/W	   0	       0	 General timer interrupt-enable			    |
 <7:3>   NS       RAZ      NS          NS        Reserved for future expansion                      |
 <2>	 IPD_DRP  R/W	   0	       0	 IPD QOS packet drop interrupt-enable	            |
 <1>     SSOIQ	  R/W      0           0         SSO IQ interrupt-enable		            |
 <0>     IPDPPTHR R/W      0           0         IPD per-port counter threshold interrupt-enable    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_IO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_IO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_IO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_IO Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:34> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <33:32> PEM      R/W      0x0         0         PEMx interrupt-enable                              |
 <31:18> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <17:16> PCI_INTA R/W	   0	       0	 PCI_INTA interrupt-enable        		    |
 <15:13> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <12:12> MSIRED   R/W	   0	       0	 MSI summary bit interrupt-enable        	    |
						  This bit may not be functional in pass 1.         |
 <11:8>  PCI_MSI  R/W      0	       0	 PCIe/sRIO MSI	interrupt-enable		    |
 <7:4>   NS       RAZ      NS          NS        Reserved for future expansion                      |
 <3:0>   PCI_INTR R/W	   0	       0	 PCIe INTA/B/C/D interrupt-enable		    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_MEM Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_MEM Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_MEM Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_MEM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |
 <15:4>  NS       RAZ      NS          NS        Reserved for LMC expansion                         |
 <3:0>   LMC      R/W      0x0         0         LMC* interrupt-enable                              |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_PKT Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_PKT Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_PKT Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_PKT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:52> NS       RAZ      NS          NS        Reserved for PKT expansion                         |
 <51:49> NS       RAZ      NS          NS        Reserved for ILK expansion                         |
 <48>    ILK      R/W      0           0         ILK interface interrupt-enable                     |
 <47:41> NS       RAZ      NS          NS        Reserved for PKT expansion                         |
 <40>	 MII      R/W      0           0         RGMII/MII/MIX Interface x interrupt-enable         |
 <39:33> NS       RAZ      NS          NS        Reserved for PKT expansion                         |
 <32>    AGL      R/W      0x0         0         AGL interrupt-enable                               |
 <31:13> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <12:8>  GMX_DRP  R/W	   0	       0	 GMX packet drop interrupt-enable		    |
 <7:5>   NS       RAZ      NS          NS        Reserved for PKT expansion                         |
 <4:0>   AGX      R/W      0x0         0         GMX interrupt-enable                               |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU2_EN_PP(0..31)_IP2_GPIO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_GPIO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_GPIO Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_GPIO Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ	   0	       0	 Reserved                  			    |
 <31:16> NS       RAZ	   0	       0	 Reserved for future GPIOs			    |
 <15:0>  GPIO     R/W	   0	       0	 16 GPIO interrupt-enable			    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU2_EN_PP(0..31)_IP2_MBOX Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_MBOX Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_MBOX Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_MBOX Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ	   0	       0	 Reserved for future GPIOs			    |
 <3:0>   MBOX     R/W	   0	       0	 Mailbox interrupt-enable, use with CIU2_MBOX       |
	                                         to generate CIU2_SRC_xx_yy_MBOX                    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_WRKQ_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_WRKQ_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_WRKQ_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_WRKQ_W1S Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  WORKQ    R/W1	   0	       0	  Write 1 to enable CIU2_EN_xx_yy_WRKQ[WORKQ]       |
						  1 bit/group. For all W1S bits, write 1 to enable  |
						  corresponding CIU2_EN_xx_yy_WRKQ[WORKQ] bit,      |
						  writing 0 to retain previous value.               |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_WDOG_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_WDOG_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_WDOG_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_WDOG_W1S Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS 	  RAZ      0           0         Reserved for PP expansion                          |
 <31:0>	 WDOG     R/W1	   0	       0	 Write 1 to enable CIU2_EN_xx_yy_WDOG[WDOG]         |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_RML_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_RML_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_RML_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_RML_W1S Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------

 <63:56> NS       RAZ      NS          NS        Reserved                                           |
 <55:52> TRACE	  R/W1	   0	       0	 Write 1 to enable CIU2_EN_xx_yy_RML[TRACE]         |
 <51:49> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <48>    L2C      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_RML[L2C]           |
 <47:44> NS       RAZ      NS          NS        Reserved for DFM expansion                         |
 <43:41> NS       RAZ      NS          NS        Reserved for DFA expansion                         |
 <40>    DFA      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_RML[DFA]           |
 <39:34> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <33>    DPI      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_RML[DPI]           |
 <32>    SLI      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_RML[SLI]           |
 <31>    NS       RAZ      NS          NS        Reserved                                           |
 <30>    KEY      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_RML[KEY]	    |
 <29>    RAD      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_RML[RAD]           |
 <28>    TIM      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_RML[TIM]           |
 <27:25> NS       RAZ      NS          NS        Reserved for ZIP expansion                         |
 <24>    ZIP      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_RML[ZIP]           |
 <23:17> NS       RAZ      NS          NS        Reserved for expansion                             |
 <16>    SSO      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_RML[SSO]           |
 <15:8>  NS       RAZ      NS          NS        Reserved for future expansion                      |
 <7>     PKO      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_RML[PKO]           |
 <6>     PIP      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_RML[PIP]           |
 <5>     IPD      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_RML[IPD]           |
 <4>     FPA      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_RML[FPA]           |
 <3:1>   NS       RAZ      NS          NS        Reserved for IOB expansion                         |
 <0>     IOB      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_RML[IOB]           |

----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_MIO_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_MIO_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_MIO_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_MIO_W1S Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    RST      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_MIO[RST]           |
 <62:49> NS       RAZ      NS          NS        Reserved                                           |
 <48>    PTP      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_MIO[PTP]           |
 <47:45> NS       RAZ      NS          NS        Reserved for USB expansion                         |
 <44>    USB_HCI  R/W1     0           0         Write 1 to enable CIU2_EN_xx_yy_MIO[USB_HCI]       |
 <43:41> NS       RAZ      NS          NS        Reserved for USB expansion                         |
 <40>    USB_UCTL R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_MIO[USB_UCTL]      |
 <39:38> NS       RAZ      NS          NS        Reserved for UART expansion                        |
 <37:36> UART     R/W1	   0	       0	 Write 1 to enable CIU2_EN_xx_yy_MIO[UART]          |
 <35:34> NS       RAZ      NS          NS        Reserved for TWSI expansion                        |
 <33:32> TWSI	  R/W1	   0	       0	 Write 1 to enable CIU2_EN_xx_yy_MIO[TWSI]          |
 <31:19> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <18>    BOOTDMA  R/W1     0           0         Write 1 to enable CIU2_EN_xx_yy_MIO[BOOTDMA]       |
 <17>    MIO      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_MIO[MIO]           |
 <16>	 NAND	  R/W1     0           0         Write 1 to enable CIU2_EN_xx_yy_MIO[NAND]          |
 <15:12> NS       RAZ      NS          NS        Reserved for timer expansion                       |
 <11:8>  TIMER	  R/W1	   0	       0	 Write 1 to enable CIU2_EN_xx_yy_MIO[TIMER]         |
 <7:3>   NS       RAZ      NS          NS        Reserved for future expansion                      |
 <2>	 IPD_DRP  R/W1	   0	       0	 Write 1 to enable CIU2_EN_xx_yy_MIO[IPD_DRP]       |
 <1>     SSOIQ	  R/W1     0           0         Write 1 to enable CIU2_EN_xx_yy_MIO[SSQIQ]	    |
 <0>     IPDPPTHR R/W1     0           0         Write 1 to enable CIU2_EN_xx_yy_MIO[IPDPPTHR]      |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_IO_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_IO_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_IO_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_IO_W1S Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:34> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <33:32> PEM      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_IO[PEM]            |
 <31:18> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <17:16> PCI_INTA R/W1	   0	       0	 Write 1 to enable CIU2_EN_xx_yy_IO[PCI_INTA] 	    |
 <15:13> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <12:12> MSIRED   R/W1	   0	       0	 Write 1 to enable CIU2_EN_xx_yy_IO[MSIRED]  	    |
						  This bit may not be functional in pass 1.         |
 <11:8>  PCI_MSI  R/W1	   0	       0	 Write 1 to enable CIU2_EN_xx_yy_IO[PCI_MSI]        |
 <7:4>   NS       RAZ      NS          NS        Reserved for future expansion                      |
 <3:0>   PCI_INTR R/W1	   0	       0	 Write 1 to enable CIU2_EN_xx_yy_IO[PCI_INTR]       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_MEM_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_MEM_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_MEM_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_MEM_W1S Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |
 <15:4>  NS       RAZ      NS          NS        Reserved for LMC expansion                         |
 <3:0>   LMC      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_MEM[LMC]           |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_PKT_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_PKT_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_PKT_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_PKT_W1S Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:52> NS       RAZ      NS          NS        Reserved for PKT expansion                         |
 <51:49> NS       RAZ      NS          NS        Reserved for ILK expansion                         |
 <48>    ILK      R/W1     0           0         Write 1 to enable CIU2_EN_xx_yy_PKT[ILK]           |
 <47:41> NS       RAZ      NS          NS        Reserved for PKT expansion                         |
 <40>	 MII      R/W1     0           0         Write 1 to enable CIU2_EN_xx_yy_PKT[MII] 	    |
 <39:33> NS       RAZ      NS          NS        Reserved for PKT expansion                         |
 <32>    AGL      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_PKT[AGL]           |
 <31:13> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <12:8>  GMX_DRP  R/W1	   0	       0	 Write 1 to enable CIU2_EN_xx_yy_PKT[GMX_DRP]       |
 <7:5>   NS       RAZ      NS          NS        Reserved for PKT expansion                         |
 <4:0>   AGX      R/W1     0x0         0         Write 1 to enable CIU2_EN_xx_yy_PKT[AGX]           |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU2_EN_PP(0..31)_IP2_GPIO_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_GPIO_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_GPIO_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_GPIO_W1S Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ	   0	       0	 Reserved                  			    |
 <31:16> NS       RAZ	   0	       0	 Reserved for future GPIOs			    |
 <15:0>  GPIO     R/W1	   0	       0	 16 GPIO interrupt enable,write 1 to enable CIU2_EN |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU2_EN_PP(0..31)_IP2_MBOX_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_MBOX_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_MBOX_W1S Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_MBOX_W1S Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ	   0	       0	 Reserved for future GPIOs			    |
 <3:0>   MBOX     R/W1	   0	       0	 Write 1 to enable CIU2_EN_xx_yy_MBOX[MBOX]         |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_WRKQ_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_WRKQ_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_WRKQ_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_WRKQ_W1C Type=NCB
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  WORKQ    R/W1C	   0	       0	 Write 1 to clear CIU2_EN_xx_yy_WRKQ[WORKQ]         |
						 For W1C bits, write 1 to clear the corresponding   |
						 CIU2_EN_xx_yy_WRKQ,write 0 to retain previous value|
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU2_EN_PP(0..31)_IP2_WDOG_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_WDOG_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_WDOG_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_WDOG_W1C Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS 	  RAZ      0           0         Reserved for PP expansion                          |
 <31:0>	 WDOG     R/W1C	   0	       0	 write 1 to clear CIU2_EN_xx_yy_WDOG                |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_RML_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_RML_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_RML_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_RML_W1C Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------

 <63:56> NS       RAZ      NS          NS        Reserved                                           |
 <55:52> TRACE	  R/W1C	   0x0	       0	 Write 1 to clear CIU2_EN_xx_yy_RML[TRACE]          |
 <51:49> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <48>    L2C      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_RML[L2C]            |
 <47:44> NS       RAZ      NS          NS        Reserved for DFM expansion                         |
 <43:41> NS       RAZ      NS          NS        Reserved for DFA expansion                         |
 <40>    DFA      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_RML[DFA]            |
 <39:34> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <33>    DPI      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_RML[DPI]            |
 <32>    SLI      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_RML[SLI]            |
 <31>    NS       RAZ      NS          NS        Reserved                                           |
 <30>    KEY      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_RML[KEY]	    |
 <29>    RAD      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_RML[RAD]            |
 <28>    TIM      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_RML[TIM]            |
 <27:25> NS       RAZ      NS          NS        Reserved for ZIP expansion                         |
 <24>    ZIP      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_RML[ZIP]            |
 <23:17> NS       RAZ      NS          NS        Reserved for expansion                             |
 <16>    SSO      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_RML[SSO]            |
 <15:8>  NS       RAZ      NS          NS        Reserved for future expansion                      |
 <7>     PKO      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_RML[PKO]            |
 <6>     PIP      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_RML[PIP]            |
 <5>     IPD      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_RML[IPD]            |
 <4>     FPA      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_RML[FPA]            |
 <3:1>   NS       RAZ      NS          NS        Reserved for IOB expansion                         |
 <0>     IOB      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_RML[IOB]            |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_MIO_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_MIO_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_MIO_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_MIO_W1C Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    RST      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_MIO[RST]            |
 <62:49> NS       RAZ      NS          NS        Reserved                                           |
 <48>    PTP      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_MIO[PTP]            |
 <47:45> NS       RAZ      NS          NS        Reserved for USB expansion                         |
 <44>    USB_HCI  R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_MIO[USB_HCI]        |
 <43:41> NS       RAZ      NS          NS        Reserved for USB expansion                         |
 <40>    USB_UCTL R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_MIO[USB_UCTL]       |
 <39:38> NS       RAZ      NS          NS        Reserved for UART expansion                        |
 <37:36> UART     R/W1C	   0x0	       0	 Write 1 to clear CIU2_EN_xx_yy_MIO[UART]           |
 <35:34> NS       RAZ      NS          NS        Reserved for TWSI expansion                        |
 <33:32> TWSI	  R/W1C	   0x0	       0	 Write 1 to clear CIU2_EN_xx_yy_MIO[TWSI]           |
 <31:19> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <18>    BOOTDMA  R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_MIO[BOOTDMA]        |
 <17>    MIO      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_MIO[MIO]            |
 <16>	 NAND	  R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_MIO[NAND]           |
 <15:12> NS       RAZ      NS          NS        Reserved for timer expansion                       |
 <11:8>  TIMER	  R/W1C	   0x0	       0	 Write 1 to clear CIU2_EN_xx_yy_MIO[TIMER]          |
 <7:3>   NS       RAZ      NS          NS        Reserved for future expansion                      |
 <2>	 IPD_DRP  R/W1C	   0x0	       0	 Write 1 to clear CIU2_EN_xx_yy_MIO[IPD_DRP]        |
 <1>     SSOIQ	  R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_MIO[SSQIQ]	    |
 <0>     IPDPPTHR R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_MIO[IPDPPTHR]       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_IO_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_IO_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_IO_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_IO_W1C Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:34> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <33:32> PEM      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_IO[PEM]             |
 <31:18> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <17:16> PCI_INTA R/W1C    0x0	       0	 Write 1 to clear CIU2_EN_xx_yy_IO[PCI_INTA] 	    |
 <15:13> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <12:12> MSIRED   R/W1C	   0	       0	  Write 1 to clear CIU2_EN_xx_yy_IO[MSIRED]   	    |
						  This bit may not be functional in pass 1.         |
 <11:8>  PCI_MSI  R/W1C	   0x0	       0	 Write 1 to clear CIU2_EN_xx_yy_IO[PCI_MSI]         |
 <7:4>   NS       RAZ      NS          NS        Reserved for future expansion                      |
 <3:0>   PCI_INTR R/W1C	   0x0	       0	 Write 1 to clear CIU2_EN_xx_yy_IO[PCI_INTR]        |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_MEM_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_MEM_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_MEM_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_MEM_W1C Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |
 <15:4>  NS       RAZ      NS          NS        Reserved for LMC expansion                         |
 <3:0>   LMC      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_MEM[LMC]            |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_PKT_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_PKT_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_PKT_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_PKT_W1C Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:52> NS       RAZ      NS          NS        Reserved for PKT expansion                         |
 <51:49> NS       RAZ      NS          NS        Reserved for ILK expansion                         |
 <48>    ILK      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_PKT[ILK]            |
 <47:41> NS       RAZ      NS          NS        Reserved for PKT expansion                         |
 <40>	 MII      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_PKT[MII]	    |
 <39:33> NS       RAZ      NS          NS        Reserved for PKT expansion                         |
 <32>    AGL      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_PKT[AGL]            |
 <31:13> NS       RAZ      NS          NS        Reserved for future expansion                      |
 <12:8>  GMX_DRP  R/W1C	   0x0	       0	 Write 1 to clear CIU2_EN_xx_yy_PKT[GMX_DRP]        |
 <7:5>   NS       RAZ      NS          NS        Reserved for PKT expansion                         |
 <4:0>   AGX      R/W1C    0x0         0         Write 1 to clear CIU2_EN_xx_yy_PKT[AGX]            |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU2_EN_PP(0..31)_IP2_GPIO_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_GPIO_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_GPIO_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_GPIO_W1C Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ	   NS	       0	 Reserved                  			    |
 <31:16> NS       RAZ	   NS	       0	 Reserved for future GPIOs			    |
 <15:0>  GPIO     R/W1C	   0x0	       0	 Write 1 to clear CIU2_EN_xx_yy_GPIO[GPIO]          |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU2_EN_PP(0..31)_IP2_MBOX_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP3_MBOX_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_PP(0..31)_IP4_MBOX_W1C Type=NCB
     ==============================================================


     ==============================================================
     CIU2_EN_IO(0..1)_INT_MBOX_W1C Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ	   NS	       0	 Reserved for future GPIOs			    |
 <3:0>   MBOX     R/W1C	   0	       0	 Write 1 to clear CIU2_EN_xx_yy_MBOX[MBOX]          |
----------------------------------------------------------------------------------------------------
===



 * CIU2_ACK_PP@_IPx      (These CSRs may not be functional in pass 1)


     ==============================================================
     CIU2_ACK_PP(0..31)_IP2 Type=NCB
     ==============================================================


     ==============================================================
     CIU2_ACK_PP(0..31)_IP3 Type=NCB
     ==============================================================


     ==============================================================
     CIU2_ACK_PP(0..31)_IP4 Type=NCB
     ==============================================================


     ==============================================================
     CIU2_ACK_IO(0..1)_INT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS        RAZ      NS          NS       Reserved				            |
 <0:0>   ACK       RO	    0	        0	 Read to clear the corresponding interrupt to       |
						 PP/IO.  Without this read the interrupt will not   |
						 deassert until the next CIU interrupt scan, up to  |
						 200 cycles away.                                   |
----------------------------------------------------------------------------------------------------
===



 * CIU2_MSIRED_PP@_IPx      (These CSRs may not be functional in pass 1)
 * Contains reduced MSI interrupt numbers for delivery to software.
 * Note MSIRED delivery can only be made to PPs, not to IO; thus there are no CIU2_MSIRED_IO registers.
 *

     ==============================================================
     CIU2_MSIRED_PP(0..31)_IP2 Type=NCB
     ==============================================================


     ==============================================================
     CIU2_MSIRED_PP(0..31)_IP3 Type=NCB
     ==============================================================


     ==============================================================
     CIU2_MSIRED_PP(0..31)_IP4 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:21>  NS      RAZ       NS          NS      Reserved				            |
 <20:20>  INT     RO       0x0         0x0      Interrupt pending 				    |
 <19:17>  NS      RAZ       NS          NS      Reserved				            |
 <16:16>  NEWINT  RO       0x0         0x0      New interrupt to be delivered. 			    |
						  Internal state, for diagnostic use only.	    |   $PR
 <15:8>   NS      RAZ       NS          NS      Reserved				            |
 <7:0>    MSI_NUM RO       0x0         0x0      MSI number causing this interrupt.                  |
						If multiple MSIs are pending to the same PP and IP, |
						then this contains the numerically lowest MSI number|
----------------------------------------------------------------------------------------------------
===



 * CIU2_MSI_RCV  Received MSI state bits    (This CSR may not be functional in pass 1)


     ==============================================================
     CIU2_MSI_RCV(0..255) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>   NS      RAZ       NS          NS       Reserved				            |
 <0:0>  MSI_RCV   R/W       0x0         0x0      MSI state bit, set on MSI delivery or by software  |
						 "write 1" to set or "write 0" to clear.            |
						 This register is used to create the		    |
						 CIU2_RAW_xx_yy_IO[MSIRED] interrupt.  See also     |
						 SLI_MSI_RCV.                                       |
----------------------------------------------------------------------------------------------------
===



 * CIU2_MSI_SEL  Received MSI SEL enable    (This CSR may not be functional in pass 1)


     ==============================================================
     CIU2_MSI_SEL(0..255) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13>   NS     RAZ       NS          NS      Reserved				            |
 <12:8>  PP_NUM   R/W       0x0         0x0     Processor number to receive this MSI interrupt	    |
 <7:6>   NS       RAZ       NS          NS      Reserved				            |
 <5:4>   IP_NUM   R/W       0x0         0x0     Interrupt priority level to receive this MSI	    |
						interrupt (00=IP2, 01=IP3, 10=IP4, 11=rsvd)	        |
 <3:1>   NS       RAZ       NS          NS      Reserved				            |
 <0:0>   EN       R/W       0x0         0x0     Enable interrupt delivery.			    |
						 Must be set for PP_NUM and IP_NUM to have effect.  |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU2_WDOG(0..31) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:46> NS       RAZ      NS          NS        Reserved				            |
 <45>	 GSTOPEN  R/W	   0	       0	 GSTOPEN, Global-stop enable			    |
 <44>	 DSTOP    R/W	   0	       0	 DSTOP, Debug-stop enable			    |
 <43:20> CNT      RO	   0	       0	 Number of 512-cycle intervals until next watchdog  |
						  expiration.  Cleared on write to associated	    |
						  CIU2_PP_POKE register.		            |
 <19:4>	 LEN      R/W	   0	       0	 Watchdog time expiration length		    |
						  The 16 bits of LEN represent the most significant |
						  bits of a 24 bit decrementer that decrements	    |
						  every 512 cycles.				    |
						  LEN must be set > 0				    |
 <3:2>	 STATE    RO	   0	       0	 Watchdog state					    |
						  number of watchdog time expirations since last    |
						  PP poke.  Cleared on write to associated	    |
						  CIU2_PP_POKE register.		            |
 <1:0>	 MODE     R/W	   0	       0	 Watchdog mode					    |
						  0 = Off					    |
						  1 = Interrupt Only				    |
						  2 = Interrupt + NMI				    |
						  3 = Interrupt + NMI + Soft-Reset		    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU2_PP_POKE(0..31) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  POKE     R/W      NS          NS        PP_POKE for watchdog interrupt			    |
                                                 Any write to a CIU2_PP_POKE register clears any    |
						 pending interrupt generated by the associated      |
						 watchdog, resets the CIU2_WDOG[STATE] field, and   |
						 set CIU2_WDOG[CNT] to be (CIU2_WDOG[LEN] << 8).     |
						 Reads to this register will return the associated  |
						 CIU2_WDOG register.	                            |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU2_MBOX_SET(0..31) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>	 SET      R/W1	   0	       0	 On writes, set corresponding bit in MBOX register  |
						  on reads, return the MBOX register		    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU2_MBOX_CLR(0..31) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>	 CLR      R/W1C	   0	       0	 On writes, clr corresponding bit in MBOX register  |
						  on reads, return the MBOX register		    |
----------------------------------------------------------------------------------------------------
===




     ==============================================================
     CIU2_INTR_SLOWDOWN Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:3> NS        RAZ      NS          NS        Reserved				            |
 <2:0>  CTL       R/W      NS          0         Slowdown CIU interrupt walker processing time.     |
						 IRQ2/3/4 for all 32 PPs are sent to PP (MRC) in    |
						 a serial bus to reduce global routing. There is    |
						 no backpressure mechanism designed for this scheme.|
						 It will be only a problem when sclk is faster, this|
                                                 Control will process 1 interrupt in 2^(CTL) sclks  |
						 With different setting, clock rate ratio can handle|
						 SLOWDOWN	sclk_freq/aclk_freq ratio           |
                                                  0                      3                          |
                                                  1                      6                          |
                                                  n                      3*2^(n)                    |
----------------------------------------------------------------------------------------------------
===




     ==============================================================
     CIU2_INTR_CIU_READY Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1> NS        RAZ      NS          NS        Reserved				            |
 <0>    READY     RO       NS          0         Because of the delay of the IRQ updates which may  |
                                                 take about 200 sclk cycles, software should read   |
                                                 this register after servicing interrupts and wait  |
                                                 for response before enabling interrupt watching.   |
                                                 Or, the outdated interrupt will show up again.     |
                                                 The read back data return when all interrupts have |
                                                 been serviced, and read back data is always zero.  |
						 In o68 pass2, CIU_READY gets replaced by CIU2_ACK  |
						 This becomes an internal debug feature.            |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU2_INTR_RAM_ECC_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS        RAZ       NS          NS      Reserved				            |
 <3>     NS        RAZ       NS          NS      Reserved				            |
 <2:1>   FLIP_SYND R/W       0x0         0       Testing feature. Flip Syndrom to generate single or|
						 double bit error. FLIP_SYND[0] generate even number|
						 -ed bits error,FLIP_SYND[1] generate odd bits error|
 <0>     ECC_ENA   R/W       0x1         1       ECC Enable: When set will enable the 9bit ECC      |
                                                 check/correct logic for CIU interrupt enable RAM.  |
						 With ECC enabled, the ECC code will be generated   |
                                                 and written in the memory and then later on reads, |
						 used to check and correct Single bit error and     |
						 detect Double Bit error.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU2_INTR_RAM_ECC_ST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:23> NS        RAZ       NS          NS      Reserved				            |
 <22:16> ADDR      RO        0x0         0       Latch the address for latest sde/dde occured       |
                                                 The value only 0-98 indicates the different 98 IRQs|
                                                 Software can read all corresponding corrected value|
						 from CIU2_EN_PP@_IPx_*** or CIU2_EN_IO@_INT_*** and|
						 rewite to the same address to corrected the bit err|
 <15:13> NS        RAZ       NS          NS      Reserved				            |
 <12:4>  SYNDROM   RO        0x0         0       Report the latest error syndrom 	            |
 <3:2>   NS        RAZ       NS          NS      Reserved				            |
 <1>     DBE       R/W1C     0x0         0       Double bit error observed. Write '1' to clear	    |
 <0>     SBE       R/W1C     0x0         0       Single bit error observed. Write '1' to clear      |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU_TIM(0..3) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:37> NS       RAZ      NS          NS        Reserved				            |
 <36>	 ONE_SHOT R/W	   0	       0	 One-shot mode					    |
 <35:0>	 LEN      R/W	   0	       0	 Timeout length in core clock cycles		    |
						  Periodic interrupts will occur every LEN+1 core   |
						  clock cycles when ONE_SHOT==0			    |
						  Timer disabled when LEN==0			    |
----------------------------------------------------------------------------------------------------
===


 * Contains the reset control for each PP.  Value of '1' will hold a PP in reset, '0' will release.
 * Resets to 0xffffffff when PCI boot is enabled, 0xfffffffe otherwise.
 *

     ==============================================================
     CIU_PP_RST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:1>	 RST	  R/W	   0x7fffffff  0	 PP Rst for PP's 31-1				    |
 <0>	 RST0     R/W	   NS	       NS	 PP Rst for PP0					    |
						  depends on standalone mode			    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU_PP_DBG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>	 PPDBG	  RO	   0	       0	 Debug[DM] value for each PP			    |
						  whether the PP's are in debug mode or not	    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU_GSTOP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved				            |
 <0>	 GSTOP	  R/W	   0	       0	 GSTOP bit					    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU_NMI Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>	 NMI	  WO	   0	       0	 Send NMI pulse to PP vector			    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU_DINT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>	 DINT	  WO	   0	       0	 Send DINT pulse to PP vector			    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU_FUSE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>	 FUSE	  RO	   NS	       NS	 Physical PP is present				    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU_BIST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7> NS       RAZ      NS          NS        Reserved				            |
 <6:0>  BIST     RO       0x0         0         BIST Results.                                       |
                                                  HW sets a bit in BIST for for memory that fails   |
						  BIST.						    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU_SOFT_BIST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1> NS        RAZ      NS          NS        Reserved				            |
 <0>    SOFT_BIST RAZ      NS          NS        Reserved                                           |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU_SOFT_RST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1> NS        RAZ      NS          NS        Reserved				            |
 <0>    SOFT_RST  WO       0x0         0         Resets Octeon                                      |
						  When soft reseting Octeon from a remote PCIe/sRIO |
						  host, always read CIU_SOFT_RST (and wait for      |
						  result) before writing SOFT_RST to '1'.		    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU_SOFT_PRST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1> NS        RAZ      NS          NS        Reserved				            |
 <0>    SOFT_PRST R/W      NS          0         Resets the PCIe/sRIO logic in all modes, not just  |
						 RC mode. The reset value is based on the	    |
						 corresponding MIO_RST_CTL[PRTMODE] CSR field:	    |
						  If PRTMODE == 0, then SOFT_PRST resets to 0	    |
						  If PRTMODE != 0, then SOFT_PRST resets to 1	    |
						 When OCTEON is configured to drive the PERST*_L    |
                                                 chip pin (ie. MIO_RST_CTL0[RST_DRV] is set), this  |
                                                 controls the PERST*_L chip pin.                    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU_PCI_INTA Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2> NS        RAZ      NS          NS        Reserved				            |
 <1:0>  INT       R/W      0x0         0         PCIe/sRIO interrupt				    |
						  These bits are observed in CIU2_RAW_IO[17:16]     |
						  and generate IRQ by enabling CIU2_EN_PP@_IPx_IO   |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU_SOFT_PRST1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1> NS        RAZ      NS          NS        Reserved				            |
 <0>    SOFT_PRST R/W      NS          0         Resets the PCIe/sRIO logic in all modes, not just  |
						 RC mode. The reset value is based on the	    |
						 corresponding MIO_RST_CTL[PRTMODE] CSR field:	    |
						  If PRTMODE == 0, then SOFT_PRST resets to 0	    |
						  If PRTMODE != 0, then SOFT_PRST resets to 1	    |
						 When OCTEON is configured to drive the PERST*_L    |
                                                 chip pin (ie. MIO_RST_CTL1[RST_DRV] is set), this  |
                                                 controls the PERST*_L chip pin.                    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU_QLM_JTGC Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:17> NS       RAZ      NS          NS        Reserved				            |
 <16>  BYPASS_EXT R/W      0x0         NS        BYPASS Field extension to select QLM 4		    |
						 Selects which QLM JTAG shift chains are bypassed   |
                                                 by the QLM JTAG data register (CIU_QLM_JTGD) (one  |
                                                 bit per QLM)					    |
 <15:11> NS       RAZ      NS          NS        Reserved				            |
 <10:8>  CLK_DIV  R/W      0x0         NS        Clock divider for QLM JTAG operations.  eclk is    |
                                                 divided by 2^(CLK_DIV + 2)                         |
 <7>     NS       RAZ      NS          NS        Reserved				            |
 <6:4>   MUX_SEL  R/W      0x0         NS        Selects which QLM JTAG shift out is shifted into   |
                                                 the QLM JTAG shift register: CIU_QLM_JTGD[SHFT_REG]|
 <3:0>   BYPASS   R/W      0x0         NS        BYPASS to select QLM 0-3, see BYPASS_EXT for QLM4  |
						 Selects which QLM JTAG shift chains are bypassed   |
                                                 by the QLM JTAG data register (CIU_QLM_JTGD) (one  |
                                                 bit per QLM)                                       |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU_QLM_JTGD Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    CAPTURE  R/W      0x0         NS        Perform JTAG capture operation (self-clearing when |
                                                 op completes)                                      |
 <62>    SHIFT    R/W      0x0         NS        Perform JTAG shift operation (self-clearing when   |
                                                 op completes)                                      |
 <61>    UPDATE   R/W      0x0         NS        Perform JTAG update operation (self-clearing when  |
                                                 op completes)                                      |
 <60:45> NS       RAZ      NS          NS        Reserved				            |
 <44:40> SELECT   R/W      0x0         NS        Selects which QLM JTAG shift chains the JTAG       |
                                                 operations are performed on                        |
 <39:37> NS       RAZ      NS          NS        Reserved				            |
 <36:32> SHFT_CNT R/W      0x0         NS        QLM JTAG shift count (encoded in -1 notation)      |
 <31:0>  SHFT_REG R/W      0x0         NS        QLM JTAG shift register                            |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     CIU_QLM0 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31>    TXBYPASS R/W      0x0         NS        QLMx transmitter bypass enable                     |
 <30:21> NS       RAZ      NS          NS        Reserved				            |
 <20:16> TXDEEMPH R/W      0x0         NS        QLMx transmitter bypass de-emphasis value          |
 <15:13> NS       RAZ      NS          NS        Reserved				            |
 <12:8>  TXMARGIN R/W      0x0         NS        QLMx transmitter bypass margin (amplitude) value   |
 <7:4>   NS       RAZ      NS          NS        Reserved				            |
 <3:0>   LANE_EN  R/W      0xf         NS        QLMx lane enable mask                              |

Note: This register is only reset by cold reset.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_QLM1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    G2BYPASS R/W      0x0         NS        QLMx PCIE Gen2 tx bypass enable                    |
 <62:53> NS       RAZ      NS          NS        Reserved				            |
 <52:48> G2DEEMPH R/W      0x0         NS        QLMx PCIE Gen2 tx bypass de-emphasis value         |
 <47:45> NS       RAZ      NS          NS        Reserved				            |
 <44:40> G2MARGIN R/W      0x0         NS        QLMx PCIE Gen2 tx bypass margin (amplitude) value  |
 <39:32> NS       RAZ      NS          NS        Reserved				            |
 <31>    TXBYPASS R/W      0x0         NS        QLMx transmitter bypass enable                     |
 <30:21> NS       RAZ      NS          NS        Reserved				            |
 <20:16> TXDEEMPH R/W      0x0         NS        QLMx transmitter bypass de-emphasis value          |
 <15:13> NS       RAZ      NS          NS        Reserved				            |
 <12:8>  TXMARGIN R/W      0x0         NS        QLMx transmitter bypass margin (amplitude) value   |
 <7:4>   NS       RAZ      NS          NS        Reserved				            |
 <3:0>   LANE_EN  R/W      0xf         NS        QLMx lane enable mask                              |

Note: This register is only reset by cold reset.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_QLM2 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    G2BYPASS R/W      0x0         NS        QLMx PCIE Gen2 tx bypass enable                    |
 <62:53> NS       RAZ      NS          NS        Reserved				            |
 <52:48> G2DEEMPH R/W      0x0         NS        QLMx PCIE Gen2 tx bypass de-emphasis value         |
 <47:45> NS       RAZ      NS          NS        Reserved				            |
 <44:40> G2MARGIN R/W      0x0         NS        QLMx PCIE Gen2 tx bypass margin (amplitude) value  |
 <39:32> NS       RAZ      NS          NS        Reserved				            |
 <31>    TXBYPASS R/W      0x0         NS        QLMx transmitter bypass enable                     |
 <30:21> NS       RAZ      NS          NS        Reserved				            |
 <20:16> TXDEEMPH R/W      0x0         NS        QLMx transmitter bypass de-emphasis value          |
 <15:13> NS       RAZ      NS          NS        Reserved				            |
 <12:8>  TXMARGIN R/W      0x0         NS        QLMx transmitter bypass margin (amplitude) value   |
 <7:4>   NS       RAZ      NS          NS        Reserved				            |
 <3:0>   LANE_EN  R/W      0xf         NS        QLMx lane enable mask                              |

Note: This register is only reset by cold reset.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_QLM3 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    G2BYPASS R/W      0x0         NS        QLMx PCIE Gen2 tx bypass enable                    |
 <62:53> NS       RAZ      NS          NS        Reserved				            |
 <52:48> G2DEEMPH R/W      0x0         NS        QLMx PCIE Gen2 tx bypass de-emphasis value         |
 <47:45> NS       RAZ      NS          NS        Reserved				            |
 <44:40> G2MARGIN R/W      0x0         NS        QLMx PCIE Gen2 tx bypass margin (amplitude) value  |
 <39:32> NS       RAZ      NS          NS        Reserved				            |
 <31>    TXBYPASS R/W      0x0         NS        QLMx transmitter bypass enable                     |
 <30:21> NS       RAZ      NS          NS        Reserved				            |
 <20:16> TXDEEMPH R/W      0x0         NS        QLMx transmitter bypass de-emphasis value          |
 <15:13> NS       RAZ      NS          NS        Reserved				            |
 <12:8>  TXMARGIN R/W      0x0         NS        QLMx transmitter bypass margin (amplitude) value   |
 <7:4>   NS       RAZ      NS          NS        Reserved				            |
 <3:0>   LANE_EN  R/W      0xf         NS        QLMx lane enable mask                              |

Note: This register is only reset by cold reset.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_QLM4 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    G2BYPASS R/W      0x0         NS        QLMx PCIE Gen2 tx bypass enable                    |
 <62:53> NS       RAZ      NS          NS        Reserved				            |
 <52:48> G2DEEMPH R/W      0x0         NS        QLMx PCIE Gen2 tx bypass de-emphasis value         |
 <47:45> NS       RAZ      NS          NS        Reserved				            |
 <44:40> G2MARGIN R/W      0x0         NS        QLMx PCIE Gen2 tx bypass margin (amplitude) value  |
 <39:32> NS       RAZ      NS          NS        Reserved				            |
 <31>    TXBYPASS R/W      0x0         NS        QLMx transmitter bypass enable                     |
 <30:21> NS       RAZ      NS          NS        Reserved				            |
 <20:16> TXDEEMPH R/W      0x0         NS        QLMx transmitter bypass de-emphasis value          |
 <15:13> NS       RAZ      NS          NS        Reserved				            |
 <12:8>  TXMARGIN R/W      0x0         NS        QLMx transmitter bypass margin (amplitude) value   |
 <7:4>   NS       RAZ      NS          NS        Reserved				            |
 <3:0>   LANE_EN  R/W      0xf         NS        QLMx lane enable mask                              |

Note: This register is only reset by cold reset.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_INT_DBG_SEL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:19> NS       RAZ      NS          NS        Reserved				            |
 <18:16> SEL      R/W      0           NS        Selects if all or the specific interrupt is	    |
						  presented on the debug port.			    |
						  0=erst_n					    |
						  1=start_bist					    |
						  2=toggle at sclk/2 freq			    |
						  3=All PP interrupt bits are ORed together	    |
						  4=Only the selected virtual PP/IRQ is selected    |
 <15:10> NS       RAZ      NS          NS        Reserved				            |
 <9:8>   IRQ      R/W      0           NS        Which IRQ to select                                |
						  0=IRQ2					    |
						  1=IRQ3					    |
						  2=IRQ4					    |
 <7:5>   NS       RAZ      NS          NS        Reserved				            |
 <4:0>   PP       R/W      0           NS        Which PP to select                                 |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_PP_BIST_STAT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved                                           |
 <31:0>  PP_BIST  RO       0           NS        Physical PP BIST status                            |
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_ORING1 = MIX Outbound Ring Register #1
 *
 * Description:
 *  NOTE: To write to the MIX_ORING1 register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_ORING1 register, a device would issue an IOBLD64 directed at the MIO.
 *

     ==============================================================
     MIX(0..0)_ORING1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <2:0>   NS       RAZ      NS          NS        RESERVED
 <39:3>  OBASE    R/W      0x0         NS        Represents the 8B-aligned base address of the first
                                                 Outbound Ring(O-Ring) Entry in system memory.
						 NOTE: SW MUST ONLY write to this register during
                                                 power-on/boot code.

 <59:40> OSIZE    R/W      0x0         NS        Represents the Outbound Ring Buffer's Size(in 8B
                                                 words). The ring can be as large as 1M entries.
                                                 NOTE: This CSR MUST BE setup written by SW poweron
                                                 (when ODBELL/ORCNT=0).

 <63:60> NS       RAZ      NS          NS        RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_ORING2 = MIX Outbound Ring Register #2
 *
 * Description:
 *  NOTE: To write to the MIX_ORING2 register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_ORING2 register, a device would issue an IOBLD64 directed at the MIO.
 *

     ==============================================================
     MIX(0..0)_ORING2 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <19:0>  ODBELL   R/W      0x0         NS        Represents the cumulative total of pending
                                                 Outbound Ring(O-Ring) Buffer Entries. Each O-Ring
                                                 Buffer Entry contains 1) an L2/DRAM byte pointer
                                                 along with a 2) a Byte Length.

						 After SW inserts new entries into the O-Ring Buffer,
                                                 it "rings the doorbell with the count of the newly
                                                 inserted entries". When the MIX HW receives the
                                                 doorbell ring, it increments the current doorbell
                                                 count by the CSR write value.

                                                 SW must never cause the doorbell count for the
                                                 O-Ring to exceed the size of the ring(OSIZE).
                                                 A read of the CSR indicates the current doorbell
                                                 count.

 <31:20> NS       RAZ      NS          NS        RESERVED

 <51:32> OTLPTR   RO      0x0         NS         The Outbound Ring Tail Pointer selects the O-Ring
                                                 Entry that the HW will process next. After the HW
                                                 completes sending an outbound packet, it increments
                                                 the O-Ring Tail Pointer. [NOTE: The O-Ring Tail
                                                 Pointer HW increment is always modulo
                                                 MIX_ORING2[OSIZE].
						 NOTE: This field is 'read-only' to SW.

 <63:52> NS       RAZ      NS          NS        RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_IRING1 = MIX Inbound Ring Register #1
 *
 * Description:
 *  NOTE: To write to the MIX_IRING1 register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_IRING1 register, a device would issue an IOBLD64 directed at the MIO.
 *

     ==============================================================
     MIX(0..0)_IRING1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <2:0>   NS       RAZ      NS          NS        RESERVED

 <39:3>  IBASE    R/W      0x0         NS        Represents the 8B-aligned base address of the first
                                                 Inbound Ring entry in system memory.
						 NOTE: SW MUST ONLY write to this register during
                                                 power-on/boot code.

 <59:40> ISIZE    R/W      0x0         NS        Represents the Inbound Ring Buffer's Size(in 8B
                                                 words). The ring can be as large as 1M entries.
                                                 NOTE: This CSR MUST BE setup written by SW poweron
                                                 (when IDBELL/IRCNT=0).

 <63:60> NS       RAZ      NS          NS        RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_IRING2 = MIX Inbound Ring Register #2
 *
 * Description:
 *  NOTE: To write to the MIX_IRING2 register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_IRING2 register, a device would issue an IOBLD64 directed at the MIO.
 *

     ==============================================================
     MIX(0..0)_IRING2 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <19:0>  IDBELL   R/W      0x0         NS        Represents the cumulative total of pending
                                                 Inbound Ring Buffer Entries. Each I-Ring
                                                 Buffer Entry contains 1) an L2/DRAM byte pointer
                                                 along with a 2) a Byte Length.

						 After SW inserts a new entry into the I-Ring Buffer,
                                                 it "rings the doorbell for the inbound ring". When
                                                 the MIX HW receives the doorbell ring, it advances
                                                 the doorbell count for the I-Ring.

                                                 SW must never cause the doorbell count for the
                                                 I-Ring to exceed the size of the I-ring(ISIZE).
                                                 A read of the CSR indicates the current doorbell
                                                 count.

 <31:20> NS       RAZ      NS          NS        RESERVED

 <51:32> ITLPTR   RO      0x0         NS         The Inbound Ring Tail Pointer selects the I-Ring
                                                 Entry that the HW will process next. After the HW
                                                 completes receiving an inbound packet, it increments
                                                 the I-Ring Tail Pointer. [NOTE: The I-Ring Tail
                                                 Pointer HW increment is always modulo ISIZE.

						 NOTE: This field is 'read-only' to SW.
 <63:52> NS       RAZ      NS          NS        RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_CTL = MIX Control Register
 *
 * Description:
 *  NOTE: To write to the MIX_CTL register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_CTL register, a device would issue an IOBLD64 directed at the MIO.
 *

     ==============================================================
     MIX(0..0)_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>  MRQ_HWM  R/W      0x0         0x1       MIX CB-Request FIFO Programmable High Water Mark.
                                                The MRQ contains 16 CB-Requests which are CSR Rd/Wr
                                                Requests. If the MRQ backs up with "HWM" entries,
                                                then new CB-Requests are 'stalled'.
                                                   [0]: HWM = 11
                                                   [1]: HWM = 10
                                                   [2]: HWM = 9
                                                   [3]: HWM = 8
                                                NOTE: This must only be written at power-on/boot time.
 <2>    NBTARB   R/W      0x0         0x0       MIX CB-Request Arbitration Mode.
                                                When set to zero, the arbiter is fixed priority with
                                                the following priority scheme:
                                                    Highest Priority: I-Ring Packet Write Request
                                                                      O-Ring Packet Read Request
                                                                      I-Ring Entry Write Request
                                                                      I-Ring Entry Read Request
                                                                      O-Ring Entry Read Request
                                                When set to one, the arbiter is round robin.
 <3>    LENDIAN  R/W      0x0         0x0       Packet Little Endian Mode
                                                (0: Big Endian Mode/1: Little Endian Mode)
                                                When the mode is set, MIX will byte-swap packet data
                                                loads/stores at the MIX/NCB boundary.

 <4>    RESET    R/W	  0x1         0x0       MIX Soft Reset
                                                When SW writes a '1' to MIX_CTL[RESET], the
                                                MII-MIX/AGL logic will execute a soft reset.
                                                NOTE: During a soft reset, CSR accesses are not effected.
                                                However, the values of the CSR fields will be effected by
                                                soft reset (except MIX_CTL[RESET] itself).

                                                NOTE: After power-on, the MII-AGL/MIX are held in reset
                                                until the MIX_CTL[RESET] is written to zero. SW MUST also
                                                perform a MIX_CTL CSR read after this write to ensure the
                                                soft reset de-assertion has had sufficient time to propagate
                                                to all MIO-MIX internal logic before any subsequent MIX CSR
                                                accesses are issued.

                                                The intended "soft reset" sequence is: (please also
                                                refer to HRM Section 12.6.2 on MIX/AGL Block Reset).
                                                   1) Write MIX_CTL[EN]=0
                                                      [To prevent any NEW transactions from being started]
                                                   2) Wait for MIX_CTL[BUSY]=0
                                                      [To indicate that all inflight transactions have
                                                       completed]
                                                   3) Write MIX_CTL[RESET]=1, followed by a MIX_CTL CSR read
                                                      and wait for the result.
                                                   4) Re-Initialize the MIX/AGL just as would be done
                                                      for a hard reset.
                                               NOTE: Once the MII has been soft-reset, please refer to HRM Section
                                               12.6.1 MIX/AGL BringUp Sequence to complete the MIX/AGL
                                               re-initialization sequence.

<5>     EN       R/W      0x0         0x0       MIX Enable bit
                                                When EN=0, MIX will no longer arbitrate for
                                                any new L2/DRAM read/write requests on the NCB Bus.
                                                MIX will complete any requests that are currently
                                                pended for the NCB Bus.

<6>     BUSY     RO       0x0         0x0       MIX Busy Status bit
                                                MIX will assert busy status any time there are:
                                                  1) L2/DRAM reads in-flight (NCB-arb to read
                                                     response)
                                                  2) L2/DRAM writes in-flight (NCB-arb to write
                                                     data is sent.
                                                  3) L2/DRAM write commits in-flight (NCB-arb to write
                                                     commit response).
                                                NOTE: After MIX_CTL[EN]=0, the MIX will eventually
                                                complete any "inflight" transactions, at which point the
                                                BUSY will de-assert.

<7>   CRC_STRIP  R/W      0x0         0x0       HW CRC Strip Enable
						When enabled, the last 4 bytes(CRC) of the ingress packet
                                                are not included in cumulative packet byte length.
                                                In other words, the cumulative LEN field for all
                                                I-Ring Buffer Entries associated with a given ingress
                                                packet will be 4 bytes less (so that the final 4B HW CRC
                                                packet data is not processed by software).

<11:8> TS_THRESH  R/W     0x0         0x0       TimeStamp Interrupt Threshold
                                                When the #of pending Timestamp interrupts (MIX_TSCTL[TSCNT]
                                                is greater than MIX_CTL[TS_THRESH], then a programmable
                                                TimeStamp Interrupt is issued (see MIX_INTR[TS]
                                                MIX_INTENA[TSENA]).
                                                SWNOTE: For o63, since the implementation only supports
                                                4 oustanding timestamp interrupts, this field should
                                                only be programmed from [0..3].

<63:12> NS        RAZ     NS          NS        RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_IRHWM = MIX I-Ring High-Water Mark Threshold Register
 *
 * Description:
 *  NOTE: To write to the MIX_IHWM register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_IHWM register, a device would issue an IOBLD64 directed at the MIO.
 *

     ==============================================================
     MIX(0..0)_IRHWM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <19:0> IRHWM    R/W       0x0         0x0      I-Ring Entry High Water Mark Threshold.
                                                Used to determine when the # of Inbound packets
                                                in system memory(MIX_IRCNT[IRCNT]) exceeds this IRHWM
                                                threshold.

                                                NOTE: The power-on value of the CIU2_EN_xx_yy_PKT[MII]
                                                interrupt enable bits is zero and must be enabled
                                                to allow interrupts to be reported.

 <39:20> IBPLWM  R/W       0x0         0x0      I-Ring BackPressure Low Water Mark Threshold.
                                                When the #of available I-Ring Entries (IDBELL)
                                                is less than IBPLWM, the AGL-MAC will:
                                                  a) In full-duplex mode: send periodic PAUSE packets.
                                                  b) In half-duplex mode: Force collisions.
                                                This programmable mechanism is provided as a means
                                                to backpressure input traffic 'early' enough (so
                                                that packets are not 'dropped' by OCTEON).

 <63:40> NS       RAZ      NS          NS       RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_IRCNT = MIX I-Ring Pending Packet Counter
 *
 * Description:
 *  NOTE: To write to the MIX_IRCNT register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_IRCNT register, a device would issue an IOBLD64 directed at the MIO.
 *

     ==============================================================
     MIX(0..0)_IRCNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <19:0>  IRCNT     R/W       0x0         0x0    Pending # of I-Ring Packets.
                                                Whenever HW writes a completion code of Done, Trunc,
                                                CRCErr or Err, it increments the IRCNT (to indicate
                                                to SW the # of pending Input packets in system memory).
                                                NOTE: The HW guarantees that the completion code write
                                                is always visible in system memory BEFORE it increments
                                                the IRCNT.
                                                Reads of IRCNT return the current inbound packet count.
					        Writes of IRCNT decrement the count by the value
                                                written.
                                                This register is used to generate interrupts to alert
                                                SW of pending inbound MIX packets in system memory.

                                                NOTE: In the case of inbound packets that span multiple
                                                I-Ring entries, SW must keep track of the # of I-Ring Entries
                                                associated with a given inbound packet to reclaim the
                                                proper # of I-Ring Entries for re-use.

 <63:20> NS       RAZ      NS          NS        RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_ORHWM = MIX O-Ring High-Water Mark Threshold Register
 *
 * Description:
 *  NOTE: To write to the MIX_ORHWM register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_ORHWM register, a device would issue an IOBLD64 directed at the MIO.
 *

     ==============================================================
     MIX(0..0)_ORHWM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <19:0> ORHWM    R/W       0x0         0x0      O-Ring Entry High Water Mark Threshold.
                                                Used to determine when the # of Outbound packets
                                                in system memory that can be reclaimed
                                                (MIX_ORCNT[ORCNT]) exceeds this ORHWM threshold.

                                                NOTE: The power-on value of the CIU2_EN_xx_yy_PKT[MII]
                                                interrupt enable bits is zero and must be enabled
                                                to allow interrupts to be reported.

 <63:20> NS       RAZ      NS          NS       RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_ORCNT = MIX O-Ring Packets Sent Counter
 *
 * Description:
 *  NOTE: To write to the MIX_ORCNT register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_ORCNT register, a device would issue an IOBLD64 directed at the MIO.
 *

     ==============================================================
     MIX(0..0)_ORCNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <19:0>  ORCNT     R/W       0x0         0x0    Pending # of O-Ring Packets.
                                                Whenever HW removes a packet from the O-Ring, it
                                                increments the ORCNT (to indicate to SW the # of
                                                Output packets in system memory that can be reclaimed).
                                                Reads of ORCNT return the current count.
					        Writes of ORCNT decrement the count by the value
                                                written.
                                                This register is used to generate interrupts to alert
                                                SW of pending outbound MIX packets that have been
                                                removed from system memory. (see MIX_ISR[ORTHRESH]
                                                description for more details).
                                                NOTE: For outbound packets, the # of O-Ring Packets
                                                is equal to the # of O-Ring Entries.

 <63:20> NS       RAZ      NS          NS        RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_ISR = MIX Interrupt/Status Register
 *
 * Description:
 *  NOTE: To write to the MIX_ISR register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_ISR register, a device would issue an IOBLD64 directed at the MIO.
 *

     ==============================================================
     MIX(0..0)_ISR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ODBLOVF  R/W1C    0x0        0x0       Outbound DoorBell(ODBELL) Overflow Detected
                                                If SW attempts to write to the MIX_ORING2[ODBELL]
                                                with a value greater than the remaining #of
                                                O-Ring Buffer Entries (MIX_REMCNT[OREMCNT]), then
                                                the following occurs:
                                                1) The  MIX_ORING2[ODBELL] write is IGNORED
                                                2) The ODBLOVF is set and the CIU2_RAW_PKT[MII]
                                                   bit is set if ((MIX_ISR & MIX_INTENA) != 0)).

						If both the global interrupt mask bits (CIU2_EN_xx_yy_PKT[MII])
						and the local interrupt mask bit(OVFENA) is set, than an
                                                interrupt is reported for this event.

                                                SW should keep track of the #I-Ring Entries in use
                                                (ie: cumulative # of ODBELL writes),  and ensure that
                                                future ODBELL writes don't exceed the size of the
                                                O-Ring Buffer (MIX_ORING2[OSIZE]).
                                                SW must reclaim O-Ring Entries by writing to the
                                                MIX_ORCNT[ORCNT]. .

                                                NOTE: There is no recovery from an ODBLOVF Interrupt.
                                                If it occurs, it's an indication that SW has
                                                overwritten the O-Ring buffer, and the only recourse
                                                is a HW reset.

 <1>     IDBLOVF  R/W1C    0x0         0x0      Inbound DoorBell(IDBELL) Overflow Detected
                                                If SW attempts to write to the MIX_IRING2[IDBELL]
                                                with a value greater than the remaining #of
                                                I-Ring Buffer Entries (MIX_REMCNT[IREMCNT]), then
                                                the following occurs:
                                                1) The  MIX_IRING2[IDBELL] write is IGNORED
                                                2) The ODBLOVF is set and the CIU2_RAW_PKT[MII]
                                                   bit is set if ((MIX_ISR & MIX_INTENA) != 0)).

						If both the global interrupt mask bits (CIU2_EN_xx_yy_PKT[MII])
						and the local interrupt mask bit(IVFENA) is set, than an
                                                interrupt is reported for this event.

                                                SW should keep track of the #I-Ring Entries in use
                                                (ie: cumulative # of IDBELL writes),  and ensure that
                                                future IDBELL writes don't exceed the size of the
                                                I-Ring Buffer (MIX_IRING2[ISIZE]).
                                                SW must reclaim I-Ring Entries by keeping track of the
                                                #IRing-Entries, and writing to the MIX_IRCNT[IRCNT].
                                                NOTE: The MIX_IRCNT[IRCNT] register represents the
                                                total #packets(not IRing Entries) and SW must further
                                                keep track of the # of I-Ring Entries associated with
                                                each packet as they are processed.

                                                NOTE: There is no recovery from an IDBLOVF Interrupt.
                                                If it occurs, it's an indication that SW has
                                                overwritten the I-Ring buffer, and the only recourse
                                                is a HW reset.

 <2>     ORTHRESH  RO      0x0         0x0      Outbound Ring Packet Threshold Exceeded
                                                When the pending #outbound packets in system
	                                        memory(ORCNT) has exceeded a programmable threshold
						(ORHWM), then this bit is set. If this does occur,
                                                the ORTHRESH is set and the CIU2_RAW_PKT[MII] bit
                                                is set if ((MIX_ISR & MIX_INTENA) != 0)).

						If both the global interrupt mask bits (CIU2_EN_xx_yy_PKT[MII])
						and the local interrupt mask bit(OTHENA) is set, than an
                                                interrupt is reported for this event.

 <3>     IRTHRESH  RO      0x0         0x0      Inbound Ring Packet Threshold Exceeded
                                                When the pending #inbound packets in system
	                                        memory(IRCNT) has exceeded a programmable threshold
						(IRHWM), then this bit is set. If this does occur,
                                                the IRTHRESH is set and the CIU2_RAW_PKT[MII] bit
                                                is set if ((MIX_ISR & MIX_INTENA) != 0)).

						If both the global interrupt mask bits (CIU2_EN_xx_yy_PKT[MII])
						and the local interrupt mask bit(ITHENA) is set, than an
                                                interrupt is reported for this event.

 <4>     DATA_DRP R/W1C    0x0         0x0      Data was dropped due to RX FIFO full
                                                If this does occur, the DATA_DRP is set and the
                                                CIU2_RAW_PKT[MII] bit is set.

						If both the global interrupt mask bits (CIU2_EN_xx_yy_PKT[MII])
						and the local interrupt mask bit(DATA_DRPENA) is set, than an
                                                interrupt is reported for this event.

 <5>     IRUN     R/W1C    0x0         0x0      IRCNT UnderFlow Detected
                                                If SW writes a larger value than what is currently
                                                in the MIX_IRCNT[IRCNT], then HW will report the
                                                underflow condition.
                                                NOTE: The MIX_IRCNT[IRCNT] will clamp to to zero.

                                                NOTE: If an IRUN underflow condition is detected,
                                                the integrity of the MIX/AGL HW state has
                                                been compromised. To recover, SW must issue a
                                                software reset sequence (see: MIX_CTL[RESET]

 <6>     ORUN     R/W1C    0x0         0x0      ORCNT UnderFlow Detected
                                                If SW writes a larger value than what is currently
                                                in the MIX_ORCNT[ORCNT], then HW will report the
                                                underflow condition.
                                                NOTE: The MIX_ORCNT[IOCNT] will clamp to to zero.

                                                NOTE: If an ORUN underflow condition is detected,
                                                the integrity of the MIX/AGL HW state has
                                                been compromised. To recover, SW must issue a
                                                software reset sequence (see: MIX_CTL[RESET]

 <7>     TS       RO       0x0         0x0      TimeStamp Interrupt
                                                When the #of pending Timestamp Interrupts (MIX_TSCTL[TSCNT])
                                                is greater than the TimeStamp Interrupt Threshold
                                                (MIX_CTL[TS_THRESH]) value this interrupt bit is set.
						If both the global interrupt mask bits (CIU2_EN_xx_yy_PKT[MII])
						and this local interrupt mask bit is set, than an
                                                interrupt is reported for an Outbound Ring with Timestamp
                                                event (see: MIX_INTENA[TSENA]).

 <63:8>  NS       RAZ      NS          NS       RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_INTENA = MIX Local Interrupt Enable Mask Register
 *
 * Description:
 *  NOTE: To write to the MIX_INTENA register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_INTENA register, a device would issue an IOBLD64 directed at the MIO.
 *

     ==============================================================
     MIX(0..0)_INTENA Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     OVFENA   R/W      0x0         0x0      Outbound DoorBell(ODBELL) Overflow Interrupt Enable
						If both the global interrupt mask bits (CIU2_EN_xx_yy_PKT[MII])
						and this local interrupt mask bit is set, than an
                                                interrupt is reported for an Outbound Doorbell Overflow
                                                event(ODBOVF).

 <1>     IVFENA   R/W      0x0         0x0      Inbound DoorBell(IDBELL) Overflow Detected
						If both the global interrupt mask bits (CIU2_EN_xx_yy_PKT[MII])
						and this local interrupt mask bit is set, than an
                                                interrupt is reported for an Inbound Doorbell Overflow
                                                event(IDBOVF).

 <2>     OTHENA   R/W    0x0         0x0        Outbound Ring Threshold Exceeded Interrupt Enable
						If both the global interrupt mask bits (CIU2_EN_xx_yy_PKT[MII])
						and this local interrupt mask bit is set, than an
                                                interrupt is reported for an Outbound Ring Threshold
                                                Exceeded event(ORTHRESH).

 <3>     ITHENA   R/W    0x0         0x0        Inbound Ring Threshold Exceeded Interrupt Enable
						If both the global interrupt mask bits (CIU2_EN_xx_yy_PKT[MII])
						and this local interrupt mask bit is set, than an
                                                interrupt is reported for an Inbound Ring Threshold
                                                Exceeded event(IRTHRESH).

 <4> DATA_DRPENA  R/W    0x0         0x0        Data was dropped due to RX FIFO full Interrupt
                                                enable. If both the global interrupt mask bits
                                                (CIU2_EN_xx_yy_PKT[MII]) and the local interrupt mask
                                                bit(DATA_DRPENA) is set, than an interrupt is
                                                reported for this event.

 <5>     IRUNENA  R/W    0x0         0x0        IRCNT UnderFlow Interrupt Enable
						If both the global interrupt mask bits (CIU2_EN_xx_yy_PKT[MII])
						and this local interrupt mask bit is set, than an
                                                interrupt is reported for an IRCNT underflow condition
						MIX_ISR[IRUN].

 <6>     ORUNENA  R/W    0x0         0x0        ORCNT UnderFlow Detected Enable
						If both the global interrupt mask bits (CIU2_EN_xx_yy_PKT[MII])
						and this local interrupt mask bit is set, than an
                                                interrupt is reported for an ORCNT underflow condition
						MIX_ISR[ORUN].

 <7>     TSENA    R/W    0x0         0x0        TimeStamp Interrupt Enable
						If both the global interrupt mask bits (CIU2_EN_xx_yy_PKT[MII])
						and this local interrupt mask bit is set, than an
                                                interrupt is reported for an Outbound Ring with Timestamp
                                                event (see: MIX_ISR[TS]).

 <63:8>  NS       RAZ      NS          NS       RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_REMCNT = MIX Ring Buffer Remainder Counts (useful for HW debug only)
 *
 * Description:
 *  NOTE: To read the MIX_REMCNT register, a device would issue an IOBLD64 directed at the MIO.
 *

     ==============================================================
     MIX(0..0)_REMCNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <19:0>  OREMCNT   RO      0x0         0x0      Remaining O-Ring Buffer Count
                                                Reflects the # of unused/remaining O-Ring Entries
                                                that HW  currently detects in the O-Ring Buffer.
                                                HW uses this value to detect O-Ring Doorbell overflows.
                                                (see: MIX_ISR[ODBLOVF])

                                                When SW writes the MIX_IRING1[OSIZE], the OREMCNT
                                                is loaded with MIX_ORING2[OSIZE] value. (NOTE: OSIZE should only
                                                be written at power-on, when it's known that there are
                                                no O-Ring Entries currently in use by HW).
                                                When SW writes to the ODBELL register, the OREMCNT
                                                is decremented by the CSR write value.
                                                When SW writes to MIX_[OREMCNT], the OREMCNT is decremented
                                                by the CSR write value.

 <31:20> NS       RAZ      NS          NS        RESERVED

 <51:32> IREMCNT   RO      0x0         0x0      Remaining I-Ring Buffer Count
                                                Reflects the # of unused/remaining I-Ring Entries
                                                that HW  currently detects in the I-Ring Buffer.
                                                HW uses this value to detect I-Ring Doorbell overflows.
                                                (see: MIX_ISR[IDBLOVF])

                                                When SW writes the MIX_IRING1[ISIZE], the IREMCNT
                                                is loaded with MIX_IRING2[ISIZE] value. (NOTE: ISIZE should only
                                                be written at power-on, when it's known that there are
                                                no I-Ring Entries currently in use by HW).
                                                When SW writes to the IDBELL register, the IREMCNT
                                                is decremented by the CSR write value.
                                                When HW issues an IRing Write Request(onto NCB Bus),
                                                the IREMCNT is incremented by 1.

 <63:52> NS       RAZ      NS          NS        RESERVED
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_TSTAMP = MIX TimeStamp Register
 *
 * Description:
 *  NOTE: To read the MIX_TSTAMP register, a device would issue an IOBLD64 directed at the MIO.
 *

     ==============================================================
     MIX(0..0)_TSTAMP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  TSTAMP   RO       0x0         0x0       MIX TimeStamp Value
                                                 When SW sets up an ORING Entry with [47]=1(TSTAMP),
                                                 The packet is tagged with a specal SOP w/TSTAMP flag
                                                 as it is sent to the AGL.
                                                 Later the AGL will send "sample" strobe(s) to capture
                                                 a global 64bit timestamp value followed by a "commit"
                                                 strobe which writes the last sampled value into the
                                                 outbound Timestamp fifo (max depth=4) and increments
                                                 the MIX_TSCTL[TSCNT] register to indicate the total
                                                 #of pending Timestamp interrupts.

                                                 If the #pending Timestamp interrupts (MIX_TSCTL[TSCNT])
                                                 is greater than the MIX_CTL[TS_THRESH] value, then
                                                 a programmable interrupt is also triggered (see:
                                                 MIX_ISR[TS] MIX_INTENA[TSENA]).

                                                 SW will then read the MIX*_TSTAMP[TSTAMP]
                                                 register value, and MUST THEN write the MIX_TSCTL
                                                 register, which will decrement MIX_TSCTL[TSCNT] register,
                                                 to indicate that a single timestamp interrupt has
                                                 been serviced.

                                                 NOTE: The MIO-MIX HW tracks upto MAX=4 outstanding
                                                 timestamped outbound packets at a time. All subsequent
                                                 ORING Entries w/SOP-TSTAMP will be stalled until
                                                 SW can service the 4 outstanding interrupts.
                                                 SW can read the MIX_TSCTL register to determine the
                                                 #pending timestamp interrupts(TSCNT) as well as the
                                                 #outstanding timestamp requests in flight(TSTOT), as
                                                 well as the #of available timestamp entries (TSAVL).

						SW NOTE: A MIX_TSTAMP read when MIX_TSCTL[TSCNT]=0, will
                                                result in a return value of all zeroes. SW should only
                                                read this register when MIX_ISR[TS]=1 (or when
                                                MIX_TSCTL[TSCNT] != 0) to retrieve the timestamp value
                                                recorded by HW. If SW reads the TSTAMP when HW has not
                                                recorded a valid timestamp, then an  all zeroes value is
                                                returned.

----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_TSCTL = MIX TimeStamp Control Register
 *
 * Description:
 *  NOTE: To read the MIX_TSCTL register, a device would issue an IOBLD64 directed at the MIO.
 *

     ==============================================================
     MIX(0..0)_TSCTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <4:0>   TSCNT    RO       0x0         0x0       # of pending MIX TimeStamp Interrupts
                                                 For o63: TSCNT must never exceed MAX=4 (implementation
                                                 depth of timestamp fifo)
 <7:5>   NS       RAZ      NS          NS        RESERVED
 <12:8>  TSTOT    RO       0x0         0x0       # of pending MIX TimeStamp Requests in-flight
                                                 For o63: TSTOT must never exceed MAX=4 (implementation
                                                 depth of timestamp fifo)
 <15:13> NS       RAZ      NS          NS        RESERVED
 <20:16> TSAVL    RO       0x4         0x4       # of MIX TimeStamp Entries Available for use
                                                 For o63: TSAVL MAX=4 (implementation
                                                 depth of timestamp fifo)
                                                 TSAVL = [IMPLEMENTATION_DEPTH=4(MAX) - TSCNT]
 <23:21> NS       RAZ      NS          NS        RESERVED

 <63:24> NS       RAZ      NS          NS        RESERVED
Notes:
SW can read the MIX_TSCTL register to determine the #pending timestamp interrupts(TSCNT)
as well as the #outstanding timestamp requests in flight(TSTOT), as well as the #of available
timestamp entries (TSAVL) in the timestamp fifo.
A write to the MIX_TSCTL register will advance the MIX*_TSTAMP fifo head ptr by 1, and
also decrements the MIX*_TSCTL[TSCNT] and MIX*_TSCTL[TSTOT] pending count(s) by 1.
For example, if SW reads MIX*_TSCTL[TSCNT]=2 (2 pending timestamp interrupts), it would immediately
issue this sequence:
     1) MIX*_TSTAMP[TSTAMP] read followed by MIX*_TSCTL write
	   [gets timestamp value/pops timestamp fifo and decrements pending count(s) by 1]
     2) MIX*_TSTAMP[TSTAMP] read followed by MIX*_TSCTL write
           [gets timestamp value/pops timestamp fifo and decrements pending count(s) by 1]

SWNOTE: A MIX_TSCTL write when MIX_TSCTL[TSCNT]=0 (ie: TimeStamp Fifo empty), then the write is ignored.
----------------------------------------------------------------------------------------------------
===

 *
 *                  MIX_BIST = MIX BIST Register
 *
 * Description:
 *  NOTE: To read the MIX_BIST register, a device would issue an IOBLD64 directed at the MIO.
 *

     ==============================================================
     MIX(0..0)_BIST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     ORFDAT    RO       0           0         Bist Results for MIX O-Ring Entry RAM
                                                 0: GOOD (or bist in progress/never run)
                                                 1: BAD
<1>     IRFDAT    RO       0           0         Bist Results for MIX I-Ring Entry RAM
                                                 0: GOOD (or bist in progress/never run)
                                                 1: BAD
<2>     IPFDAT    RO       0           0         Bist Results for MIX Inbound Packet RAM
                                                 0: GOOD (or bist in progress/never run)
                                                 1: BAD
<3>     MRQDAT    RO       0           0         Bist Results for NBR CSR RdReq RAM
                                                 0: GOOD (or bist in progress/never run)
                                                 1: BAD
<4>     MRGDAT    RO       0           0         Bist Results for AGI MRG Buffer RAM
                                                 0: GOOD (or bist in progress/never run)
                                                 1: BAD
<5>     OPFDAT    RO       0           0         Bist Results for AGO OPF Buffer RAM
                                                 0: GOOD (or bist in progress/never run)
                                                 1: BAD
<63:6>  NS        RAZ      0           0         RESERVED
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     NDF_CMD Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  NF_CMD   R/W      0x0          NS       8 Command Bytes				    |

Notes:

When SW reads this csr, RD_VAL bit in NDF_MISC csr is cleared to 0. SW must always write all 8 bytes whenever it writes
this csr. If there are fewer than 8 bytes left in the command sequence that SW wants the NAND flash controller to execute, it
must insert Idle (WAIT) commands to make up 8 bytes. SW also must ensure there is enough vacancy in the command fifo to accept these
8 bytes, by first reading the FR_BYT field in the NDF_MISC csr.

Like all NDF_... registers, 64-bit operations must be used to access this register

----------------------------------------------------------------------------------------------------
===


     ==============================================================
     NDF_MISC Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:28> NS       RAZ      NS          NS        Reserved                                           |
 <27>    MB_DIS   R/W       0x0	       NS        Disable multibit error hangs and allow boot loads  |
						 or boot dma's proceed as if no multi bit errors    |
						 occured. HW will fix single bit errors as usual    |
 <26:24> NBR_HWM  R/W      0x3	       0x3       Hi Water mark for NBR fifo or load/stores          |
 <23:18> WAIT_CNT R/W	   0x14	       NS	 WAIT input filter count			    |
 <17:7>  FR_BYT   RO       0x0         NS        Number of unfilled Command fifo bytes              |
 <6>     RD_DONE  R/W1C    0x0         0x0       This W1C bit is set to 1 by HW when it completes   |
						 command fifo read out, in response to RD_CMD	    |
 <5>     RD_VAL   RO       0x0         NS        This RO bit is set to 1 by HW when it reads next 8 |
						 bytes from Command fifo into the NDF_CMD csr       |
						 SW reads NDF_CMD csr, HW clears this bit to 0      |
 <4>     RD_CMD   R/W      0x0         0x0       When 1, HW reads out contents of the Command fifo 8|
						 bytes at a time into the NDF_CMD csr               |
 <3>     BT_DMA   R/W      0x0	       NS        When set to 1, boot time dma is enabled            |
 <2>     BT_DIS   R/W      0x0	       0x1	 When boot operation is over SW must set to 1       |
						 causes boot state mchines to sleep                 |
 <1>     EX_DIS   R/W      0x0	       0x0	 When set to 1, suspends execution of commands at   |
						 next command in the fifo.			    |
 <0>     RST_FF   R/W      0x0	       0x0	 1=reset command fifo to make it empty, 	    |
						 0=normal operation				    |

Notes:

NBR_HWM this field specifies the high water mark for the NCB outbound load/store commands receive fifo.
  the fifo size is 16 entries.

WAIT_CNT this field allows glitch filtering of the WAIT_n input to octeon, from Flash Memory. The count
  represents number of eclk cycles.

FR_BYT  this field specifies # of unfilled bytes in the command fifo. Bytes become unfilled as commands
  complete execution and exit. (fifo is 256 bytes when BT_DIS=0,  and 1536 bytes when BT_DIS=1)

RD_DONE this W1C bit is set to 1 by HW when it reads the last 8 bytes out of the command fifo,
  in response to RD_CMD bit being set to 1 by SW.

RD_VAL  this read only bit is set to 1 by HW when it reads next 8 bytes from command fifo in response
  to RD_CMD bit being set to 1. A SW read of NDF_CMD csr clears this bit to 0.

RD_CMD  this R/W bit starts read out from the command fifo, 8 bytes at a time. SW should first read the
  RD_VAL bit in  this csr to see if next 8 bytes from the command fifo are available in the
  NDF_CMD csr. All command fifo reads start and end on an 8 byte boundary. A RD_CMD in the
  middle of command execution will cause the execution to freeze until RD_DONE is set to 1. RD_CMD
  bit will be cleared on any NDF_CMD csr write by SW.

BT_DMA  this indicates to the NAND flash boot control state machine that boot dma read can begin.
  SW should set this bit to 1 after SW has loaded the command fifo. HW sets the bit to 0
  when boot dma command execution is complete. If chip enable 0 is not nand flash, this bit is
  permanently 1'b0 with SW writes ignored. Whenever BT_DIS=1, this bit will be 0.

BT_DIS  this R/W bit indicates to NAND flash boot control state machine that boot operation has ended.
  whenever this bit changes from 0 to a 1, the command fifo is emptied as a side effect. This bit must
  never be set when booting from nand flash and region zero is enabled.

EX_DIS  When 1, command execution stops after completing execution of all commands currently in the command
  fifo. Once command execution has stopped, and then new commands are loaded into the command fifo, execution
  will not resume as long as this bit is 1. When this bit is 0, command execution will resume if command fifo
  is not empty. EX_DIS should be set to 1, during boot i.e. when BT_DIS = 0.

RST_FF  reset command fifo to make it empty, any command inflight is not aborted before reseting
  the fifo. The fifo comes up empty at the end of power on reset.

Like all NDF_... registers, 64-bit operations must be used to access this register

----------------------------------------------------------------------------------------------------
===


     ==============================================================
     NDF_ECC_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved                                           |
 <31:8>  XOR_ECC  RO	   0x0	       NS        result of XOR of ecc read bytes and ecc genarated  |
						 bytes. The value pertains to the last 1 bit ecc err|
 <7:0>   ECC_ERR  RO       0x0         NS        Count = # of 1 bit errors fixed during boot   	    |
						 This count saturates instead of wrapping around.   |
Notes:
XOR_ECC[31:8] = {ecc_gen_byt258, ecc_gen_byt257, ecc_gen_byt256} xor {ecc_258, ecc_257, ecc_256}
	ecc_258, ecc_257 and ecc_256 are bytes stored in Nand Flash and read out during boot
	ecc_gen_byt258, ecc_gen_byt257, ecc_gen_byt256 are generated from data read out from Nand Flash

Like all NDF_... registers, 64-bit operations must be used to access this register

----------------------------------------------------------------------------------------------------
===



     ==============================================================
     NDF_BT_PG_INFO Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:11> NS       RAZ      NS          NS        Reserved                                           |
 <10:7>  T_MULT   R/W      0x9         NS        Boot time TIM_MULT[3:0] field of SET__TM_PAR[63:0] |
						 command                                            |
 <6:3>   ADR_CYC  R/W      0x8         NS        # of column address cycles                         |
 <2:0>   SIZE     R/W      0x0         NS        bytes per page in the nand device                  |

Notes:

NDF_BT_PG_INFO provides page size and number of column plus row address cycles information. SW writes to this CSR
during boot from Nand Flash. Additionally SW also writes the multiplier value for timing parameters. This value is
used during boot, in the SET_TM_PARAM command. This information is used only by the boot load state machine and is
otherwise a don't care, once boot is disabled. Also, boot dma's do not use this value.

Bytes per Nand Flash page = 2 ** (SIZE + 1) times 256 bytes.
512, 1k, 2k, 4k, 8k, 16k, 32k and 64k are legal bytes per page values

Legal values for ADR_CYC field are 3 through 8. SW CSR writes with a value less than 3 will write a 3 to this
field, and a SW CSR write with a value greater than 8, will write an 8 to this field.

Like all NDF_... registers, 64-bit operations must be used to access this register

----------------------------------------------------------------------------------------------------
===



     ==============================================================
     NDF_INT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved                                           |
 <6>     OVRF     R/W1C    0x0         NS        NDF_CMD write when fifo is full. Generally a       |
						 fatal error.                                       |
 <5>     ECC_MULT R/W1C    0x0         NS        Multi bit ECC error detected during boot           |
 <4>     ECC_1BIT R/W1C    0x0         NS        Single bit ECC error detected and fixed during boot|
 <3>     SM_BAD   R/W1C    0x0         NS        One of the state machines in a bad state           |
 <2>     WDOG     R/W1C    0x0         NS        Watch Dog timer expired during command execution   |
 <1>     FULL     R/W1C    0x0         NS        Command fifo is full       			    |
 <0>     EMPTY    R/W1C    0x0         NS        Command fifo is empty       			    |

Notes:

FULL status is updated when the command fifo becomes full as a result of SW writing a new command to it.

EMPTY status is updated when the command fifo becomes empty as a result of command execution unit fetching the
last instruction out of the command fifo.

Like all NDF_... registers, 64-bit operations must be used to access this register

----------------------------------------------------------------------------------------------------
===



     ==============================================================
     NDF_INT_EN Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved                                           |
 <6>     OVRF     R/W      0x0         NS        Wrote to a full command fifo                       |
 <5>     ECC_MULT R/W      0x0         NS        Multi bit ECC error detected during boot           |
 <4>     ECC_1BIT R/W      0x0         NS        Single bit ECC error detected and fixed during boot|
 <3>     SM_BAD   R/W      0x0         NS        One of the state machines in a bad state           |
 <2>     WDOG     R/W      0x0         NS        Watch Dog timer expired during command execution   |
 <1>     FULL     R/W      0x0         NS        Command fifo is full       			    |
 <0>     EMPTY    R/W      0x0         NS        Command fifo is empty       			    |

Notes:

Like all NDF_... registers, 64-bit operations must be used to access this register

----------------------------------------------------------------------------------------------------
===



     ==============================================================
     NDF_DRBELL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |
 <7:0>   CNT      R/W      0x0         NS        Doorbell count register, 2's complement 8 bit value|

Notes:

SW csr writes will increment CNT by the signed 8 bit value being written. SW csr reads return the current CNT value.
HW will also modify the value of the CNT field. Everytime HW executes a BUS_ACQ[15:0] command, to arbitrate and win the
flash bus, it decrements the CNT field by 1. If the CNT field is already 0 or negative, HW command execution unit will
stall when it fetches the new BUS_ACQ[15:0] command, from the command fifo. Only when the SW writes to this CSR with a
non-zero data value, can the execution unit come out of the stalled condition, and resume execution.

The intended use of this doorbell CSR is to control execution of the Nand Flash commands. The NDF execution unit
has to arbitrate for the flash bus, before it can enable a Nand Flash device connected to the Octeon chip, by
asserting the device's chip enable. Therefore SW should first load the command fifo, with a full sequence of
commands to perform a Nand Flash device task. This command sequence will start with a bus acquire command and
the last command in the sequence will be a bus release command. The execution unit will start execution of
the sequence only if the [CNT] field is non-zero when it fetches the bus acquire command, which is the first
command in this sequence. SW can also, load multiple such sequences, each starting with a chip enable command
and ending with a chip disable command, and then write a non-zero data value to this csr to increment the
CNT field by the number of the command sequences, loaded to the command fifo.

Like all NDF_... registers, 64-bit operations must be used to access this register

----------------------------------------------------------------------------------------------------
===




     ==============================================================
     NDF_ST_REG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS        RAZ      NS         NS        Reserved                                           |
 <15>    EXE_IDLE  RO	   0x1	       NS	 Command Execution status 1=IDLE, 0=Busy            |
						 1 means execution of command sequence is complete  |
						 and command fifo is empty                          |
 <14:11> EXE_SM	   RO	   0x0	       NS	 Command Execution State machine states             |
 <10:7>  BT_SM	   RO	   0x0	       NS	 Boot load and Boot dma State machine states        |
 <6>	 RD_FF_BAD RO	   0x0	       NS	 CMD fifo read back State machine in bad state      |
 <5:4>	 RD_FF	   RO	   0x0	       NS	 CMD fifo read back State machine states            |
 <3>	 MAIN_BAD  RO	   0x0	       NS	 Main State machine in bad state                    |
 <2:0>	 MAIN_SM   RO	   0x0	       NS	 Main State machine states                          |
Notes:
 This CSR aggregates all state machines used in nand flash controller for debug.
Like all NDF_... registers, 64-bit operations must be used to access this register

----------------------------------------------------------------------------------------------------
===



 *
 * PCS_MR_CONTROL_REG = Control Register0
 *
 *

     ==============================================================
     PCS(0..4)_MR(0..3)_CONTROL_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15>    RESET    R/W      0x0         0         1=SW Reset, the bit will return to 0 after pcs has |
						 been reset. Takes 32 eclk cycles to reset pcs      |
 <14>    LOOPBCK1 R/W      0x0         0         0=normal operation, 1=loopback. The loopback mode  |
						 will return(loopback) tx data from GMII tx back to |
						 GMII rx interface. The loopback happens in the pcs |
						 module. Auto Negotiation will be disabled even if  |
						 the AN_EN bit is set, during loopback              |
 <13>    SPDLSB   R/W      0x0         0         See bit 6 description				    |
 <12>    AN_EN    R/W      0x0         0         1=AN Enable, 0=AN Disable                          |
 <11>    PWR_DN   R/W      0x1         0         1=Power Down(HW reset), 0=Normal operation         |
 <10>    NS       RAZ      NS          NS        Reserved				            |
 <9>     RST_AN   R/W      0x0         0         If bit 12 is set and bit 3 of status reg is 1      |
						 Auto Negotiation begins. Else,SW writes are ignored|
						 and this bit remians at 0. This bit clears itself  |
						 to 0, when AN starts.                              |
 <8>     DUP      R/W      0x1         1         1=full duplex, 0=half duplex; effective only if AN |
						 disabled. If status register bits [15:9] and and   |
                                                 extended status reg bits [15:12] allow only one    |
						 duplex mode|, this bit will correspond to that     |
						 value and any attempt to write will be ignored.    |
 <7>     COLTST   R/W      0x0         0         1=enable COL signal test, 0=disable test           |
						 During COL test, the COL signal will reflect the   |
                                                 GMII TX_EN signal with less than 16BT delay        |
 <6>	 SPDMSB   R/W      0x1         0x1       {<6>, <13>}Link Speed effective only if AN disabled|
						   0    0  10Mb/s                                   |
						   0    1  100Mb/s                                  |
						   1    0  1000Mb/s                                 |
						   1    1  NS                                       |
 <5>     UNI      R/W      0x0         0x0        Unidirectional (Std 802.3-2005, Clause 66.2)      |
						  This bit will override the AN_EN bit and disable  |
						  auto-negotiation variable mr_an_enable, when set  |
						  Used in both 1000Base-X and SGMII modes           |
 <4:0>   NS       RAZ      NS          NS         Reserved                                          |
----------------------------------------------------------------------------------------------------
===
 * NOTE:
 *Whenever AN_EN bit[12] is set, Auto negotiation is allowed to happen. The results
 *of the auto negotiation process set the fields in the AN_RESULTS reg. When AN_EN is not set,
 *AN_RESULTS reg is don't care. The effective SPD, DUP etc.. get their values
 *from the pcs_mr_ctrl reg.



 *
 * PCS_MR_STATUS_REG = Status Register1
 *
 *

     ==============================================================
     PCS(0..4)_MR(0..3)_STATUS_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15>    HUN_T4   RO       0x0         0         1 means 100Base-T4 capable                         |
 <14>    HUN_XFD  RO       0x0         0         1 means 100Base-X Full Duplex                      |
 <13>	 HUN_XHD  RO       0x0         0         1 means 100Base-X Half Duplex                      |
 <12>    TEN_FD   RO       0x0         0         1 means 10Mb/s Full Duplex                         |
 <11>    TEN_HD   RO       0x0         0         1 means 10Mb/s Half Duplex                         |
 <10>    HUN_T2FD RO       0x0         0         1 means 100Base-T2 Full Duplex                     |
 <9>     HUN_T2HD RO       0x0         0         1 means 100Base-T2 Half Duplex                     |
 <8>     EXT_ST   RO       0x1         1         1 means extended status info in reg15              |
 <7>     NS       RAZ      0x0         0         Reserved                                           |
 <6>     PRB_SUP  RO       0x1         1         1 means able to work without preamble bytes at the |
						 beginning of frames. 0 means not able to accept    |
						 frames without preamble bytes preceding them.      |
 <5>     AN_CPT   RO       0x0         0         1 means Auto Negotiation is complete and the       |
						 contents of the an_results_reg are valid.          |
 <4>     RM_FLT   RO       0x0         0         Set to 1 when remote flt condition occurs. This bit|
						 implements a latching Hi behavior. It is cleared by|
						 SW read of this reg or when reset bit [15] in      |
						 Control Reg is asserted.                           |
						 See an adv reg[13:12] for flt conditions           |
 <3>     AN_ABIL  RO       0x1         1         1 means Auto Negotiation capable                   |
 <2>     LNK_ST   RO       0x0         1         1=link up, 0=link down. Set during AN process      |
						 Set whenever XMIT=DATA. Latching Lo behavior when  |
						 link goes down. Link down value of the bit stays   |
						 low until SW reads the reg.                        |
 <1>     NS       RAZ      0x0         0         Reserved				            |
 <0>     EXTND    RO       0x0         0         Always 0, no extended capability regs present      |
----------------------------------------------------------------------------------------------------
===
* Bits [15:9] in the Status Register indicate ability to operate as per those signalling specification,
* when misc ctl reg MAC_PHY bit is set to MAC mode. Bits [15:9] will all, always read 1'b0, indicating
* that the chip cannot operate in the corresponding modes.
*
* Bit [4] RM_FLT is a don't care when the selected mode is SGMII.
*
*


*
* PCS_AN_ADV_REG = AN Advertisement Register4
*
*

     ==============================================================
     PCS(0..4)_AN(0..3)_ADV_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15>    NP       RO       0x0         0         Always 0, no next page capability supported        |
 <14>    NS       RAZ      0x0         0         Reserved		                            |
 <13:12> REM_FLT  R/W      0x0         0x0       {<13>,<12>}                                        |
						   0    0  Link OK  XMIT=DATA                       |
						   0    1  Link failure (loss of sync, XMIT!= DATA) |
						   1    0  local device Offline                     |
						   1    1  AN Error failure to complete AN          |
							   AN Error is set if resolution function   |
							   precludes operation with link partner    |
 <11:9>  NS       RAZ      0x0         0x0       reserved                                           |
 <8:7>   PAUSE    R/W      0x0         0x0       {<8>, <7>} Pause frame flow capability across link |
							    Exchanged during Auto Negotiation       |
						   0    0  No Pause                                 |
						   0    1  Symmetric pause                          |
						   1    0  Asymmetric Pause                         |
						   1    1  Both symm and asymm pause to local device|
 <6>     HFD      R/W      0x1         1         1 means local device Half Duplex capable           |
 <5>     FD       R/W      0x1         1         1 means local device Full Duplex capable           |
 <4:0>   NS       RAZ      0x0         0         reserved                                           |
----------------------------------------------------------------------------------------------------
===




*
* PCS_AN_LP_ABIL_REG = AN link Partner Ability Register5
* as per IEEE802.3 Clause 37
*

     ==============================================================
     PCS(0..4)_AN(0..3)_LP_ABIL_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |
 <15>    NP       RO       0x0         0         1=lp next page capable, 0=lp not next page capable |
 <14>    ACK      RO       0x0         NS        1=Acknowledgement received                         |
 <13:12> REM_FLT  RO       0x0         0         {<13>,<12>} Link Partner's link status             |
						   0    0  Link OK                                  |
						   0    1  Offline                                  |
						   1    0  Link failure                             |
						   1    1  AN Error                                 |
 <11:9>  NS       RAZ      0x0         0         Reserved                                           |
 <8:7>   PAUSE    RO       0x0         0         {<8>, <7>} Link Partner Pause setting              |
						   0    0  No Pause                                 |
						   0    1  Symmetric pause                          |
						   1    0  Asymmetric Pause                         |
						   1    1  Both symm and asymm pause to local device|
 <6>     HFD      RO       0x0         0         1 means link partner Half Duplex capable           |
 <5>     FD       RO       0x0         0         1 means link partner Full Duplex capable           |
 <4:0>   NS       RAZ      0x0         0         reserved                                           |
----------------------------------------------------------------------------------------------------
===




*
* PCS_AN_RESULTS_REG = AN Results Register
*
*

     ==============================================================
     PCS(0..4)_AN(0..3)_RESULTS_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved                                           |
 <6:5>   PAUSE    RO       0x00        0x00      {<6>, <5>} PAUSE Selection (Don't care for SGMII)  |
						   0    0  Disable Pause, TX and RX                 |
						   0    1  Enable pause frames RX only              |
						   1    0  Enable Pause frames TX only              |
						   1    1  Enable pause frames TX and RX            |
 <4:3>   SPD      RO       0x0         0x0      {<4>, <3>} Link Speed Selection                     |
						   0    0  10Mb/s                                   |
						   0    1  100Mb/s                                  |
						   1    0  1000Mb/s                                 |
						   1    1  NS                                       |
 <2>     AN_CPT   RO       0x0         1         1=AN Completed, 0=AN not completed or failed       |
 <1>     DUP      RO       0x0         0         1=Full Duplex, 0=Half Duplex                       |
 <0>     LINK_OK  RO       0x0         0         1=Link up(OK), 0=Link down                         |
----------------------------------------------------------------------------------------------------
===
 * NOTE:
 * an_results_reg is don't care when AN_OVRD is set to 1. If AN_OVRD=0 and AN_CPT=1
 * the an_results_reg is valid.
 *



*
* PCS_AN_EXT_ST_REG = AN Extended Status Register15
* as per IEEE802.3 Clause 22
*

     ==============================================================
     PCS(0..4)_AN(0..3)_EXT_ST_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |
 <15>    THOU_XFD RO       0x1         1         1 means PHY is 1000BASE-X Full Dup capable         |
 <14>    THOU_XHD RO       0x1         1         1 means PHY is 1000BASE-X Half Dup capable         |
 <13>    THOU_TFD RO       0x0         0         1 means PHY is 1000BASE-T Full Dup capable         |
 <12>    THOU_THD RO       0x0         0         1 means PHY is 1000BASE-T Half Dup capable         |
 <11:0>  NS       RO       0x0         0         Reserved                                           |
----------------------------------------------------------------------------------------------------
===




*
* PCS_LINK_TIMER_COUNT_REG = 1.6ms nominal link timer register
*

     ==============================================================
     PCS(0..4)_LINK(0..3)_TIMER_COUNT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |
 <15:0>  COUNT    R/W      0x446       NS        (core clock period times 1024) times "COUNT" should|
						 be 1.6ms(SGMII)/10ms(otherwise) which is the link  |
						 timer used in auto negotiation.                    |
						 Reset assums a 700MHz eclk for 1.6ms link timer    |
----------------------------------------------------------------------------------------------------
===



*
* PCS_POLARITY_REG = TX_RX polarity reg
*

     ==============================================================
     PCS(0..4)_TX_RX(0..3)_POLARITY_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        Reserved                                           |
 <3>     RXOVRD   R/W      0x0	       0 	 When 0, <2> determines polarity                    |
						 when 1, <1> determines polarity                    |
 <2>     AUTORXPL RO       0x0         0         Auto RX polarity detected. 1=inverted, 0=normal    |
						 This bit always represents the correct rx polarity |
						 setting needed for successful rx path operartion,  |
						 once a successful code group sync is obtained      |
 <1>     RXPLRT   R/W      0x0         0         1 is inverted polarity, 0 is normal polarity       |
 <0>     TXPLRT   R/W      0x0         0         1 is inverted polarity, 0 is normal polarity       |
----------------------------------------------------------------------------------------------------
===
*
*Note:
*r_tx_rx_polarity_reg bit [2] will show correct polarity needed on the link receive path after code grp synchronization is achieved.
*




*
* PCS_RX_SYNC_REG = Code Group synchronization reg
*

     ==============================================================
     PCS(0..4)_RX(0..3)_SYNC_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved                                           |
 <1>     SYNC     RO       0x0         0         1 means code group synchronization achieved        |
 <0>     BIT_LOCK RO       0x0         0         1 means bit lock achieved                          |
----------------------------------------------------------------------------------------------------
===



*
* PCS_RX_STATES_REG = RX State Machines states register
*

     ==============================================================
     PCS(0..4)_RX(0..3)_STATES_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |
 <15>    RX_BAD   RO       0x0         0         Receive state machine in an illegal state          |
 <14:10> RX_ST    RO       0x0         0         Receive state machine state                        |
 <9>     SYNC_BAD RO       0x0         0         Receive synchronization SM in an illegal state     |
 <8:5>   SYNC     RO       0x0         0         Receive synchronization SM state                   |
 <4>     AN_BAD   RO       0x0         0         Auto Negotiation state machine in an illegal state |
 <3:0>   AN_ST    RO       0x0         0         Auto Negotiation state machine state               |
----------------------------------------------------------------------------------------------------
===



*
* PCS_TX_STATES_REG = TX State Machines states register
*

     ==============================================================
     PCS(0..4)_TX(0..3)_STATES_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved                                           |
 <6:5>   XMIT     RO       0x00        NS    	 0=undefined, 1=config, 2=idle, 3=data              |
 <4>     TX_BAD   RO       0x0         0         Xmit state machine in a bad state                  |
 <3:0>   ORD_ST   RO       0x0         0         Xmit ordered set state machine state               |
----------------------------------------------------------------------------------------------------
===



*
* SGMII AN Advertisement Register (sent out as tx_config_reg)
*

     ==============================================================
     PCS(0..4)_SGM(0..3)_AN_ADV_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |
 <15>    LINK     R/W      0x0         1         Link status 1 Link Up, 0 Link Down                 |
 <14>    ACK      RO       0x0         0         Auto negotiation ack                               |
 <13>    NS       RAZ      0x0         NS        Reserved for future use                            |
 <12>    DUP      R/W      0x1         1         Duplex mode 1=full duplex, 0=half duplex           |
 <11:10> SPEED    R/W      0x2         0x2       Link Speed                                         |
						   0    0  10Mb/s                                   |
						   0    1  100Mb/s                                  |
						   1    0  1000Mb/s                                 |
						   1    1  NS                                       |
 <9:1>   NS       RAZ      0x0         NS        Reserved for future use                            |
 <0>     ONE      RO       0x1         1         Always set to match tx_config_reg<0>               |
----------------------------------------------------------------------------------------------------
===

* NOTE: The SGMII AN Advertisement Register above will be sent during Auto Negotiation if the MAC_PHY mode bit in misc_ctl_reg
* is set (1=PHY mode). If the bit is not set (0=MAC mode), the tx_config_reg[14] becomes ACK bit and [0] is always 1.
* All other bits in tx_config_reg sent will be 0. The PHY dictates the Auto Negotiation results.





*
* SGMII LP Advertisement Register (received as rx_config_reg)
*

     ==============================================================
     PCS(0..4)_SGM(0..3)_LP_ADV_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |
 <15>    LINK     RO       0x0         1         Link status 1 Link Up, 0 Link Down                 |
 <14>    NS       RO       0x0         NS        Reserved for auto negotiation ack                  |
 <13>    NS       RAZ      0x0         NS        Reserved for future use                            |
 <12>    DUP      RO       0x0         1         Duplex mode 1=full duplex, 0=half duplex           |
 <11:10> SPEED    RO       0x0         2         Link Speed                                         |
						   0    0  10Mb/s                                   |
						   0    1  100Mb/s                                  |
						   1    0  1000Mb/s                                 |
						   1    1  NS                                       |
 <9:1>   NS       RAZ      0x0         NS        Reserved for future use                            |
 <0>     ONE      RO       0x1         1         Always set to match tx_config_reg<0>               |
----------------------------------------------------------------------------------------------------
===



*
* SGMII Misc Control Register
*

     ==============================================================
     PCS(0..4)_MISC(0..3)_CTL_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13> NS       RAZ      NS          NS        Reserved                                           |
 <12>    SGMII    RO       NS          NS        1=SGMII or 1000Base-X mode selected,               |
						 0=XAUI or PCIE mode selected                       |
						 This bit represents pi_qlm1/3_cfg[1:0] pin status  |
 <11>    GMXENO   R/W      0x0         0x0       GMX Enable override. When set to 1, forces GMX to  |
						 appear disabled. The enable/disable status of GMX  |
						 is checked only at SOP of every packet.            |
 <10>    LOOPBCK2 R/W      0x0         0         Sets external loopback mode to return rx data back |
						 out via tx data path. 0=no loopback, 1=loopback    |
 <9>     MAC_PHY  R/W      0x0         0         0=MAC, 1=PHY decides the tx_config_reg value to be |
						 sent during auto negotiation.                      |
						 See SGMII spec ENG-46158 from CISCO                |
 <8>     MODE     R/W      0x0         0         0=SGMII or 1= 1000 Base X                          |
 <7>     AN_OVRD  R/W      0x0         0         0=disable, 1= enable over ride AN results          |
						 Auto negotiation is allowed to happen but the	    |
						 results are ignored when set. Duplex and Link speed|
						 values are set from the pcs_mr_ctrl reg                |
 <6:0>   SAMP_PT  R/W      0x1         NS        Byte# in elongated frames for 10/100Mb/s operation |
						 for data sampling on RX side in PCS.               |
						 Recommended values are 0x5 for 100Mb/s operation   |
						 and 0x32 for 10Mb/s operation.                     |
						 For 10Mb/s operaton this field should be set to a  |
						 value less than 99 and greater than 0. If set out  |
						 of this range a value of 50 will be used for actual|
						 sampling internally without affecting the CSR field|
						 For 100Mb/s operation this field should be set to a|
						 value less than 9 and greater than 0. If set out of|
						 this range a value of 5 will be used for actual    |
						 sampling internally without affecting the CSR field|
----------------------------------------------------------------------------------------------------
===
*
* SGMII bit [12] is really a misnomer, it is a decode  of pi_qlm_cfg pins to indicate SGMII or 1000Base-X modes.
*

* Note: MODE bit
* When MODE=1,  1000Base-X mode is selected. Auto negotiation will follow IEEE 802.3 clause 37.
* When MODE=0,  SGMII mode is selected and the following note will apply.

* Repeat note from SGM_AN_ADV register
* NOTE: The SGMII AN Advertisement Register above will be sent during Auto Negotiation if the MAC_PHY mode bit in misc_ctl_reg
* is set (1=PHY mode). If the bit is not set (0=MAC mode), the tx_config_reg[14] becomes ACK bit and [0] is always 1.
* All other bits in tx_config_reg sent will be 0. The PHY dictates the Auto Negotiation results.



*
* PCS Interrupt Register
*

     ==============================================================
     PCS(0..4)_INT(0..3)_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13> NS       RAZ      NS          NS        Reserved                                           |
 <12>	 DBG_SYNC R/W1C    0x0	       0	 Code Group sync failure debug help		    |
 <11>    DUP      R/W1C    0x0         0         Set whenever Duplex mode changes on the link       |
 <10>    SYNC_BAD R/W1C    0x0         0         Set by HW whenever rx sync st machine reaches a bad|
						 state. Should never be set during normal operation |
 <9>     AN_BAD   R/W1C    0x0         0         Set by HW whenever AN st machine reaches a bad     |
						 state. Should never be set during normal operation |
 <8>     RXLOCK   R/W1C    0x0         0         Set by HW whenever code group Sync or bit lock     |
						 failure occurs                                     |
						 Cannot fire in loopback1 mode                      |
 <7>     RXBAD    R/W1C    0x0         0         Set by HW whenever rx st machine reaches a  bad    |
						 state. Should never be set during normal operation |
 <6>     RXERR    R/W1C    0x0         0         Set whenever RX receives a code group error in     |
						 10 bit to 8 bit decode logic                       |
						 Cannot fire in loopback1 mode                      |
 <5>     TXBAD    R/W1C    0x0         0         Set by HW whenever tx st machine reaches a bad     |
						 state. Should never be set during normal operation |
 <4>     TXFIFO   R/W1C    0x0         0         Set whenever HW detects a TX fifo overflow         |
	    					 condition		                            |
 <3>     TXFIFU   R/W1C    0x0         0         Set whenever HW detects a TX fifo underflowflow    |
	    					 condition                                          |
 <2>     AN_ERR   R/W1C    0x0         0         AN Error, AN resolution function failed            |
 <1>     XMIT     R/W1C    0x0         0         Set whenever HW detects a change in the XMIT       |
						 variable. XMIT variable states are IDLE, CONFIG and|
						 DATA						    |
 <0>     LNKSPD   R/W1C    0x0         0         Set by HW whenever Link Speed has changed          |
----------------------------------------------------------------------------------------------------
===

*
*NOTE: RXERR and TXERR conditions to be discussed with Dan before finalising
*      DBG_SYNC interrupt fires when code group synchronization state machine makes a transition from
*      SYNC_ACQUIRED_1 state to SYNC_ACQUIRED_2 state(See IEEE 802.3-2005 figure 37-9). It is an indication that a bad code group
*      was received after code group synchronizaton was achieved. This interrupt should be disabled during normal link operation.
*      Use it as a debug help feature only.
*


*
* PCS Interrupt Enable Register
*

     ==============================================================
     PCS(0..4)_INT(0..3)_EN_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13> NS           RAZ      NS          NS        Reserved                                              |
 <12>	 DBG_SYNC_EN  R/W      0x0	   0x0	     Code Group sync failure debug help		           |
 <11>    DUP          R/W      0x0         0x1       Enable duplex mode changed interrupt                  |
 <10>    SYNC_BAD_EN  R/W      0x0         0x1       Enable rx sync st machine in bad state interrupt      |
 <9>     AN_BAD_EN    R/W      0x0         0x1       Enable AN state machine bad state interrupt           |
 <8>     RXLOCK_EN    R/W      0x0         0x1	     Enable rx code group sync/bit lock failure interrupt  |
 <7>     RXBAD_EN     R/W      0x0         0x1       Enable rx state machine in bad state interrupt        |
 <6>     RXERR_EN     R/W      0x0         0x1       Enable RX error condition interrupt                   |
 <5>     TXBAD_EN     R/W      0x0         0x1       Enable tx state machine in bad state interrupt        |
 <4>     TXFIFO_EN    R/W      0x0         0x1       Enable tx fifo overflow condition interrupt           |
 <3>     TXFIFU_EN    R/W      0x0         0x1       Enable tx fifo underflow condition intrrupt           |
 <2>     AN_ERR_EN    R/W      0x0         0x1       Enable AN Error condition interrupt                   |
 <1>     XMIT_EN      R/W      0x0         0x1       Enable XMIT variable state change interrupt           |
 <0>     LNKSPD_EN    R/W      0x0         0x1       Enable Link Speed has changed interrupt               |
----------------------------------------------------------------------------------------------------
===



*
* PCS Logic Analyzer Register
*

     ==============================================================
     PCS(0..4)_LOG_ANL(0..3)_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS           RAZ      NS          NS        Reserved                                              |
 <3>     LAFIFOVFL    R/W1C    0x0         0x0       1=logic analyser fif overflowed during packetization  |
						     Write 1 to clear this bit                             |
 <2>     LA_EN        R/W      0x0         0x0       1= Logic Analyzer enabled, 0=Logic Analyzer disabled  |
 <1:0>   PKT_SZ       R/W      0x0         0x0       {<1>, <0>}  Logic Analyzer Packet Size                |
						      0    0   Packet size 1k bytes    			   |
						      0    1   Packet size 4k bytes    			   |
						      1    0   Packet size 8k bytes    		           |
						      1    1   Packet size 16k bytes    		   |
----------------------------------------------------------------------------------------------------
===

*NOTE: Logic Analyzer is enabled with LA_EN for the specified PCS lane only. PKT_SZ is effective only when LA_EN=1
*For normal operation(sgmii or 1000Base-X), this bit must be 0.
*See pcsx.csr for xaui logic analyzer mode.
*For full description see document at .../rtl/pcs/readme_logic_analyzer.txt
*





*
* PCSX regs follow IEEE Std 802.3-2005, Section: 45.2.3
*


 *
 * PCSX_CONTROL1_REG = Control Register1
 *
 *

     ==============================================================
     PCSX(0..4)_CONTROL1_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15>    RESET    R/W      0x1         0         1=SW PCSX Reset, the bit will return to 0 after pcs|
						 has been reset. Takes 32 eclk cycles to reset pcs  |
						 0=Normal operation                                 |
 <14>    LOOPBCK1 R/W      0x0         0         0=normal operation, 1=internal loopback mode       |
						 xgmii tx data received from gmx tx port is returned|
						 back into gmx, xgmii rx port.                      |
 <13>    SPDSEL1  RO       0x1         1         See bit 6 description				    |
 <12>    NS       RAZ      NS          NS        Reserved				            |
 <11>    LO_PWR   R/W      0x1         0         1=Power Down(HW reset), 0=Normal operation         |
 <10:7>  NS       RAZ      NS          NS        Reserved				            |
 <6>	 SPDSEL0  RO       0x1         0x1       SPDSEL1 and SPDSEL0 are always at 1'b1. Write has  |
						 no effect.                                         |
 						 {<6>, <13>}Link Speed selection                    |
						   1    1   Bits 5:2 select speed                   |
 <5:2>   SPD      RO       0x0         0x0       Always select 10Gb/s, writes have no effect        |
 <1:0>   NS       RAZ      NS          NS        Reserved                                           |
----------------------------------------------------------------------------------------------------
===



 *
 * PCSX_STATUS1_REG = Status Register1
 *
 *

     ==============================================================
     PCSX(0..4)_STATUS1_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS        RAZ      NS          NS        Reserved				            |
 <7>     FLT       RO       0x0         0x0       1=Fault condition detected, 0=No fault condition  |
	 					  This bit is a logical OR of Status2 reg bits 11,10|
 <6:3>	 NS        RAZ      NS          NS        Reserved				            |
 <2>     RCV_LNK   RO       0x0         0x1       1=Receive Link up, 0=Receive Link down            |
						  Latching Low version of r_10gbx_status_reg[12],   |
						  Link down status continues until SW read.         |
 <1>     LPABLE    RO       0x1         0x1       Always set to 1 for Low Power ablility indication |
 <0>     NS        RAZ      NS          NS        Reserved                                          |
----------------------------------------------------------------------------------------------------
===




 *
 * PCSX_SPD_ABIL_REG = Speed ability register
 *
 *

     ==============================================================
     PCSX(0..4)_SPD_ABIL_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2> NS        RAZ      NS          NS        Reserved				            |
 <1>    TENPASST  RO       0x0         0x0       Always 0, no 10PASS-TS/2BASE-TL capability support |
 <0>    TENGB     RO       0x1         0x1       Always 1, 10Gb/s supported                         |
----------------------------------------------------------------------------------------------------
===



 *
 * PCSX_CONTROL2_REG = Control Register2
 *
 *

     ==============================================================
     PCSX(0..4)_CONTROL2_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS        RAZ      NS          NS       Reserved				            |
 <1:0>   TYPE      RO       0x1         0x1      Always 2'b01, 10GBASE-X only supported             |
----------------------------------------------------------------------------------------------------
===



 *
 * PCSX_STATUS2_REG = Status Register2
 *
 *

     ==============================================================
     PCSX(0..4)_STATUS2_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS        RAZ      NS          NS       Reserved				            |
 <15:14> DEV       RO       0x2         0x2      Always at 2'b10, means a Device present at the addr|
 <13:12> NS        RAZ      NS          NS       Reserved				            |
 <11>    XMTFLT    RC       0x0         0x0      0=No xmit fault, 1=xmit fault. Implements latching |
						 High function until SW read.                       |
 <10>    RCVFLT    RC       0x0         0x0      0=No rcv fault, 1=rcv fault. Implements latching   |
						 High function until SW read                        |
 <9:3>	 NS        RAZ      NS          NS       Reserved				            |
 <2>     TENGB_W   RO       0x0         0x0      Always 0, no 10GBASE-W capability                  |
 <1>     TENGB_X   RO       0x1         0x1      Always 1, 10GBASE-X capable                        |
 <0>     TENGB_R   RO       0x0         0x0      Always 0, no 10GBASE-R capability                  |
----------------------------------------------------------------------------------------------------
===



 *
 * PCSX_10GBX_STATUS_REG = 10gbx_status_reg
 *
 *

     ==============================================================
     PCSX(0..4)_10GBX_STATUS_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13> NS        RAZ      NS          NS       Reserved				            |
 <12>    ALIGND    RO       0x0         0x1      1=Lane alignment achieved, 0=Lanes not aligned     |
 <11>    PATTST    RO       0x0         0x0      Always at 0, no pattern testing capability         |
 <10:4>	 NS        RAZ      NS          NS       Reserved				            |
 <3>     L3SYNC    RO       0x0         0x1      1=Rcv lane 3 code grp synchronized, 0=not sync'ed  |
 <2>     L2SYNC    RO       0x0         0x1      1=Rcv lane 2 code grp synchronized, 0=not sync'ed  |
 <1>     L1SYNC    RO       0x0         0x1      1=Rcv lane 1 code grp synchronized, 0=not sync'ed  |
 <0>     L0SYNC    RO       0x0         0x1      1=Rcv lane 0 code grp synchronized, 0=not sync'ed  |
----------------------------------------------------------------------------------------------------
===




 *
 * PCSX_TX_RX_STATES_REG = Transmit Receive States Register
 *
 *

     ==============================================================
     PCSX(0..4)_TX_RX_STATES_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:14> NS        RAZ      NS          NS       Reserved				            |
 <13>	 TERM_ERR  R/W1C    0x0		0x0	 1=Check end function detected error in packet      |
						   terminate ||T|| column or the one after it       |
 <12>    SYN3BAD   RO       0x0         0x0      1=lane 3 code grp sync state machine in bad state  |
 <11>    SYN2BAD   RO       0x0         0x0      1=lane 2 code grp sync state machine in bad state  |
 <10>    SYN1BAD   RO       0x0         0x0      1=lane 1 code grp sync state machine in bad state  |
 <9>     SYN0BAD   RO       0x0         0x0      1=lane 0 code grp sync state machine in bad state  |
 <8>     RXBAD     RO       0x0         0x0      1=Rcv state machine in a bad state, HW malfunction |
 <7:5>   ALGN_ST   RO       0x0         NS       Lane alignment state machine state state           |
 <4:3>	 RX_ST     RO       0x0         NS       Receive state machine state state                  |
 <2:0>   TX_ST     RO       0x0         NS       Transmit state machine state state                 |
----------------------------------------------------------------------------------------------------
===


*
 * PCSX_RX_SYNC_STATES_REG = Receive Sync States Register
 *
 *

     ==============================================================
     PCSX(0..4)_RX_SYNC_STATES_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16>  NS        RAZ      NS          NS       Reserved				            |
 <15:12>  SYNC3ST   RO       0x0         NS       Receive lane 3 code grp sync state machine state  |
 <11:8>	  SYNC2ST   RO       0x0         NS       Receive lane 2 code grp sync state machine state  |
 <7:4>    SYNC1ST   RO       0x0         NS       Receive lane 1 code grp sync state machine state  |
 <3:0>    SYNC0ST   RO       0x0         NS       Receive lane 0 code grp sync state machine state  |
----------------------------------------------------------------------------------------------------
===


*
* PCSX_POLARITY_REG = TX_RX polarity reg
*

     ==============================================================
     PCSX(0..4)_TX_RX_POLARITY_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10>  NS       RAZ      NS          NS        Reserved                                           |
 <9:6>  XOR_RXPLRT R/W	    0x0		0	  Per lane RX polarity control			     |
 <5:2>  XOR_TXPLRT R/W	    0x0		0	  Per lane TX polarity control			     |
 <1>     RXPLRT    R/W      0x0         0         1 is inverted polarity, 0 is normal polarity       |
 <0>     TXPLRT    R/W      0x0         0         1 is inverted polarity, 0 is normal polarity       |
----------------------------------------------------------------------------------------------------
===
*
* RX lane polarity vector [3:0] = XOR_RXPLRT<9:6>  ^  {4{RXPLRT<1>}};
*
* TX lane polarity vector [3:0] = XOR_TXPLRT<5:2>  ^  {4{TXPLRT<0>}};
*
* In short keep <1:0> to 2'b00, and use <5:2> and <9:6> fields to define per lane polarities
*
*


*
* PCSX Misc Control Register
*

     ==============================================================
     PCSX(0..4)_MISC_CTL_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        Reserved                                           |
 <3>     TX_SWAP  R/W      0x0         NS        0=do not swap xaui lanes going out to qlm's        |
						 1=swap lanes 3 <-> 0   and   2 <-> 1               |
 <2>     RX_SWAP  R/W      0x0         NS        0=do not swap xaui lanes coming in from qlm's      |
						 1=swap lanes 3 <-> 0   and   2 <-> 1               |
 <1>     XAUI     RO       NS          NS        1=XAUI mode selected, 0=not XAUI mode selected     |
						 This bit represents pi_qlm1/3_cfg[1:0] pin status  |
 <0>     GMXENO   R/W      0x0         0x0       GMX port enable override, GMX en/dis status is held|
						 during data packet reception.                      |
----------------------------------------------------------------------------------------------------
===
*
*LN_SWAP for XAUI is to simplify interconnection layout between devices
*


*
* PCSX Bit Lock Status Register
*

     ==============================================================
     PCSX(0..4)_BIT_LOCK_STATUS_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        Reserved                                           |
 <3>     BITLCK3  RO       0x0         NS        Receive Lane 3 bit lock status                     |
 <2>     BITLCK2  RO       0x0         NS        Receive Lane 2 bit lock status                     |
 <1>     BITLCK1  RO       0x0         NS        Receive Lane 1 bit lock status                     |
 <0>     BITLCK0  RO       0x0         NS        Receive Lane 0 bit lock status                     |
----------------------------------------------------------------------------------------------------
===
*
*
*



*
* PCSX Interrupt Register
*

     ==============================================================
     PCSX(0..4)_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved                                           |
 <6>	 DBG_SYNC R/W1C    0x0	       0	 Code Group sync failure debug help, see Note below |
 <5>     ALGNLOS  R/W1C    0x0         0         Set when XAUI lanes lose alignment                 |
 <4>     SYNLOS   R/W1C    0x0         0         Set when Code group sync lost on 1 or more  lanes  |
 <3>     BITLCKLS R/W1C    0x0         0         Set when Bit lock lost on 1 or more xaui lanes     |
 <2>     RXSYNBAD R/W1C    0x0         0         Set when RX code grp sync st machine in bad state  |
						 in one of the 4 xaui lanes                         |
 <1>     RXBAD    R/W1C    0x0         0         Set when RX state machine in bad state             |
 <0>     TXFLT    R/W1C    0x0         0         None defined at this time, always 0x0              |
----------------------------------------------------------------------------------------------------
===
* Note: DBG_SYNC is a edge triggered interrupt. When set it indicates PCS Synchronization state machine in
*	Figure 48-7 state diagram in IEEE Std 802.3-2005 changes state SYNC_ACQUIRED_1 to SYNC_ACQUIRED_2
*	indicating an invalid code group was received on one of the 4 receive lanes.
*	This interrupt should be always disabled and used only for link problem debugging help.
*


*
* PCSX Interrupt Enable Register
*

     ==============================================================
     PCSX(0..4)_INT_EN_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS           RAZ      NS          NS        Reserved                                              |
 <6>	 DBG_SYNC_EN  R/W      0x0	   0	     Code Group sync failure debug help		           |
 <5>     ALGNLOS_EN   R/W      0x0         1         Enable ALGNLOS interrupt                              |
 <4>     SYNLOS_EN    R/W      0x0         1         Enable SYNLOS interrupt                               |
 <3>     BITLCKLS_EN  R/W      0x0         1         Enable BITLCKLS interrupt                             |
 <2>     RXSYNBAD_EN  R/W      0x0         1         Enable RXSYNBAD  interrupt                            |
 <1>     RXBAD_EN     R/W      0x0         1         Enable RXBAD  interrupt                               |
 <0>     TXFLT_EN     R/W      0x0         1         Enable TXFLT   interrupt                              |
----------------------------------------------------------------------------------------------------
===


*
* PCSX Logic Analyzer Register
*

     ==============================================================
     PCSX(0..4)_LOG_ANL_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS           RAZ      NS          NS        Reserved                                              |
 <6>     ENC_MODE     R/W      0x0         0         1=send xaui encoded data, 0=send xaui raw data to GMX |
						     See .../rtl/pcs/readme_logic_analyzer.txt for details |
 <5:4>   DROP_LN      R/W      0x0         0         xaui lane# to drop from logic analyzer packets        |
        					     {<5>, <4>}  Drop lane #                               |
						      0    0   Drop lane 0 data    			   |
						      0    1   Drop lane 1 data    			   |
						      1    0   Drop lane 2 data     		           |
						      1    1   Drop lane 3 data     		           |
 <3>     LAFIFOVFL    R/W1C    0x0         0         1=logic analyser fif overflowed one or more times     |
						     during packetization.                                 |
						     Write 1 to clear this bit                             |
 <2>     LA_EN        R/W      0x0         0         1= Logic Analyzer enabled, 0=Logic Analyzer disabled  |
 <1:0>   PKT_SZ       R/W      0x0         0         {<1>, <0>}  Logic Analyzer Packet Size                |
						      0    0   Packet size 1k bytes    			   |
						      0    1   Packet size 4k bytes    			   |
						      1    0   Packet size 8k bytes    	         	   |
						      1    1   Packet size 16k bytes    		   |
----------------------------------------------------------------------------------------------------
===

*NOTE: Logic Analyzer is enabled with LA_EN for xaui only. PKT_SZ is effective only when LA_EN=1
*For normal operation(xaui), this bit must be 0. The dropped lane is used to send rxc[3:0].
*See pcs.csr  for sgmii/1000Base-X logic analyzer mode.
*For full description see document at .../rtl/pcs/readme_logic_analyzer.txt
*

*
* PCSX Bist Status Register
*

     ==============================================================
     PCSX(0..4)_BIST_STATUS_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS           RAZ      NS          NS        Reserved                                              |
 <0>     BIST_STATUS  RO       0x0         0         1=bist failure, 0=bisted memory ok or bist in progress|
						     pcsx.tx_sm.drf8x36m1_async_bist                       |
----------------------------------------------------------------------------------------------------
===



 *
 *                  PEM_CTL_STATUS = PEM Control Status
 *
 * General control and status of the PEM.
 *

     ==============================================================
     PEM(0..1)_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     INV_LCRC R/W      0x0         0         When '1' causes the LSB of the LCRC to be inverted.|
 <1>     INV_ECRC R/W      0x0         0         When '1' causes the LSB of the ECRC to be inverted.|
 <2>     FAST_LM  R/W      0x0         0         When '1' forces fast link mode.                    |
 <3>     RO_CTLP  R/W      0x0         0         When set '1' C-TLPs that have the RO bit set will  |
                                                 not wait for P-TLPs that normaly would be sent     |
                                                 first.                                             |
 <4>     LNK_ENB  R/W      0x0         0         When set '1' the link is enabled when '0' the      |
                                                 link is disabled. This bit only is active when in  |
                                                 RC mode.                                           |
 <5>     DLY_ONE  R/W      0x0         0         When set the output client state machines will     |
                                                 wait one cycle before starting a new TLP out.      |
 <6>     NF_ECRC  R/W      0x0         0         Do not forward peer-to-peer ECRC TLPs.             |
 <7>     NS       R/W      0x0         0         Reserved.                                          |
 <8>     NS       R/W      0x0         0         Reserved.                                          |
 <9>     OB_P_CMD R/W      0x0         0         When WRITTEN with a '1' a single cycle pulse is    |
                                                 to the PCIe core outband_pwrup_cmd port. EP mode.  |
 <10>    PM_XPME  R/W      0x0         0         When WRITTEN with a '1' a single cycle pulse is    |
                                                 to the PCIe core pm_xmt_pme port. EP mode.         |
 <11>    PM_XTOFF R/W      0x0         0         When WRITTEN with a '1' a single cycle pulse is    |
                                                 to the PCIe core pm_xmt_turnoff port. RC mode.     |
 <15:12> SPARES   R/W      0x0         0         Spares flops.                                      |
 <31:16> CFG_RTRY R/W      0x0         0x20      The time x 0x10000 in core clocks to wait for a    |
                                                 CPL to a CFG RD that does not carry a Retry Status.|
                                                 Until such time that the timeout occurs and Retry  |
                                                 Status is received for a CFG RD, the Read CFG Read |
                                                 will be resent. A value of 0 disables retries and  |
                                                 treats a CPL Retry as a CPL UR.                    |
                                                 When enabled only one CFG RD may be issued until   |
                                                 either successful completion or CPL UR.            |
 <33:32> NS       RAZ      NS          NS        Reserved		                            |
 <41:34> PBUS     RO       NS          NS        Primary bus number.                                |
 <46:42> DNUM     RO       NS          NS        Primary bus device number.                         |
 <47>    AUTO_SD  RO       NS          NS        Link Hardware Autonomous Speed Disable.            |
 <63:48> NS       RAZ      NS          NS        Reserved.                                          |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM(0..1)_DBG_INFO = PEM Debug Information
 *
 * General debug info.
 *

     ==============================================================
     PEM(0..1)_DBG_INFO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     SPOISON  R/W1C    0x0         0         Poisoned TLP sent                                  |
                                                 peai__client0_tlp_ep & peai__client0_tlp_hv        |
 <1>     RTLPMAL  R/W1C    0x0         0         Received TLP is malformed or a message.            |
                                                 pedc_radm_trgt1_tlp_abort & pedc__radm_trgt1_eot   |
						 If the core receives a MSG (or Vendor Message)     |
						 this bit will be set.                              |
 <2>     RTLPLLE  R/W1C    0x0         0         Received TLP has link layer error                  |
                                                 pedc_radm_trgt1_dllp_abort & pedc__radm_trgt1_eot  |
 <3>     RECRCE   R/W1C    0x0         0         Received ECRC Error                                |
                                                 pedc_radm_trgt1_ecrc_err & pedc__radm_trgt1_eot    |
 <4>     RPOISON  R/W1C    0x0         0         Received Poisoned TLP                              |
                                                 pedc__radm_trgt1_poisoned & pedc__radm_trgt1_hv    |
 <5>     RCEMRC   R/W1C    0x0         0         Received Correctable Error Message (RC Mode only)  |
                                                 pedc_radm_correctable_err                          |
 <6>     RNFEMRC  R/W1C    0x0         0         Received Non-Fatal Error Message (RC Mode only)    |
                                                 pedc_radm_nonfatal_err                             |
 <7>     RFEMRC   R/W1C    0x0         0         Received Fatal Error Message (RC Mode only)        |
                                                 pedc_radm_fatal_err                                |
						 Bit set when a message with ERR_FATAL is set.      |
 <8>     RPMERC   R/W1C    0x0         0         Received PME Message (RC Mode only)                |
                                                 pedc_radm_pm_pme                                   |
 <9>     RPTAMRC  R/W1C    0x0         0         Received PME Turnoff Acknowledge Message           |
                                                 (RC Mode only)                                     |
                                                 pedc_radm_pm_to_ack                                |
 <10>    RUMEP    R/W1C    0x0         0         Received Unlock Message (EP Mode Only)             |
                                                 pedc_radm_msg_unlock                               |
 <11>    RVDM     R/W1C    0x0         0         Received Vendor-Defined Message                    |
                                                 pedc_radm_vendor_msg                               |
 <12>    ACTO     R/W1C    0x0         0         A Completion Timeout Occured                       |
                                                 pedc_radm_cpl_timeout                              |
 <13>    RTE      R/W1C    0x0         0         Replay Timer Expired                               |
                                                 xdlh_replay_timeout_err                            |
						 This bit is set when the REPLAY_TIMER expires in   |
						 the PCIE core. The probability of this bit being   |
						 set will increase with the traffic load.           |
 <14>    MRE      R/W1C    0x0         0         Max Retries Exceeded                               |
                                                 xdlh_replay_num_rlover_err                         |
 <15>    RDWDLE   R/W1C    0x0         0         Received DLLP with DataLink Layer Error            |
                                                 rdlh_bad_dllp_err                                  |
 <16>    RTWDLE   R/W1C    0x0         0         Received TLP with DataLink Layer Error             |
                                                 rdlh_bad_tlp_err                                   |
 <17>    DPEOOSD  R/W1C    0x0         0         DLLP protocol error (out of sequence DLLP)         |
                                                 rdlh_prot_err                                      |
 <18>    FCPVWT   R/W1C    0x0         0         Flow Control Protocol Violation (Watchdog Timer)   |
                                                 rtlh_fc_prot_err                                   |
 <19>    RPE      R/W1C    0x0         0         When the PHY reports 8B/10B decode error           |
						 (RxStatus = 3b100) or disparity error              |
						 (RxStatus = 3b111), the signal rmlh_rcvd_err will  |
						 be asserted.                                       |
                                                 rmlh_rcvd_err                                      |
 <20>    FCUV     R/W1C    0x0         0         Flow Control Update Violation (opt. checks)        |
                                                 int_xadm_fc_prot_err                               |
 <21>    RQO      R/W1C    0x0         0         Receive queue overflow. Normally happens only when |
                                                 flow control advertisements are ignored            |
                                                 radm_qoverflow                                     |
 <22>    RAUC     R/W1C    0x0         0         Received an unexpected completion                  |
                                                 radm_unexp_cpl_err                                 |
 <23>    RACUR    R/W1C    0x0         0         Received a completion with UR status               |
                                                 radm_rcvd_cpl_ur                                   |
 <24>    RACCA    R/W1C    0x0         0         Received a completion with CA status               |
                                                 radm_rcvd_cpl_ca                                   |
 <25>    CAAR     R/W1C    0x0         0         Completer aborted a request                        |
                                                 radm_rcvd_ca_req                                   |
                                                 This bit will never be set because Octeon does     |
                                                 not generate Completer Aborts.                     |
 <26>    RARWDNS  R/W1C    0x0         0         Recieved a request which device does not support   |
                                                 radm_rcvd_ur_req                                   |
 <27>    RAMTLP   R/W1C    0x0         0         Received a malformed TLP                           |
                                                 radm_mlf_tlp_err                                   |
 <28>    RACPP    R/W1C    0x0         0         Received a completion with poisoned payload        |
                                                 radm_rcvd_cpl_poisoned                             |
 <29>    RAWWPP   R/W1C    0x0         0         Received a write with poisoned payload             |
                                                 radm_rcvd_wreq_poisoned                            |
 <30>    ECRC_E   R/W1C    0x0         0         Received a ECRC error.                             |
                                                 radm_ecrc_err                                      |
 <63:31> NS       RAZ      NS          NS        Reserved.                                          |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_BIST_STATUS = PEM Bist Status
 *
 * Contains the diffrent interrupt summary bits of the PEM.
 *

     ==============================================================
     PEM(0..1)_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     SOT      RO        0           0        SOT Buffer.                                        |
 <1>     RQHDR0   RO        0           0        Rx Queue Header0.                                  |
 <2>     RQHDR1   RO        0           0        Rx Queue Header1.                                  |
 <3>     RQDATA3  RO        0           0        Rx Queue Data Memory3.                             |
 <4>     RQDATA2  RO        0           0        Rx Queue Data Memory2.                             |
 <5>     RQDATA1  RO        0           0        Rx Queue Data Memory1.                             |
 <6>     RQDATA0  RO        0           0        Rx Queue Data Memory0.                             |
 <7>     RETRY    RO        0           0        Retry Buffer.                                      |
 <63:8>  NS       RAZ       NS          NS       Reserved		                            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_DIAG_STATUS = PEM Diagnostic Status
 *
 * Selection control for the cores diagnostic bus.
 *

     ==============================================================
     PEM(0..1)_DIAG_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     AUX_EN   RO        0           0        Auxilary Power Enable.                             |
 <1>     PM_EN    RO        0           0        Power Management Event Enable.                     |
 <2>     PM_STAT  RO        0           0        Power Management Status.                           |
 <3>     PM_DST   RO        0           0        Current power management DSTATE.                   |
 <63:4>  NS       RO        NS          NS       Reserved		                            |
----------------------------------------------------------------------------------------------------
===


 *
 *                  PEM_CFG_WR = PEM Configuration Write
 *
 * Allows write access to the configuration in the PCIe Core.
 *

     ==============================================================
     PEM(0..1)_CFG_WR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  ADDR     R/W      0           NS        Address to write. A write to this register starts  |
                                                 a write operation.                                 |
 <63:32> DATA     R/W      0           NS        Data to write. A write to this register starts     |
                                                 a write operation.                                 |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_CFG_RD = PEM Configuration Read
 *
 * Allows read access to the configuration in the PCIe Core.
 *

     ==============================================================
     PEM(0..1)_CFG_RD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  ADDR     R/W      0           NS        Address to read. A write to this register          |
                                                 starts a read operation.                           |
 <63:32> DATA     R/W      0           NS        Data.                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_TLP_CREDITS = PEM TLP Credits
 *
 * Specifies the number of credits the PEM for use in moving TLPs. When this register is written the credit values are
 * reset to the register value. A write to this register should take place BEFORE traffic flow starts.
 *

     ==============================================================
     PEM(0..1)_TLP_CREDITS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   SLI_P    R/W      128         128       TLP credits for Posted TLPs in the SLI.            |
                                                 Legal values are 0x24 to 0x80.                     |
 <15:8>  SLI_NP   R/W       16          16       TLP credits for Non-Posted TLPs in the SLI.        |
                                                 Legal values are 0x4 to 0x10.                      |
 <23:16> SLI_CPL  R/W      128         128       TLP credits for Completion TLPs in the SLI.        |
                                                 Legal values are 0x24 to 0x80.                     |
 <31:24> PEM_P    R/W      128         128       TLP credits for Posted TLPs in the Peer.           |
                                                 Legal values are 0x24 to 0x80.                     |
 <39:32> PEM_NP   R/W       16          16       TLP credits for Non-Posted TLPs in the Peer.       |
                                                 Legal values are 0x4 to 0x10.                      |
 <47:40> PEM_CPL  R/W      128         128       TLP credits for Completion TLPs in the Peer.       |
                                                 Legal values are 0x24 to 0x80.                     |
 <55:48> PEAI_PPF R/W      128         128       TLP credits for Completion TLPs in the Peer.       |
                                                 Legal values are 0x24 to 0x80.                     |
 <63:56> NS       RAZ      NS          NS        Reserved		                            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_P2P_BAR#_START = PEM Peer-To-Peer BAR0 Start
 *
 * The starting address and enable for addresses to forwarded to the PCIe peer port.
 *

     ==============================================================
     PEM(0..1)_P2P_BAR(0..3)_START Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  NS       RAZ      NS                NS        Reserved.                                          |
 <63:12> ADDR     R/W      0xfffffffffffff   NS        The starting address of the address window created |
                                                       by this field and the PEM_P2P_BAR0_END[63:12]      |
                                                       field. The full 64-bits of address are created by: |
                                                       {ADDR[63:12], 12'b0}.                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_P2P_BAR#_END = PEM Peer-To-Peer BAR0 End
 *
 * The ending address for addresses to forwarded to the PCIe peer port.
 *

     ==============================================================
     PEM(0..1)_P2P_BAR(0..3)_END Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  NS       RAZ      NS                NS        Reserved		                                  |
 <63:12> ADDR     R/W      0xfffffffffffff   NS        The ending address of the address window created   |
                                                       this field and the PEM_P2P_BAR0_START[63:12]      |
                                                       field. The full 64-bits of address are created by: |
                                                       {ADDR[63:12], 12'b0}.                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_P2N_BAR0_START = PEM PCIe to Npei BAR0 Start
 *
 * The starting address for addresses to forwarded to the SLI in RC Mode.
 *

     ==============================================================
     PEM(0..1)_P2N_BAR0_START Type=RSL
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <13:0>  NS       RAZ      NS          NS        Reserved		                            |
 <63:14> ADDR     R/W      0x0         0         The starting address of the 16KB address space that|
                                                 is the BAR0 address space.                         |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_P2N_BAR1_START = PEM PCIe to Npei BAR1 Start
 *
 * The starting address for addresses to forwarded to the SLI in RC Mode.
 *

     ==============================================================
     PEM(0..1)_P2N_BAR1_START Type=RSL
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <25:0>  NS       RAZ      NS          NS        Reserved		                            |
 <63:26> ADDR     R/W      0x0         0         The starting address of the 64KB address space     |
                                                 that is the BAR1 address space.                    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_P2N_BAR2_START = PEM PCIe to Npei BAR2 Start
 *
 * The starting address for addresses to forwarded to the SLI in RC Mode.
 *

     ==============================================================
     PEM(0..1)_P2N_BAR2_START Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <40:0>  NS       RAZ      NS          NS        Reserved		                            |
 <63:41> ADDR     R/W      0x0         0         The starting address of the 2^41 address space     |
                                                 that is the BAR2 address space.                    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_CPL_LUT_VALID = PEM Cmpletion Lookup Table Valid
 *
 * Bit set for outstanding tag read.
 *

     ==============================================================
     PEM(0..1)_CPL_LUT_VALID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  TAG      RO       0x0         0         Bit vector set cooresponds to an outstanding tag   |
                                                 expecting a completion.                            |
 <63:32> NS       RAZ      NS          NS        Reserved		                            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM(0..1)_DBG_INFO_EN = PEM Debug Information Enable
 *
 * Allows PEM_DBG_INFO to generate interrupts when cooresponding enable bit is set.
 *

     ==============================================================
     PEM(0..1)_DBG_INFO_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     SPOISON  R/W      0x0         0         Allows PEM_DBG_INFO[0] to generate an interrupt.   |
 <1>     RTLPMAL  R/W      0x0         0         Allows PEM_DBG_INFO[1] to generate an interrupt.   |
 <2>     RTLPLLE  R/W      0x0         0         Allows PEM_DBG_INFO[2] to generate an interrupt.   |
 <3>     RECRCE   R/W      0x0         0         Allows PEM_DBG_INFO[3] to generate an interrupt.   |
 <4>     RPOISON  R/W      0x0         0         Allows PEM_DBG_INFO[4] to generate an interrupt.   |
 <5>     RCEMRC   R/W      0x0         0         Allows PEM_DBG_INFO[5] to generate an interrupt.   |
 <6>     RNFEMRC  R/W      0x0         0         Allows PEM_DBG_INFO[6] to generate an interrupt.   |
 <7>     RFEMRC   R/W      0x0         0         Allows PEM_DBG_INFO[7] to generate an interrupt.   |
 <8>     RPMERC   R/W      0x0         0         Allows PEM_DBG_INFO[8] to generate an interrupt.   |
 <9>     RPTAMRC  R/W      0x0         0         Allows PEM_DBG_INFO[9] to generate an interrupt.   |
 <10>    RUMEP    R/W      0x0         0         Allows PEM_DBG_INFO[10] to generate an interrupt.  |
 <11>    RVDM     R/W      0x0         0         Allows PEM_DBG_INFO[11] to generate an interrupt.  |
 <12>    ACTO     R/W      0x0         0         Allows PEM_DBG_INFO[12] to generate an interrupt.  |
 <13>    RTE      R/W      0x0         0         Allows PEM_DBG_INFO[13] to generate an interrupt.  |
 <14>    MRE      R/W      0x0         0         Allows PEM_DBG_INFO[14] to generate an interrupt.  |
 <15>    RDWDLE   R/W      0x0         0         Allows PEM_DBG_INFO[15] to generate an interrupt.  |
 <16>    RTWDLE   R/W      0x0         0         Allows PEM_DBG_INFO[16] to generate an interrupt.  |
 <17>    DPEOOSD  R/W      0x0         0         Allows PEM_DBG_INFO[17] to generate an interrupt.  |
 <18>    FCPVWT   R/W      0x0         0         Allows PEM_DBG_INFO[18] to generate an interrupt.  |
 <19>    RPE      R/W      0x0         0         Allows PEM_DBG_INFO[19] to generate an interrupt.  |
 <20>    FCUV     R/W      0x0         0         Allows PEM_DBG_INFO[20] to generate an interrupt.  |
 <21>    RQO      R/W      0x0         0         Allows PEM_DBG_INFO[21] to generate an interrupt.  |
 <22>    RAUC     R/W      0x0         0         Allows PEM_DBG_INFO[22] to generate an interrupt.  |
 <23>    RACUR    R/W      0x0         0         Allows PEM_DBG_INFO[23] to generate an interrupt.  |
 <24>    RACCA    R/W      0x0         0         Allows PEM_DBG_INFO[24] to generate an interrupt.  |
 <25>    CAAR     R/W      0x0         0         Allows PEM_DBG_INFO[25] to generate an interrupt.  |
 <26>    RARWDNS  R/W      0x0         0         Allows PEM_DBG_INFO[26] to generate an interrupt.  |
 <27>    RAMTLP   R/W      0x0         0         Allows PEM_DBG_INFO[27] to generate an interrupt.  |
 <28>    RACPP    R/W      0x0         0         Allows PEM_DBG_INFO[28] to generate an interrupt.  |
 <29>    RAWWPP   R/W      0x0         0         Allows PEM_DBG_INFO[29] to generate an interrupt.  |
 <30>    ECRC_E   R/W      0x0         0         Allows PEM_DBG_INFO[30] to generate an interrupt.  |
 <63:31> NS       RAZ      NS          NS        Reserved.                                          |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_BAR1_INDEX@ = PEM BAR1 Index@ Register
 *
 * Contains address index and control bits for access to memory ranges of BAR-1. Index is build from supplied address [25:22].
 *

     ==============================================================
     PEM(0..1)_BAR1_INDEX(0..15) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:20> NS       RAZ      NS          NS        Reserved
 <19:4>  ADDR_IDX R/W      0x0         NS        Address bits [37:22] sent to L2C
 <3>     CA       R/W      0x0         0         Set '1' when access is not to be cached in L2.
 <2:1>   END_SWP  R/W      0x0         NS        Endian Swap Mode
 <0>     ADDR_V   R/W      0x0         NS        Set '1' when the selected address range is valid.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_BAR_CTL = PEM BAR Control
 *
 * Contains control for BAR accesses.
 *

     ==============================================================
     PEM(0..1)_BAR_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved				            |
 <6:4>   BAR1_SIZ R/W      1           1         Pcie-Port0, Bar1 Size. 1 == 64MB, 2 == 128MB,      |
 						 3 == 256MB, 4 == 512MB, 5 == 1024MB, 6 == 2048MB,  |
						 0 and 7 are reserved.                              |
 <3>     BAR2_ENB R/W      0           1         When set '1' BAR2 is enable and will respond when  |
                                                 clear '0' BAR2 access will cause UR responses.     |
 <2:1>   BAR2_ESX R/W      0           NS        Value will be XORed with pci-address[39:38] to     |
                                                 determine the endian swap mode.                    |
 <0>     BAR2_CAX R/W      0           0         Value will be XORed with pcie-address[40] to       |
                                                 determine the L2 cache attribute.                  |
                                                 Not cached in L2 if XOR result is 1                |
----------------------------------------------------------------------------------------------------
===
 *
 *                  PEM_BAR2_MASK = PEM BAR2 MASK
 *
 * The mask pattern that is ANDED with the address from PCIe core for BAR2 hits.
 *

     ==============================================================
     PEM(0..1)_BAR2_MASK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:38> NS       RAZ      NS          NS          Reserved				            |
 <37:3>  MASK     R/W      0x7ffffffff 0x7ffffffff The value to be ANDED with the address sent to   |
                                                   the Octeon memory.                               |
 <2:0>   NS       RAZ      NS          NS          Reserved				            |
----------------------------------------------------------------------------------------------------
===




 * Below are in pesc_csr
 *
 *                  PEM(0..1)_INT_SUM = PEM Interrupt Summary
 *
 * Interrupt conditions for the PEM.
 *

     ==============================================================
     PEM(0..1)_INT_SUM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>      AERI     RO       0x0         0         Advanced Error Reporting Interrupt, RC Mode Only.  |
                                                  (cfg_aer_rc_err_int).                              |
 <1>      SE       R/W1C    0x0         0         System Error, RC Mode Only.                        |
                                                  (cfg_sys_err_rc)                                   |
 <2>      PMEI     RO       0x0         0         PME Interrupt.                                     |
                                                  (cfg_pme_int)                                      |
 <3>      PMEM     RO       0x0         0         Recived PME MSG.                                   |
                                                  (radm_pm_pme)                                      |
 <4>      UP_B1    R/W1C    0x0         0         Received P-TLP for Bar1 when bar1 index valid      |
					          is not set.                                        |
 <5>      UP_B2    R/W1C    0x0         0         Received P-TLP for Bar2 when bar2 is disabeld.     |
 <6>      UP_BX    R/W1C    0x0         0         Received P-TLP for an unknown Bar.                 |
 <7>      UN_B1    R/W1C    0x0         0         Received N-TLP for Bar1 when bar1 index valid      |
					          is not set.                                        |
 <8>      UN_B2    R/W1C    0x0         0         Received N-TLP for Bar2 when bar2 is disabled.     |
 <9>      UN_BX    R/W1C    0x0         0         Received N-TLP for an unknown Bar.                 |
 <10>     EXC      RO       0x0         0         Set when the PEM_DBG_INFO register has a bit       |
                                                  set and its cooresponding PEM_DBG_INFO_EN bit      |
                                                  is set.                                            |
 <11>     RDLK     R/W1C    0x0         0         Received Read Lock TLP.                            |
 <12>     CRS_ER   R/W1C    0x0         0         Had a CRS Timeout when Retries were enabled.       |
 <13>     CRS_DR   R/W1C    0x0         0         Had a CRS Timeout when Retries were disabled.      |
 <63:14>  NS       RAZ      NS          NS        Reserved					     |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM(0..1)_INT_ENB = PEM Interrupt Enable
 *
 * Enables interrupt conditions for the PEM to generate an RSL interrupt.
 *

     ==============================================================
     PEM(0..1)_INT_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     AERI     R/W      0x0         1         Enables PEM_INT_SUM[0] to generate an              |
                                                 interrupt to the MIO.                              |
 <1>     SE       R/W      0x0         1         Enables PEM_INT_SUM[1] to generate an              |
                                                 interrupt to the MIO.                              |
 <2>     PMEI     R/W      0x0         1         Enables PEM_INT_SUM[2] to generate an              |
                                                 interrupt to the MIO.                              |
 <3>     PMEM     R/W      0x0         1         Enables PEM_INT_SUM[3] to generate an              |
                                                 interrupt to the MIO.                              |
 <4>     UP_B1    R/W      0x0         1         Enables PEM_INT_SUM[4] to generate an              |
                                                 interrupt to the MIO.                              |
 <5>     UP_B2    R/W      0x0         1         Enables PEM_INT_SUM[5] to generate an              |
                                                 interrupt to the MIO.                              |
 <6>     UP_BX    R/W      0x0         1         Enables PEM_INT_SUM[6] to generate an              |
                                                 interrupt to the MIO.                              |
 <7>     UN_B1    R/W      0x0         1         Enables PEM_INT_SUM[7] to generate an              |
                                                 interrupt to the MIO.                              |
 <8>     UN_B2    R/W      0x0         1         Enables PEM_INT_SUM[8] to generate an              |
                                                 interrupt to the MIO.                              |
 <9>     UN_BX    R/W      0x0         1         Enables PEM_INT_SUM[9] to generate an              |
                                                 interrupt to the MIO.                              |
 <10>    EXC      R/W      0x0         1         Enables PEM_INT_SUM[10] to generate an             |
                                                 interrupt to the MIO.                              |
 <11>    RDLK     R/W      0x0         1         Enables PEM_INT_SUM[11] to generate an             |
                                                 interrupt to the MIO.                              |
 <12>    CRS_ER   R/W      0x0         1         Enables PEM_INT_SUM[12] to generate an             |
                                                 interrupt to the MIO.                              |
 <13>    CRS_DR   R/W      0x0         1         Enables PEM_INT_SUM[13] to generate an             |
                                                 interrupt to the MIO.                              |
 <63:14> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===


 *
 *                  PEM(0..1)_INT_ENB_INT = PEM Interrupt Enable
 *
 * Enables interrupt conditions for the PEM to generate an RSL interrupt.
 *

     ==============================================================
     PEM(0..1)_INT_ENB_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     AERI     R/W      0x0         1         Enables PEM_INT_SUM[0] to generate an              |
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <1>     SE       R/W      0x0         1         Enables PEM_INT_SUM[1] to generate an              |
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <2>     PMEI     R/W      0x0         1         Enables PEM_INT_SUM[2] to generate an              |
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <3>     PMEM     R/W      0x0         1         Enables PEM_INT_SUM[3] to generate an              |
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <4>     UP_B1    R/W      0x0         1         Enables PEM_INT_SUM[4] to generate an              |
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <5>     UP_B2    R/W      0x0         1         Enables PEM_INT_SUM[5] to generate an              |
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <6>     UP_BX    R/W      0x0         1         Enables PEM_INT_SUM[6] to generate an              |
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <7>     UN_B1    R/W      0x0         1         Enables PEM_INT_SUM[7] to generate an              |
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <8>     UN_B2    R/W      0x0         1         Enables PEM_INT_SUM[8] to generate an              |
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <9>     UN_BX    R/W      0x0         1         Enables PEM_INT_SUM[9] to generate an              |
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <10>    EXC      R/W      0x0         1         Enables PEM_INT_SUM[10] to generate an             |
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <11>    RDLK     R/W      0x0         1         Enables PEM_INT_SUM[11] to generate an             |
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <12>    CRS_ER   R/W      0x0         1         Enables PEM_INT_SUM[12] to generate an             |
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <13>    CRS_DR   R/W      0x0         1         Enables PEM_INT_SUM[13] to generate an             |
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <63:14> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM(0..1)_BIST_STATUS2 = PEM BIST Status Register
 *
 * Results from BIST runs of PEM's memories.
 *

     ==============================================================
     PEM(0..1)_BIST_STATUS2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     PPF      RO       0x0         0         BIST Status for the ppf_fifo                       |
 <1>     PEF_TC0  RO       0x0         0         BIST Status for the pef_tlp_cpl_fifo0              |
 <2>     PEF_TCF1 RO       0x0         0         BIST Status for the pef_tlp_cpl_fifo1              |
 <3>     PEF_TNF  RO       0x0         0         BIST Status for the pef_tlp_n_fifo                 |
 <4>     PEF_TPF0 RO       0x0         0         BIST Status for the pef_tlp_p_fifo0                |
 <5>     PEF_TPF1 RO       0x0         0         BIST Status for the pef_tlp_p_fifo1                |
 <6>     PEAI_P2E RO       0x0         0         BIST Status for the peai__pesc_fifo                |
 <7>     E2P_P    RO       0x0         0         BIST Status for the e2p_p_fifo                     |
 <8>     E2P_N    RO       0x0         0         BIST Status for the e2p_n_fifo                     |
 <9>     E2P_CPL  RO       0x0         0         BIST Status for the e2p_cpl_fifo                   |
 <63:10> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===


 *
 * PIP_BIST_STATUS = PIP's BIST Results
 *

     ==============================================================
     PIP_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:20> NS       RAZ      NS          NS        Reserved				            |
 <19:0>  BIST     RO       0x0         0         BIST Results.                                      |
                                                  HW sets a bit in BIST for for memory that fails   |
						  BIST.						    |
					   	  19: pip.ptbl					    |
					   	  18: pip.crc					    |
					   	  17: RAZ					    |
					   	  16: pip.ih.tag				    |
					   	  15: pip.lx.chk_tag				    |
					   	  14: pip.map.ih				    |
					   	  13: RAZ					    |
					   	  12: RAZ					    |
					   	  11: RAZ					    |
					   	  10: pip.stats.wrk				    |
					   	  9:  pip.stats.inb				    |
					   	  8:  pip.map.l3				    |
					   	  7:  pip.map.l4				    |
					   	  6:  pip.map.bc				    |
					   	  5:  pip.map.fe				    |
					   	  4:  pip.map.be				    |
					   	  3:  pip.skp					    |
					   	  2:  pip.phb.todo				    |
					   	  1:  pip.phb.mem				    |
					   	  0:  pip.lx.chk				    |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_INT_REG = PIP's Interrupt Register
 *
 * Any exception event that occurs is captured in the PIP_INT_REG.
 * PIP_INT_REG will set the exception bit regardless of the value
 * of PIP_INT_EN.  PIP_INT_EN only controls if an interrupt is
 * raised to software.
 *

     ==============================================================
     PIP_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13> NS       RAZ      NS          NS        Reserved				            |
 <12>	 PUNYERR  R/W1C    0x0         0         Frame was received with length <=4B when CRC	    |
						  stripping in IPD is enable			    |
 <11>	 LENERR   R/W1C    0x0         0         Frame was received with length error		    |
 <10>    MAXERR   R/W1C    0x0         0         Frame was received with length > max_length	    |
 <9>     MINERR   R/W1C    0x0         0         Frame was received with length < min_length	    |
 <8>     BEPERR   R/W1C    0x0         0         Parity Error in back end memory                    |
 <7>     FEPERR   R/W1C    0x0         0         Parity Error in front end memory                   |
 <6>     TODOOVR  R/W1C    0x0         0         Todo list overflow (see PIP_BCK_PRS[HIWATER])      |
 <5>     SKPRUNT  R/W1C    0x0         0         Packet was engulfed by skipper                     |
						  This interrupt can occur with received PARTIAL    |
						  packets that are truncated to SKIP bytes or	    |
						  smaller.					    |
 <4>     BADTAG   R/W1C    0x0         0         A bad tag was sent from IPD                        |
 <3>     PRTNXA   R/W1C    0x0         0         Non-existent port                                  |
 <2>     BCKPRS   R/W1C    0x0         0         PIP asserted backpressure                          |
 <1>     CRCERR   R/W1C    0x0         0         PIP calculated bad CRC                             |
 <0>     PKTDRP   R/W1C    0x0         0         Packet Dropped due to QOS                          |

Notes:
* TODOOVR
  The PIP Todo list stores packets that have been received and require work
  queue entry generation.  PIP will normally assert backpressure when the
  list fills up such that any error is normally is result of a programming
  the PIP_BCK_PRS[HIWATER] incorrectly.  PIP itself can handle 29M
  packets/sec @500MHz or 15Gbs @ 64B packets.

* SKPRUNT
  If a packet size is less then the amount programmed in the per port
  skippers, then there will be nothing to parse and the entire packet will
  basically be skipped over.  This is probably not what the user desired, so
  there is an indication to software.

* BADTAG
  A tag is considered bad when it is resued by a new packet before it was
  released by PIP.  PIP considers a tag released by one of two methods.
  . QOS dropped so that it is released over the pip__ipd_release bus.
  . WorkQ entry is validated by the pip__ipd_done signal

* PRTNXA
  Does not apply to 68xx.

* BCKPRS
  PIP can assert backpressure to the receive logic when the todo list
  exceeds a high-water mark (see PIP_BCK_PRS for more details).  When this
  occurs, PIP can raise an interrupt to software.

* CRCERR
  Octane can compute CRC in two places.  Each RGMII port will compute its
  own CRC, but PIP can provide an additional check. If PIP computes a bad
  CRC, then PIP will raise an interrupt.

* PKTDRP
  PIP can drop packets based on QOS results received from IPD.  If the QOS
  algorithm decides to drop a packet, PIP will assert an interrupt.
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_INT_EN = PIP's Interrupt Enable Register
 *
 * Determines if hardward should raise an interrupt to software
 * when an exception event occurs.
 *

     ==============================================================
     PIP_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13> NS       RAZ      NS          NS        Reserved				            |
 <12>	 PUNYERR  R/W      0x0         0         Frame was received with length <=4B when CRC	    |
						  stripping in IPD is enable			    |
 <11>	 LENERR   R/W      0x0         0         Frame was received with length error		    |
 <10>    MAXERR   R/W      0x0         0         Frame was received with length > max_length	    |
 <9>     MINERR   R/W      0x0         0         Frame was received with length < min_length	    |
 <8>     BEPERR   R/W      0x0         0         Parity Error in back end memory                    |
 <7>     FEPERR   R/W      0x0         0         Parity Error in front end memory                   |
 <6>     TODOOVR  R/W      0x0         0         Todo list overflow (see PIP_BCK_PRS[HIWATER])      |
 <5>     SKPRUNT  R/W      0x0         0         Packet was engulfed by skipper                     |
 <4>     BADTAG   R/W      0x0         0         A bad tag was sent from IPD                        |
 <3>     PRTNXA   R/W      0x0         0         Non-existent port                                  |
 <2>     BCKPRS   R/W      0x0         0         PIP asserted backpressure                          |
 <1>     CRCERR   R/W      0x0         0         PIP calculated bad CRC                             |
 <0>     PKTDRP   R/W      0x0         0         Packet Dropped due to QOS                          |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_STAT_CTL = PIP's Stat Control Register
 *
 * Controls how the PIP statistics counters are handled.
 *

     ==============================================================
     PIP_STAT_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:9>  NS       RAZ      NS          NS        Reserved				            |
 <8>     MODE     R/W      0x0         0         The PIP_STAT*_X registers can be indexed either by |
						  port-kind or backpressure ID.			    |
						  Does not apply to the PIP_STAT_INB* registers.    |
						  0 = X represents the packet's port-kind	    |
						  1 = X represents the packet's backpressure ID	    |
 <7:1>   NS       RAZ      NS          NS        Reserved				            |
 <0>     RDCLR    R/W      0x1         1         Stat registers are read and clear                  |
                                                  0 = stat registers hold value when read           |
						  1 = stat registers are cleared when read          |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_GBL_CTL = PIP's Global Control Register
 *
 * Global control information.  These are the global checker enables for
 * IPv4/IPv6 and TCP/UDP parsing.  The enables effect all ports.
 *

     ==============================================================
     PIP_GBL_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:28> NS       RAZ      NS          NS        Reserved				            |
 <27>    IHMSK_DIS    R/W  0           0         Instruction Header Mask Disable		    |
						  0=Allow NTAG,NTT,NGRP,NQOS bits in the	    |
						    instruction header to control which fields from |
						    the instruction header are used for WQE WORD2.  |
						  1=Ignore the NTAG,NTT,NGRP,NQOS bits in the	    |
						    instruction header and act as if these fields   |
						    were zero.  Thus always use the TAG,TT,GRP,QOS  |
						    (depending on the instruction header length)    |
						    from the instruction header for the WQE WORD2.  |
 <26>	 DSA_GRP_TVID R/W  0	       0	 DSA Group Algorithm				    |
						  Use the DSA source id to compute GRP		    |
 <25>	 DSA_GRP_SCMD R/W  0	       0	 DSA Group Algorithm				    |
						  Use the DSA source id to compute GRP when the	    |
						  DSA tag command to TO_CPU			    |
 <24>	 DSA_GRP_SID  R/W  0	       0	 DSA Group Algorithm				    |
						  Use the DSA VLAN id to compute GRP		    |
 <23:20> NS       RAZ      NS          NS        Reserved				            |
 <19:17> SPARE    R/W	   0	       0	 Spare Bits                                	    |
 <16>    IGNRS    R/W	   0	       0	 Ignore the PKT_INST_HDR[RS] bit when set	    |
						  When using 2-byte instruction header words,	    |
						  either PIP_PRT_CFG[DYN_RS] or IGNRS should be set |
 <15>    VS_WQE   R/W      0           0	 Which DSA/VLAN CFI/ID to use when VLAN Stacking    |
						  0=use the 1st (network order) VLAN		    |
						  1=use the 2nd (network order) VLAN		    |
 <14>	 VS_QOS	  R/W	   0	       0	 Which DSA/VLAN priority to use when VLAN Stacking  |
						  0=use the 1st (network order) VLAN		    |
						  1=use the 2nd (network order) VLAN		    |
 <13>    L2_MAL   R/W      1           1         Enable L2 malformed packet check                   |
 <12>    TCP_FLAG R/W      1           1         Enable TCP flags checks                            |
 <11>    L4_LEN   R/W      1           1         Enable TCP/UDP length check                        |
 <10>    L4_CHK   R/W      1           1         Enable TCP/UDP checksum check                      |
 <9>     L4_PRT   R/W      1           1         Enable TCP/UDP illegal port check                  |
 <8>     L4_MAL   R/W      1           1         Enable TCP/UDP malformed packet check              |
 <7:6>   NS       RAZ      NS          NS        Reserved				            |
 <5:4>   IP6_EEXT R/W      1           3         Enable IPv6 early extension headers                |
 <3>     IP4_OPTS R/W      1           1         Enable IPv4 options check                          |
 <2>     IP_HOP   R/W      1           1         Enable TTL (IPv4) / hop (IPv6) check               |
 <1>     IP_MAL   R/W      1           1         Enable malformed check                             |
 <0>     IP_CHK   R/W      1           1         Enable IPv4 header checksum check                  |

Notes:
The following text describes the conditions in which each checker will
assert and flag an exception.  By disabling the checker, the exception will
not be flagged and the packet will be parsed as best it can.  Note, by
disabling conditions, packets can be parsed incorrectly (.i.e. IP_MAL and
L4_MAL could cause bits to be seen in the wrong place.  IP_CHK and L4_CHK
means that the packet was corrupted).

* IP_CHK
  Indicates that an IPv4 packet contained an IPv4 header checksum
  violations.  Only applies to packets classified as IPv4.

* IP_MAL
  Indicates that the packet was malformed.  Malformed packets are defined as
  packets that are not long enough to cover the IP header or not long enough
  to cover the length in the IP header.

* IP_HOP
  Indicates that the IPv4 TTL field or IPv6 HOP field is zero.

* IP4_OPTS
  Indicates the presence of IPv4 options.  It is set when the length != 5.
  This only applies to packets classified as IPv4.

* IP6_EEXT
  Indicate the presence of IPv6 early extension headers.  These bits only
  apply to packets classified as IPv6.  Bit 0 will flag early extensions
  when next_header is any one of the following...

	- hop-by-hop (0)
	- destination (60)
	- routing (43)

  Bit 1 will flag early extentions when next_header is NOT any of the
  following...

	- TCP (6)
	- UDP (17)
	- fragmentation (44)
	- ICMP (58)
	- IPSEC ESP (50)
	- IPSEC AH (51)
	- IPCOMP

* L4_MAL
  Indicates that a TCP or UDP packet is not long enough to cover the TCP or
  UDP header.

* L4_PRT
  Indicates that a TCP or UDP packet has an illegal port number - either the
  source or destination port is zero.

* L4_CHK
  Indicates that a packet classified as either TCP or UDP contains an L4
  checksum failure

* L4_LEN
  Indicates that the TCP or UDP length does not match the the IP length.

* TCP_FLAG
  Indicates any of the following conditions...

  	{URG, ACK, PSH, RST, SYN, FIN} : tcp_flag
  	6'b000001: (FIN only)
  	6'b000000: (0)
  	6'bxxx1x1: (RST+FIN+*)
  	6'b1xxx1x: (URG+SYN+*)
  	6'bxxx11x: (RST+SYN+*)
  	6'bxxxx11: (SYN+FIN+*)
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_GBL_CFG = PIP's Global Config Register
 *
 * Global config information that applies to all ports.
 *

     ==============================================================
     PIP_GBL_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:19> NS       RAZ      NS          NS        Reserved				            |
 <18>    TAG_SYN  R/W      0           0         Do not include src_crc for TCP/SYN&!ACK packets    |
						  0 = include src_crc				    |
						  1 = tag hash is dst_crc for TCP/SYN&!ACK packets  |
 <17>    IP6_UDP  R/W      1           1         IPv6/UDP checksum is not optional                  |
						  0 = Allow optional checksum code		    |
						  1 = Do not allow optional checksum code	    |
 <16>    MAX_L2   R/W      0           0         Config bit to choose the largest L2 frame size     |
                                                  Chooses the value of the L2 Type/Length field	    |
						  to classify the frame as length.		    |
                                                  0 = 1500 / 0x5dc				    |
                                                  1 = 1535 / 0x5ff				    |
 <15:11> NS       RAZ      NS          NS        Reserved				            |
 <10:8>  RAW_SHF  R/W      0           0         RAW Packet shift amount		            |
                                                  Number of bytes to pad a RAW packet.              |
 <7:3>   NS       RAZ      NS          NS        Reserved				            |
 <2:0>   NIP_SHF  R/W      0           0         Non-IP shift amount			            |
                                                  Number of bytes to pad a packet that has been	    |
						  classified as not IP.                             |

Notes:
* IP6_UDP
  IPv4 allows optional UDP checksum by sending the all 0's patterns.  IPv6
  outlaws this and the spec says to always check UDP checksum.  This mode
  bit allows the user to treat IPv6 as IPv4, meaning that the all 0's
  pattern will cause a UDP checksum pass.
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_SFT_RST = PIP Soft Reset
 *
 * When written to a '1', resets the pip block
 *

     ==============================================================
     PIP_SFT_RST Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved				            |
 <0>     RST      R/W      0x0         0x0       Soft Reset                                         |

Notes:
When RST is set to a '1' by SW, PIP will get a short reset pulse (3 cycles
in duration).  Although this will reset much of PIP's internal state, some
CSRs will not reset.

. PIP_BIST_STATUS
. PIP_STAT0_*
. PIP_STAT1_*
. PIP_STAT2_*
. PIP_STAT3_*
. PIP_STAT4_*
. PIP_STAT5_*
. PIP_STAT6_*
. PIP_STAT7_*
. PIP_STAT8_*
. PIP_STAT9_*
. PIP_STAT10_*
. PIP_STAT11_*
. PIP_STAT_INB_PKTS*
. PIP_STAT_INB_OCTS*
. PIP_STAT_INB_ERRS*
. PIP_TAG_INC*
. PIP_PRI_TBL*
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_BCK_PRS = PIP's Back Pressure Register
 *
 * When to assert backpressure based on the todo list filling up
 *

     ==============================================================
     PIP_BCK_PRS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    BCKPRS   RO       0           0         PIP is currently asserting backpressure to IOB     |
						  Backpressure from PIP will assert when the	    |
						  entries to the todo list exceed HIWATER.	    |
						  Backpressure will be held until the todo entries  |
						  is less than or equal to LOWATER.		    |
 <62:13> NS       RAZ      0           NS        Reserved				            |
 <12:8>  HIWATER  R/W      24          24        Water mark in the todo list to assert backpressure |
						  Legal values are 1-26.  A 0 value will deadlock   |
						  the machine.  A value > 26, will trash memory	    |
 <7:5>   NS       RAZ      0           NS        Reserved				            |
 <4:0>   LOWATER  R/W      4           4         Water mark in the todo list to release backpressure|
						  The LOWATER value should be < HIWATER.	    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PIP_CLKEN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      0           NS        Reserved				            |
 <0>     CLKEN    R/W      0           0         Controls the conditional clocking within PIP	    |
						  0=Allow HW to control the clocks		    |
						  1=Force the clocks to be always on		    |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_IP_OFFSET = Location of the IP in the workQ entry
 *
 * An 8-byte offset to find the start of the IP header in the data portion of IP workQ entires
 *

     ==============================================================
     PIP_IP_OFFSET Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:3>  NS       RAZ      NS          NS        Reserved				            |
 <2:0>   OFFSET   R/W      0x0         0x0       Number of 8B ticks to include in workQ entry	    |
						  prior to IP data				    |
						  0:  0 Bytes / IP start at WORD4 of workQ entry    |
						  1:  8 Bytes / IP start at WORD5 of workQ entry    |
						  2: 16 Bytes / IP start at WORD6 of workQ entry    |
						  3: 24 Bytes / IP start at WORD7 of workQ entry    |
						  4: 32 Bytes / IP start at WORD8 of workQ entry    |
						  5: 40 Bytes / IP start at WORD9 of workQ entry    |
						  6: 48 Bytes / IP start at WORD10 of workQ entry   |
						  7: 56 Bytes / IP start at WORD11 of workQ entry   |

Notes:
In normal configurations, OFFSET must be set in the 0..4 range to allow the
entire IP and TCP/UDP headers to be buffered in HW and calculate the L4
checksum for TCP/UDP packets.

The MAX value of OFFSET is determined by the the types of packets that can
be sent to PIP as follows...

Packet Type		 MAX OFFSET
IPv4/TCP/UDP		 7
IPv6/TCP/UDP		 5
IPv6/without L4 parsing  6

If the L4 can be ignored, then the MAX OFFSET for IPv6 packets can increase
to 6.  Here are the following programming restrictions for IPv6 packets and
OFFSET==6:

 . PIP_GBL_CTL[TCP_FLAG] == 0
 . PIP_GBL_CTL[L4_LEN]   == 0
 . PIP_GBL_CTL[L4_CHK]   == 0
 . PIP_GBL_CTL[L4_PRT]   == 0
 . PIP_GBL_CTL[L4_MAL]   == 0
 . PIP_DEC_IPSEC[TCP]    == 0
 . PIP_DEC_IPSEC[UDP]    == 0
 . PIP_PRT_TAG[IP6_DPRT] == 0
 . PIP_PRT_TAG[IP6_SPRT] == 0
 . PIP_PRT_TAG[TCP6_TAG] == 0
 . PIP_GBL_CFG[TAG_SYN]  == 0
----------------------------------------------------------------------------------------------------
===


 *
 * PIP_TAG_SECRET = Initial value in tag generation
 *
 * The source and destination IV's provide a mechanism for each Octeon to be unique.
 *

     ==============================================================
     PIP_TAG_SECRET Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:16> DST      R/W      0x0         0x0       Secret for the destination tuple tag CRC calc	    |
 <15:0>  SRC      R/W      0x0         0x0       Secret for the source tuple tag CRC calc	    |
----------------------------------------------------------------------------------------------------
===


 *
 * PIP_TAG_MASK = Mask bit in the tag generation
 *

     ==============================================================
     PIP_TAG_MASK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>  MASK     R/W      0x0         0x0       When set, MASK clears individual bits of lower 16  |
						  bits of the computed tag.  Does not effect RAW    |
						  or INSTR HDR packets.				    |
----------------------------------------------------------------------------------------------------
===


 *
 * PIP_TODO_ENTRY = Head entry of the Todo list (debug only)
 *
 * Summary of the current packet that has completed and waiting to be processed
 *

     ==============================================================
     PIP_TODO_ENTRY Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    VAL      RO       NS          NS        Entry is valid					    |
 <62>    NS       RAZ      NS          NS        Reserved				            |
 <61:0>  ENTRY    RO       NS          NS        Todo list entry summary			    |
----------------------------------------------------------------------------------------------------
===


 *
 * PIP_DEC_IPSEC = UDP or TCP ports to watch for DEC IPSEC
 *
 * PIP sets the dec_ipsec based on TCP or UDP destination port.
 *

     ==============================================================
     PIP_DEC_IPSEC(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:18> NS       RAZ      NS          NS        Reserved				            |
 <17>    TCP      R/W      0x0         0x0       This DPRT should be used for TCP packets           |
 <16>    UDP      R/W      0x0         0x0       This DPRT should be used for UDP packets           |
 <15:0>  DPRT     R/W      0x0000      0x0000    UDP or TCP destination port to match on            |
----------------------------------------------------------------------------------------------------
===


 *
 * PIP_RAW_WORD = The RAW Word2 of the workQ entry.
 *
 * The RAW Word2 to be inserted into the workQ entry of RAWFULL packets.
 *

     ==============================================================
     PIP_RAW_WORD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> NS       RAZ      NS          NS        Reserved				            |
 <55:0>  WORD     R/W      0x0         0x0       Word2 of the workQ entry                           |
                                                  The 8-bit bufs field is still set by HW (IPD)     |
----------------------------------------------------------------------------------------------------
===


 *
 * PIP_QOS_WATCH@ = QOS Watcher Tables
 *
 * Sets up the Configuration CSRs for the four QOS Watchers.
 * Each Watcher can be set to look for a specific protocol,
 * TCP/UDP destination port, or Ethertype to override the
 * default QOS value.
 *

     ==============================================================
     PIP_QOS_WATCH(0..7) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:32> MASK     R/W      0x0         0x0       Mask off a range of values                         |
 <31:30> NS       RAZ      NS          NS        Reserved				            |
 <29:24> GRP      R/W      0x0         0x0       The GRP number of the watcher                      |
 <23>    NS       RAZ      NS          NS        Reserved				            |
 <22:20> WATCHER  R/W      0x0         0x0       The QOS level of the watcher                       |
 <19>    NS       RAZ      NS          NS        Reserved				            |
 <18:16> TYPE     R/W      0x0         0x0       The field for the watcher match against            |
                                                  0   = disable across all ports		    |
						  1   = protocol (ipv4)				    |
						      = next_header (ipv6)			    |
						  2   = TCP destination port			    |
						  3   = UDP destination port			    |
						  4   = Ether type				    |
						  5-7 = Reserved				    |
 <15:0>  MATCH    R/W      0x0000      0x0000    The value to watch for                             |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PIP_FRM_LEN_CHK(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:16> MAXLEN   R/W      0x600       0x600    Byte count for Max-sized frame check                |
						  PIP_PRT_CFGn[MAXERR_EN] enables the check for	    |
						  pkind n and PIP_PRT_CFG[LEN_CHK_SEL] determines   |
						  which set of MAXLEN/MINLEN to use.		    |
						  If enabled, failing packets set the MAXERR	    |
						  interrupt and work-queue entry WORD2[opcode] is   |
						  set to OVER_FCS (0x3, if packet has bad FCS) or   |
						  OVER_ERR (0x4, if packet has good FCS).	    |
						  The effective MAXLEN used by HW is		    |
						  PIP_PRT_CFG[DSA_EN] == 0,			    |
						   PIP_FRM_LEN_CHK[MAXLEN] + 4*VV + 4*VS	    |
						  PIP_PRT_CFG[DSA_EN] == 1,			    |
						   PIP_FRM_LEN_CHK[MAXLEN] + PIP_PRT_CFG[SKIP]+4*VS |
						  If PTP_MODE, the 8B timestamp is prepended to the |
						   packet.  MAXLEN should be increased by 8 to	    |
						   compensate for the additional timestamp field.   |
 <15:0>  MINLEN   R/W      0x40        0x40      Byte count for Min-sized frame check               |
						  PIP_PRT_CFGn[MINERR_EN] enables the check for	    |
						  pkind n and PIP_PRT_CFG[LEN_CHK_SEL] determines   |
						  which set of MAXLEN/MINLEN to use.		    |
						  If enabled, failing packets set the MINERR	    |
						  interrupt and work-queue entry WORD2[opcode] is   |
						  set to UNDER_FCS (0x6, if packet has bad FCS) or  |
						  UNDER_ERR (0x8, if packet has good FCS).	    |
						  If PTP_MODE, the 8B timestamp is prepended to the |
						   packet.  MINLEN should be increased by 8 to	    |
						   compensate for the additional timestamp field.   |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PIP_DSA_SRC_GRP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:60> MAP15    R/W      0x0         0x0       DSA Group Algorithm			            |
 <59:56> MAP14    R/W      0x0         0x0       DSA Group Algorithm			            |
 <55:52> MAP13    R/W      0x0         0x0       DSA Group Algorithm			            |
 <51:48> MAP12    R/W      0x0         0x0       DSA Group Algorithm			            |
 <47:44> MAP11    R/W      0x0         0x0       DSA Group Algorithm			            |
 <43:40> MAP10    R/W      0x0         0x0       DSA Group Algorithm			            |
 <39:36> MAP9     R/W      0x0         0x0       DSA Group Algorithm			            |
 <35:32> MAP8     R/W      0x0         0x0       DSA Group Algorithm			            |
 <31:28> MAP7     R/W      0x0         0x0       DSA Group Algorithm			            |
 <27:24> MAP6     R/W      0x0         0x0       DSA Group Algorithm			            |
 <23:20> MAP5     R/W      0x0         0x0       DSA Group Algorithm			            |
 <19:16> MAP4     R/W      0x0         0x0       DSA Group Algorithm			            |
 <15:12> MAP3     R/W      0x0         0x0       DSA Group Algorithm			            |
 <11:8>  MAP2     R/W      0x0         0x0       DSA Group Algorithm			            |
 <7:4>   MAP1     R/W      0x0         0x0       DSA Group Algorithm			            |
 <3:0>   MAP0     R/W      0x0         0x0       DSA Group Algorithm			            |
						  Use the DSA source id to compute GRP		    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PIP_DSA_VID_GRP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:60> MAP15    R/W      0x0         0x0       DSA Group Algorithm			            |
 <59:56> MAP14    R/W      0x0         0x0       DSA Group Algorithm			            |
 <55:52> MAP13    R/W      0x0         0x0       DSA Group Algorithm			            |
 <51:48> MAP12    R/W      0x0         0x0       DSA Group Algorithm			            |
 <47:44> MAP11    R/W      0x0         0x0       DSA Group Algorithm			            |
 <43:40> MAP10    R/W      0x0         0x0       DSA Group Algorithm			            |
 <39:36> MAP9     R/W      0x0         0x0       DSA Group Algorithm			            |
 <35:32> MAP8     R/W      0x0         0x0       DSA Group Algorithm			            |
 <31:28> MAP7     R/W      0x0         0x0       DSA Group Algorithm			            |
 <27:24> MAP6     R/W      0x0         0x0       DSA Group Algorithm			            |
 <23:20> MAP5     R/W      0x0         0x0       DSA Group Algorithm			            |
 <19:16> MAP4     R/W      0x0         0x0       DSA Group Algorithm			            |
 <15:12> MAP3     R/W      0x0         0x0       DSA Group Algorithm			            |
 <11:8>  MAP2     R/W      0x0         0x0       DSA Group Algorithm			            |
 <7:4>   MAP1     R/W      0x0         0x0       DSA Group Algorithm			            |
 <3:0>   MAP0     R/W      0x0         0x0       DSA Group Algorithm			            |
						  Use the DSA source id to compute GRP		    |
----------------------------------------------------------------------------------------------------
===


 *
 * PIP_PRT_CFG@ = Per port config information
 *

     ==============================================================
     PIP_PRT_CFG(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> NS       RAZ      NS          NS        Reserved				            |
 <55>    NS       RAZ      NS          NS        Reserved				            |
 <54>    IH_PRI     R/W    0x0         0         Use the PRI/QOS field in the instruction header    |
						  as the PRIORITY in BPID calculations.		    |
 <53>	 LEN_CHK_SEL R/W   0x0         0         Selects which PIP_FRM_LEN_CHK register is used	    |
						  for this port-kind for MINERR and MAXERR checks.  |
						  LEN_CHK_SEL=0, use PIP_FRM_LEN_CHK0		    |
						  LEN_CHK_SEL=1, use PIP_FRM_LEN_CHK1		    |
 <52>	 PAD_LEN  R/W      0x0         0         When set, disables the length check for pkts with  |
						  padding in the client data			    |
 <51>	 VLAN_LEN R/W      0x0         0         When set, disables the length check for DSA/VLAN   |
                                                  pkts                                              |
 <50>	 LENERR_EN R/W     0x1         1         L2 length error check enable			    |
						  Frame was received with length error		    |
						   Typically, this check will not be enabled for    |
						   incoming packets on the DPI rings		    |
						   because the CRC bytes may not normally be	    |
						   present.					    |
 <49>	 MAXERR_EN R/W     0x1         1	 Max frame error check enable			    |
						  Frame was received with length > max_length	    |
						  max_length is defined by PIP_FRM_LEN_CHK[MAXLEN]  |
 <48>	 MINERR_EN R/W     0x1         1         Min frame error check enable			    |
						  Frame was received with length < min_length	    |
						   Typically, this check will not be enabled for    |
						   incoming packets on the DPI rings		    |
						   because the CRC bytes may not normally be	    |
						   present.					    |
						   min_length is defined by PIP_FRM_LEN_CHK[MINLEN] |
 <47:44> GRP_WAT_47 R/W    0x0         0x0       GRP Watcher enable				    |
						  (Watchers 4-7)				    |
 <43:40> QOS_WAT_47 R/W    0x0         0x0       QOS Watcher enable				    |
						  (Watchers 4-7)				    |
 <39:37> NS       RAZ      NS          NS        Reserved				            |
 <36>    RAWDRP   R/W      0x0         0x0       Allow the IPD to RED drop a packet.		    |
						  Normally, IPD will never drop a packet in which   |
						  PKT_INST_HDR[R] is set.			    |
						  0=never drop RAW packets based on RED algorithm   |
						  1=allow RAW packet drops based on RED algorithm   |
 <35:34> TAG_INC  R/W	   0x0	       0x0	 Which of the 4 PIP_TAG_INC to use when		    |
						  calculating mask tag hash			    |
 <33>    DYN_RS	  R/W	   0x0	       0x0	 Dynamically calculate RS based on pkt size and	    |
						  configuration.  If DYN_RS is set then		    |
						  PKT_INST_HDR[RS] is not used.  When using 2-byte  |
						  instruction header words, either DYN_RS or	    |
						  PIP_GBL_CTL[IGNRS] should be set.		    |
 <32>    INST_HDR R/W      0x0         0x0       8-byte INST_HDR is present on all packets	    |
						  Normally INST_HDR should be set for packets that  |
						  include a PKT_INST_HDR prepended by DPI hardware. |
						  Must be zero in DSA mode			    |
 <31:28> GRP_WAT  R/W      0x0         0x0       GRP Watcher enable				    |
 <27>    HG_QOS   R/W      0x0         0x0       When set, uses the HiGig priority bits as a	    |
						  lookup into the HG_QOS_TABLE (PIP_HG_PRI_QOS)	    |
						  to determine the QOS value			    |
						  HG_QOS must not be set when HIGIG_EN=0	    |
 <26:24> QOS      R/W      0x0         0x0       Default QOS level of the port                      |
 <23:20> QOS_WAT  R/W      0x0         0x0       QOS Watcher enable                                 |
						  (Watchers 0-3)				    |
 <19>    NS       RAZ      0x0         0x0	 Reserved.  Formerly QOS_VSEL			    |
 <18>    QOS_VOD  R/W      0x0         0x0       QOS VLAN over Diffserv                             |
						  if DSA/VLAN exists, it is used		    |
						  else if IP exists, Diffserv is used		    |
						  else the per port default is used		    |
						  Watchers are still highest priority		    |
 <17>    QOS_DIFF R/W      0x0         0x0       QOS Diffserv                                       |
 <16>    QOS_VLAN R/W      0x0         0x0       QOS VLAN                                           |
 <15:13> NS       RAZ      NS          NS        Reserved				            |
 <12>    CRC_EN   R/W      0x0         0x0       CRC Checking enabled                               |
 <11>    HIGIG_EN R/W      0x0         0x0       Enable HiGig parsing				    |
						  Normally HIGIG_EN should be clear for packets that|
						  include a PKT_INST_HDR prepended by DPI hardware. |
						  Should not be set for ports in which PTP_MODE=1   |
                                                  When HIGIG_EN=1:                                  |
                                                   DSA_EN field below must be zero                  |
                                                   SKIP field below is both Skip I size and the     |
                                                     size of the HiGig* header (12 or 16 bytes)     |
 <10>    DSA_EN   R/W      0x0         0x0       Enable DSA tag parsing				    |
						  Should not be set for ports in which PTP_MODE=1   |
                                                  When DSA_EN=1:                                    |
                                                   HIGIG_EN field above must be zero                |
                                                   SKIP field below is size of DSA tag (4, 8, or    |
                                                     12 bytes) rather than the size of Skip I       |
                                                   total SKIP (Skip I + header + Skip II            |
                                                     must be zero                                   |
                                                   INST_HDR field above must be zero                |
                                                   For DPI rings, DPI hardware must not prepend     |
                                                   a PKT_INST_HDR when DSA_EN=1.                    |
                                                   MODE field below must be "skip to L2"            |
 <9:8>   MODE     R/W      0x0         0x0       Parse Mode                                         |
                                                  0 = no packet inspection (Uninterpreted)	    |
                                                  1 = L2 parsing / skip to L2			    |
						  2 = IP parsing / skip to L3			    |
						  3 = (illegal)	                                    |
                                                  Must be 2 ("skip to L2") when in DSA mode.        |
 <7>     NS       RAZ      NS          NS        Reserved				            |
 <6:0>   SKIP     R/W      0x0         0x0       Optional Skip I amount for packets.		    |
						  Should normally be zero for  packets on	    |
						  DPI rings when a PKT_INST_HDR is prepended by DPI |
						  hardware.					    |
                                                  See section 7.2.7 - Legal Skip Values for further |
                                                  details.   			                    |
						  In DSA mode, indicates the DSA header length, not |
                                                    Skip I size. (Must be 4,8,or 12)                |
                                                  In HIGIG mode, indicates both the Skip I size and |
                                                    the HiGig header size (Must be 12 or 16).       |
						  If PTP_MODE, the 8B timestamp is prepended to the |
						   packet.  SKIP should be increased by 8 to	    |
						   compensate for the additional timestamp field.   |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PIP_PRT_CFGB(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:24> NS       RAZ      NS          NS        Reserved				            |
 <23:16> BASE     R/W	   0x0         0         Base priority address into the table		    |
 <15:6>  NS       RAZ      NS          NS        Reserved				            |
 <5:0>   BPID     R/W      0x0         NS        Default BPID to use for packets on this port-kind. |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_PRT_TAG@ = Per port config information
 *

     ==============================================================
     PIP_PRT_TAG(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:54> NS       RAZ      NS          NS        Reserved				            |
 <53>    PORTADD_EN R/W    0           0         Enables PIP to optionally increment the incoming   |
						  port from the MACs based on port-kind		    |
						  configuration and packet contents.		    |
 <52>    INC_HWCHK  R/W    0           0         Include the HW_checksum into WORD0 of the WQE	    |
						  instead of the L4PTR.  This mode will be	    |
						  deprecated in future products.		    |
 <51:50> NS         RAZ    NS          NS        Reserved for further GRPTAGBASE_MSB expansion.     |
 <49:48> GRPTAGBASE_MSB R/W 0	       0         Most significant 2 bits of the GRPTAGBASE value.   |
 <47:46> NS         RAZ    NS          NS        Reserved for further GRPTAGMASK_MSB expansion      |
 <45:44> GRPTAGMASK_MSB R/W 0	       0         Most significant 2 bits of the GRPTAGMASK value.   |
						  group when GRPTAG is set.			    |
 <43:42> NS         RAZ    NS          NS        Reserved for further GRP_MSB expansion	            |
 <41:40> GRP_MSB    R/W    0x0         0x0       Most significant 2 bits of the 6-bit value	    |
						  indicating the group to schedule to.		    |
 <39:36> GRPTAGBASE R/W	   0	       0         Offset to use when computing group from tag bits   |
						  when GRPTAG is set.				    |
 <35:32> GRPTAGMASK R/W	   0	       0         Which bits of the tag to exclude when computing    |
						  group when GRPTAG is set.			    |
 <31>    GRPTAG   R/W      0x0         0x0       When set, use the lower bit of the tag to compute  |
						  the group in the work queue entry		    |
						  GRP = WQE[TAG[3:0]] & ~GRPTAGMASK + GRPTAGBASE    |
 <30>    GRPTAG_MSKIP R/W  0x0         0x0       When set, GRPTAG will be used regardless if the    |
						  packet IS_IP.					    |
 <29:28> TAG_MODE R/W	   0x0	       0x0	 Which tag algorithm to use			    |
						  0 = always use tuple tag algorithm		    |
						  1 = always use mask tag algorithm		    |
						  2 = if packet is IP, use tuple else use mask	    |
						  3 = tuple XOR mask				    |
 <27:26> INC_VS   R/W      0x0         0x0       determines the DSA/VLAN ID (VID) to be included in |
						  tuple tag when VLAN stacking is detected	    |
						  0 = do not include VID in tuple tag generation    |
						  1 = include VID (VLAN0) in hash		    |
						  2 = include VID (VLAN1) in hash		    |
						  3 = include VID ({VLAN0,VLAN1}) in hash	    |
 <25>    INC_VLAN R/W      0x0         0x0       when set, the DSA/VLAN ID is included in tuple tag |
						  when VLAN stacking is not detected		    |
						  0 = do not include VID in tuple tag generation    |
						  1 = include VID in hash			    |
 <24>    INC_PRT  R/W      0x0         0x0       sets whether the port is included in tuple tag     |
 <23>    IP6_DPRT R/W      0x0         0x0       sets whether the TCP/UDP dst port is               |
                                                  included in tuple tag for IPv6 packets            |
 <22>    IP4_DPRT R/W      0x0         0x0       sets whether the TCP/UDP dst port is               |
                                                  included in tuple tag for IPv4                    |
 <21>    IP6_SPRT R/W      0x0         0x0       sets whether the TCP/UDP src port is               |
                                                  included in tuple tag for IPv6 packets            |
 <20>    IP4_SPRT R/W      0x0         0x0       sets whether the TCP/UDP src port is               |
                                                  included in tuple tag for IPv4                    |
 <19>    IP6_NXTH R/W      0x0         0x0       sets whether ipv6 includes next header in tuple    |
						  tag hash					    |
 <18>    IP4_PCTL R/W      0x0         0x0       sets whether ipv4 includes protocol in tuple	    |
						  tag hash					    |
 <17>    IP6_DST  R/W      0x0         0x0       sets whether ipv6 includes dst address in tuple    |
						  tag hash					    |
 <16>    IP4_DST  R/W      0x0         0x0       sets whether ipv4 includes dst address in tuple    |
						  tag hash					    |
 <15>    IP6_SRC  R/W      0x0         0x0       sets whether ipv6 includes src address in tuple    |
						  tag hash					    |
 <14>    IP4_SRC  R/W      0x0         0x0       sets whether ipv4 includes src address in tuple    |
						  tag hash					    |
 <13:12> TCP6_TAG R/W      0x0         0x0       sets the tag_type of a TCP packet (IPv6)           |
                                                  0 = ordered tags				    |
                                                  1 = atomic tags				    |
                                                  2 = Null tags				            |
 <11:10> TCP4_TAG R/W      0x0         0x0       sets the tag_type of a TCP packet (IPv4)           |
                                                  0 = ordered tags				    |
                                                  1 = atomic tags				    |
                                                  2 = Null tags				            |
 <9:8>   IP6_TAG  R/W      0x0         0x0       sets whether IPv6 packet tag type                  |
                                                  0 = ordered tags				    |
                                                  1 = atomic tags				    |
                                                  2 = Null tags				            |
 <7:6>   IP4_TAG  R/W      0x0         0x0       sets whether IPv4 packet tag type                  |
                                                  0 = ordered tags				    |
                                                  1 = atomic tags				    |
                                                  2 = Null tags				            |
 <5:4>   NON_TAG  R/W      0x0         0x0       sets whether non-IP packet tag type                |
                                                  0 = ordered tags				    |
                                                  1 = atomic tags				    |
                                                  2 = Null tags				            |
 <3:0>   GRP      R/W      0x0         0x0       4-bit value indicating the group to schedule to    |
----------------------------------------------------------------------------------------------------
===


 *
 *          PIP Statistics Counters
 *
 * Note: special stat counter behavior
 *
 * 1) Read and write operations must arbitrate for the statistics resources
 *     along with the packet engines which are incrementing the counters.
 *     In order to not drop packet information, the packet HW is always a
 *     higher priority and the CSR requests will only be satisified when
 *     there are idle cycles.  This can potentially cause long delays if the
 *     system becomes full.
 *
 * 2) stat counters can be cleared in two ways.  If PIP_STAT_CTL[RDCLR] is
 *     set, then all read accesses will clear the register.  In addition,
 *     any write to a stats register will also reset the register to zero.
 *     Please note that the clearing operations must obey rule #1 above.
 *
 * 3) all counters are wrapping - software must ensure they are read periodically
 *
 * 4) The counters accumulate statistics for packets that are sent to PKI.  If
 *    PTP_MODE is enabled, the 8B timestamp is prepended to the packet.  This
 *    additional 8B of data is captured in the octet counts.
 *
 * 5) X represents either the packet's port-kind or backpressure ID as
 *    determined by PIP_STAT_CTL[MODE]

 * PIP_STAT0_X = PIP_STAT_DRP_PKTS / PIP_STAT_DRP_OCTS

     ==============================================================
     PIP_STAT0_(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> DRP_PKTS R/W      0x0         NS        Inbound packets marked to be dropped by the IPD    |
						 QOS widget per port				    |
 <31:0>  DRP_OCTS R/W      0x0         NS        Inbound octets marked to be dropped by the IPD     |
						 QOS widget per port				    |
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT1_X = PIP_STAT_OCTS

     ==============================================================
     PIP_STAT1_(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:0>  OCTS     R/W      0x0         NS        Number of octets received by PIP (good and bad)    |
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT2_X = PIP_STAT_PKTS     / PIP_STAT_RAW

     ==============================================================
     PIP_STAT2_(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> PKTS     R/W      0x0         NS        Number of packets processed by PIP                 |
 <31:0>  RAW      R/W      0x0         NS        RAWFULL + RAWSCH Packets without an L1/L2 error    |
                                                  received by PIP per port			    |
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT3_X = PIP_STAT_BCST     / PIP_STAT_MCST

     ==============================================================
     PIP_STAT3_(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> BCST     R/W      0x0         NS        Number of indentified L2 broadcast packets         |
						  Does not include multicast packets		    |
						  Only includes packets whose parse mode is	    |
						  SKIP_TO_L2.					    |
 <31:0>  MCST     R/W      0x0         NS        Number of indentified L2 multicast packets         |
						  Does not include broadcast packets		    |
						  Only includes packets whose parse mode is	    |
						  SKIP_TO_L2.					    |
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT4_X = PIP_STAT_HIST1    / PIP_STAT_HIST0

     ==============================================================
     PIP_STAT4_(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> H65to127 R/W      0x0         NS        Number of 65-127B packets		            |
 <31:0>  H64      R/W      0x0         NS        Number of 1-64B packets                            |
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT5_X = PIP_STAT_HIST3    / PIP_STAT_HIST2

     ==============================================================
     PIP_STAT5_(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> H256to511 R/W     0x0         NS        Number of 256-511B packets		            |
 <31:0>  H128to255 R/W     0x0         NS        Number of 128-255B packets                         |
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT6_X = PIP_STAT_HIST5    / PIP_STAT_HIST4

     ==============================================================
     PIP_STAT6_(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> H1024to1518 R/W   0x0         NS        Number of 1024-1518B packets		            |
 <31:0>  H512to1023  R/W   0x0         NS        Number of 512-1023B packets                        |
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT7_X = PIP_STAT_FCS      / PIP_STAT_HIST6

     ==============================================================
     PIP_STAT7_(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> FCS      R/W      0x0         NS        Number of packets with FCS or Align opcode errors    |
 <31:0>  H1519    R/W      0x0         NS        Number of 1519-max packets                           |
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT8_X = PIP_STAT_FRAG     / PIP_STAT_UNDER

     ==============================================================
     PIP_STAT8_(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> FRAG     R/W     0x0          NS        Number of packets with length < min and FCS error  |
 <31:0>  UNDERSZ  R/W     0x0          NS        Number of packets with length < min                |
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT9_X = PIP_STAT_JABBER   / PIP_STAT_OVER

     ==============================================================
     PIP_STAT9_(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> JABBER   R/W     0x0          NS        Number of packets with length > max and FCS error  |
 <31:0>  OVERSZ   R/W     0x0          NS        Number of packets with length > max                |
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT10_X = PIP_STAT_L2_MCAST / PIP_STAT_L2_BCAST

     ==============================================================
     PIP_STAT10_(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> BCAST    R/W     0x0          NS        Number of packets with L2 Broadcast DMAC	    |
						  that were dropped due to RED.			    |
						  The HW will consider a packet to be an L2	    |
						  broadcast packet when the 48-bit DMAC is all 1's. |
						  Only applies when the parse mode for the packet   |
						  is SKIP-TO-L2.				    |
 <31:0>  MCAST    R/W     0x0          NS        Number of packets with L2 Mulitcast DMAC	    |
						  that were dropped due to RED.			    |
						  The HW will consider a packet to be an L2	    |
						  multicast packet when the least-significant bit   |
						  of the first byte of the DMAC is set and the	    |
						  packet is not an L2 broadcast packet.		    |
						  Only applies when the parse mode for the packet   |
						  is SKIP-TO-L2.				    |
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT11_X = PIP_STAT_L3_MCAST / PIP_STAT_L3_BCAST

     ==============================================================
     PIP_STAT11_(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> BCAST    R/W     0x0          NS        Number of packets with L3 Broadcast Dest Address   |
						  that were dropped due to RED.			    |
						  The HW considers an IPv4 packet to be broadcast   |
						  when all bits are set in the MSB of the	    |
						  destination address. IPv6 does not have the	    |
						  concept of a broadcast packets.		    |
						  Only applies when the parse mode for the packet   |
						  is SKIP-TO-L2 and the packet is IP or the parse   |
						  mode for the packet is SKIP-TO-IP.		    |
 <31:0>  MCAST    R/W     0x0          NS        Number of packets with L3 Multicast Dest Address   |
						  that were dropped due to RED.			    |
						  The HW considers an IPv4 packet to be multicast   |
						  when the most-significant nibble of the 32-bit    |
						  destination address is 0xE (i.e. it is a class D  |
						  address). The HW considers an IPv6 packet to be   |
						  multicast when the most-significant byte of the   |
						  128-bit destination address is all 1's.	    |
						  Only applies when the parse mode for the packet   |
						  is SKIP-TO-L2 and the packet is IP or the parse   |
						  mode for the packet is SKIP-TO-IP.		    |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_STAT_INB_PKTS_PKND@ = Inbound packets received by PIP per pkind
 *
 * Inbound stats collect all data sent to PIP from all packet interfaces.
 * Its the raw counts of everything that comes into the block.  The counts
 * will reflect all error packets and packets dropped by the PKI RED engine.
 * These counts are intended for system debug, but could convey useful
 * information in production systems.
 *

     ==============================================================
     PIP_STAT_INB_PKTS_PKND(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>  PKTS     R/W      0x0         NS        Number of packets without errors                   |
						  received by PIP				    |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_STAT_INB_OCTS_PKND@ = Inbound octets received by PIP per pkind
 *
 * Inbound stats collect all data sent to PIP from all packet interfaces.
 * Its the raw counts of everything that comes into the block.  The counts
 * will reflect all error packets and packets dropped by the PKI RED engine.
 * These counts are intended for system debug, but could convey useful
 * information in production systems. The OCTS will include the bytes from
 * timestamp fields in PTP_MODE.
 *

     ==============================================================
     PIP_STAT_INB_OCTS_PKND(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:0>  OCTS     R/W      0x0         NS        Total number of octets from all packets received   |
						  by PIP					    |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_STAT_INB_ERRS_PKND@ = Inbound error packets received by PIP per pkind
 *
 * Inbound stats collect all data sent to PIP from all packet interfaces.
 * Its the raw counts of everything that comes into the block.  The counts
 * will reflect all error packets and packets dropped by the PKI RED engine.
 * These counts are intended for system debug, but could convey useful
 * information in production systems.
 *

     ==============================================================
     PIP_STAT_INB_ERRS_PKND(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |
 <15:0>  ERRS     R/W      0x0         NS        Number of packets with errors                      |
						  received by PIP				    |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_TAG_INC = Which bytes to include in the new tag hash algorithm
 *
*# $PIP_TAG_INC@ = 0x300+@ @=(0..63) RegType=(RSL) RtlReg=(pip_tag_inc_csr_direct_TestbuilderTask)

     ==============================================================
     PIP_TAG_INC(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |
 <7:0>   EN       R/W      0x0         0x0       Which bytes to include in mask tag algorithm       |
						  Broken into 4, 16-entry masks to cover 128B	    |
						  PIP_PRT_CFG[TAG_INC] selects 1 of 4 to use	    |
						  registers  0-15 map to PIP_PRT_CFG[TAG_INC] == 0  |
						  registers 16-31 map to PIP_PRT_CFG[TAG_INC] == 1  |
						  registers 32-47 map to PIP_PRT_CFG[TAG_INC] == 2  |
						  registers 48-63 map to PIP_PRT_CFG[TAG_INC] == 3  |
						  [7] corresponds to the MSB of the 8B word	    |
						  [0] corresponds to the LSB of the 8B word	    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PIP_PRI_TBL(0..255) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> DIFF2_PADD R/W     0x0         0x0       Diffserv port-add                                 |
 <55:48> HG2_PADD   R/W     0x0         0x0       HG_PRI port-add                                   |
 <47:40> VLAN2_PADD R/W     0x0         0x0       VLAN port-add                                     |
 <39:38> NS         RAZ     NS          NS        Reserved				            |
 <37:32> DIFF2_BPID R/W     0x0         0x0       Diffserv backpressure ID                          |
 <31:30> NS         RAZ     NS          NS        Reserved				            |
 <29:24> HG2_BPID   R/W     0x0         0x0       HG_PRI backpressure ID                            |
 <23:22> NS         RAZ     NS          NS        Reserved				            |
 <21:16> VLAN2_BPID R/W     0x0         0x0       VLAN backpressure ID                              |
 <15:12> NS         RAZ     NS          NS        Reserved				            |
 <11>    NS         RAZ     NS          NS        Reserved				            |
 <10:8>  DIFF2_QOS  R/W     0x0         0x0       Diffserv QOS level                                |
 <7>     NS         RAZ     NS          NS        Reserved				            |
 <6:4>   HG2_QOS    R/W     0x0         0x0       HG_PRI QOS level                                  |
 <3>     NS         RAZ     NS          NS        Reserved				            |
 <2:0>   VLAN2_QOS  R/W     0x0         0x0       VLAN QOS level                                    |

Notes:

The priority level from HiGig header is as follows

HiGig/HiGig+ PRI = {1'b0, CNG[1:0], COS[2:0]}
HiGig2       PRI = {DP[1:0], TC[3:0]}

DSA          PRI = WORD0[15:13]

VLAN         PRI = VLAN[15:13]

DIFFSERV         = IP.TOS/CLASS<7:2>
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PIP_SUB_PKIND_FCS(0..0) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  PORT_BIT  R/W      0xffffffffffffffff  0xffffffffffffffff    When set '1', the pkind corresponding to the bit
                                                                      position set, will subtract the FCS for packets
                                                                      on that pkind.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_FLAGS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS           RAZ       NS          NS       RESERVED
 <6>     DIS_PERF1    R/W       0           0        Set to disable command word prefetching
 <5>     DIS_PERF0    R/W       0           0        Set to disable read performance optimizations
 <4>     ENA_THROTTLE R/W       0           0        Set to enable the PKO picker throttle logic
                                                     When ENA_THROTTLE=1 and the most-significant
                                                     bit of any of the pipe or interface, word or
                                                     packet throttle count is set, then PKO will
                                                     not output any packets to the interface/pipe.
                                                     See PKO_MEM_THROTTLE_PIPE and
                                                     PKO_MEM_THROTTLE_INT.
 <3>     RESET        RAZ       0           0        Reset oneshot pulse
 <2>     STORE_BE     R/W       0           0        Force STORE0 byte write address to big endian
 <1>     ENA_DWB      R/W       0           0        Set to enable DontWriteBacks
 <0>     ENA_PKO      R/W       0           0        Set to enable the PKO picker

Notes:
 When set, ENA_PKO enables the PKO picker and places the PKO in normal operation.  When set, ENA_DWB
 enables the use of DontWriteBacks during the buffer freeing operations.  When not set, STORE_BE inverts
 bits[2:0] of the STORE0 byte write address.  When set, RESET causes a 4-cycle reset pulse to the
 entire box.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PKO_REG_READ_IDX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        RESERVED
 <15:8>  INC      R/W      0           0         Increment to add to current index for next index
 <7:0>   IDX      R/W      0           0         Index to use for next memory CSR read

Notes:
 Provides the read index during a CSR read operation to any of the CSRs that are physically stored
 as memories.  The names of these CSRs begin with the prefix "PKO_MEM_".
 IDX[7:0] is the read index.  INC[7:0] is an increment that is added to IDX[7:0] after any CSR read.
 The intended use is to initially write this CSR such that IDX=0 and INC=1.  Then, the entire
 contents of a CSR memory can be read with consecutive CSR read commands.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_CMD_BUF Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:23> NS       RAZ      NS          NS        RESERVED
 <22:20> POOL     R/W      0           0         Free list used to free command buffer segments
 <19:13> NS       R/W      0           0         MBZ
 <12:0>  SIZE     R/W      0           0         Number of uint64s per command buffer segment

Notes:
 Sets the command buffer parameters
 The size of the command buffer segments is measured in uint64s.  The pool specifies (1 of 8 free
 lists to be used when freeing command buffer segments.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_QUEUE_MODE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        RESERVED
 <1:0>   MODE     R/W      0           0         # of queues = 256 >> MODE, 0 <= MODE <=3

Notes:
 Sets the number of queues and amount of local storage per queue
 The system has a total of 256 queues and (256*8) words of local command storage.  This CSR sets the
 number of queues that are used.  Increasing the value of MODE by 1 decreases the number of queues
 by a power of 2 and increases the local storage per queue by a power of 2.
 MODEn queues storage/queue
 0     256     64B ( 8 words)
 1     128    128B (16 words)
 2      64    256B (32 words)
 3      32    512B (64 words)
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_ENGINE_INFLIGHT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:60> ENGINE15 R/W      8           8         Maximum number of inflight packets for engine15
 <59:56> ENGINE14 R/W      8           8         Maximum number of inflight packets for engine14
 <55:52> ENGINE13 R/W      8           8         Maximum number of inflight packets for engine13
 <51:48> ENGINE12 R/W      8           8         Maximum number of inflight packets for engine12
 <47:44> ENGINE11 R/W      8           8         Maximum number of inflight packets for engine11
 <43:40> ENGINE10 R/W      8           8         Maximum number of inflight packets for engine10
 <39:36> ENGINE9  R/W      8           8         Maximum number of inflight packets for engine9
 <35:32> ENGINE8  R/W      8           8         Maximum number of inflight packets for engine8
 <31:28> ENGINE7  R/W      8           8         Maximum number of inflight packets for engine3
 <27:24> ENGINE6  R/W      8           8         Maximum number of inflight packets for engine3
 <23:20> ENGINE5  R/W      8           8         Maximum number of inflight packets for engine3
 <19:16> ENGINE4  R/W      8           8         Maximum number of inflight packets for engine3
 <15:12> ENGINE3  R/W      8           8         Maximum number of inflight packets for engine3
 <11:8>  ENGINE2  R/W      8           8         Maximum number of inflight packets for engine2
 <7:4>   ENGINE1  R/W      8           8         Maximum number of inflight packets for engine1
 <3:0>   ENGINE0  R/W      8           8         Maximum number of inflight packets for engine0

Notes:
 Sets the maximum number of inflight packets, per engine.  Values greater than 8 are illegal.
 Setting an engine's value to 0 effectively stops the engine.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_ENGINE_THRESH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:20> NS       RAZ      NS          NS        RESERVED
 <19:0>  MASK     R/W      0           0         Mask[n]=0 disables packet send threshold for engine n
                                                 Mask[n]=1 enables  packet send threshold for engine n  $PR       NS

Notes:
 When not enabled, packet data may be sent as soon as it is written to the engines's local storage.
 When enabled and the packet fits entirely in the engine's local storage, none of the packet data will
 be sent until all of it has been written into the engine's local storage.  A packet is considered to
 fit entirely only if the packet's size is <= ENGINE_STORAGE_IN_BYTES-8.  When enabled and the packet
 does not fit entirely in the engine's local storage, none of the packet data will be sent until at
 least ENGINE_STORAGE_IN_BYTES-256 bytes of the packet have been written into the engines's local
 storage.  Note that ENGINE_STORAGE_IN_BYTES is a function of PKO_REG_ENGINE_STORAGE* above)
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_TIMESTAMP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        RESERVED
 <3:0>   WQE_WORD R/W      2           2         Specifies the 8-byte word in the WQE to which a PTP
                                                 timestamp is written.  Values 0 and 1 are illegal.

Notes:
 None.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_LOOPBACK_PKIND Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:59> NS        RAZ      NS          NS        RESERVED
 <58:53> PKIND7    R/W      0           0         Loopback port 7 port-kind
 <52>    NS        RAZ      NS          NS        RESERVED
 <51:46> PKIND6    R/W      0           0         Loopback port 6 port-kind
 <45>    NS        RAZ      NS          NS        RESERVED
 <44:39> PKIND5    R/W      0           0         Loopback port 5 port-kind
 <38>    NS        RAZ      NS          NS        RESERVED
 <37:32> PKIND4    R/W      0           0         Loopback port 4 port-kind
 <31>    NS        RAZ      NS          NS        RESERVED
 <30:25> PKIND3    R/W      0           0         Loopback port 3 port-kind
 <24>    NS        RAZ      NS          NS        RESERVED
 <23:18> PKIND2    R/W      0           0         Loopback port 2 port-kind
 <17>    NS        RAZ      NS          NS        RESERVED
 <16:11> PKIND1    R/W      0           0         Loopback port 1 port-kind
 <10>    NS        RAZ      NS          NS        RESERVED
 <9:4>   PKIND0    R/W      0           0         Loopback port 0 port-kind
 <3:0>   NUM_PORTS R/W      0           0         Number of loopback ports, 0 <= NUM_PORTS <= 8

Notes:
 None.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PKO_REG_LOOPBACK_BPID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:59> NS        RAZ      NS          NS        RESERVED
 <58:53> BPID7     R/W      0           0         Loopback port 7 backpressure-ID
 <52>    NS        RAZ      NS          NS        RESERVED
 <51:46> BPID6     R/W      0           0         Loopback port 6 backpressure-ID
 <45>    NS        RAZ      NS          NS        RESERVED
 <44:39> BPID5     R/W      0           0         Loopback port 5 backpressure-ID
 <38>    NS        RAZ      NS          NS        RESERVED
 <37:32> BPID4     R/W      0           0         Loopback port 4 backpressure-ID
 <31>    NS        RAZ      NS          NS        RESERVED
 <30:25> BPID3     R/W      0           0         Loopback port 3 backpressure-ID
 <24>    NS        RAZ      NS          NS        RESERVED
 <23:18> BPID2     R/W      0           0         Loopback port 2 backpressure-ID
 <17>    NS        RAZ      NS          NS        RESERVED
 <16:11> BPID1     R/W      0           0         Loopback port 1 backpressure-ID
 <10>    NS        RAZ      NS          NS        RESERVED
 <9:4>   BPID0     R/W      0           0         Loopback port 0 backpressure-ID
 <3:0>   NS        RAZ      NS          NS        RESERVED

Notes:
 None.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PKO_REG_MIN_PKT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> SIZE7    R/W      0           0         Minimum packet size-1 in bytes                                NS
 <55:48> SIZE6    R/W      0           0         Minimum packet size-1 in bytes                                NS
 <47:40> SIZE5    R/W      0           0         Minimum packet size-1 in bytes                                NS
 <39:32> SIZE4    R/W      0           0         Minimum packet size-1 in bytes                                NS
 <31:24> SIZE3    R/W      0           0         Minimum packet size-1 in bytes                                NS
 <23:16> SIZE2    R/W      0           0         Minimum packet size-1 in bytes                                NS
 <15:8>  SIZE1    R/W      0           0         Minimum packet size-1 in bytes                                NS
 <7:0>   SIZE0    RO       0           0         Minimum packet size-1 in bytes                                NS

Notes:
 This CSR is used with PKO_MEM_IPORT_PTRS[MIN_PKT] to select the minimum packet size.  Packets whose
 size in bytes < (SIZEn+1) are zero-padded to (SIZEn+1) bytes.  Note that this does not include CRC bytes.
 SIZE0=0 is read-only and is used when no padding is desired.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_THROTTLE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      0           0         RESERVED                                                      NS
 <31:0>  INT_MASK R/W      0           0         Mask to enable THROTTLE count updates per interface           NS

Notes:
 This CSR is used with PKO_MEM_THROTTLE_PIPE and PKO_MEM_THROTTLE_INT.  INT_MASK corresponds to the
 interfaces listed in the description for PKO_MEM_IPORT_PTRS[INT].  Set INT_MASK[N] to enable the
 updating of PKO_MEM_THROTTLE_PIPE and PKO_MEM_THROTTLE_INT counts for packets destined for
 interface N.  INT_MASK has no effect on the updates caused by CSR writes to PKO_MEM_THROTTLE_PIPE
 and PKO_MEM_THROTTLE_INT.  Note that this does not disable the throttle logic, just the updating of
 the interface counts.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_BIST_RESULT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:35> NS       RAZ       NS          NS       RESERVED
 <34:34> CSR      RO        X           0        BiST result of CSR      memories (0=pass, !0=fail)
 <33:33> IOB      RO        X           0        BiST result of IOB      memories (0=pass, !0=fail)
 <32:32> OUT_DAT  RO        X           0        BiST result of OUT_DAT  memories (0=pass, !0=fail)
 <31>    NS       RAZ       NS          NS       RESERVED
 <30:29> OUT_CTL  RO        X           0        BiST result of OUT_CTL  memories (0=pass, !0=fail)
 <28:28> OUT_STA  RO        X           0        BiST result of OUT_STA  memories (0=pass, !0=fail)
 <27:27> OUT_WIF  RO        X           0        BiST result of OUT_WIF  memories (0=pass, !0=fail)
 <26:24> PRT_CHK  RO        X           0        BiST result of PRT_CHK  memories (0=pass, !0=fail)
 <23:23> PRT_NXT  RO        X           0        BiST result of PRT_NXT  memories (0=pass, !0=fail)
 <22>    PRT_PSB7 RO        X           0        BiST result of PRT_PSB  memories (0=pass, !0=fail)
 <21>    NS       RAZ       NS          NS       RESERVED
 <20:15> PRT_PSB  RO        X           0        BiST result of PRT_PSB  memories (0=pass, !0=fail)
 <14:13> NCB_INB  RO        X           0        BiST result of NCB_INB  memories (0=pass, !0=fail)
 <12:11> PRT_QCB  RO        X           0        BiST result of PRT_QCB  memories (0=pass, !0=fail)
 <10:8>  PRT_QSB  RO        X           0        BiST result of PRT_QSB  memories (0=pass, !0=fail)
 <7:6>   PRT_CTL  RO        X           0        BiST result of PRT_CTL  memories (0=pass, !0=fail)
 <5:4>   DAT_DAT  RO        X           0        BiST result of DAT_DAT  memories (0=pass, !0=fail)
 <3:0>   DAT_PTR  RO        X           0        BiST result of DAT_PTR  memories (0=pass, !0=fail)

Notes:
 Access to the internal BiST results
 Each bit is the BiST result of an individual memory (per bit, 0=pass and 1=fail).
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_ERROR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        RESERVED
 <3>     LOOPBACK R/W1C    0           0         A packet was sent to an illegal loopback port
 <2>     CURRZERO R/W1C    0           0         A packet data pointer has size=0
 <1>     DOORBELL R/W1C    0           0         A doorbell count has overflowed
 <0>     PARITY   R/W1C    0           0         Read parity error at port data buffer

Notes:
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_INT_MASK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        RESERVED
 <3>     LOOPBACK R/W      0           0         Bit mask corresponding to PKO_REG_ERROR[3] above
 <2>     CURRZERO R/W      0           0         Bit mask corresponding to PKO_REG_ERROR[2] above
 <1>     DOORBELL R/W      0           0         Bit mask corresponding to PKO_REG_ERROR[1] above
 <0>     PARITY   R/W      0           0         Bit mask corresponding to PKO_REG_ERROR[0] above

Notes:
 When a mask bit is set, the corresponding interrupt is enabled.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_DEBUG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ASSERTS  RO       0           0         Various assertion checks

Notes:
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_DEBUG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ASSERTS  RO       0           0         Various assertion checks

Notes:
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_DEBUG2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ASSERTS  RO       0           0         Various assertion checks

Notes:
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_DEBUG3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ASSERTS  RO       0           0         Various assertion checks

Notes:
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_DEBUG4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ASSERTS  RO       0           0         Various assertion checks

Notes:
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_QUEUE_PREEMPT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2> NS        RAZ      NS           NS       RESERVED
 <1>    PREEMPTEE R/W      0            0        Allow this QID to be preempted.
                                                 0=cannot be preempted, 1=can be preempted
 <0>    PREEMPTER R/W      0            0        Preempts the servicing of packet on PID to
                                                 allow this QID immediate servicing.  0=do not cause
                                                 preemption, 1=cause preemption.  Per PID, at most
                                                 1 QID can have this bit set.

Notes:
 Per QID, setting both PREEMPTER=1 and PREEMPTEE=1 is illegal and sets only PREEMPTER=1.
 This CSR is used with PKO_MEM_IQUEUE_PTRS.  When programming queues, the
 programming sequence must first write PKO_REG_QUEUE_PREEMPT and then
 PKO_MEM_IQUEUE_PTRS for each queue.
 See the descriptions of PKO_MEM_IQUEUE_PTRS for further explanation of queue programming.

 Also, PKO_REG_ENGINE_INFLIGHT must be at least 2 for any engine on which preemption is enabled.
 Also, PKO_REG_THROTTLE must be disabled for any interface on which preemption may occur.

----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_PREEMPT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS           NS       RESERVED
 <15:0>  MIN_SIZE R/W      0            0        Threshhold for packet preemption, measured in bytes.
                                                 Only packets which have at least MIN_SIZE bytes
                                                 remaining to be read can be preempted.
Notes:
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_ENGINE_STORAGE(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:60> ENGINE15 R/W      1           1         Number of contiguous 2KB chunks allocated to
                                                 engine (@ * 16) + 15.
                                                 ENGINE15 does not exist and is reserved in
                                                 PKO_REG_ENGINE_STORAGE1.
 <59:56> ENGINE14 R/W      1           1         Number of contiguous 2KB chunks allocated to
                                                 engine (@ * 16) + 14.
                                                 ENGINE14 does not exist and is reserved in
                                                 PKO_REG_ENGINE_STORAGE1.
 <55:52> ENGINE13 R/W      1           1         Number of contiguous 2KB chunks allocated to
                                                 engine (@ * 16) + 13.
                                                 ENGINE13 does not exist and is reserved in
                                                 PKO_REG_ENGINE_STORAGE1.
 <51:48> ENGINE12 R/W      1           1         Number of contiguous 2KB chunks allocated to
                                                 engine (@ * 16) + 12.
                                                 ENGINE12 does not exist and is reserved in
                                                 PKO_REG_ENGINE_STORAGE1.
 <47:44> ENGINE11 R/W      1           1         Number of contiguous 2KB chunks allocated to
                                                 engine (@ * 16) + 11.
                                                 ENGINE11 does not exist and is reserved in
                                                 PKO_REG_ENGINE_STORAGE1.
 <43:40> ENGINE10 R/W      1           1         Number of contiguous 2KB chunks allocated to
                                                 engine (@ * 16) + 10.
                                                 ENGINE10 does not exist and is reserved in
                                                 PKO_REG_ENGINE_STORAGE1.
 <39:36> ENGINE9  R/W      1           1         Number of contiguous 2KB chunks allocated to
                                                 engine (@ * 16) + 9.
                                                 ENGINE9 does not exist and is reserved in
                                                 PKO_REG_ENGINE_STORAGE1.
 <35:32> ENGINE8  R/W      1           1         Number of contiguous 2KB chunks allocated to
                                                 engine (@ * 16) + 8.
                                                 ENGINE8 does not exist and is reserved in
                                                 PKO_REG_ENGINE_STORAGE1.
 <31:28> ENGINE7  R/W      1           1         Number of contiguous 2KB chunks allocated to
                                                 engine (@ * 16) + 7.
                                                 ENGINE7 does not exist and is reserved in
                                                 PKO_REG_ENGINE_STORAGE1.
 <27:24> ENGINE6  R/W      1           1         Number of contiguous 2KB chunks allocated to
                                                 engine (@ * 16) + 6.
                                                 ENGINE6 does not exist and is reserved in
                                                 PKO_REG_ENGINE_STORAGE1.
 <23:20> ENGINE5  R/W      1           1         Number of contiguous 2KB chunks allocated to
                                                 engine (@ * 16) + 5.
                                                 ENGINE5 does not exist and is reserved in
                                                 PKO_REG_ENGINE_STORAGE1.
 <19:16> ENGINE4  R/W      1           1         Number of contiguous 2KB chunks allocated to
                                                 engine (@ * 16) + 4.
                                                 ENGINE4 does not exist and is reserved in
                                                 PKO_REG_ENGINE_STORAGE1.
 <15:12> ENGINE3  R/W      1           1         Number of contiguous 2KB chunks allocated to
                                                 engine (@ * 16) + 3.
 <11:8>  ENGINE2  R/W      1           1         Number of contiguous 2KB chunks allocated to
                                                 engine (@ * 16) + 2.
 <7:4>   ENGINE1  R/W      1           1         Number of contiguous 2KB chunks allocated to
                                                 engine (@ * 16) + 1.
 <3:0>   ENGINE0  R/W      1           1         Number of contiguous 2KB chunks allocated to
                                                 engine (@ * 16) + 0.

Notes:
  The PKO has 40KB of local storage, consisting of 20, 2KB chunks.  Up to 15 contiguous chunks may be mapped per engine.
  The total of all mapped storage must not exceed 40KB.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_ENGINE_INFLIGHT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        RESERVED
 <15:12> ENGINE19 R/W      8           8         Maximum number of inflight packets for engine19
 <11:8>  ENGINE18 R/W      8           8         Maximum number of inflight packets for engine18
 <7:4>   ENGINE17 R/W      8           8         Maximum number of inflight packets for engine17
 <3:0>   ENGINE16 R/W      8           8         Maximum number of inflight packets for engine16

Notes:
 Sets the maximum number of inflight packets, per engine.  Values greater than 8 are illegal.
 Setting an engine's value to 0 effectively stops the engine.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_PORT_RATE0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:51> NS        RAZ      NS          NS       RESERVED
 <50:32> RATE_WORD R/W      X           0        Rate limiting adder per 8 byte
 <31:8>  RATE_PKT  R/W      X           0        Rate limiting adder per packet
 <7>     NS        RAZ      NS          NS       RESERVED
 <6:0>   PID       R/W      X           0        PKO-Internal Port ID

Notes:
 The "8 byte" quantity to which RATE_WORD refers includes the sum of all packet, padding, and CRC
 bytes, rounded up tp the next 8 bytes.
 This CSR is a memory of 128 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_PORT_RATE1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS        RAZ      NS          NS       RESERVED
 <31:8>  RATE_LIM  R/W      X           0        Rate limiting accumulator limit
 <7>     NS        RAZ      NS          NS       RESERVED
 <6:0>   PID       R/W      X           0        PKO-Internal Port ID

Notes:
 Writing PKO_MEM_PORT_RATE1[PID,RATE_LIM] has the side effect of setting the corresponding
 accumulator to zero.
 This CSR is a memory of 128 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_IPORT_PTRS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    NS        R/W      X           0        RESERVED
 <62>    CRC       R/W      X           0        Set if this IPID uses CRC
 <61>    STATIC_P  R/W      X           0        Set if this IPID has static priority
 <60:53> QOS_MASK  R/W      X           NS       Mask to control priority across 8 QOS rounds
 <52:50> MIN_PKT   R/W      X           0        Min packet size specified by PKO_REG_MIN_PKT[MIN_PKT]
 <49:32> NS        RAZ      NS          NS       RESERVED
 <31>    NS        RAZ      NS          NS       RESERVED
 <30:24> PIPE      R/W      X           NS       The PKO pipe or loopback port
                                                 When INT != PIP/IPD:
                                                  PIPE is the PKO pipe to which this port is mapped
                                                  All used PKO-internal ports that map to the same
                                                  PIPE must also map to the same INT and EID in
                                                  this case.
                                                 When INT == PIP/IPD:
                                                  PIPE must be in the range
                                                          0..PKO_REG_LOOPBACK[NUM_PORTS]-1
                                                  in this case and selects one of the loopback
                                                  ports.
 <23:21> NS        RAZ      NS          NS       RESERVED
 <20:16> INT       R/W      X           NS       The interface to which this port is mapped
                                                 All used PKO-internal ports that map to the same EID
                                                 must also map to the same INT. All used PKO-internal
                                                 ports that map to the same INT must also map to the
                                                 same EID.
                                                 Encoding:
                                                   0 = GMX0 XAUI/DXAUI/RXAUI0 or SGMII0
                                                   1 = GMX0 SGMII1
                                                   2 = GMX0 SGMII2
                                                   3 = GMX0 SGMII3
                                                   4 = GMX1 RXAUI
                                                   8 = GMX2 XAUI/DXAUI or SGMII0
                                                   9 = GMX2 SGMII1
                                                  10 = GMX2 SGMII2
                                                  11 = GMX2 SGMII3
                                                  12 = GMX3 XAUI/DXAUI or SGMII0
                                                  13 = GMX3 SGMII1
                                                  14 = GMX3 SGMII2
                                                  15 = GMX3 SGMII3
                                                  16 = GMX4 XAUI/DXAUI or SGMII0
                                                  17 = GMX4 SGMII1
                                                  18 = GMX4 SGMII2
                                                  19 = GMX4 SGMII3
                                                  28 = ILK interface 0
                                                  29 = ILK interface 1
                                                  30 = DPI
                                                  31 = PIP/IPD
                                                  others = reserved
 <15:13> NS        RAZ      NS          NS       RESERVED
 <12:8>  EID       R/W      X           NS       Engine ID to which this port is mapped
                                                 EID==31 can be used with unused PKO-internal ports.
                                                 Otherwise, 0-19 are legal EID values.
 <7>     NS        RAZ      NS          NS       RESERVED
 <6:0>   IPID      R/W      X           NS       PKO-internal Port ID to be accessed

Notes:
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_IPORT_QOS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:61> NS        RAZ      NS          NS       RESERVED
 <60:53> QOS_MASK  R/W      X           NS       Mask to control priority across 8 QOS rounds
 <52:13> NS        RAZ      NS          NS       RESERVED
 <12:8>  EID       R/W      X           NS       Engine ID to which this port is mapped
 <7>     NS        RAZ      NS          NS       RESERVED
 <6:0>   IPID      R/W      X           NS       PKO-internal Port ID

Notes:
 Sets the QOS mask, per port.  These QOS_MASK bits are logically and physically the same QOS_MASK
 bits in PKO_MEM_IPORT_PTRS.  This CSR address allows the QOS_MASK bits to be written during PKO
 operation without affecting any other port state.  The engine to which port PID is mapped is engine
 EID.  Note that the port to engine mapping must be the same as was previously programmed via the
 PKO_MEM_IPORT_PTRS CSR.
 This CSR is a memory of 128 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_IQUEUE_PTRS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    S_TAIL   R/W       X           0        Set if this QID is the tail of the static queues
 <62>    STATIC_P R/W       X           0        Set if any QID in this IPID has static priority
 <61>    STATIC_Q R/W       X           0        Set if this QID has static priority
 <60:53> QOS_MASK R/W       X           0        Mask to control priority across 8 QOS rounds
 <52:22> BUF_PTR  R/W       X           0        Command buffer pointer[37:7]
 <21>    TAIL     R/W       X           0        Set if this QID is the tail of the queue array
 <20:16> IDX      WR0       X           0        Index (distance from head) in the queue array
 <15>    RESERVED RAZ       NS          NS       RESERVED
 <14:8>  IPID     WR0       X           0        PKO-Internal Port ID to which this queue is mapped
 <7:0>   QID      R/W       X           0        Queue ID

Notes:
 Sets the queue to port mapping and the initial command buffer pointer, per queue.  Unused queues must
 set BUF_PTR=0.  Each queue may map to at most one port.  No more than 32 queues may map to a port.
 The set of queues that is mapped to a port must be a contiguous array of queues.  The port to which
 queue QID is mapped is port IPID.  The index of queue QID in port IPID's queue list is IDX.  The last
 queue in port IPID's queue array must have its TAIL bit set.
 STATIC_Q marks queue QID as having static priority.  STATIC_P marks the port IPID to which QID is
 mapped as having at least one queue with static priority.  If any QID that maps to IPID has static
 priority, then all QID that map to IPID must have STATIC_P set.  Queues marked as static priority
 must be contiguous and begin at IDX 0.  The last queue that is marked as having static priority
 must have its S_TAIL bit set.
 This CSR is a memory of 256 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_IQUEUE_QOS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:61> NS       RAZ       NS          NS       RESERVED
 <60:53> QOS_MASK R/W       X           0        Mask to control priority across 8 QOS rounds
 <52:16> NS       RAZ       NS          NS       RESERVED
 <15>    RESERVED RAZ       NS          NS       RESERVED
 <14:8>  IPID     WR0       X           0        PKO-Internal Port ID to which this queue is mapped
 <7:0>   QID      R/W       X           0        Queue ID

Notes:
 Sets the QOS mask, per queue.  These QOS_MASK bits are logically and physically the same QOS_MASK
 bits in PKO_MEM_IQUEUE_PTRS.  This CSR address allows the QOS_MASK bits to be written during PKO
 operation without affecting any other queue state.  The port to which queue QID is mapped is port
 IPID.  Note that the queue to port mapping must be the same as was previously programmed via the
 PKO_MEM_IQUEUE_PTRS CSR.
 This CSR is a memory of 256 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_THROTTLE_PIPE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:47> NS        RAZ      NS          NS       RESERVED
 <46:32> WORD      R/W      X           0        On a write, the amount to add to the pipe throttle
                                                 word count selected by PIPE. On a read, returns
                                                 the current value of the pipe throttle word count
                                                 selected by PKO_REG_READ_IDX[IDX].
 <31:14> NS        RAZ      NS          NS       RESERVED
 <13:8>  PACKET    R/W      X           0        On a write, the amount to add to the pipe throttle
                                                 packet count selected by PIPE. On a read, returns
                                                 the current value of the pipe throttle packet count
                                                 selected by PKO_REG_READ_IDX[IDX].
 <7>     NS        RAZ      NS          NS       RESERVED
 <6:0>   PIPE      R/W      X           0        Selected PKO pipe for writes. Undefined on a read.

Notes:
 Writing PACKET and WORD with 0 resets both counts for PIPE to 0 rather than add 0.
 Otherwise, writes to this CSR add to the existing WORD/PACKET counts for the PKO pipe PIPE.

 PKO tracks the number of (8-byte) WORD's and PACKET's in-flight (sum total in both PKO
 and the interface MAC) on the pipe. (When PKO first selects a packet from a PKO queue, it
 increments the counts appropriately. When the interface MAC has (largely) completed sending
 the words/packet, PKO decrements the count appropriately.) When PKO_REG_FLAGS[ENA_THROTTLE]
 is set and the most-significant bit of the WORD or packet count for a PKO pipe is set,
 PKO will not transfer any packets over the PKO pipe. Software can limit the amount of
 packet data and/or the number of packets that OCTEON can send out the chip after receiving backpressure
 from the interface/pipe via these per-pipe throttle counts when PKO_REG_FLAGS[ENA_THROTTLE]=1.
 For example, to limit the number of packets outstanding in the pipe to N, preset PACKET for
 the pipe to the value 0x20-N (0x20 is the smallest PACKET value with the most-significant bit set).

 This CSR is a memory of 128 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_THROTTLE_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:47> NS        RAZ      NS          NS       RESERVED
 <46:32> WORD      R/W      X           0        On a write, the amount to add to the interface
                                                 throttle word count selected by INT. On a read,
                                                 returns the current value of the interface throttle
                                                 word count selected by PKO_REG_READ_IDX[IDX].
 <31:14> NS        RAZ      NS          NS       RESERVED
 <13:8>  PACKET    R/W      X           0        On a write, the amount to add to the interface
                                                 throttle packet count selected by INT. On a read,
                                                 returns the current value of the interface throttle
                                                 packet count selected by PKO_REG_READ_IDX[IDX].
 <7:5>   NS        RAZ      NS          NS       RESERVED
 <4:0>   INT       R/W      X           0        Selected interface for writes. Undefined on a read.
                                                 See PKO_MEM_IPORT_PTRS[INT] for encoding.

Notes:
 Writing PACKET and WORD with 0 resets both counts for INT to 0 rather than add 0.
 Otherwise, writes to this CSR add to the existing WORD/PACKET counts for the interface INT.

 PKO tracks the number of (8-byte) WORD's and PACKET's in-flight (sum total in both PKO
 and the interface MAC) on the interface. (When PKO first selects a packet from a PKO queue, it
 increments the counts appropriately. When the interface MAC has (largely) completed sending
 the words/packet, PKO decrements the count appropriately.) When PKO_REG_FLAGS[ENA_THROTTLE]
 is set and the most-significant bit of the WORD or packet count for a interface is set,
 PKO will not transfer any packets over the interface. Software can limit the amount of
 packet data and/or the number of packets that OCTEON can send out the chip after receiving backpressure
 from the interface/pipe via these per-pipe throttle counts when PKO_REG_FLAGS[ENA_THROTTLE]=1.
 For example, to limit the number of packets outstanding in the interface to N, preset PACKET for
 the pipe to the value 0x20-N (0x20 is the smallest PACKET value with the most-significant bit set).

 This CSR is a memory of 32 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_COUNT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |
 <31:0>  COUNT    R/W1C    X           0         Total number of packets seen by PKO                |

Notes:
 Total number of packets seen by PKO, per port
 A write to this address will clear the entry whose index is specified as COUNT[6:0].
 This CSR is a memory of 128 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_COUNT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |
 <47:0>  COUNT    R/W1C    X           0         Total number of bytes seen by PKO                  |

Notes:
 Total number of bytes seen by PKO, per port
 A write to this address will clear the entry whose index is specified as COUNT[6:0].
 This CSR is a memory of 128 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:36> FAU      RO        X           0        Fetch and add command words
 <35:22> CMD      RO        X           0        Command word
 <21:16> SEGS     RO        X           0        Number of segments/gather size
 <15:0>  SIZE     RO        X           0        Packet length in bytes

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.cmnd[63:0]
 This CSR is a memory of 20 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PKO_MEM_DEBUG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:63> I        RO        X           0        "I"  value used for free operation
 <62:59> BACK     RO        X           0        Back value used for free operation
 <58:56> POOL     RO        X           0        Pool value used for free operation
 <55:40> SIZE     RO        X           0        Size in bytes
 <39:0>  PTR      RO        X           0        Data pointer

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.curr[63:0]
 This CSR is a memory of 20 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:63> I        RO        X           0        "I"  value used for free operation
 <62:59> BACK     RO        X           0        Back value used for free operation
 <58:56> POOL     RO        X           0        Pool value used for free operation
 <55:40> SIZE     RO        X           0        Size in bytes
 <39:0>  PTR      RO        X           0        Data pointer

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.head[63:0]
 This CSR is a memory of 20 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DATA     RO        X           0        WorkQ data or Store0 pointer

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.resp[63:0]
 This CSR is a memory of 20 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> CURR_SIZ    RO     X           0        Internal state
 <55:40> CURR_OFF    RO     X           0        Internal state
 <39:34> CMND_SEGS   RO     X           0        Internal state
 <33:18> CMND_SIZ    RO     X           0        Internal state
 <17:12> CMND_OFF    RO     X           0        Internal state
 <11:10> UID         RO     X           0        Internal state
 <9:9>   DREAD_SOP   RO     X           0        Internal state
 <8:8>   INIT_DWRITE RO     X           0        Internal state
 <7:7>   CHK_ONCE    RO     X           0        Internal state
 <6:6>   CHK_MODE    RO     X           0        Internal state
 <5:5>   WAIT        RO     X           0        Internal state
 <4:3>   MINOR       RO     X           0        Internal state
 <2:0>   MAJOR       RO     X           0        Internal state

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.state[63:0]
 This CSR is a memory of 20 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:57> NS        RO       NS          NS       RESERVED
 <56:56> UID_2     RO       X           0        Internal state
 <55:55> PTP       RO       X           0        Internal state
 <54:54> MAJOR_3   RO       X           0        Internal state
 <53:48> NXT_INFLT RO       X           0        Internal state
 <47:8>  CURR_PTR  RO       X           0        Internal state
 <7:0>   CURR_SIZ  RO       X           0        Internal state

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.state[127:64]
 This CSR is a memory of 20 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG6 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:37> NS         RO       X           0        Internal state
 <36:33> QID_OFFRES RO       X           0        Internal state
 <32:29> QID_OFFTHS RO       X           0        Internal state
 <28:28> PREEMPTER  RO       X           0        Internal state
 <27:27> PREEMPTEE  RO       X           0        Internal state
 <26:26> PREEMPTED  RO       X           0        Internal state
 <25:25> ACTIVE     RO       X           0        Internal state
 <24:24> STATIC     RO       X           0        Internal state
 <23:21> QOS        RO       X           0        Internal state
 <20:16> QCB_RIDX   RO       X           0        Internal state
 <15:12> QID_OFFMAX RO       X           0        Internal state
 <11:8>  QID_OFF    RO       X           0        Internal state
 <7:0>   QID_BASE   RO       X           0        Internal state

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.port[63:0]
 This CSR is a memory of 128 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG7 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:61> QOS      RO        X           0        QOS mask to enable the queue when set
 <60:60> TAIL     RO        X           0        This queue is the last (tail) in the queue array
 <59:47> BUF_SIZ  RO        X           0        Command buffer remaining size in words
 <46:14> BUF_PTR  RO        X           0        Command word pointer
 <13:7>  QCB_WIDX RO        X           0        Buffer write index for QCB
 <6:0>   QCB_RIDX RO        X           0        Buffer read  index for QCB

Notes:
 Internal per-queue state intended for debug use only - pko_prt_qsb.state[63:0]
 This CSR is a memory of 256 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG8 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:37> NS        RO       NS          NS       RESERVED
 <36>    PREEMPTER RO       X           0        Preempter
 <35:16> DOORBELL  RO       X           0        Doorbell count
 <15:9>  NS        RO       NS          NS       RESERVED
 <8>     PREEMPTEE RO       X           0        Preemptee
 <7>     STATIC_P  RO       X           0        Static priority
 <6>     S_TAIL    RO       X           0        Static tail
 <5>     STATIC_Q  RO       X           0        Static priority
 <4:0>   QOS       RO       X           0        QOS mask to enable the queue when set

Notes:
 Internal per-queue state intended for debug use only - pko_prt_qsb.state[91:64]
 This CSR is a memory of 256 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG9 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:49> NS       RO        NS          NS       RESERVED
 <48:32> PTRS0    RO        X           0        Internal state
 <31:17> NS       RO        NS          NS       RESERVED
 <16:0>  PTRS3    RO        X           0        Internal state

Notes:
 Internal per-port state intended for debug use only - pko.dat.ptr.ptrs0, pko.dat.ptr.ptrs3
 This CSR is a memory of 20 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG10 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:49> NS       RO        NS          NS       RESERVED
 <48:32> PTRS1    RO        X           0        Internal state
 <31:17> NS       RO        NS          NS       RESERVED
 <16:0>  PTRS2    RO        X           0        Internal state

Notes:
 Internal per-port state intended for debug use only - pko.dat.ptr.ptrs1, pko.dat.ptr.ptrs2
 This CSR is a memory of 20 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG11 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:23> NS       RO        NS          NS       RESERVED
 <22:22> MAJ      RO        X           0        Internal state
 <21:19> UID      RO        X           0        Internal state
 <18:18> SOP      RO        X           0        Internal state
 <17:17> LEN      RO        X           0        Internal state
 <16:16> CHK      RO        X           0        Internal state
 <15:3>  CNT      RO        X           0        Internal state
 <2:0>   MOD      RO        X           0        Internal state

Notes:
 Internal per-port state intended for debug use only - pko.out.sta.state[22:0]
 This CSR is a memory of 20 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PKO_MEM_DEBUG12 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  STATE    RO        NS          NS       Internal state

Notes:
 Internal per-port state intended for debug use only - pko.out.ctl.out_rdat_5a[63:0]
 This CSR is a memory of 160 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PKO_MEM_DEBUG13 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  STATE    RO        NS          NS       Internal state

Notes:
 Internal per-port state intended for debug use only - pko.out.ctl.out_rdat_5a[127:64]
 This CSR is a memory of 160 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ       0           0        RESERVED
 <5:2>   MAX_READ R/W       8           8        Maximum number of outstanding data read commands
 <1>     STORE_LE R/W       0           0        Force STORE0 byte write address to little endian
 <0>     RESET    RAZ       0           0        Reset oneshot pulse (lasts for 4 cycles)

Notes:
 MAX_READ is a throttle to control NCB usage.  Values >8 are illegal.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_CMD_BUF Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:58> NS       RAZ       0           0        RESERVED
 <57:49> DWB      R/W       0           NS       Number of DontWriteBacks
 <48:46> POOL     R/W       0           NS       Free list used to free command buffer segments
 <45:33> SIZE     R/W       0           NS       Number of uint64s per command buffer segment
 <32:0>  PTR      R/W       0           NS       Initial command buffer pointer[39:7] (128B-aligned)

Notes:
 Sets the command buffer parameters
 The size of the command buffer segments is measured in uint64s.  The pool specifies 1 of 8 free
 lists to be used when freeing command buffer segments.  The PTR field is overwritten with the next
 pointer each time that the command buffer segment is exhausted.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_POLYNOMIAL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ       0           0        RESERVED
 <7:0>   COEFFS   R/W       0x1d        0x1d     coefficients of GF(2^8) irreducible polynomial

Notes:
 The polynomial is x^8 + C7*x^7 + C6*x^6 + C5*x^5 + C4*x^4 + C3*x^3 + C2*x^2 + C1*x^1 + C0.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_READ_IDX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        RESERVED
 <31:16> INC      R/W      0           0         Increment to add to current index for next index
 <15:0>  IDX      R/W      0           0         Index to use for next memory CSR read

Notes:
 Provides the read index during a CSR read operation to any of the CSRs that are physically stored
 as memories.  The names of these CSRs begin with the prefix "RAD_MEM_".
 IDX[15:0] is the read index.  INC[15:0] is an increment that is added to IDX[15:0] after any CSR read.
 The intended use is to initially write this CSR such that IDX=0 and INC=1.  Then, the entire
 contents of a CSR memory can be read with consecutive CSR read commands.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_BIST_RESULT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ       NS          NS       RESERVED
 <5>     STA      RO        X           0        BiST result of the STA     memories
 <4>     NCB_OUB  RO        X           0        BiST result of the NCB_OUB memories
 <3:2>   NCB_INB  RO        X           0        BiST result of the NCB_INB memories
 <1:0>   DAT      RO        X           0        BiST result of the DAT     memories

Notes:
 Access to the internal BiST results
 Each bit is the BiST result of an individual memory (per bit, 0=pass and 1=fail).
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_ERROR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        RESERVED
 <0>     DOORBELL R/W1C    0           0         A doorbell count has overflowed
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_INT_MASK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        RESERVED
 <0>     DOORBELL R/W      0           0         Bit mask corresponding to RAD_REG_ERROR[0] above

Notes:
 When a mask bit is set, the corresponding interrupt is enabled.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:57> NS       RO       NS          NS        RESERVED
 <56:32> LOOP     RO       NS          NS        Loop offset
 <31:24> NS       RO       NS          NS        RESERVED
 <23:22> NS       RO       NS          NS        RESERVED
 <21:16> IRIDX    RO       NS          NS        IWords read index
 <15:14> NS       RO       NS          NS        RESERVED
 <13:8>  IWIDX    RO       NS          NS        IWords write index
 <7>     OWORDQV  RO       NS          NS        Valid for OWORDQ
 <6>     OWORDPV  RO       NS          NS        Valid for OWORDP
 <5>     COMMIT   RO       NS          NS        Waiting for write commit
 <4:0>   STATE    RO       NS          NS        Main state
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  CWORD    RO       NS          NS        CWord
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  OWORDP   RO       NS          NS        OWordP
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  OWORDQ   RO       NS          NS        OWordQ
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  RWORD    RO       NS          NS        RWord
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:53> NS       RAZ      NS          NS        RESERVED
 <52:50> NIROPC7  RO       NS          NS        NCBI ropc (stage7 grant)
 <49:48> NIRQUE7  RO       NS          NS        NCBI rque (stage7 grant)
 <47:43> NIRVAL7  RO       NS          NS        NCBI rval (stage7 grant)
 <42:40> NIROPC6  RO       NS          NS        NCBI ropc (stage6 arb)
 <39:38> NIRQUE6  RO       NS          NS        NCBI rque (stage6 arb)
 <37>    NIRARB6  RO       NS          NS        NCBI rarb (stage6 arb)
 <36:32> NIRVAL6  RO       NS          NS        NCBI rval (stage6 arb)
 <31:28> NIRIDX1  RO       NS          NS        NCBI ridx1
 <27:24> NIWIDX1  RO       NS          NS        NCBI widx1
 <23:20> NIRIDX0  RO       NS          NS        NCBI ridx0
 <19:16> NIWIDX0  RO       NS          NS        NCBI widx0
 <15:14> WCCREDS  RO       0           0         WC credits
 <13:12> FPACREDS RO       1           0         POW credits
 <11:10> NS       RAZ      NS          NS        RESERVED
 <9:8>   POWCREDS RO       2           0         POW credits
 <7:4>   N1CREDS  RO       8           0         NCBI1 credits
 <3:0>   N0CREDS  RO       8           0         NCBI0 credits
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG6 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> CNT      RO       NS          NS        CCTL count[7:0] (bytes)
 <55:40> SIZE     RO       NS          NS        CCTL size (bytes)
 <39:0>  PTR      RO       NS          NS        CCTL pointer
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG7 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:15> NS       RAZ      NS          NS        RESERVED
 <14:0>  CNT      RO       NS          NS        CCTL count[22:8] (bytes)
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG8 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> FLAGS    RO       NS          NS        ICTL flags
 <55:40> SIZE     RO       NS          NS        ICTL size (bytes)
 <39:0>  PTR      RO       NS          NS        ICTL pointer
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG9 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:20> NS       RAZ      NS          NS        RESERVED
 <19>    EOD      RO       NS          NS        ICTL eod flag
 <18>    INI      RO       NS          NS        ICTL init flag
 <17>    Q        RO       NS          NS        ICTL q enable
 <16>    P        RO       NS          NS        ICTL p enable
 <15:8>  MUL      RO       NS          NS        ICTL multiplier
 <7:0>   IDX      RO       NS          NS        ICTL index
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG10 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> FLAGS    RO       NS          NS        OCTL flags
 <55:40> SIZE     RO       NS          NS        OCTL size (bytes)
 <39:0>  PTR      RO       NS          NS        OCTL pointer
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG11 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13> NS       RAZ      NS          NS        RESERVED
 <12>    Q        RO       NS          NS        OCTL q flag
 <11>    P        RO       NS          NS        OCTL p flag
 <10>    WC       RO       NS          NS        OCTL write commit flag
 <9>     EOD      RO       NS          NS        OCTL eod flag
 <8>     SOD      RO       NS          NS        OCTL sod flag
 <7:0>   IDX      RO       NS          NS        OCTL index
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG12 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:15> NS       RAZ      NS          NS        RESERVED
 <14:0>  ASSERTS  RO       NS          NS        Various assertion checks
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_MEM_DEBUG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  IWORD    RO       NS          NS        IWord

Notes:
 This CSR is a memory of 32 entries, and thus, the RAD_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_MEM_DEBUG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  P_DAT    RO       NS          NS        P data

Notes:
 This CSR is a memory of 256 entries, and thus, the RAD_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_MEM_DEBUG2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  Q_DAT    RO       NS          NS        Q data

Notes:
 This CSR is a memory of 256 entries, and thus, the RAD_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===

 *
 *                  RNM_CTL_STATUS = RNM's Control/Status Register
 *
 * The RNM's interrupt enable register.
 *

     ==============================================================
     RNM_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ENT_EN   R/W      0           0         Entropy enable for random number generator.
 <1>     RNG_EN   R/W      0           0         Enable the output of the RNG.
 <2>     RNM_RST  R/W      0           0         Reset the RNM as core reset except for register
                                                 logic.
 <3>     RNG_RST  R/W      0           0         Reset RNG as core reset.
 <4>     EXP_ENT  R/W      0           0         Exported entropy enable for random number generator
 <8:5>   ENT_SEL  R/W      0           0         ?
 <9>     EER_VAL  RO       0           0         Dormant encryption key match
 <10>    EER_LCK  RO       0           0         Encryption enable register locked
 <63:11> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  RNM_BIST_STATUS = RNM's BIST Status Register
 *
 * The RNM's Memory Bist Status register.
 *

     ==============================================================
     RNM_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     MEM      RO       0           0         Status of MEM block bist.
 <1>     RRC      RO       0           0         Status of RRC block bist.
 <63:2>  NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  RNM_EER_KEY = RNM's Encryption enable register
 *
 * The RNM's Encryption enable register
 *

     ==============================================================
     RNM_EER_KEY Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  KEY      WO       0           0         Dormant encryption key.  If dormant crypto is fuse
                                                 enabled, crypto can be enable by writing this
                                                 register with the correct key.
----------------------------------------------------------------------------------------------------
===

 *
 *                  RNM_EER_DBG = RNM's Encryption enable debug register
 *
 * The RNM's Encryption enable debug register
 *

     ==============================================================
     RNM_EER_DBG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DAT       RO       NS          NS        Dormant encryption debug info.
----------------------------------------------------------------------------------------------------
===

 *
 *                  RNM_SERIAL_NUM = RNM's fuse serial number register
 *
 * The RNM's fuse serial number register
 *

     ==============================================================
     RNM_SERIAL_NUM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DAT       RO       NS          NS        Dormant encryption serial number
Notes:
----------------------------------------------------------------------------------------------------
===



*
* Add Lock Register (Set on Read, Clear on write), SW uses to control access to BAR0 space.
*


 * Total Address is 16Kb; 0x0000 - 0x3fff, 0x000 - 0x7fe(Reg, every other 8B)
 *
 * General  5kb; 0x0000 - 0x13ff, 0x000 - 0x27e(Reg-General)
 * PktMem  10Kb; 0x1400 - 0x3bff, 0x280 - 0x77e(Reg-General-Packet)
 * Rsvd     1Kb; 0x3c00 - 0x3fff, 0x780 - 0x7fe(Reg-NCB Only Mode)

 *
 *                  SLI_WIN_WR_ADDR = SLI Window Write Address Register
 *
 * Contains the address to be writen to when a write operation is started by writing the
 * SLI_WIN_WR_DATA register (see below).
 *
 * This register shopuld NOT be used to write SLI_* registers.
 *

     ==============================================================
     SLI_WIN_WR_ADDR Type=PEXP
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:49> NS       RAZ      NS          NS        Reserved
 <48>    IOBIT    RAZ      0x0         0x0       A 1 or 0 can be written here but this will always
                                                 read as '0'.
 <47:3>  WR_ADDR  R/W      0x0         NS        The address that will be written to when the
                                                 SLI_WIN_WR_DATA register is written.
                                                 [47:40] = NCB_ID
                                                 [39:3]  = Address
                                                 When [47:43] == SLI & [42:40] == 0 bits [39:0] are:
                                                      [39:32] == x, Not Used
                                                      [31:24] == RSL_ID
                                                      [23:3]  == RSL Register Offset
 <2:0>   NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_WIN_RD_ADDR = SLI Window Read Address Register
 *
 * The address to be read when the SLI_WIN_RD_DATA register is read.
 * This register shopuld NOT be used to read SLI_* registers.
 *

     ==============================================================
     SLI_WIN_RD_ADDR Type=PEXP
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:51> NS       RAZ      NS          NS        Reserved
 <50:49> LD_CMD   R/W      0x3         NS        The load command sent wit hthe read.
						 0x3 == Load 8-bytes, 0x2 == Load 4-bytes,
						 0x1 == Load 2-bytes, 0x0 == Load 1-bytes,
 <48>    IOBIT    R/W      0x0         0x0       A 1 or 0 can be written here but will not be used
                                                 in address generation.
 <47:0>  RD_ADDR  R/W      0x0         NS        The address to be read from.
                                                 [47:40] = NCB_ID
                                                 [39:0]  = Address
                                                 When [47:43] == SLI & [42:40] == 0 bits [39:0] are:
                                                      [39:32] == x, Not Used
                                                      [31:24] == RSL_ID
                                                      [23:0]  == RSL Register Offset
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_WIN_WR_DATA = SLI Window Write Data Register
 *
 * Contains the data to write to the address located in the SLI_WIN_WR_ADDR Register.
 * Writing the least-significant-byte of this register will cause a write operation to take place.
 *
 *

     ==============================================================
     SLI_WIN_WR_DATA Type=PEXP
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  WR_DATA  R/W      0x0         NS        The data to be written. Whenever the LSB of this
                                                 register is written, the Window Write will take
                                                 place.
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_WIN_WR_MASK = SLI Window Write Mask Register
 *
 * Contains the mask for the data in the SLI_WIN_WR_DATA Register.
 *

     ==============================================================
     SLI_WIN_WR_MASK Type=PEXP
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved
 <7:0>   WR_MASK  R/W      0xFF        0x0       The data to be written. When a bit is '1'
                                                 the corresponding byte will be written. The values
                                                 of this field must be contiguos and for 1, 2, 4, or
                                                 8 byte operations and aligned to operation size.
						 A Value of 0 will produce unpredictable results
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_WIN_RD_DATA = SLI Window Read Data Register
 *
 * Reading this register causes a window read operation to take place. Address read is that contained in the SLI_WIN_RD_ADDR
 * register.
 *

     ==============================================================
     SLI_WIN_RD_DATA Type=PEXP
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  RD_DATA  RO       0x0         NS        The read data.                                     |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_CTL_PORT@ = SLI's Control Port @
 *
 * Contains control for access for Port0
 *

     ==============================================================
     SLI_CTL_PORT(0..1) Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     WAIT_COM R/W      0           0         When set '1' casues the SLI to wait for a commit   |
                                                 from the L2C before sending additional stores to   |
                                                 the L2C from a MAC.                                |
                                                 The SLI will request a commit on the last store    |
                                                 if more than one STORE operation is required on    |
                                                 the NCB.                                           |
                                                 Most applications will not notice a difference, so |
                                                 should not set this bit. Setting the bit is more   |
                                                 conservative on ordering, lower performance        |
 <4:1>   NS       R/W      0           0         Reserved.                                          |
 <5>     PTLP_RO  R/W      0           1         Relaxed ordering enable for Posted TLPS.           |
 <6>     NS       R/W      0           0         Reserved.                                          |
 <7>     CTLP_RO  R/W      0           1         Relaxed ordering enable for Completion TLPS.       |
 <9:8>   INTA_MAP R/W      0           0         Maps INTA to INTA(00), INTB(01), INTC(10) or       |
                                                 INTD (11).                                         |
 <11:10> INTB_MAP R/W      1           1         Maps INTB to INTA(00), INTB(01), INTC(10) or       |
                                                 INTD (11).                                         |
 <13:12> INTC_MAP R/W      2           2         Maps INTC to INTA(00), INTB(01), INTC(10) or       |
                                                 INTD (11).                                         |
 <15:14> INTD_MAP R/W      3           3         Maps INTD to INTA(00), INTB(01), INTC(10) or       |
                                                 INTD (11).                                         |
 <16>    WAITL_COM R/W     0           NS        When set '1' casues the SLI to wait for a commit   |
                                                 from the L2C before sending additional completions |
                                                 to the L2C from a MAC.                             |
                                                 Set this for more conservative behavior. Clear     |
                                                 this for more aggressive, higher-performance       |
                                                 behavior                                           |
 <17>    DIS_PORT R/W1C    0           0         When set the output to the MAC is disabled. This   |
	 					 occurs when the MAC reset line transitions from    |
						 de-asserted to asserted. Writing a '1' to this     |
						 location will clear this condition when the MAC is |
						 no longer in reset and the output to the MAC is at |
						 the begining of a transfer.			    |
 <18>    INTA     RO       1           1         When '0' Inta wire asserted. Before mapping.       |
 <19>    INTB     RO       1           1         When '0' Intb wire asserted. Before mapping.       |
 <20>    INTC     RO       1           1         When '0' Intc wire asserted. Before mapping.       |
 <21>    INTD     RO       1           1         When '0' Intd wire asserted. Before mapping.       |
 <63:22> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

//// *
//// * 8070 - 80C0 saved for ports 2 through 7
//// *

//// *
//// * 0x80d0 free
//// *

 *
 *                  SLI_MEM_ACCESS_SUBID@ = SLI Memory Access Subid@ Register
 *
 * Contains address index and control bits for access to memory from Core PPs.
 *

     ==============================================================
     SLI_MEM_ACCESS_SUBID(12..27) Type=PEXP_NCB
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:43> NS       RAZ      NS          NS        Reserved				            |
 <42>    ZERO     R/W      0x0         0         Causes all byte reads to be zero length reads.     |
                                                 Returns to the EXEC a zero for all read data.      |
                                                 This must be zero for sRIO ports.                  |
 <41:39> PORT     R/W      0x0         NS        Physical MAC Port that reads/writes to             |
                                                 this subid are sent to. Must be <= 1, as there are |
                                                 only two ports present.                            |
 <38>    NMERGE   R/W      0x0         0         When set, no merging is allowed in this window.    |
 <37:36> ESR      R/W      0x0         NS        ES<1:0> for reads to this subid.                   |
                                                 ES<1:0> is the endian-swap attribute for these MAC |
                                                 memory space reads.                                |
 <35:34> ESW      R/W      0x0         NS        ES<1:0> for writes to this subid.                  |
                                                 ES<1:0> is the endian-swap attribute for these MAC |
                                                 memory space writes.                               |
 <33:32> WTYPE    R/W      0x0         NS        ADDRTYPE<1:0> for writes to this subid             |
                                                 For PCIe:                                          |
                                                 - ADDRTYPE<0> is the relaxed-order attribute       |
                                                 - ADDRTYPE<1> is the no-snoop attribute            |
 <31:30> RTYPE    R/W      0x0         NS        ADDRTYPE<1:0> for reads to this subid              |
                                                 For PCIe:                                          |
                                                 - ADDRTYPE<0> is the relaxed-order attribute       |
                                                 - ADDRTYPE<1> is the no-snoop attribute            |
 <29:2>  BA       R/W      0x0         NS        Address Bits <63:36> for reads/writes that use     |
                                                 this subid.                                        |
 <1:0>   NS       R/W      0           0         Reserved.                                          |
----------------------------------------------------------------------------------------------------
===

//// *
//// * 81e0 - 82d0 Reserved for future subids
//// *

 *
 *                  SLI_WINDOW_CTL = SLI's Window Control
 *
 * Access to register space on the NCB (caused by Window Reads/Writes) will wait for a period of time specified
 * by this register before timeing out. Because a Window Access can access the RML, which has a fixed timeout of 0xFFFF
 * core clocks, the value of this register should be set to a minimum of 0x200000 to ensure that a timeout to an RML register
 * occurs on the RML 0xFFFF timer before the timeout for a BAR0 access from the MAC.
 *

     ==============================================================
     SLI_WINDOW_CTL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  TIME     R/W      0x0         0x200000  Time to wait in core clocks for a                  |
                                                 BAR0 access to completeon the NCB                  |
	                                         before timing out. A value of 0 will cause no      |
						 timeouts. A minimum value of 0x200000 should be    |
                                                 used when this register is not set to 0x0.         |
 <63:32> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_MEM_ACCESS_CTL = SLI's Memory Access Control
 *
 * Contains control for access to the MAC address space.
 *

     ==============================================================
     SLI_MEM_ACCESS_CTL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <9:0>   TIMER    R/W      0           50        When the SLI starts a PP to MAC write it waits     |
                                                 no longer than the value of TIMER in eclks to      |
                                                 merge additional writes from the PPs into 1        |
                                                 large write. The values for this field is 1 to     |
                                                 1024 where a value of '0' is treated as 1024.      |
 <13:10> MAX_WORD R/W      0           0         The maximum number of words to merge into a single |
                                                 write operation from the PPs to the MAC. Legal     |
                                                 values are 1 to 16, where a '0' is treated as 16.  |
 <63:14> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_DBG_SELECT = Debug Select Register
 *
 * Contains the debug select value last written to the RSLs.
 *

     ==============================================================
     SLI_DBG_SELECT Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DBG_SEL  R/W      0           NS        When this register is written the RML will write
                                                 all "F"s to the previous RTL to disable it from
                                                 sending Debug-Data. The RML will then send a write
                                                 to the new RSL with the supplied Debug-Select
                                                 value. Because it takes time for the new Debug
                                                 Select value to take effect and the requested
                                                 Debug-Data to return, time is needed to the new
                                                 Debug-Data to arrive.  The inititator of the Debug
                                                 Select should issue a read to a CSR before reading
                                                 the Debug Data (this read could also be to the
	                                         SLI_DBG_DATA but the returned value for the first
                                                 read will return NS data.
 <32>    ADBG_SEL R/W      0           NS        When set '1' the SLI_DBG_DATA[DATA] will only be
						 loaded when SLI_DBG_DATA[DATA] bit [16] is a '1'.
						 When the debug data comes from an Async-RSL bit
						 16 is used to tell that the data present is valid.
<63:33> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_DBG_DATA = SLI Debug Data Register
 *
 * Value returned on the debug-data lines from the RSLs
 *

     ==============================================================
     SLI_DBG_DATA Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <16:0>  DATA      RO       0x0         NS        Value on the debug data lines.
 <17>    DSEL_EXT  R/W      1           0         Allows changes in the external pins to set the
                                                  debug select value.
<63:18>  NS        RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_INT_SUM = SLI Interrupt Summary Register
 *
 * Set when an interrupt condition occurs, write '1' to clear.
 *

     ==============================================================
     SLI_INT_SUM Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     RML_TO   R/W1C    0x0         0         A read or write transfer did not complete          |
                                                 within 0xffff core clocks.                         |
 <1>     NS       R/W1C    0x0         0         Reserved	 				    |
 <2>     BAR0_TO  R/W1C    0x0         0         BAR0 R/W to a NCB device did not receive           |
                                                 read-data/commit in 0xffff core clocks.            |
 <3>     IOB2BIG  R/W1C    0x0         0         A requested IOBDMA is to large.                    |
 <4>     PCNT     RO       0x0         0         Packet Counter has an interrupt. Which rings can   |
                                                 be found in SLI_PKT_CNT_INT.                       |
 <5>     PTIME    RO       0x0         0         Packet Timer has an interrupt. Which rings can     |
                                                 be found in SLI_PKT_TIME_INT.                      |
 <7:6>   NS       R/W1C    0x0         0         Reserved	 				    |
 <8>     M0_UP_B0 R/W1C    0x0         0         Received Unsupported P-TLP for Bar0 from MAC 0.    |
                                                 This occurs when the BAR 0 address space is        |
                                                 disabeled.                                         |
 <9>     M0_UP_WI R/W1C    0x0         0         Received Unsupported P-TLP for Window Register     |
                                                 from MAC 0. This occurs when the window registers  |
                                                 are disabeld and a window register access occurs.  |
 <10>    M0_UN_B0 R/W1C    0x0         0         Received Unsupported N-TLP for Bar0 from MAC 0.    |
                                                 This occurs when the BAR 0 address space is        |
                                                 disabeled.                                         |
 <11>    M0_UN_WI R/W1C    0x0         0         Received Unsupported N-TLP for Window Register     |
                                                 from MAC 0. This occurs when the window registers  |
                                                 are disabeld and a window register access occurs.  |
 <12>    M1_UP_B0 R/W1C    0x0         0         Received Unsupported P-TLP for Bar0 from MAC 1.    |
                                                 This occurs when the BAR 0 address space is        |
                                                 disabeled.                                         |
 <13>    M1_UP_WI R/W1C    0x0         0         Received Unsupported P-TLP for Window Register     |
                                                 from MAC 1. This occurs when the window registers  |
                                                 are disabeld and a window register access occurs.  |
 <14>    M1_UN_B0 R/W1C    0x0         0         Received Unsupported N-TLP for Bar0 from MAC 1.    |
                                                 This occurs when the BAR 0 address space is        |
                                                 disabeled.                                         |
 <15>    M1_UN_WI R/W1C    0x0         0         Received Unsupported N-TLP for Window Register     |
                                                 from MAC 1. This occurs when the window registers  |
                                                 are disabeld and a window register access occurs.  |
 <16>    MIO_INT0 RO       0x0         0         Interrupt from MIO for PORT 0.                     |
                                                 See CIU_INT32_SUM0, CIU_INT_SUM1                   |
                                                 (enabled by CIU_INT32_EN0, CIU_INT32_EN1)          |
 <17>    MIO_INT1 RO       0x0         0         Interrupt from MIO for PORT 1.                     |
                                                 See CIU_INT33_SUM0, CIU_INT_SUM1                   |
                                                 (enabled by CIU_INT33_EN0, CIU_INT33_EN1)          |
 <18>    MAC0_INT RO       0x0         0         Interrupt from MAC0.                               |
                                                 See PEM0_INT_SUM (enabled by PEM0_INT_ENB_INT)     |
 <19>    MAC1_INT RO       0x0         0         Interrupt from MAC1.                               |
                                                 See PEM1_INT_SUM (enabled by PEM1_INT_ENB_INT)     |
 <31:20> NS       RAZ      NS          NS        Reserved                                           |
 <33:32> DMAFI    R/W1C    0x0         0         DMA set Forced Interrupts.                         |
 <35:34> DCNT     RO       0x0         0         DCNT[x] is set whenever SLI_DMAx_CNT[CNT] >	    |
						  SLI_DMAx_INT_LEVEL[CNT].			    |
						  DCNT[x] is normally cleared by decreasing	    |
						  SLI_DMAx_CNT[CNT].				    |
 <37:36> DTIME    RO       0x0         0         Whenever SLI_DMAx_CNT[CNT] is not 0, the	    |
                                                  SLI_DMAx_TIM[TIM] timer increments every SLI	    |
						  clock.					    |
						  DTIME[x] is set whenever SLI_DMAx_TIM[TIM] >	    |
						  SLI_DMAx_INT_LEVEL[TIME].			    |
						  DTIME[x] is normally cleared by clearing	    |
						  SLI_DMAx_CNT[CNT] (which also clears		    |
						  SLI_DMAx_TIM[TIM]).				    |
 <47:38> NS        RAZ     NS          NS        Reserved                                           |
 <48>    PIDBOF    R/W1C   0x0         0         Packet Instruction Doorbell count overflowed. Which|
                                                 doorbell can be found in DPI_PINT_INFO[PIDBOF]     |
 <49>    PSLDBOF   R/W1C   0x0         0         Packet Scatterlist Doorbell count overflowed. Which|
                                                 doorbell can be found in DPI_PINT_INFO[PSLDBOF]    |
 <50>    POUT_ERR  R/W1C   0x0         0         Set when PKO sends packet data with the error bit  |
						 set.						    |
 <51>    NS        RAZ     NS          NS        Reserved                                           |
 <52>    PGL_ERR   R/W1C   0x0         0         When a read error occurs on a packet gather list   |
						 read this bit is set.                              |
 <53>    PDI_ERR   R/W1C   0x0         0         When a read error occurs on a packet data read     |
						 this bit is set.                                   |
 <54>    POP_ERR   R/W1C   0x0         0         When a read error occurs on a packet scatter       |
						 pointer pair this bit is set.                      |
 <55>    PINS_ERR  R/W1C   0x0         0         When a read error occurs on a packet instruction   |
						 this bit is set.                                   |
 <56>    SPRT0_ERR R/W1C   0x0         0         When an error response received on SLI port 0	    |
						 this bit is set.				    |
 <57>    SPRT1_ERR R/W1C   0x0         0         When an error response received on SLI port 1 	    |
                                                 this bit is set.                                   |
 <59:58> NS        RAZ     NS          NS        Reserved for SLI port expansion                    |
 <60>    ILL_PAD   R/W1C   0x0         0         Set when a BAR0 address R/W falls into theaddress  |
                                                 range of the Packet-CSR, but for an unused         |
						 address.                                           |
 <61>    PIPE_ERR  R/W1C   0x0         0         Set when a PIPE value outside range is received.   |
 <63:62> NS        RAZ     NS          NS        Reserved                                           |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_INT_ENB_PORTX = SLI's Interrupt Enable Register per mac port
 *
 * Used to allow the generation of interrupts (MSI/INTA) to the PORT X
 *

     ==============================================================
     SLI_INT_ENB_PORT(0..1) Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     RML_TO    R/W     0x0         1         Enables SLI_INT_SUM[0] to generate an              |
                                                 interrupt to the PCIE core for MSI/inta.           |
 <1>     NS        R/W     0x0         1         Enables SLI_INT_SUM[1] to generate an              |
                                                 interrupt to the PCIE core for MSI/inta.           |
 <2>     BAR0_TO   R/W     0x0         1         Enables SLI_INT_SUM[2] to generate an              |
                                                 interrupt to the PCIE core for MSI/inta.           |
 <3>     IOB2BIG   R/W     0x0         1         Enables SLI_INT_SUM[3] to generate an              |
                                                 interrupt to the PCIE core for MSI/inta.           |
 <4>     PCNT      R/W     0x0         1         Enables SLI_INT_SUM[4] to generate an              |
                                                 interrupt to the PCIE core for MSI/inta.           |
 <5>     PTIME     R/W     0x0         1         Enables SLI_INT_SUM[5] to generate an              |
                                                 interrupt to the PCIE core for MSI/inta.           |
 <7:6>   NS        R/W     0x0         0         Reserved	 				    |
 <8>     M0_UP_B0  R/W     0x0         1         Enables SLI_INT_SUM[8] to generate an              |
                                                 interrupt to the PCIE core for MSI/inta.           |
 <9>     M0_UP_WI  R/W     0x0         1         Enables SLI_INT_SUM[9] to generate an              |
                                                 interrupt to the PCIE core for MSI/inta.           |
 <10>    M0_UN_B0  R/W     0x0         1         Enables SLI_INT_SUM[10] to generate an             |
                                                 interrupt to the PCIE core for MSI/inta.           |
 <11>    M0_UN_WI  R/W     0x0         1         Enables SLI_INT_SUM[11] to generate an             |
                                                 interrupt to the PCIE core for MSI/inta.           |
 <12>    M1_UP_B0   R/W    0x0         1         Enables SLI_INT_SUM[12] to generate an             |
                                                 interrupt to the PCIE core for MSI/inta.           |
 <13>    M1_UP_WI   R/W    0x0         1         Enables SLI_INT_SUM[13] to generate an             |
                                                 interrupt to the PCIE core for MSI/inta.           |
 <14>    M1_UN_B0   R/W    0x0         1         Enables SLI_INT_SUM[14] to generate an             |
                                                 interrupt to the PCIE core for MSI/inta.           |
 <15>    M1_UN_WI  R/W     0x0         1         Enables SLI_INT_SUM[15] to generate an             |
                                                 interrupt to the PCIE core for MSI/inta.           |
 <16>    MIO_INT0  R/W     0x0         1         Enables SLI_INT_SUM[16] to generate an             |
                                                 interrupt to the PCIE core for MSI/inta.           |
                                                 SLI_INT_ENB_PORT1[MIO_INT0] should NEVER be set.   |
 <17>    MIO_INT1  R/W     0x0         1         Enables SLI_INT_SUM[17] to generate an             |
                                                 interrupt to the PCIE core for MSI/inta.           |
                                                 SLI_INT_ENB_PORT0[MIO_INT1] should NEVER be set.   |
 <18>    MAC0_INT  R/W     0x0         1         Enables SLI_INT_SUM[18] to generate an             |
                                                 interrupt to the PCIE-Port0 for MSI/inta.          |
                                                 The valus of this bit has NO effect on PCIE Port1. |
						 SLI_INT_ENB_PORT1[MAC0_INT] sould NEVER be set.    |
 <19>    MAC1_INT  R/W     0x0         1         Enables SLI_INT_SUM[19] to generate an             |
                                                 interrupt to the PCIE-Port1 for MSI/inta.          |
                                                 The valuse of this bit has NO effect on PCIE Port0.|
						 SLI_INT_ENB_PORT0[MAC1_INT] sould NEVER be set.    |
 <31:20> NS        R/W     0x0         0         Reserved	 				    |
 <33:32> DMAFI     R/W     0x0         0         DMA set Forced Interrupts                          |
 <35:34> DCNT      R/W     0x0         0         DMA Count Interrupts				    |
 <37:36> DTIME     R/W     0x0         0         DMA Timer Interrupts				    |
 <47:38> NS        R/W     0x0         0         Reserved	 				    |
 <48>    PIDBOF    R/W     0x0         0         Packet Instruction Doorbell Count Overflow.	    |
 <49>    PSLDBOF   R/W     0x0         0         Packet Scatterlist Doorbell Count Overflow.	    |
 <50>    POUT_ERR  R/W     0x0         0         Packet Out Interrupt, Error From PKO.		    |
 <51>    NS        R/W     0x0         0         Reserved	 				    |
 <52>    PGL_ERR   R/W     0x0         0         Read Error during gather list fetch.		    |
 <53>    PDI_ERR   R/W     0x0         0         Read Error during packet data fetch.		    |
 <54>    POP_ERR   R/W     0x0         0         Read Error during packet scatter pointer fetch.    |
 <55>    PINS_ERR  R/W     0x0         0         Read Error during packet instruction fetch.	    |
 <56>    SPRT0_ERR R/W     0x0         0         Error Response received on SLI port 0.        	    |
 <57>    SPRT1_ERR R/W     0x0         0         Error Response received on SLI port 1.        	    |
 <59:58> NS        R/W     0x0         0         Reserved for SLI port expansion                    |
 <60>    ILL_PAD   R/W     0x0         0         Illegal packet csr address.             	    |
 <61>    PIPE_ERR  R/W     0x0         0         Out of range PIPE value.                      	    |
 <63:62> NS        R/W     0x0         0         Reserved                                           |

 Notes: This CSR is not used when the corresponding MAC is sRIO.
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_SCRATCH_1 = SLI's Scratch 1
 *
 * A general purpose 64 bit register for SW use.
 *

     ==============================================================
     SLI_SCRATCH_1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DATA     R/W      0           NS        The value in this register is totaly SW dependent. |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_SCRATCH_2 = SLI's Scratch 2
 *
 * A general purpose 64 bit register for SW use.
 *

     ==============================================================
     SLI_SCRATCH_2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DATA     R/W      0           NS        The value in this register is totaly SW dependent. |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_DMAx_INT_LEVEL = SLI DMAx Interrupt Level
 *
 * Thresholds for DMA count and timer interrupts.
 *

     ==============================================================
     SLI_DMA(0..1)_INT_LEVEL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32>  TIME    R/W      0x0         NS        Whenever the SLI_DMAx_TIM[TIM] timer exceeds       |
						  this value, SLI_INT_SUM[DTIME<x>] is set.	    |
                                                  The SLI_DMAx_TIM[TIM] timer increments every SLI  |
                                                  clock whenever SLI_DMAx_CNT[CNT]!=0, and is 	    |
                                                  cleared when SLI_INT_SUM[DTIME<x>] is written with|
						  one.						    |
 <31:0>   CNT     R/W      0x0         NS        Whenever SLI_DMAx_CNT[CNT] exceeds this value,	    |
						  SLI_INT_SUM[DCNT<x>] is set.			    |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_DMAx_CNT = SLI DMA Count
 *
 * The DMA Count value.
 *

     ==============================================================
     SLI_DMA(0..1)_CNT Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved					    |
 <31:0>  CNT      R/W      0x0         NS        The DMA counter.				    |
                                                  Writing this field will cause the written value   |
						  to be subtracted from DMA. HW will optionally	    |
						  increment this field after it completes an	    |
						  OUTBOUND or EXTERNAL-ONLY DMA instruction. These  |
						  increments may cause interrupts. Refer to	    |
						  SLI_DMAx_INT_LEVEL and SLI_INT_SUM[DCNT,DTIME].   |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_DMAx_TIM = SLI DMA Timer
 *
 * The DMA Timer value.
 *

     ==============================================================
     SLI_DMA(0..1)_TIM Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved					    |
 <31:0>  TIM      RO       0x0         NS        The DMA timer value.				    |
						  The timer will increment when SLI_DMAx_CNT[CNT]!=0|
						  and will clear when SLI_DMAx_CNT[CNT]==0	    |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_CTL_STATUS = SLI Control Status Register
 *
 * Contains control and status for SLI. Writes to this register are not ordered with writes/reads to the MAC Memory space.
 * To ensure that a write has completed the user must read the register before making an access(i.e. MAC memory space)
 * that requires the value of this register to be updated.
 *

     ==============================================================
     SLI_CTL_STATUS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   CHIP_REV  RO      NS          NS        The chip revision.                                 |
 <13:8>  P0_NTAGS  R/W     0x20        0x20      Number of tags available for MAC Port0.            |
                                                 In RC mode 1 tag is needed for each outbound TLP   |
                                                 that requires a CPL TLP. In Endpoint mode the      |
                                                 number of tags required for a TLP request is       |
                                                 1 per 64-bytes of CPL data + 1.                    |
                                                 This field should only be written as part of       |
                                                 reset sequence, before issuing any reads, CFGs, or |
                                                 IO transactions from the core(s).                  |
 <19:14> P1_NTAGS  R/W     0x20        0x20      Number of tags available for MAC Port1.            |
                                                 In RC mode 1 tag is needed for each outbound TLP   |
                                                 that requires a CPL TLP. In Endpoint mode the      |
                                                 number of tags required for a TLP request is       |
                                                 1 per 64-bytes of CPL data + 1.                    |
                                                 This field should only be written as part of       |
                                                 reset sequence, before issuing any reads, CFGs, or |
                                                 IO transactions from the core(s).                  |
 <63:20> NS        RAZ     NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_BIST_STATUS = SLI's BIST Status Register
 *
 * Results from BIST runs of SLI's memories.
 *

     ==============================================================
     SLI_BIST_STATUS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NCB_CMD  RO       0x0         0         BIST Status for NCB Outbound Commands
 <1>     MSI      RO       0x0         0         BIST Status for MSI Memory Map
 <2>     DSI0_0   RO       0x0         0         BIST Status for DSI0 Memory 0
 <3>     DSI0_1   RO       0x0         0         BIST Status for DSI0 Memory 1
 <4>     DSI1_0   RO       0x0         0         BIST Status for DSI1 Memory 0
 <5>     DSI1_1   RO       0x0         0         BIST Status for DSI1 Memory 1
 <6>     NS       RAZ      NS          NS        Reserved
 <7>     NS       RAZ      NS          NS        Reserved
 <8>     NS       RAZ      NS          NS        Reserved
 <9>     P2N1_P1  RO       0x0         0         BIST Status for P2N Port1 P1
 <10>    P2N1_P0  RO       0x0         0         BIST Status for P2N Port1 P0
 <11>    P2N1_N   RO       0x0         0         BIST Status for P2N Port1 N
 <12>    P2N1_C1  RO       0x0         0         BIST Status for P2N Port1 C1
 <13>    P2N1_C0  RO       0x0         0         BIST Status for P2N Port1 C0
 <14>    P2N0_P1  RO       0x0         0         BIST Status for P2N Port0 P1
 <15>    P2N0_P0  RO       0x0         0         BIST Status for P2N Port0 P0
 <16>    P2N0_N   RO       0x0         0         BIST Status for P2N Port0 N
 <17>    P2N0_C1  RO       0x0         0         BIST Status for P2N Port0 C1
 <18>    P2N0_C0  RO       0x0         0         BIST Status for P2N Port0 C0
 <19>    NS       RAZ      NS          NS        Reserved
 <20>    NS       RAZ      NS          NS        Reserved
 <21>    NS       RAZ      NS          NS        Reserved
 <22>    NS       RAZ      NS          NS        Reserved
 <23>    NS       RAZ      NS          NS        Reserved
 <24>    NS       RAZ      NS          NS        Reserved
 <25>    CPL_P1   RO       0x0         0         BIST Status for CPL Port 1
 <26>    CPL_P0   RO       0x0         0         BIST Status for CPL Port 0
 <27>    N2P1_O   RO       0x0         0         BIST Status for N2P Port1 Data
 <28>    N2P1_C   RO       0x0         0         BIST Status for N2P Port1 Cmd
 <29>    N2P0_O   RO       0x0         0         BIST Status for N2P Port0 Data
 <30>    N2P0_C   RO       0x0         0         BIST Status for N2P Port0 Cmd
 <31>    NCB_REQ  RO       0x0         0         BIST Status for NCB Request FIFO
 <63:32> NS       RAZ      NS          NS        Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_DATA_OUT_CNT = SLI DATA OUT COUNT
 *
 * The EXEC data out fifo-count and the data unload counter.
 *

     ==============================================================
     SLI_DATA_OUT_CNT Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <5:0>   P0_FCNT  RO       0x0         NS        MAC Port0 Data Out Fifo Count. Number of address   |
                                                 data words to be sent out the MAC port presently   |
                                                 buffered in the FIFO.                              |
 <21:6>  P0_UCNT  RO       0x0         NS        MAC Port0 Fifo Unload Count. This counter is       |
                                                 incremented by '1' every time a word is removed    |
                                                 from the Data Out FIFO, whose count is shown in    |
                                                 P0_FCNT.                                           |
 <27:22> P1_FCNT  RO       0x0         NS        MAC Port1 Data Out Fifo Count. Number of address   |
                                                 data words to be sent out the MAC port presently   |
                                                 buffered in the FIFO.                              |
 <43:28> P1_UCNT  RO       0x0         NS        MAC Port1 Fifo Unload Count. This counter is       |
                                                 incremented by '1' every time a word is removed    |
                                                 from the Data Out FIFO, whose count is shown in    |
                                                 P0_FCNT.                                           |
 <63:44> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_LAST_WIN_RDATA0 = SLI Last Window Read Data Port0
 *
 * The data from the last initiated window read.
 *

     ==============================================================
     SLI_LAST_WIN_RDATA0 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   DATA     RO       0x0         NS        Last window read data.                             |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_LAST_WIN_RDATA1 = SLI Last Window Read Data Port1
 *
 * The data from the last initiated window read.
 *

     ==============================================================
     SLI_LAST_WIN_RDATA1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   DATA     RO       0x0         NS        Last window read data.                             |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_STATE1 = SLI State 1
 *
 * State machines in SLI. For debug.
 *

     ==============================================================
     SLI_STATE1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <38:0>  CSR      RO       0x1         NS        CSR State                                          |
 <39>    ARB      RO       0x0         NS        ARB State                                          |
 <51:40> CPL0     RO       0x1         NS        CPL0 State                                         |
 <63:52> CPL1     RO       0x1         NS        CPL1 State                                         |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_STATE2 = SLI State 2
 *
 * State machines in SLI. For debug.
 *

     ==============================================================
     SLI_STATE2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   NND      RO       0x1         NS        NND State                                          |
 <15:8>  NNP0     RO       0x1         NS        NNP0 State                                         |
 <30:16> CSM0     RO       0x1         NS        CSM0 State                                         |
 <45:31> CSM1     RO       0x1         NS        CSM1 State                                         |
 <46>    RAC      RO       0x1         NS        RAC State                                          |
 <47>    NS       RAZ      NS          NS        Reserved					    |
 <55:48> NNP1     RO       0x1         NS        NNP1 State                                         |
 <63:56> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_STATE3 = SLI State 3
 *
 * State machines in SLI. For debug.
 *

     ==============================================================
     SLI_STATE3 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <12:0>  NSM0     RO       0x1         NS        NSM0 State                                         |
 <25:13> NSM1     RO       0x1         NS        NSM1 State                                         |
 <40:26> PSM0     RO       0x1         NS        PSM0 State                                         |
 <55:41> PSM1     RO       0x1         NS        PSM1 State                                         |
 <63:56> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PCIE_MSI_RCV_B1 = SLI MAC MSI Receive Byte 1
 *
 * Register where MSI writes are directed from the MAC.
 *

     ==============================================================
     SLI_PCIE_MSI_RCV_B1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   NS       RAZ      NS          NS        Reserved					    |
 <15:8>  INT      R/W      0x0         NS        A write to this register will result in a bit in   |
                                                 one of the SLI_MSI_RCV# registers being set.       |
	                                         Which bit is set is dependent on the previously    |
                                                 written using the SLI_MSI_WR_MAP register or if    |
                                                 not previously written the reset value of the MAP. |
 <63:16> NS       RAZ      NS          NS        Reserved					    |

 Notes: This CSR can be used by PCIe and sRIO MACs.
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PCIE_MSI_RCV_B2 = SLI MAC MSI Receive Byte 2
 *
 * Register where MSI writes are directed from the MAC.
 *

     ==============================================================
     SLI_PCIE_MSI_RCV_B2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  NS       RAZ      NS          NS        Reserved					    |
 <23:16> INT      R/W      0x0         NS        A write to this register will result in a bit in   |
                                                 one of the SLI_MSI_RCV# registers being set.      |
	                                         Which bit is set is dependent on the previously    |
                                                 written using the SLI_MSI_WR_MAP register or if   |
                                                 not previously written the reset value of the MAP. |
 <63:24> NS       RAZ      NS          NS        Reserved					    |

 Notes: This CSR can be used by PCIe and sRIO MACs.
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PCIE_MSI_RCV_B3 = SLI MAC MSI Receive Byte 3
 *
 * Register where MSI writes are directed from the MAC.
 *

     ==============================================================
     SLI_PCIE_MSI_RCV_B3 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <23:0>   NS       RAZ      NS          NS       Reserved					    |
 <31:24>  INT      R/W      0x0         NS       A write to this register will result in a bit in   |
                                                 one of the SLI_MSI_RCV# registers being set.      |
	                                         Which bit is set is dependent on the previously    |
                                                 written using the SLI_MSI_WR_MAP register or if   |
                                                 not previously written the reset value of the MAP. |
 <63:32> NS       RAZ      NS          NS        Reserved					    |

 Notes: This CSR can be used by PCIe and sRIO MACs.
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_PORT[0..31]_PKIND = SLI Port Pkind
 *
 * The SLI/DPI supports 32 input rings for fetching input packets. This register maps the input-rings (0-31) to a PKIND.
 *

     ==============================================================
     SLI_PORT(0..31)_PKIND Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <5:0>   PKIND    R/W      0x0         NS        Port Kind For this Ring.                           |
 <7:6>   NS       RAZ      NS          NS        Reserved					    |
 <13:8>  BPKIND   R/W      0x0         NS        Back-pressure pkind for this Ring.                 |
 <63:14> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT[0..31]_OUT_SIZE = SLI Packet Out Size
 *
 * Contains the BSIZE and ISIZE for output packet Rings.
 *

     ==============================================================
     SLI_PKT(0..31)_OUT_SIZE Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  BSIZE    R/W      0x0         NS        BUFFER SIZE (bytes) for ring @.                    |
 <22:16> ISIZE    R/W      0x0         NS        INFO BYTES size (bytes) for ring @. Legal sizes    |
                                                 are 0 to 120. Not used in buffer-pointer-only mode.|
 <63:23> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===



 *
 *                  SLI_PKT_INSTR_ENB = SLI's Packet Instruction Enable
 *
 * Enables the instruction fetch for a Packet-ring.
 *

     ==============================================================
     SLI_PKT_INSTR_ENB Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  ENB      R/W      0           NS        When ENB<i>=1, instruction input ring i is enabled.|
 <63:32> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_OUT_ENB = SLI's Packet Output Enable
 *
 * Enables the output packet engines.
 *

     ==============================================================
     SLI_PKT_OUT_ENB Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  ENB      R/W      0           NS        When ENB<i>=1, packet output ring i is enabled.    |
                                                 If an error occurs on reading pointers for an      |
						 output ring, the ring will be disabled by clearing |
						 the bit associated with the ring to '0'.           |
 <63:32> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_INSTR_SIZE = SLI's Packet Instruction Size
 *
 * Determines if instructions are 64 or 32 byte in size for a Packet-ring.
 *

     ==============================================================
     SLI_PKT_INSTR_SIZE Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  IS_64B   R/W      0           NS        When IS_64B<i>=1, instruction input ring i uses 64B|
                                                 instructions, else 32B instructions.               |
 <63:32> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_SLIST_ROR = SLI's Packet Scatter List Relaxed Ordering
 *
 * The ROR field for the TLP when fetching Scatter List.
 *

     ==============================================================
     SLI_PKT_SLIST_ROR Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  ROR      R/W      0           NS        ADDRTYPE<0> for the packet output ring reads that  |
                                                 fetch buffer/info pointer pairs.                   |
                                                 ROR<i> becomes ADDRTYPE<0> in DPI/SLI reads that   |
                                                 fetch buffer/info pairs from packet output ring i  |
                                                 (from address SLI_PKTi_SLIST_BADDR+ in MAC memory  |
                                                 space.)                                            |
                                                 ADDRTYPE<0> is the relaxed-order attribute for PCIe|
                                                 , helps select an SRIO*_S2M_TYPE* entry with sRIO. |
 <63:32> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_SLIST_NS = SLI's Packet Scatter List No Snoop
 *
 * The NS field for the TLP when fetching Scatter List.
 *

     ==============================================================
     SLI_PKT_SLIST_NS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  NSR      R/W      0           NS        ADDRTYPE<1> for the packet output ring reads that  |
                                                 fetch buffer/info pointer pairs.                   |
                                                 NSR<i> becomes ADDRTYPE<1> in DPI/SLI reads that   |
                                                 fetch buffer/info pairs from packet output ring i  |
                                                 (from address SLI_PKTi_SLIST_BADDR+ in MAC memory  |
                                                 space.)                                            |
                                                 ADDRTYPE<1> is the no-snoop attribute for PCIe     |
                                                 , helps select an SRIO*_S2M_TYPE* entry with sRIO. |
 <63:32> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_PKT_SLIST_ES = SLI's Packet Scatter List Endian Swap
 *
 * The Endian Swap for Scatter List Read.
 *

     ==============================================================
     SLI_PKT_SLIST_ES Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ES       R/W      0           NS        ES<1:0> for the packet output ring reads that      |
                                                 fetch buffer/info pointer pairs.                   |
                                                 ES<2i+1:2i> becomes ES<1:0> in DPI/SLI reads that  |
                                                 fetch buffer/info pairs from packet output ring i  |
                                                 (from address SLI_PKTi_SLIST_BADDR+ in MAC memory  |
                                                 space.)                                            |
                                                 ES<1:0> is the endian-swap attribute for these MAC |
                                                 memory space reads.                                |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_IPTR = SLI's Packet Info Poitner
 *
 * Controls using the Info-Pointer to store length and data.
 *

     ==============================================================
     SLI_PKT_IPTR Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  IPTR     R/W      0           NS        When IPTR<i>=1, packet output ring i is in info-   |
                                                 pointer mode, else buffer-pointer-only mode.       |
 <63:32> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_DPADDR = SLI's Packet Data Pointer Addr
 *
 * Used to detemine address and attributes for packet data writes.
 *

     ==============================================================
     SLI_PKT_DPADDR Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DPTR     R/W      0         0xffffffff  Determines whether buffer/info pointers are        |
                                                 DPTR format 0 or DPTR format 1.                    |
                                                 When DPTR<i>=1, the buffer/info pointers fetched   |
                                                 from packet output ring i are DPTR format 0.       |
                                                 When DPTR<i>=0, the buffer/info pointers fetched   |
                                                 from packet output ring i are DPTR format 1.       |
                                                 (Replace SLI_PKT_INPUT_CONTROL[D_ESR,D_NSR,D_ROR]  |
                                                 in the HRM descriptions of DPTR format 0/1 with    |
                                                 SLI_PKT_DATA_OUT_ES[ES<2i+1:2i>],                  |
                                                 SLI_PKT_DATA_OUT_NS[NSR<i>], and                   |
                                                 SLI_PKT_DATA_OUT_ROR[ROR<i>], respectively,        |
                                                 though.)                                           |
 <63:32> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_DATA_OUT_ROR = SLI's Packet Data Out Relaxed Ordering
 *
 * The ROR field for the TLP when writing Packet Data.
 *

     ==============================================================
     SLI_PKT_DATA_OUT_ROR Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  ROR      R/W      0           NS        ADDRTYPE<0> or MACADD<60> for buffer/info writes.  |
                                                 ROR<i> becomes either ADDRTYPE<0> or MACADD<60>    |
                                                 for writes to buffer/info pair MAC memory space    |
                                                 addresses fetched from packet output ring i.       |
                                                 ADDRTYPE<0> if SLI_PKT_DPADDR[DPTR<i>]=1, else     |
                                                 MACADD<60>.                                        |
                                                 In the latter case,ADDRTYPE<0> comes from DPTR<60>.|
                                                 ADDRTYPE<0> is the relaxed-order attribute for PCIe|
                                                 , helps select an SRIO*_S2M_TYPE* entry with sRIO. |
 <63:32> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_DATA_OUT_NS = SLI's Packet Data Out No Snoop
 *
 * The NS field for the TLP when writing packet data.
 *

     ==============================================================
     SLI_PKT_DATA_OUT_NS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  NSR      R/W      0           NS        ADDRTYPE<1> or MACADD<61> for buffer/info writes.  |
                                                 NSR<i> becomes either ADDRTYPE<1> or MACADD<61>    |
                                                 for writes to buffer/info pair MAC memory space    |
                                                 addresses fetched from packet output ring i.       |
                                                 ADDRTYPE<1> if SLI_PKT_DPADDR[DPTR<i>]=1, else     |
                                                 MACADD<61>.                                        |
                                                 In the latter case,ADDRTYPE<1> comes from DPTR<61>.|
                                                 ADDRTYPE<1> is the no-snoop attribute for PCIe     |
                                                 , helps select an SRIO*_S2M_TYPE* entry with sRIO. |
 <63:32> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_DATA_OUT_ES = SLI's Packet Data Out Endian Swap
 *
 * The Endian Swap for writing Data Out.
 *

     ==============================================================
     SLI_PKT_DATA_OUT_ES Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ES       R/W      0           NS        ES<1:0> or MACADD<63:62> for buffer/info writes.   |
                                                 ES<2i+1:2i> becomes either ES<1:0> or              |
                                                 MACADD<63:62> for writes to buffer/info pair       |
                                                 MAC memory space addresses fetched from packet     |
                                                 output ring i. ES<1:0> if SLI_PKT_DPADDR[DPTR<i>]=1|
                                                 , else MACADD<63:62>.                              |
                                                 In the latter case, ES<1:0> comes from DPTR<63:62>.|
                                                 ES<1:0> is the endian-swap attribute for these MAC |
                                                 memory space writes.                               |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_OUT_BMODE = SLI's Packet Out Byte Mode
 *
 * Control the updating of the SLI_PKT#_CNT register.
 *

     ==============================================================
     SLI_PKT_OUT_BMODE Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0> BMODE     R/W      0           NS        Determines whether SLI_PKTi_CNTS[CNT] is a byte or |
                                                 packet counter.                                    |
                                                 When BMODE<i>=1, SLI_PKTi_CNTS[CNT] is a byte      |
                                                 counter, else SLI_PKTi_CNTS[CNT] is a packet       |
                                                 counter.                                           |
 <63:32> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_PCIE_PORT = SLI's Packet To MAC Port Assignment
 *
 * Assigns Packet Ports to MAC ports.
 *

     ==============================================================
     SLI_PKT_PCIE_PORT Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  PP       R/W      0           NS        The physical MAC  port that the output ring uses.  |
						 Two bits are used per ring (i.e. ring 0 [1:0],     |
                                                 ring 1 [3:2], ....). A value of '0 means           |
  						 that the Packetring is assign to MAC Port 0, a '1' |
						 MAC Port 1, '2' and '3' are reserved.              |
----------------------------------------------------------------------------------------------------
===

 *
 * 0x90F0 reserved SLI_PKT_PCIE_PORT2
 *






 *
 *                  SLI_PKT_INT_LEVELS = SLI's Packet Interrupt Levels
 *
 * Output packet interrupt levels.
 *

     ==============================================================
     SLI_PKT_INT_LEVELS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>   CNT     R/W      0x0         NS         Output ring counter interrupt threshold            |
                                                 SLI sets SLI_PKT_CNT_INT[PORT<i>] whenever         |
                                                 SLI_PKTi_CNTS[CNT] > CNT                           |
<53:32>  TIME    R/W      0x0         NS         Output ring counter time interrupt threshold       |
                                                 SLI sets SLI_PKT_TIME_INT[PORT<i>] whenever        |
                                                 SLI_PKTi_CNTS[TIMER] > TIME                        |
<63:54>  NS      RAZ      NS          NS         Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_CNT_INT = SLI Packet Counter Interrupt
 *
 * The packets rings that are interrupting because of Packet Counters.
 *

     ==============================================================
     SLI_PKT_CNT_INT Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>   PORT     R/W1C   0x0         NS        Output ring packet counter interrupt bits          |
                                                 SLI sets PORT<i> whenever                          |
						 SLI_PKTi_CNTS[CNT] > SLI_PKT_INT_LEVELS[CNT].      |
                                                 SLI_PKT_CNT_INT_ENB[PORT<i>] is the corresponding  |
                                                 enable.                                            |
 <63:32>  NS       RAZ     NS          NS        Reserved                                           |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_TIME_INT = SLI Packet Timer Interrupt
 *
 * The packets rings that are interrupting because of Packet Timers.
 *

     ==============================================================
     SLI_PKT_TIME_INT Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>   PORT     R/W1C   0x0         NS        Output ring packet timer interrupt bits            |
                                                 SLI sets PORT<i> whenever                          |
						 SLI_PKTi_CNTS[TIMER] > SLI_PKT_INT_LEVELS[TIME].   |
                                                 SLI_PKT_TIME_INT_ENB[PORT<i>] is the corresponding |
                                                 enable.                                            |
 <63:32>  NS       RAZ     NS          NS        Reserved                                           |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_CNT_INT_ENB = SLI Packet Counter Interrupt Enable
 *
 * Enable for the packets rings that are interrupting because of Packet Counters.
 *

     ==============================================================
     SLI_PKT_CNT_INT_ENB Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>   PORT     R/W     0x0         NS        Output ring packet counter interrupt enables       |
                                                 When both PORT<i> and corresponding                |
                                                 SLI_PKT_CNT_INT[PORT<i>] are set, for any i,       |
                                                 then SLI_INT_SUM[PCNT] is set, which can cause     |
                                                 an interrupt.                                      |
 <63:32>  NS       RAZ     NS          NS        Reserved                                           |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_TIME_INT_ENB = SLI Packet Timer Interrupt Enable
 *
 * The packets rings that are interrupting because of Packet Timers.
 *

     ==============================================================
     SLI_PKT_TIME_INT_ENB Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>   PORT     R/W     0x0         NS        Output ring packet timer interrupt enables         |
                                                 When both PORT<i> and corresponding                |
                                                 SLI_PKT_TIME_INT[PORT<i>] are set, for any i,      |
                                                 then SLI_INT_SUM[PTIME] is set, which can cause    |
                                                 an interrupt.                                      |
 <63:32>  NS       RAZ     NS          NS        Reserved                                           |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_INPUT_CONTROL = SLI's Packet Input Control
 *
 * Control for reads for gather list and instructions.
 *

     ==============================================================
     SLI_PKT_INPUT_CONTROL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ROR      R/W      0x0         NS        ADDRTYPE<0> for packet input instruction reads and
                                                 gather list (i.e. DPI component) reads from MAC
                                                 memory space.
                                                 ADDRTYPE<0> is the relaxed-order attribute for PCIe
                                                 , helps select an SRIO*_S2M_TYPE* entry with sRIO.
 <2:1>   ESR      R/W      0x0         NS        ES<1:0> for packet input instruction reads and
                                                 gather list (i.e. DPI component) reads from MAC
                                                 memory space.
                                                 ES<1:0> is the endian-swap attribute for these MAC
                                                 memory space reads.
 <3>     NSR      R/W      0x0         NS        ADDRTYPE<1> for packet input instruction reads and
                                                 gather list (i.e. DPI component) reads from MAC
                                                 memory space.
                                                 ADDRTYPE<1> is the no-snoop attribute for PCIe
                                                 , helps select an SRIO*_S2M_TYPE* entry with sRIO.
 <4>     USE_CSR  R/W      0x0         1         When set '1' the csr value will be used for
                                                 ROR, ESR, and NSR. When clear '0' the value in
                                                 DPTR will be used. In turn the bits not used for
                                                 ROR, ESR, and NSR, will be used for bits [63:60]
                                                 of the address used to fetch packet data.
 <5>     D_ROR    R/W      0x0         NS        ADDRTYPE<0> or MACADD<60> for packet input data
                                                 reads.
                                                 D_ROR becomes either ADDRTYPE<0> or MACADD<60>
                                                 for MAC memory space reads of packet input data
                                                 fetched for any packet input ring.
                                                 ADDRTYPE<0> if USE_CSR=1, else MACADD<60>.
                                                 In the latter case, ADDRTYPE<0> comes from DPTR<60>.
                                                 ADDRTYPE<0> is the relaxed-order attribute for PCIe
                                                 , helps select an SRIO*_S2M_TYPE* entry with sRIO.
 <7:6>   D_ESR    R/W      0x0         NS        ES<1:0> or MACADD<63:62> for packet input data
                                                 reads.
                                                 D_ESR becomes either ES<1:0> or MACADD<63:62>
                                                 for MAC memory space reads of packet input data
                                                 fetched for any packet input ring.
                                                 ES<1:0> if USE_CSR=1, else MACADD<63:62>.
                                                 In the latter case, ES<1:0> comes from DPTR<63:62>.
                                                 ES<1:0> is the endian-swap attribute for these MAC
                                                 memory space reads.
 <8>     D_NSR    R/W      0x0         NS        ADDRTYPE<1> or MACADD<61> for packet input data
                                                 reads.
                                                 D_NSR becomes either ADDRTYPE<1> or MACADD<61>
                                                 for MAC memory space reads of packet input data
                                                 fetched for any packet input ring.
                                                 ADDRTYPE<1> if USE_CSR=1, else MACADD<61>.
                                                 In the latter case, ADDRTYPE<1> comes from DPTR<61>.
                                                 ADDRTYPE<1> is the no-snoop attribute for PCIe
                                                 , helps select an SRIO*_S2M_TYPE* entry with sRIO.
 <21:9>  PBP_DHI  R/W      0x0         0         PBP_DHI replaces address bits that are used
                                                 for parse mode and skip-length when
                                                 SLI_PKTi_INSTR_HEADER[PBP]=1.
                                                 PBP_DHI becomes either MACADD<63:55> or MACADD<59:51>
                                                 for the instruction DPTR reads in this case.
                                                 The instruction DPTR reads are called
                                                 "First Direct" or "First Indirect" in the HRM.
                                                 When PBP=1, if "First Direct" and USE_CSR=0, PBP_DHI
                                                 becomes MACADD<59:51>, else MACADD<63:55>.
 <22>    PKT_RR   R/W      0x0         1         When set '1' the input packet selection will be
                                                 made with a Round Robin arbitration. When '0'
                                                 the input packet ring is fixed in priority,
                                                 where the lower ring number has higher priority.
 <23>    PIN_RST  R/W      0x0         0         Packet In Reset. When a gather-list read receives
                                                 an error this bit (along with SLI_INT_SUM[PGL_ERR])
                                                 is set. When receiveing a PGL_ERR interrupt the SW
                                                 should:
                                                 1. Wait 2ms to allow any outstanding reads to return
                                                    or be timed out.
                                                 2. Write a '0' to this bit.
                                                 3. Startup the packet input again (all previous
                                                    CSR setting of the packet-input will be lost).
                                                 When this bit is set the CSRs associated with
                                                 packet out will return undefined results.
 <39:24> NS       RAZ      NS          NS        Reserved					    |
 <40>    PRC_IDLE RO       0           NS        PRC In IDLE
 <47:41> NS       RAZ      NS          NS        Reserved
 <54:48> GII_RDS  RO       0           NS        GII Reads Out
 <55>    GII_ERST RO       0           NS        GII Error Reset
 <62:56> PRD_RDS  RO       0           NS        PRD Reads Out
 <63>    PRD_ERST RO       0           NS        PRD Error Reset
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_OUTPUT_WMARK = SLI's Packet Output Water Mark
 *
 * Value that when the SLI_PKT#_SLIST_BAOFF_DBELL[DBELL} value is less then that backpressure for the rings will be applied.
 *

     ==============================================================
     SLI_PKT_OUTPUT_WMARK Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  WMARK    R/W      0x0         14        Value when DBELL count drops below backpressure    |
						 for the ring will be applied to the PKO.           |
 <63:32> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_INSTR_RD_SIZE = SLI Instruction Read Size
 *
 * The number of instruction allowed to be read at one time.
 *

     ==============================================================
     SLI_PKT_INSTR_RD_SIZE Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  RDSIZE   R/W      0x0         NS        Number of instructions to be read in one MAC read  |
                                                 request for a packet-ring. Every two bits          |
                                                 (i.e. 1:0, 3:2, 5:4..) are assign to rings (i.e.   |
						 0, 1, 2, ..).                                      |
                                                 Less instructions will be read if the doorbell is  |
                                                 smaller thant the value here.                      |
                                                 Two bit value are:                                 |
                                                 0 - 2 Instruction                                  |
                                                 1 - 4 Instructions                                 |
                                                 2 - 6 Instructions                                 |
                                                 3 - 8 Instructions                                 |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_PKT_IN_PCIE_PORT = SLI's Packet In To MAC Port Assignment
 *
 * Assigns Packet Input rings to MAC ports.
 *

     ==============================================================
     SLI_PKT_IN_PCIE_PORT Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  PP       R/W      0           NS        The physical MAC port that the Packet ring number  |
				  		 is assigned. Two bits are used per ring            |
						 (i.e. ring 0 [1:0], ring 1 [3:2], ..), where ring 0|
                                                 is [1:0], ring 1 is [3:2], etc.
                                                 PP = 0 Physical MAC 0
                                                 PP = 1 Physical MAC 0
                                                 PP = 2 Reserved
                                                 PP = 3 Reserved
----------------------------------------------------------------------------------------------------
===

*
*91c0 reserved
*91d0 reserved
*91e0 reserved
*



 *
 *                  SLI_PKT_PORT_IN_RST = SLI Packet Port In Reset
 *
 * Vector bits related to packet-ringt for ones that are reset.
 *

     ==============================================================
     SLI_PKT_PORT_IN_RST Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  OUT_RST  RO       0           NS        When asserted '1' the vector bit cooresponding     |
                                                 to the outbound Packet-ring is in reset.           |
 <63:32> IN_RST   RO       0           NS        When asserted '1' the vector bit cooresponding     |
                                                 to the inbound Packet-ring is in reset.            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_IN_INSTR_COUNTS = SLI Packet Input Instrutction Counts
 *
 * Keeps track of the number of instructions read into the FIFO and Packets sent to IPD.
 *

     ==============================================================
     SLI_PKT_IN_INSTR_COUNTS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  RD_CNT   RO       0           NS        Shows the value of instructions that have had reads|
                                                 issued for them.                                   |
                                                 to the Packet-ring is in reset.                    |
 <63:32> WR_CNT   RO       0           NS        Shows the number of packets sent to the IPD.       |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_CTL = SLI Packet Control
 *
 * Control for packets.
 *

     ==============================================================
     SLI_PKT_CTL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   PKT_BP   RAZ      0x0         0x0       Not used in o68.                                   |
 <4>     RING_EN  RAZ      0x0         0x0       Not used in o68.                                   |
 <63:5>  NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_TX_PIPE = SLI Packet TX Pipe
 *
 * Contains the starting pipe number and number of pipes used by the SLI packet Output.
 * If a packet is recevied from PKO with an out of range PIPE number, the following occurs:
 * - SLI_INT_SUM[PIPE_ERR] is set.
 * - the out of range pipe value is used for returning credits to the PKO.
 * - the PCIe packet engine will treat the PIPE value to be equal to [BASE].
 *
 *

     ==============================================================
     SLI_TX_PIPE Type=PEXP_NCB
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <6:0>   BASE     R/W      0           NS        When NUMP is non-zero, indicates the base pipe	    |
						  number the SLI/DPI will accept.		    |
						  The SLI/DPI will accept pko packets from pipes in |
						  the range of:					    |
						    BASE .. (BASE+(NUMP-1))			    |
						  BASE and NUMP must be constrained such that	    |
						    1) BASE+(NUMP-1) < 127			    |
						    2) Each used PKO pipe must map to exactly	    |
						       one ring. Where BASE == ring 0, BASE+1 == to |
                                                       ring 1, etc..
						    3) The pipe ranges must be consistent with	    |
						       the PKO configuration.			    |
 <15:7>  NS       RAZ      NS          NS        Reserved					    |
 <23:16> NUMP     R/W      0           NS        Number of pipes the the SLI/DPI supports.	    |
                                                 When this value is 4 or less there is a performance|
                                                 advantage for output packets.                      |
                                                 The SLI/DPI can support up to 32 pipes assigned to |
                                                 packet-rings 0 - 31.                               |
 <63:24> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_OUT_BP_EN = SLI Packet Output Backpressure Enable
 *
 * Enables sending backpressure to the PKO.
 *

     ==============================================================
     SLI_PKT_OUT_BP_EN Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  BP_EN    R/W      0xFFFFFFFF  0xFFFFFFFF  When set '1' enable the ring level backpressure  |
                                                   to be sent to PKO. Backpressure is sent to the   |
                                                   PKO on the PIPE number associated with the ring. |
                                                   (See SLI_TX_PIPE for ring to pipe associations). |
 <63:32> NS       RAZ      NS          NS          Reserved					    |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_PKT[0..31]_SLIST_BADDR = SLI Packet ring# Scatter List Base Address
 *
 * Start of Scatter List for output packet pointers - MUST be 16 byte alligned
 *

     ==============================================================
     SLI_PKT(0..31)_SLIST_BADDR Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   NS       RAZ      NS          NS        Reserved					    |
 <63:4>  ADDR     R/W      0x0         NS        Base address for scatter list pointers.            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT[0..31]_SLIST_BAOFF_DBELL = SLI Packet ring# Scatter List Base Address Offset and Doorbell
 *
 * The doorbell and base address offset for next read.
 *

     ==============================================================
     SLI_PKT(0..31)_SLIST_BAOFF_DBELL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DBELL    R/W      0x0         0         Scatter list doorbell count. Writes to this field  |
                                                 will increment the value here. Reads will return   |
                                                 present value. The value of this field is          |
                                                 decremented as read operations are ISSUED for      |
                                                 scatter pointers.                                  |
                                                 A write of 0xFFFFFFFF will clear DBELL and AOFF    |
 <63:32> AOFF     RO       0x0         NS        The offset from the SLI_PKT[0..31]_SLIST_BADDR    |
                                                 where the next SList pointer will be read.         |
	                                         A write of 0xFFFFFFFF to the DBELL field will      |
						 clear DBELL and AOFF                               |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT[0..31]_SLIST_FIFO_RSIZE = SLI Packet ring# Scatter List FIFO and Ring Size.
 *
 * The number of scatter pointer pairs in the scatter list.
 *

     ==============================================================
     SLI_PKT(0..31)_SLIST_FIFO_RSIZE Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  RSIZE    R/W      0x0         NS        The number of scatter pointer pairs contained in   |
                                                 the scatter list ring.                             |
 <63:32> NS       RO       0x0         NS        Reserverd.                                         |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_IN_DONE[0..31]_CNTS = SLI Instruction Done ring# Counts
 *
 * Counters for instructions completed on Input rings.
 *

     ==============================================================
     SLI_PKT_IN_DONE(0..31)_CNTS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  CNT      RO       0x0         NS        This field is incrmented by '1' when an instruction|
						 is completed. This field is incremented as the     |
						 last of the data is read from the MAC.             |
 <63:32> NS       RO       0x0         NS        Reserverd.                                         |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_PKT[0..31]_CNTS = SLI Packet ring# Counts
 *
 * The counters for output rings.
 *

     ==============================================================
     SLI_PKT(0..31)_CNTS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  CNT      R/W      0x0         0         ring counter. This field is incremented as         |
                                                 packets are sent out and decremented in response to|
                                                 writes to this field.                              |
                                                 When SLI_PKT_OUT_BMODE is '0' a value of 1 is      |
						 added to the register for each packet, when '1'    |
						 and the info-pointer is NOT used the length of the |
						 packet plus 8 is added, when '1' and info-pointer  |
						 mode IS used the packet length is added to this    |
						 field.  					    |
 <53:32> TIMER    RO       0x0         0         Timer incremented every 1024 core clocks           |
                                                 when SLI_PKTS#_CNTS[CNT] is non zero. Field        |
                                                 cleared when SLI_PKTS#_CNTS[CNT] goes to 0.        |
                                                 Field is also cleared when SLI_PKT_TIME_INT is     |
                                                 cleared.                                           |
                                                 The first increment of this count can occur        |
                                                 between 0 to 1023 core clocks.                     |
 <63:54> NS       RO      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_PKT[0..31]_INSTR_BADDR = SLI Packet ring# Instruction Base Address
 *
 * Start of Instruction for input packets.
 *

     ==============================================================
     SLI_PKT(0..31)_INSTR_BADDR Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <2:0>   NS       RAZ      NS          NS        Reserved					    |
 <63:3>  ADDR     R/W       0x0         NS        Base address for Instructions.                    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT[0..31]_INSTR_BAOFF_DBELL = SLI Packet ring# Instruction Base Address Offset and Doorbell
 *
 * The doorbell and base address offset for next read.
 *

     ==============================================================
     SLI_PKT(0..31)_INSTR_BAOFF_DBELL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DBELL    R/W      0x0         0         Instruction doorbell count. Writes to this field   |
                                                 will increment the value here. Reads will return   |
                                                 present value. A write of 0xffffffff will set the  |
						 DBELL and AOFF fields to '0'.                      |
 <63:32> AOFF     RO       0x0         NS        The offset from the SLI_PKT[0..31]_INSTR_BADDR     |
                                                 where the next instruction will be read.           |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT[0..31]_INSTR_FIFO_RSIZE = SLI Packet ring# Instruction FIFO and Ring Size.
 *
 * Fifo field and ring size for Instructions.
 *

     ==============================================================
     SLI_PKT(0..31)_INSTR_FIFO_RSIZE Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  RSIZE    R/W      0x0         NS        Instruction ring size.                             |
 <36:32> FCNT     RO       0x0         NS        Fifo count.                                        |
 <45:37> WRP      RO       0x0         NS        Fifo write pointer.                                |
 <54:46> RRP      RO       0x0         NS        Fifo read pointer.                                 |
 <63:55> MAX      RO       0x10        NS        Max Fifo Size.                                     |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT[0..31]_INSTR_HEADER = SLI Packet ring# Instruction Header.
 *
 * VAlues used to build input packet header.
 *

     ==============================================================
     SLI_PKT(0..31)_INSTR_HEADER Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NTAG     R/W      0x0         NS        Becomes PKT_INST_HDR[NTAG]
                                                 when DPI_INST_HDR[R]==0 (and USE_IHDR==1)
 <1>     NTT      R/W      0x0         NS        Becomes PKT_INST_HDR[NTT]
                                                 when DPI_INST_HDR[R]==0 (and USE_IHDR==1)
 <2>     NGRP     R/W      0x0         NS        Becomes PKT_INST_HDR[NGRP]
                                                 when DPI_INST_HDR[R]==0 (and USE_IHDR==1)
 <3>     NQOS     R/W      0x0         NS        Becomes PKT_INST_HDR[NQOS]
                                                 when DPI_INST_HDR[R]==0 (and USE_IHDR==1)
 <5:4>   NS       R/W      0x0         NS        Reserved
                                                 (A R/W field in real HW, but we require SW to
                                                 always write zeroes.)
 <12:6>  SKP_LEN  R/W      0x0         NS        Skip Length. Becomes PKT_INST_HDR[SL]
                                                 when DPI_INST_HDR[R]==0 and USE_IHDR==1 and PBP==0
 <13>    NS       R/W      0x0         NS        Reserved
                                                 (A R/W field in real HW, but we require SW to
                                                 always write zeroes.)
                                                 instruction header sent to IPD.
 <15:14> PAR_MODE R/W      0x0         NS        Parse Mode. Becomes PKT_INST_HDR[PM]
                                                 when DPI_INST_HDR[R]==0 and USE_IHDR==1 and PBP==0
 <20:16> NS       R/W      0x0         NS        Reserved
                                                 (A R/W field in real HW, but we require SW to
                                                 always write zeroes.)
 <21>    USE_IHDR R/W      0x0         NS        When set '1' DPI always prepends a PKT_INST_HDR
                                                 as part of the packet data sent to PIP/IPD,
                                                 regardless of DPI_INST_HDR[R]. (DPI also always
                                                 prepends a PKT_INST_HDR when DPI_INST_HDR[R]=1.)
                                                 USE_IHDR must be set whenever PBP is set.
 <22>    RNTAG    R/W      0x0         NS        Becomes PKT_INST_HDR[NTAG]
                                                 when DPI_INST_HDR[R]==1
 <23>    RNTT     R/W      0x0         NS        Becomes PKT_INST_HDR[NTT]
                                                 when DPI_INST_HDR[R]==1
 <24>    RNGRP    R/W      0x0         NS        Becomes PKT_INST_HDR[NGRP]
                                                 when DPI_INST_HDR[R]==1
 <25>    RNQOS    R/W      0x0         NS        Becomes PKT_INST_HDR[NQOS]
                                                 when DPI_INST_HDR[R]==1
 <27:26> NS       R/W      0x0         NS        Reserved
                                                 (A R/W field in real HW, but we require SW to
                                                 always write zeroes.)
 <34:28> RSKP_LEN R/W      0x0         NS        Skip Length. Becomes PKT_INST_HDR[SL]
                                                 when DPI_INST_HDR[R]==1 and PBP==0
 <35>    NS       RAZ      0x0         NS        Reserved
                                                 (A R/W field in real HW, but we require SW to
                                                 always write zeroes.)
 <37:36> RPARMODE R/W      0x0         NS        Parse Mode. Becomes PKT_INST_HDR[PM]
                                                 when DPI_INST_HDR[R]==1 and PBP==0
 <42:38> NS       RAZ      0x0         NS        Reserved
                                                 (A R/W field in real HW, but we require SW to
                                                 always write zeroes.)
 <43>    PBP      R/W      0x0         NS        Enable Packet-by-packet mode.
                                                 Allows DPI to generate PKT_INST_HDR[PM,SL]
                                                 differently per DPI instruction.
                                                 USE_IHDR must be set whenever PBP is set.
 <63:44> NS       RAZ      NS          NS        Reserved
                                                 (A R/W field in real HW, but we require SW to
                                                 always write zeroes.)
----------------------------------------------------------------------------------------------------
===

//
// Upto 13c00 reserved
//

 *
 *                  SLI_MSI_RCV0 = SLI MSI Receive0
 *
 * Contains bits [63:0] of the 256 bits of MSI interrupts.
 *

     ==============================================================
     SLI_MSI_RCV0 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  INT      R/W1C    0x0         0         Bits 63-0 of the 256 bits of MSI interrupt.
                                                 This register is used to create the legacy
						 CIU2_RAW_xx_yy_IO[PCI_MSI] interrupt.
						 See also CIU2_MSI_RCV.
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_RCV1 = SLI MSI Receive1
 *
 * Contains bits [127:64] of the 256 bits of MSI interrupts.
 *

     ==============================================================
     SLI_MSI_RCV1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  INT      R/W1C    0x0         0         Bits 127-64 of the 256 bits of MSI interrupt.
                                                 This register is used to create the legacy
						 CIU2_RAW_xx_yy_IO[PCI_MSI] interrupt.
						 See also CIU2_MSI_RCV.
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_RCV2 = SLI MSI Receive2
 *
 * Contains bits [191:128] of the 256 bits of MSI interrupts.
 *

     ==============================================================
     SLI_MSI_RCV2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  INT      R/W1C    0x0         0         Bits 191-128 of the 256 bits of MSI interrupt.
                                                 This register is used to create the legacy
						 CIU2_RAW_xx_yy_IO[PCI_MSI] interrupt.
						 See also CIU2_MSI_RCV.
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_RCV3 = SLI MSI Receive3
 *
 * Contains bits [255:192] of the 256 bits of MSI interrupts.
 *

     ==============================================================
     SLI_MSI_RCV3 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  INT      R/W1C    0x0         0         Bits 255-192 of the 256 bits of MSI interrupt.
                                                 This register is used to create the legacy
						 CIU2_RAW_xx_yy_IO[PCI_MSI] interrupt.
						 See also CIU2_MSI_RCV.
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_ENB0 = SLI MSI Enable0
 *
 * Used to enable the interrupt generation for the bits in the SLI_MSI_RCV0.
 *

     ==============================================================
     SLI_MSI_ENB0 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ENB      R/W      0x0 0xffffffffffffffff Enables bit [63:0] of SLI_MSI_RCV0.
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_ENB1 = SLI MSI Enable1
 *
 * Used to enable the interrupt generation for the bits in the SLI_MSI_RCV1.
 *

     ==============================================================
     SLI_MSI_ENB1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ENB      R/W      0x0 0xffffffffffffffff Enables bit [63:0] of SLI_MSI_RCV1.
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_ENB2 = SLI MSI Enable2
 *
 * Used to enable the interrupt generation for the bits in the SLI_MSI_RCV2.
 *

     ==============================================================
     SLI_MSI_ENB2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ENB      R/W      0x0 0xffffffffffffffff Enables bit [63:0] of SLI_MSI_RCV2.
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_ENB3 = SLI MSI Enable3
 *
 * Used to enable the interrupt generation for the bits in the SLI_MSI_RCV3.
 *

     ==============================================================
     SLI_MSI_ENB3 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ENB      R/W      0x0 0xffffffffffffffff Enables bit [63:0] of SLI_MSI_RCV3.
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_WR_MAP = SLI MSI Write MAP
 *
 * Used to write the mapping function of the SLI_PCIE_MSI_RCV to SLI_MSI_RCV registers.
 *

     ==============================================================
     SLI_MSI_WR_MAP Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   MSI_INT  R/W      0x0         NS        Selects the value that would be received when the  |
                                                 SLI_PCIE_MSI_RCV register is written.             |
 <15:8>  CIU_INT  R/W      0x0         NS        Selects which bit in the SLI_MSI_RCV# (0-255)     |
                                                 will be set when the value specified in the        |
                                                 MSI_INT of this register is recevied during a      |
                                                 write to the SLI_PCIE_MSI_RCV register.           |
 <63:16> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_RD_MAP = SLI MSI Read MAP
 *
 * Used to read the mapping function of the SLI_PCIE_MSI_RCV to SLI_MSI_RCV registers.
 *

     ==============================================================
     SLI_MSI_RD_MAP Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   MSI_INT  R/W      0x0         NS        Selects the value that would be received when the  |
                                                 SLI_PCIE_MSI_RCV register is written.             |
 <15:8>  RD_INT   RO       0x0         NS        The value of the map at the location PREVIOUSLY    |
                                                 written to the MSI_INT field of this register.     |
 <63:16> NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PCIE_MSI_RCV = SLI MAC MSI Receive
 *
 * Register where MSI writes are directed from the MAC.
 *

     ==============================================================
     SLI_PCIE_MSI_RCV Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   INT      R/W      0x0         NS        A write to this register will result in a bit in   |
                                                 one of the SLI_MSI_RCV# registers being set.      |
	                                         Which bit is set is dependent on the previously    |
                                                 written using the SLI_MSI_WR_MAP register or if   |
                                                 not previously written the reset value of the MAP. |
 <63:8>  NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_INT_ENB_CIU = SLI's Interrupt Enable CIU Register
 *
 * Used to enable the various interrupting conditions of SLI
 *

     ==============================================================
     SLI_INT_ENB_CIU Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     RML_TO    R/W     0x0         1         Enables SLI_INT_SUM[0] to generate an              |
                                                 interrupt on the RSL.                              |
 <1>     NS        R/W     0x0         1         Enables SLI_INT_SUM[1] to generate an              |
                                                 interrupt on the RSL.                              |
 <2>     BAR0_TO   R/W     0x0         1         Enables SLI_INT_SUM[2] to generate an              |
                                                 interrupt on the RSL.                              |
 <3>     IOB2BIG   R/W     0x0         1         Enables SLI_INT_SUM[3] to generate an              |
                                                 interrupt on the RSL.                              |
 <4>     PCNT      R/W     0x0         1         Enables SLI_INT_SUM[4] to generate an              |
                                                 interrupt on the RSL.                              |
 <5>     PTIME     R/W     0x0         1         Enables SLI_INT_SUM[5] to generate an              |
                                                 interrupt on the RSL.                              |
 <7:6>   NS        R/W     0x0         0         Reserved	 				    |
 <8>     M0_UP_B0  R/W     0x0         1         Enables SLI_INT_SUM[8] to generate an              |
                                                 interrupt on the RSL.                              |
 <9>     M0_UP_WI  R/W     0x0         1         Enables SLI_INT_SUM[9] to generate an              |
                                                 interrupt on the RSL.                              |
 <10>    M0_UN_B0  R/W     0x0         1         Enables SLI_INT_SUM[10] to generate an             |
                                                 interrupt on the RSL.                              |
 <11>    M0_UN_WI  R/W     0x0         1         Enables SLI_INT_SUM[11] to generate an             |
                                                 interrupt on the RSL.                              |
 <12>    M1_UP_B0   R/W    0x0         1         Enables SLI_INT_SUM[12] to generate an             |
                                                 interrupt on the RSL.                              |
 <13>    M1_UP_WI   R/W    0x0         1         Enables SLI_INT_SUM[13] to generate an             |
                                                 interrupt on the RSL.                              |
 <14>    M1_UN_B0   R/W    0x0         1         Enables SLI_INT_SUM[14] to generate an             |
                                                 interrupt on the RSL.                              |
 <15>    M1_UN_WI  R/W     0x0         1         Enables SLI_INT_SUM[15] to generate an             |
                                                 interrupt on the RSL.                              |
 <16>    MIO_INT0  R/W     0x0         0         Enables SLI_INT_SUM[16] to generate an             |
                                                 interrupt on the RSL.                              |
                                                 THIS SHOULD NEVER BE SET                           |
 <17>    MIO_INT1  R/W     0x0         0         Enables SLI_INT_SUM[17] to generate an             |
                                                 interrupt on the RSL.                              |
                                                 THIS SHOULD NEVER BE SET                           |
 <18>    NS        R/W     0x0         0         Reserved	 				    |
 <19>    NS        R/W     0x0         0         Reserved	 				    |
 <31:20> NS        R/W     0x0         0         Reserved	 				    |
 <33:32> DMAFI     R/W     0x0         0         DMA set Forced Interrupts                          |
 <35:34> DCNT      R/W     0x0         0         DMA Count Interrupts				    |
 <37:36> DTIME     R/W     0x0         0         DMA Timer Interrupts				    |
 <47:38> NS        R/W     0x0         0         Reserved	 				    |
 <48>    PIDBOF    R/W     0x0         0         Packet Instruction Doorbell Count Overflow.	    |
 <49>    PSLDBOF   R/W     0x0         0         Packet Scatterlist Doorbell Count Overflow.	    |
 <50>    POUT_ERR  R/W     0x0         0         Packet Out Interrupt, Error From PKO.		    |
 <51>    NS        R/W     0x0         0         Reserved	 				    |
 <52>    PGL_ERR   R/W     0x0         0         Read Error during gather list fetch.		    |
 <53>    PDI_ERR   R/W     0x0         0         Read Error during packet data fetch.		    |
 <54>    POP_ERR   R/W     0x0         0         Read Error during packet scatter pointer fetch.    |
 <55>    PINS_ERR  R/W     0x0         0         Read Error during packet instruction fetch.	    |
 <56>    SPRT0_ERR R/W     0x0         0         Error Response received on SLI port 0.        	    |
 <57>    SPRT1_ERR R/W     0x0         0         Error Response received on SLI port 1.        	    |
 <59:58> NS        R/W     0x0         0         Reserved for SLI port expansion                    |
 <60>    ILL_PAD   R/W     0x0         0         Illegal packet csr address.             	    |
 <61>    PIPE_ERR  R/W     0x0         0         Illegal packet csr address.             	    |
 <63:62> NS        R/W     0x0         0         Reserved                                           |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_MSI_W1C_ENB0 = SLI MSI Write 1 To Clear Enable0
 *
 * Used to clear bits in SLI_MSI_ENB0.
 *

     ==============================================================
     SLI_MSI_W1C_ENB0 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  CLR      R/W      0x0         0x0       A write of '1' to a vector will clear the          |
                                                 cooresponding bit in SLI_MSI_ENB0.                |
                                                 A read to this address will return 0.              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_W1C_ENB1 = SLI MSI Write 1 To Clear Enable1
 *
 * Used to clear bits in SLI_MSI_ENB1.
 *

     ==============================================================
     SLI_MSI_W1C_ENB1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  CLR      R/W      0x0         0x0       A write of '1' to a vector will clear the          |
                                                 cooresponding bit in SLI_MSI_ENB1.                |
                                                 A read to this address will return 0.              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_W1C_ENB2 = SLI MSI Write 1 To Clear Enable2
 *
 * Used to clear bits in SLI_MSI_ENB2.
 *

     ==============================================================
     SLI_MSI_W1C_ENB2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  CLR      R/W      0x0         0x0       A write of '1' to a vector will clear the          |
                                                 cooresponding bit in SLI_MSI_ENB2.                |
                                                 A read to this address will return 0.              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_W1C_ENB3 = SLI MSI Write 1 To Clear Enable3
 *
 * Used to clear bits in SLI_MSI_ENB3.
 *

     ==============================================================
     SLI_MSI_W1C_ENB3 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  CLR      R/W      0x0         0x0       A write of '1' to a vector will clear the          |
                                                 cooresponding bit in SLI_MSI_ENB3.                |
                                                 A read to this address will return 0.              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_W1S_ENB0 = SLI MSI Write 1 To Set Enable0
 *
 * Used to set bits in SLI_MSI_ENB0.
 *

     ==============================================================
     SLI_MSI_W1S_ENB0 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  SET      R/W      0x0         0x0       A write of '1' to a vector will set the            |
                                                 cooresponding bit in SLI_MSI_ENB0.                |
                                                 A read to this address will return 0.              |
----------------------------------------------------------------------------------------------------
===
 *
 *                  SLI_MSI_W1S_ENB0 = SLI MSI Write 1 To Set Enable1
 *
 * Used to set bits in SLI_MSI_ENB1.
 *

     ==============================================================
     SLI_MSI_W1S_ENB1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  SET      R/W      0x0         0x0       A write of '1' to a vector will set the            |
                                                 cooresponding bit in SLI_MSI_ENB1.                |
                                                 A read to this address will return 0.              |
----------------------------------------------------------------------------------------------------
===
 *
 *                  SLI_MSI_W1S_ENB2 = SLI MSI Write 1 To Set Enable2
 *
 * Used to set bits in SLI_MSI_ENB2.
 *

     ==============================================================
     SLI_MSI_W1S_ENB2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  SET      R/W      0x0         0x0       A write of '1' to a vector will set the            |
                                                 cooresponding bit in SLI_MSI_ENB2.                |
                                                 A read to this address will return 0.              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_W1S_ENB3 = SLI MSI Write 1 To Set Enable3
 *
 * Used to set bits in SLI_MSI_ENB3.
 *

     ==============================================================
     SLI_MSI_W1S_ENB3 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  SET      R/W      0x0         0x0       A write of '1' to a vector will set the            |
                                                 cooresponding bit in SLI_MSI_ENB3.                 |
                                                 A read to this address will return 0.              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MAC_CREDIT_CNT = SLI MAC Credit Count
 *
 * Contains the number of credits for the MAC port FIFOs used by the SLI. This value needs to be set BEFORE S2M traffic
 * flow starts. A write to this register will cause the credit counts in the SLI for the MAC ports to be reset to the value
 * in this register if the cooresponding disable bit in this register is set to '0'.
 *

     ==============================================================
     SLI_MAC_CREDIT_CNT Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   P0_PCNT  R/W      0x80        0x80      Port0 P-TLP FIFO Credits.                          |
                                                 Legal values are 0x25 to 0x80.                     |
 <15:8>  P0_NCNT  R/W      0x10        0x10      Port0 N-TLP FIFO Credits.                          |
                                                 Legal values are 0x5 to 0x10.                      |
 <23:16> P0_CCNT  R/W      0x80        0x80      Port0 C-TLP FIFO Credits.                          |
                                                 Legal values are 0x25 to 0x80.                     |
 <31:24> P1_PCNT  R/W      0x80        0x80      Port1 P-TLP FIFO Credits.                          |
                                                 Legal values are 0x25 to 0x80.                     |
 <39:32> P1_NCNT  R/W      0x10        0x10      Port1 N-TLP FIFO Credits.                          |
                                                 Legal values are 0x5 to 0x10.                      |
 <47:40> P1_CCNT  R/W      0x80        0x80      Port1 C-TLP FIFO Credits.                          |
                                                 Legal values are 0x25 to 0x80.                     |
 <48>    P0_P_D   R/W      0x1         0x1       When set does not allow writing of P0_PCNT.        |
 <49>    P0_N_D   R/W      0x1         0x1       When set does not allow writing of P0_NCNT.        |
 <50>    P0_C_D   R/W      0x1         0x1       When set does not allow writing of P0_CCNT.        |
 <51>    P1_P_D   R/W      0x1         0x1       When set does not allow writing of P1_PCNT.        |
 <52>    P1_N_D   R/W      0x1         0x1       When set does not allow writing of P1_NCNT.        |
 <53>    P1_C_D   R/W      0x1         0x1       When set does not allow writing of P1_CCNT.        |
 <63:54> NS       RAZ      NS          NS        Reserved                                           |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_S2M_PORT@_CTL = SLI's S2M Port 0 Control
 *
 * Contains control for access from SLI to a MAC port.
 * Writes to this register are not ordered with writes/reads to the MAC Memory space.
 * To ensure that a write has completed the user must read the register before
 * making an access(i.e. MAC memory space) that requires the value of this register to be updated.
 *

     ==============================================================
     SLI_S2M_PORT(0..1)_CTL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <2:0>   MRRS     R/W      2           2         Max Read Request Size                              |
                                                         0 = 128B                                   |
                                                         1 = 256B                                   |
                                                         2 = 512B                                   |
                                                         3 = 1024B                                  |
                                                         4 = 2048B                                  |
                                                         5-7 = Reserved                             |
                                                 This field should not exceed the desired           |
                                                       max read request size. This field is used to |
                                                       determine if an IOBDMA is too large.         |
                                                 For a PCIe MAC, this field should not exceed       |
                                                       PCIE*_CFG030[MRRS].                          |
                                                 For a sRIO MAC, this field should indicate a size  |
                                                       of 256B or smaller.                          |
 <3>     BAR0_D   R/W      0           0         When set '1' disables access from MAC to           |
						 BAR-0 address offsets: Less Than 0x330,            |
						 0x3CD0, and greater than 0x3D70 excluding          |
                                                 0x3e00.                                            |                   |
 <4>     WIND_D   R/W      0           0         When set '1' disables access to the Window         |
                                                 Registers from the MAC-Port.                       |
 <63:5>  NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===

// 0x13DA0 - 0x13DF0 reserved for ports 2 - 7


 *
 *                  SLI_MAC_NUMBER = SLI MAC Number
 *
 * When read from a MAC port it returns the MAC's port number.
 * register.
 *

     ==============================================================
     SLI_MAC_NUMBER Type=PEXP
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   NUM      RO       NS          NS        The mac number.                                    |
 <63:8>  NS       RAZ      NS          NS        Reserved					    |
----------------------------------------------------------------------------------------------------
===




 * Note, the old POW offsets ran from 0x0 to 0x3f8, leaving the next available slot at 0x400.
 * To ensure no overlap, start on 4k boundary: 0x1000.


 * SSO_WQ_INT = SSO Work Queue Interrupt Register
 *
 * Contains the bits (one per group) that set work queue interrupts and are
 * used to clear these interrupts.  For more information regarding this
 * register, see the interrupt section of the SSO spec.
 *

     ==============================================================
     SSO_WQ_INT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  WQ_INT    R/W1C    0x0     NS       Work queue interrupt bits                              |
                                             Corresponding WQ_INT bit is set by HW whenever:        |
                                               - SSO_WQ_INT_CNT@[IQ_CNT] >=                         |
                                                 SSO_WQ_INT_THR@[IQ_THR] and the threshold          |
                                                 interrupt is not disabled.                         |
                                                 SSO_WQ_IQ_DIS@[IQ_DIS<@>]==1 disables the interrupt|
                                                 SSO_WQ_INT_THR@[IQ_THR]==0 disables the int.       |
                                               - SSO_WQ_INT_CNT@[DS_CNT] >=                         |
                                                 SSO_WQ_INT_THR@[DS_THR] and the threshold          |
                                                 interrupt is not disabled                          |
                                                 SSO_WQ_INT_THR@[DS_THR]==0 disables the int.       |
                                               - SSO_WQ_INT_CNT@[TC_CNT]==1 when periodic           |
                                                 counter SSO_WQ_INT_PC[PC]==0 and                   |
                                                 SSO_WQ_INT_THR@[TC_EN]==1 and at least one of:     |
                                                   - SSO_WQ_INT_CNT@[IQ_CNT] > 0                    |
                                                   - SSO_WQ_INT_CNT@[DS_CNT] > 0                    |
----------------------------------------------------------------------------------------------------
===
 * CSR reserved addresses: (1): 0x1008..0x1008


 * SSO_WQ_IQ_DIS = SSO Input Queue Interrupt Temporary Disable Mask
 *
 * Contains the input queue interrupt temporary disable bits (one per group).
 * For more information regarding this register, see the interrupt section.
 *

     ==============================================================
     SSO_WQ_IQ_DIS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  IQ_DIS    R/W1     0x0     NS       Input queue interrupt temporary disable mask           |
                                               Corresponding SSO_WQ_INT@[WQ_INT<@>] bit cannot be   |
                                               set due to IQ_CNT/IQ_THR check when this bit is set. |
                                               Corresponding IQ_DIS bit is cleared by HW whenever:  |
                                                - SSO_WQ_INT_CNT@[IQ_CNT] is zero, or               |
                                                - SSO_WQ_INT_CNT@[TC_CNT]==1 when periodic          |
                                                  counter SSO_WQ_INT_PC[PC]==0                      |
----------------------------------------------------------------------------------------------------
===
 * CSR reserved addresses: (1): 0x1018..0x1018


 * SSO_WQ_INT_PC = SSO Work Queue Interrupt Periodic Counter Register
 *
 * Contains the threshold value for the work queue interrupt periodic counter
 * and also a read-only copy of the periodic counter.  For more information
 * regarding this register, see the interrupt section.
 *

     ==============================================================
     SSO_WQ_INT_PC Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:60> NS	   RAZ	    NS	    NS	     Reserved						    |
 <59:32> PC	   RO	    0x0	    NS	     Work queue interrupt periodic counter		    |
 <31:28> NS	   RAZ	    NS	    NS	     Reserved						    |
 <27:8>	 PC_THR	   R/W	    0x0	    NS	     Work queue interrupt periodic counter threshold	    |
 <7:0>	 NS	   RAZ	    NS	    NS	     Reserved						    |
----------------------------------------------------------------------------------------------------
===


 * SSO_NW_TIM = SSO New Work Timer Period Register
 *
 * Sets the minimum period for a new work request timeout.  Period is specified
 * in n-1 notation where the increment value is 1024 clock cycles.  Thus, a
 * value of 0x0 in this register translates to 1024 cycles, 0x1 translates to
 * 2048 cycles, 0x2 translates to 3072 cycles, etc...  Note: the maximum period
 * for a new work request timeout is 2 times the minimum period.  Note: the new
 * work request timeout counter is reset when this register is written.
 *
 * There are two new work request timeout cases:
 *
 * - WAIT bit clear.  The new work request can timeout if the timer expires
 *   before the pre-fetch engine has reached the end of all work queues.  This
 *   can occur if the executable work queue entry is deep in the queue and the
 *   pre-fetch engine is subject to many resets (i.e. high switch, de-schedule,
 *   or new work load from other PP's).  Thus, it is possible for a PP to
 *   receive a work response with the NO_WORK bit set even though there was at
 *   least one executable entry in the work queues.  The other (and typical)
 *   scenario for receiving a NO_WORK response with the WAIT bit clear is that
 *   the pre-fetch engine has reached the end of all work queues without
 *   finding executable work.
 *
 * - WAIT bit set.  The new work request can timeout if the timer expires
 *   before the pre-fetch engine has found executable work.  In this case, the
 *   only scenario where the PP will receive a work response with the NO_WORK
 *   bit set is if the timer expires.  Note: it is still possible for a PP to
 *   receive a NO_WORK response even though there was at least one executable
 *   entry in the work queues.
 *
 * In either case, it's important to note that switches and de-schedules are
 * higher priority operations that can cause the pre-fetch engine to reset.
 * Thus in a system with many switches or de-schedules occurring, it's possible
 * for the new work timer to expire (resulting in NO_WORK responses) before the
 * pre-fetch engine is able to get very deep into the work queues.
 *

     ==============================================================
     SSO_NW_TIM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS        RAZ      NS      NS       Reserved                                               |
 <9:0>   NW_TIM    R/W      0x0     0x3ff    New work timer period                                  |
----------------------------------------------------------------------------------------------------
===


 * SSO_ERR_ENB = SSO Error Enable Register
 *
 * Contains the interrupt enables corresponding to SSO_ERR.
 *

     ==============================================================
     SSO_ERR_ENB Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS          RAZ    NS      NS       Reserved                                               |
 <47>    BFP_IE      R/W    0x0     NS       Bad Fill Packet error interrupt enable                 |
 <46>    AWE_IE      R/W    0x0     NS       Add-work error interrupt enable                        |
 <45>    FPE_IE      R/W    0x0     NS       Free Page error interrupt enable                       |
 <44:43> NS          RAZ    NS      NS       Reserved                                               |
 <42:32> IOP_IE      R/W    0x0     NS       Illegal operation interrupt enables                    |
 <31:12> NS          RAZ    NS      NS       Reserved                                               |
 <11>    PND_DBE0_IE R/W    0x0     NS       Double bit error interrupt enable for even PND RAM     |
 <10>    PND_SBE0_IE R/W    0x0     NS       Single bit error interrupt enable for even PND RAM     |
 <9>     PND_DBE1_IE R/W    0x0     NS       Double bit error interrupt enable for odd PND RAM      |
 <8>     PND_SBE1_IE R/W    0x0     NS       Single bit error interrupt enable for odd PND RAM      |
 <7>     OTH_DBE0_IE R/W    0x0     NS       Double bit error interrupt enable for even OTH RAM     |
 <6>     OTH_SBE0_IE R/W    0x0     NS       Single bit error interrupt enable for even OTH RAM     |
 <5>     OTH_DBE1_IE R/W    0x0     NS       Double bit error interrupt enable for odd OTH RAM      |
 <4>     OTH_SBE1_IE R/W    0x0     NS       Single bit error interrupt enable for odd OTH RAM      |
 <3>     IDX_DBE_IE  R/W    0x0     NS       Double bit error interrupt enable for IDX RAM          |
 <2>     IDX_SBE_IE  R/W    0x0     NS       Single bit error interrupt enable for IDX RAM          |
 <1>     FIDX_DBE_IE R/W    0x0     NS       Double bit error interrupt enable for FIDX RAM         |
 <0>     FIDX_SBE_IE R/W    0x0     NS       Single bit error interrupt enable for FIDX RAM         |
----------------------------------------------------------------------------------------------------
===

 * SSO_ERR = SSO Error Register
 *
 * Contains ECC and other misc error bits.
 * This register also contains the illegal operation error bits.
 *
 *  <0> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/DESCH/UPD_WQP
 *      from WS in EMPTY state
 *  <1> Received SWTAG/SWTAG_DESCH/DESCH/UPD_WQP
 *      from WS in UNSCHEDULED state
 *  <2> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/GET_WORK
 *      from WS with pending tag switch to ORDERED or ATOMIC
 *  <3> Received SWTAG/SWTAG_FULL/SWTAG_DESCH
 *      with tag specified as EMPTY
 *  <4> Received SWTAG_FULL/SWTAG_DESCH
 *      with tag specified as UNSCHEDULED
 *  <5> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/DESCH/UPD_WQP/GET_WORK/ALLOC_WE/CLR_NSCHED
 *      from WS with GET_WORK pending
 *  <6> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/DESCH/UPD_WQP/GET_WORK/ALLOC_WE
 *      from WS with ALLOC_WE pending
 *  <7> Received CLR_NSCHED
 *      from WS with SWTAG_DESCH/DESCH/CLR_NSCHED pending
 *  <8> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/DESCH/UPD_WQP/GET_WORK/ALLOC_WE
 *      from WS with CLR_NSCHED pending
 *  <9> Received illegal opcode
 * <10> Received ADDWQ with tag specified as EMPTY
 *

     ==============================================================
     SSO_ERR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ    NS      NS       Reserved                                                  |
 <47>    BFP      R/W1C  0x0     0x0      Bad Fill Packet error                                     |
                                          Last byte of the fill packet did not match 8'h1a          |
 <46>    AWE      R/W1C  0x0     0x0      Out-of-memory error (ADDWQ Request is dropped)            |
 <45>    FPE      R/W1C  0x0     0x0      Free page error                                           |
 <44:43> NS       RAZ    NS      NS       Reserved                                                  |
 <42:32> IOP      R/W1C  0x0     0x0      Illegal operation errors                                  |
 <31:12> NS       RAZ    NS      NS       Reserved                                                  |
 <11>    PND_DBE0 R/W1C  0x0     NS       Double bit error for even PND RAM                         |
 <10>    PND_SBE0 R/W1C  0x0     NS       Single bit error for even PND RAM                         |
 <9>     PND_DBE1 R/W1C  0x0     NS       Double bit error for odd PND RAM                          |
 <8>     PND_SBE1 R/W1C  0x0     NS       Single bit error for odd PND RAM                          |
 <7>     OTH_DBE0 R/W1C  0x0     NS       Double bit error for even OTH RAM                         |
 <6>     OTH_SBE0 R/W1C  0x0     NS       Single bit error for even OTH RAM                         |
 <5>     OTH_DBE1 R/W1C  0x0     NS       Double bit error for odd OTH RAM                          |
 <4>     OTH_SBE1 R/W1C  0x0     NS       Single bit error for odd OTH RAM                          |
 <3>     IDX_DBE  R/W1C  0x0     NS       Double bit error for IDX RAM                              |
 <2>     IDX_SBE  R/W1C  0x0     NS       Single bit error for IDX RAM                              |
 <1>     FIDX_DBE R/W1C  0x0     NS       Double bit error for FIDX RAM                             |
 <0>     FIDX_SBE R/W1C  0x0     NS       Single bit error for FIDX RAM                             |
----------------------------------------------------------------------------------------------------
===


 * SSO_NOS_CNT = SSO No-schedule Count Register
 *
 * Contains the number of work queue entries on the no-schedule list.
 *

     ==============================================================
     SSO_NOS_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:12> NS        RAZ      NS      NS       Reserved                                               |
 <11:0>  NOS_CNT   RO       0x0     NS       Number of work queue entries on the no-schedule list   |
----------------------------------------------------------------------------------------------------
===


 * SSO_IQ_INT = SSO Input Queue Interrupt Register
 *
 * Contains the bits (one per QOS level) that can trigger the input queue
 * interrupt.  An IQ_INT bit will be set if SSO_IQ_CNT#QOS# changes and the
 * resulting value is equal to SSO_IQ_THR#QOS#.
 *

     ==============================================================
     SSO_IQ_INT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS        RAZ      NS      NS       Reserved                                               |
 <7:0>   IQ_INT    R/W1C    0x0     NS       Input queue interrupt bits                             |
----------------------------------------------------------------------------------------------------
===


 * SSO_IQ_INT_EN = SSO Input Queue Interrupt Enable Register
 *
 * Contains the bits (one per QOS level) that enable the input queue interrupt.
 *

     ==============================================================
     SSO_IQ_INT_EN Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS        RAZ      NS      NS       Reserved                                               |
 <7:0>   INT_EN    R/W      0x0     NS       Input queue interrupt enable bits                      |
----------------------------------------------------------------------------------------------------
===


 * SSO_IQ_COM_CNT = SSO Input Queue Combined Count Register
 *
 * Contains a read-only count of the total number of work queue entries in all
 * QOS levels.  Counts both in-unit and in-memory entries.
 *

     ==============================================================
     SSO_IQ_COM_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS        RAZ      NS      NS       Reserved                                               |
 <31:0>  IQ_CNT    RO       0x0     NS       Input queue combined count                             |
----------------------------------------------------------------------------------------------------
===


 * SSO_WA_COM_PC = SSO Work Add Combined Performance Counter
 *
 * Counts the number of add new work requests for all QOS levels.
 * Counter rolls over through zero when max value exceeded.
 *

     ==============================================================
     SSO_WA_COM_PC Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  WA_PC     R/W      0x0     NS       Work add combined performance counter                  |
----------------------------------------------------------------------------------------------------
===


 * SSO_TS_PC = SSO Tag Switch Performance Counter
 *
 * Counts the number of tag switch requests.
 * Counter rolls over through zero when max value exceeded.
 *

     ==============================================================
     SSO_TS_PC Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  TS_PC     R/W      0x0     NS       Tag switch performance counter                         |
----------------------------------------------------------------------------------------------------
===


 * SSO_DS_PC = SSO De-Schedule Performance Counter
 *
 * Counts the number of de-schedule requests.
 * Counter rolls over through zero when max value exceeded.
 *

     ==============================================================
     SSO_DS_PC Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DS_PC     R/W      0x0     NS       De-schedule performance counter                        |
----------------------------------------------------------------------------------------------------
===


 * SSO_BIST_STAT = SSO BIST Status Register
 *
 * Contains the BIST status for the SSO memories ('0' = pass, '1' = fail).
 * Note that PP BIST status is not reported here as it was in previous designs.
 *
 *   There may be more for DDR interface buffers.
 *   It's possible that a RAM will be used for SSO_PP_QOS_RND.
 *

     ==============================================================
     SSO_BIST_STAT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:54> NS        RAZ      NS      NS       Reserved                                               |
 <53:52> FPTR      RO       0x0     0x0      FPTR memory BIST status                                |
 <51:45> NS        RAZ      NS      NS       Reserved                                               |
 <44>    RWO_DAT   RO       0x0     0x0      RWO_DAT memory BIST status                             |
 <43:42> RWO       RO       0x0     0x0      RWO memory BIST status                                 |
 <41:35> NS        RAZ      NS      NS       Reserved                                               |
 <34>    RWI_DAT   RO       0x0     0x0      RWI_DAT memory BIST status                             |
 <33:32> NS        RAZ      NS      NS       Reserved                                               |
 <31>    SOC       RO       0x0     0x0      SSO CAM BIST status                                    |
 <30:28> NS        RAZ      NS      NS       Reserved                                               |
 <27:24> NCBO      RO       0x0     0x0      NCBO transmitter memory BIST status                    |
 <23:21> NS        RAZ      NS      NS       Reserved                                               |
 <20>    IDX       RO       0x0     0x0      Index memory BIST status                               |
 <19:17> NS        RAZ      NS      NS       Reserved                                               |
 <16>    FIDX      RO       0x0     0x0      Forward index memory BIST status                       |
 <15:10> NS        RAZ      NS      NS       Reserved                                               |
 <9:8>   PEND      RO       0x0     0x0      Pending switch memory BIST status                      |
 <7:2>   NS        RAZ      NS      NS       Reserved                                               |
 <1:0>   OTH       RO       0x0     0x0      WQP, GRP memory BIST status                            |
----------------------------------------------------------------------------------------------------
===


 * SSO_QOS_WE = SSO WE Buffers
 *
 * This register contains a read-only count of the current number of free
 * buffers (FREE_CNT) and the total number of tag chain heads on the de-schedule list
 * (DES_CNT) (which is not the same as the total number of entries on all of the descheduled
 * tag chains.)
 *
 *

     ==============================================================
     SSO_QOS_WE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:26> NS        RAZ      NS      NS       Reserved                                               |
 <25:14> DES_CNT   RO       0x0     NS       Number of buffers on de-schedule list                  |
 <13:12> NS        RAZ      NS      NS       Reserved                                               |
 <11:0>  FREE_CNT  RO       0x7d0   NS       Number of total free buffers                           |
----------------------------------------------------------------------------------------------------
===

 * SSO_CFG = SSO Config
 *
 * This register is an assortment of various SSO configuration bits.
 *

     ==============================================================
     SSO_CFG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS             RAZ      NS      NS       Reserved                                               |
 <7>     RWO_FLUSH      WR0      0x0     0x0      Flush RWO engine                                       |
                                                  Allows outbound NCB entries to go immediately rather   |
                                                  than waiting for a complete fill packet. This register |
                                                  is one-shot and clears itself each time it is set.     |
 <6>     WFE_THR        R/W      0x0     0x0      Use 1 Work-fetch engine (instead of 4)                 |
 <5>     RWIO_BYP_DIS   R/W      0x0     0x0      Disable Bypass path in RWI/RWO Engines                 |
 <4>     RWQ_BYP_DIS    R/W      0x0     0x0      Disable Bypass path in RWQ Engine                      |
 <3>     STT            R/W      0x1     0x1      STT Setting for RW Stores                              |
 <2>     LDT            R/W      0x1     0x1      LDT Setting for RW Loads                               |
 <1>     DWB            R/W      0x0     0x0      DWB Setting for Return Page Requests                   |
                                                  1 = 2 128B cache pages to issue DWB for                |
                                                  0 = 0 128B cache pages ro issue DWB for                |
 <0>     RWEN           R/W      0x0     0x1      Enable RWI/RWO operations                              |
                                                  This bit should be set after SSO_RWQ_HEAD_PTR@ and     |
                                                  SSO_RWQ_TAIL_PTR@ have been programmed.                |
----------------------------------------------------------------------------------------------------
===

 * SSO_FPAGE_CNT = SSO Free Page Cnt
 *
 * This register keeps track of the number of free pages pointers available for use in external memory.
 *

     ==============================================================
     SSO_FPAGE_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS        RAZ      NS      NS       Reserved                                               |
 <31:0>  FPAGE_CNT R/W      0x0     NS       Free Page Cnt                                          |
                                             HW updates this register. Writes to this register
                                             are only for diagnostic purposes
----------------------------------------------------------------------------------------------------
===

 * SSO_GWE_CFG = SSO Get-Work Examiner Configuration
 *
 * This register controls the operation of the Get-Work Examiner (GWE)
 *

     ==============================================================
     SSO_GWE_CFG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS        RAZ      NS      NS       Reserved                                               |
 <3>     GWE_POE   R/W      0x0     0x0      Pause GWE on extracts                                  |
                                                For diagnostic use only.
 <2>     GWE_FPOR  R/W      0x0     0x0      Flush GWE pipeline when restarting GWE.                |
                                                For diagnostic use only.
 <1>     GWE_RAH   R/W      0x0     0x0      Begin at head of input queues when restarting GWE.     |
                                                For diagnostic use only.
 <0>     GWE_DIS   R/W      0x0     0x0      Disable Get-Work Examiner                              |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SSO_PND_ECC_CTL = SSO PND ECC Control
 *

     ==============================================================
     SSO_PND_ECC_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS         RAZ      NS          NS      Reserved
 <5:4>   FLIP_SYND1 R/W      0x0         0       Testing feature. Flip Syndrom to generate single or
                                                 double bit error for the odd PND RAM.
 <3>     ECC_ENA1   R/W      0x1         1       ECC Enable: When set will enable the 7 bit ECC
                                                 correct logic for the odd PND RAM.
 <2:1>   FLIP_SYND0 R/W      0x0         0       Testing feature. Flip Syndrom to generate single or
                                                 double bit error for the even PND RAM.
 <0>     ECC_ENA0   R/W      0x1         1       ECC Enable: When set will enable the 7 bit ECC
                                                 correct logic for the even PND RAM.
----------------------------------------------------------------------------------------------------
===

 *
 *                  SSO_PND_ECC_ST = SSO PND ECC Status
 *

     ==============================================================
     SSO_PND_ECC_ST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:59> NS         RAZ       NS          NS      Reserved                                          |
 <58:48> ADDR1      RO        0x0         0       Latch the address for latest sde/dbe occured      |
                                                  for the odd PND RAM
 <47:43> NS         RAZ       NS          NS      Reserved                                          |
 <42:36> SYNDROM1   RO        0x0         0       Report the latest error syndrom for the odd       |
                                                  PND RAM
 <35:32> NS         RAZ       NS          NS      Reserved                                          |

 <31:27> NS         RAZ       NS          NS      Reserved                                          |
 <26:16> ADDR0      RO        0x0         0       Latch the address for latest sde/dbe occured      |
                                                  for the even PND RAM
 <15:11> NS         RAZ       NS          NS      Reserved                                          |
 <10:4>  SYNDROM0   RO        0x0         0       Report the latest error syndrom for the even      |
                                                  PND RAM
 <3:0>   NS         RAZ       NS          NS      Reserved                                          |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SSO_OTH_ECC_CTL = SSO OTH ECC Control
 *

     ==============================================================
     SSO_OTH_ECC_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS         RAZ      NS          NS      Reserved
 <5:4>   FLIP_SYND1 R/W      0x0         0       Testing feature. Flip Syndrom to generate single or
                                                 double bit error for the odd OTH RAM.
 <3>     ECC_ENA1   R/W      0x1         1       ECC Enable: When set will enable the 7 bit ECC
                                                 correct logic for the odd OTH RAM.
 <2:1>   FLIP_SYND0 R/W      0x0         0       Testing feature. Flip Syndrom to generate single or
                                                 double bit error for the even OTH RAM.
 <0>     ECC_ENA0   R/W      0x1         1       ECC Enable: When set will enable the 7 bit ECC
                                                 correct logic for the even OTH RAM.
----------------------------------------------------------------------------------------------------
===

 *
 *                  SSO_OTH_ECC_ST = SSO OTH ECC Status
 *

     ==============================================================
     SSO_OTH_ECC_ST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:59> NS         RAZ       NS          NS      Reserved                                          |
 <58:48> ADDR1      RO        0x0         0       Latch the address for latest sde/dbe occured      |
                                                  for the odd OTH RAM
 <47:43> NS         RAZ       NS          NS      Reserved                                          |
 <42:36> SYNDROM1   RO        0x0         0       Report the latest error syndrom for the odd       |
                                                  OTH RAM
 <35:32> NS         RAZ       NS          NS      Reserved                                          |

 <31:27> NS         RAZ       NS          NS      Reserved                                          |
 <26:16> ADDR0      RO        0x0         0       Latch the address for latest sde/dbe occured      |
                                                  for the even OTH RAM
 <15:11> NS         RAZ       NS          NS      Reserved                                          |
 <10:4>  SYNDROM0   RO        0x0         0       Report the latest error syndrom for the even      |
                                                  OTH RAM
 <3:0>   NS         RAZ       NS          NS      Reserved                                          |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SSO_IDX_ECC_CTL = SSO IDX ECC Control
 *

     ==============================================================
     SSO_IDX_ECC_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:3>  NS         RAZ      NS          NS      Reserved
 <2:1>   FLIP_SYND  R/W      0x0         0       Testing feature. Flip Syndrom to generate single or
                                                 double bit error for the IDX RAM.
 <0>     ECC_ENA    R/W      0x1         1       ECC Enable: When set will enable the 5 bit ECC
                                                 correct logic for the IDX RAM.
----------------------------------------------------------------------------------------------------
===

 *
 *                  SSO_IDX_ECC_ST = SSO IDX ECC Status
 *

     ==============================================================
     SSO_IDX_ECC_ST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:27> NS         RAZ       NS          NS      Reserved                                          |
 <26:16> ADDR       RO        0x0         0       Latch the address for latest sde/dbe occured      |
                                                  for the IDX RAM
 <15:9>  NS         RAZ       NS          NS      Reserved                                          |
 <8:4>   SYNDROM    RO        0x0         0       Report the latest error syndrom for the           |
                                                  IDX RAM
 <3:0>   NS         RAZ       NS          NS      Reserved                                          |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SSO_FIDX_ECC_CTL = SSO FIDX ECC Control
 *

     ==============================================================
     SSO_FIDX_ECC_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:3>  NS         RAZ      NS          NS      Reserved
 <2:1>   FLIP_SYND  R/W      0x0         0       Testing feature. Flip Syndrom to generate single or
                                                 double bit error for the FIDX RAM.

 <0>     ECC_ENA    R/W      0x1         1       ECC Enable: When set will enable the 5 bit ECC
                                                 correct logic for the FIDX RAM.
----------------------------------------------------------------------------------------------------
===

 *
 *                  SSO_FIDX_ECC_ST = SSO FIDX ECC Status
 *

     ==============================================================
     SSO_FIDX_ECC_ST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:27> NS         RAZ       NS          NS      Reserved                                          |
 <26:16> ADDR       RO        0x0         0       Latch the address for latest sde/dbe occured      |
                                                  for the FIDX RAM
 <15:9>  NS         RAZ       NS          NS      Reserved                                          |
 <8:4>   SYNDROM    RO        0x0         0       Report the latest error syndrom for the           |
                                                  FIDX RAM
 <3:0>   NS         RAZ       NS          NS      Reserved                                          |
----------------------------------------------------------------------------------------------------
===


 * SSO_PP_STRICT = SSO Strict Priority
 *
 * This register controls getting work from the input queues.  If the bit
 * corresponding to a PP is set, that PP will not take work off the input
 * queues until it is known that there is no higher-priority work available.
 *
 * Strict mode may incur a performance penalty if highest-priority work
 * is not found early.
 *

     ==============================================================
     SSO_PP_STRICT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS        RAZ      NS      NS       Reserved                                               |
 <31:0>  PP_STRICT R/W      0x0     0x0      Corresponding PP operates in strict mode.              |
----------------------------------------------------------------------------------------------------
===

 * CSR align addresses: ===========================================================================================================

 * SSO_QOS(0..7)_RND = SSO QOS Issue Round Register
 *                (one per IQ)
 *
 * The number of arbitration rounds each QOS level participates in.
 *

     ==============================================================
     SSO_QOS(0..7)_RND Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS        RAZ      NS      NS       Reserved                                               |
 <7:0>   RNDS_QOS  R/W      0xff    NS       Number of rounds to participate in for IQ(@).          |
----------------------------------------------------------------------------------------------------
===
 * CSR reserved addresses: (56): 0x2040..0x21f8


 * CSR align addresses: ===========================================================================================================

 * SSO_PP(0..31)_QOS_PRI = SSO PP QOS Priority Register
 *                                (one field per IQ per PP)
 *
 * Contains the QOS level priorities for each PP.
 *      0x0       is the highest priority
 *      0x7       is the lowest priority
 *      0xf       prevents the PP from receiving work from that QOS level
 *      0x8-0xe   Reserved
 *
 * For a given PP, priorities should begin at 0x0, and remain contiguous
 * throughout the range.  Failure to do so may result in severe
 * performance degradation.
 *
 *

 * Priorities for IQs 0..7
 *

     ==============================================================
     SSO_PP(0..31)_QOS_PRI Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:60> NS        RAZ      NS      NS       Reserved                                               |
 <59:56> QOS7_PRI  R/W      0x0     NS       QOS7 priority for PP@                                  |
 <55:52> NS        RAZ      NS      NS       Reserved                                               |
 <51:48> QOS6_PRI  R/W      0x0     NS       QOS6 priority for PP@                                  |
 <47:44> NS        RAZ      NS      NS       Reserved                                               |
 <43:40> QOS5_PRI  R/W      0x0     NS       QOS5 priority for PP@                                  |
 <39:36> NS        RAZ      NS      NS       Reserved                                               |
 <35:32> QOS4_PRI  R/W      0x0     NS       QOS4 priority for PP@                                  |
 <31:28> NS        RAZ      NS      NS       Reserved                                               |
 <27:24> QOS3_PRI  R/W      0x0     NS       QOS3 priority for PP@                                  |
 <23:20> NS        RAZ      NS      NS       Reserved                                               |
 <19:16> QOS2_PRI  R/W      0x0     NS       QOS2 priority for PP@                                  |
 <15:12> NS        RAZ      NS      NS       Reserved                                               |
 <11:8>  QOS1_PRI  R/W      0x0     NS       QOS1 priority for PP@                                  |
 <7:4>   NS        RAZ      NS      NS       Reserved                                               |
 <3:0>   QOS0_PRI  R/W      0x0     NS       QOS0 priority for PP@                                  |
----------------------------------------------------------------------------------------------------
===
 * CSR reserved addresses: (225): 0x3100..0x3800


 * CSR align addresses: ===========================================================================================================

 * SSO_WS_PC@ = SSO Work Schedule Performance Counter
 *              (one per group)
 *
 * Counts the number of work schedules for each group.
 * Counter rolls over through zero when max value exceeded.
 *

     ==============================================================
     SSO_WS_PC(0..63) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  WS_PC     R/W      0x0     NS       Work schedule performance counter for group @          |
----------------------------------------------------------------------------------------------------
===
 * CSR reserved addresses: (64): 0x4200..0x43f8


 * CSR align addresses: ===========================================================================================================

 * SSO_WA_PC@ = SSO Work Add Performance Counter
 *             (one per QOS level)
 *
 * Counts the number of add new work requests for each QOS level.
 * Counter rolls over through zero when max value exceeded.
 *

     ==============================================================
     SSO_WA_PC(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  WA_PC     R/W      0x0     NS       Work add performance counter for QOS level @           |
----------------------------------------------------------------------------------------------------
===
 * CSR reserved addresses: (24): 0x5040..0x50f8


 * CSR align addresses: ===========================================================================================================

 * SSO_PP@_GRP_MSK = SSO PP Group Mask Register
 *                   (one bit per group per PP)
 *
 * Selects which group(s) a PP belongs to.  A '1' in any bit position sets the
 * PP's membership in the corresponding group.  A value of 0x0 will prevent the
 * PP from receiving new work.
 *
 * Note that these do not contain QOS level priorities for each PP.  This is a
 * change from previous POW designs.
 *

     ==============================================================
     SSO_PP(0..31)_GRP_MSK Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  GRP_MSK   R/W      0xffffffffffffffff  0xffffffffffffffff  PP@ group mask                  |
----------------------------------------------------------------------------------------------------
===
 * CSR reserved addresses: (96): 0x6100..0x63f8


 * CSR align addresses: ===========================================================================================================

 * SSO_WQ_INT_THR(0..63) = SSO Work Queue Interrupt Threshold Registers
 *                         (one per group)
 *
 * Contains the thresholds for enabling and setting work queue interrupts.  For
 * more information, see the interrupt section.
 *
 * Note: Up to 16 of the SSO's internal storage buffers can be allocated
 * for hardware use and are therefore not available for incoming work queue
 * entries.  Additionally, any WS that is not in the EMPTY state consumes a
 * buffer.  Thus in a 32 PP system, it is not advisable to set either IQ_THR or
 * DS_THR to greater than 2048 - 16 - 32*2 = 1968.  Doing so may prevent the
 * interrupt from ever triggering.
 *
 * Priorities for QOS levels 0..7
 *

     ==============================================================
     SSO_WQ_INT_THR(0..63) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:33> NS	   RAZ	    NS	    NS	     Reserved						    |
 <32>	 TC_EN	   R/W	    0x0	    NS	     Time counter interrupt enable for group @		    |
					       TC_EN must be zero when TC_THR==0		    |
 <31:28> TC_THR	   R/W	    0x0	    NS	     Time counter interrupt threshold for group @	    |
					       When TC_THR==0, SSO_WQ_INT_CNT@[TC_CNT] is zero	    |
 <27:26> NS	   RAZ	    NS	    NS	     Reserved						    |
 <25:14> DS_THR	   R/W	    0x0	    NS	     De-schedule count threshold for group @		    |
					       DS_THR==0 disables the threshold interrupt	    |
 <13:12> NS	   RAZ	    NS	    NS	     Reserved						    |
 <11:0>	 IQ_THR	   R/W	    0x0	    NS	     Input queue count threshold for group @		    |
					       IQ_THR==0 disables the threshold interrupt	    |
----------------------------------------------------------------------------------------------------
===
 * CSR reserved addresses: (64): 0x7200..0x73f8


 * CSR align addresses: ===========================================================================================================

 * SSO_WQ_INT_CNT@ = SSO Work Queue Interrupt Count Register
 *                   (one per group)
 *
 * Contains a read-only copy of the counts used to trigger work queue
 * interrupts.  For more information regarding this register, see the interrupt
 * section.
 *

     ==============================================================
     SSO_WQ_INT_CNT(0..63) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS        RAZ      NS      NS       Reserved                                               |
 <31:28> TC_CNT    RO       0x0     NS       Time counter current value for group @                 |
                                             HW sets TC_CNT to SSO_WQ_INT_THR@[TC_THR] whenever:    |
                                               - corresponding SSO_WQ_INT_CNT@[IQ_CNT]==0 and       |
                                                 corresponding SSO_WQ_INT_CNT@[DS_CNT]==0           |
                                               - corresponding SSO_WQ_INT[WQ_INT<@>] is written     |
                                                 with a 1 by SW                                     |
                                               - corresponding SSO_WQ_IQ_DIS[IQ_DIS<@>] is written  |
                                                 with a 1 by SW                                     |
                                               - corresponding SSO_WQ_INT_THR@ is written by SW     |
                                               - TC_CNT==1 and periodic counter                     |
                                                 SSO_WQ_INT_PC[PC]==0                               |
                                             Otherwise, HW decrements TC_CNT whenever the           |
                                             periodic counter SSO_WQ_INT_PC[PC]==0.                 |
                                             TC_CNT is 0 whenever SSO_WQ_INT_THR@[TC_THR]==0.       |
 <27:26> NS        RAZ      NS      NS       Reserved                                               |
 <25:14> DS_CNT    RO       0x0     NS       De-schedule executable count for group @               |
 <13:12> NS        RAZ      NS      NS       Reserved                                               |
 <11:0>  IQ_CNT    RO       0x0     NS       Input queue executable count for group @               |
----------------------------------------------------------------------------------------------------
===
 * CSR reserved addresses: (64): 0x8200..0x83f8


 * CSR align addresses: ===========================================================================================================

 * SSO_IQ_CNT@ = SSO Input Queue Count Register
 *               (one per QOS level)
 *
 * Contains a read-only count of the number of work queue entries for each QOS
 * level. Counts both in-unit and in-memory entries.
 *

     ==============================================================
     SSO_IQ_CNT(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS        RAZ      NS      NS       Reserved                                               |
 <31:0>  IQ_CNT    RO       0x0     NS       Input queue count for QOS level @                      |
----------------------------------------------------------------------------------------------------
===
 * CSR reserved addresses: (24): 0x9040..0x90f8


 * CSR align addresses: ===========================================================================================================

 * SSO_IQ_THR@ = SSO Input Queue Threshold Register
 *               (one per QOS level)
 *
 * Threshold value for triggering input queue interrupts.
 *

     ==============================================================
     SSO_IQ_THR(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS	   RAZ	    NS		NS	    Reserved					    |
 <31:0>	 IQ_THR	   R/W	    0xffffffff	NS	    Input queue threshold for QOS level @	    |
----------------------------------------------------------------------------------------------------
===
 * CSR reserved addresses: (24): 0xa040..0xa0f8


 * CSR align addresses: ===========================================================================================================

 * SSO_QOS_THR@ = SSO QOS Threshold Register
 *                (one per QOS level)
 *
 * Contains the thresholds for allocating SSO internal storage buffers.  If the
 * number of remaining free buffers drops below the minimum threshold (MIN_THR)
 * or the number of allocated buffers for this QOS level rises above the
 * maximum threshold (MAX_THR), future incoming work queue entries will be
 * buffered externally rather than internally.  This register also contains the
 * number of internal buffers currently allocated to this QOS level (BUF_CNT).
 *

     ==============================================================
     SSO_QOS_THR(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:40> NS        RAZ      NS      NS       Reserved                                               |
 <39:28> BUF_CNT   RO       0x0     NS       # of internal buffers allocated to QOS level @         |
 <27:26> NS        RAZ      NS      NS       Reserved                                               |
 <25:14> MAX_THR   R/W      0xf1    NS       Max threshold for QOS level @                          |
                                             For performance reasons, MAX_THR can have a slop of 4
                                             WQE for QOS level @.
 <13:12> NS        RAZ      NS      NS       Reserved                                               |
 <11:0>  MIN_THR   R/W      0x0     NS       Min threshold for QOS level @                          |
                                             For performance reasons, MIN_THR can have a slop of 4
                                             WQEs for QOS level @.
----------------------------------------------------------------------------------------------------
===
 * CSR reserved addresses: (24): 0xb040..0xb0f8


 * CSR align addresses: ===========================================================================================================

 * SSO_RWQ_HEAD_PTR@ = SSO Remote Queue Head Register
 *                (one per QOS level)
 * Contains the ptr to the first entry of the remote linked list(s) for a particular
 * QoS level. SW should initialize the remote linked list(s) by programming
 * SSO_RWQ_HEAD_PTR@ and SSO_RWQ_TAIL_PTR@ to identical values.
 *

     ==============================================================
     SSO_RWQ_HEAD_PTR(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:38> NS        RAZ      NS      NS       Reserved                                               |
 <37:7>  PTR       R/W      0x0     NS       Head Pointer                                           |
 <6:5>   NS        RAZ      NS      NS       Reserved                                               |
 <4:0>   RCTR      RO       0x0     NS       Index of next WQE entry in fill packet to be           |
                                             processed (inbound queues)
----------------------------------------------------------------------------------------------------
===
 * CSR reserved addresses: (56): 0xc040..0xc1f8


 * SSO_RWQ_TAIL_PTR@ = SSO Remote Queue Tail Register
 *                (one per QOS level)
 * Contains the ptr to the last entry of the remote linked list(s) for a particular
 * QoS level. SW must initialize the remote linked list(s) by programming
 * SSO_RWQ_HEAD_PTR@ and SSO_RWQ_TAIL_PTR@ to identical values.
 *

     ==============================================================
     SSO_RWQ_TAIL_PTR(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:38> NS        RAZ      NS      NS       Reserved                                               |
 <37:7>  PTR       R/W      0x0     NS       Tail Pointer                                           |
 <6:5>   NS        RAZ      NS      NS       Reserved                                               |
 <4:0>   RCTR      RO       0x0     NS       Number of entries waiting to be sent out to external   |
                                             RAM (outbound queues)
----------------------------------------------------------------------------------------------------
===
 * CSR reserved addresses: (56): 0xc240..0xc3f8


 * SSO_RWQ_PSH_FPTR = SSO Free Pointer FIFO
 *
 * This register is used by SW to initialize the SSO with a pool of free
 * pointers by writing the FPTR field whenever FULL = 0. Free pointers are
 * fetched/released from/to the pool when accessing WQE entries stored remotely
 * (in remote linked lists).  Free pointers should be 128 byte aligned, each of
 * 256 bytes. This register should only be used when SSO is idle.
 *
 * Software needs to set aside buffering for
 *      8 + 48 + ROUNDUP(N/26)
 *
 * where as many as N DRAM work queue entries may be used.  The first 8 buffers
 * are used to setup the SSO_RWQ_HEAD_PTR and SSO_RWQ_TAIL_PTRs, and the
 * remainder are pushed via this register.
 *
 * IMPLEMENTATION NOTES--NOT FOR SPEC:
 *      48 avoids false out of buffer error due to (16) FPA and in-sso FPA buffering (32)
 *      26 is number of WAE's per 256B buffer
 *

     ==============================================================
     SSO_RWQ_PSH_FPTR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    FULL      RO       0x0     NS       FIFO Full.  When set, the FPA is busy writing entries  |
                                             and software must wait before adding new entries.
 <62:38> NS        RAZ      NS      NS       Reserved                                               |
 <37:7>  FPTR      WO       0x0     NS       Free Pointer                                           |
 <6:0>   NS        RAZ      NS      NS       Reserved                                               |
----------------------------------------------------------------------------------------------------
===

 * SSO_RWQ_POP_FPTR = SSO Pop Free Pointer
 *
 * This register is used by SW to remove pointers for buffer-reallocation and diagnostics, and
 * should only be used when SSO is idle.
 *
 * To remove ALL pointers, software must insure that there are modulus 16
 * pointers in the FPA.  To do this, SSO_CFG.RWQ_BYP_DIS must be set, the FPA
 * pointer count read, and enough fake buffers pushed via SSO_RWQ_PSH_FPTR to
 * bring the FPA pointer count up to mod 16.
 *

     ==============================================================
     SSO_RWQ_POP_FPTR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    VAL       RO       0x0     NS       Free Pointer Valid                                     |
 <62:38> NS        RAZ      NS      NS       Reserved                                               |
 <37:7>  FPTR      RO       0x0     NS       Free Pointer                                           |
 <6:0>   NS        RAZ      NS      NS       Reserved                                               |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_REG_FLAGS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
  <63:7> NS        RAZ       NS       NS    RESERVED                                                |
					      							    |
  <6:5>  GPIO_EDGE R/W       0        0      Edge used for GPIO timing                              |
                                             2'b10 - TIM counts high to low transitions             |
                                             2'b01 - TIM counts low to high transitions             |
					     2'b11 - TIM counts Both low to high and high to low    |
					     transitions			 		    |
   <4>   ENA_GPIO  R/W       0        0      Enable the external control of GPIO over the free      |
					     running timer.					    |
					     When set, free running timer will be driven by GPIO.   |
					     Free running timer will count posedge or negedge of the|
					     GPIO pin based on GPIO_EDGE register.		    |
   <3>   ENA_DFB   R/W       0        0      Enable Don't Free Buffer. When set chunk buffer        |
				     	     would not be released by the TIM back to FPA.	    |
												    |
   <2>   RESET     WO        0        0      Reset one shot pulse for free-running Timer            |
												    |
   <1>   ENA_DWB   R/W       0        0      When set, enables the use of Dont Write Back during    |
					     FPA buffer freeing operations			    |
												    |
   <0>   ENA_TIM   R/W       0        0      When set, TIM is in normal operation.                  |
                                             When clear, time is effectively stopped for all	    |
                                             rings in TIM.                                          |
					     TIM has a counter (see FR_RN_HW)that causes a periodic |
                                             tick. This counter is shared by all rings.             |
					     Each Timer tick causes the HW to decrement the time    |
                                             Count for all enabled rings.                           |
					     When ENA_TIM==0, the HW stops the shared periodic      |
					     counter, FR_RN_HW, so there are no more ticks, and     |
					     there are no more NEW bucket traversals.               |
					     If ENA_TIM transitions 1->0, TIM will no longer create |
					     new bucket traversals, but will traverse any rings that|
                                             previously expired but are pending HW traversal.       |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     TIM_FR_RN_TT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
  <63:22>  NS      RAZ       NS       NS     RESERVED                                               |
  <21:0> FR_RN_TT  R/W      1024      1024   Free Running Timer Threshold. Defines the reset value  |
					     for the free running timer when it reaches zero during |
				   	     it's count down.					    |
					     FR_RN_TT will be used in both cases where free running |
					     clock is driven externally or internally.              |
  				     	     Interval programming guidelines:			    |
					     For every 64 entries in a bucket interval should be at |
 					     least 1us.                                             |
				             Minimal recommended value for FR_RN_TT is 1us.         |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_ECC_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
  <63:3> NS          RAZ     NS       NS    RESERVED                                                |
  <2:1>  ECC_FLP_SYN R/W     0        0     ECC Flip Syndrome. Flip the ECC's syndrome for testing  |
 				            purposes, to test SBE and DBE ECC interrupts.           |
  <0>    ECC_EN     R/W      1        1     Enable ECC correction of the Ring Data Structre memory. |
   				            ECC is enabled by default.   		            |
----------------------------------------------------------------------------------------------------
===




     ==============================================================
     TIM_BIST_RESULT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:3>  NS        RAZ       NS          NS       RESERVED                                          |
 <2>   	 WQE_FIFO  RO        NS          0        BIST result of the NCB_WQE FIFO (0=pass, !0=fail) |
 <1>   	 LSLR_FIFO RO        NS          0        BIST result of the NCB_LSLR FIFO (0=pass, !0=fail)|
 <0>   	 RDS_MEM   RO        NS          0        BIST result of the RDS memory (0=pass, !0=fail)   |
												    |
Notes:												    |
 Access to the internal BiST results								    |
 Each bit is the BiST result of an individual memory (per bit, 0=pass and 1=fail).                  |
----------------------------------------------------------------------------------------------------
===




     ==============================================================
     TIM_INT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  INT0      R/W1C    0           0        Interrupt bit per ring. Each bit indicates the     |
						 ring number in error. Each bit in this reg is set  |
						 regardless of TIM_INT0_EN value.                   |
Notes:												    |
 A ring is in error if its interval has elapsed more than once without having been serviced. This is|
 usually a programming error where number of entries in the bucket is too large for the interval    |
 specified for the ring.									    |
 Any bit in the INT field should be cleared by writing '1' to it.                                   |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_INT0_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  INT0_EN     R/W      0           0       Bit enable corresponding to TIM_INT0.             |
												    |
Notes:												    |
 When bit at TIM_INT0_EN is set it enables the corresponding TIM_INTO's bit for interrupt generation|
 If enable bit is cleared the corresponding bit at TIM_INT0 will still be set.                      |
 Interrupt to the cores is generated by : |(TIM_INT0 & TIM_INT0_EN0)                                |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_INT0_EVENT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:6>   NS        RAZ      NS          NS       RESERVED    				    	    |
<5:0>    RING_ID   RO       0           0        The first Ring ID where an interrupt occurred.     |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_INT_ECCERR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     SBE      R/W1C    0           0         TIM RDS memory had a Single Bit Error              |
 <1>     DBE      R/W1C    0           0         TIM RDS memory had a Double Bit Error              |
<63:2>   NS       RAZ      NS          NS        RESERVED    				    	    |
Notes:
Each bit in this reg is set regardless of TIM_INT_ECCERR_EN value.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_INT_ECCERR_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     SBE_EN   R/W      0           0        Bit mask corresponding to TIM_REG_ECCERR.SBE        |
 <1>     DBE_EN   R/W      0           0        Bit mask corresponding to TIM_REG_ECCERR.DBE        |
<63:2>   NS        RAZ     NS          NS       RESERVED    				    	    |
Notes:												    |
 When mask bit is set, the corresponding bit in TIM_INT_ECCERR is enabled. If mask bit is cleared the |
 corresponding bit in TIM_INT_ECCERR will still be set but interrupt will not be reported.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_INT_ECCERR_EVENT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:15>  NS        RAZ      NS          NS       RESERVED    				    	    |
<14:8>   SYND      RO       0           0        ECC Syndrome                                       |
<7:0>    ADD       RO       0           0        Memory address where the Error occurred.           |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_INT_ECCERR_EVENT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:55>  NS          RAZ      NS          NS       RESERVED    				    	    |
<54:48>  ORG_ECC     RO       0           0        Original ECC bits where the error occured.       |
<47:0>   ORG_RDS_DAT RO       0           0        Memory original data where the error occured.    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_RING(0..63)_CTL0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:47> NS          RAZ      NS     NS     RESERVED                                      	    |
<46>    ENA         R/W      0      0      Ring timer enable                                        |
<45:44> INTC	    R/W      0      0      Interval count for Error. Defines how many intervals     |
					   could elapse from bucket expiration till actual          |
					   bucket traversal before HW asserts an error.		    |
                                           Typical value is 0,1,2.                                    |
<43:22> TIMERCOUNT  R/W      0      0      Timer Count represents the ring offset; how many timer   |
					   ticks have left till the interval expiration.	    |
					   Typical initialization value should be Interval/Constant,|
					   it is recommended that constant should be unique per ring|
					   This will create an offset between the rings.            |
					   Once ENA is set,                                         |
					   TIMERCOUNT counts down timer ticks. When TIMERCOUNT 	    |
					   reaches zero, ring's interval expired and the HW forces  |
					   a bucket traversal (and resets TIMERCOUNT to INTERVAL)   |
					   TIMERCOUNT is unpredictable whenever ENA==0.		    |
					   It is SW responsibility to set TIMERCOUNT before 	    |
					   TIM_RINGX_CTL0.ENA transitions from 0 to 1.		    |
		                           When the field is set to X it would take X+1 timer tick  |
	                                   for the interval to expire.                              |
                                                 						    |
<21:0>  INTERVAL    R/W      0     0       Timer interval. Measured in Timer Ticks, where timer     |
			 	       	   ticks are defined by TIM_FR_RN_TT.FR_RN_TT.		    |
												    |
Notes:												    |
This CSR is a memory of 64 entries								    |
After a 1 to 0 transition on ENA, the HW will still complete a bucket traversal for the ring	    |
if it was pending or active prior to the transition. (SW must delay to ensure the completion	    |
of the traversal before reprogramming the ring.)						    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     TIM_RING(0..63)_CTL1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:43> NS        RAZ       NS      NS       RESERVED    				      	    |
<42:40> CPOOL     R/W       0       0        FPA Free list to free chunks to.                       |
<39:20> BUCKET    R/W       0       0        Current bucket. Should be set to zero by SW at         |
                                             enable time.					    |
                                             Incremented once per bucket traversal.		    |
<19:0>  BSIZE     R/W       0       0        Number of buckets minus one. If BSIZE==0 there is      |
					     only one bucket in the ring.  			    |
												    |
Notes:												    |
This CSR is a memory of 64 entries								    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_RING(0..63)_CTL2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:47> NS       RAZ        NS        NS        RESERVED                                            |
<46:34> CSIZE    R/W        0         0         Number of words per chunk. CSIZE mod(16) should be  |
                                                zero.                                               |
<33:31> NS       RAZ        NS        NS        RESERVED                                            |
<30:0>  BASE     R/W        0         0         Pointer[35:5] to bucket[0]                          |
												    |
Notes:												    |
 BASE is a 32-byte aligned pointer[35:0].  Only pointer[35:5] are stored because pointer[4:0] = 0.  |
 This CSR is a memory of 64 entries								    |
----------------------------------------------------------------------------------------------------
===




     ==============================================================
     TIM_RING(0..63)_DBG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:42>  FR_RN_HT     RO      0      0       Free Running Hardware Timer. Shared by all rings and is|
					     used to generate the Timer Tick based on 		    |
				             FR_RN_TT.            				    |
												    |
<41:20>  TIMERCOUNT   RO      0      0       Timer Count represents the ring's offset.              |
                                             Refer to TIM_RING@_CTL0. 				    |
                                                 						    |
<19:0>   CUR_BUCKET   RO      0      0       Current bucket. Indicates the ring's current bucket.   |
                                             Refer to TIM_RING@_CTL1.BUCKET.  	                    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_RING(0..63)_DBG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2>   NS       RAZ      NS     NS     RESERVED                                                   |
												    |
<1:0>   RING_ESR  RO       0      0      Ring Expiration Status Register.                           |
		 	 	         This register hold the expiration status of the ring.	    |
					 2'b00 - Ring was recently traversed.			    |
					 2'b01 - Interval expired. Ring is queued to be traversed.  |
					 2'b10 - 1st interval expiration while ring is queued to be |
					 traversed.						    |
					 2'b11 - 2nd interval expiration while ring is queued to be |
					 traversed.						    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     TIM_DBG2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:56> MEM_ALLOC_REG  RO     0      0      NCB Load Memory Allocation status                       |
<55:51> NS             RAZ    NS     NS     RESERVED                                                |
<50:48> GNT_FIFO_LEVEL RO     0      0      NCB GRANT FIFO level                                    |
<47:45> NS             RAZ    NS     NS     RESERVED                                                |
<44:40> RWF_FIFO_LEVEL RO     0      0      NCB requests FIFO level                                 |
<39:32> WQE_FIFO_LEVEL RO     0      0      NCB WQE LD FIFO level                                   |
<31:16> NS             RAZ    NS     NS     RESERVED                                                |
<15:12> FSM3_STATE     RO     0      0      FSM 3 current state                                     |
<11:8>  FSM2_STATE     RO     0      0      FSM 2 current state                                     |
<7:4>   FSM1_STATE     RO     0      0      FSM 1 current state                                     |
<3:0>   FSM0_STATE     RO     0      0      FSM 0 current state                                     |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     TIM_DBG3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0> RINGS_PENDING_VEC RO   0      0     Pending rings vector. Indicates which ring in TIM are    |
					   pending traversal. Bit 0 represents ring 0 while bit 63  |
					   represents ring 63.                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  TRA_CTL = Trace Buffer Control
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:17>  NS       RAZ      0           0         RESERVED
<16>     RDAT_MD  R/W      0           0         TRA_READ_DAT mode bit
                                                   If set, the TRA_READ_DAT reads will return the lower
                                                   64 bits of the TRA entry and the upper bits must be
						   read through TRA_READ_DAT_HI.  If not set the return
					           value from TRA_READ_DAT accesses will switch between
 					           the lower bits and the upper bits of the TRA entry.
<15>     CLKALWAYS R/W     0           0         Conditional clock enable
                                                   If set, the TRA clock is never disabled.
<14>     IGNORE_O R/W      0           0         Ignore overflow during wrap mode
                                                   If set and wrapping mode is enabled, then tracing
                                                   will not stop at the overflow condition.  Each
                                                   write during an overflow will overwrite the
                                                   oldest, unread entry and the read pointer is
                                                   incremented by one entry.  This bit has no effect
                                                   if WRAP=0.
<13>     MCD0_ENA R/W      0           0         MCD0 enable
                                                   If set and any PP sends the MCD0 signal, the
                                                   tracing is disabled.
<12>     MCD0_THR R/W      0           0         MCD0_threshold
                                                   At a fill threshold event, sends an MCD0
                                                   wire pulse that can cause cores to enter debug
                                                   mode, if enabled.  This MCD0 wire pulse will not
                                                   occur while (TRA_INT_STATUS.MCD0_THR == 1).
<11>     MCD0_TRG R/W      0           0         MCD0_trigger
                                                   At an end trigger event, sends an MCD0
                                                   wire pulse that can cause cores to enter debug
                                                   mode, if enabled.  This MCD0 wire pulse will not
                                                   occur while (TRA_INT_STATUS.MCD0_TRG == 1).
<10>     CIU_THR R/W      0           0          CIU_threshold
                                                   When set during a fill threshold event,
                                                   TRA_INT_STATUS[CIU_THR] is set, which can cause
                                                   core interrupts, if enabled.
<9>      CIU_TRG R/W      0           0          CIU_trigger
                                                   When set during an end trigger event,
                                                   TRA_INT_STATUS[CIU_TRG] is set, which can cause
                                                   core interrupts, if enabled.
<8:7>    FULL_THR R/W      0           0         Full Threshhold
                                                   0=none
                                                   1=1/2 full
                                                   2=3/4 full
                                                   3=4/4 full
<6:4>    TIME_GRN R/W      0           0         Timestamp granularity
                                                   granularity=8^n cycles, n=0,1,2,3,4,5,6,7
<3:2>    TRIG_CTL R/W      0           0         Trigger Control
                                                   Note: trigger events are written to the trace
                                                   0=no triggers
                                                   1=trigger0=start trigger, trigger1=stop trigger
                                                   2=(trigger0 || trigger1)=start trigger
                                                   3=(trigger0 || trigger1)=stop trigger
<1>      WRAP     R/W      0           0         Wrap mode
                                                   When WRAP=0, the trace buffer will disable itself
                                                   after having logged 1024 entries.  When WRAP=1,
                                                   the trace buffer will never disable itself.
                                                   In this case, tracing may or may not be
                                                   temporarily suspended during the overflow
                                                   condition (see IGNORE_O above).
                                                   0=do not wrap
                                                   1=wrap
<0>      ENA      R/W      0           0         Enable Trace
                                                   Master enable.  Tracing only happens when ENA=1.
                                                   When ENA changes from 0 to 1, the read and write
                                                   pointers are reset to 0x00 to begin a new trace.
                                                   The MCD0 event may set ENA=0 (see MCD0_ENA
                                                   above).  When using triggers, tracing occurs only
                                                   between start and stop triggers (including the
                                                   triggers themselves).
                                                   0=disable
                                                   1=enable

Notes:
 It is illegal to change the values of WRAP, TRIG_CTL, IGNORE_O while tracing (i.e. when ENA=1).
 Note that the following fields are present only in chip revisions beginning with pass2: IGNORE_O
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_INT_STATUS = Trace Buffer Interrupt Status
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_INT_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>   NS       RAZ      0           0         RESERVED
<3>      MCD0_THR R/W1C    0           0         MCD0 full threshold interrupt status
                                                   0=trace buffer did not generate MCD0 wire pulse
                                                   1=trace buffer did     generate MCD0 wire pulse
                                                     and prevents additional MCD0_THR MCD0 wire pulses
<2>      MCD0_TRG R/W1C    0           0         MCD0 end trigger interrupt status
                                                   0=trace buffer did not generate interrupt
                                                   1=trace buffer did     generate interrupt
                                                     and prevents additional MCD0_TRG MCD0 wire pulses
<1>      CIU_THR  R/W1C    0           0         CIU full threshold interrupt status
                                                   0=trace buffer did not generate interrupt
                                                   1=trace buffer did     generate interrupt
<0>      CIU_TRG  R/W1C    0           0         CIU end trigger interrupt status
                                                   0=trace buffer did not generate interrupt
                                                   1=trace buffer did     generate interrupt

Notes:
 During a CSR write to this register, the write data is used as a mask to clear the selected status
 bits (status'[3:0] = status[3:0] & ~write_data[3:0]).
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_BIST_STATUS = Trace Buffer BiST Status
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>   NS       RAZ      0           0         RESERVED
<0>      TDF      RO       0           0         Bist Results for TCF memory
                                                   0: GOOD (or bist in progress/never run)
                                                   1: BAD
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_CYCLES_SINCE = Trace Buffer Cycles Since Last Write, Read/Write pointers
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_CYCLES_SINCE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16>  CYCLES   RO       0           0         Cycles since the last entry was written
<15:8>   RPTR     RO       0           0         Read pointer
<7:0>    WPTR     RO       0           0         Write pointer

Notes:
 This CSR is obsolete.  Use TRA_CYCLES_SINCE1 instead.
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_READ_DAT = Trace Buffer Read Data
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_READ_DAT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   DATA     RO       0           0         Trace buffer data for current entry
					         if TRA_CTL[16]== 1; returns lower 64 bits of entry
						 else two access are necessary to get all of 69bits
						 first access of a pair is the lower 64 bits and
						 second access is the upper 5 bits.

Notes:
 This CSR is a memory of 1024 entries.  When the trace was enabled, the read pointer was set to entry
 0 by hardware.  Each read to this address increments the read pointer.
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_CYCLES_SINCE1 = Trace Buffer Cycles Since Last Write, Read/Write pointers
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_CYCLES_SINCE1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:24>  CYCLES   RO       0           0         Cycles since the last entry was written
<23:22>  NS       RAZ      NS          NS        RESERVED
<21:12>  RPTR     RO       0           0         Read pointer
<11:10>  NS       RAZ      NS          NS        RESERVED
<9:0>    WPTR     RO       0           0         Write pointer
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_READ_DAT_HI = Trace Buffer Read Data- upper 5 bits do not use if TRA_CTL[16]==0
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_READ_DAT_HI Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:5>   NS       RAZ      0           0         RESERVED
<4:0>    DATA     RO       0           0         Trace buffer data[68:64] for current entry

Notes:
 This CSR is a memory of 1024 entries. Reads to this address do not increment the read pointer.  The
5 bits read are the upper 5 bits of the TRA entry last read by the TRA_READ_DAT reg.
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_FILT_CMD = Trace Buffer Filter Command Mask
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_FILT_CMD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63>     SAA64    R/W      0           1         Enable SAA64 tracing
                                                   0=disable, 1=enable
<62>     SAA32    R/W      0           1         Enable SAA32 tracing
                                                   0=disable, 1=enable
<61:60>  NS       R/W      0           0         Must be written to zero
<59>     FAA64    R/W      0           1         Enable FAA64 tracing
                                                   0=disable, 1=enable
<58>     FAA32    R/W      0           1         Enable FAA32 tracing
                                                   0=disable, 1=enable
<57:56>  NS       R/W      0           0         Must be written to zero
<55>     DECR64   R/W      0           1         Enable DECR64  tracing
                                                   0=disable, 1=enable
<54>     DECR32   R/W      0           1         Enable DECR32  tracing
                                                   0=disable, 1=enable
<53>     DECR16   R/W      0           1         Enable DECR16  tracing
                                                   0=disable, 1=enable
<52>     DECR8    R/W      0           1         Enable DECR8   tracing
                                                   0=disable, 1=enable
<51>     INCR64   R/W      0           1         Enable INCR64  tracing
                                                   0=disable, 1=enable
<50>     INCR32   R/W      0           1         Enable INCR32  tracing
                                                   0=disable, 1=enable
<49>     INCR16   R/W      0           1         Enable INCR16  tracing
                                                   0=disable, 1=enable
<48>     INCR8    R/W      0           1         Enable INCR8   tracing
                                                   0=disable, 1=enable
<47>     CLR64    R/W      0           1         Enable CLR64   tracing
                                                   0=disable, 1=enable
<46>     CLR32    R/W      0           1         Enable CLR32   tracing
                                                   0=disable, 1=enable
<45>     CLR16    R/W      0           1         Enable CLR16   tracing
                                                   0=disable, 1=enable
<44>     CLR8     R/W      0           1         Enable CLR8    tracing
                                                   0=disable, 1=enable
<43>     SET64    R/W      0           1         Enable SET64   tracing
                                                   0=disable, 1=enable
<42>     SET32    R/W      0           1         Enable SET32   tracing
                                                   0=disable, 1=enable
<41>     SET16    R/W      0           1         Enable SET16   tracing
                                                   0=disable, 1=enable
<40>     SET8     R/W      0           1         Enable SET8    tracing
                                                   0=disable, 1=enable
<39>     IOBST64  R/W      0           1         Enable IOBST64 tracing
                                                   0=disable, 1=enable
<38>     IOBST32  R/W      0           1         Enable IOBST32 tracing
                                                   0=disable, 1=enable
<37>     IOBST16  R/W      0           1         Enable IOBST16 tracing
                                                   0=disable, 1=enable
<36>     IOBST8   R/W      0           1         Enable IOBST8  tracing
                                                   0=disable, 1=enable
<35>     IOBLD64  R/W      0           1         Enable IOBLD64 tracing
                                                   0=disable, 1=enable
<34>     IOBLD32  R/W      0           1         Enable IOBLD32 tracing
                                                   0=disable, 1=enable
<33>     IOBLD16  R/W      0           1         Enable IOBLD16 tracing
                                                   0=disable, 1=enable
<32>     IOBLD8   R/W      0           1         Enable IOBLD8  tracing
                                                   0=disable, 1=enable
<31>     LCKL2    R/W      0           1         Enable LCKL2   tracing
                                                   0=disable, 1=enable
<30>     WBL2     R/W      0           1         Enable WBL2    tracing
                                                   0=disable, 1=enable
<29>     WBIL2    R/W      0           1         Enable WBIL2   tracing
                                                   0=disable, 1=enable
<28>     INVL2    R/W      0           1         Enable INVL2   tracing
                                                   0=disable, 1=enable
<27>     NS       R/W      0           0         Must be written to zero
<26>     STGL2I   R/W      0           1         Enable STGL2I  tracing
                                                   0=disable, 1=enable
<25>     LTGL2I   R/W      0           1         Enable LTGL2I  tracing
                                                   0=disable, 1=enable
<24>     WBIL2I   R/W      0           1         Enable WBIL2I  tracing
                                                   0=disable, 1=enable
<23>     FAS64    R/W      0           1         Enable FAS64   tracing
                                                   0=disable, 1=enable
<22>     FAS32    R/W      0           1         Enable FAS32   tracing
                                                   0=disable, 1=enable
<21>     STTIL1   R/W      0           1         Enable STTIL1  tracing
                                                   0=disable, 1=enable
<20>     STFIL1   R/W      0           1         Enable STFIL1  tracing
                                                   0=disable, 1=enable
<19>     STC      R/W      0           1         Enable STC     tracing
                                                   0=disable, 1=enable
<18>     STP      R/W      0           1         Enable STP     tracing
                                                   0=disable, 1=enable
<17>     STT      R/W      0           1         Enable STT     tracing
                                                   0=disable, 1=enable
<16>     STF      R/W      0           1         Enable STF     tracing
                                                   0=disable, 1=enable
<15>     IOBDMA   R/W      0           1         Enable IOBDMA  tracing
                                                   0=disable, 1=enable
<14:10>  NS       R/W      0           0         Must be written to zero
<9>      PSL1     R/W      0           1         Enable PSL1    tracing
                                                   0=disable, 1=enable
<8>      LDD      R/W      0           1         Enable LDD     tracing
                                                   0=disable, 1=enable
<7:6>    NS       R/W      0           0         Must be written to zero
<5>      DWB      R/W      0           1         Enable DWB     tracing
                                                   0=disable, 1=enable
<4>      RPL2     R/W      0           1         Enable RPL2    tracing
                                                   0=disable, 1=enable
<3>      PL2      R/W      0           1         Enable PL2     tracing
                                                   0=disable, 1=enable
<2>      LDI      R/W      0           1         Enable LDI     tracing
                                                   0=disable, 1=enable
<1>      LDT      R/W      0           1         Enable LDT     tracing
                                                   0=disable, 1=enable
<0>      NOP      R/W      0           1         Enable NOP     tracing
                                                   0=disable, 1=enable


Notes:
Note that the trace buffer does not do proper IOBDMA address compares.  Thus, if IOBDMA is set, then
the address compare must be disabled (i.e. TRA_FILT_ADR_MSK set to zero) to guarantee that IOBDMAs
enter the trace.
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_FILT_SID = Trace Buffer Filter SourceId Mask
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_FILT_SID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  NS       RAZ      0           0         RESERVED
<31:20>  NS       R/W      0           0         Must be written to zero
<19>     DWB      R/W      0           0         Enable tracing of requests from the IOB DWB engine
<18>     IOBREQ   R/W      0           0         Enable tracing of requests from FPA,TIM,DFA,
                                                 PCI,ZIP,SSO, and PKO (writes)
<17>     PKO      R/W      0           0         Enable tracing of read requests from PKO
<16>     PKI      R/W      0           0         Enable tracing of write requests from PIP/IPD
<15:8>   NS       R/W      0           0         Must be written to zero
<7:0>    PP       R/W      0           0         Enable tracing from PP[N*4 + @] with
						 matching SourceID
                                                   0=disable, 1=enable per bit N where 0<=N<=7
						   TRA0 can trace PP's 0, 4, ... 28
						   TRA1 can trace PP's 1, 5, ... 29
						   TRA2 can trace PP's 2, 6, ... 30
						   TRA3 can trace PP's 3, 7, ... 31
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_FILT_DID = Trace Buffer Filter DestinationId Mask
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_FILT_DID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  NS       RAZ      0           0         RESERVED
<31>     ILLEGAL5 R/W      0           1         Illegal destinations
<30>     FAU      R/W      0           1         Enable tracing of FAU accesses
<29:28>  ILLEGAL4 R/W      0           0x3       Illegal destinations
<27>     DPI      R/W      0           1         Enable tracing of DPI accesses
                                                 (DPI NCB CSRs)
<26:15>  ILLEGAL  R/W      0           0xFFF     Illegal destinations
<14>     RAD      R/W      0           1         Enable tracing of RAD accesses
                                                 (doorbells)
<13>     USB0     R/W      0           1         Enable tracing of USB0 accesses
                                                 (UAHC0 EHCI and OHCI NCB CSRs)
<12>     POW      R/W      0           1         Enable tracing of requests to SSO
                                                 (get work, add work, status/memory/index
                                                 loads, ALLOC_WE loads, CSR's)
<11>     ILLEGAL2 R/W      0           1         Illegal destination
<10>     PKO      R/W      0           1         Enable tracing of PKO accesses
                                                 (doorbells)
<9>      IPD      R/W      0           1         Enable tracing of IPD CSR accesses
                                                 (IPD CSRs)
<8>      RNG      R/W      0           1         Enable tracing of requests to RNG
                                                 (loads/IOBDMA's are legal)
<7>      ZIP      R/W      0           1         Enable tracing of requests to ZIP
                                                 (doorbell stores are legal)
<6>      DFA      R/W      0           1         Enable tracing of requests to DFA
                                                 (CSR's and operations are legal)
<5>      FPA      R/W      0           1         Enable tracing of requests to FPA
                                                 (alloc's (loads/IOBDMA's), frees (stores) are legal)
<4>      KEY      R/W      0           1         Enable tracing of requests to KEY memory
                                                 (loads/IOBDMA's/stores are legal)
<3>      SLI      R/W      0           1         Enable tracing of requests to SLI and RSL-type
                                                 CSR's (RSL CSR's, PCI/sRIO bus operations, SLI
                                                 CSR's)
<2:1>    ILLEGAL3 R/W      0           0x3       Illegal destinations
<0>      MIO      R/W      0           1         Enable tracing of MIO accesses
                                                 (CIU and GPIO CSR's, boot bus accesses)
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_FILT_ADR_ADR = Trace Buffer Filter Address Address
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_FILT_ADR_ADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:38>  NS       RAZ      0           0         RESERVED
<37:0>   ADR      R/W      0           NS        Unmasked Address
                                                   The combination of TRA_FILT_ADR_ADR and
                                                   TRA_FILT_ADR_MSK is a masked address to
                                                   enable tracing of only those commands whose
                                                   masked address matches
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_FILT_ADR_MSK = Trace Buffer Filter Address Mask
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_FILT_ADR_MSK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:38>  NS       RAZ      0           0         RESERVED
<37:0>   ADR      R/W      0           0         Address Mask
                                                   The combination of TRA_FILT_ADR_ADR and
                                                   TRA_FILT_ADR_MSK is a masked address to
                                                   enable tracing of only those commands whose
                                                   masked address matches.  When a mask bit is not
                                                   set, the corresponding address bits are assumed
                                                   to match.  Also, note that IOBDMAs do not have
                                                   proper addresses, so when TRA_FILT_CMD[IOBDMA]
                                                   is set, TRA_FILT_ADR_MSK must be zero to
                                                   guarantee that any IOBDMAs enter the trace.
----------------------------------------------------------------------------------------------------
===

 *
 *                  TRA_TRIG0_CMD = Trace Buffer Filter Command Mask
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_TRIG0_CMD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63>     SAA64    R/W      0           1         Enable SAA64 tracing
                                                   0=disable, 1=enable
<62>     SAA32    R/W      0           1         Enable SAA32 tracing
                                                   0=disable, 1=enable
<61:60>  NS       R/W      0           0         Must be written to zero
<59>     FAA64    R/W      0           1         Enable FAA64 tracing
                                                   0=disable, 1=enable
<58>     FAA32    R/W      0           1         Enable FAA32 tracing
                                                   0=disable, 1=enable
<57:56>  NS       R/W      0           0         Must be written to zero
<55>     DECR64   R/W      0           1         Enable DECR64  tracing
                                                   0=disable, 1=enable
<54>     DECR32   R/W      0           1         Enable DECR32  tracing
                                                   0=disable, 1=enable
<53>     DECR16   R/W      0           1         Enable DECR16  tracing
                                                   0=disable, 1=enable
<52>     DECR8    R/W      0           1         Enable DECR8   tracing
                                                   0=disable, 1=enable
<51>     INCR64   R/W      0           1         Enable INCR64  tracing
                                                   0=disable, 1=enable
<50>     INCR32   R/W      0           1         Enable INCR32  tracing
                                                   0=disable, 1=enable
<49>     INCR16   R/W      0           1         Enable INCR16  tracing
                                                   0=disable, 1=enable
<48>     INCR8    R/W      0           1         Enable INCR8   tracing
                                                   0=disable, 1=enable
<47>     CLR64    R/W      0           1         Enable CLR64   tracing
                                                   0=disable, 1=enable
<46>     CLR32    R/W      0           1         Enable CLR32   tracing
                                                   0=disable, 1=enable
<45>     CLR16    R/W      0           1         Enable CLR16   tracing
                                                   0=disable, 1=enable
<44>     CLR8     R/W      0           1         Enable CLR8    tracing
                                                   0=disable, 1=enable
<43>     SET64    R/W      0           1         Enable SET64   tracing
                                                   0=disable, 1=enable
<42>     SET32    R/W      0           1         Enable SET32   tracing
                                                   0=disable, 1=enable
<41>     SET16    R/W      0           1         Enable SET16   tracing
                                                   0=disable, 1=enable
<40>     SET8     R/W      0           1         Enable SET8    tracing
                                                   0=disable, 1=enable
<39>     IOBST64  R/W      0           1         Enable IOBST64 tracing
                                                   0=disable, 1=enable
<38>     IOBST32  R/W      0           1         Enable IOBST32 tracing
                                                   0=disable, 1=enable
<37>     IOBST16  R/W      0           1         Enable IOBST16 tracing
                                                   0=disable, 1=enable
<36>     IOBST8   R/W      0           1         Enable IOBST8  tracing
                                                   0=disable, 1=enable
<35>     IOBLD64  R/W      0           1         Enable IOBLD64 tracing
                                                   0=disable, 1=enable
<34>     IOBLD32  R/W      0           1         Enable IOBLD32 tracing
                                                   0=disable, 1=enable
<33>     IOBLD16  R/W      0           1         Enable IOBLD16 tracing
                                                   0=disable, 1=enable
<32>     IOBLD8   R/W      0           1         Enable IOBLD8  tracing
                                                   0=disable, 1=enable
<31>     LCKL2    R/W      0           1         Enable LCKL2   tracing
                                                   0=disable, 1=enable
<30>     WBL2     R/W      0           1         Enable WBL2    tracing
                                                   0=disable, 1=enable
<29>     WBIL2    R/W      0           1         Enable WBIL2   tracing
                                                   0=disable, 1=enable
<28>     INVL2    R/W      0           1         Enable INVL2   tracing
                                                   0=disable, 1=enable
<27>     NS       R/W      0           0         Must be written to zero
<26>     STGL2I   R/W      0           1         Enable STGL2I  tracing
                                                   0=disable, 1=enable
<25>     LTGL2I   R/W      0           1         Enable LTGL2I  tracing
                                                   0=disable, 1=enable
<24>     WBIL2I   R/W      0           1         Enable WBIL2I  tracing
                                                   0=disable, 1=enable
<23>     FAS64    R/W      0           1         Enable FAS64   tracing
                                                   0=disable, 1=enable
<22>     FAS32    R/W      0           1         Enable FAS32   tracing
                                                   0=disable, 1=enable
<21>     STTIL1   R/W      0           1         Enable STTIL1  tracing
                                                   0=disable, 1=enable
<20>     STFIL1   R/W      0           1         Enable STFIL1  tracing
                                                   0=disable, 1=enable
<19>     STC      R/W      0           1         Enable STC     tracing
                                                   0=disable, 1=enable
<18>     STP      R/W      0           1         Enable STP     tracing
                                                   0=disable, 1=enable
<17>     STT      R/W      0           1         Enable STT     tracing
                                                   0=disable, 1=enable
<16>     STF      R/W      0           1         Enable STF     tracing
                                                   0=disable, 1=enable
<15>     IOBDMA   R/W      0           1         Enable IOBDMA  tracing
                                                   0=disable, 1=enable
<14:10>  NS       R/W      0           0         Must be written to zero
<9>      PSL1     R/W      0           1         Enable PSL1    tracing
                                                   0=disable, 1=enable
<8>      LDD      R/W      0           1         Enable LDD     tracing
                                                   0=disable, 1=enable
<7:6>    NS       R/W      0           0         Must be written to zero
<5>      DWB      R/W      0           1         Enable DWB     tracing
                                                   0=disable, 1=enable
<4>      RPL2     R/W      0           1         Enable RPL2    tracing
                                                   0=disable, 1=enable
<3>      PL2      R/W      0           1         Enable PL2     tracing
                                                   0=disable, 1=enable
<2>      LDI      R/W      0           1         Enable LDI     tracing
                                                   0=disable, 1=enable
<1>      LDT      R/W      0           1         Enable LDT     tracing
                                                   0=disable, 1=enable
<0>      NOP      R/W      0           1         Enable NOP     tracing
                                                   0=disable, 1=enable

Notes:
Note that the trace buffer does not do proper IOBDMA address compares.  Thus, if IOBDMA is set, then
the address compare must be disabled (i.e. TRA_TRIG0_ADR_MSK set to zero) to guarantee that IOBDMAs
are recognized as triggers.
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_TRIG0_SID = Trace Buffer Filter SourceId Mask
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_TRIG0_SID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  NS       RAZ      0           0         RESERVED
<31:20>  NS       R/W      0           0         Must be written to zero
<19>     DWB      R/W      0           0         Enable triggering on requests from the IOB DWB engine
<18>     IOBREQ   R/W      0           0         Enable triggering on requests from FPA,TIM,DFA,
                                                 PCI,ZIP,SSO, and PKO (writes)
<17>     PKO      R/W      0           0         Enable triggering on read requests from PKO
<16>     PKI      R/W      0           0         Enable triggering on write requests from PIP/IPD
<15:8>   NS       R/W      0           0         Must be written to zero
<7:0>    PP       R/W      0           0         Enable triggering from PP[N*4 + @] with
						 matching SourceID
                                                   0=disable, 1=enable per bit N where 0<=N<=7
						   TRA0 can trigger from PP's 0, 4, ... 28
						   TRA1 can trigger from PP's 1, 5, ... 29
						   TRA2 can trigger from PP's 2, 6, ... 30
						   TRA3 can trigger from PP's 3, 7, ... 31
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_TRIG0_DID = Trace Buffer Filter DestinationId Mask
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_TRIG0_DID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  NS       RAZ      0           0         RESERVED
<31>     ILLEGAL5 R/W      0           1         Illegal destinations
<30>     FAU      R/W      0           1         Enable triggering on FAU accesses
<29:28>  ILLEGAL4 R/W      0           0x3       Illegal destinations
<27>     DPI      R/W      0           1         Enable triggering on DPI accesses
                                                 (DPI NCB CSRs)
<26:15>  ILLEGAL  R/W      0           0xFFF     Illegal destinations
<14>     RAD      R/W      0           1         Enable triggering on RAD accesses
                                                 (doorbells)
<13>     USB0     R/W      0           1         Enable triggering on USB0 accesses
                                                 (UAHC0 EHCI and OHCI NCB CSRs)
<12>     POW      R/W      0           1         Enable triggering on requests to SSO
                                                 (get work, add work, status/memory/index
                                                 loads, ALLOC_WE loads, CSR's)
<11>     ILLEGAL2 R/W      0           1         Illegal destination
<10>     PKO      R/W      0           1         Enable triggering on PKO accesses
                                                 (doorbells)
<9>      IPD      R/W      0           1         Enable triggering on IPD CSR accesses
                                                 (IPD CSRs)
<8>      RNG      R/W      0           1         Enable triggering on requests to RNG
                                                 (loads/IOBDMA's are legal)
<7>      ZIP      R/W      0           1         Enable triggering on requests to ZIP
                                                 (doorbell stores are legal)
<6>      DFA      R/W      0           1         Enable triggering on requests to DFA
                                                 (CSR's and operations are legal)
<5>      FPA      R/W      0           1         Enable triggering on requests to FPA
                                                 (alloc's (loads/IOBDMA's), frees (stores) are legal)
<4>      KEY      R/W      0           1         Enable triggering on requests to KEY memory
                                                 (loads/IOBDMA's/stores are legal)
<3>      SLI      R/W      0           1         Enable triggering on requests to SLI and RSL-type
                                                 CSR's (RSL CSR's, PCI/sRIO bus operations, SLI
                                                 CSR's)
<2:1>    ILLEGAL3 R/W      0           0x3       Illegal destinations
<0>      MIO      R/W      0           1         Enable triggering on MIO accesses
                                                 (CIU and GPIO CSR's, boot bus accesses)
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_TRIG0_ADR_ADR = Trace Buffer Filter Address Address
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_TRIG0_ADR_ADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:38>  NS       RAZ      0           0         RESERVED
<37:0>   ADR      R/W      0           NS        Unmasked Address
                                                   The combination of TRA_TRIG0_ADR_ADR and
                                                   TRA_TRIG0_ADR_MSK is a masked address to
                                                   enable tracing of only those commands whose
                                                   masked address matches
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_TRIG0_ADR_MSK = Trace Buffer Filter Address Mask
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_TRIG0_ADR_MSK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:38>  NS       RAZ      0           0         RESERVED
<37:0>   ADR      R/W      0           0         Address Mask
                                                   The combination of TRA_TRIG0_ADR_ADR and
                                                   TRA_TRIG0_ADR_MSK is a masked address to
                                                   enable tracing of only those commands whose
                                                   masked address matches.  When a mask bit is not
                                                   set, the corresponding address bits are assumed
                                                   to match.  Also, note that IOBDMAs do not have
                                                   proper addresses, so when TRA_TRIG0_CMD[IOBDMA]
                                                   is set, TRA_FILT_TRIG0_MSK must be zero to
                                                   guarantee that any IOBDMAs are recognized as
                                                   triggers.
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_TRIG1_CMD = Trace Buffer Filter Command Mask
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_TRIG1_CMD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63>     SAA64    R/W      0           1         Enable SAA64 tracing
                                                   0=disable, 1=enable
<62>     SAA32    R/W      0           1         Enable SAA32 tracing
                                                   0=disable, 1=enable
<61:60>  NS       R/W      0           0         Must be written to zero
<59>     FAA64    R/W      0           1         Enable FAA64 tracing
                                                   0=disable, 1=enable
<58>     FAA32    R/W      0           1         Enable FAA32 tracing
                                                   0=disable, 1=enable
<57:56>  NS       R/W      0           0         Must be written to zero
<55>     DECR64   R/W      0           1         Enable DECR64  tracing
                                                   0=disable, 1=enable
<54>     DECR32   R/W      0           1         Enable DECR32  tracing
                                                   0=disable, 1=enable
<53>     DECR16   R/W      0           1         Enable DECR16  tracing
                                                   0=disable, 1=enable
<52>     DECR8    R/W      0           1         Enable DECR8   tracing
                                                   0=disable, 1=enable
<51>     INCR64   R/W      0           1         Enable INCR64  tracing
                                                   0=disable, 1=enable
<50>     INCR32   R/W      0           1         Enable INCR32  tracing
                                                   0=disable, 1=enable
<49>     INCR16   R/W      0           1         Enable INCR16  tracing
                                                   0=disable, 1=enable
<48>     INCR8    R/W      0           1         Enable INCR8   tracing
                                                   0=disable, 1=enable
<47>     CLR64    R/W      0           1         Enable CLR64   tracing
                                                   0=disable, 1=enable
<46>     CLR32    R/W      0           1         Enable CLR32   tracing
                                                   0=disable, 1=enable
<45>     CLR16    R/W      0           1         Enable CLR16   tracing
                                                   0=disable, 1=enable
<44>     CLR8     R/W      0           1         Enable CLR8    tracing
                                                   0=disable, 1=enable
<43>     SET64    R/W      0           1         Enable SET64   tracing
                                                   0=disable, 1=enable
<42>     SET32    R/W      0           1         Enable SET32   tracing
                                                   0=disable, 1=enable
<41>     SET16    R/W      0           1         Enable SET16   tracing
                                                   0=disable, 1=enable
<40>     SET8     R/W      0           1         Enable SET8    tracing
                                                   0=disable, 1=enable
<39>     IOBST64  R/W      0           1         Enable IOBST64 tracing
                                                   0=disable, 1=enable
<38>     IOBST32  R/W      0           1         Enable IOBST32 tracing
                                                   0=disable, 1=enable
<37>     IOBST16  R/W      0           1         Enable IOBST16 tracing
                                                   0=disable, 1=enable
<36>     IOBST8   R/W      0           1         Enable IOBST8  tracing
                                                   0=disable, 1=enable
<35>     IOBLD64  R/W      0           1         Enable IOBLD64 tracing
                                                   0=disable, 1=enable
<34>     IOBLD32  R/W      0           1         Enable IOBLD32 tracing
                                                   0=disable, 1=enable
<33>     IOBLD16  R/W      0           1         Enable IOBLD16 tracing
                                                   0=disable, 1=enable
<32>     IOBLD8   R/W      0           1         Enable IOBLD8  tracing
                                                   0=disable, 1=enable
<31>     LCKL2    R/W      0           1         Enable LCKL2   tracing
                                                   0=disable, 1=enable
<30>     WBL2     R/W      0           1         Enable WBL2    tracing
                                                   0=disable, 1=enable
<29>     WBIL2    R/W      0           1         Enable WBIL2   tracing
                                                   0=disable, 1=enable
<28>     INVL2    R/W      0           1         Enable INVL2   tracing
                                                   0=disable, 1=enable
<27>     NS       R/W      0           0         Must be written to zero
<26>     STGL2I   R/W      0           1         Enable STGL2I  tracing
                                                   0=disable, 1=enable
<25>     LTGL2I   R/W      0           1         Enable LTGL2I  tracing
                                                   0=disable, 1=enable
<24>     WBIL2I   R/W      0           1         Enable WBIL2I  tracing
                                                   0=disable, 1=enable
<23>     FAS64    R/W      0           1         Enable FAS64   tracing
                                                   0=disable, 1=enable
<22>     FAS32    R/W      0           1         Enable FAS32   tracing
                                                   0=disable, 1=enable
<21>     STTIL1   R/W      0           1         Enable STTIL1  tracing
                                                   0=disable, 1=enable
<20>     STFIL1   R/W      0           1         Enable STFIL1  tracing
                                                   0=disable, 1=enable
<19>     STC      R/W      0           1         Enable STC     tracing
                                                   0=disable, 1=enable
<18>     STP      R/W      0           1         Enable STP     tracing
                                                   0=disable, 1=enable
<17>     STT      R/W      0           1         Enable STT     tracing
                                                   0=disable, 1=enable
<16>     STF      R/W      0           1         Enable STF     tracing
                                                   0=disable, 1=enable
<15>     IOBDMA   R/W      0           1         Enable IOBDMA  tracing
                                                   0=disable, 1=enable
<14:10>  NS       R/W      0           0         Must be written to zero
<9>      PSL1     R/W      0           1         Enable PSL1    tracing
                                                   0=disable, 1=enable
<8>      LDD      R/W      0           1         Enable LDD     tracing
                                                   0=disable, 1=enable
<7:6>    NS       R/W      0           0         Must be written to zero
<5>      DWB      R/W      0           1         Enable DWB     tracing
                                                   0=disable, 1=enable
<4>      RPL2     R/W      0           1         Enable RPL2    tracing
                                                   0=disable, 1=enable
<3>      PL2      R/W      0           1         Enable PL2     tracing
                                                   0=disable, 1=enable
<2>      LDI      R/W      0           1         Enable LDI     tracing
                                                   0=disable, 1=enable
<1>      LDT      R/W      0           1         Enable LDT     tracing
                                                   0=disable, 1=enable
<0>      NOP      R/W      0           1         Enable NOP     tracing
                                                   0=disable, 1=enable

Notes:
Note that the trace buffer does not do proper IOBDMA address compares.  Thus, if IOBDMA is set, then
the address compare must be disabled (i.e. TRA_TRIG1_ADR_MSK set to zero) to guarantee that IOBDMAs
are recognized as triggers.
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_TRIG1_SID = Trace Buffer Filter SourceId Mask
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_TRIG1_SID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  NS       RAZ      0           0         RESERVED
<31:20>  NS       R/W      0           0         Must be written to zero
<19>     DWB      R/W      0           0         Enable triggering on requests from the IOB DWB engine
<18>     IOBREQ   R/W      0           0         Enable triggering on requests from FPA,TIM,DFA,
                                                 PCI,ZIP,SSO, and PKO (writes)
<17>     PKO      R/W      0           0         Enable triggering on read requests from PKO
<16>     PKI      R/W      0           0         Enable triggering on write requests from PIP/IPD
<15:8>   NS       R/W      0           0         Must be written to zero
<7:0>    PP       R/W      0           0         Enable triggering from PP[N*4 + @] with
						 matching SourceID
                                                   0=disable, 1=enable per bit N where 0<=N<=7
						   TRA0 can trigger from PP's 0, 4, ... 28
						   TRA1 can trigger from PP's 1, 5, ... 29
						   TRA2 can trigger from PP's 2, 6, ... 30
						   TRA3 can trigger from PP's 3, 7, ... 31
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_TRIG1_DID = Trace Buffer Filter DestinationId Mask
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_TRIG1_DID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  NS       RAZ      0           0         RESERVED
<31>     ILLEGAL5 R/W      0           1         Illegal destinations
<30>     FAU      R/W      0           1         Enable triggering on FAU accesses
<29:28>  ILLEGAL4 R/W      0           0x3       Illegal destinations
<27>     DPI      R/W      0           1         Enable triggering on DPI accesses
                                                 (DPI NCB CSRs)
<26:15>  ILLEGAL  R/W      0           0xFFF     Illegal destinations
<14>     RAD      R/W      0           1         Enable triggering on RAD accesses
                                                 (doorbells)
<13>     USB0     R/W      0           1         Enable triggering on USB0 accesses
                                                 (UAHC0 EHCI and OHCI NCB CSRs)
<12>     POW      R/W      0           1         Enable triggering on requests to SSO
                                                 (get work, add work, status/memory/index
                                                 loads, ALLOC_WE loads, CSR's)
<11>     ILLEGAL2 R/W      0           1         Illegal destination
<10>     PKO      R/W      0           1         Enable triggering on PKO accesses
                                                 (doorbells)
<9>      IPD      R/W      0           1         Enable triggering on IPD CSR accesses
                                                 (IPD CSRs)
<8>      RNG      R/W      0           1         Enable triggering on requests to RNG
                                                 (loads/IOBDMA's are legal)
<7>      ZIP      R/W      0           1         Enable triggering on requests to ZIP
                                                 (doorbell stores are legal)
<6>      DFA      R/W      0           1         Enable triggering on requests to DFA
                                                 (CSR's and operations are legal)
<5>      FPA      R/W      0           1         Enable triggering on requests to FPA
                                                 (alloc's (loads/IOBDMA's), frees (stores) are legal)
<4>      KEY      R/W      0           1         Enable triggering on requests to KEY memory
                                                 (loads/IOBDMA's/stores are legal)
<3>      SLI      R/W      0           1         Enable triggering on requests to SLI and RSL-type
                                                 CSR's (RSL CSR's, PCI/sRIO bus operations, SLI
                                                 CSR's)
<2:1>    ILLEGAL3 R/W      0           0x3       Illegal destinations
<0>      MIO      R/W      0           1         Enable triggering on MIO accesses
                                                 (CIU and GPIO CSR's, boot bus accesses)
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_TRIG1_ADR_ADR = Trace Buffer Filter Address Address
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_TRIG1_ADR_ADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:38>  NS       RAZ      0           0         RESERVED
<37:0>   ADR      R/W      0           NS        Unmasked Address
                                                   The combination of TRA_TRIG1_ADR_ADR and
                                                   TRA_TRIG1_ADR_MSK is a masked address to
                                                   enable tracing of only those commands whose
                                                   masked address matches
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_TRIG1_ADR_MSK = Trace Buffer Filter Address Mask
 *
 * Description:
 *

     ==============================================================
     TRA(0..3)_TRIG1_ADR_MSK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:38>  NS       RAZ      0           0         RESERVED
<37:0>   ADR      R/W      0           0         Address Mask
                                                   The combination of TRA_TRIG1_ADR_ADR and
                                                   TRA_TRIG1_ADR_MSK is a masked address to
                                                   enable tracing of only those commands whose
                                                   masked address matches.  When a mask bit is not
                                                   set, the corresponding address bits are assumed
                                                   to match.  Also, note that IOBDMAs do not have
                                                   proper addresses, so when TRA_TRIG1_CMD[IOBDMA]
                                                   is set, TRA_FILT_TRIG1_MSK must be zero to
                                                   guarantee that any IOBDMAs are recognized as
                                                   triggers.
----------------------------------------------------------------------------------------------------
===


 *
 *                  HCCAPBASE = Host Controller BASE Capability Register
 *
 *
 *

     ==============================================================
     UAHC(0)_EHCI_HCCAPBASE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:16> HCIVERSION       RO      0x0100       0x0100    Host Controller Interface Version Number                                   |
<15:8>  NS               RO      0x00         0x00      Reserved                                                                   |
<7:0>   CAPLENGTH        RO      0x10         0x10      Capabitlity Registers Length                                               |
----------------------------------------------------------------------------------------------------
===


*
*
* HCSPARAMS = Host Controller Structural Parameters
* This is a set of fields that are structural parameters: Number of downstream ports, etc.
*

     ==============================================================
     UAHC(0)_EHCI_HCSPARAMS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:24> NS          RO     0       0        These bits are reserved and should be set to zero.                                             |
<23:20> DPN         RO     0       0        Debug Port Number. Optional. This register identifies which of the host controller ports       |
                                            is the debug port. The value is the port number (one-based) of the debug port. A nonzero       |
                                            value in this field indicates the presence of a debug port. The value in this register         |
                                            must not be greater than N_PORTS (see below).                                                  |
<19:17> NS          RO     0       0        These bits are reserved and should be set to zero.                                             |
<16:16> P_INDICATOR RO     0       0        Port Indicator. This bit indicates whether the ports support port                              |
                                            indicator control. When this bit is a one, the port status and control 			   |
                                            registers include a read/writeable field for controlling the state of 			   |
                                            the port indicator.  									   |
<15:12> N_CC        RO     1       1        Number of Companion Controller. This field indicates the number of 				   |
                                            companion controllers associated with this USB 2.0 host controller. 			   |
                                            A zero in this field indicates there are no companion host controllers.                        |
                                            Port-ownership hand-off is not supported. Only high-speed devices are 			   |
                                            supported on the host controller root ports. 						   |
                                            A value larger than zero in this field indicates there are companion USB 1.1 host 		   |
                                            controller(s). Port-ownership hand-offs are supported. High, Full-and Low-speed 		   |
                                            devices are supported on the host controller root ports. 					   |
<11:8>  N_PCC       RO     2       2        Number of Ports per Companion Controller (N_PCC). This field indicates			   |
                                            the number of ports supported per companion host controller. It is used to 			   |
                                            indicate the port routing  configuration to system software. 				   |
<7>     PRR         RO     0       0        Port Routing Rules. This field indicates the method used by this implementation for            |
                                            how all ports are mapped to companion controllers. The value of this field has 		   |
                                            the following interpretation: 								   |
                                            0 The first N_PCC ports are routed to the lowest numbered function                             |
                                              companion host controller, the next N_PCC port are routed to the next 			   |
                                              lowest function companion controller, and so on. 						   |
                                            1 The port routing is explicitly enumerated by the first N_PORTS elements			   |
                                              of the HCSP-PORTROUTE array. 								   |
<6:5>  NS          RO       0      0       These bits are reserved and should be set to zero. 						   |
<4>    PPC         RO       0      0       Port Power Control. This field indicates whether the host controller 			   |
                                           implementation includes port power control. A one in this bit indicates the ports have 	   |
                                           port power switches. A zero in this bit indicates the port do not have port power 		   |
                                           switches. The value of this field affects the functionality of the Port Power field 		   |
                                           in each port status and control register (see Section 2.3.8). 				   |
<3:0>  N_PORTS     RO       2      2       This field specifies the number of physical downstream ports implemented 			   |
                                           on this host controller. The value of this field determines how many port registers are         |
                                           addressable in the Operational Register Space (see Table 2-8). Valid values are in the          |
                                           range of 1H to FH. A zero in this field is undefined.                                           |
----------------------------------------------------------------------------------------------------
===


*
* HCCPARAMS = Host Controller Capability Parameters
* Multiple Mode control (time-base bit functionality), addressing capability
*
*

     ==============================================================
     UAHC(0)_EHCI_HCCPARAMS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:16> NS        RO   0x0000 0x0000 These bits are reserved and should be set to zero.                                            |
<15:8>  EECP      RO   0xa0   0xa0   EHCI Extended Capabilities Pointer. Default = Implementation Dependent. 			   |
                                     This optional field indicates the existence of a capabilities list. A value of 00h indicates  |
                                     no extended capabilities are implemented. A non-zero value in this register indicates the 	   |
                                     offset in PCI configuration space of the first EHCI extended capability. The pointer value    |
                                     must be 40h or greater if implemented to maintain the consistency of the PCI header 	   |
                                     defined for this class of device. 								   |
<7:4>  IST        RO    0x2    0x2      Isochronous Scheduling Threshold. Default = implementation dependent. This field           |
                                     indicates, relative to the current position of the executing host controller, where software  |
                                     can reliably update the isochronous schedule. When bit [7] is zero, the value of the least    |
                                     significant 3 bits indicates the number of micro-frames a host controller can hold a set of   |
                                     isochronous data structures (one or more) before flushing the state. When bit [7] is a 	   |
                                     one, then host software assumes the host controller may cache an isochronous data             |
                                     structure for an entire frame. Refer to Section 4.7.2.1 for details on how software uses 	   |
                                     this information for scheduling isochronous transfers. 					   |
<3>    NS        RO     0     0      Reserved. This bit is reserved and should be set to zero.  				   |
<2>    ASPC      RO     0     0      Asynchronous Schedule Park Capability. Default = Implementation dependent. If this 	   |
                                     bit is set to a one, then the host controller supports the park feature for high-speed 	   |
                                     queue heads in the Asynchronous Schedule. The feature can be disabled or enabled 		   |
                                     and set to a specific level by using the Asynchronous Schedule Park Mode Enable and 	   |
                                     Asynchronous Schedule Park Mode Count fields in the USBCMD register. 			   |
<1>    PFLF     RO      0     0      Programmable Frame List Flag. Default = Implementation dependent. If this bit is set 	   |
                                     to a zero, then system software must use a frame list length of 1024 elements with this 	   |
                                     host controller. The USBCMD register Frame List Size field is a read-only register and 	   |
                                     should be set to zero.                                                                        |
                                     If set to a one, then system software can specify and use a smaller frame list and 	   |
                                     configure the host controller via the USBCMD register Frame List Size field. The frame 	   |
                                     list must always be aligned on a 4K page boundary. This requirement ensures that the 	   |
                                     frame list is always physically contiguous. 						   |
<0>   AC64      RO     1      1      64-bit Addressing Capability1 . This field documents the addressing range capability of 	   |
                                     this implementation. The value of this field determines whether software should use the 	   |
                                     data structures defined in Section 3 (32-bit) or those defined in Appendix B (64-bit). 	   |
                                     Values for this field have the following interpretation: 					   |
                                     0: data structures using 32-bit address memory pointers 					   |
                                     1: data structures using 64-bit address memory pointers 					   |
----------------------------------------------------------------------------------------------------
===


*
*
* USBCMD = USB Command Register
* The Command Register indicates the command to be executed by the serial bus host controller. Writing to the register causes a command to be executed.
*
*

     ==============================================================
     UAHC(0)_EHCI_USBCMD Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:24> NS        RO   0    0     These bits are reserved and should be set to zero.                                               |
<23:16> ITC       R/W  0x08 0x08  Interrupt Threshold Control. This field is used by system software 				   |
                                  to select the maximum rate at which the host controller will issue interrupts. The only 	   |
                                  valid values are defined below. If software writes an invalid value to this register, the 	   |
                                  results are undefined. Value Maximum Interrupt Interval 					   |
                                    00h Reserved 										   |
                                    01h 1 micro-frame 										   |
                                    02h 2 micro-frames 										   |
                                    04h 4 micro-frames 										   |
                                    08h 8 micro-frames (default, equates to 1 ms) 						   |
                                    10h 16 micro-frames (2 ms) 									   |
                                    20h 32 micro-frames (4 ms) 									   |
                                    40h 64 micro-frames (8 ms)                                                                     |
<15:12> NS       RO    0   0     These bits are reserved and should be set to zero. 						   |
<11>    ASPM_EN  RO    0   0     Asynchronous Schedule Park Mode Enable.							   |
<10>    NS       RO    0   0     This bit is reserved and should be set to zero. 						   |
<9:8>   ASPMC    RO    0   0     Asynchronous Schedule Park Mode Count.								   |
<7>     LHCR     R/W   0   0     Light Host Controller Reset									   |
<6>     IAA_DB   R/W   0   0     Interrupt on Async Advance Doorbell.This bit is used as a doorbell by 				   |
                                 software to tell the host controller to issue an interrupt the next time it advances 		   |
                                 asynchronous schedule. Software must write a 1 to this bit to ring the doorbell. 		   |
                                 When the host controller has evicted all appropriate cached schedule state, it sets the 	   |
                                 Interrupt on Async Advance status bit in the USBSTS register. If the Interrupt on Async 	   |
                                 Advance Enable bit in the USBINTR register is a one then the host controller will assert 	   |
                                 an interrupt at the next interrupt threshold.                                                     |
<5>    AS_EN    R/W    0   0     Asynchronous Schedule Enable .This bit controls whether the host 				   |
                                 controller skips processing the Asynchronous Schedule. Values mean: 				   |
                                   0: Do not process the Asynchronous Schedule 							   |
                                   1: Use the ASYNCLISTADDR register to access the Asynchronous Schedule. 			   |
<4>    PS_EN    R/W    0   0     Periodic Schedule Enable. This bit controls whether the host 					   |
                                 controller skips processing the Periodic Schedule. Values mean: 				   |
                                     0: Do not process the Periodic Schedule 							   |
                                     1: Use the PERIODICLISTBASE register to access the Periodic Schedule. 			   |
<3:2>  FLS      RO     0   0     Frame List Size. This field is R/W only if Programmable 					   |
                                 Frame List Flag in the HCCPARAMS registers is set to a one. This field specifies the 		   |
                                 size of the frame list. The size the frame list controls which bits in the Frame Index 	   |
                                 Register should be used for the Frame List Current index. Values mean:                            |
                                      00b: 1024 elements (4096 bytes) Default value 						   |
                                      01b: 512 elements  (2048 bytes) 								   |
                                      10b: 256 elements  (1024 bytes) - for resource-constrained environments 			   |
                                      11b: Reserved 										   |
<1>   HCRESET  R/W   0     0    Host Controller Reset (HCRESET). This control bit is used by software to reset 			   |
                                the host controller. The effects of this on Root Hub registers are similar to a Chip 		   |
                                Hardware Reset. When software writes a one to this bit, the Host Controller resets		   |
                                its internal pipelines, timers, counters, state machines, etc. to their initial 		   |
                                value. Any transaction currently in progress on USB is immediately terminated.			   |
                                A USB reset is not driven on downstream ports. 							   |
                                This bit is set to zero by the Host Controller when the reset process is complete. Software can not|
                                terminate the reset process early by writing zero to this register.                                |
                                Software should not set this bit to a one when the HCHalted bit in the USBSTS register is a zero.  |
                                Attempting to reset an activtely running host controller will result in undefined behavior.        |
<0>   RS       R/W   0     1    Run/Stop (RS).											   |
                                  1=Run. 0=Stop.                                                                                   |
                                When set to a 1, the Host Controller proceeds with execution of the schedule. 			   |
                                The Host Controller continues execution as long as this bit is set to a 1. 			   |
                                When this bit is set to 0, the Host Controller completes the current and any 			   |
                                actively pipelined transactions on the USB and then halts. The Host 				   |
                                Controller must halt within 16 micro-frames after software clears the Run bit. The HC 		   |
                                Halted bit in the status register indicates when the Host Controller has finished its 		   |
                                pending pipelined transactions and has entered the stopped state. Software must not 		   |
                                write a one to this field unless the host controller is in the Halted state (i.e. HCHalted in 	   |
                                the USBSTS register is a one). Doing so will yield undefined results. 				   |
----------------------------------------------------------------------------------------------------
===




*
* USBSTS = USB Status Register
* This register indicates pending interrupts and various states of the Host Controller. The status resulting from
* a transaction on the serial bus is not indicated in this register. Software sets a bit to 0 in this register by
* writing a 1 to it.
*
*

     ==============================================================
     UAHC(0)_EHCI_USBSTS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:16>  NS     RO     0    0    Reserved. These bits are reserved and should be set to zero.                                      |
<15>     ASS    RO     0    0    Asynchronous Schedule Status. The bit reports the current real 				   |
                                 status of the Asynchronous Schedule. If this bit is a zero then the status of the 		   |
                                 Asynchronous Schedule is disabled. If this bit is a one then the status of the 		   |
                                 Asynchronous Schedule is enabled. The Host Controller is not required to immediately 		   |
                                 disable or enable the Asynchronous Schedule when software transitions the 			   |
                                 Asynchronous Schedule Enable bit in the USBCMD register. When this bit and the 		   |
                                 Asynchronous Schedule Enable bit are the same value, the Asynchronous Schedule is 		   |
                                 either enabled (1) or disabled (0). 								   |
<14>    PSS     RO     0    0    Periodic Schedule Status. The bit reports the current real status of 				   |
                                 the Periodic Schedule. If this bit is a zero then the status of the Periodic			   |
                                 Schedule is disabled. If this bit is a one then the status of the Periodic Schedule		   |
                                 is enabled. The Host Controller is not required to immediately disable or enable the              |
                                 Periodic Schedule when software transitions the Periodic Schedule Enable bit in 		   |
                                 the USBCMD register. When this bit and the Periodic Schedule Enable bit are the 		   |
                                 same value, the Periodic Schedule is either enabled (1) or disabled (0). 			   |
<13>   RECLM    RO     0    0    Reclamation.This is a read-only status bit, which is used to detect an 			   |
                                 empty asynchronous schedule. 									   |
<12>   HCHTD    RO     1    0    HCHalted. This bit is a zero whenever the Run/Stop bit is a one. The 				   |
                                 Host Controller sets this bit to one after it has stopped executing as a result of the 	   |
                                 Run/Stop bit being set to 0, either by software or by the Host Controller hardware (e.g. 	   |
                                 internal error). 										   |
<11:6> NS       RO     0   0     These bits are reserved and should be set to zero. 						   |
<5>    IOAA     R/W1C   0   0    Interrupt on Async Advance. System software can force the host 				   |
                                 controller to issue an interrupt the next time the host controller advances the                   |
                                 asynchronous schedule by writing a one to the Interrupt on Async Advance Doorbell bit 		   |
                                 in the USBCMD register. This status bit indicates the assertion of that interrupt source. 	   |
<4>    HSYSERR  R/W1C   0   0     Host System Error. The Host Controller sets this bit to 1 when a serious error 		   |
                                 occurs during a host system access involving the Host Controller module. 			   |
<3>    FLRO     R/W1C   0   0     Frame List Rollover. The Host Controller sets this bit to a one when the 			   |
                                 Frame List Index rolls over from its maximum value to zero. The exact value at 		   |
                                 which the rollover occurs depends on the frame list size. For example, if 			   |
                                 the frame list size (as programmed in the Frame List Size field of the USBCMD register) 	   |
                                 is 1024, the Frame Index Register rolls over every time FRINDEX[13] toggles. Similarly, 	   |
                                 if the size is 512, the Host Controller sets this bit to a one every time FRINDEX[12] 		   |
                                 toggles. 											   |
<2>    PCD      R/W1C   0   0     Port Change Detect. The Host Controller sets this bit to a one when any port                     |
                                 for which the Port Owner bit is set to zero (see Section 2.3.9) has a change bit transition 	   |
                                 from a zero to a one or a Force Port Resume bit transition from a zero to a one as a 		   |
                                 result of a J-K transition detected on a suspended port. This bit will also be set as a 	   |
                                 result of the Connect Status Change being set to a one after system software has 		   |
                                 relinquished ownership of a connected port by writing a one to a port's Port Owner bit. 	   |
<1> USBERRINT  R/W1C   0    0    USB Error Interrupt. The Host Controller sets this bit to 1 when completion of a USB 		   |
                                transaction results in an error condition (e.g., error counter underflow). If the TD on 	   |
                                which the error interrupt occurred also had its IOC bit set, both this bit and USBINT 		   |
                                bit are set. 											   |
<0> USBINT     R/W1C   0    0    USB Interrupt. The Host Controller sets this bit to 1 on the completion of a USB 		   |
                                transaction, which results in the retirement of a Transfer Descriptor that had its 		   |
                                IOC bit set. The Host Controller also sets this bit to 1 when a short packet is                    |
                                detected (actual number of bytes received was less than the expected number of bytes).             |
----------------------------------------------------------------------------------------------------
===



*
*
*  USBINTR = USB Interrupt Enable Register
*  This register enables and disables reporting of the corresponding interrupt to the software. When a bit is set
*  and the corresponding interrupt is active, an interrupt is generated to the host. Interrupt sources that are
*  disabled in this register still appear in the USBSTS to allow the software to poll for events.
*  Each interrupt enable bit description indicates whether it is dependent on the interrupt threshold mechanism.
*  Note: for all enable register bits, 1= Enabled, 0= Disabled
*

     ==============================================================
     UAHC(0)_EHCI_USBINTR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:6> NS      RO     0     0   These bits are reserved and should be zero.                                                        |
<5>    IOAA_EN R/W    0     NS  Interrupt on Async Advance Enable When this bit is a one, and the Interrupt on 			   |
                                Async Advance bit in the USBSTS register is a one, the host controller will issue an 		   |
                                interrupt at the next interrupt threshold. The interrupt is acknowledged by software 		   |
                                clearing the Interrupt on Async Advance bit. 							   |
<4>   HSERR_EN R/W    0     NS  Host System Error Enable When this bit is a one, and the Host System 				   |
                                Error Status bit in the USBSTS register is a one, the host controller will issue an  		   |
                                interrupt. The interrupt is acknowledged by software clearing the Host System Error bit.  	   |
<3>   FLRO_EN  R/W    0     NS  Frame List Rollover Enable. When this bit is a one, and the Frame List 				   |
                                Rollover bit in the USBSTS register is a one, the host controller will issue an			   |
                                interrupt. The interrupt is acknowledged by software clearing the Frame List Rollover bit. 	   |
<2>   PCI_EN   R/W    0     NS  Port Change Interrupt Enable. When this bit is a one, and the Port Change Detect bit in 	   |
                                the USBSTS register is a one, the host controller will issue an interrupt.                         |
                                The interrupt is acknowledged by software clearing the Port Change Detect bit. 			   |
<1> USBERRINT_EN R/W   0    NS  USB Error Interrupt Enable. When this bit is a one, and the USBERRINT 				   |
                                bit in the USBSTS register is a one, the host controller will issue an interrupt at the next 	   |
                                interrupt threshold. The interrupt is acknowledged by software clearing the USBERRINT bit. 	   |
<0> USBINT_EN  R/W    0     NS  USB Interrupt Enable. When this bit is a one, and the USBINT bit in the USBSTS register 	   |
                                is a one, the host controller will issue an interrupt at the next interrupt threshold. 		   |
                                The interrupt is acknowledged by software clearing the USBINT bit. 				   |
----------------------------------------------------------------------------------------------------
===



*
* FRINDEX = Frame Index Register
* This register is used by the host controller to index into the periodic frame list. The register updates every
* 125 microseconds (once each micro-frame). Bits [N:3] are used to select a particular entry in the Periodic
* Frame List during periodic schedule execution. The number of bits used for the index depends on the size of
* the frame list as set by system software in the Frame List Size field in the USBCMD register.
* This register cannot be written unless the Host Controller is in the Halted state as indicated by the
* HCHalted bit. A write to this register while the Run/Stop bit is set to a one (USBCMD register) produces
* undefined results. Writes to this register also affect the SOF value.
*

     ==============================================================
     UAHC(0)_EHCI_FRINDEX Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:14> NS    RO       0       0        Reserved field.                                                                                   |
<13:0>  FI    R/W      0       NS       Frame Index. The value in this register increments at the end of each time frame (e.g. 		  |
                                        micro-frame). Bits [N:3] are used for the Frame List current index. This means that each 	  |
                                        location of the frame list is accessed 8 times (frames or micro-frames) before moving to 	  |
                                        the next index. The following illustrates values of N based on the value of the Frame List 	  |
                                        Size field in the USBCMD register. 								  |
                                        USBCMD[Frame List Size] Number Elements N 							  |
                                           00b (1024) 12 										  |
                                           01b (512) 11 									          |
                                           10b (256) 10 									          |
                                           11b Reserved 								                  |
----------------------------------------------------------------------------------------------------
===



*
*  CTRLDSSEGMENT = Control Data Structure Segment Register
*
* This 32-bit register corresponds to the most significant address bits [63:32] for all EHCI data structures. If
* the 64-bit Addressing Capability field in HCCPARAMS is a zero, then this register is not used. Software
* cannot write to it and a read from this register will return zeros.
*
* If the 64-bit Addressing Capability field in HCCPARAMS is a one, then this register is used with the link
* pointers to construct 64-bit addresses to EHCI control data structures. This register is concatenated with the
* link pointer from either the PERIODICLISTBASE, ASYNCLISTADDR, or any control data structure link
* field to construct a 64-bit address.
*
* This register allows the host software to locate all control data structures within the same 4 Gigabyte
* memory segment.
*

     ==============================================================
     UAHC(0)_EHCI_CTRLDSSEGMENT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  CTRLDSSEG R/W      0           NS       Control Data Strucute Semgent Address Bit [63:32]                          |
----------------------------------------------------------------------------------------------------
===




*
*
* PERIODICLISTBASE = Periodic Frame List Base Address Register
*
* This 32-bit register contains the beginning address of the Periodic Frame List in the system memory. If the
* host controller is in 64-bit mode (as indicated by a one in the 64-bit Addressing Capability field in the
* HCCSPARAMS register), then the most significant 32 bits of every control data structure address comes
* from the CTRLDSSEGMENT register (see Section 2.3.5). System software loads this register prior to
* starting the schedule execution by the Host Controller (see 4.1). The memory structure referenced by this
* physical memory pointer is assumed to be 4-Kbyte aligned. The contents of this register are combined with
* the Frame Index Register (FRINDEX) to enable the Host Controller to step through the Periodic Frame List
* in sequence.
*

     ==============================================================
     UAHC(0)_EHCI_PERIODICLISTBASE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:12> BADDR  R/W       0       NS       Base Address (Low). These bits correspond to memory address signals [31:12],respectively.    |
<11:0>  NS     R/W       0       NS       Reserved. Must be written as 0s.Dring runtime, the values of these bits are undefined.       |
----------------------------------------------------------------------------------------------------
===





*
*
* ASYNCLISTADDR = Current Asynchronous List Address Register
*
* This 32-bit register contains the address of the next asynchronous queue head to be executed. If the host
* controller is in 64-bit mode (as indicated by a one in 64-bit Addressing Capability field in the
* HCCPARAMS register), then the most significant 32 bits of every control data structure address comes from
* the CTRLDSSEGMENT register (See Section 2.3.5). Bits [4:0] of this register cannot be modified by system
* software and will always return a zero when read. The memory structure referenced by this physical memory
* pointer is assumed to be 32-byte (cache line) aligned.
*

     ==============================================================
     UAHC(0)_EHCI_ASYNCLISTADDR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:5>  LPL    R/W       0        NS       Link Pointer Low (LPL). These bits correspond to memory address signals [31:5],           |
                                           respectively. This field may only reference a Queue Head (QH).                            |
<4:0>   NS     R/W       0        NS       Reserved. These bits are reserved and their value has no effect on operation.             |
----------------------------------------------------------------------------------------------------
===




*
*
* CONFIGFLAG = Configure Flag Register
* This register is in the auxiliary power well. It is only reset by hardware when the auxiliary power is initially
* applied or in response to a host controller reset.
*

     ==============================================================
     UAHC(0)_EHCI_CONFIGFLAG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:1> NS        R/W    0        0      Reserved. These bits are reserved and should be set to zero.                                    |
<0>    CF        R/W    0        1      Configure Flag (CF) .Host software sets this bit as the last action in 				|
                                        its process of configuring the Host Controller (see Section 4.1). This bit controls the 	|
                                        default port-routing control logic. Bit values and side-effects are listed below. 	        |
                                         0b: Port routing control logic default-routes each port to an implementation 			|
                                             dependent classic host controller.  						        |
                                         1b: Port routing control logic default-routes all ports to this host controller.               |
----------------------------------------------------------------------------------------------------
===


*
* PORTSC@ = Port @ Status and Control Register
* Default: 00002000h (w/PPC set to one); 00003000h (w/PPC set to a zero)
*

     ==============================================================
     UAHC(0)_EHCI_PORTSC(1..2) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:23> NS       RO     0      0    These bits are reserved for future use and should return a value of zero when read.            |
<22>    WKOC_E   R/W    0      0    Wake on Over-current Enable.Writing this bit to a 						   |
                                    one enables the port to be sensitive to over-current conditions as wake-up events. 		   |
                                    This field is zero if Port Power is zero. 							   |
<21>  WKDSCNNT_E R/W    0      0    Wake on Disconnect Enable. Writing this bit to a one enables the port to be 	           |
                                    sensitive to device disconnects as wake-up events. 						   |
                                    This field is zero if Port Power is zero. 							   |
<20>  WKCNNT_E   R/W    0      0    Wake on Connect Enable. Writing this bit to a one enables the port to be 			   |
                                    sensitive to device connects as wake-up events. 				                   |
                                    This field is zero if Port Power is zero. 							   |
<19:16> PTC      R/W    0      0    Port Test Control. When this field is zero, the port is NOT 			           |
                                    operating in a test mode. A non-zero value indicates that it is operating 			   |
                                    in test mode and the specific test mode is indicated by the specific value.                    |
                                    The encoding of the test mode bits are (0110b - 1111b are reserved): 			   |
                                    Bits Test Mode 										   |
                                     0000b Test mode not enabled 								   |
                                     0001b Test J_STATE 									   |
                                     0010b Test K_STATE 									   |
                                     0011b Test SE0_NAK 									   |
                                     0100b Test Packet 										   |
                                     0101b Test FORCE_ENABLE									   |
<15:14> PIC     R/W     0      0   Port Indicator Control. Writing to these bits has no effect if the 				   |
                                   P_INDICATOR bit in the HCSPARAMS register is a zero. If P_INDICATOR bit is a one, 		   |
                                   then the bit encodings are: 									   |
                                   Bit Value Meaning 										   |
                                    00b Port indicators are off                                                                    |
                                    01b Amber 											   |
                                    10b Green 											   |
                                    11b Undefined 									           |
                                   This field is zero if Port Power is zero. 							   |
<13>    PO      R/W     1      0   Port Owner.This bit unconditionally goes to a 0b when the 					   |
                                   Configured bit in the CONFIGFLAG register makes a 0b to 1b transition. This bit 	           |
                                   unconditionally goes to 1b whenever the Configured bit is zero. 			           |
                                   System software uses this field to release ownership of the port to a selected host 		   |
                                   controller (in the event that the attached device is not a high-speed device). Software         |
                                   writes a one to this bit when the attached device is not a high-speed device. A one in          |
                                   this bit means that a companion host controller owns and controls the port. 			   |
<12>    PP      RO      1      1   Port Power. The function of this bit depends on the value of the Port                           |
                                   Power Control (PPC) field in the HCSPARAMS register. The behavior is as follows: 		   |
                                   PPC PP    Operation 										   |
                                    0b 1b    RO  - Host controller does not have port power control switches. 		           |
                                                   Each port is hard-wired to power. 						   |
                                    1b 1b/0b R/W - Host controller has port power control switches. This bit 			   |
                                                   represents the current setting of the switch (0 = off, 1 = on). When            |
                                                   power is not available on a port (i.e. PP equals a 0), the port is              |
                                                   nonfunctional  and will not report attaches, detaches, etc. 		           |
                                   When an over-current condition is detected on a powered port and PPC is a one, the PP 	   |
                                   bit in each affected port may be transitioned by the host controller from a 1 to 0 		   |
                                   (removing power from the port). 							           |
<11:10> LSTS     RO     0      NS  Line Status.These bits reflect the current logical levels of the D+ (bit 11) and D(bit 10)      |
                                   signal lines. These bits are used for detection of low-speed USB devices prior to 		   |
                                   the port reset and enable sequence. This field is valid only when the port enable bit is 	   |
                                   zero and the current connect status bit is set to a one. 					   |
                                   The encoding of the bits are: 								   |
                                    Bits[11:10] USB State   Interpretation 							   |
                                    00b         SE0         Not Low-speed device, perform EHCI reset 				   |
                                    10b         J-state     Not Low-speed device, perform EHCI reset 				   |
                                    01b         K-state     Low-speed device, release ownership of port 			   |
                                    11b         Undefined   Not Low-speed device, perform EHCI reset. 				   |
                                  This value of this field is undefined if Port Power is zero. 					   |
<9>     NS       RO     0     0   This bit is reserved for future use, and should return a value of zero when read. 	           |
<8>     PRST     R/W    0     0   Port Reset.1=Port is in Reset. 0=Port is not in Reset. Default = 0. When                         |
                                  software writes a one to this bit (from a zero), the bus reset sequence as defined in the 	   |
                                  USB Specification Revision 2.0 is started. Software writes a zero to this bit to terminate 	   |
                                  the bus reset sequence. Software must keep this bit at a one long enough to ensure the 	   |
                                  reset sequence, as specified in the USB Specification Revision 2.0, completes. Note: 		   |
                                  when software writes this bit to a one, it must also write a zero to the Port Enable bit. 	   |
                                  Note that when software writes a zero to this bit there may be a delay before the bit 	   |
                                  status changes to a zero. The bit status will not read as a zero until after the reset has 	   |
                                  completed. If the port is in high-speed mode after reset is complete, the host controller 	   |
                                  will automatically enable this port (e.g. set the Port Enable bit to a one). A host controller   |
                                  must terminate the reset and stabilize the state of the port within 2 milliseconds of 	   |
                                  software transitioning this bit from a one to a zero. For example: if the port detects that 	   |
                                  the attached device is high-speed during reset, then the host controller must have the           |
                                  port in the enabled state within 2ms of software writing this bit to a zero.  	           |
                                  The HCHalted bit in the USBSTS register should be a zero before software attempts to 		   |
                                  use this bit. The host controller may hold Port Reset asserted to a one when the 		   |
                                  HCHalted bit is a one.									   |
                                  This field is zero if Port Power is zero. 							   |
<7>     SPD      R/W     0    0   Suspend. 1=Port in suspend state. 0=Port not in suspend state. Default = 0. Port 		   |
                                  Enabled Bit and Suspend bit of this register define the port states as follows: 		   |
                                  Bits [Port Enabled, Suspend]     Port State 							   |
                                               0X                  Disable 							   |
                                               10                  Enable 							   |
                                               11                  Suspend 							   |
                                  When in suspend state, downstream propagation of data is blocked on this port, except            |
                                  for port reset. The blocking occurs at the end of the current transaction, if a transaction 	   |
                                  was in progress when this bit was written to 1. In the suspend state, the port is sensitive 	   |
                                  to resume detection. Note that the bit status does not change until the port is 		   |
                                  suspended and that there may be a delay in suspending a port if there is a transaction 	   |
                                  currently in progress on the USB. 								   |
                                  A write of zero to this bit is ignored by the host controller. The host controller will 	   |
                                  unconditionally set this bit to a zero when: 							   |
                                  . Software sets the Force Port Resume bit to a zero (from a one). 				   |
                                  . Software sets the Port Reset bit to a one (from a zero). 					   |
                                  If host software sets this bit to a one when the port is not enabled (i.e. Port enabled bit is   |
                                  a zero) the results are undefined. 								   |
                                  This field is zero if Port Power is zero.                                                        |
<6>     FPR      R/W     0    0   Force Port Resume.                 								   |
                                  1= Resume detected/driven on port. 0=No resume (Kstate) 					   |
                                  detected/driven on port. Default = 0. This functionality defined for manipulating 		   |
                                  this bit depends on the value of the Suspend bit. For example, if the port is not 		   |
                                  suspended (Suspend and Enabled bits are a one) and software transitions this bit to a 	   |
                                  one, then the effects on the bus are undefined. 						   |
                                  Software sets this bit to a 1 to drive resume signaling. The Host Controller sets this bit to    |
                                  a 1 if a J-to-K transition is detected while the port is in the Suspend state. When this bit 	   |
                                  transitions to a one because a J-to-K transition is detected, the Port Change Detect bit in 	   |
                                  the USBSTS register is also set to a one. If software sets this bit to a one, the host           |
                                  controller must not set the Port Change Detect bit. 						   |
                                  Note that when the EHCI controller owns the port, the resume sequence follows the                |
                                  defined sequence documented in the USB Specification Revision 2.0. The resume 	           |
                                  signaling (Full-speed 'K') is driven on the port as long as this bit remains a one. Software 	   |
                                  must appropriately time the Resume and set this bit to a zero when the appropriate 	           |
                                  amount of time has elapsed. Writing a zero (from one) causes the port to return to high-         |
                                  speed mode (forcing the bus below the port into a high-speed idle). This bit will remain a       |
                                  one until the port has switched to the high-speed idle. The host controller must complete        |
                                  this transition within 2 milliseconds of software setting this bit to a zero. 	           |
                                  This field is zero if Port Power is zero. 						           |
<5>   OCC     R/W1C      0     0  Over-current Change. 1=This bit gets set to a one when there is a change to Over-current Active. |
                                  Software clears this bit by writing a one to this bit position. 			           |
<4>   OCA     RO         0     0  Over-current Active. 1=This port currently has an over-current condition. 0=This port does not   |
                                  have an over-current condition. This bit will automatically transition from a one to a zero when |
                                  the over current condition is removed. 							   |
<3>   PEDC    R/W1C      0     0  Port Enable/Disable Change. 1=Port enabled/disabled status has changed. 			   |
                                  0=No change. Default = 0. For the root hub, this bit gets set to a one only when a port is  	   |
                                        disabled due to the appropriate conditions existing at the EOF2 point (See Chapter 11 of   |
                                  the USB Specification for the definition of a Port Error). Software clears this bit by writing   |
                                  a 1 to it. 											   |
                                  This field is zero if Port Power is zero. 							   |
<2>   PED     R/W        0     0  Port Enabled/Disabled. 1=Enable. 0=Disable. Ports can only be 				   |
                                  enabled by the host controller as a part of the reset and enable. Software cannot enable 	   |
                                  a port by writing a one to this field. The host controller will only set this bit to a one when  |
                                  the reset sequence determines that the attached device is a high-speed device. 		   |
                                  Ports can be disabled by either a fault condition (disconnect event or other fault               |
                                  condition) or by host software. Note that the bit status does not change until the port 	   |
                                  state actually changes. There may be a delay in disabling or enabling a port due to other 	   |
                                  host controller and bus events. See Section 4.2 for full details on port reset and enable. 	   |
                                  When the port is disabled (0b) downstream propagation of data is blocked on this port, 	   |
                                  except for reset. 										   |
                                  This field is zero if Port Power is zero. 							   |
<1>    CSC    R/W1C      0     0  Connect Status Change. 1=Change in Current Connect Status. 0=No change. Indicates a change 	   |
                                  has occurred in the port's Current Connect Status. The host controller sets this bit for all 	   |
                                  changes to the port device connect status, even if system software has not cleared an existing   |
                                  connect status change. For example, the insertion status changes twice before system software    |
                                  has cleared the changed condition, hub hardware will be setting an already-set bit 	           |
                                  (i.e., the bit will remain set). Software sets this bit to 0 by writing a 1 to it.               |
                                  This field is zero if Port Power is zero. 						           |
<0>     CCS   RO         0     0  Current Connect Status. 1=Device is present on port. 0=No device is present. 			   |
                                  This value reflects the current state of the port, and may not correspond 			   |
                                  directly to the event that caused the Connect Status Change bit (Bit 1) to be set. 		   |
                                  This field is zero if Port Power is zero. 							   |
----------------------------------------------------------------------------------------------------
===


*
* EHCI_INSNREG00 = EHCI Programmable Microframe Base Value Register (Synopsys Speicific)
* This register allows you to change the microframe length value (default is microframe SOF = 125 s) to reduce the simulation time.
*

     ==============================================================
     UAHC(0)_EHCI_INSNREG00 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:14>  NS      R/W     0       0        Reserved.                                                                                |
<13:1>   MFMC    R/W     0       0        For byte interface (8-bits), <13:1> is used as the 1-microframe counter.                 |
                                          For word interface (16_bits> <12:1> is used as the 1-microframe counter with word        |
                                            interface (16-bits).                                                                   |
<0>      EN      R/W     0       0        Writing 1b1 enables this register.                                                       |
                                          Note: Do not enable this register for the gate-level netlist                             |
----------------------------------------------------------------------------------------------------
===

*
* EHCI_INSNREG03 = EHCI Timing Adjust Register (Synopsys Speicific)
* This register allows you to change the timing of Phy Tx turnaround delay etc.
*

     ==============================================================
     UAHC(0)_EHCI_INSNREG03 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:13> NS         R/W     0       0        Reserved.                                                                                  |
<12:10> TXTX_TADAO R/W     0       0        Tx-Tx turnaround Delay Add on. This field specifies the extra delays in phy_clks to        |
                                            be added to the "Transmit to Transmit turnaround delay" value maintained in the core.      |
                                            The default value of this register field is 0. This default value of 0 is sufficient       |
                                            for most PHYs. But for some PHYs which puts wait states during the token packet, it        |
                                            may be required to program a value greater than 0 to meet the transmit to transmit         |
                                            minimum turnaround time. The recommendation to use the default value of 0 and change       |
                                            it only if there is an issue with minimum transmit-to- transmit turnaround time. This      |
                                            value should be programmed during core initialization and should not be changed afterwards.|
<9>     NS         R/W     0       0        Reserved.                                                                                  |
<8:1>   TA_OFF     R/W     0       0        Time-Available Offset. This value indicates the additional number of bytes to be           |
                                            accommodated for the time-available calculation. The USB traffic on the bus can be started |
                                            only when sufficient time is available to complete the packet within the EOF1 point. Refer |
                                            to the USB 2.0 specification for details of the EOF1 point. This time-available            |
                                            calculation is done in the hardware, and can be further offset by programming a value in   |
                                            this location.                                                                             |
                                            Note: Time-available calculation is added for future flexibility. The application is not   |
                                            required to program this field by default.                                                 |
<0>     NS         R/W     0       0        Reserved.                                                                                  |
----------------------------------------------------------------------------------------------------
===


*
* EHCI_INSNREG04 = EHCI Debug Register (Synopsys Speicific)
* This register is used only for debug purposes.
*

     ==============================================================
     UAHC(0)_EHCI_INSNREG04 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:6>  NS        R/W     0       0        Reserved.                                                                                   |
<5>     AUTO_DIS  R/W     0       0        Automatic feature disable.                                                                  |
                                            1'b0: 0 by default, the automatic feature is enabled. The Suspend signal is deasserted     |
                                                  (logic level 1'b1) when run/stop is reset by software, but the hchalted bit is not   |
                                                  yet set.                                                                             |
                                            1'b1: Disables the automatic feature, which takes all ports out of suspend when software   |
                                                  clears the run/stop bit. This is for backward compatibility.                         |
                                           This bit has an added functionality in release 2.80a and later. For systems where the host  |
                                           is halted without waking up all ports out of suspend, the port can become stuck because     |
                                           the PHYCLK is not running when the halt is programmed. To avoid this, the DWC H20AHB host   |
                                           core automatically pulls ports out of suspend when the host is halted by software. This bit |
                                           is used to disable this automatic function.                                                 |
<4>   NAKRF_DIS   R/W      0       0       NAK Reload Fix Disable.                                                                     |
                                             1b0: NAK reload fix enabled.                                                              |
                                             1b1: NAK reload fix disabled. (Incorrect NAK reload transition at the end of a microframe |
                                                  for backward compatibility with Release 2.40c. For more information see the USB 2.0  |
                                                  Host-AHB Release Notes.                                                              |
<3>   NS          RAZ      0       0       Reserved.                                                                                   |
<2>   PESD        R/W      0       0       Scales down port enumeration time.                                                          |
                                            1'b1: scale down enabled                                                                   |
                                            1'b0:  scale downd disabled                                                                |
                                           This is for simulation only.                                                                |
<1>   HCP_FW      R/W      0       0       HCCPARAMS Field Writeable.                                                                  |
                                            1'b1: The HCCPARAMS register's bits 17, 15:4, and 2:0 become writable.                     |
                                            1'b0: The HCCPARAMS register's bits 17, 15:4, and 2:0 are not writable.                    |
<0>   HCP_RW      R/W      0       0       HCCPARAMS Reigster Writeable.                                                               |
                                            1'b1: The HCCPARAMS register becomes writable.                                             |
                                            1'b0: The HCCPARAMS register is not writable.                                              |
----------------------------------------------------------------------------------------------------
===


*
* EHCI_INSNREG06 = EHCI  AHB Error Status Register (Synopsys Speicific)
* This register contains AHB Error Status.
*

     ==============================================================
     UAHC(0)_EHCI_INSNREG06 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31>    VLD       R/W    0        0        AHB Error Captured. Indicator that an AHB error was encountered and values were captured.  |
                                            To clear this field the application must write a 0 to it.                                  |
 <30:0>  NS        R/W    0       0        Reserved.                                                                                   |
----------------------------------------------------------------------------------------------------
===

*
* EHCI_INSNREG07 = EHCI  AHB Error Address Register (Synopsys Speicific)
* This register contains AHB Error Status.
*

     ==============================================================
     UAHC(0)_EHCI_INSNREG07 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  ERR_ADDR   RO    0        0        AHB Master Error Address. AHB address of the control phase at which the AHB error occurred  |
----------------------------------------------------------------------------------------------------
===



 *
 *
 *    HCREVISION = Host Controller Revision Register
 *
 *
 *

     ==============================================================
     UAHC(0)_OHCI0_HCREVISION Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:8>   NS            RO       0x0         0x0       Reserved                                                                     |
<7:0>    REV           RO       0x10        0x10      Revision This read-only field contains the BCD representation of the version |
                                                      of the HCI specification that is implemented by this HC. For example, a value|
                                                      of 11h corresponds to version 1.1. All of the HC implementations that are    |
                                                      compliant with this specification will have a value of 10h.                  |
----------------------------------------------------------------------------------------------------
===


 *
 *
 *   HCCONTROL = Host Controller Control Register
 *
 *   The HcControl register defines the operating modes for the Host Controller. Most of the fields in this register are modified only by the Host Controller
 *   Driver, except HostControllerFunctionalState and RemoteWakeupConnected.
 *
 *

     ==============================================================
     UAHC(0)_OHCI0_HCCONTROL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<1:0>   CBSR           R/W      0            NS      ControlBulkServiceRatio. This specifies the service ratio between Control and        |
                                                     Bulk EDs. Before processing any of the nonperiodic lists, HC must compare the        |
                                                     ratio specified with its internal count on how many nonempty Control EDs have        |
                                                     been processed, in determining whether to continue serving another Control ED        |
                                                     or switching to Bulk EDs. The internal count will be retained when crossing          |
                                                     the frame boundary. In case of reset, HCD is responsible for restoring this          |
                                                     value. 									          |
																          |
                                                       CBSR   No. of Control EDs Over Bulk EDs Served 				          |
                                                        0             1:1 							          |
                                                        1             2:1                                                                 |
                                                        2             3:1                                                                 |
                                                        3             4:1                                                                 |
<2>     PLE           R/W       0            0       PeriodicListEnable. This bit is set to enable the processing of the periodic list    |
                                                     in the next Frame. If cleared by HCD, processing of the periodic list does not 	  |
                                                     occur after the next SOF. HC must check this bit before it starts processing 	  |
                                                     the list.  									  |
<3>     IE            R/W       0            0       IsochronousEnable This bit is used by HCD to enable/disable processing of 		  |
                                                     isochronous EDs. While processing the periodic list in a Frame, HC checks the        |
                                                     status of this bit when it finds an Isochronous ED (F=1). If set (enabled), HC       |
                                                     continues processing the EDs. If cleared (disabled), HC halts processing of the      |
                                                     periodic list (which now contains only isochronous EDs) and begins processing the 	  |
                                                     Bulk/Control lists. Setting this bit is guaranteed to take effect in the next 	  |
                                                     Frame (not the current Frame).  							  |
<4>     CLE           R/W       0            0       ControlListEnable. This bit is set to enable the processing of the Control list in   |
                                                     the next Frame. If cleared by HCD, processing of the Control list does not occur     |
                                                     after the next SOF. HC must check this bit whenever it determines to process the     |
                                                     list. When disabled, HCD may modify the list. If HcControlCurrentED is pointing to   |
                                                     an ED to be removed, HCD must advance the pointer by updating HcControlCurrentED     |
                                                     before re-enabling processing of the list.  					  |
<5>     BLE           R/W       0            0       BulkListEnable. This bit is set to enable the processing of the Bulk list in the     |
                                                     next Frame. If cleared by HCD, processing of the Bulk list does not occur after 	  |
                                                     the next SOF. HC checks this bit whenever it determines to process the list. When 	  |
                                                     disabled, HCD may modify the list. If HcBulkCurrentED is pointing to an ED to be     |
                                                     removed, HCD must advance the pointer by updating HcBulkCurrentED before re-enabling |
                                                     processing of the list.  								  |
<7:6>   HCFS          R/W       0            0       HostControllerFunctionalState for USB 						  |
                                                      00b: USBRESET 									  |
                                                      01b: USBRESUME 									  |
                                                      10b: USBOPERATIONAL                                                                 |
                                                      11b: USBSUSPEND 									  |
                                                     A transition to USBOPERATIONAL from another state causes SOF generation to begin 	  |
                                                     1 ms later. HCD may determine whether HC has begun sending SOFs by reading the 	  |
                                                     StartofFrame field of HcInterruptStatus. 						  |
                                                     This field may be changed by HC only when in the USBSUSPEND state. HC may move from  |
                                                     the USBSUSPEND state to the USBRESUME state after detecting the resume signaling 	  |
                                                     from a downstream port. 								  |
                                                     HC enters USBSUSPEND after a software reset, whereas it enters USBRESET after a 	  |
                                                     hardware reset. The latter also resets the Root Hub and asserts subsequent reset 	  |
                                                     signaling to downstream ports.  							  |
<8>     IR            R/W       0            0       InterruptRouting									  |
                                                     This bit determines the routing of interrupts generated by events registered in 	  |
                                                     HcInterruptStatus. If clear, all interrupts are routed to the normal host bus 	  |
                                                     interrupt mechanism. If set, interrupts are routed to the System Management 	  |
                                                     Interrupt. HCD clears this bit upon a hardware reset, but it does not alter 	  |
                                                     this bit upon a software reset. HCD uses this bit as a tag to indicate the 	  |
                                                     ownership of HC.  									  |
<9>     RWC           R/W       0            0       RemoteWakeupConnected.This bit indicates whether HC supports remote wakeup signaling.|
                                                     If remote wakeup is supported and used by the system it is the responsibility of 	  |
                                                     system firmware to set this bit during POST. HC clears the bit upon a hardware reset |
                                                     but does not alter it upon a software reset. Remote wakeup signaling of the host 	  |
                                                     system is host-bus-specific and is not described in this specification.  		  |
<10>    RWE           R/W       0            0       RemoteWakeupEnable. This bit is used by HCD to enable or disable the remote wakeup   |
                                                     feature upon the detection of upstream resume signaling. When this bit is set and 	  |
                                                     the ResumeDetected bit in HcInterruptStatus is set, a remote wakeup is signaled      |
                                                     to the host system. Setting this bit has no impact on the generation of hardware     |
                                                     interrupt.                                                                           |
<31:11> NS            RO        0            0       Resverved                                                                            |
----------------------------------------------------------------------------------------------------
===



 *
 * HCCOMMANDSTATUS = Host Controller Command Status Register
 *
 * The HcCommandStatus register is used by the Host Controller to receive commands issued by the Host Controller Driver, as well as reflecting the
 * current status of the Host Controller. To the Host Controller Driver, it appears to be a "write to set" register. The Host Controller must ensure
 * that bits written as '1' become set in the register while bits written as '0' remain unchanged in the register. The Host Controller Driver
 * may issue multiple distinct commands to the Host Controller without concern for corrupting previously issued commands. The Host Controller Driver
 * has normal read access to all bits.
 * The SchedulingOverrunCount field indicates the number of frames with which the Host Controller has detected the scheduling overrun error. This
 * occurs when the Periodic list does not complete before EOF. When a scheduling overrun error is detected, the Host Controller increments the counter
 * and sets the SchedulingOverrun field in the HcInterruptStatus register.
 *
 *

     ==============================================================
     UAHC(0)_OHCI0_HCCOMMANDSTATUS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      HCR           R/W       0           0        HostControllerReset. This bit is set by HCD to initiate a software reset of  |
                                                      HC. Regardless of the functional state of HC, it moves to the USBSUSPEND 	   |
                                                      state in which most of the operational registers are reset except those 	   |
                                                      stated otherwise; e.g., the InterruptRouting field of HcControl, and no 	   |
                                                      Host bus accesses are allowed. This bit is cleared by HC upon the 	   |
                                                      completion of the reset operation. The reset operation must be completed 	   |
                                                      within 10 ms. This bit, when set, should not cause a reset to the Root Hub   |
                                                      and no subsequent reset signaling should be asserted to its downstream ports.|
<1>      CLF           R/W       0           0        ControlListFilled. This bit is used to indicate whether there are any TDs    |
                                                      on the Control list. It is set by HCD whenever it adds a TD to an ED in the  |
                                                      Control list. When HC begins to process the head of the Control list, it 	   |
                                                      checks CLF. As long as ControlListFilled is 0, HC will not start processing  |
                                                      the Control list. If CF is 1, HC will start processing the Control list and  |
                                                      will set ControlListFilled to 0. If HC finds a TD on the list, then HC will  |
                                                      set ControlListFilled to 1 causing the Control list processing to continue.  |
                                                      If no TD is found on the Control list, and if the HCD does not set 	   |
                                                      ControlListFilled, then ControlListFilled will still be 0 when HC completes  |
                                                      processing the Control list and Control list processing will stop.  	   |
<2>      BLF           R/W       0           0        BulkListFilled This bit is used to indicate whether there are any TDs on the |
                                                      Bulk list. It is set by HCD whenever it adds a TD to an ED in the Bulk list. |
                                                      When HC begins to process the head of the Bulk list, it checks BF. As long   |
                                                      as BulkListFilled is 0, HC will not start processing the Bulk list. If 	   |
                                                      BulkListFilled is 1, HC will start processing the Bulk list and will set BF  |
                                                      to 0. If HC finds a TD on the list, then HC will set BulkListFilled to 1 	   |
                                                      causing the Bulk list processing to continue. If no TD is found on the Bulk  |
                                                      list,and if HCD does not set BulkListFilled, then BulkListFilled will still  |
                                                      be 0 when HC completes processing the Bulk list and Bulk list processing will|
                                                      stop.                                                                        |
<3>      OCR           R/W       0           0        OwnershipChangeRequest. This bit is set by an OS HCD to request a change of  |
                                                      control of the HC. When set HC will set the OwnershipChange field in         |
                                                      HcInterruptStatus. After the changeover, this bit is cleared and remains so  |
                                                      until the next request from OS HCD.                                          |
<15:4>   NS            RO        0           0        Reserved field                                                               |
<17:16>  SOC           RO        0           0        SchedulingOverrunCount. These bits are incremented on each scheduling overrun|
                                                      error. It is initialized to 00b and wraps around at 11b. This will be        |
                                                      incremented when a scheduling overrun is detected even if SchedulingOverrun  |
                                                      in HcInterruptStatus has already been set. This is used by HCD to monitor    |
                                                      any persistent scheduling problems.                                          |
<31:18>  NS            RO        0           0        Resverved field                                                              |
----------------------------------------------------------------------------------------------------
===


 *
 * HCINTERRUPTSTATUS = Host Controller InterruptStatus Register
 *
 * This register provides status on various events that cause hardware interrupts. When an event occurs, Host Controller sets the corresponding bit
 * in this register. When a bit becomes set, a hardware interrupt is generated if the interrupt is enabled in the HcInterruptEnable register
 * and the MasterInterruptEnable bit is set. The Host Controller Driver may clear specific bits in this register by writing '1' to bit positions
 * to be cleared. The Host Controller Driver may not set any of these bits. The Host Controller will never clear the bit.

     ==============================================================
     UAHC(0)_OHCI0_HCINTERRUPTSTATUS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      SO            R/W1C     0          0         SchedulingOverrun. This bit is set when the USB schedule for the current       |
                                                      Frame overruns and after the update of HccaFrameNumber. A scheduling overrun   |
                                                      will also cause the SchedulingOverrunCount of HcCommandStatus to be 	     |
                                                      incremented.  								     |
<1>      WDH           R/W1C     0          0         WritebackDoneHead. This bit is set immediately after HC has written 	     |
                                                      HcDoneHead to HccaDoneHead. Further updates of the HccaDoneHead will not 	     |
                                                      occur until this bit has been cleared. HCD should only clear this bit after    |
                                                      it has saved the content of HccaDoneHead.  				     |
<2>      SF            R/W1C     0          0         StartofFrame. This bit is set by HC at each start of a frame and after the     |
                                                       update of HccaFrameNumber. HC also generates a SOF token at the same time.    |
<3>      RD            R/W1C     0          0         ResumeDetected. This bit is set when HC detects that a device on the USB is    |
                                                       asserting resume signaling. It is the transition from no resume signaling to  |
                                                      resume signaling causing this bit to be set. This bit is not set when HCD      |
                                                      sets the USBRESUME state.  						     |
<4>      UE            R/W1C     0          0         UnrecoverableError. This bit is set when HC detects a system error not related |
                                                      to USB. HC should not proceed with any processing nor signaling before the     |
                                                      system error has been corrected. HCD clears this bit after HC has been reset.  |
<5>      FNO           R/W1C     0          0         FrameNumberOverflow. This bit is set when the MSb of HcFmNumber (bit 15) 	     |
                                                      changes value, from 0 to 1 or from 1 to 0, and after HccaFrameNumber has been  |
                                                      updated.  								     |
<6>      RHSC          R/W1C     0          0         RootHubStatusChange. This bit is set when the content of HcRhStatus or the     |
                                                      content of any of HcRhPortStatus[NumberofDownstreamPort] has changed.  	     |
<29:7>   NS            RO        0          0         Reserved									     |
<30>     OC            R/W1C     0          0         OwnershipChange. This bit is set by HC when HCD sets the OwnershipChangeRequest|
                                                      field in HcCommandStatus. This event, when unmasked, will always generate an   |
                                                      System Management Interrupt (SMI) immediately. This bit is tied to 0b when the |
                                                      SMI pin is not implemented.                                                    |
<31>     NS            RO        0          0         Resvered                                                                       |
----------------------------------------------------------------------------------------------------
===


 *
 * HCINTERRUPTENABLE = Host Controller InterruptEnable Register
 *
 * Each enable bit in the HcInterruptEnable register corresponds to an associated interrupt bit in the HcInterruptStatus register. The HcInterruptEnable
 * register is used to control which events generate a hardware interrupt. When a bit is set in the HcInterruptStatus register AND the corresponding bit
 * in the HcInterruptEnable register is set AND the MasterInterruptEnable bit is set, then a hardware interrupt is requested on the host bus.
 * Writing a '1' to a bit in this register sets the corresponding bit, whereas writing a '0' to a bit in this register leaves the corresponding bit
 * unchanged. On read, the current value of this register is returned.
 *
 *

     ==============================================================
     UAHC(0)_OHCI0_HCINTERRUPTENABLE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     SO         R/W      0            0         0 - Ignore; 1 - Enable interrupt generation due to Scheduling Overrun.          |
<1>     WDH        R/W      0            0         0 - Ignore; 1 - Enable interrupt generation due to HcDoneHead Writeback.        |
<2>     SF         R/W      0            0         0 - Ignore; 1 - Enable interrupt generation due to Start of Frame.              |
<3>     RD         R/W      0            0         0 - Ignore; 1 - Enable interrupt generation due to Resume Detect.               |
<4>     UE         R/W      0            0         0 - Ignore; 1 - Enable interrupt generation due to Unrecoverable Error.         |
<5>     FNO        R/W      0            0         0 - Ignore; 1 - Enable interrupt generation due to Frame Number Overflow.       |
<6>     RHSC       R/W      0            0         0 - Ignore; 1 - Enable interrupt generation due to Root Hub Status Change.      |
<29:7>  NS         RO       0            0         Reserved field                                                                  |
<30>    OC         R/W      0            0         0 - Ignore; 1 - Enable interrupt generation due to Ownership Change.            |
<31>    MIE        R/W      0            0         A '0' written to this field is ignored by HC.                                   |
                                                   A '1' written to this field enables interrupt generation due to events          |
                                                   specified in the other bits of this register. This is used by HCD as a Master   |
                                                   Interrupt Enable.                                                               |
----------------------------------------------------------------------------------------------------
===

 *
 *   HCINTERRUPTDISABLE = Host Controller InterruptDisable Register
 *
 * Each disable bit in the HcInterruptDisable register corresponds to an associated interrupt bit in the HcInterruptStatus register. The HcInterruptDisable
 * register is coupled with the HcInterruptEnable register. Thus, writing a '1' to a bit in this register clears the corresponding bit in the HcInterruptEnable
 * register, whereas writing a '0' to a bit in this register leaves the corresponding bit in the HcInterruptEnable register unchanged. On read, the current
 * value of the HcInterruptEnable register is returned.
 *

     ==============================================================
     UAHC(0)_OHCI0_HCINTERRUPTDISABLE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     SO            R/W       0            0       0 - Ignore; 1 - Disable interrupt generation due to Scheduling Overrun.       |
<1>     WDH           R/W       0            0       0 - Ignore; 1 - Disable interrupt generation due to HcDoneHead Writeback.     |
<2>     SF            R/W       0            0       0 - Ignore; 1 - Disable interrupt generation due to Start of Frame.  	   |
<3>     RD            R/W       0            0       0 - Ignore; 1 - Disable interrupt generation due to Resume Detect.  	   |
<4>     UE            R/W       0            0       0 - Ignore; 1 - Disable interrupt generation due to Unrecoverable Error.  	   |
<5>     FNO           R/W       0            0       0 - Ignore; 1 - Disable interrupt generation due to Frame Number Overflow.    |
<6>     RHSC          R/W       0            0       0 - Ignore; 1 - Disable interrupt generation due to Root Hub Status Change.   |
<29:7>  NS            RO        0            0       Reserved 									   |
<30>    OC            R/W       0            0       0 - Ignore; 1 - Disable interrupt generation due to Ownership Change.  	   |
<31>    MIE           R/W       0            0       A '0' written to this field is ignored by HC. 				   |
                                                     A '1' written to this field disables interrupt generation due to events 	   |
                                                     specified in the other bits of this register. This field is set after a 	   |
                                                     hardware or software reset.  						   |
----------------------------------------------------------------------------------------------------
===


 *
 *
 * HCHCCA =  Host Controller Host Controller Communication Area Register
 *
 * The HcHCCA register contains the physical address of the Host Controller Communication Area. The Host Controller Driver determines the alignment restrictions
 * by writing all 1s to HcHCCA and reading the content of HcHCCA. The alignment is evaluated by examining the number of zeroes in the lower order bits. The
 * minimum alignment is 256 bytes; therefore, bits 0 through 7 must always return '0' when read. Detailed description can be found in Chapter 4. This area
 * is used to hold the control structures and the Interrupt table that are accessed by both the Host Controller and the Host Controller Driver.
 *

     ==============================================================
     UAHC(0)_OHCI0_HCHCCA Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:8>   HCCA           R/W      0        NS       This is the base address (bits [31:8]) of the Host Controller Communication Area. |
<7:0>    NS             R/W      0        0        Reserved. Always write/read 0.                                                    |
----------------------------------------------------------------------------------------------------
===


 *
 *   HCPERIODCURRENTED = Host Controller Period Current ED Register
 *
 * The HcPeriodCurrentED register contains the physical address of the current Isochronous or Interrupt Endpoint Descriptor.
 *
 *

     ==============================================================
     UAHC(0)_OHCI0_HCPERIODCURRENTED Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:4>   PCED          RO        0          NS        PeriodCurrentED. This is used by HC to point to the head of one of the       |
                                                      Periodic lists which will be processed in the current Frame. The content of  |
                                                      this register is updated by HC after a periodic ED has been processed. HCD   |
                                                      may read the content in determining which ED is currently being processed    |
                                                      at the time of reading.                                                      |
<3:0>    NS            RO        0          0         Reserved. Always read as 0                                                   |
----------------------------------------------------------------------------------------------------
===



 *
 *
 * HCCONTROLHEADED = Host Controller Control Head ED Register
 *
 * The HcControlHeadED register contains the physical address of the first Endpoint Descriptor of the Control list.
 *
 *
 *

     ==============================================================
     UAHC(0)_OHCI0_HCCONTROLHEADED Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:4>   CHED         R/W       0            NS       ControlHeadED. HC traverses the Control list starting with the HcControlHeadED  |
                                                      pointer. The content is loaded from HCCA during the initialization of HC.       |
<3:0>    NS           R/W       0            0        Resvered. Always write/read 0.                                                  |
----------------------------------------------------------------------------------------------------
===




 *
 *
 * HCCONTROLCURRENTED = Host Controller Control Current ED Register
 *
 * The HcControlCurrentED register contains the physical address of the current Endpoint Descriptor of the Control list.
 *
 *
 *

     ==============================================================
     UAHC(0)_OHCI0_HCCONTROLCURRENTED Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:4>   CCED          R/W       0           NS       ControlCurrentED. This pointer is advanced to the next ED after serving the  |
                                                      present one. HC will continue processing the list from where it left off in  |
                                                      the last Frame. When it reaches the end of the Control list, HC checks the   |
                                                      ControlListFilled of in HcCommandStatus. If set, it copies the content of    |
                                                      HcControlHeadED to HcControlCurrentED and clears the bit. If not set, it 	   |
                                                      does nothing. HCD is allowed to modify this register only when the 	   |
                                                      ControlListEnable of HcControl is cleared. When set, HCD only reads the 	   |
                                                      instantaneous value of this register. Initially, this is set to zero to 	   |
                                                      indicate the end of the Control list.  					   |
<3:0>    NS            R/W       0            0       Reserved. Always Write/read 0.						   |
----------------------------------------------------------------------------------------------------
===


 *
 *
 * HCBULKHEADED = Host Controller Bulk Head ED Register
 *
 * The HcBulkHeadED register contains the physical address of the first Endpoint Descriptor of the Bulk list.
 *
 *
 *

     ==============================================================
     UAHC(0)_OHCI0_HCBULKHEADED Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:4>    BHED          R/W      0           NS       BulkHeadED. HC traverses the Bulk list starting with the HcBulkHeadED        |
                                                      pointer. The content is loaded from HCCA during the initialization of HC.    |
<3:0>     NS            R/W      0           0        Reserved field. Always write/read 0.                                         |
----------------------------------------------------------------------------------------------------
===



 *
 *
 * HCBULKCURRENTED = Host Controller Bulk Current ED Register
 *
 * The HcBulkCurrentED register contains the physical address of the current endpoint of the Bulk list. As the Bulk list will be served in a round-robin
 * fashion, the endpoints will be ordered according to their insertion to the list.
 *
 *

     ==============================================================
     UAHC(0)_OHCI0_HCBULKCURRENTED Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:4>   BCED          R/W       0           NS       BulkCurrentED. This is advanced to the next ED after the HC has served the   |
                                                      present one. HC continues processing the list from where it left off in the  |
                                                      last Frame. When it reaches the end of the Bulk list, HC checks the 	   |
                                                      ControlListFilled of HcControl. If set, it copies the content of HcBulkHeadED|
                                                      to HcBulkCurrentED and clears the bit. If it is not set, it does nothing.    |
                                                      HCD is only allowed to modify this register when the BulkListEnable of 	   |
                                                      HcControl is cleared. When set, the HCD only reads the instantaneous value of|
                                                      this register. This is initially set to zero to indicate the end of the Bulk |
                                                      list.  									   |
<3:0>    NS            R/W       0           0        Reserved field. Always write/read 0.					   |
----------------------------------------------------------------------------------------------------
===



 *
 *
 * HCDONEHEAD = Host Controller Done Head Register
 *
 * The HcDoneHead register contains the physical address of the last completed Transfer Descriptor that was added to the Done queue. In normal operation,
 * the Host Controller Driver should not need to read this register as its content is periodically written to the HCCA.
 *
 *

     ==============================================================
     UAHC(0)_OHCI0_HCDONEHEAD Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:4>   DH             RO      0            NS       DoneHead. When a TD is completed, HC writes the content of HcDoneHead to the   |
                                                      NextTD field of the TD. HC then overwrites the content of HcDoneHead with the  |
                                                      address of this TD. This is set to zero whenever HC writes the content of      |
                                                      this register to HCCA. It also sets the WritebackDoneHead of HcInterruptStatus.|
<3:0>    NS             RO      0            0        Reserved field. Always read 0.                                                 |
----------------------------------------------------------------------------------------------------
===


 *
 *
 * HCFMINTERVAL = Host Controller Frame Interval Register
 *
 * The HcFmInterval register contains a 14-bit value which indicates the bit time interval in a Frame, (i.e., between two consecutive SOFs), and a 15-bit value
 * indicating the Full Speed maximum packet size that the Host Controller may transmit or receive without causing scheduling overrun. The Host Controller Driver
 * may carry out minor adjustment on the FrameInterval by writing a new value over the present one at each SOF. This provides the programmability necessary for
 * the Host Controller to synchronize with an external clocking resource and to adjust any unknown local clock offset.
 *
 *

     ==============================================================
     UAHC(0)_OHCI0_HCFMINTERVAL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>   FI            R/W      0x2EDF       NS       FrameInterval. This specifies the interval between two consecutive SOFs in bit |
                                                      times. The nominal value is set to be 11,999. HCD should store the current     |
                                                      value of this field before resetting HC. By setting the HostControllerReset    |
                                                      field of HcCommandStatus as this will cause the HC to reset this field to its  |
                                                      nominal value. HCD may choose to restore the stored value upon the completion  |
                                                      of the Reset sequence.  							     |
<15:14>  NS            R/W      0            0        Reserved. Always write/read 0.						     |
<30:16>  FSMPS         R/W      0            NS       FSLargestDataPacket. This field specifies a value which is loaded into the     |
                                                      Largest Data Packet Counter at the beginning of each frame. The counter value  |
                                                      represents the largest amount of data in bits which can be sent or received by |
                                                      the HC in a single transaction at any given time without causing scheduling    |
                                                      overrun. The field value is calculated by the HCD.  			     |
<31>     FIT           R/W      0            0        FrameIntervalToggle. HCD toggles this bit whenever it loads a new value to     |
                                                      FrameInterval.                                                                 |
----------------------------------------------------------------------------------------------------
===


 *
 *
 * HCFMREMAINING = Host Controller Frame Remaining Register
 * The HcFmRemaining register is a 14-bit down counter showing the bit time remaining in the current Frame.
 *
 *

     ==============================================================
     UAHC(0)_OHCI0_HCFMREMAINING Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>   FR            RO       0           NS        FrameRemaining. This counter is decremented at each bit time. When it          |
                                                      reaches zero, it is reset by loading the FrameInterval value specified in      |
                                                      HcFmInterval at the next bit time boundary. When entering the USBOPERATIONAL   |
                                                      state, HC re-loads the content with the FrameInterval of HcFmInterval and uses |
                                                      the updated value from the next SOF.                                           |
<30:14>  NS            RO       0           0         Resvered. Always read 0.                                                       |
<31>     FRT           RO       0           0         FrameRemainingToggle. This bit is loaded from the FrameIntervalToggle field    |
                                                      of HcFmInterval whenever FrameRemaining reaches 0. This bit is used by HCD     |
                                                      for the synchronization between FrameInterval and FrameRemaining.              |
----------------------------------------------------------------------------------------------------
===



 *
 *
 * HCFMNUMBER = Host Cotroller Frame Number Register
 *
 * The HcFmNumber register is a 16-bit counter. It provides a timing reference among events happening in the Host Controller and the Host Controller Driver.
 * The Host Controller Driver may use the 16-bit value specified in this register and generate a 32-bit frame number without requiring frequent access to
 * the register.
 *
 *

     ==============================================================
     UAHC(0)_OHCI0_HCFMNUMBER Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>   FN             RO       0           NS       FrameNumber. This is incremented when HcFmRemaining is re-loaded. It will be |
                                                      rolled over to 0h after ffffh. When entering the USBOPERATIONAL state,       |
                                                      this will be incremented automatically. The content will be written to HCCA  |
                                                      after HC has incremented the FrameNumber at each frame boundary and sent a   |
                                                      SOF but before HC reads the first ED in that Frame. After writing to HCCA,   |
                                                      HC will set the StartofFrame in HcInterruptStatus.                           |
<31:16>  NS             RO       0           0        Reserved. Always read 0.                                                     |
----------------------------------------------------------------------------------------------------
===


 *
 *
 * HCPERIODICSTART = Host Controller Periodic Start Register
 *
 * The HcPeriodicStart register has a 14-bit programmable value which determines when is the earliest time HC should start processing the periodic list.
 *
 *
 *

     ==============================================================
     UAHC(0)_OHCI0_HCPERIODICSTART Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>    PS            R/W      0          0x3E67    PeriodicStart After a hardware reset, this field is cleared. This is then set|
                                                      by HCD during the HC initialization. The value is calculated roughly as 10%  |
                                                      off from HcFmInterval.. A typical value will be 3E67h. When HcFmRemaining    |
                                                      reaches the value specified, processing of the periodic lists will have      |
                                                      priority over Control/Bulk processing. HC will therefore start processing    |
                                                      the Interrupt list after completing the current Control or Bulk transaction  |
                                                      that is in progress.                                                         |
<31:14>   NS            R/W      0           0        Reserved. Always write/read 0.                                               |
----------------------------------------------------------------------------------------------------
===


 *
 *
 * HCLSTHRESHOLD = Host Controller LS Threshold Register
 *
 * The HcLSThreshold register contains an 11-bit value used by the Host Controller to determine whether to commit to the transfer of a maximum of 8-byte
 * LS packet before EOF. Neither the Host Controller nor the Host Controller Driver are allowed to change this value.
 *
 *
 *

     ==============================================================
     UAHC(0)_OHCI0_HCLSTHRESHOLD Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>   LST           R/W      0x0628        NS      LSThreshold                                                                  |
                                                      This field contains a value which is compared to the FrameRemaining field    |
                                                      prior to initiating a Low Speed transaction. The transaction is started only |
                                                      if FrameRemaining >= this field. The value is calculated by HCD              |
                                                      with the consideration of transmission and setup overhead.                   |
<31:12>  NS            R/W      0x0           0x0     Reserved. Always write/read 0.                                               |
----------------------------------------------------------------------------------------------------
===




 *
 *
 * HCRHDESCRIPTORA = Host Controller Root Hub DescriptorA Register
 *
 * The HcRhDescriptorA register is the first register of two describing the characteristics of the Root Hub. Reset values are implementation-specific.
 * The descriptor length (11), descriptor type (0x29), and hub controller current (0) fields of the hub Class Descriptor are emulated by the HCD. All
 * other fields are located in the HcRhDescriptorA and HcRhDescriptorB registers.
 *
 *

     ==============================================================
     UAHC(0)_OHCI0_HCRHDESCRIPTORA Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    NDP          RO        2           2        NumberDownstreamPorts. These bits specify the number of downstream ports         |
                                                     supported by the Root Hub. It is implementation-specific. The minimum number     |
                                                     of ports is 1. The maximum number of ports supported by OpenHCI is 15. 	      |
<8>      NPS          R/W       0           0        NoPowerSwitching These bits are used to specify whether power switching is       |
                                                     supported or port are always powered. It is implementation-specific. When 	      |
                                                     this bit is cleared, the PowerSwitchingMode specifies global or per-port 	      |
                                                     switching. 								      |
                                                       0: Ports are power switched 						      |
                                                       1: Ports are always powered on when the HC is powered on  		      |
<9>      PSM          R/W       1           1        PowerSwitchingMode. This bit is used to specify how the power switching of       |
                                                     the Root Hub ports is controlled. It is implementation-specific. This field      |
                                                     is only valid if the NoPowerSwitching field is cleared. 0: all ports are 	      |
                                                     powered at the same time. 1: each port is powered individually.  This mode       |
                                                     allows port power to be controlled by either the global switch or per-port       |
                                                     switching. If the PortPowerControlMask bit is set, the port responds only 	      |
                                                     to port power commands (Set/ClearPortPower). If the port mask is cleared, 	      |
                                                     then the port is controlled only by the global power switch 		      |
                                                     (Set/ClearGlobalPower).  							      |
<10>     DT           RO        0           0        DeviceType. This bit specifies that the Root Hub is not a compound device. The   |
                                                     Root Hub is not permitted to be a compound device. This field should always      |
                                                     read/write 0.  								      |
<11>     OCPM         R/W       NS         NS        OverCurrentProtectionMode. This bit describes how the overcurrent status for     |
                                                     the Root Hub ports are reported. At reset, this fields should reflect the same   |
                                                     mode as PowerSwitchingMode. This field is valid only if the 		      |
                                                     NoOverCurrentProtection field is cleared. 0: over-current status is reported     |
                                                     collectively for all downstream ports 1: over-current status is reported on a    |
                                                     per-port basis                                                                   |
<12>     NOCP         R/W       1          1         NoOverCurrentProtection. This bit describes how the overcurrent status for the   |
                                                     Root Hub ports are reported. When this bit is cleared, the                       |
                                                     OverCurrentProtectionMode field specifies global or per-port reporting.          |
                                                      0: Over-current status is reported  collectively for all downstream ports       |
                                                      1: No overcurrent protection supported                                          |
<23:13>  NS           RO        0          0         Reserved.                                                                        |
<31:24>  POTPGT       R/W       1          1         PowerOnToPowerGoodTime. This byte specifies the duration HCD has to wait before  |
                                                     accessing a powered-on port of the Root Hub. It is implementation-specific. The  |
                                                     unit of time is 2 ms. The duration is calculated as POTPGT * 2 ms.               |
----------------------------------------------------------------------------------------------------
===



 *
 *
 * HCRHDESCRIPTORB = Host Controller Root Hub DescriptorB Register
 *
 * The HcRhDescriptorB register is the second register of two describing the characteristics of the Root Hub. These fields are written during
 * initialization to correspond with the system implementation. Reset values are implementation-specific.
 *
 *

     ==============================================================
     UAHC(0)_OHCI0_HCRHDESCRIPTORB Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>   DR            R/W       0          0         DeviceRemovable.                                                             |
                                                      Each bit is dedicated to a port of the Root Hub. When cleared,the attached   |
	                                              device is removable. When set, the attached device is not removable.	   |
                                                          bit 0: Reserved							   |
                                                          bit 1: Device attached to Port #1					   |
                                                          bit 2: Device attached to Port #2					   |
                                                          ...									   |
                                                          bit15: Device attached to Port #15					   |
<31:16>  PPCM          R/W       0          NS        PortPowerControlMask. 							   |
                                                      Each bit indicates if a port is affected by a global power control command   |
                                                      when PowerSwitchingMode is set. When set, the port's power state is only 	   |
                                                      affected by per-port power control (Set/ClearPortPower). When cleared, the   |
                                                      port is controlled by the global power switch (Set/ClearGlobalPower). If 	   |
                                                      the device is configured to global switching mode (PowerSwitchingMode=0),    |
                                                      this field is not valid.							   |
                                                         bit 0: Reserved							   |
                                                         bit 1: Ganged-power mask on Port #1					   |
                                                         bit 2: Ganged-power mask on Port #2					   |
                                                         ...									   |
                                                         bit15: Ganged-power mask on Port #15					   |
----------------------------------------------------------------------------------------------------
===


 *
 *
 * HCRHSTATUS = Host Controller Root Hub Status Register
 *
 * The HcRhStatus register is divided into two parts. The lower word of a Dword represents the Hub Status field and the upper word represents the Hub
 * Status Change field. Reserved bits should always be written '0'.
 *
 *

     ==============================================================
     UAHC(0)_OHCI0_HCRHSTATUS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      LPS           R/W       0           0       (read)  LocalPowerStatus. The Root Hub does not support the local power status     |
                                                             feature; thus, this bit is always read as '0. 				|
                                                     (write) ClearGlobalPower. In global power mode (PowerSwitchingMode=0), This 	|
                                                             bit is written to '1' to turn off power to all ports 			|
                                                             (clear PortPowerStatus). In per-port power mode, it clears 		|
                                                             PortPowerStatus only on ports whose PortPowerControlMask bit is not 	|
                                                             set. Writing a '0' has no effect. Description  				|
<1>      OCI           RO        0           0       OverCurrentIndicator. This bit reports overcurrent conditions when the global 	|
                                                     reporting is implemented. When set, an overcurrent condition exists. When 		|
                                                     cleared, all power operations are normal. If per-port overcurrent protection 	|
                                                     is implemented this bit is always '0'  						|
<14:2>   NS            RO        0           0       Reserved  										|
<15>     DRWE          R/W       0           NS      (read) DeviceRemoteWakeupEnable. This bit enables a ConnectStatusChange bit as 	|
                                                            a resume event, causing a USBSUSPEND to USBRESUME state transition and      |
                                                            setting the ResumeDetected interrupt. 0 = ConnectStatusChange is not a 	|
                                                            remote wakeup event. 1 = ConnectStatusChange is a remote wakeup event. 	|
                                                     (write) SetRemoteWakeupEnable Writing a '1' sets DeviceRemoveWakeupEnable. 	|
                                                             Writing a '0' has no effect.  						|
<16>     LPSC          R/W       0         NS        (read) LocalPowerStatusChange. The Root Hub does not support the local power 	|
                                                            status feature; thus, this bit is always read as '0'. 			|
                                                     (write) SetGlobalPower In global power mode (PowerSwitchingMode=0), This bit 	|
                                                             is written to '1' to turn on power to all ports (clear PortPowerStatus).   |
                                                             In per-port power mode, it sets PortPowerStatus only on ports whose 	|
                                                             PortPowerControlMask bit is not set. Writing a '0' has no effect.  	|
<17>     CCIC          R/W1C     0           NS      OverCurrentIndicatorChange. This bit is set by hardware when a change has 		|
                                                     occurred to the OCI field of this register. The HCD clears this bit by 		|
                                                     writing a '1'. Writing a '0' has no effect.                                        |
<30:18>  NS            RO        0           0       Reserved                                                                           |
<31>     CRWE          WO       NS          NS       (write) ClearRemoteWakeupEnable Writing a '1' clears DeviceRemoveWakeupEnable.     |
                                                             Writing a '0' has no effect.                                               |
----------------------------------------------------------------------------------------------------
===




 *
 *
 * HCRHPORTSTATUS@ = Host Controller Root Hub Port @ Status Registers
 *
 * The HcRhPortStatus[1:NDP] register is used to control and report port events on a per-port basis. NumberDownstreamPorts represents the number
 * of HcRhPortStatus registers that are implemented in hardware. The lower word is used to reflect the port status, whereas the upper word reflects
 * the status change bits. Some status bits are implemented with special write behavior (see below). If a transaction (token through handshake) is
 * in progress when a write to change port status occurs, the resulting port status change must be postponed until the transaction completes.
 * Reserved bits should always be written '0'.
 *
 *

     ==============================================================
     UAHC(0)_OHCI0_HCRHPORTSTATUS(1..2) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      CCS            R/W     0            NS      (read) CurrentConnectStatus. This bit reflects the current state of the           |
                                                            downstream port.              					       |
                                                              0 = no device connected						       |
                                                              1 = device connected						       |
                                                      (write) ClearPortEnable.							       |
                                                             The HCD writes a '1' to this bit to clear the PortEnableStatus bit.       |
                                                             Writing a '0' has no effect. The CurrentConnectStatus is not	       |
                                                             affected by any write.						       |
                                                       Note: This bit is always read '1b' when the attached device is	       |
                                                             nonremovable (DeviceRemoveable[NDP]).				       |
<1>      PES           R/W      0           NS        (read) PortEnableStatus. This bit indicates whether the port is enabled or       |
                                                             disabled. The Root Hub may clear this bit when an overcurrent condition,  |
                                                             disconnect event, switched-off power, or operational bus error such       |
                                                             as babble is detected. This change also causes PortEnabledStatusChange    |
                                                             to be set. HCD sets this bit by writing SetPortEnable and clears it by    |
                                                             writing ClearPortEnable. This bit cannot be set when CurrentConnectStatus |
                                                             is cleared. This bit is also set, if not already, at the completion of a  |
                                                             port reset when ResetStatusChange is set or port suspend when 	       |
                                                             SuspendStatusChange is set. 					       |
                                                               0 = port is disabled 						       |
                                                               1 = port is enabled 						       |
                                                        (write) SetPortEnable. The HCD sets PortEnableStatus by writing a '1'.         |
                                                             Writing a '0' has no effect. If CurrentConnectStatus is cleared, this     |
                                                             write does not set PortEnableStatus, but instead sets ConnectStatusChange.|
                                                             This informs the driver that it attempted to enable a disconnected port.  |
<2>       PSS           R/W     0           NS         (read) PortSuspendStatus. This bit indicates the port is suspended or in the    |
                                                             resume sequence. It is set by a SetSuspendState write and cleared when    |
                                                             PortSuspendStatusChange is set at the end of the resume interval. This    |
                                                             bit cannot be set if CurrentConnectStatus is cleared. This bit is also    |
                                                             cleared when PortResetStatusChange is set at the end of the port reset    |
                                                             or when the HC is placed in the USBRESUME state. If an upstream resume is |
                                                             in progress, it should propagate to the HC. 			       |
                                                                0 = port is not suspended 					       |
                                                                1 = port is suspended 						       |
                                                        (write) SetPortSuspend. The HCD sets the PortSuspendStatus bit by writing a    |
                                                             '1' to this bit. Writing a '0' has no effect. If CurrentConnectStatus|
                                                               is cleared, this write does not set PortSuspendStatus; instead it sets  |
                                                               ConnectStatusChange.This informs the driver that it attempted to suspend|
                                                               a disconnected port.  						       |
<3>        POCI         R/W     0           NS          (read) PortOverCurrentIndicator. This bit is only valid when the Root Hub is   |
                                                               configured in such a way that overcurrent conditions are reported on a  |
                                                               per-port basis. If per-port overcurrent reporting is not supported, this|
                                                               bit is set to 0. If cleared, all power operations are normal for this   |
                                                               port. If set, an overcurrent condition exists on this port. This bit    |
                                                               always reflects the overcurrent input signal 			       |
                                                                 0 = no overcurrent condition. 					       |
                                                                 1 = overcurrent condition detected. 				       |
                                                        (write) ClearSuspendStatus. The HCD writes a '1' to initiate a resume. 	       |
                                                                Writing  a '0' has no effect. A resume is initiated only if 	       |
                                                                PortSuspendStatus is set.  					       |
<4>        PRS         R/W      0           NS          (read) PortResetStatus. When this bit is set by a write to SetPortReset, port  |
                                                               reset signaling is asserted. When reset is completed, this bit is       |
                                                               cleared when PortResetStatusChange is set. This bit cannot be set if    |
                                                               CurrentConnectStatus is cleared. 				       |
                                                                  0 = port reset signal is not active 				       |
                                                               1 = port reset signal is active 					       |
                                                         (write) SetPortReset. The HCD sets the port reset signaling by writing a '1'  |
                                                               to this bit. Writing a '0'has no effect. If CurrentConnectStatus is     |
                                                               cleared, this write does not set PortResetStatus, but instead sets      |
                                                               ConnectStatusChange. This informs the driver that it attempted to reset |
                                                               a disconnected port. Description  				       |
<7:5>       NS         R/W       0          0            Reserved. Always write/read 0.						       |
<8>         PPS        R/W       0          NS           (read) PortPowerStatus. This bit reflects the port's power status, regardless |
                                                             of the type of power switching implemented. This bit is cleared if an     |
                                                             overcurrent condition is detected. HCD sets this bit by writing 	       |
                                                             SetPortPower or SetGlobalPower. HCD clears this bit by writing            |
                                                             ClearPortPower or ClearGlobalPower. Which power control switches are      |
                                                             enabled is determined by PowerSwitchingMode and PortPortControlMask[NDP]. |
                                                             In global switching mode (PowerSwitchingMode=0), only Set/ClearGlobalPower|
                                                               controls this bit. In per-port power switching (PowerSwitchingMode=1),  |
                                                               if the PortPowerControlMask[NDP] bit for the port is set, only 	       |
                                                               Set/ClearPortPower commands are enabled. If the mask is not set, only   |
                                                               Set/ClearGlobalPower commands are enabled. When port power is disabled, |
                                                               CurrentConnectStatus, PortEnableStatus, PortSuspendStatus, and 	       |
                                                               PortResetStatus should be reset. 				       |
                                                                  0 = port power is off 					       |
                                                                  1 = port power is on 						       |
                                                         (write) SetPortPower. The HCD writes a '1' to set the PortPowerStatus bit.    |
                                                               Writing a '0' has no effect. Note: This bit is always reads '1'         |
                                                               if power switching is not supported.                                    |
<9>        LSDA        R/W      NS        NS             (read) LowSpeedDeviceAttached. This bit indicates the speed of the device     |
                                                               attached to this port. When set, a Low Speed device is attached to this |
                                                               port. When clear, a Full Speed device is attached to this port. This    |
                                                               field is valid only when the CurrentConnectStatus is set. 	       |
                                                                  0 = full speed device attached 				       |
                                                                  1 = low speed device attached 				       |
                                                          (write) ClearPortPower. The HCD clears the PortPowerStatus bit by writing a  |
                                                               '1' to this bit. Writing a '0' has no effect.  			       |
<15:10>    NS         R/W       0          0              Reserved. Always write/read 0.					       |
<16>       CSC        R/W       0          NS             ConnectStatusChange. This bit is set whenever a connect or disconnect event  |
                                                          occurs. The HCD writes a '1' to clear this bit. Writing a '0' has no         |
                                                          effect. If CurrentConnectStatus is cleared when a SetPortReset,SetPortEnable,|
                                                          or SetPortSuspend write occurs, this bit is set to force the driver to       |
                                                          re-evaluate the connection status since these writes should not occur if the |
                                                          port is disconnected. 						       |
                                                            0 = no change in CurrentConnectStatus 				       |
                                                            1 = change in CurrentConnectStatus 					       |
                                                          Note: If the DeviceRemovable[NDP] bit is set, this bit is set only after a   |
                                                           Root Hub reset to inform the system that the device is attached. Description|
<17>       PESC       R/W       0          NS             PortEnableStatusChange. This bit is set when hardware events cause the       |
                                                          PortEnableStatus bit to be cleared. Changes from HCD writes do not set this  |
                                                          bit. The HCD writes a '1' to clear this bit. Writing a '0' has no effect.    |
                                                            0 = no change in PortEnableStatus 					       |
                                                            1 = change in PortEnableStatus  					       |
<18>       PSSC       R/W       0          NS             PortSuspendStatusChange. This bit is set when the full resume sequence has   |
                                                          been completed. This sequence includes the 20-s resume pulse, LS EOP, and    |
                                                          3-ms resychronization delay. 						       |
                                                          The HCD writes a '1' to clear this bit. Writing a '0' has no effect. This    |
                                                          bit is also cleared when ResetStatusChange is set. 			       |
                                                             0 = resume is not completed 					       |
                                                             1 = resume completed  						       |
<19>       OCIC       R/W       0          NS             PortOverCurrentIndicatorChange. This bit is valid only if overcurrent        |
                                                          conditions are reported on a per-port basis. This bit is set when Root Hub   |
                                                          changes the PortOverCurrentIndicator bit. The HCD writes a '1' to clear this |
                                                          bit. Writing a  '0'  has no effect. 					       |
                                                             0 = no change in PortOverCurrentIndicator 				       |
                                                             1 = PortOverCurrentIndicator has changed  				       |
<20>       PRSC       R/W       0         NS             PortResetStatusChange. This bit is set at the end of the 10-ms port reset    |
                                                          signal. The HCD writes a '1' to clear this bit. Writing a '0' has no effect. |
                                                             0 = port reset is not complete                                            |
                                                             1 = port reset is complete                                                |
<31:21>    NS         R/W       0         0             Reserved. Always write/read 0.                                                |
----------------------------------------------------------------------------------------------------
===



*
* OHCI0_INSNREG06 = OHCI  AHB Error Status Register (Synopsys Speicific)
*
* This register contains AHB Error Status.
*

     ==============================================================
     UAHC(0)_OHCI0_INSNREG06 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31>    VLD       R/W    0        0        AHB Error Captured. Indicator that an AHB error was encountered and values were captured.  |
                                            To clear this field the application must write a 0 to it.                                  |
 <30:0>  NS        R/W    0        0        Reserved.                                                                                  |
----------------------------------------------------------------------------------------------------
===



*
* OHCI0_INSNREG07 = OHCI  AHB Error Address Register (Synopsys Speicific)
*
* This register contains AHB Error Status.
*

     ==============================================================
     UAHC(0)_OHCI0_INSNREG07 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  ERR_ADDR   RO    0        0        AHB Master Error Address. AHB address of the control phase at which the AHB error occurred  |
----------------------------------------------------------------------------------------------------
===



 *
 * CLK_RST_CTL = Clock and Reset Control Reigster
 * This register controls the frequceny of hclk and resets for hclk and phy clocks. It also controls Simulation modes and Bists.

     ==============================================================
     UCTL(0)_CLK_RST_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:25> NS             RAZ     NS       NS      Reserved                                            |
<24>    CLEAR_BIST     R/W      0        0      Clear BIST on the HCLK memories                     |
<23>    START_BIST     R/W      0        0      Starts BIST on the HCLK memories during 0-to-1      |
                                                transition.                                         |
<22>    EHCI_SM        R/W      0        0      Only set it during simulation time. When set to 1,  |
                                                this bit sets the PHY in a non-driving mode so the  |
                                                EHCI can detect device connection.                  |
                                                Note: it must not be set to 1, during normal        |
                                                operation.                                          |
<21>    OHCI_CLKCKTRST R/W      1       1       Clear clock reset. Active low.  OHCI initial reset  |
                                                signal for the DPLL block. This is only needed by   |
                                                simulation. The duration of the reset  in simulation|
                                                must be the same as HRST.                           |
                                                Note: it must be set to 1 during normal operation.  |
<20>    OHCI_SM	        R/W     0       0       OHCI Simulation Mode. It selects the counter value  |
                                                for simulation or real time for 1 ms.               |
                                                0: counter full 1ms; 1: simulation time.            |
<19>    OHCI_SUSP_LGCY	R/W     1       1       OHCI Clock Control Signal. Note: This bit must be   |
                                                set to 0 if the OHCI 48/12Mhz clocks must be        |
                                                suspended when the EHCI and OHCI controllers are    |
                                                not active.                                         |
<18>    APP_START_CLK   R/W     0       0       OHCI Clock Control Signal. When the OHCI clocks are |
                                                suspended, the system has to assert this signal to  |
                                                start the clocks (12 and 48 Mhz).                   |
<17>	O_CLKDIV_RST    R/W     0       1       OHCI 12Mhz  clock divider reset. Active low. When   |
                                                set to 0, divider is held in reset.                 |
                                                The reset to the divider is also asserted when core |
                                                reset is asserted.                                  |
<16>    H_CLKDIV_BYP    R/W     0       0       Used to enable the bypass input to the USB_CLK_DIV  |
<15>    H_CLKDIV_RST    R/W     0       1       Host clock divider reset. Active low. When set to 0,|
                                                divider is held in reset. This must be set to 0     |
                                                before change H_DIV0 and H_DIV1.                    |
                                                The reset to the divider is also asserted when core |
                                                reset is asserted.                                  |
<14>    H_CLKDIV_EN     R/W     0       1       Hclk enable. When set to 1, the hclk is gernerated. |
<13>    O_CLKDIV_EN     R/W     0       1       OHCI 48Mhz/12MHz clock enable. When set to 1, the   |
                                                clocks are gernerated.                              |
<12:9>  H_DIV           R/W     0x6     0x6     The hclk frequency is sclk frequency divided by     |
                                                H_DIV. The maximum frequency of hclk is 200Mhz.     |
                                                The minimum frequency of hclk is no less than the   |
                                                UTMI clock frequency which is 60Mhz. After writing a|
                                                value to this field, the software should read the   |
                                                field for the value written. The [H_ENABLE] field of|
                                                this register should not be set until after this    |
                                                field is set and  then read.                        |
                                                Only the following values are valid:                |
                                                   1, 2, 3, 4, 6, 8, 12.                            |
                                                All other values are reserved and will be coded as  |
                                                following:                                          |
                                                   0        -> 1                                    |
                                                   5        -> 4                                    |
                                                   7        -> 6                                    |
                                                   9,10,11  -> 8                                    |
                                                   13,14,15 -> 12                                   |
<8:7>   P_REFCLK_SEL   R/W    0x0    0x0        PHY PLL Reference Clock Select.                     |
                                                00: uses 12Mhz crystal at USB_XO and USB_XI;        |
                                                01: uses 12/24/48Mhz 2.5V clock source at USB_XO.   |
                                                    USB_XI should be tied to GND.                   |
                                                1x: Reserved.                                       |
<6:5>   P_REFCLK_DIV    R/W    0x0    0x0       PHY Reference Clock Frequency Select.               |
                                                00: 12MHz, 01: 24Mhz, 10: 48Mhz, 11: Reserved.      |
                                                Note: This value must be set during POR is active.  |
                                                If a crystal is used as a reference clock,this field|
                                                must be set to 12 MHz. Values 01 and 10 are reserved|
                                                when a crystal is used.                             |
<4>     NS             R/W     0        NS      Reserved                                            |
<3>     P_COM_ON       R/W     0      0         PHY Common Block Power-Down Control.                |
                                                1: The XO, Bias, and PLL blocks are powered down in |
                                                   Suspend mode.                                    |
                                                0: The XO, Bias, and PLL blocks remain powered in   |
                                                   suspend mode.                                    |
                                                Note: This bit must be set to 0 during POR is active|
                                                in current design.                                  |
<2>     P_POR           R/W     1      0        Power on reset for PHY. Resets all the PHY's        |
                                                registers and state machines.                       |
<1>     P_PRST          R/W     0      1        PHY Clock Reset. The is the value for phy_rst_n,    |
                                                utmi_rst_n[1] and utmi_rst_n[0]. It is synchronized |
                                                to each clock domain to generate the corresponding  |
                                                reset signal. This should not be set to 1 until the |
                                                time it takes for six clock cycles (HCLK and        |
                                                PHY CLK, which ever is slower) has passed.          |
<0>     HRST            R/W     0      1        Host Clock Reset. This is the value for hreset_n.   |
                                                This should not be set to 1 until 12ms after PHY CLK|
                                                is stable.                                          |
----------------------------------------------------------------------------------------------------
===

 *
 * UPHY_CTL_STATUS = USB PHY Control and Status Reigster
 * This register controls the USB PHY test and Bist.

     ==============================================================
     UCTL(0)_UPHY_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:10>  NS             RAZ      NS      NS     Reserved                                            |
<9>      BIST_DONE      RO       0       0      PHY BIST DONE.  Asserted at the end of the PHY BIST |
                                                sequence.                                           |
<8>      BIST_ERR       RO       0       0      PHY BIST Error.  Valid when BIST_ENB is high.       |
                                                Indicates an internal error was detected during the |
                                                BIST sequence.                                      |
<7>      HSBIST         R/W     0       0       High-Speed BIST Enable                              |
<6>      FSBIST         R/W     0       0       Full-Speed BIST Enable                              |
<5>      LSBIST         R/W     0       0       Low-Speed BIST Enable                               |
<4>      SIDDQ          R/W     0       0       Drives the PHY SIDDQ input. Normally should be set  |
                                                to zero. Customers not using USB PHY interface      |
                                                should do the following:                            |
                                                  Provide 3.3V to USB_VDD33 Tie USB_REXT to 3.3V    |
                                                  supply and Set SIDDQ to 1.                        |
<3>      VTEST_EN       R/W     0       0       Analog Test Pin Enable.                             |
                                                  1 = The PHY's ANALOG_TEST pin is enabled for the  |
                                                      input and output of applicable analog test    |
                                                      signals.                                      |
                                                  0 = The ANALOG_TEST pin is disabled.              |
<2>      UPHY_BIST      R/W     0       0       When set to 1,  it makes sure that during PHY BIST, |
                                                utmi_txvld == 0.                                    |
<1>      BIST_EN        R/W     0       0       PHY BIST ENABLE                                     |
<0>      ATE_RESET      R/W     0       0       Reset Input from ATE. This is a test signal. When   |
                                                the USB core is powered up (not in suspend mode), an|
                                                automatic tester can use this to disable PHYCLOCK   |
                                                and FREECLK, then re-enable them with an aligned    |
                                                phase.                                              |
                                                 1:  PHYCLOCKs and FREECLK outputs are disable.     |
                                                 0: PHYCLOCKs and FREECLK are available within a    |
                                                    specific period after ATERESET is de-asserted.  |
----------------------------------------------------------------------------------------------------
===

 *
 * UPHY_PORT@_CTL_STATUS = USB PHY Port @ Control and Status Reigsters
 * This register controls the each port of the USB PHY.

     ==============================================================
     UCTL(0)_UPHY_PORT(0..1)_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:43>  NS                RAZ      NS   NS        Reserved                                            |
<42:39>  TDATA_OUT         RO       NS   NS        PHY test data out. Presents either interlly         |
                                                   generated signals or test register contenets, based |
                                                   upon the value of TDATA_SEL                         |
<38>     TXBISTSTUFFENH    R/W      1    1         High-Byte Transmit Bit-Stuffing Enable. It must be  |
                                                   set to 1'b1 in normal operation.                    |
<37>     TXBISTSTUFFEN     R/W      1    1         Low-Byte Transmit Bit-Stuffing Enable. It must be   |
                                                   set to 1'b1 in normal operation.                    |
<36>     DMPULLDOWN        R/W      1    1         D- Pull-Down Resistor Enable. It must be set to 1'b1|
                                                   in normal operation.                                |
<35>     DPPULLDOWN        R/W      1    1         D+ Pull-Down Resistor Enable. It must be set to 1'b1|
                                                   in normal operation.                                |
<34>     VBUSVLDEXT        R/W      0    0         In host mode, this input is not used and can be tied|
                                                   to 1'b0.                                            |
<33>     PORTRESET         R/W      0    0         Per-port reset                                      |
<32:31>  TXHSVXTUNE        R/W      0x0  0x0       Transmitter High-Speed Crossover Adjustment         |
<30:27>  TXVREFTUNE        R/W      0x5  0x5       HS DC Voltage Level Adjustment                      |
<26>     TXRISETUNE        R/W      0    0         HS Transmitter Rise/Fall Time Adjustment            |
<25>     TXPREEMPHASISTUNE R/W      0    0         HS transmitter pre-emphasis enable.                 |
<24:21>  TXFSLSTUNE        R/W      0x3  0x3       FS/LS Source Impedance Adjustment                   |
<20:18>  SQRXTUNE          R/W      0x4  0x4       Squelch Threshold Adjustment                        |
<17:15>  COMPDISTUNE       R/W      0x4  0x4       Disconnect Threshold Adjustment                     |
<14>     LOOP_EN           R/W      0    0         Port Loop back Test Enable                          |
                                                    1: During data transmission, the receive logic is  |
                                                       enabled                                         |
                                                    0: During data transmission, the receive logic is  |
                                                       disabled                                        |
<13>     TCLK              R/W      0    0         PHY port test clock, used to load TDATA_IN to the   |
                                                   UPHY.                                               |
<12>     TDATA_SEL         R/W      1    0         Test Data out select                                |
                                                    1: Mode-defined test register contents are output  |
                                                    0: internally generated signals are output         |
<11:8>   TADDR_IN          R/W      0x0 0x0        Mode address for test interface. Specifies the      |
                                                   register address for writing to or reading from the |
                                                   PHY test interface register.                        |
<7:0>    TDATA_IN          R/W      0x0 0x0        Internal testing Register input data and select.    |
                                                   This is a test bus. Data presents on [3:0] and the  |
                                                   corresponding select (enable) presents on bits[7:4].|
----------------------------------------------------------------------------------------------------
===

 *
 *                  UCTL_INT_REG = UCTL Interrupt Register
 *
 * Summary of different bits of RSL interrupt status.
 *

     ==============================================================
     UCTL(0)_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS        RAZ       NS          NS      Reserved                                           |
 <7:7>   EC_OVF_E  R/W1C     0x0          0      Ehci Commit OVerFlow Error                         |
                                                 When the error happenes, the whole NCB system needs|
                                                 to be reset.                                       |
 <6:6>   OC_OVF_E  R/W1C     0x0          0      Ohci Commit OVerFlow Error                         |
                                                 When the error happenes, the whole NCB system needs|
                                                 to be reset.                                       |
 <5:5>   WB_POP_E  R/W1C     0x0          0      Write Buffer FIFO Poped When Empty                 |
 <4:4>   WB_PSH_F  R/W1C     0x0          0      Write Buffer FIFO Pushed When Full                 |
 <3:3>   CF_PSH_F  R/W1C     0x0          0      Command FIFO Pushed When Full                      |
 <2:2>   OR_PSH_F  R/W1C     0x0          0      OHCI Read Buffer FIFO Pushed When Full             |
 <1:1>   ER_PSH_F  R/W1C     0x0          0      EHCI Read Buffer FIFO Pushed When Full             |
 <0:0>   PP_PSH_F  R/W1C     0x0          0      PP Access FIFO  Pushed When Full                   |
----------------------------------------------------------------------------------------------------
===

 *
 *                  UCTL_INT_ENA = UCTL Interrupt Enable Register
 *
 * Register to enable individual interrupt source in corresponding to UCTL_INT_REG
 *

     ==============================================================
     UCTL(0)_INT_ENA Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS        RAZ     NS          NS       Reserved                                          |
 <7:7>   EC_OVF_E  R/W     0x0          0      Ehci Commit OVerFlow Error                         |
 <6:6>   OC_OVF_E  R/W     0x0          0      Ohci Commit OVerFlow Error                         |
 <5:5>   WB_POP_E  R/W     0x0          0      Write Buffer FIFO Poped When Empty                 |
 <4:4>   WB_PSH_F  R/W     0x0          0      Write Buffer FIFO Pushed When Full                 |
 <3:3>   CF_PSH_F  R/W     0x0          0      Command FIFO Pushed When Full                      |
 <2:2>   OR_PSH_F  R/W     0x0          0      OHCI Read Buffer FIFO Pushed When Full             |
 <1:1>   ER_PSH_F  R/W     0x0          0      EHCI Read Buffer FIFO Pushed When Full             |
 <0:0>   PP_PSH_F  R/W     0x0          0      PP Access FIFO  Pushed When Full                   |
----------------------------------------------------------------------------------------------------
===

 *
 *                  UCTL_IF_ENA = UCTL Interface Enable Register
 *
 * Register to enable the uctl interface clock.
 *

     ==============================================================
     UCTL(0)_IF_ENA Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved                                           |
 <0>     EN       R/W      0x0         1         Turns on the USB UCTL interface clock              |
----------------------------------------------------------------------------------------------------
===


 *
 * UCTL_EHCI_CTL = UCTL EHCI Control Register
 * This register controls the general behavior of UCTL EHCI datapath.

     ==============================================================
     UCTL(0)_EHCI_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:20>  NS                RAZ      NS   NS        Reserved                                            |
<19>     DESC_RBM          R/W      0     0        Descriptor Read Burst Mode on AHB bus               |
                                                    1: A read burst can be interruprted after 16 AHB   |
                                                       clock cycle                                     |
                                                    0: A read burst will not be interrupted until it   |
                                                       finishes or no more data available              |
<18>     REG_NB            R/W      0     0        1: EHCI register access will not be blocked by EHCI |
                                                   buffer/descriptor access on AHB                     |
                                                   0: Buffer/descriptor and register access will be    |
                                                      mutually exclusive                               |
<17>     L2C_DC            R/W      1     1        When set to 1, set the commit bit in the descriptor |
                                                   store commands to L2C.                              |
<16>     L2C_BC            R/W      0     0        When set to 1, set the commit bit in the buffer     |
                                                   store commands to L2C.                              |
<15>     L2C_0PAG          R/W      0     0        When set to 1, sets the zero-page bit in store      |
                                                   command to  L2C.                                    |
<14>     L2C_STT           R/W      0     0        When set to 1, use STT when store to L2C.           |
<13:12>  L2C_BUFF_EMOD     R/W      0x1   0x1      Endian format for buffer from/to the L2C.           |
                                                   IN:       A-B-C-D-E-F-G-H                           |
                                                   OUT0:  A-B-C-D-E-F-G-H                              |
                                                   OUT1:  H-G-F-E-D-C-B-A                              |
                                                   OUT2:  D-C-B-A-H-G-F-E                              |
                                                   OUT3:  E-F-G-H-A-B-C-D                              |
<11:10>  L2C_DESC_EMOD     R/W      0x0   0x0      Endian format for descriptor from/to the L2C.       |
                                                   IN:        A-B-C-D-E-F-G-H                          |
                                                   OUT0:  A-B-C-D-E-F-G-H                              |
                                                   OUT1:  H-G-F-E-D-C-B-A                              |
                                                   OUT2:  D-C-B-A-H-G-F-E                              |
                                                   OUT3:  E-F-G-H-A-B-C-D                              |
<9>      INV_REG_A2        R/W      0x0   0x0      UAHC register address  bit<2> invert. When set to 1,|
                                                   for a 32-bit NCB I/O register access, the address   |
                                                   offset will be flipped between 0x4 and 0x0.         |
<8>      EHCI_64B_ADDR_EN  R/W      0x1   0x1      EHCI AHB Master 64-bit Addressing Enable.           |
                                                   1: enable ehci 64-bit addressing mode;              |
                                                   0: disable ehci 64-bit addressing mode.             |
                                                   When ehci 64-bit addressing mode is disabled,       |
                                                   UCTL_EHCI_CTL[L2C_ADDR_MSB] is used as the address  |
                                                   bit[39:32].                                         |
<7:0>    L2C_ADDR_MSB      R/W      0x0    NS	   This is the bit [39:32] of an address sent to L2C   |
                                                   for ehci whenUCTL_EHCI_CFG[EHCI_64B_ADDR_EN=0]).    |
----------------------------------------------------------------------------------------------------
===
 * RSL registers starting from 0x10 can be accessed only after hclk is active and hreset is deasserted.

 *
 * UCTL_OHCI_CTL = UCTL OHCI Control Register
 * This register controls the general behavior of UCTL OHCI datapath.

     ==============================================================
     UCTL(0)_OHCI_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:19>  NS                RAZ      NS   NS        Reserved                                            |
<18>     REG_NB            R/W      0     0        1: OHCI register access will not be blocked by EHCI |
                                                   buffer/descriptor access on AHB                     |
                                                   0: Buffer/descriptor and register access will be    |
                                                      mutually exclusive                               |
<17>     L2C_DC            R/W      1     1        When set to 1, set the commit bit in the descriptor |
                                                   store commands to L2C.                              |
<16>     L2C_BC            R/W      0     0        When set to 1, set the commit bit in the buffer     |
                                                   store commands to L2C.                              |
<15>     L2C_0PAG          R/W      0     0        When set to 1, sets the zero-page bit in store      |
                                                   command to  L2C.                                    |
<14>     L2C_STT           R/W      0     0        When set to 1, use STT when store to L2C.           |
<13:12>  L2C_BUFF_EMOD     R/W      0x1   0x1      Endian format for buffer from/to the L2C.           |
                                                   IN:       A-B-C-D-E-F-G-H                           |
                                                   OUT0:  A-B-C-D-E-F-G-H                              |
                                                   OUT1:  H-G-F-E-D-C-B-A                              |
                                                   OUT2:  D-C-B-A-H-G-F-E                              |
                                                   OUT3:  E-F-G-H-A-B-C-D                              |
<11:10>  L2C_DESC_EMOD     R/W      0x0   0x0      Endian format for descriptor from/to the L2C.       |
                                                   IN:        A-B-C-D-E-F-G-H                          |
                                                   OUT0:  A-B-C-D-E-F-G-H                              |
                                                   OUT1:  H-G-F-E-D-C-B-A                              |
                                                   OUT2:  D-C-B-A-H-G-F-E                              |
                                                   OUT3:  E-F-G-H-A-B-C-D                              |
<9>      INV_REG_A2        R/W      0x0   0x0      UAHC register address  bit<2> invert. When set to 1,|
                                                   for a 32-bit NCB I/O register access, the address   |
                                                   offset will be flipped between 0x4 and 0x0.         |
<8>      NS                RAZ      NS     NS      Reserved                                            |
<7:0>    L2C_ADDR_MSB      R/W      0x0    NS	   This is the bit [39:32] of an address sent to L2C   |
                                                   for ohci.                                           |
----------------------------------------------------------------------------------------------------
===


 * UCTL_ERTO_CTL = UCTL EHCI Readbuffer TimeOut Control Register
 * This register controls timeout for EHCI Readbuffer.

     ==============================================================
     UCTL(0)_ERTO_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>   NS               RAZ      NS   NS        Reserved                                            |
<31:5>    TO_VAL           R/W     0x0   0x0       Read buffer timeout value                           |
                                                     (value 0 means timeout disabled)                  |
<4:0>     NS               RAZ      NS   NS        Reserved                                            |
----------------------------------------------------------------------------------------------------
===


 * UCTL_ORTO_CTL = UCTL OHCI Readbuffer TimeOut Control Register
 * This register controls timeout for OHCI Readbuffer.

     ==============================================================
     UCTL(0)_ORTO_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>   NS               RAZ      NS   NS        Reserved                                            |
<31:8>    TO_VAL           R/W     0x0   0x0       Read buffer timeout value                           |
                                                     (value 0 means timeout disabled)                  |
<7:0>     NS               RAZ      NS   NS        Reserved                                            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  UCTL_BIST_STATUS = UCTL Bist Status
 *
 * Results from BIST runs of UCTL's memories.
 *

     ==============================================================
     UCTL(0)_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS        RO       NS          NS       Reserved                                           |
 <5:5>   DATA_BIS  RO       0           0        UAHC EHCI Data Ram Bist Status                     |
 <4:4>   DESC_BIS  RO       0           0        UAHC EHCI Descriptor Ram Bist Status               |
 <3:3>   ERBM_BIS  RO       0           0        UCTL EHCI Read Buffer Memory Bist Status           |
 <2:2>   ORBM_BIS  RO       0           0        UCTL OHCI Read Buffer Memory Bist Status           |
 <1:1>   WRBM_BIS  RO       0           0        UCTL Write Buffer Memory Bist Sta                  |
 <0:0>   PPAF_BIS  RO       0           0        PP Access FIFO Memory Bist Status                  |
----------------------------------------------------------------------------------------------------
===

 *
 * UCTL_EHCI_FLA = UCTL EHCI Frame Length Adjument Register
 * This register configures the EHCI Frame Length Adjustment.

     ==============================================================
     UCTL(0)_EHCI_FLA Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:6>   NS                RAZ      NS   NS        Reserved                                                |
<5:0>    FLA               R/W      0x0  0x20      EHCI Frame Length Adjustment. This feature              |
                                                   adjusts any offset from the clock source that drives    |
                                                   the uSOF counter.  The uSOF cycle time (number of       |
                                                   uSOF counter clock periods to generate a uSOF           |
                                                   microframe length) is equal to 59,488 plus this value.  |
                                                   The default value is 32(0x20), which gives an SOF cycle |
                                                   time of 60,000 (each microframe has 60,000 bit times).  |
                                                   -------------------------------------------------       |
                                                    Frame Length (decimal)      FLA Value                  |
                                                   -------------------------------------------------       |
                                                      59488                      0x00                      |
                                                      59504                      0x01                      |
                                                      59520                      0x02                      |
                                                      ... ...                                              |
                                                      59984                      0x1F                      |
                                                      60000                      0x20                      |
                                                      60016                      0x21                      |
                                                      ... ...                                              |
                                                      60496                      0x3F                      |
                                                   --------------------------------------------------      |
                                                   Note: keep this value to 0x20 (decimal 32) for no       |
                                                   offset.                                                 |
----------------------------------------------------------------------------------------------------
===



 *
 *                  ZIP_CMD_CTL = ZIP Clock/Reset Control Register
 *
 * Description:
 *       This register controls clock and reset.
 *

     ==============================================================
     ZIP_CMD_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ       NS          NS       RESERVED                                           |
 <1>     FORCECLK R/W       0           0        Force zip_ctl__zip<0|1>_clock_on_b == 1 when set   |
 <0>     RESET    RAZ       0           0        Reset one-shot pulse for zip cores                 |
----------------------------------------------------------------------------------------------------
===

 *
 *                  ZIP_CMD_BUF =  ZIP Command Buffer Parameter Register
 *
 * Description:
 * This is an alias to ZIP_QUE0_BUF. The purpose of this register is for software backward compatibility.
 * This register set the buffer parameters for the instruction queue 0.
 *

     ==============================================================
     ZIP_CMD_BUF Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:58> NS       RAZ       NS          NS       RESERVED                                           |
 <57:49> DWB      R/W       0           0        Number of DontWriteBacks                           |
 <48:46> POOL     R/W       0           0        Free list used to free command buffer segments     |
 <45:33> SIZE     R/W       0           0        Number of uint64s per command buffer segment       |
 <32:0>  PTR      R/W       0           0        Initial command buffer pointer[39:7] (128B-aligned)|
----------------------------------------------------------------------------------------------------
===

 *
 *                  ZIP_THROTTLE =  ZIP Throttle Register
 *
 * Description:
 * This register controls the maximum number of in-flight X2I data fetch transactions.  Values > 16 are illegal.
 * Writing 0 to this register causes the ZIP module to temporarily suspend NCB accesses; it is not recommended
 * for normal operation, but may be useful for diagnostics.
 *

     ==============================================================
     ZIP_THROTTLE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:5>  NS       RAZ       NS          NS       RESERVED                                              |
 <4:0>   MAX_INFL R/W       16          16       Maximum number of in-flight data fetch transactions on|
                                                 NCB.                                                  |
----------------------------------------------------------------------------------------------------
===

 *
 *                  ZIP_CMD_BIST_RESULT =  ZIP Command BIST Result Register
 *
 * Description:
 * This register is a reformatted register with same fields as O63 2.x.
 * The purpose of this register is for software backward compatibility.
 * Some bits are the bist result of combined status of memories (per bit, 0=pass and 1=fail).

     ==============================================================
     ZIP_CMD_BIST_RESULT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:57> NS       RAZ       NS          NS       RESERVED                                           |
 <56:4>  ZIP_CORE RO        X           0        BiST result of the ZIP_CORE memories               |
 <3:0>   ZIP_CTL  RO        X           0        BiST result of the ZIP_CTL  memories               |
----------------------------------------------------------------------------------------------------
===

 *
 *                  ZIP_ERROR =  ZIP ERROR Register
 *
 * Description:
 * This register is an alias to ZIP_INT_REG[DOORBELL0].
 * The purpose of this register is for software backward compatibility.

     ==============================================================
     ZIP_ERROR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        RESERVED
 <0>     DOORBELL R/W1C    0           0         A doorbell count has overflowed
----------------------------------------------------------------------------------------------------
===

 *
 *                  ZIP_INT_MASK =  ZIP Interrupt Mask Register
 *
 * Description:
 * This register is an alias to ZIP_INT_ENA[DOORBELL0].
 * The purpose of this register is for software backward compatibility.

     ==============================================================
     ZIP_INT_MASK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        RESERVED
 <0>     DOORBELL R/W      0           0         Bit mask corresponding to ZIP_ERROR[0] above
----------------------------------------------------------------------------------------------------
===


 *
 *                 ZIP_DEBUG0 =  ZIP DEBUG Register
 *
 * Description:
 *

     ==============================================================
     ZIP_DEBUG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:30> NS       RAZ      NS          NS        RESERVED                                           |
 <29:0>  ASSERTS  R/W1C     0           0        FIFO assertion checks                              |
----------------------------------------------------------------------------------------------------
===


 *
 *                 ZIP_CONSTANTS =  ZIP Constants Register
 *
 * Description:
 *   This contains all the current implementation related parameters of the zip core in this chip.
 *

     ==============================================================
     ZIP_CONSTANTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS        RAZ      NS          NS        RESERVED                                          |
 <47:32> DEPTH     RO       0x7c00      0x7c00    Maximum search depth for compression              |
 <31:20> ONFSIZE   RO       0x200       0x200     Output near full threshold in bytes               |
 <19:8>  CTXSIZE   RO       0x600       0x600     Decompression Context size in bytes               |
 <7:1>   NS        RAZ      NS          NS        unused                                            |
 <0>     DISABLED  RO       0           0         1=zip is disabled, 0=zip is enabled               |
----------------------------------------------------------------------------------------------------
===



 *
 *                  ZIP_QUE@_BUF =  ZIP Queue Buffer Parameter Registers
 *
 * Description:
 * These registers set the buffer parameters for the instruction queues . The size of the instruction buffer
 * segments is measured in uint64s.  The pool specifies (1 of 8 free lists to be used when freeing command
 * buffer segments).  The PTR field is overwritten with the next pointer each time that the command
 * buffer segment is exhausted. When quiescent (i.e. outstanding doorbell count is 0), it is safe
 * to rewrite this register to effectively reset the command buffer state machine.  New commands
 * will then be read from the newly specified command buffer pointer.
 *

     ==============================================================
     ZIP_QUE(0..1)_BUF Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:58> NS       RAZ       NS          NS       RESERVED                                           |
 <57:49> DWB      R/W       0           0        Number of DontWriteBacks                           |
 <48:46> POOL     R/W       0           0        Free list used to free command buffer segments     |
 <45:33> SIZE     R/W       0           0        Number of uint64s per command buffer segment       |
 <32:0>  PTR      R/W       0           0        Initial command buffer pointer[39:7] (128B-aligned)|
----------------------------------------------------------------------------------------------------
===


 *
 *                  ZIP_QUE@_MAP =  ZIP Queue Mapping Registers
 *
 * Description:
 *  These registers control how each instruction queue maps to 2 zip cores.
 *  Bit[0] corresponds to zip core 0 and bit[1] corresponds to zip core 1.
 *  A "1" means instructions from the queue can be served by the corresponding zip core.
 *

     ==============================================================
     ZIP_QUE(0..1)_MAP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2> NS       RAZ       NS          NS       RESERVED                                            |
 <1:0>  ZCE      R/W       3           3        Zip Core Enable                                     |
                                                Controls the logical instruction queue can be       |
                                                serviced by which zip core. Setting ZCE==0          |
                                                effectively disables the queue from being served    |
                                                (however the instruction can still be fetched).     |
                                                ZCE[1]=1, zip core 1 can serve the queue.           |
                                                ZCE[0]=1, zip core 0 can serve the queue.           |
----------------------------------------------------------------------------------------------------
===


 *
 *                  ZIP_QUE_ENA =  ZIP Queue Enable Register
 *
 * Description:
 *    If a queue is disabled, ZIP_CTL will stop fetching instructions from the queue.
 *

     ==============================================================
     ZIP_QUE_ENA Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ       NS          NS       RESERVED                                           |
 <1:0>   ENA      R/W       3           3        Enables the logical instruction queues.            |
                                                 1: Queue is enabled. 0: Queue is disabled          |
                                                 ENA[1]=1 enables queue 1                           |
                                                 ENA[0]=1 enables queue 0                           |
----------------------------------------------------------------------------------------------------
===


 *
 *                  ZIP_QUE_PRI =  ZIP Queue Priority Register
 *
 * Description:
 *   This registers defines the priority between instruction queue 1 and instruction queue 0.
 *   Bit[0] corresponds to queue 0 and bit[1] corresponds to queue 1. A "1" means high priority.
 *

     ==============================================================
     ZIP_QUE_PRI Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ       NS          NS       RESERVED                                           |
 <1:0>   PRI      R/W       0           0        Priority                                           |
                                                 2'b10: Queue 1 has higher priority.                |
                                                 2'b01: Queue 0 has higher priority.                |
                                                 2'b11,2'b00: round robin                           |
----------------------------------------------------------------------------------------------------
===

 *
 *                  ZIP_CTL_BIST_STATUS =  ZIP CONTROL Bist Status Register
 *
 * Description:
 *   This register has the bist status of memories in zip_ctl (Instruction Buffer, G/S Pointer Fifo, Input Data Buffer,
 *   Output Data Buffers).
 *   Each bit is the bist result of an individual memory (per bit, 0=pass and 1=fail).
 *

     ==============================================================
     ZIP_CTL_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS        RAZ       NS          NS       RESERVED                                          |
 <6:0>   BSTATUS   RO        X           0        BIST result of the memories                       |
----------------------------------------------------------------------------------------------------
===


 *
 *                  ZIP_CORE_BIST_STATUS =  ZIP CORE Bist Status Registers
 *
 * Description:
 *   Those register have the bist status of memories in zip cores.
 *   Each bit is the bist result of an individual memory (per bit, 0=pass and 1=fail).
 *

     ==============================================================
     ZIP_CORE(0..1)_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:53> NS        RAZ       NS          NS       RESERVED                                             |
 <52:0>  BSTATUS   RO        X           0        BIST result of the ZIP_CORE memories                 |
----------------------------------------------------------------------------------------------------
===

 *
 *                  ZIP_CTL_CFG =  ZIP Controller Configuration Register
 *
 * Description:
 * This register controls the behavior zip dma engine. It is recommended to kept those field in the default values for normal
 * operation. Changing the values of the fields may be useful for diagnostics.
 *

     ==============================================================
     ZIP_CTL_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:28> NS       RAZ       NS         0       RESERVED                                               |
 <27>    NS       RAZ       NS         0       RESERVED                                               |
 <26:24> ILDF     R/W       4          4       Instruction Load Command FIFO Credits <= 4             |
 <23:22> NS       RAZ       NS         0       RESERVED                                               |
 <21:20> IPRF     R/W       2          2       Instruction Page Return Cmd FIFO Credits <= 2          |
 <19>    NS       RAZ       NS         0       RESERVED                                               |
 <18:16> GSTF     R/W       4          4       G/S Tag FIFO Credits <= 4                              |
 <15>    NS       RAZ       NS         0       RESERVED                                               |
 <14:12> STCF     R/W       4          4       Store Command FIFO Credits <= 4                        |
 <11>    NS       RAZ       NS         0       RESERVED                                               |
 <10:8>  LDF      R/W       4          4       Load Cmd FIFO Credits <= 4                             |
 <7:6>   NS       RAZ       NS         0       RESERVED                                               |
 <5:4>   WKQF     R/W       2          2       WorkQueue FIFO Credits <= 2                            |
 <3:2>   NS       RAZ       NS         0       RESERVED                                               |
 <1>     BUSY     RO        0          NS      1: ZIP system is busy; 0: ZIP system is idle.          |
 <0>     LMOD     R/W       0          0       Legacy Mode.                                           |
----------------------------------------------------------------------------------------------------
===


 *
 *                 ZIP_ECC_CTL =  ZIP ECC Control Register
 *
 * Description:
 *   This register enables ECC for each individual internal memory that requires ECC. For debug purpose, it can also
 *   control 1 or 2 bits be flipped in the ECC data.
 *

     ==============================================================
     ZIP_ECC_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:34>  NS        RAZ      NS          NS      RESERVED                                           |
 <33:32>  IBGE      R/W      0           0       controls instruction buffer flip syndrome          |
                                                  2'b00       : No Error Generation                 |
                                                  2'b10, 2'b01: Flip 1 bit                          |
                                                  2'b11       : Flip 2 bits                         |
 <31:1>   NS         RAZ      NS          NS      RESERVED                                          |
 <0>      IBEN       R/W      1           1       1: ECC Enabled for instruction buffer             |
                                                  0: ECC Disabled for instruction buffer            |
----------------------------------------------------------------------------------------------------
===


 *
 *                 ZIP_INT_REG =  ZIP Interrupt Status Register
 *
 * Description:
 *   This registers contains the status of all the interrupt source. An interrupt will be generated only when
 *   the corresponding interrupt source is enabled in ZIP_INT_ENA.
 *

     ==============================================================
     ZIP_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS        RAZ      NS          NS        RESERVED                                          |
 <9>     DOORBELL1 R/W1C    0           0         Doorbell 1 count has overflowed                   |
 <8>     DOORBELL0 R/W1C    0           0         Doorbell 0 count has overflowed                   |
 <7:3>   NS        RAZ      NS          0         RESERVED                                          |
 <2>     IBDBE     R/W1C    0           0         IBUF Double Bit Error                             |
 <1>     IBSBE     R/W1C    0           0         IBUF Single Bit Error                             |
 <0>     FIFE      RO       0           0         FIFO errors and the detailed status is in         |
                                                  ZIP_DEBUG0                                        |
----------------------------------------------------------------------------------------------------
===


 *
 *                 ZIP_INT_ENA =  ZIP Interrupt Enable Register
 *
 * Description:
 *   Only when an interrupt source is enabled, an interrupt can be fired.
 *   When a bit is set to 1, the corresponding interrupt is enabled.
 *

     ==============================================================
     ZIP_INT_ENA Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS        RAZ      NS          NS        RESERVED                                          |
 <9>     DOORBELL1 R/W      0           0         Enable for Doorbell 1 count overflow              |
 <8>     DOORBELL0 R/W      0           0         Enable for Doorbell 0 count overflow              |
 <7:3>   NS        RAZ      NS          0         RESERVED                                          |
 <2>     IBDBE     R/W      0           0         Enable for IBUF Double Bit Error                  |
 <1>     IBSBE     R/W      0           0         Enable for IBUF Single Bit Error                  |
 <0>     FIFE      R/W      0           0         Enable for FIFO errors                            |
----------------------------------------------------------------------------------------------------
===


 *
 *                 ZIP_QUE@_ECC_ERR_STA =  ZIP Queue ECC ERROR STATUS Register
 *
 * Description:
 *   This register contains the first ECC SBE/DBE status for the instruction buffer of a given zip instruction queue.
 *
 *

     ==============================================================
     ZIP_QUE(0..1)_ECC_ERR_STA Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:35> NS        RAZ      NS          NS        RESERVED                                          |
 <34:32> WNUM      RO       0           0         Index of the first IWORD that DBE happened        |
                                                  (Valid when ZIP_INT_REG[IBDBE] or [IBSBE] is set).|
 <31:0>  INUM      RO       0           0         Index of the first instruction that DBE happened  |
                                                  (Valid when ZIP_INT_REG[IBDBE] or [IBSBE] is set).|
----------------------------------------------------------------------------------------------------
===

 *
 *                  ZIP_DBG_QUE@_STA =  ZIP Queue Status Registers
 *
 * Description:
 * This register reflects status of the zip instruction queue.
 * This register is only for debug use.
 *

     ==============================================================
     ZIP_DBG_QUE(0..1)_STA Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    BUSY     RO       0           NS        Queue State: 1 - Queue is busy; 0 - Queue is idle  |
 <62:52> NS       RAZ      NS          NS        RESERVED                                           |
 <51:32> CDBC     RO       0           NS        Current DoorBell Counter                           |
 <31:0>  NII      RO       0           NS        Number of instructions issued from this queue.     |
                                                 Reset to 0 when ZIP_QUEn_BUF is written.           |
----------------------------------------------------------------------------------------------------
===

 *
 *                  ZIP_DBG_CORE@_INST =  ZIP Core Current Instruction Registers
 *
 * Description:
 * This register reflects the status of the current instruction that zip core is executing/ has executed.
 * This register is only for debug use.
 *

     ==============================================================
     ZIP_DBG_CORE(0..1)_INST Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    BUSY     RO       0           NS        Core State: 1 - Core is busy; 0 - Core is idle     |
 <62:33> NS       RAZ      NS          NS        RESERVED                                           |
 <32>    QID      RO       0           NS        Queue Index of instruction executed (BUSY=0) or    |
                                                 being executed (BUSY=1) on this core               |
 <31:0>  IID      RO       0           NS        Instruction Index executed (BUSY=0) or being       |
                                                 executed (BUSY=1) on this core                     |
----------------------------------------------------------------------------------------------------
===

 *
 *                  ZIP_DBG_CORE@_STA =  ZIP Core Status Registers
 *
 * Description:
 * These register reflect the status of the zip cores.
 * This register is only for debug use.
 *

     ==============================================================
     ZIP_DBG_CORE(0..1)_STA Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    BUSY     RO       0           NS        Core State: 1 - Core is busy; 0 - Core is idle     |
 <62:37> NS       RAZ      NS          NS        RESERVED                                           |
 <36:32> IST      RO       0           NS        State of current instruction is executing          |
 <31:0>  NIE      RO       0           NS        Number of instructions executed on this core       |
----------------------------------------------------------------------------------------------------
===



CSR                            Address            CSR Type     Address            CSR_Type
------------------------------------------------------------------------------------------
AGL_GMX_BAD_REG                0x00011800E0000518  RSL
AGL_GMX_BIST                   0x00011800E0000400  RSL
AGL_GMX_PRT0_CFG               0x00011800E0000010  RSL
AGL_GMX_RX0_ADR_CAM0           0x00011800E0000180  RSL
AGL_GMX_RX0_ADR_CAM1           0x00011800E0000188  RSL
AGL_GMX_RX0_ADR_CAM2           0x00011800E0000190  RSL
AGL_GMX_RX0_ADR_CAM3           0x00011800E0000198  RSL
AGL_GMX_RX0_ADR_CAM4           0x00011800E00001A0  RSL
AGL_GMX_RX0_ADR_CAM5           0x00011800E00001A8  RSL
AGL_GMX_RX0_ADR_CAM_EN         0x00011800E0000108  RSL
AGL_GMX_RX0_ADR_CTL            0x00011800E0000100  RSL
AGL_GMX_RX0_DECISION           0x00011800E0000040  RSL
AGL_GMX_RX0_FRM_CHK            0x00011800E0000020  RSL
AGL_GMX_RX0_FRM_CTL            0x00011800E0000018  RSL
AGL_GMX_RX0_FRM_MAX            0x00011800E0000030  RSL
AGL_GMX_RX0_FRM_MIN            0x00011800E0000028  RSL
AGL_GMX_RX0_IFG                0x00011800E0000058  RSL
AGL_GMX_RX0_INT_EN             0x00011800E0000008  RSL
AGL_GMX_RX0_INT_REG            0x00011800E0000000  RSL
AGL_GMX_RX0_JABBER             0x00011800E0000038  RSL
AGL_GMX_RX0_PAUSE_DROP_TIME    0x00011800E0000068  RSL
AGL_GMX_RX0_RX_INBND           0x00011800E0000060  RSL
AGL_GMX_RX0_STATS_CTL          0x00011800E0000050  RSL
AGL_GMX_RX0_STATS_OCTS         0x00011800E0000088  RSL
AGL_GMX_RX0_STATS_OCTS_CTL     0x00011800E0000098  RSL
AGL_GMX_RX0_STATS_OCTS_DMAC    0x00011800E00000A8  RSL
AGL_GMX_RX0_STATS_OCTS_DRP     0x00011800E00000B8  RSL
AGL_GMX_RX0_STATS_PKTS         0x00011800E0000080  RSL
AGL_GMX_RX0_STATS_PKTS_BAD     0x00011800E00000C0  RSL
AGL_GMX_RX0_STATS_PKTS_CTL     0x00011800E0000090  RSL
AGL_GMX_RX0_STATS_PKTS_DMAC    0x00011800E00000A0  RSL
AGL_GMX_RX0_STATS_PKTS_DRP     0x00011800E00000B0  RSL
AGL_GMX_RX0_UDD_SKP            0x00011800E0000048  RSL
AGL_GMX_RX_BP_DROP0            0x00011800E0000420  RSL
AGL_GMX_RX_BP_OFF0             0x00011800E0000460  RSL
AGL_GMX_RX_BP_ON0              0x00011800E0000440  RSL
AGL_GMX_RX_PRT_INFO            0x00011800E00004E8  RSL
AGL_GMX_RX_TX_STATUS           0x00011800E00007E8  RSL
AGL_GMX_SMAC0                  0x00011800E0000230  RSL
AGL_GMX_STAT_BP                0x00011800E0000520  RSL
AGL_GMX_TX0_APPEND             0x00011800E0000218  RSL
AGL_GMX_TX0_CLK                0x00011800E0000208  RSL
AGL_GMX_TX0_CTL                0x00011800E0000270  RSL
AGL_GMX_TX0_MIN_PKT            0x00011800E0000240  RSL
AGL_GMX_TX0_PAUSE_PKT_INTERVAL 0x00011800E0000248  RSL
AGL_GMX_TX0_PAUSE_PKT_TIME     0x00011800E0000238  RSL
AGL_GMX_TX0_PAUSE_TOGO         0x00011800E0000258  RSL
AGL_GMX_TX0_PAUSE_ZERO         0x00011800E0000260  RSL
AGL_GMX_TX0_SOFT_PAUSE         0x00011800E0000250  RSL
AGL_GMX_TX0_STAT0              0x00011800E0000280  RSL
AGL_GMX_TX0_STAT1              0x00011800E0000288  RSL
AGL_GMX_TX0_STAT2              0x00011800E0000290  RSL
AGL_GMX_TX0_STAT3              0x00011800E0000298  RSL
AGL_GMX_TX0_STAT4              0x00011800E00002A0  RSL
AGL_GMX_TX0_STAT5              0x00011800E00002A8  RSL
AGL_GMX_TX0_STAT6              0x00011800E00002B0  RSL
AGL_GMX_TX0_STAT7              0x00011800E00002B8  RSL
AGL_GMX_TX0_STAT8              0x00011800E00002C0  RSL
AGL_GMX_TX0_STAT9              0x00011800E00002C8  RSL
AGL_GMX_TX0_STATS_CTL          0x00011800E0000268  RSL
AGL_GMX_TX0_THRESH             0x00011800E0000210  RSL
AGL_GMX_TX_BP                  0x00011800E00004D0  RSL
AGL_GMX_TX_COL_ATTEMPT         0x00011800E0000498  RSL
AGL_GMX_TX_IFG                 0x00011800E0000488  RSL
AGL_GMX_TX_INT_EN              0x00011800E0000508  RSL
AGL_GMX_TX_INT_REG             0x00011800E0000500  RSL
AGL_GMX_TX_JAM                 0x00011800E0000490  RSL
AGL_GMX_TX_LFSR                0x00011800E00004F8  RSL
AGL_GMX_TX_OVR_BP              0x00011800E00004C8  RSL
AGL_GMX_TX_PAUSE_PKT_DMAC      0x00011800E00004A0  RSL
AGL_GMX_TX_PAUSE_PKT_TYPE      0x00011800E00004A8  RSL
AGL_PRT0_CTL                   0x00011800E0002000  RSL
CIU2_ACK_IO0_INT               0x00010701080C0800  NCB
CIU2_ACK_IO1_INT               0x00010701082C0800  NCB
CIU2_ACK_PP0_IP2               0x00010701000C0000  NCB
CIU2_ACK_PP0_IP3               0x00010701000C0200  NCB
CIU2_ACK_PP0_IP4               0x00010701000C0400  NCB
CIU2_ACK_PP1_IP2               0x00010701002C0000  NCB
CIU2_ACK_PP1_IP3               0x00010701002C0200  NCB
CIU2_ACK_PP1_IP4               0x00010701002C0400  NCB
CIU2_ACK_PP2_IP2               0x00010701004C0000  NCB
CIU2_ACK_PP2_IP3               0x00010701004C0200  NCB
CIU2_ACK_PP2_IP4               0x00010701004C0400  NCB
CIU2_ACK_PP3_IP2               0x00010701006C0000  NCB
CIU2_ACK_PP3_IP3               0x00010701006C0200  NCB
CIU2_ACK_PP3_IP4               0x00010701006C0400  NCB
CIU2_ACK_PP4_IP2               0x00010701008C0000  NCB
CIU2_ACK_PP4_IP3               0x00010701008C0200  NCB
CIU2_ACK_PP4_IP4               0x00010701008C0400  NCB
CIU2_ACK_PP5_IP2               0x0001070100AC0000  NCB
CIU2_ACK_PP5_IP3               0x0001070100AC0200  NCB
CIU2_ACK_PP5_IP4               0x0001070100AC0400  NCB
CIU2_ACK_PP6_IP2               0x0001070100CC0000  NCB
CIU2_ACK_PP6_IP3               0x0001070100CC0200  NCB
CIU2_ACK_PP6_IP4               0x0001070100CC0400  NCB
CIU2_ACK_PP7_IP2               0x0001070100EC0000  NCB
CIU2_ACK_PP7_IP3               0x0001070100EC0200  NCB
CIU2_ACK_PP7_IP4               0x0001070100EC0400  NCB
CIU2_ACK_PP8_IP2               0x00010701010C0000  NCB
CIU2_ACK_PP8_IP3               0x00010701010C0200  NCB
CIU2_ACK_PP8_IP4               0x00010701010C0400  NCB
CIU2_ACK_PP9_IP2               0x00010701012C0000  NCB
CIU2_ACK_PP9_IP3               0x00010701012C0200  NCB
CIU2_ACK_PP9_IP4               0x00010701012C0400  NCB
CIU2_ACK_PP10_IP2              0x00010701014C0000  NCB
CIU2_ACK_PP10_IP3              0x00010701014C0200  NCB
CIU2_ACK_PP10_IP4              0x00010701014C0400  NCB
CIU2_ACK_PP11_IP2              0x00010701016C0000  NCB
CIU2_ACK_PP11_IP3              0x00010701016C0200  NCB
CIU2_ACK_PP11_IP4              0x00010701016C0400  NCB
CIU2_ACK_PP12_IP2              0x00010701018C0000  NCB
CIU2_ACK_PP12_IP3              0x00010701018C0200  NCB
CIU2_ACK_PP12_IP4              0x00010701018C0400  NCB
CIU2_ACK_PP13_IP2              0x0001070101AC0000  NCB
CIU2_ACK_PP13_IP3              0x0001070101AC0200  NCB
CIU2_ACK_PP13_IP4              0x0001070101AC0400  NCB
CIU2_ACK_PP14_IP2              0x0001070101CC0000  NCB
CIU2_ACK_PP14_IP3              0x0001070101CC0200  NCB
CIU2_ACK_PP14_IP4              0x0001070101CC0400  NCB
CIU2_ACK_PP15_IP2              0x0001070101EC0000  NCB
CIU2_ACK_PP15_IP3              0x0001070101EC0200  NCB
CIU2_ACK_PP15_IP4              0x0001070101EC0400  NCB
CIU2_ACK_PP16_IP2              0x00010701020C0000  NCB
CIU2_ACK_PP16_IP3              0x00010701020C0200  NCB
CIU2_ACK_PP16_IP4              0x00010701020C0400  NCB
CIU2_ACK_PP17_IP2              0x00010701022C0000  NCB
CIU2_ACK_PP17_IP3              0x00010701022C0200  NCB
CIU2_ACK_PP17_IP4              0x00010701022C0400  NCB
CIU2_ACK_PP18_IP2              0x00010701024C0000  NCB
CIU2_ACK_PP18_IP3              0x00010701024C0200  NCB
CIU2_ACK_PP18_IP4              0x00010701024C0400  NCB
CIU2_ACK_PP19_IP2              0x00010701026C0000  NCB
CIU2_ACK_PP19_IP3              0x00010701026C0200  NCB
CIU2_ACK_PP19_IP4              0x00010701026C0400  NCB
CIU2_ACK_PP20_IP2              0x00010701028C0000  NCB
CIU2_ACK_PP20_IP3              0x00010701028C0200  NCB
CIU2_ACK_PP20_IP4              0x00010701028C0400  NCB
CIU2_ACK_PP21_IP2              0x0001070102AC0000  NCB
CIU2_ACK_PP21_IP3              0x0001070102AC0200  NCB
CIU2_ACK_PP21_IP4              0x0001070102AC0400  NCB
CIU2_ACK_PP22_IP2              0x0001070102CC0000  NCB
CIU2_ACK_PP22_IP3              0x0001070102CC0200  NCB
CIU2_ACK_PP22_IP4              0x0001070102CC0400  NCB
CIU2_ACK_PP23_IP2              0x0001070102EC0000  NCB
CIU2_ACK_PP23_IP3              0x0001070102EC0200  NCB
CIU2_ACK_PP23_IP4              0x0001070102EC0400  NCB
CIU2_ACK_PP24_IP2              0x00010701030C0000  NCB
CIU2_ACK_PP24_IP3              0x00010701030C0200  NCB
CIU2_ACK_PP24_IP4              0x00010701030C0400  NCB
CIU2_ACK_PP25_IP2              0x00010701032C0000  NCB
CIU2_ACK_PP25_IP3              0x00010701032C0200  NCB
CIU2_ACK_PP25_IP4              0x00010701032C0400  NCB
CIU2_ACK_PP26_IP2              0x00010701034C0000  NCB
CIU2_ACK_PP26_IP3              0x00010701034C0200  NCB
CIU2_ACK_PP26_IP4              0x00010701034C0400  NCB
CIU2_ACK_PP27_IP2              0x00010701036C0000  NCB
CIU2_ACK_PP27_IP3              0x00010701036C0200  NCB
CIU2_ACK_PP27_IP4              0x00010701036C0400  NCB
CIU2_ACK_PP28_IP2              0x00010701038C0000  NCB
CIU2_ACK_PP28_IP3              0x00010701038C0200  NCB
CIU2_ACK_PP28_IP4              0x00010701038C0400  NCB
CIU2_ACK_PP29_IP2              0x0001070103AC0000  NCB
CIU2_ACK_PP29_IP3              0x0001070103AC0200  NCB
CIU2_ACK_PP29_IP4              0x0001070103AC0400  NCB
CIU2_ACK_PP30_IP2              0x0001070103CC0000  NCB
CIU2_ACK_PP30_IP3              0x0001070103CC0200  NCB
CIU2_ACK_PP30_IP4              0x0001070103CC0400  NCB
CIU2_ACK_PP31_IP2              0x0001070103EC0000  NCB
CIU2_ACK_PP31_IP3              0x0001070103EC0200  NCB
CIU2_ACK_PP31_IP4              0x0001070103EC0400  NCB
CIU2_EN_IO0_INT_GPIO           0x0001070108097800  NCB
CIU2_EN_IO0_INT_GPIO_W1C       0x00010701080B7800  NCB
CIU2_EN_IO0_INT_GPIO_W1S       0x00010701080A7800  NCB
CIU2_EN_IO0_INT_IO             0x0001070108094800  NCB
CIU2_EN_IO0_INT_IO_W1C         0x00010701080B4800  NCB
CIU2_EN_IO0_INT_IO_W1S         0x00010701080A4800  NCB
CIU2_EN_IO0_INT_MBOX           0x0001070108098800  NCB
CIU2_EN_IO0_INT_MBOX_W1C       0x00010701080B8800  NCB
CIU2_EN_IO0_INT_MBOX_W1S       0x00010701080A8800  NCB
CIU2_EN_IO0_INT_MEM            0x0001070108095800  NCB
CIU2_EN_IO0_INT_MEM_W1C        0x00010701080B5800  NCB
CIU2_EN_IO0_INT_MEM_W1S        0x00010701080A5800  NCB
CIU2_EN_IO0_INT_MIO            0x0001070108093800  NCB
CIU2_EN_IO0_INT_MIO_W1C        0x00010701080B3800  NCB
CIU2_EN_IO0_INT_MIO_W1S        0x00010701080A3800  NCB
CIU2_EN_IO0_INT_PKT            0x0001070108096800  NCB
CIU2_EN_IO0_INT_PKT_W1C        0x00010701080B6800  NCB
CIU2_EN_IO0_INT_PKT_W1S        0x00010701080A6800  NCB
CIU2_EN_IO0_INT_RML            0x0001070108092800  NCB
CIU2_EN_IO0_INT_RML_W1C        0x00010701080B2800  NCB
CIU2_EN_IO0_INT_RML_W1S        0x00010701080A2800  NCB
CIU2_EN_IO0_INT_WDOG           0x0001070108091800  NCB
CIU2_EN_IO0_INT_WDOG_W1C       0x00010701080B1800  NCB
CIU2_EN_IO0_INT_WDOG_W1S       0x00010701080A1800  NCB
CIU2_EN_IO0_INT_WRKQ           0x0001070108090800  NCB
CIU2_EN_IO0_INT_WRKQ_W1C       0x00010701080B0800  NCB
CIU2_EN_IO0_INT_WRKQ_W1S       0x00010701080A0800  NCB
CIU2_EN_IO1_INT_GPIO           0x0001070108297800  NCB
CIU2_EN_IO1_INT_GPIO_W1C       0x00010701082B7800  NCB
CIU2_EN_IO1_INT_GPIO_W1S       0x00010701082A7800  NCB
CIU2_EN_IO1_INT_IO             0x0001070108294800  NCB
CIU2_EN_IO1_INT_IO_W1C         0x00010701082B4800  NCB
CIU2_EN_IO1_INT_IO_W1S         0x00010701082A4800  NCB
CIU2_EN_IO1_INT_MBOX           0x0001070108298800  NCB
CIU2_EN_IO1_INT_MBOX_W1C       0x00010701082B8800  NCB
CIU2_EN_IO1_INT_MBOX_W1S       0x00010701082A8800  NCB
CIU2_EN_IO1_INT_MEM            0x0001070108295800  NCB
CIU2_EN_IO1_INT_MEM_W1C        0x00010701082B5800  NCB
CIU2_EN_IO1_INT_MEM_W1S        0x00010701082A5800  NCB
CIU2_EN_IO1_INT_MIO            0x0001070108293800  NCB
CIU2_EN_IO1_INT_MIO_W1C        0x00010701082B3800  NCB
CIU2_EN_IO1_INT_MIO_W1S        0x00010701082A3800  NCB
CIU2_EN_IO1_INT_PKT            0x0001070108296800  NCB
CIU2_EN_IO1_INT_PKT_W1C        0x00010701082B6800  NCB
CIU2_EN_IO1_INT_PKT_W1S        0x00010701082A6800  NCB
CIU2_EN_IO1_INT_RML            0x0001070108292800  NCB
CIU2_EN_IO1_INT_RML_W1C        0x00010701082B2800  NCB
CIU2_EN_IO1_INT_RML_W1S        0x00010701082A2800  NCB
CIU2_EN_IO1_INT_WDOG           0x0001070108291800  NCB
CIU2_EN_IO1_INT_WDOG_W1C       0x00010701082B1800  NCB
CIU2_EN_IO1_INT_WDOG_W1S       0x00010701082A1800  NCB
CIU2_EN_IO1_INT_WRKQ           0x0001070108290800  NCB
CIU2_EN_IO1_INT_WRKQ_W1C       0x00010701082B0800  NCB
CIU2_EN_IO1_INT_WRKQ_W1S       0x00010701082A0800  NCB
CIU2_EN_PP0_IP2_GPIO           0x0001070100097000  NCB
CIU2_EN_PP0_IP2_GPIO_W1C       0x00010701000B7000  NCB
CIU2_EN_PP0_IP2_GPIO_W1S       0x00010701000A7000  NCB
CIU2_EN_PP0_IP2_IO             0x0001070100094000  NCB
CIU2_EN_PP0_IP2_IO_W1C         0x00010701000B4000  NCB
CIU2_EN_PP0_IP2_IO_W1S         0x00010701000A4000  NCB
CIU2_EN_PP0_IP2_MBOX           0x0001070100098000  NCB
CIU2_EN_PP0_IP2_MBOX_W1C       0x00010701000B8000  NCB
CIU2_EN_PP0_IP2_MBOX_W1S       0x00010701000A8000  NCB
CIU2_EN_PP0_IP2_MEM            0x0001070100095000  NCB
CIU2_EN_PP0_IP2_MEM_W1C        0x00010701000B5000  NCB
CIU2_EN_PP0_IP2_MEM_W1S        0x00010701000A5000  NCB
CIU2_EN_PP0_IP2_MIO            0x0001070100093000  NCB
CIU2_EN_PP0_IP2_MIO_W1C        0x00010701000B3000  NCB
CIU2_EN_PP0_IP2_MIO_W1S        0x00010701000A3000  NCB
CIU2_EN_PP0_IP2_PKT            0x0001070100096000  NCB
CIU2_EN_PP0_IP2_PKT_W1C        0x00010701000B6000  NCB
CIU2_EN_PP0_IP2_PKT_W1S        0x00010701000A6000  NCB
CIU2_EN_PP0_IP2_RML            0x0001070100092000  NCB
CIU2_EN_PP0_IP2_RML_W1C        0x00010701000B2000  NCB
CIU2_EN_PP0_IP2_RML_W1S        0x00010701000A2000  NCB
CIU2_EN_PP0_IP2_WDOG           0x0001070100091000  NCB
CIU2_EN_PP0_IP2_WDOG_W1C       0x00010701000B1000  NCB
CIU2_EN_PP0_IP2_WDOG_W1S       0x00010701000A1000  NCB
CIU2_EN_PP0_IP2_WRKQ           0x0001070100090000  NCB
CIU2_EN_PP0_IP2_WRKQ_W1C       0x00010701000B0000  NCB
CIU2_EN_PP0_IP2_WRKQ_W1S       0x00010701000A0000  NCB
CIU2_EN_PP0_IP3_GPIO           0x0001070100097200  NCB
CIU2_EN_PP0_IP3_GPIO_W1C       0x00010701000B7200  NCB
CIU2_EN_PP0_IP3_GPIO_W1S       0x00010701000A7200  NCB
CIU2_EN_PP0_IP3_IO             0x0001070100094200  NCB
CIU2_EN_PP0_IP3_IO_W1C         0x00010701000B4200  NCB
CIU2_EN_PP0_IP3_IO_W1S         0x00010701000A4200  NCB
CIU2_EN_PP0_IP3_MBOX           0x0001070100098200  NCB
CIU2_EN_PP0_IP3_MBOX_W1C       0x00010701000B8200  NCB
CIU2_EN_PP0_IP3_MBOX_W1S       0x00010701000A8200  NCB
CIU2_EN_PP0_IP3_MEM            0x0001070100095200  NCB
CIU2_EN_PP0_IP3_MEM_W1C        0x00010701000B5200  NCB
CIU2_EN_PP0_IP3_MEM_W1S        0x00010701000A5200  NCB
CIU2_EN_PP0_IP3_MIO            0x0001070100093200  NCB
CIU2_EN_PP0_IP3_MIO_W1C        0x00010701000B3200  NCB
CIU2_EN_PP0_IP3_MIO_W1S        0x00010701000A3200  NCB
CIU2_EN_PP0_IP3_PKT            0x0001070100096200  NCB
CIU2_EN_PP0_IP3_PKT_W1C        0x00010701000B6200  NCB
CIU2_EN_PP0_IP3_PKT_W1S        0x00010701000A6200  NCB
CIU2_EN_PP0_IP3_RML            0x0001070100092200  NCB
CIU2_EN_PP0_IP3_RML_W1C        0x00010701000B2200  NCB
CIU2_EN_PP0_IP3_RML_W1S        0x00010701000A2200  NCB
CIU2_EN_PP0_IP3_WDOG           0x0001070100091200  NCB
CIU2_EN_PP0_IP3_WDOG_W1C       0x00010701000B1200  NCB
CIU2_EN_PP0_IP3_WDOG_W1S       0x00010701000A1200  NCB
CIU2_EN_PP0_IP3_WRKQ           0x0001070100090200  NCB
CIU2_EN_PP0_IP3_WRKQ_W1C       0x00010701000B0200  NCB
CIU2_EN_PP0_IP3_WRKQ_W1S       0x00010701000A0200  NCB
CIU2_EN_PP0_IP4_GPIO           0x0001070100097400  NCB
CIU2_EN_PP0_IP4_GPIO_W1C       0x00010701000B7400  NCB
CIU2_EN_PP0_IP4_GPIO_W1S       0x00010701000A7400  NCB
CIU2_EN_PP0_IP4_IO             0x0001070100094400  NCB
CIU2_EN_PP0_IP4_IO_W1C         0x00010701000B4400  NCB
CIU2_EN_PP0_IP4_IO_W1S         0x00010701000A4400  NCB
CIU2_EN_PP0_IP4_MBOX           0x0001070100098400  NCB
CIU2_EN_PP0_IP4_MBOX_W1C       0x00010701000B8400  NCB
CIU2_EN_PP0_IP4_MBOX_W1S       0x00010701000A8400  NCB
CIU2_EN_PP0_IP4_MEM            0x0001070100095400  NCB
CIU2_EN_PP0_IP4_MEM_W1C        0x00010701000B5400  NCB
CIU2_EN_PP0_IP4_MEM_W1S        0x00010701000A5400  NCB
CIU2_EN_PP0_IP4_MIO            0x0001070100093400  NCB
CIU2_EN_PP0_IP4_MIO_W1C        0x00010701000B3400  NCB
CIU2_EN_PP0_IP4_MIO_W1S        0x00010701000A3400  NCB
CIU2_EN_PP0_IP4_PKT            0x0001070100096400  NCB
CIU2_EN_PP0_IP4_PKT_W1C        0x00010701000B6400  NCB
CIU2_EN_PP0_IP4_PKT_W1S        0x00010701000A6400  NCB
CIU2_EN_PP0_IP4_RML            0x0001070100092400  NCB
CIU2_EN_PP0_IP4_RML_W1C        0x00010701000B2400  NCB
CIU2_EN_PP0_IP4_RML_W1S        0x00010701000A2400  NCB
CIU2_EN_PP0_IP4_WDOG           0x0001070100091400  NCB
CIU2_EN_PP0_IP4_WDOG_W1C       0x00010701000B1400  NCB
CIU2_EN_PP0_IP4_WDOG_W1S       0x00010701000A1400  NCB
CIU2_EN_PP0_IP4_WRKQ           0x0001070100090400  NCB
CIU2_EN_PP0_IP4_WRKQ_W1C       0x00010701000B0400  NCB
CIU2_EN_PP0_IP4_WRKQ_W1S       0x00010701000A0400  NCB
CIU2_EN_PP1_IP2_GPIO           0x0001070100297000  NCB
CIU2_EN_PP1_IP2_GPIO_W1C       0x00010701002B7000  NCB
CIU2_EN_PP1_IP2_GPIO_W1S       0x00010701002A7000  NCB
CIU2_EN_PP1_IP2_IO             0x0001070100294000  NCB
CIU2_EN_PP1_IP2_IO_W1C         0x00010701002B4000  NCB
CIU2_EN_PP1_IP2_IO_W1S         0x00010701002A4000  NCB
CIU2_EN_PP1_IP2_MBOX           0x0001070100298000  NCB
CIU2_EN_PP1_IP2_MBOX_W1C       0x00010701002B8000  NCB
CIU2_EN_PP1_IP2_MBOX_W1S       0x00010701002A8000  NCB
CIU2_EN_PP1_IP2_MEM            0x0001070100295000  NCB
CIU2_EN_PP1_IP2_MEM_W1C        0x00010701002B5000  NCB
CIU2_EN_PP1_IP2_MEM_W1S        0x00010701002A5000  NCB
CIU2_EN_PP1_IP2_MIO            0x0001070100293000  NCB
CIU2_EN_PP1_IP2_MIO_W1C        0x00010701002B3000  NCB
CIU2_EN_PP1_IP2_MIO_W1S        0x00010701002A3000  NCB
CIU2_EN_PP1_IP2_PKT            0x0001070100296000  NCB
CIU2_EN_PP1_IP2_PKT_W1C        0x00010701002B6000  NCB
CIU2_EN_PP1_IP2_PKT_W1S        0x00010701002A6000  NCB
CIU2_EN_PP1_IP2_RML            0x0001070100292000  NCB
CIU2_EN_PP1_IP2_RML_W1C        0x00010701002B2000  NCB
CIU2_EN_PP1_IP2_RML_W1S        0x00010701002A2000  NCB
CIU2_EN_PP1_IP2_WDOG           0x0001070100291000  NCB
CIU2_EN_PP1_IP2_WDOG_W1C       0x00010701002B1000  NCB
CIU2_EN_PP1_IP2_WDOG_W1S       0x00010701002A1000  NCB
CIU2_EN_PP1_IP2_WRKQ           0x0001070100290000  NCB
CIU2_EN_PP1_IP2_WRKQ_W1C       0x00010701002B0000  NCB
CIU2_EN_PP1_IP2_WRKQ_W1S       0x00010701002A0000  NCB
CIU2_EN_PP1_IP3_GPIO           0x0001070100297200  NCB
CIU2_EN_PP1_IP3_GPIO_W1C       0x00010701002B7200  NCB
CIU2_EN_PP1_IP3_GPIO_W1S       0x00010701002A7200  NCB
CIU2_EN_PP1_IP3_IO             0x0001070100294200  NCB
CIU2_EN_PP1_IP3_IO_W1C         0x00010701002B4200  NCB
CIU2_EN_PP1_IP3_IO_W1S         0x00010701002A4200  NCB
CIU2_EN_PP1_IP3_MBOX           0x0001070100298200  NCB
CIU2_EN_PP1_IP3_MBOX_W1C       0x00010701002B8200  NCB
CIU2_EN_PP1_IP3_MBOX_W1S       0x00010701002A8200  NCB
CIU2_EN_PP1_IP3_MEM            0x0001070100295200  NCB
CIU2_EN_PP1_IP3_MEM_W1C        0x00010701002B5200  NCB
CIU2_EN_PP1_IP3_MEM_W1S        0x00010701002A5200  NCB
CIU2_EN_PP1_IP3_MIO            0x0001070100293200  NCB
CIU2_EN_PP1_IP3_MIO_W1C        0x00010701002B3200  NCB
CIU2_EN_PP1_IP3_MIO_W1S        0x00010701002A3200  NCB
CIU2_EN_PP1_IP3_PKT            0x0001070100296200  NCB
CIU2_EN_PP1_IP3_PKT_W1C        0x00010701002B6200  NCB
CIU2_EN_PP1_IP3_PKT_W1S        0x00010701002A6200  NCB
CIU2_EN_PP1_IP3_RML            0x0001070100292200  NCB
CIU2_EN_PP1_IP3_RML_W1C        0x00010701002B2200  NCB
CIU2_EN_PP1_IP3_RML_W1S        0x00010701002A2200  NCB
CIU2_EN_PP1_IP3_WDOG           0x0001070100291200  NCB
CIU2_EN_PP1_IP3_WDOG_W1C       0x00010701002B1200  NCB
CIU2_EN_PP1_IP3_WDOG_W1S       0x00010701002A1200  NCB
CIU2_EN_PP1_IP3_WRKQ           0x0001070100290200  NCB
CIU2_EN_PP1_IP3_WRKQ_W1C       0x00010701002B0200  NCB
CIU2_EN_PP1_IP3_WRKQ_W1S       0x00010701002A0200  NCB
CIU2_EN_PP1_IP4_GPIO           0x0001070100297400  NCB
CIU2_EN_PP1_IP4_GPIO_W1C       0x00010701002B7400  NCB
CIU2_EN_PP1_IP4_GPIO_W1S       0x00010701002A7400  NCB
CIU2_EN_PP1_IP4_IO             0x0001070100294400  NCB
CIU2_EN_PP1_IP4_IO_W1C         0x00010701002B4400  NCB
CIU2_EN_PP1_IP4_IO_W1S         0x00010701002A4400  NCB
CIU2_EN_PP1_IP4_MBOX           0x0001070100298400  NCB
CIU2_EN_PP1_IP4_MBOX_W1C       0x00010701002B8400  NCB
CIU2_EN_PP1_IP4_MBOX_W1S       0x00010701002A8400  NCB
CIU2_EN_PP1_IP4_MEM            0x0001070100295400  NCB
CIU2_EN_PP1_IP4_MEM_W1C        0x00010701002B5400  NCB
CIU2_EN_PP1_IP4_MEM_W1S        0x00010701002A5400  NCB
CIU2_EN_PP1_IP4_MIO            0x0001070100293400  NCB
CIU2_EN_PP1_IP4_MIO_W1C        0x00010701002B3400  NCB
CIU2_EN_PP1_IP4_MIO_W1S        0x00010701002A3400  NCB
CIU2_EN_PP1_IP4_PKT            0x0001070100296400  NCB
CIU2_EN_PP1_IP4_PKT_W1C        0x00010701002B6400  NCB
CIU2_EN_PP1_IP4_PKT_W1S        0x00010701002A6400  NCB
CIU2_EN_PP1_IP4_RML            0x0001070100292400  NCB
CIU2_EN_PP1_IP4_RML_W1C        0x00010701002B2400  NCB
CIU2_EN_PP1_IP4_RML_W1S        0x00010701002A2400  NCB
CIU2_EN_PP1_IP4_WDOG           0x0001070100291400  NCB
CIU2_EN_PP1_IP4_WDOG_W1C       0x00010701002B1400  NCB
CIU2_EN_PP1_IP4_WDOG_W1S       0x00010701002A1400  NCB
CIU2_EN_PP1_IP4_WRKQ           0x0001070100290400  NCB
CIU2_EN_PP1_IP4_WRKQ_W1C       0x00010701002B0400  NCB
CIU2_EN_PP1_IP4_WRKQ_W1S       0x00010701002A0400  NCB
CIU2_EN_PP2_IP2_GPIO           0x0001070100497000  NCB
CIU2_EN_PP2_IP2_GPIO_W1C       0x00010701004B7000  NCB
CIU2_EN_PP2_IP2_GPIO_W1S       0x00010701004A7000  NCB
CIU2_EN_PP2_IP2_IO             0x0001070100494000  NCB
CIU2_EN_PP2_IP2_IO_W1C         0x00010701004B4000  NCB
CIU2_EN_PP2_IP2_IO_W1S         0x00010701004A4000  NCB
CIU2_EN_PP2_IP2_MBOX           0x0001070100498000  NCB
CIU2_EN_PP2_IP2_MBOX_W1C       0x00010701004B8000  NCB
CIU2_EN_PP2_IP2_MBOX_W1S       0x00010701004A8000  NCB
CIU2_EN_PP2_IP2_MEM            0x0001070100495000  NCB
CIU2_EN_PP2_IP2_MEM_W1C        0x00010701004B5000  NCB
CIU2_EN_PP2_IP2_MEM_W1S        0x00010701004A5000  NCB
CIU2_EN_PP2_IP2_MIO            0x0001070100493000  NCB
CIU2_EN_PP2_IP2_MIO_W1C        0x00010701004B3000  NCB
CIU2_EN_PP2_IP2_MIO_W1S        0x00010701004A3000  NCB
CIU2_EN_PP2_IP2_PKT            0x0001070100496000  NCB
CIU2_EN_PP2_IP2_PKT_W1C        0x00010701004B6000  NCB
CIU2_EN_PP2_IP2_PKT_W1S        0x00010701004A6000  NCB
CIU2_EN_PP2_IP2_RML            0x0001070100492000  NCB
CIU2_EN_PP2_IP2_RML_W1C        0x00010701004B2000  NCB
CIU2_EN_PP2_IP2_RML_W1S        0x00010701004A2000  NCB
CIU2_EN_PP2_IP2_WDOG           0x0001070100491000  NCB
CIU2_EN_PP2_IP2_WDOG_W1C       0x00010701004B1000  NCB
CIU2_EN_PP2_IP2_WDOG_W1S       0x00010701004A1000  NCB
CIU2_EN_PP2_IP2_WRKQ           0x0001070100490000  NCB
CIU2_EN_PP2_IP2_WRKQ_W1C       0x00010701004B0000  NCB
CIU2_EN_PP2_IP2_WRKQ_W1S       0x00010701004A0000  NCB
CIU2_EN_PP2_IP3_GPIO           0x0001070100497200  NCB
CIU2_EN_PP2_IP3_GPIO_W1C       0x00010701004B7200  NCB
CIU2_EN_PP2_IP3_GPIO_W1S       0x00010701004A7200  NCB
CIU2_EN_PP2_IP3_IO             0x0001070100494200  NCB
CIU2_EN_PP2_IP3_IO_W1C         0x00010701004B4200  NCB
CIU2_EN_PP2_IP3_IO_W1S         0x00010701004A4200  NCB
CIU2_EN_PP2_IP3_MBOX           0x0001070100498200  NCB
CIU2_EN_PP2_IP3_MBOX_W1C       0x00010701004B8200  NCB
CIU2_EN_PP2_IP3_MBOX_W1S       0x00010701004A8200  NCB
CIU2_EN_PP2_IP3_MEM            0x0001070100495200  NCB
CIU2_EN_PP2_IP3_MEM_W1C        0x00010701004B5200  NCB
CIU2_EN_PP2_IP3_MEM_W1S        0x00010701004A5200  NCB
CIU2_EN_PP2_IP3_MIO            0x0001070100493200  NCB
CIU2_EN_PP2_IP3_MIO_W1C        0x00010701004B3200  NCB
CIU2_EN_PP2_IP3_MIO_W1S        0x00010701004A3200  NCB
CIU2_EN_PP2_IP3_PKT            0x0001070100496200  NCB
CIU2_EN_PP2_IP3_PKT_W1C        0x00010701004B6200  NCB
CIU2_EN_PP2_IP3_PKT_W1S        0x00010701004A6200  NCB
CIU2_EN_PP2_IP3_RML            0x0001070100492200  NCB
CIU2_EN_PP2_IP3_RML_W1C        0x00010701004B2200  NCB
CIU2_EN_PP2_IP3_RML_W1S        0x00010701004A2200  NCB
CIU2_EN_PP2_IP3_WDOG           0x0001070100491200  NCB
CIU2_EN_PP2_IP3_WDOG_W1C       0x00010701004B1200  NCB
CIU2_EN_PP2_IP3_WDOG_W1S       0x00010701004A1200  NCB
CIU2_EN_PP2_IP3_WRKQ           0x0001070100490200  NCB
CIU2_EN_PP2_IP3_WRKQ_W1C       0x00010701004B0200  NCB
CIU2_EN_PP2_IP3_WRKQ_W1S       0x00010701004A0200  NCB
CIU2_EN_PP2_IP4_GPIO           0x0001070100497400  NCB
CIU2_EN_PP2_IP4_GPIO_W1C       0x00010701004B7400  NCB
CIU2_EN_PP2_IP4_GPIO_W1S       0x00010701004A7400  NCB
CIU2_EN_PP2_IP4_IO             0x0001070100494400  NCB
CIU2_EN_PP2_IP4_IO_W1C         0x00010701004B4400  NCB
CIU2_EN_PP2_IP4_IO_W1S         0x00010701004A4400  NCB
CIU2_EN_PP2_IP4_MBOX           0x0001070100498400  NCB
CIU2_EN_PP2_IP4_MBOX_W1C       0x00010701004B8400  NCB
CIU2_EN_PP2_IP4_MBOX_W1S       0x00010701004A8400  NCB
CIU2_EN_PP2_IP4_MEM            0x0001070100495400  NCB
CIU2_EN_PP2_IP4_MEM_W1C        0x00010701004B5400  NCB
CIU2_EN_PP2_IP4_MEM_W1S        0x00010701004A5400  NCB
CIU2_EN_PP2_IP4_MIO            0x0001070100493400  NCB
CIU2_EN_PP2_IP4_MIO_W1C        0x00010701004B3400  NCB
CIU2_EN_PP2_IP4_MIO_W1S        0x00010701004A3400  NCB
CIU2_EN_PP2_IP4_PKT            0x0001070100496400  NCB
CIU2_EN_PP2_IP4_PKT_W1C        0x00010701004B6400  NCB
CIU2_EN_PP2_IP4_PKT_W1S        0x00010701004A6400  NCB
CIU2_EN_PP2_IP4_RML            0x0001070100492400  NCB
CIU2_EN_PP2_IP4_RML_W1C        0x00010701004B2400  NCB
CIU2_EN_PP2_IP4_RML_W1S        0x00010701004A2400  NCB
CIU2_EN_PP2_IP4_WDOG           0x0001070100491400  NCB
CIU2_EN_PP2_IP4_WDOG_W1C       0x00010701004B1400  NCB
CIU2_EN_PP2_IP4_WDOG_W1S       0x00010701004A1400  NCB
CIU2_EN_PP2_IP4_WRKQ           0x0001070100490400  NCB
CIU2_EN_PP2_IP4_WRKQ_W1C       0x00010701004B0400  NCB
CIU2_EN_PP2_IP4_WRKQ_W1S       0x00010701004A0400  NCB
CIU2_EN_PP3_IP2_GPIO           0x0001070100697000  NCB
CIU2_EN_PP3_IP2_GPIO_W1C       0x00010701006B7000  NCB
CIU2_EN_PP3_IP2_GPIO_W1S       0x00010701006A7000  NCB
CIU2_EN_PP3_IP2_IO             0x0001070100694000  NCB
CIU2_EN_PP3_IP2_IO_W1C         0x00010701006B4000  NCB
CIU2_EN_PP3_IP2_IO_W1S         0x00010701006A4000  NCB
CIU2_EN_PP3_IP2_MBOX           0x0001070100698000  NCB
CIU2_EN_PP3_IP2_MBOX_W1C       0x00010701006B8000  NCB
CIU2_EN_PP3_IP2_MBOX_W1S       0x00010701006A8000  NCB
CIU2_EN_PP3_IP2_MEM            0x0001070100695000  NCB
CIU2_EN_PP3_IP2_MEM_W1C        0x00010701006B5000  NCB
CIU2_EN_PP3_IP2_MEM_W1S        0x00010701006A5000  NCB
CIU2_EN_PP3_IP2_MIO            0x0001070100693000  NCB
CIU2_EN_PP3_IP2_MIO_W1C        0x00010701006B3000  NCB
CIU2_EN_PP3_IP2_MIO_W1S        0x00010701006A3000  NCB
CIU2_EN_PP3_IP2_PKT            0x0001070100696000  NCB
CIU2_EN_PP3_IP2_PKT_W1C        0x00010701006B6000  NCB
CIU2_EN_PP3_IP2_PKT_W1S        0x00010701006A6000  NCB
CIU2_EN_PP3_IP2_RML            0x0001070100692000  NCB
CIU2_EN_PP3_IP2_RML_W1C        0x00010701006B2000  NCB
CIU2_EN_PP3_IP2_RML_W1S        0x00010701006A2000  NCB
CIU2_EN_PP3_IP2_WDOG           0x0001070100691000  NCB
CIU2_EN_PP3_IP2_WDOG_W1C       0x00010701006B1000  NCB
CIU2_EN_PP3_IP2_WDOG_W1S       0x00010701006A1000  NCB
CIU2_EN_PP3_IP2_WRKQ           0x0001070100690000  NCB
CIU2_EN_PP3_IP2_WRKQ_W1C       0x00010701006B0000  NCB
CIU2_EN_PP3_IP2_WRKQ_W1S       0x00010701006A0000  NCB
CIU2_EN_PP3_IP3_GPIO           0x0001070100697200  NCB
CIU2_EN_PP3_IP3_GPIO_W1C       0x00010701006B7200  NCB
CIU2_EN_PP3_IP3_GPIO_W1S       0x00010701006A7200  NCB
CIU2_EN_PP3_IP3_IO             0x0001070100694200  NCB
CIU2_EN_PP3_IP3_IO_W1C         0x00010701006B4200  NCB
CIU2_EN_PP3_IP3_IO_W1S         0x00010701006A4200  NCB
CIU2_EN_PP3_IP3_MBOX           0x0001070100698200  NCB
CIU2_EN_PP3_IP3_MBOX_W1C       0x00010701006B8200  NCB
CIU2_EN_PP3_IP3_MBOX_W1S       0x00010701006A8200  NCB
CIU2_EN_PP3_IP3_MEM            0x0001070100695200  NCB
CIU2_EN_PP3_IP3_MEM_W1C        0x00010701006B5200  NCB
CIU2_EN_PP3_IP3_MEM_W1S        0x00010701006A5200  NCB
CIU2_EN_PP3_IP3_MIO            0x0001070100693200  NCB
CIU2_EN_PP3_IP3_MIO_W1C        0x00010701006B3200  NCB
CIU2_EN_PP3_IP3_MIO_W1S        0x00010701006A3200  NCB
CIU2_EN_PP3_IP3_PKT            0x0001070100696200  NCB
CIU2_EN_PP3_IP3_PKT_W1C        0x00010701006B6200  NCB
CIU2_EN_PP3_IP3_PKT_W1S        0x00010701006A6200  NCB
CIU2_EN_PP3_IP3_RML            0x0001070100692200  NCB
CIU2_EN_PP3_IP3_RML_W1C        0x00010701006B2200  NCB
CIU2_EN_PP3_IP3_RML_W1S        0x00010701006A2200  NCB
CIU2_EN_PP3_IP3_WDOG           0x0001070100691200  NCB
CIU2_EN_PP3_IP3_WDOG_W1C       0x00010701006B1200  NCB
CIU2_EN_PP3_IP3_WDOG_W1S       0x00010701006A1200  NCB
CIU2_EN_PP3_IP3_WRKQ           0x0001070100690200  NCB
CIU2_EN_PP3_IP3_WRKQ_W1C       0x00010701006B0200  NCB
CIU2_EN_PP3_IP3_WRKQ_W1S       0x00010701006A0200  NCB
CIU2_EN_PP3_IP4_GPIO           0x0001070100697400  NCB
CIU2_EN_PP3_IP4_GPIO_W1C       0x00010701006B7400  NCB
CIU2_EN_PP3_IP4_GPIO_W1S       0x00010701006A7400  NCB
CIU2_EN_PP3_IP4_IO             0x0001070100694400  NCB
CIU2_EN_PP3_IP4_IO_W1C         0x00010701006B4400  NCB
CIU2_EN_PP3_IP4_IO_W1S         0x00010701006A4400  NCB
CIU2_EN_PP3_IP4_MBOX           0x0001070100698400  NCB
CIU2_EN_PP3_IP4_MBOX_W1C       0x00010701006B8400  NCB
CIU2_EN_PP3_IP4_MBOX_W1S       0x00010701006A8400  NCB
CIU2_EN_PP3_IP4_MEM            0x0001070100695400  NCB
CIU2_EN_PP3_IP4_MEM_W1C        0x00010701006B5400  NCB
CIU2_EN_PP3_IP4_MEM_W1S        0x00010701006A5400  NCB
CIU2_EN_PP3_IP4_MIO            0x0001070100693400  NCB
CIU2_EN_PP3_IP4_MIO_W1C        0x00010701006B3400  NCB
CIU2_EN_PP3_IP4_MIO_W1S        0x00010701006A3400  NCB
CIU2_EN_PP3_IP4_PKT            0x0001070100696400  NCB
CIU2_EN_PP3_IP4_PKT_W1C        0x00010701006B6400  NCB
CIU2_EN_PP3_IP4_PKT_W1S        0x00010701006A6400  NCB
CIU2_EN_PP3_IP4_RML            0x0001070100692400  NCB
CIU2_EN_PP3_IP4_RML_W1C        0x00010701006B2400  NCB
CIU2_EN_PP3_IP4_RML_W1S        0x00010701006A2400  NCB
CIU2_EN_PP3_IP4_WDOG           0x0001070100691400  NCB
CIU2_EN_PP3_IP4_WDOG_W1C       0x00010701006B1400  NCB
CIU2_EN_PP3_IP4_WDOG_W1S       0x00010701006A1400  NCB
CIU2_EN_PP3_IP4_WRKQ           0x0001070100690400  NCB
CIU2_EN_PP3_IP4_WRKQ_W1C       0x00010701006B0400  NCB
CIU2_EN_PP3_IP4_WRKQ_W1S       0x00010701006A0400  NCB
CIU2_EN_PP4_IP2_GPIO           0x0001070100897000  NCB
CIU2_EN_PP4_IP2_GPIO_W1C       0x00010701008B7000  NCB
CIU2_EN_PP4_IP2_GPIO_W1S       0x00010701008A7000  NCB
CIU2_EN_PP4_IP2_IO             0x0001070100894000  NCB
CIU2_EN_PP4_IP2_IO_W1C         0x00010701008B4000  NCB
CIU2_EN_PP4_IP2_IO_W1S         0x00010701008A4000  NCB
CIU2_EN_PP4_IP2_MBOX           0x0001070100898000  NCB
CIU2_EN_PP4_IP2_MBOX_W1C       0x00010701008B8000  NCB
CIU2_EN_PP4_IP2_MBOX_W1S       0x00010701008A8000  NCB
CIU2_EN_PP4_IP2_MEM            0x0001070100895000  NCB
CIU2_EN_PP4_IP2_MEM_W1C        0x00010701008B5000  NCB
CIU2_EN_PP4_IP2_MEM_W1S        0x00010701008A5000  NCB
CIU2_EN_PP4_IP2_MIO            0x0001070100893000  NCB
CIU2_EN_PP4_IP2_MIO_W1C        0x00010701008B3000  NCB
CIU2_EN_PP4_IP2_MIO_W1S        0x00010701008A3000  NCB
CIU2_EN_PP4_IP2_PKT            0x0001070100896000  NCB
CIU2_EN_PP4_IP2_PKT_W1C        0x00010701008B6000  NCB
CIU2_EN_PP4_IP2_PKT_W1S        0x00010701008A6000  NCB
CIU2_EN_PP4_IP2_RML            0x0001070100892000  NCB
CIU2_EN_PP4_IP2_RML_W1C        0x00010701008B2000  NCB
CIU2_EN_PP4_IP2_RML_W1S        0x00010701008A2000  NCB
CIU2_EN_PP4_IP2_WDOG           0x0001070100891000  NCB
CIU2_EN_PP4_IP2_WDOG_W1C       0x00010701008B1000  NCB
CIU2_EN_PP4_IP2_WDOG_W1S       0x00010701008A1000  NCB
CIU2_EN_PP4_IP2_WRKQ           0x0001070100890000  NCB
CIU2_EN_PP4_IP2_WRKQ_W1C       0x00010701008B0000  NCB
CIU2_EN_PP4_IP2_WRKQ_W1S       0x00010701008A0000  NCB
CIU2_EN_PP4_IP3_GPIO           0x0001070100897200  NCB
CIU2_EN_PP4_IP3_GPIO_W1C       0x00010701008B7200  NCB
CIU2_EN_PP4_IP3_GPIO_W1S       0x00010701008A7200  NCB
CIU2_EN_PP4_IP3_IO             0x0001070100894200  NCB
CIU2_EN_PP4_IP3_IO_W1C         0x00010701008B4200  NCB
CIU2_EN_PP4_IP3_IO_W1S         0x00010701008A4200  NCB
CIU2_EN_PP4_IP3_MBOX           0x0001070100898200  NCB
CIU2_EN_PP4_IP3_MBOX_W1C       0x00010701008B8200  NCB
CIU2_EN_PP4_IP3_MBOX_W1S       0x00010701008A8200  NCB
CIU2_EN_PP4_IP3_MEM            0x0001070100895200  NCB
CIU2_EN_PP4_IP3_MEM_W1C        0x00010701008B5200  NCB
CIU2_EN_PP4_IP3_MEM_W1S        0x00010701008A5200  NCB
CIU2_EN_PP4_IP3_MIO            0x0001070100893200  NCB
CIU2_EN_PP4_IP3_MIO_W1C        0x00010701008B3200  NCB
CIU2_EN_PP4_IP3_MIO_W1S        0x00010701008A3200  NCB
CIU2_EN_PP4_IP3_PKT            0x0001070100896200  NCB
CIU2_EN_PP4_IP3_PKT_W1C        0x00010701008B6200  NCB
CIU2_EN_PP4_IP3_PKT_W1S        0x00010701008A6200  NCB
CIU2_EN_PP4_IP3_RML            0x0001070100892200  NCB
CIU2_EN_PP4_IP3_RML_W1C        0x00010701008B2200  NCB
CIU2_EN_PP4_IP3_RML_W1S        0x00010701008A2200  NCB
CIU2_EN_PP4_IP3_WDOG           0x0001070100891200  NCB
CIU2_EN_PP4_IP3_WDOG_W1C       0x00010701008B1200  NCB
CIU2_EN_PP4_IP3_WDOG_W1S       0x00010701008A1200  NCB
CIU2_EN_PP4_IP3_WRKQ           0x0001070100890200  NCB
CIU2_EN_PP4_IP3_WRKQ_W1C       0x00010701008B0200  NCB
CIU2_EN_PP4_IP3_WRKQ_W1S       0x00010701008A0200  NCB
CIU2_EN_PP4_IP4_GPIO           0x0001070100897400  NCB
CIU2_EN_PP4_IP4_GPIO_W1C       0x00010701008B7400  NCB
CIU2_EN_PP4_IP4_GPIO_W1S       0x00010701008A7400  NCB
CIU2_EN_PP4_IP4_IO             0x0001070100894400  NCB
CIU2_EN_PP4_IP4_IO_W1C         0x00010701008B4400  NCB
CIU2_EN_PP4_IP4_IO_W1S         0x00010701008A4400  NCB
CIU2_EN_PP4_IP4_MBOX           0x0001070100898400  NCB
CIU2_EN_PP4_IP4_MBOX_W1C       0x00010701008B8400  NCB
CIU2_EN_PP4_IP4_MBOX_W1S       0x00010701008A8400  NCB
CIU2_EN_PP4_IP4_MEM            0x0001070100895400  NCB
CIU2_EN_PP4_IP4_MEM_W1C        0x00010701008B5400  NCB
CIU2_EN_PP4_IP4_MEM_W1S        0x00010701008A5400  NCB
CIU2_EN_PP4_IP4_MIO            0x0001070100893400  NCB
CIU2_EN_PP4_IP4_MIO_W1C        0x00010701008B3400  NCB
CIU2_EN_PP4_IP4_MIO_W1S        0x00010701008A3400  NCB
CIU2_EN_PP4_IP4_PKT            0x0001070100896400  NCB
CIU2_EN_PP4_IP4_PKT_W1C        0x00010701008B6400  NCB
CIU2_EN_PP4_IP4_PKT_W1S        0x00010701008A6400  NCB
CIU2_EN_PP4_IP4_RML            0x0001070100892400  NCB
CIU2_EN_PP4_IP4_RML_W1C        0x00010701008B2400  NCB
CIU2_EN_PP4_IP4_RML_W1S        0x00010701008A2400  NCB
CIU2_EN_PP4_IP4_WDOG           0x0001070100891400  NCB
CIU2_EN_PP4_IP4_WDOG_W1C       0x00010701008B1400  NCB
CIU2_EN_PP4_IP4_WDOG_W1S       0x00010701008A1400  NCB
CIU2_EN_PP4_IP4_WRKQ           0x0001070100890400  NCB
CIU2_EN_PP4_IP4_WRKQ_W1C       0x00010701008B0400  NCB
CIU2_EN_PP4_IP4_WRKQ_W1S       0x00010701008A0400  NCB
CIU2_EN_PP5_IP2_GPIO           0x0001070100A97000  NCB
CIU2_EN_PP5_IP2_GPIO_W1C       0x0001070100AB7000  NCB
CIU2_EN_PP5_IP2_GPIO_W1S       0x0001070100AA7000  NCB
CIU2_EN_PP5_IP2_IO             0x0001070100A94000  NCB
CIU2_EN_PP5_IP2_IO_W1C         0x0001070100AB4000  NCB
CIU2_EN_PP5_IP2_IO_W1S         0x0001070100AA4000  NCB
CIU2_EN_PP5_IP2_MBOX           0x0001070100A98000  NCB
CIU2_EN_PP5_IP2_MBOX_W1C       0x0001070100AB8000  NCB
CIU2_EN_PP5_IP2_MBOX_W1S       0x0001070100AA8000  NCB
CIU2_EN_PP5_IP2_MEM            0x0001070100A95000  NCB
CIU2_EN_PP5_IP2_MEM_W1C        0x0001070100AB5000  NCB
CIU2_EN_PP5_IP2_MEM_W1S        0x0001070100AA5000  NCB
CIU2_EN_PP5_IP2_MIO            0x0001070100A93000  NCB
CIU2_EN_PP5_IP2_MIO_W1C        0x0001070100AB3000  NCB
CIU2_EN_PP5_IP2_MIO_W1S        0x0001070100AA3000  NCB
CIU2_EN_PP5_IP2_PKT            0x0001070100A96000  NCB
CIU2_EN_PP5_IP2_PKT_W1C        0x0001070100AB6000  NCB
CIU2_EN_PP5_IP2_PKT_W1S        0x0001070100AA6000  NCB
CIU2_EN_PP5_IP2_RML            0x0001070100A92000  NCB
CIU2_EN_PP5_IP2_RML_W1C        0x0001070100AB2000  NCB
CIU2_EN_PP5_IP2_RML_W1S        0x0001070100AA2000  NCB
CIU2_EN_PP5_IP2_WDOG           0x0001070100A91000  NCB
CIU2_EN_PP5_IP2_WDOG_W1C       0x0001070100AB1000  NCB
CIU2_EN_PP5_IP2_WDOG_W1S       0x0001070100AA1000  NCB
CIU2_EN_PP5_IP2_WRKQ           0x0001070100A90000  NCB
CIU2_EN_PP5_IP2_WRKQ_W1C       0x0001070100AB0000  NCB
CIU2_EN_PP5_IP2_WRKQ_W1S       0x0001070100AA0000  NCB
CIU2_EN_PP5_IP3_GPIO           0x0001070100A97200  NCB
CIU2_EN_PP5_IP3_GPIO_W1C       0x0001070100AB7200  NCB
CIU2_EN_PP5_IP3_GPIO_W1S       0x0001070100AA7200  NCB
CIU2_EN_PP5_IP3_IO             0x0001070100A94200  NCB
CIU2_EN_PP5_IP3_IO_W1C         0x0001070100AB4200  NCB
CIU2_EN_PP5_IP3_IO_W1S         0x0001070100AA4200  NCB
CIU2_EN_PP5_IP3_MBOX           0x0001070100A98200  NCB
CIU2_EN_PP5_IP3_MBOX_W1C       0x0001070100AB8200  NCB
CIU2_EN_PP5_IP3_MBOX_W1S       0x0001070100AA8200  NCB
CIU2_EN_PP5_IP3_MEM            0x0001070100A95200  NCB
CIU2_EN_PP5_IP3_MEM_W1C        0x0001070100AB5200  NCB
CIU2_EN_PP5_IP3_MEM_W1S        0x0001070100AA5200  NCB
CIU2_EN_PP5_IP3_MIO            0x0001070100A93200  NCB
CIU2_EN_PP5_IP3_MIO_W1C        0x0001070100AB3200  NCB
CIU2_EN_PP5_IP3_MIO_W1S        0x0001070100AA3200  NCB
CIU2_EN_PP5_IP3_PKT            0x0001070100A96200  NCB
CIU2_EN_PP5_IP3_PKT_W1C        0x0001070100AB6200  NCB
CIU2_EN_PP5_IP3_PKT_W1S        0x0001070100AA6200  NCB
CIU2_EN_PP5_IP3_RML            0x0001070100A92200  NCB
CIU2_EN_PP5_IP3_RML_W1C        0x0001070100AB2200  NCB
CIU2_EN_PP5_IP3_RML_W1S        0x0001070100AA2200  NCB
CIU2_EN_PP5_IP3_WDOG           0x0001070100A91200  NCB
CIU2_EN_PP5_IP3_WDOG_W1C       0x0001070100AB1200  NCB
CIU2_EN_PP5_IP3_WDOG_W1S       0x0001070100AA1200  NCB
CIU2_EN_PP5_IP3_WRKQ           0x0001070100A90200  NCB
CIU2_EN_PP5_IP3_WRKQ_W1C       0x0001070100AB0200  NCB
CIU2_EN_PP5_IP3_WRKQ_W1S       0x0001070100AA0200  NCB
CIU2_EN_PP5_IP4_GPIO           0x0001070100A97400  NCB
CIU2_EN_PP5_IP4_GPIO_W1C       0x0001070100AB7400  NCB
CIU2_EN_PP5_IP4_GPIO_W1S       0x0001070100AA7400  NCB
CIU2_EN_PP5_IP4_IO             0x0001070100A94400  NCB
CIU2_EN_PP5_IP4_IO_W1C         0x0001070100AB4400  NCB
CIU2_EN_PP5_IP4_IO_W1S         0x0001070100AA4400  NCB
CIU2_EN_PP5_IP4_MBOX           0x0001070100A98400  NCB
CIU2_EN_PP5_IP4_MBOX_W1C       0x0001070100AB8400  NCB
CIU2_EN_PP5_IP4_MBOX_W1S       0x0001070100AA8400  NCB
CIU2_EN_PP5_IP4_MEM            0x0001070100A95400  NCB
CIU2_EN_PP5_IP4_MEM_W1C        0x0001070100AB5400  NCB
CIU2_EN_PP5_IP4_MEM_W1S        0x0001070100AA5400  NCB
CIU2_EN_PP5_IP4_MIO            0x0001070100A93400  NCB
CIU2_EN_PP5_IP4_MIO_W1C        0x0001070100AB3400  NCB
CIU2_EN_PP5_IP4_MIO_W1S        0x0001070100AA3400  NCB
CIU2_EN_PP5_IP4_PKT            0x0001070100A96400  NCB
CIU2_EN_PP5_IP4_PKT_W1C        0x0001070100AB6400  NCB
CIU2_EN_PP5_IP4_PKT_W1S        0x0001070100AA6400  NCB
CIU2_EN_PP5_IP4_RML            0x0001070100A92400  NCB
CIU2_EN_PP5_IP4_RML_W1C        0x0001070100AB2400  NCB
CIU2_EN_PP5_IP4_RML_W1S        0x0001070100AA2400  NCB
CIU2_EN_PP5_IP4_WDOG           0x0001070100A91400  NCB
CIU2_EN_PP5_IP4_WDOG_W1C       0x0001070100AB1400  NCB
CIU2_EN_PP5_IP4_WDOG_W1S       0x0001070100AA1400  NCB
CIU2_EN_PP5_IP4_WRKQ           0x0001070100A90400  NCB
CIU2_EN_PP5_IP4_WRKQ_W1C       0x0001070100AB0400  NCB
CIU2_EN_PP5_IP4_WRKQ_W1S       0x0001070100AA0400  NCB
CIU2_EN_PP6_IP2_GPIO           0x0001070100C97000  NCB
CIU2_EN_PP6_IP2_GPIO_W1C       0x0001070100CB7000  NCB
CIU2_EN_PP6_IP2_GPIO_W1S       0x0001070100CA7000  NCB
CIU2_EN_PP6_IP2_IO             0x0001070100C94000  NCB
CIU2_EN_PP6_IP2_IO_W1C         0x0001070100CB4000  NCB
CIU2_EN_PP6_IP2_IO_W1S         0x0001070100CA4000  NCB
CIU2_EN_PP6_IP2_MBOX           0x0001070100C98000  NCB
CIU2_EN_PP6_IP2_MBOX_W1C       0x0001070100CB8000  NCB
CIU2_EN_PP6_IP2_MBOX_W1S       0x0001070100CA8000  NCB
CIU2_EN_PP6_IP2_MEM            0x0001070100C95000  NCB
CIU2_EN_PP6_IP2_MEM_W1C        0x0001070100CB5000  NCB
CIU2_EN_PP6_IP2_MEM_W1S        0x0001070100CA5000  NCB
CIU2_EN_PP6_IP2_MIO            0x0001070100C93000  NCB
CIU2_EN_PP6_IP2_MIO_W1C        0x0001070100CB3000  NCB
CIU2_EN_PP6_IP2_MIO_W1S        0x0001070100CA3000  NCB
CIU2_EN_PP6_IP2_PKT            0x0001070100C96000  NCB
CIU2_EN_PP6_IP2_PKT_W1C        0x0001070100CB6000  NCB
CIU2_EN_PP6_IP2_PKT_W1S        0x0001070100CA6000  NCB
CIU2_EN_PP6_IP2_RML            0x0001070100C92000  NCB
CIU2_EN_PP6_IP2_RML_W1C        0x0001070100CB2000  NCB
CIU2_EN_PP6_IP2_RML_W1S        0x0001070100CA2000  NCB
CIU2_EN_PP6_IP2_WDOG           0x0001070100C91000  NCB
CIU2_EN_PP6_IP2_WDOG_W1C       0x0001070100CB1000  NCB
CIU2_EN_PP6_IP2_WDOG_W1S       0x0001070100CA1000  NCB
CIU2_EN_PP6_IP2_WRKQ           0x0001070100C90000  NCB
CIU2_EN_PP6_IP2_WRKQ_W1C       0x0001070100CB0000  NCB
CIU2_EN_PP6_IP2_WRKQ_W1S       0x0001070100CA0000  NCB
CIU2_EN_PP6_IP3_GPIO           0x0001070100C97200  NCB
CIU2_EN_PP6_IP3_GPIO_W1C       0x0001070100CB7200  NCB
CIU2_EN_PP6_IP3_GPIO_W1S       0x0001070100CA7200  NCB
CIU2_EN_PP6_IP3_IO             0x0001070100C94200  NCB
CIU2_EN_PP6_IP3_IO_W1C         0x0001070100CB4200  NCB
CIU2_EN_PP6_IP3_IO_W1S         0x0001070100CA4200  NCB
CIU2_EN_PP6_IP3_MBOX           0x0001070100C98200  NCB
CIU2_EN_PP6_IP3_MBOX_W1C       0x0001070100CB8200  NCB
CIU2_EN_PP6_IP3_MBOX_W1S       0x0001070100CA8200  NCB
CIU2_EN_PP6_IP3_MEM            0x0001070100C95200  NCB
CIU2_EN_PP6_IP3_MEM_W1C        0x0001070100CB5200  NCB
CIU2_EN_PP6_IP3_MEM_W1S        0x0001070100CA5200  NCB
CIU2_EN_PP6_IP3_MIO            0x0001070100C93200  NCB
CIU2_EN_PP6_IP3_MIO_W1C        0x0001070100CB3200  NCB
CIU2_EN_PP6_IP3_MIO_W1S        0x0001070100CA3200  NCB
CIU2_EN_PP6_IP3_PKT            0x0001070100C96200  NCB
CIU2_EN_PP6_IP3_PKT_W1C        0x0001070100CB6200  NCB
CIU2_EN_PP6_IP3_PKT_W1S        0x0001070100CA6200  NCB
CIU2_EN_PP6_IP3_RML            0x0001070100C92200  NCB
CIU2_EN_PP6_IP3_RML_W1C        0x0001070100CB2200  NCB
CIU2_EN_PP6_IP3_RML_W1S        0x0001070100CA2200  NCB
CIU2_EN_PP6_IP3_WDOG           0x0001070100C91200  NCB
CIU2_EN_PP6_IP3_WDOG_W1C       0x0001070100CB1200  NCB
CIU2_EN_PP6_IP3_WDOG_W1S       0x0001070100CA1200  NCB
CIU2_EN_PP6_IP3_WRKQ           0x0001070100C90200  NCB
CIU2_EN_PP6_IP3_WRKQ_W1C       0x0001070100CB0200  NCB
CIU2_EN_PP6_IP3_WRKQ_W1S       0x0001070100CA0200  NCB
CIU2_EN_PP6_IP4_GPIO           0x0001070100C97400  NCB
CIU2_EN_PP6_IP4_GPIO_W1C       0x0001070100CB7400  NCB
CIU2_EN_PP6_IP4_GPIO_W1S       0x0001070100CA7400  NCB
CIU2_EN_PP6_IP4_IO             0x0001070100C94400  NCB
CIU2_EN_PP6_IP4_IO_W1C         0x0001070100CB4400  NCB
CIU2_EN_PP6_IP4_IO_W1S         0x0001070100CA4400  NCB
CIU2_EN_PP6_IP4_MBOX           0x0001070100C98400  NCB
CIU2_EN_PP6_IP4_MBOX_W1C       0x0001070100CB8400  NCB
CIU2_EN_PP6_IP4_MBOX_W1S       0x0001070100CA8400  NCB
CIU2_EN_PP6_IP4_MEM            0x0001070100C95400  NCB
CIU2_EN_PP6_IP4_MEM_W1C        0x0001070100CB5400  NCB
CIU2_EN_PP6_IP4_MEM_W1S        0x0001070100CA5400  NCB
CIU2_EN_PP6_IP4_MIO            0x0001070100C93400  NCB
CIU2_EN_PP6_IP4_MIO_W1C        0x0001070100CB3400  NCB
CIU2_EN_PP6_IP4_MIO_W1S        0x0001070100CA3400  NCB
CIU2_EN_PP6_IP4_PKT            0x0001070100C96400  NCB
CIU2_EN_PP6_IP4_PKT_W1C        0x0001070100CB6400  NCB
CIU2_EN_PP6_IP4_PKT_W1S        0x0001070100CA6400  NCB
CIU2_EN_PP6_IP4_RML            0x0001070100C92400  NCB
CIU2_EN_PP6_IP4_RML_W1C        0x0001070100CB2400  NCB
CIU2_EN_PP6_IP4_RML_W1S        0x0001070100CA2400  NCB
CIU2_EN_PP6_IP4_WDOG           0x0001070100C91400  NCB
CIU2_EN_PP6_IP4_WDOG_W1C       0x0001070100CB1400  NCB
CIU2_EN_PP6_IP4_WDOG_W1S       0x0001070100CA1400  NCB
CIU2_EN_PP6_IP4_WRKQ           0x0001070100C90400  NCB
CIU2_EN_PP6_IP4_WRKQ_W1C       0x0001070100CB0400  NCB
CIU2_EN_PP6_IP4_WRKQ_W1S       0x0001070100CA0400  NCB
CIU2_EN_PP7_IP2_GPIO           0x0001070100E97000  NCB
CIU2_EN_PP7_IP2_GPIO_W1C       0x0001070100EB7000  NCB
CIU2_EN_PP7_IP2_GPIO_W1S       0x0001070100EA7000  NCB
CIU2_EN_PP7_IP2_IO             0x0001070100E94000  NCB
CIU2_EN_PP7_IP2_IO_W1C         0x0001070100EB4000  NCB
CIU2_EN_PP7_IP2_IO_W1S         0x0001070100EA4000  NCB
CIU2_EN_PP7_IP2_MBOX           0x0001070100E98000  NCB
CIU2_EN_PP7_IP2_MBOX_W1C       0x0001070100EB8000  NCB
CIU2_EN_PP7_IP2_MBOX_W1S       0x0001070100EA8000  NCB
CIU2_EN_PP7_IP2_MEM            0x0001070100E95000  NCB
CIU2_EN_PP7_IP2_MEM_W1C        0x0001070100EB5000  NCB
CIU2_EN_PP7_IP2_MEM_W1S        0x0001070100EA5000  NCB
CIU2_EN_PP7_IP2_MIO            0x0001070100E93000  NCB
CIU2_EN_PP7_IP2_MIO_W1C        0x0001070100EB3000  NCB
CIU2_EN_PP7_IP2_MIO_W1S        0x0001070100EA3000  NCB
CIU2_EN_PP7_IP2_PKT            0x0001070100E96000  NCB
CIU2_EN_PP7_IP2_PKT_W1C        0x0001070100EB6000  NCB
CIU2_EN_PP7_IP2_PKT_W1S        0x0001070100EA6000  NCB
CIU2_EN_PP7_IP2_RML            0x0001070100E92000  NCB
CIU2_EN_PP7_IP2_RML_W1C        0x0001070100EB2000  NCB
CIU2_EN_PP7_IP2_RML_W1S        0x0001070100EA2000  NCB
CIU2_EN_PP7_IP2_WDOG           0x0001070100E91000  NCB
CIU2_EN_PP7_IP2_WDOG_W1C       0x0001070100EB1000  NCB
CIU2_EN_PP7_IP2_WDOG_W1S       0x0001070100EA1000  NCB
CIU2_EN_PP7_IP2_WRKQ           0x0001070100E90000  NCB
CIU2_EN_PP7_IP2_WRKQ_W1C       0x0001070100EB0000  NCB
CIU2_EN_PP7_IP2_WRKQ_W1S       0x0001070100EA0000  NCB
CIU2_EN_PP7_IP3_GPIO           0x0001070100E97200  NCB
CIU2_EN_PP7_IP3_GPIO_W1C       0x0001070100EB7200  NCB
CIU2_EN_PP7_IP3_GPIO_W1S       0x0001070100EA7200  NCB
CIU2_EN_PP7_IP3_IO             0x0001070100E94200  NCB
CIU2_EN_PP7_IP3_IO_W1C         0x0001070100EB4200  NCB
CIU2_EN_PP7_IP3_IO_W1S         0x0001070100EA4200  NCB
CIU2_EN_PP7_IP3_MBOX           0x0001070100E98200  NCB
CIU2_EN_PP7_IP3_MBOX_W1C       0x0001070100EB8200  NCB
CIU2_EN_PP7_IP3_MBOX_W1S       0x0001070100EA8200  NCB
CIU2_EN_PP7_IP3_MEM            0x0001070100E95200  NCB
CIU2_EN_PP7_IP3_MEM_W1C        0x0001070100EB5200  NCB
CIU2_EN_PP7_IP3_MEM_W1S        0x0001070100EA5200  NCB
CIU2_EN_PP7_IP3_MIO            0x0001070100E93200  NCB
CIU2_EN_PP7_IP3_MIO_W1C        0x0001070100EB3200  NCB
CIU2_EN_PP7_IP3_MIO_W1S        0x0001070100EA3200  NCB
CIU2_EN_PP7_IP3_PKT            0x0001070100E96200  NCB
CIU2_EN_PP7_IP3_PKT_W1C        0x0001070100EB6200  NCB
CIU2_EN_PP7_IP3_PKT_W1S        0x0001070100EA6200  NCB
CIU2_EN_PP7_IP3_RML            0x0001070100E92200  NCB
CIU2_EN_PP7_IP3_RML_W1C        0x0001070100EB2200  NCB
CIU2_EN_PP7_IP3_RML_W1S        0x0001070100EA2200  NCB
CIU2_EN_PP7_IP3_WDOG           0x0001070100E91200  NCB
CIU2_EN_PP7_IP3_WDOG_W1C       0x0001070100EB1200  NCB
CIU2_EN_PP7_IP3_WDOG_W1S       0x0001070100EA1200  NCB
CIU2_EN_PP7_IP3_WRKQ           0x0001070100E90200  NCB
CIU2_EN_PP7_IP3_WRKQ_W1C       0x0001070100EB0200  NCB
CIU2_EN_PP7_IP3_WRKQ_W1S       0x0001070100EA0200  NCB
CIU2_EN_PP7_IP4_GPIO           0x0001070100E97400  NCB
CIU2_EN_PP7_IP4_GPIO_W1C       0x0001070100EB7400  NCB
CIU2_EN_PP7_IP4_GPIO_W1S       0x0001070100EA7400  NCB
CIU2_EN_PP7_IP4_IO             0x0001070100E94400  NCB
CIU2_EN_PP7_IP4_IO_W1C         0x0001070100EB4400  NCB
CIU2_EN_PP7_IP4_IO_W1S         0x0001070100EA4400  NCB
CIU2_EN_PP7_IP4_MBOX           0x0001070100E98400  NCB
CIU2_EN_PP7_IP4_MBOX_W1C       0x0001070100EB8400  NCB
CIU2_EN_PP7_IP4_MBOX_W1S       0x0001070100EA8400  NCB
CIU2_EN_PP7_IP4_MEM            0x0001070100E95400  NCB
CIU2_EN_PP7_IP4_MEM_W1C        0x0001070100EB5400  NCB
CIU2_EN_PP7_IP4_MEM_W1S        0x0001070100EA5400  NCB
CIU2_EN_PP7_IP4_MIO            0x0001070100E93400  NCB
CIU2_EN_PP7_IP4_MIO_W1C        0x0001070100EB3400  NCB
CIU2_EN_PP7_IP4_MIO_W1S        0x0001070100EA3400  NCB
CIU2_EN_PP7_IP4_PKT            0x0001070100E96400  NCB
CIU2_EN_PP7_IP4_PKT_W1C        0x0001070100EB6400  NCB
CIU2_EN_PP7_IP4_PKT_W1S        0x0001070100EA6400  NCB
CIU2_EN_PP7_IP4_RML            0x0001070100E92400  NCB
CIU2_EN_PP7_IP4_RML_W1C        0x0001070100EB2400  NCB
CIU2_EN_PP7_IP4_RML_W1S        0x0001070100EA2400  NCB
CIU2_EN_PP7_IP4_WDOG           0x0001070100E91400  NCB
CIU2_EN_PP7_IP4_WDOG_W1C       0x0001070100EB1400  NCB
CIU2_EN_PP7_IP4_WDOG_W1S       0x0001070100EA1400  NCB
CIU2_EN_PP7_IP4_WRKQ           0x0001070100E90400  NCB
CIU2_EN_PP7_IP4_WRKQ_W1C       0x0001070100EB0400  NCB
CIU2_EN_PP7_IP4_WRKQ_W1S       0x0001070100EA0400  NCB
CIU2_EN_PP8_IP2_GPIO           0x0001070101097000  NCB
CIU2_EN_PP8_IP2_GPIO_W1C       0x00010701010B7000  NCB
CIU2_EN_PP8_IP2_GPIO_W1S       0x00010701010A7000  NCB
CIU2_EN_PP8_IP2_IO             0x0001070101094000  NCB
CIU2_EN_PP8_IP2_IO_W1C         0x00010701010B4000  NCB
CIU2_EN_PP8_IP2_IO_W1S         0x00010701010A4000  NCB
CIU2_EN_PP8_IP2_MBOX           0x0001070101098000  NCB
CIU2_EN_PP8_IP2_MBOX_W1C       0x00010701010B8000  NCB
CIU2_EN_PP8_IP2_MBOX_W1S       0x00010701010A8000  NCB
CIU2_EN_PP8_IP2_MEM            0x0001070101095000  NCB
CIU2_EN_PP8_IP2_MEM_W1C        0x00010701010B5000  NCB
CIU2_EN_PP8_IP2_MEM_W1S        0x00010701010A5000  NCB
CIU2_EN_PP8_IP2_MIO            0x0001070101093000  NCB
CIU2_EN_PP8_IP2_MIO_W1C        0x00010701010B3000  NCB
CIU2_EN_PP8_IP2_MIO_W1S        0x00010701010A3000  NCB
CIU2_EN_PP8_IP2_PKT            0x0001070101096000  NCB
CIU2_EN_PP8_IP2_PKT_W1C        0x00010701010B6000  NCB
CIU2_EN_PP8_IP2_PKT_W1S        0x00010701010A6000  NCB
CIU2_EN_PP8_IP2_RML            0x0001070101092000  NCB
CIU2_EN_PP8_IP2_RML_W1C        0x00010701010B2000  NCB
CIU2_EN_PP8_IP2_RML_W1S        0x00010701010A2000  NCB
CIU2_EN_PP8_IP2_WDOG           0x0001070101091000  NCB
CIU2_EN_PP8_IP2_WDOG_W1C       0x00010701010B1000  NCB
CIU2_EN_PP8_IP2_WDOG_W1S       0x00010701010A1000  NCB
CIU2_EN_PP8_IP2_WRKQ           0x0001070101090000  NCB
CIU2_EN_PP8_IP2_WRKQ_W1C       0x00010701010B0000  NCB
CIU2_EN_PP8_IP2_WRKQ_W1S       0x00010701010A0000  NCB
CIU2_EN_PP8_IP3_GPIO           0x0001070101097200  NCB
CIU2_EN_PP8_IP3_GPIO_W1C       0x00010701010B7200  NCB
CIU2_EN_PP8_IP3_GPIO_W1S       0x00010701010A7200  NCB
CIU2_EN_PP8_IP3_IO             0x0001070101094200  NCB
CIU2_EN_PP8_IP3_IO_W1C         0x00010701010B4200  NCB
CIU2_EN_PP8_IP3_IO_W1S         0x00010701010A4200  NCB
CIU2_EN_PP8_IP3_MBOX           0x0001070101098200  NCB
CIU2_EN_PP8_IP3_MBOX_W1C       0x00010701010B8200  NCB
CIU2_EN_PP8_IP3_MBOX_W1S       0x00010701010A8200  NCB
CIU2_EN_PP8_IP3_MEM            0x0001070101095200  NCB
CIU2_EN_PP8_IP3_MEM_W1C        0x00010701010B5200  NCB
CIU2_EN_PP8_IP3_MEM_W1S        0x00010701010A5200  NCB
CIU2_EN_PP8_IP3_MIO            0x0001070101093200  NCB
CIU2_EN_PP8_IP3_MIO_W1C        0x00010701010B3200  NCB
CIU2_EN_PP8_IP3_MIO_W1S        0x00010701010A3200  NCB
CIU2_EN_PP8_IP3_PKT            0x0001070101096200  NCB
CIU2_EN_PP8_IP3_PKT_W1C        0x00010701010B6200  NCB
CIU2_EN_PP8_IP3_PKT_W1S        0x00010701010A6200  NCB
CIU2_EN_PP8_IP3_RML            0x0001070101092200  NCB
CIU2_EN_PP8_IP3_RML_W1C        0x00010701010B2200  NCB
CIU2_EN_PP8_IP3_RML_W1S        0x00010701010A2200  NCB
CIU2_EN_PP8_IP3_WDOG           0x0001070101091200  NCB
CIU2_EN_PP8_IP3_WDOG_W1C       0x00010701010B1200  NCB
CIU2_EN_PP8_IP3_WDOG_W1S       0x00010701010A1200  NCB
CIU2_EN_PP8_IP3_WRKQ           0x0001070101090200  NCB
CIU2_EN_PP8_IP3_WRKQ_W1C       0x00010701010B0200  NCB
CIU2_EN_PP8_IP3_WRKQ_W1S       0x00010701010A0200  NCB
CIU2_EN_PP8_IP4_GPIO           0x0001070101097400  NCB
CIU2_EN_PP8_IP4_GPIO_W1C       0x00010701010B7400  NCB
CIU2_EN_PP8_IP4_GPIO_W1S       0x00010701010A7400  NCB
CIU2_EN_PP8_IP4_IO             0x0001070101094400  NCB
CIU2_EN_PP8_IP4_IO_W1C         0x00010701010B4400  NCB
CIU2_EN_PP8_IP4_IO_W1S         0x00010701010A4400  NCB
CIU2_EN_PP8_IP4_MBOX           0x0001070101098400  NCB
CIU2_EN_PP8_IP4_MBOX_W1C       0x00010701010B8400  NCB
CIU2_EN_PP8_IP4_MBOX_W1S       0x00010701010A8400  NCB
CIU2_EN_PP8_IP4_MEM            0x0001070101095400  NCB
CIU2_EN_PP8_IP4_MEM_W1C        0x00010701010B5400  NCB
CIU2_EN_PP8_IP4_MEM_W1S        0x00010701010A5400  NCB
CIU2_EN_PP8_IP4_MIO            0x0001070101093400  NCB
CIU2_EN_PP8_IP4_MIO_W1C        0x00010701010B3400  NCB
CIU2_EN_PP8_IP4_MIO_W1S        0x00010701010A3400  NCB
CIU2_EN_PP8_IP4_PKT            0x0001070101096400  NCB
CIU2_EN_PP8_IP4_PKT_W1C        0x00010701010B6400  NCB
CIU2_EN_PP8_IP4_PKT_W1S        0x00010701010A6400  NCB
CIU2_EN_PP8_IP4_RML            0x0001070101092400  NCB
CIU2_EN_PP8_IP4_RML_W1C        0x00010701010B2400  NCB
CIU2_EN_PP8_IP4_RML_W1S        0x00010701010A2400  NCB
CIU2_EN_PP8_IP4_WDOG           0x0001070101091400  NCB
CIU2_EN_PP8_IP4_WDOG_W1C       0x00010701010B1400  NCB
CIU2_EN_PP8_IP4_WDOG_W1S       0x00010701010A1400  NCB
CIU2_EN_PP8_IP4_WRKQ           0x0001070101090400  NCB
CIU2_EN_PP8_IP4_WRKQ_W1C       0x00010701010B0400  NCB
CIU2_EN_PP8_IP4_WRKQ_W1S       0x00010701010A0400  NCB
CIU2_EN_PP9_IP2_GPIO           0x0001070101297000  NCB
CIU2_EN_PP9_IP2_GPIO_W1C       0x00010701012B7000  NCB
CIU2_EN_PP9_IP2_GPIO_W1S       0x00010701012A7000  NCB
CIU2_EN_PP9_IP2_IO             0x0001070101294000  NCB
CIU2_EN_PP9_IP2_IO_W1C         0x00010701012B4000  NCB
CIU2_EN_PP9_IP2_IO_W1S         0x00010701012A4000  NCB
CIU2_EN_PP9_IP2_MBOX           0x0001070101298000  NCB
CIU2_EN_PP9_IP2_MBOX_W1C       0x00010701012B8000  NCB
CIU2_EN_PP9_IP2_MBOX_W1S       0x00010701012A8000  NCB
CIU2_EN_PP9_IP2_MEM            0x0001070101295000  NCB
CIU2_EN_PP9_IP2_MEM_W1C        0x00010701012B5000  NCB
CIU2_EN_PP9_IP2_MEM_W1S        0x00010701012A5000  NCB
CIU2_EN_PP9_IP2_MIO            0x0001070101293000  NCB
CIU2_EN_PP9_IP2_MIO_W1C        0x00010701012B3000  NCB
CIU2_EN_PP9_IP2_MIO_W1S        0x00010701012A3000  NCB
CIU2_EN_PP9_IP2_PKT            0x0001070101296000  NCB
CIU2_EN_PP9_IP2_PKT_W1C        0x00010701012B6000  NCB
CIU2_EN_PP9_IP2_PKT_W1S        0x00010701012A6000  NCB
CIU2_EN_PP9_IP2_RML            0x0001070101292000  NCB
CIU2_EN_PP9_IP2_RML_W1C        0x00010701012B2000  NCB
CIU2_EN_PP9_IP2_RML_W1S        0x00010701012A2000  NCB
CIU2_EN_PP9_IP2_WDOG           0x0001070101291000  NCB
CIU2_EN_PP9_IP2_WDOG_W1C       0x00010701012B1000  NCB
CIU2_EN_PP9_IP2_WDOG_W1S       0x00010701012A1000  NCB
CIU2_EN_PP9_IP2_WRKQ           0x0001070101290000  NCB
CIU2_EN_PP9_IP2_WRKQ_W1C       0x00010701012B0000  NCB
CIU2_EN_PP9_IP2_WRKQ_W1S       0x00010701012A0000  NCB
CIU2_EN_PP9_IP3_GPIO           0x0001070101297200  NCB
CIU2_EN_PP9_IP3_GPIO_W1C       0x00010701012B7200  NCB
CIU2_EN_PP9_IP3_GPIO_W1S       0x00010701012A7200  NCB
CIU2_EN_PP9_IP3_IO             0x0001070101294200  NCB
CIU2_EN_PP9_IP3_IO_W1C         0x00010701012B4200  NCB
CIU2_EN_PP9_IP3_IO_W1S         0x00010701012A4200  NCB
CIU2_EN_PP9_IP3_MBOX           0x0001070101298200  NCB
CIU2_EN_PP9_IP3_MBOX_W1C       0x00010701012B8200  NCB
CIU2_EN_PP9_IP3_MBOX_W1S       0x00010701012A8200  NCB
CIU2_EN_PP9_IP3_MEM            0x0001070101295200  NCB
CIU2_EN_PP9_IP3_MEM_W1C        0x00010701012B5200  NCB
CIU2_EN_PP9_IP3_MEM_W1S        0x00010701012A5200  NCB
CIU2_EN_PP9_IP3_MIO            0x0001070101293200  NCB
CIU2_EN_PP9_IP3_MIO_W1C        0x00010701012B3200  NCB
CIU2_EN_PP9_IP3_MIO_W1S        0x00010701012A3200  NCB
CIU2_EN_PP9_IP3_PKT            0x0001070101296200  NCB
CIU2_EN_PP9_IP3_PKT_W1C        0x00010701012B6200  NCB
CIU2_EN_PP9_IP3_PKT_W1S        0x00010701012A6200  NCB
CIU2_EN_PP9_IP3_RML            0x0001070101292200  NCB
CIU2_EN_PP9_IP3_RML_W1C        0x00010701012B2200  NCB
CIU2_EN_PP9_IP3_RML_W1S        0x00010701012A2200  NCB
CIU2_EN_PP9_IP3_WDOG           0x0001070101291200  NCB
CIU2_EN_PP9_IP3_WDOG_W1C       0x00010701012B1200  NCB
CIU2_EN_PP9_IP3_WDOG_W1S       0x00010701012A1200  NCB
CIU2_EN_PP9_IP3_WRKQ           0x0001070101290200  NCB
CIU2_EN_PP9_IP3_WRKQ_W1C       0x00010701012B0200  NCB
CIU2_EN_PP9_IP3_WRKQ_W1S       0x00010701012A0200  NCB
CIU2_EN_PP9_IP4_GPIO           0x0001070101297400  NCB
CIU2_EN_PP9_IP4_GPIO_W1C       0x00010701012B7400  NCB
CIU2_EN_PP9_IP4_GPIO_W1S       0x00010701012A7400  NCB
CIU2_EN_PP9_IP4_IO             0x0001070101294400  NCB
CIU2_EN_PP9_IP4_IO_W1C         0x00010701012B4400  NCB
CIU2_EN_PP9_IP4_IO_W1S         0x00010701012A4400  NCB
CIU2_EN_PP9_IP4_MBOX           0x0001070101298400  NCB
CIU2_EN_PP9_IP4_MBOX_W1C       0x00010701012B8400  NCB
CIU2_EN_PP9_IP4_MBOX_W1S       0x00010701012A8400  NCB
CIU2_EN_PP9_IP4_MEM            0x0001070101295400  NCB
CIU2_EN_PP9_IP4_MEM_W1C        0x00010701012B5400  NCB
CIU2_EN_PP9_IP4_MEM_W1S        0x00010701012A5400  NCB
CIU2_EN_PP9_IP4_MIO            0x0001070101293400  NCB
CIU2_EN_PP9_IP4_MIO_W1C        0x00010701012B3400  NCB
CIU2_EN_PP9_IP4_MIO_W1S        0x00010701012A3400  NCB
CIU2_EN_PP9_IP4_PKT            0x0001070101296400  NCB
CIU2_EN_PP9_IP4_PKT_W1C        0x00010701012B6400  NCB
CIU2_EN_PP9_IP4_PKT_W1S        0x00010701012A6400  NCB
CIU2_EN_PP9_IP4_RML            0x0001070101292400  NCB
CIU2_EN_PP9_IP4_RML_W1C        0x00010701012B2400  NCB
CIU2_EN_PP9_IP4_RML_W1S        0x00010701012A2400  NCB
CIU2_EN_PP9_IP4_WDOG           0x0001070101291400  NCB
CIU2_EN_PP9_IP4_WDOG_W1C       0x00010701012B1400  NCB
CIU2_EN_PP9_IP4_WDOG_W1S       0x00010701012A1400  NCB
CIU2_EN_PP9_IP4_WRKQ           0x0001070101290400  NCB
CIU2_EN_PP9_IP4_WRKQ_W1C       0x00010701012B0400  NCB
CIU2_EN_PP9_IP4_WRKQ_W1S       0x00010701012A0400  NCB
CIU2_EN_PP10_IP2_GPIO          0x0001070101497000  NCB
CIU2_EN_PP10_IP2_GPIO_W1C      0x00010701014B7000  NCB
CIU2_EN_PP10_IP2_GPIO_W1S      0x00010701014A7000  NCB
CIU2_EN_PP10_IP2_IO            0x0001070101494000  NCB
CIU2_EN_PP10_IP2_IO_W1C        0x00010701014B4000  NCB
CIU2_EN_PP10_IP2_IO_W1S        0x00010701014A4000  NCB
CIU2_EN_PP10_IP2_MBOX          0x0001070101498000  NCB
CIU2_EN_PP10_IP2_MBOX_W1C      0x00010701014B8000  NCB
CIU2_EN_PP10_IP2_MBOX_W1S      0x00010701014A8000  NCB
CIU2_EN_PP10_IP2_MEM           0x0001070101495000  NCB
CIU2_EN_PP10_IP2_MEM_W1C       0x00010701014B5000  NCB
CIU2_EN_PP10_IP2_MEM_W1S       0x00010701014A5000  NCB
CIU2_EN_PP10_IP2_MIO           0x0001070101493000  NCB
CIU2_EN_PP10_IP2_MIO_W1C       0x00010701014B3000  NCB
CIU2_EN_PP10_IP2_MIO_W1S       0x00010701014A3000  NCB
CIU2_EN_PP10_IP2_PKT           0x0001070101496000  NCB
CIU2_EN_PP10_IP2_PKT_W1C       0x00010701014B6000  NCB
CIU2_EN_PP10_IP2_PKT_W1S       0x00010701014A6000  NCB
CIU2_EN_PP10_IP2_RML           0x0001070101492000  NCB
CIU2_EN_PP10_IP2_RML_W1C       0x00010701014B2000  NCB
CIU2_EN_PP10_IP2_RML_W1S       0x00010701014A2000  NCB
CIU2_EN_PP10_IP2_WDOG          0x0001070101491000  NCB
CIU2_EN_PP10_IP2_WDOG_W1C      0x00010701014B1000  NCB
CIU2_EN_PP10_IP2_WDOG_W1S      0x00010701014A1000  NCB
CIU2_EN_PP10_IP2_WRKQ          0x0001070101490000  NCB
CIU2_EN_PP10_IP2_WRKQ_W1C      0x00010701014B0000  NCB
CIU2_EN_PP10_IP2_WRKQ_W1S      0x00010701014A0000  NCB
CIU2_EN_PP10_IP3_GPIO          0x0001070101497200  NCB
CIU2_EN_PP10_IP3_GPIO_W1C      0x00010701014B7200  NCB
CIU2_EN_PP10_IP3_GPIO_W1S      0x00010701014A7200  NCB
CIU2_EN_PP10_IP3_IO            0x0001070101494200  NCB
CIU2_EN_PP10_IP3_IO_W1C        0x00010701014B4200  NCB
CIU2_EN_PP10_IP3_IO_W1S        0x00010701014A4200  NCB
CIU2_EN_PP10_IP3_MBOX          0x0001070101498200  NCB
CIU2_EN_PP10_IP3_MBOX_W1C      0x00010701014B8200  NCB
CIU2_EN_PP10_IP3_MBOX_W1S      0x00010701014A8200  NCB
CIU2_EN_PP10_IP3_MEM           0x0001070101495200  NCB
CIU2_EN_PP10_IP3_MEM_W1C       0x00010701014B5200  NCB
CIU2_EN_PP10_IP3_MEM_W1S       0x00010701014A5200  NCB
CIU2_EN_PP10_IP3_MIO           0x0001070101493200  NCB
CIU2_EN_PP10_IP3_MIO_W1C       0x00010701014B3200  NCB
CIU2_EN_PP10_IP3_MIO_W1S       0x00010701014A3200  NCB
CIU2_EN_PP10_IP3_PKT           0x0001070101496200  NCB
CIU2_EN_PP10_IP3_PKT_W1C       0x00010701014B6200  NCB
CIU2_EN_PP10_IP3_PKT_W1S       0x00010701014A6200  NCB
CIU2_EN_PP10_IP3_RML           0x0001070101492200  NCB
CIU2_EN_PP10_IP3_RML_W1C       0x00010701014B2200  NCB
CIU2_EN_PP10_IP3_RML_W1S       0x00010701014A2200  NCB
CIU2_EN_PP10_IP3_WDOG          0x0001070101491200  NCB
CIU2_EN_PP10_IP3_WDOG_W1C      0x00010701014B1200  NCB
CIU2_EN_PP10_IP3_WDOG_W1S      0x00010701014A1200  NCB
CIU2_EN_PP10_IP3_WRKQ          0x0001070101490200  NCB
CIU2_EN_PP10_IP3_WRKQ_W1C      0x00010701014B0200  NCB
CIU2_EN_PP10_IP3_WRKQ_W1S      0x00010701014A0200  NCB
CIU2_EN_PP10_IP4_GPIO          0x0001070101497400  NCB
CIU2_EN_PP10_IP4_GPIO_W1C      0x00010701014B7400  NCB
CIU2_EN_PP10_IP4_GPIO_W1S      0x00010701014A7400  NCB
CIU2_EN_PP10_IP4_IO            0x0001070101494400  NCB
CIU2_EN_PP10_IP4_IO_W1C        0x00010701014B4400  NCB
CIU2_EN_PP10_IP4_IO_W1S        0x00010701014A4400  NCB
CIU2_EN_PP10_IP4_MBOX          0x0001070101498400  NCB
CIU2_EN_PP10_IP4_MBOX_W1C      0x00010701014B8400  NCB
CIU2_EN_PP10_IP4_MBOX_W1S      0x00010701014A8400  NCB
CIU2_EN_PP10_IP4_MEM           0x0001070101495400  NCB
CIU2_EN_PP10_IP4_MEM_W1C       0x00010701014B5400  NCB
CIU2_EN_PP10_IP4_MEM_W1S       0x00010701014A5400  NCB
CIU2_EN_PP10_IP4_MIO           0x0001070101493400  NCB
CIU2_EN_PP10_IP4_MIO_W1C       0x00010701014B3400  NCB
CIU2_EN_PP10_IP4_MIO_W1S       0x00010701014A3400  NCB
CIU2_EN_PP10_IP4_PKT           0x0001070101496400  NCB
CIU2_EN_PP10_IP4_PKT_W1C       0x00010701014B6400  NCB
CIU2_EN_PP10_IP4_PKT_W1S       0x00010701014A6400  NCB
CIU2_EN_PP10_IP4_RML           0x0001070101492400  NCB
CIU2_EN_PP10_IP4_RML_W1C       0x00010701014B2400  NCB
CIU2_EN_PP10_IP4_RML_W1S       0x00010701014A2400  NCB
CIU2_EN_PP10_IP4_WDOG          0x0001070101491400  NCB
CIU2_EN_PP10_IP4_WDOG_W1C      0x00010701014B1400  NCB
CIU2_EN_PP10_IP4_WDOG_W1S      0x00010701014A1400  NCB
CIU2_EN_PP10_IP4_WRKQ          0x0001070101490400  NCB
CIU2_EN_PP10_IP4_WRKQ_W1C      0x00010701014B0400  NCB
CIU2_EN_PP10_IP4_WRKQ_W1S      0x00010701014A0400  NCB
CIU2_EN_PP11_IP2_GPIO          0x0001070101697000  NCB
CIU2_EN_PP11_IP2_GPIO_W1C      0x00010701016B7000  NCB
CIU2_EN_PP11_IP2_GPIO_W1S      0x00010701016A7000  NCB
CIU2_EN_PP11_IP2_IO            0x0001070101694000  NCB
CIU2_EN_PP11_IP2_IO_W1C        0x00010701016B4000  NCB
CIU2_EN_PP11_IP2_IO_W1S        0x00010701016A4000  NCB
CIU2_EN_PP11_IP2_MBOX          0x0001070101698000  NCB
CIU2_EN_PP11_IP2_MBOX_W1C      0x00010701016B8000  NCB
CIU2_EN_PP11_IP2_MBOX_W1S      0x00010701016A8000  NCB
CIU2_EN_PP11_IP2_MEM           0x0001070101695000  NCB
CIU2_EN_PP11_IP2_MEM_W1C       0x00010701016B5000  NCB
CIU2_EN_PP11_IP2_MEM_W1S       0x00010701016A5000  NCB
CIU2_EN_PP11_IP2_MIO           0x0001070101693000  NCB
CIU2_EN_PP11_IP2_MIO_W1C       0x00010701016B3000  NCB
CIU2_EN_PP11_IP2_MIO_W1S       0x00010701016A3000  NCB
CIU2_EN_PP11_IP2_PKT           0x0001070101696000  NCB
CIU2_EN_PP11_IP2_PKT_W1C       0x00010701016B6000  NCB
CIU2_EN_PP11_IP2_PKT_W1S       0x00010701016A6000  NCB
CIU2_EN_PP11_IP2_RML           0x0001070101692000  NCB
CIU2_EN_PP11_IP2_RML_W1C       0x00010701016B2000  NCB
CIU2_EN_PP11_IP2_RML_W1S       0x00010701016A2000  NCB
CIU2_EN_PP11_IP2_WDOG          0x0001070101691000  NCB
CIU2_EN_PP11_IP2_WDOG_W1C      0x00010701016B1000  NCB
CIU2_EN_PP11_IP2_WDOG_W1S      0x00010701016A1000  NCB
CIU2_EN_PP11_IP2_WRKQ          0x0001070101690000  NCB
CIU2_EN_PP11_IP2_WRKQ_W1C      0x00010701016B0000  NCB
CIU2_EN_PP11_IP2_WRKQ_W1S      0x00010701016A0000  NCB
CIU2_EN_PP11_IP3_GPIO          0x0001070101697200  NCB
CIU2_EN_PP11_IP3_GPIO_W1C      0x00010701016B7200  NCB
CIU2_EN_PP11_IP3_GPIO_W1S      0x00010701016A7200  NCB
CIU2_EN_PP11_IP3_IO            0x0001070101694200  NCB
CIU2_EN_PP11_IP3_IO_W1C        0x00010701016B4200  NCB
CIU2_EN_PP11_IP3_IO_W1S        0x00010701016A4200  NCB
CIU2_EN_PP11_IP3_MBOX          0x0001070101698200  NCB
CIU2_EN_PP11_IP3_MBOX_W1C      0x00010701016B8200  NCB
CIU2_EN_PP11_IP3_MBOX_W1S      0x00010701016A8200  NCB
CIU2_EN_PP11_IP3_MEM           0x0001070101695200  NCB
CIU2_EN_PP11_IP3_MEM_W1C       0x00010701016B5200  NCB
CIU2_EN_PP11_IP3_MEM_W1S       0x00010701016A5200  NCB
CIU2_EN_PP11_IP3_MIO           0x0001070101693200  NCB
CIU2_EN_PP11_IP3_MIO_W1C       0x00010701016B3200  NCB
CIU2_EN_PP11_IP3_MIO_W1S       0x00010701016A3200  NCB
CIU2_EN_PP11_IP3_PKT           0x0001070101696200  NCB
CIU2_EN_PP11_IP3_PKT_W1C       0x00010701016B6200  NCB
CIU2_EN_PP11_IP3_PKT_W1S       0x00010701016A6200  NCB
CIU2_EN_PP11_IP3_RML           0x0001070101692200  NCB
CIU2_EN_PP11_IP3_RML_W1C       0x00010701016B2200  NCB
CIU2_EN_PP11_IP3_RML_W1S       0x00010701016A2200  NCB
CIU2_EN_PP11_IP3_WDOG          0x0001070101691200  NCB
CIU2_EN_PP11_IP3_WDOG_W1C      0x00010701016B1200  NCB
CIU2_EN_PP11_IP3_WDOG_W1S      0x00010701016A1200  NCB
CIU2_EN_PP11_IP3_WRKQ          0x0001070101690200  NCB
CIU2_EN_PP11_IP3_WRKQ_W1C      0x00010701016B0200  NCB
CIU2_EN_PP11_IP3_WRKQ_W1S      0x00010701016A0200  NCB
CIU2_EN_PP11_IP4_GPIO          0x0001070101697400  NCB
CIU2_EN_PP11_IP4_GPIO_W1C      0x00010701016B7400  NCB
CIU2_EN_PP11_IP4_GPIO_W1S      0x00010701016A7400  NCB
CIU2_EN_PP11_IP4_IO            0x0001070101694400  NCB
CIU2_EN_PP11_IP4_IO_W1C        0x00010701016B4400  NCB
CIU2_EN_PP11_IP4_IO_W1S        0x00010701016A4400  NCB
CIU2_EN_PP11_IP4_MBOX          0x0001070101698400  NCB
CIU2_EN_PP11_IP4_MBOX_W1C      0x00010701016B8400  NCB
CIU2_EN_PP11_IP4_MBOX_W1S      0x00010701016A8400  NCB
CIU2_EN_PP11_IP4_MEM           0x0001070101695400  NCB
CIU2_EN_PP11_IP4_MEM_W1C       0x00010701016B5400  NCB
CIU2_EN_PP11_IP4_MEM_W1S       0x00010701016A5400  NCB
CIU2_EN_PP11_IP4_MIO           0x0001070101693400  NCB
CIU2_EN_PP11_IP4_MIO_W1C       0x00010701016B3400  NCB
CIU2_EN_PP11_IP4_MIO_W1S       0x00010701016A3400  NCB
CIU2_EN_PP11_IP4_PKT           0x0001070101696400  NCB
CIU2_EN_PP11_IP4_PKT_W1C       0x00010701016B6400  NCB
CIU2_EN_PP11_IP4_PKT_W1S       0x00010701016A6400  NCB
CIU2_EN_PP11_IP4_RML           0x0001070101692400  NCB
CIU2_EN_PP11_IP4_RML_W1C       0x00010701016B2400  NCB
CIU2_EN_PP11_IP4_RML_W1S       0x00010701016A2400  NCB
CIU2_EN_PP11_IP4_WDOG          0x0001070101691400  NCB
CIU2_EN_PP11_IP4_WDOG_W1C      0x00010701016B1400  NCB
CIU2_EN_PP11_IP4_WDOG_W1S      0x00010701016A1400  NCB
CIU2_EN_PP11_IP4_WRKQ          0x0001070101690400  NCB
CIU2_EN_PP11_IP4_WRKQ_W1C      0x00010701016B0400  NCB
CIU2_EN_PP11_IP4_WRKQ_W1S      0x00010701016A0400  NCB
CIU2_EN_PP12_IP2_GPIO          0x0001070101897000  NCB
CIU2_EN_PP12_IP2_GPIO_W1C      0x00010701018B7000  NCB
CIU2_EN_PP12_IP2_GPIO_W1S      0x00010701018A7000  NCB
CIU2_EN_PP12_IP2_IO            0x0001070101894000  NCB
CIU2_EN_PP12_IP2_IO_W1C        0x00010701018B4000  NCB
CIU2_EN_PP12_IP2_IO_W1S        0x00010701018A4000  NCB
CIU2_EN_PP12_IP2_MBOX          0x0001070101898000  NCB
CIU2_EN_PP12_IP2_MBOX_W1C      0x00010701018B8000  NCB
CIU2_EN_PP12_IP2_MBOX_W1S      0x00010701018A8000  NCB
CIU2_EN_PP12_IP2_MEM           0x0001070101895000  NCB
CIU2_EN_PP12_IP2_MEM_W1C       0x00010701018B5000  NCB
CIU2_EN_PP12_IP2_MEM_W1S       0x00010701018A5000  NCB
CIU2_EN_PP12_IP2_MIO           0x0001070101893000  NCB
CIU2_EN_PP12_IP2_MIO_W1C       0x00010701018B3000  NCB
CIU2_EN_PP12_IP2_MIO_W1S       0x00010701018A3000  NCB
CIU2_EN_PP12_IP2_PKT           0x0001070101896000  NCB
CIU2_EN_PP12_IP2_PKT_W1C       0x00010701018B6000  NCB
CIU2_EN_PP12_IP2_PKT_W1S       0x00010701018A6000  NCB
CIU2_EN_PP12_IP2_RML           0x0001070101892000  NCB
CIU2_EN_PP12_IP2_RML_W1C       0x00010701018B2000  NCB
CIU2_EN_PP12_IP2_RML_W1S       0x00010701018A2000  NCB
CIU2_EN_PP12_IP2_WDOG          0x0001070101891000  NCB
CIU2_EN_PP12_IP2_WDOG_W1C      0x00010701018B1000  NCB
CIU2_EN_PP12_IP2_WDOG_W1S      0x00010701018A1000  NCB
CIU2_EN_PP12_IP2_WRKQ          0x0001070101890000  NCB
CIU2_EN_PP12_IP2_WRKQ_W1C      0x00010701018B0000  NCB
CIU2_EN_PP12_IP2_WRKQ_W1S      0x00010701018A0000  NCB
CIU2_EN_PP12_IP3_GPIO          0x0001070101897200  NCB
CIU2_EN_PP12_IP3_GPIO_W1C      0x00010701018B7200  NCB
CIU2_EN_PP12_IP3_GPIO_W1S      0x00010701018A7200  NCB
CIU2_EN_PP12_IP3_IO            0x0001070101894200  NCB
CIU2_EN_PP12_IP3_IO_W1C        0x00010701018B4200  NCB
CIU2_EN_PP12_IP3_IO_W1S        0x00010701018A4200  NCB
CIU2_EN_PP12_IP3_MBOX          0x0001070101898200  NCB
CIU2_EN_PP12_IP3_MBOX_W1C      0x00010701018B8200  NCB
CIU2_EN_PP12_IP3_MBOX_W1S      0x00010701018A8200  NCB
CIU2_EN_PP12_IP3_MEM           0x0001070101895200  NCB
CIU2_EN_PP12_IP3_MEM_W1C       0x00010701018B5200  NCB
CIU2_EN_PP12_IP3_MEM_W1S       0x00010701018A5200  NCB
CIU2_EN_PP12_IP3_MIO           0x0001070101893200  NCB
CIU2_EN_PP12_IP3_MIO_W1C       0x00010701018B3200  NCB
CIU2_EN_PP12_IP3_MIO_W1S       0x00010701018A3200  NCB
CIU2_EN_PP12_IP3_PKT           0x0001070101896200  NCB
CIU2_EN_PP12_IP3_PKT_W1C       0x00010701018B6200  NCB
CIU2_EN_PP12_IP3_PKT_W1S       0x00010701018A6200  NCB
CIU2_EN_PP12_IP3_RML           0x0001070101892200  NCB
CIU2_EN_PP12_IP3_RML_W1C       0x00010701018B2200  NCB
CIU2_EN_PP12_IP3_RML_W1S       0x00010701018A2200  NCB
CIU2_EN_PP12_IP3_WDOG          0x0001070101891200  NCB
CIU2_EN_PP12_IP3_WDOG_W1C      0x00010701018B1200  NCB
CIU2_EN_PP12_IP3_WDOG_W1S      0x00010701018A1200  NCB
CIU2_EN_PP12_IP3_WRKQ          0x0001070101890200  NCB
CIU2_EN_PP12_IP3_WRKQ_W1C      0x00010701018B0200  NCB
CIU2_EN_PP12_IP3_WRKQ_W1S      0x00010701018A0200  NCB
CIU2_EN_PP12_IP4_GPIO          0x0001070101897400  NCB
CIU2_EN_PP12_IP4_GPIO_W1C      0x00010701018B7400  NCB
CIU2_EN_PP12_IP4_GPIO_W1S      0x00010701018A7400  NCB
CIU2_EN_PP12_IP4_IO            0x0001070101894400  NCB
CIU2_EN_PP12_IP4_IO_W1C        0x00010701018B4400  NCB
CIU2_EN_PP12_IP4_IO_W1S        0x00010701018A4400  NCB
CIU2_EN_PP12_IP4_MBOX          0x0001070101898400  NCB
CIU2_EN_PP12_IP4_MBOX_W1C      0x00010701018B8400  NCB
CIU2_EN_PP12_IP4_MBOX_W1S      0x00010701018A8400  NCB
CIU2_EN_PP12_IP4_MEM           0x0001070101895400  NCB
CIU2_EN_PP12_IP4_MEM_W1C       0x00010701018B5400  NCB
CIU2_EN_PP12_IP4_MEM_W1S       0x00010701018A5400  NCB
CIU2_EN_PP12_IP4_MIO           0x0001070101893400  NCB
CIU2_EN_PP12_IP4_MIO_W1C       0x00010701018B3400  NCB
CIU2_EN_PP12_IP4_MIO_W1S       0x00010701018A3400  NCB
CIU2_EN_PP12_IP4_PKT           0x0001070101896400  NCB
CIU2_EN_PP12_IP4_PKT_W1C       0x00010701018B6400  NCB
CIU2_EN_PP12_IP4_PKT_W1S       0x00010701018A6400  NCB
CIU2_EN_PP12_IP4_RML           0x0001070101892400  NCB
CIU2_EN_PP12_IP4_RML_W1C       0x00010701018B2400  NCB
CIU2_EN_PP12_IP4_RML_W1S       0x00010701018A2400  NCB
CIU2_EN_PP12_IP4_WDOG          0x0001070101891400  NCB
CIU2_EN_PP12_IP4_WDOG_W1C      0x00010701018B1400  NCB
CIU2_EN_PP12_IP4_WDOG_W1S      0x00010701018A1400  NCB
CIU2_EN_PP12_IP4_WRKQ          0x0001070101890400  NCB
CIU2_EN_PP12_IP4_WRKQ_W1C      0x00010701018B0400  NCB
CIU2_EN_PP12_IP4_WRKQ_W1S      0x00010701018A0400  NCB
CIU2_EN_PP13_IP2_GPIO          0x0001070101A97000  NCB
CIU2_EN_PP13_IP2_GPIO_W1C      0x0001070101AB7000  NCB
CIU2_EN_PP13_IP2_GPIO_W1S      0x0001070101AA7000  NCB
CIU2_EN_PP13_IP2_IO            0x0001070101A94000  NCB
CIU2_EN_PP13_IP2_IO_W1C        0x0001070101AB4000  NCB
CIU2_EN_PP13_IP2_IO_W1S        0x0001070101AA4000  NCB
CIU2_EN_PP13_IP2_MBOX          0x0001070101A98000  NCB
CIU2_EN_PP13_IP2_MBOX_W1C      0x0001070101AB8000  NCB
CIU2_EN_PP13_IP2_MBOX_W1S      0x0001070101AA8000  NCB
CIU2_EN_PP13_IP2_MEM           0x0001070101A95000  NCB
CIU2_EN_PP13_IP2_MEM_W1C       0x0001070101AB5000  NCB
CIU2_EN_PP13_IP2_MEM_W1S       0x0001070101AA5000  NCB
CIU2_EN_PP13_IP2_MIO           0x0001070101A93000  NCB
CIU2_EN_PP13_IP2_MIO_W1C       0x0001070101AB3000  NCB
CIU2_EN_PP13_IP2_MIO_W1S       0x0001070101AA3000  NCB
CIU2_EN_PP13_IP2_PKT           0x0001070101A96000  NCB
CIU2_EN_PP13_IP2_PKT_W1C       0x0001070101AB6000  NCB
CIU2_EN_PP13_IP2_PKT_W1S       0x0001070101AA6000  NCB
CIU2_EN_PP13_IP2_RML           0x0001070101A92000  NCB
CIU2_EN_PP13_IP2_RML_W1C       0x0001070101AB2000  NCB
CIU2_EN_PP13_IP2_RML_W1S       0x0001070101AA2000  NCB
CIU2_EN_PP13_IP2_WDOG          0x0001070101A91000  NCB
CIU2_EN_PP13_IP2_WDOG_W1C      0x0001070101AB1000  NCB
CIU2_EN_PP13_IP2_WDOG_W1S      0x0001070101AA1000  NCB
CIU2_EN_PP13_IP2_WRKQ          0x0001070101A90000  NCB
CIU2_EN_PP13_IP2_WRKQ_W1C      0x0001070101AB0000  NCB
CIU2_EN_PP13_IP2_WRKQ_W1S      0x0001070101AA0000  NCB
CIU2_EN_PP13_IP3_GPIO          0x0001070101A97200  NCB
CIU2_EN_PP13_IP3_GPIO_W1C      0x0001070101AB7200  NCB
CIU2_EN_PP13_IP3_GPIO_W1S      0x0001070101AA7200  NCB
CIU2_EN_PP13_IP3_IO            0x0001070101A94200  NCB
CIU2_EN_PP13_IP3_IO_W1C        0x0001070101AB4200  NCB
CIU2_EN_PP13_IP3_IO_W1S        0x0001070101AA4200  NCB
CIU2_EN_PP13_IP3_MBOX          0x0001070101A98200  NCB
CIU2_EN_PP13_IP3_MBOX_W1C      0x0001070101AB8200  NCB
CIU2_EN_PP13_IP3_MBOX_W1S      0x0001070101AA8200  NCB
CIU2_EN_PP13_IP3_MEM           0x0001070101A95200  NCB
CIU2_EN_PP13_IP3_MEM_W1C       0x0001070101AB5200  NCB
CIU2_EN_PP13_IP3_MEM_W1S       0x0001070101AA5200  NCB
CIU2_EN_PP13_IP3_MIO           0x0001070101A93200  NCB
CIU2_EN_PP13_IP3_MIO_W1C       0x0001070101AB3200  NCB
CIU2_EN_PP13_IP3_MIO_W1S       0x0001070101AA3200  NCB
CIU2_EN_PP13_IP3_PKT           0x0001070101A96200  NCB
CIU2_EN_PP13_IP3_PKT_W1C       0x0001070101AB6200  NCB
CIU2_EN_PP13_IP3_PKT_W1S       0x0001070101AA6200  NCB
CIU2_EN_PP13_IP3_RML           0x0001070101A92200  NCB
CIU2_EN_PP13_IP3_RML_W1C       0x0001070101AB2200  NCB
CIU2_EN_PP13_IP3_RML_W1S       0x0001070101AA2200  NCB
CIU2_EN_PP13_IP3_WDOG          0x0001070101A91200  NCB
CIU2_EN_PP13_IP3_WDOG_W1C      0x0001070101AB1200  NCB
CIU2_EN_PP13_IP3_WDOG_W1S      0x0001070101AA1200  NCB
CIU2_EN_PP13_IP3_WRKQ          0x0001070101A90200  NCB
CIU2_EN_PP13_IP3_WRKQ_W1C      0x0001070101AB0200  NCB
CIU2_EN_PP13_IP3_WRKQ_W1S      0x0001070101AA0200  NCB
CIU2_EN_PP13_IP4_GPIO          0x0001070101A97400  NCB
CIU2_EN_PP13_IP4_GPIO_W1C      0x0001070101AB7400  NCB
CIU2_EN_PP13_IP4_GPIO_W1S      0x0001070101AA7400  NCB
CIU2_EN_PP13_IP4_IO            0x0001070101A94400  NCB
CIU2_EN_PP13_IP4_IO_W1C        0x0001070101AB4400  NCB
CIU2_EN_PP13_IP4_IO_W1S        0x0001070101AA4400  NCB
CIU2_EN_PP13_IP4_MBOX          0x0001070101A98400  NCB
CIU2_EN_PP13_IP4_MBOX_W1C      0x0001070101AB8400  NCB
CIU2_EN_PP13_IP4_MBOX_W1S      0x0001070101AA8400  NCB
CIU2_EN_PP13_IP4_MEM           0x0001070101A95400  NCB
CIU2_EN_PP13_IP4_MEM_W1C       0x0001070101AB5400  NCB
CIU2_EN_PP13_IP4_MEM_W1S       0x0001070101AA5400  NCB
CIU2_EN_PP13_IP4_MIO           0x0001070101A93400  NCB
CIU2_EN_PP13_IP4_MIO_W1C       0x0001070101AB3400  NCB
CIU2_EN_PP13_IP4_MIO_W1S       0x0001070101AA3400  NCB
CIU2_EN_PP13_IP4_PKT           0x0001070101A96400  NCB
CIU2_EN_PP13_IP4_PKT_W1C       0x0001070101AB6400  NCB
CIU2_EN_PP13_IP4_PKT_W1S       0x0001070101AA6400  NCB
CIU2_EN_PP13_IP4_RML           0x0001070101A92400  NCB
CIU2_EN_PP13_IP4_RML_W1C       0x0001070101AB2400  NCB
CIU2_EN_PP13_IP4_RML_W1S       0x0001070101AA2400  NCB
CIU2_EN_PP13_IP4_WDOG          0x0001070101A91400  NCB
CIU2_EN_PP13_IP4_WDOG_W1C      0x0001070101AB1400  NCB
CIU2_EN_PP13_IP4_WDOG_W1S      0x0001070101AA1400  NCB
CIU2_EN_PP13_IP4_WRKQ          0x0001070101A90400  NCB
CIU2_EN_PP13_IP4_WRKQ_W1C      0x0001070101AB0400  NCB
CIU2_EN_PP13_IP4_WRKQ_W1S      0x0001070101AA0400  NCB
CIU2_EN_PP14_IP2_GPIO          0x0001070101C97000  NCB
CIU2_EN_PP14_IP2_GPIO_W1C      0x0001070101CB7000  NCB
CIU2_EN_PP14_IP2_GPIO_W1S      0x0001070101CA7000  NCB
CIU2_EN_PP14_IP2_IO            0x0001070101C94000  NCB
CIU2_EN_PP14_IP2_IO_W1C        0x0001070101CB4000  NCB
CIU2_EN_PP14_IP2_IO_W1S        0x0001070101CA4000  NCB
CIU2_EN_PP14_IP2_MBOX          0x0001070101C98000  NCB
CIU2_EN_PP14_IP2_MBOX_W1C      0x0001070101CB8000  NCB
CIU2_EN_PP14_IP2_MBOX_W1S      0x0001070101CA8000  NCB
CIU2_EN_PP14_IP2_MEM           0x0001070101C95000  NCB
CIU2_EN_PP14_IP2_MEM_W1C       0x0001070101CB5000  NCB
CIU2_EN_PP14_IP2_MEM_W1S       0x0001070101CA5000  NCB
CIU2_EN_PP14_IP2_MIO           0x0001070101C93000  NCB
CIU2_EN_PP14_IP2_MIO_W1C       0x0001070101CB3000  NCB
CIU2_EN_PP14_IP2_MIO_W1S       0x0001070101CA3000  NCB
CIU2_EN_PP14_IP2_PKT           0x0001070101C96000  NCB
CIU2_EN_PP14_IP2_PKT_W1C       0x0001070101CB6000  NCB
CIU2_EN_PP14_IP2_PKT_W1S       0x0001070101CA6000  NCB
CIU2_EN_PP14_IP2_RML           0x0001070101C92000  NCB
CIU2_EN_PP14_IP2_RML_W1C       0x0001070101CB2000  NCB
CIU2_EN_PP14_IP2_RML_W1S       0x0001070101CA2000  NCB
CIU2_EN_PP14_IP2_WDOG          0x0001070101C91000  NCB
CIU2_EN_PP14_IP2_WDOG_W1C      0x0001070101CB1000  NCB
CIU2_EN_PP14_IP2_WDOG_W1S      0x0001070101CA1000  NCB
CIU2_EN_PP14_IP2_WRKQ          0x0001070101C90000  NCB
CIU2_EN_PP14_IP2_WRKQ_W1C      0x0001070101CB0000  NCB
CIU2_EN_PP14_IP2_WRKQ_W1S      0x0001070101CA0000  NCB
CIU2_EN_PP14_IP3_GPIO          0x0001070101C97200  NCB
CIU2_EN_PP14_IP3_GPIO_W1C      0x0001070101CB7200  NCB
CIU2_EN_PP14_IP3_GPIO_W1S      0x0001070101CA7200  NCB
CIU2_EN_PP14_IP3_IO            0x0001070101C94200  NCB
CIU2_EN_PP14_IP3_IO_W1C        0x0001070101CB4200  NCB
CIU2_EN_PP14_IP3_IO_W1S        0x0001070101CA4200  NCB
CIU2_EN_PP14_IP3_MBOX          0x0001070101C98200  NCB
CIU2_EN_PP14_IP3_MBOX_W1C      0x0001070101CB8200  NCB
CIU2_EN_PP14_IP3_MBOX_W1S      0x0001070101CA8200  NCB
CIU2_EN_PP14_IP3_MEM           0x0001070101C95200  NCB
CIU2_EN_PP14_IP3_MEM_W1C       0x0001070101CB5200  NCB
CIU2_EN_PP14_IP3_MEM_W1S       0x0001070101CA5200  NCB
CIU2_EN_PP14_IP3_MIO           0x0001070101C93200  NCB
CIU2_EN_PP14_IP3_MIO_W1C       0x0001070101CB3200  NCB
CIU2_EN_PP14_IP3_MIO_W1S       0x0001070101CA3200  NCB
CIU2_EN_PP14_IP3_PKT           0x0001070101C96200  NCB
CIU2_EN_PP14_IP3_PKT_W1C       0x0001070101CB6200  NCB
CIU2_EN_PP14_IP3_PKT_W1S       0x0001070101CA6200  NCB
CIU2_EN_PP14_IP3_RML           0x0001070101C92200  NCB
CIU2_EN_PP14_IP3_RML_W1C       0x0001070101CB2200  NCB
CIU2_EN_PP14_IP3_RML_W1S       0x0001070101CA2200  NCB
CIU2_EN_PP14_IP3_WDOG          0x0001070101C91200  NCB
CIU2_EN_PP14_IP3_WDOG_W1C      0x0001070101CB1200  NCB
CIU2_EN_PP14_IP3_WDOG_W1S      0x0001070101CA1200  NCB
CIU2_EN_PP14_IP3_WRKQ          0x0001070101C90200  NCB
CIU2_EN_PP14_IP3_WRKQ_W1C      0x0001070101CB0200  NCB
CIU2_EN_PP14_IP3_WRKQ_W1S      0x0001070101CA0200  NCB
CIU2_EN_PP14_IP4_GPIO          0x0001070101C97400  NCB
CIU2_EN_PP14_IP4_GPIO_W1C      0x0001070101CB7400  NCB
CIU2_EN_PP14_IP4_GPIO_W1S      0x0001070101CA7400  NCB
CIU2_EN_PP14_IP4_IO            0x0001070101C94400  NCB
CIU2_EN_PP14_IP4_IO_W1C        0x0001070101CB4400  NCB
CIU2_EN_PP14_IP4_IO_W1S        0x0001070101CA4400  NCB
CIU2_EN_PP14_IP4_MBOX          0x0001070101C98400  NCB
CIU2_EN_PP14_IP4_MBOX_W1C      0x0001070101CB8400  NCB
CIU2_EN_PP14_IP4_MBOX_W1S      0x0001070101CA8400  NCB
CIU2_EN_PP14_IP4_MEM           0x0001070101C95400  NCB
CIU2_EN_PP14_IP4_MEM_W1C       0x0001070101CB5400  NCB
CIU2_EN_PP14_IP4_MEM_W1S       0x0001070101CA5400  NCB
CIU2_EN_PP14_IP4_MIO           0x0001070101C93400  NCB
CIU2_EN_PP14_IP4_MIO_W1C       0x0001070101CB3400  NCB
CIU2_EN_PP14_IP4_MIO_W1S       0x0001070101CA3400  NCB
CIU2_EN_PP14_IP4_PKT           0x0001070101C96400  NCB
CIU2_EN_PP14_IP4_PKT_W1C       0x0001070101CB6400  NCB
CIU2_EN_PP14_IP4_PKT_W1S       0x0001070101CA6400  NCB
CIU2_EN_PP14_IP4_RML           0x0001070101C92400  NCB
CIU2_EN_PP14_IP4_RML_W1C       0x0001070101CB2400  NCB
CIU2_EN_PP14_IP4_RML_W1S       0x0001070101CA2400  NCB
CIU2_EN_PP14_IP4_WDOG          0x0001070101C91400  NCB
CIU2_EN_PP14_IP4_WDOG_W1C      0x0001070101CB1400  NCB
CIU2_EN_PP14_IP4_WDOG_W1S      0x0001070101CA1400  NCB
CIU2_EN_PP14_IP4_WRKQ          0x0001070101C90400  NCB
CIU2_EN_PP14_IP4_WRKQ_W1C      0x0001070101CB0400  NCB
CIU2_EN_PP14_IP4_WRKQ_W1S      0x0001070101CA0400  NCB
CIU2_EN_PP15_IP2_GPIO          0x0001070101E97000  NCB
CIU2_EN_PP15_IP2_GPIO_W1C      0x0001070101EB7000  NCB
CIU2_EN_PP15_IP2_GPIO_W1S      0x0001070101EA7000  NCB
CIU2_EN_PP15_IP2_IO            0x0001070101E94000  NCB
CIU2_EN_PP15_IP2_IO_W1C        0x0001070101EB4000  NCB
CIU2_EN_PP15_IP2_IO_W1S        0x0001070101EA4000  NCB
CIU2_EN_PP15_IP2_MBOX          0x0001070101E98000  NCB
CIU2_EN_PP15_IP2_MBOX_W1C      0x0001070101EB8000  NCB
CIU2_EN_PP15_IP2_MBOX_W1S      0x0001070101EA8000  NCB
CIU2_EN_PP15_IP2_MEM           0x0001070101E95000  NCB
CIU2_EN_PP15_IP2_MEM_W1C       0x0001070101EB5000  NCB
CIU2_EN_PP15_IP2_MEM_W1S       0x0001070101EA5000  NCB
CIU2_EN_PP15_IP2_MIO           0x0001070101E93000  NCB
CIU2_EN_PP15_IP2_MIO_W1C       0x0001070101EB3000  NCB
CIU2_EN_PP15_IP2_MIO_W1S       0x0001070101EA3000  NCB
CIU2_EN_PP15_IP2_PKT           0x0001070101E96000  NCB
CIU2_EN_PP15_IP2_PKT_W1C       0x0001070101EB6000  NCB
CIU2_EN_PP15_IP2_PKT_W1S       0x0001070101EA6000  NCB
CIU2_EN_PP15_IP2_RML           0x0001070101E92000  NCB
CIU2_EN_PP15_IP2_RML_W1C       0x0001070101EB2000  NCB
CIU2_EN_PP15_IP2_RML_W1S       0x0001070101EA2000  NCB
CIU2_EN_PP15_IP2_WDOG          0x0001070101E91000  NCB
CIU2_EN_PP15_IP2_WDOG_W1C      0x0001070101EB1000  NCB
CIU2_EN_PP15_IP2_WDOG_W1S      0x0001070101EA1000  NCB
CIU2_EN_PP15_IP2_WRKQ          0x0001070101E90000  NCB
CIU2_EN_PP15_IP2_WRKQ_W1C      0x0001070101EB0000  NCB
CIU2_EN_PP15_IP2_WRKQ_W1S      0x0001070101EA0000  NCB
CIU2_EN_PP15_IP3_GPIO          0x0001070101E97200  NCB
CIU2_EN_PP15_IP3_GPIO_W1C      0x0001070101EB7200  NCB
CIU2_EN_PP15_IP3_GPIO_W1S      0x0001070101EA7200  NCB
CIU2_EN_PP15_IP3_IO            0x0001070101E94200  NCB
CIU2_EN_PP15_IP3_IO_W1C        0x0001070101EB4200  NCB
CIU2_EN_PP15_IP3_IO_W1S        0x0001070101EA4200  NCB
CIU2_EN_PP15_IP3_MBOX          0x0001070101E98200  NCB
CIU2_EN_PP15_IP3_MBOX_W1C      0x0001070101EB8200  NCB
CIU2_EN_PP15_IP3_MBOX_W1S      0x0001070101EA8200  NCB
CIU2_EN_PP15_IP3_MEM           0x0001070101E95200  NCB
CIU2_EN_PP15_IP3_MEM_W1C       0x0001070101EB5200  NCB
CIU2_EN_PP15_IP3_MEM_W1S       0x0001070101EA5200  NCB
CIU2_EN_PP15_IP3_MIO           0x0001070101E93200  NCB
CIU2_EN_PP15_IP3_MIO_W1C       0x0001070101EB3200  NCB
CIU2_EN_PP15_IP3_MIO_W1S       0x0001070101EA3200  NCB
CIU2_EN_PP15_IP3_PKT           0x0001070101E96200  NCB
CIU2_EN_PP15_IP3_PKT_W1C       0x0001070101EB6200  NCB
CIU2_EN_PP15_IP3_PKT_W1S       0x0001070101EA6200  NCB
CIU2_EN_PP15_IP3_RML           0x0001070101E92200  NCB
CIU2_EN_PP15_IP3_RML_W1C       0x0001070101EB2200  NCB
CIU2_EN_PP15_IP3_RML_W1S       0x0001070101EA2200  NCB
CIU2_EN_PP15_IP3_WDOG          0x0001070101E91200  NCB
CIU2_EN_PP15_IP3_WDOG_W1C      0x0001070101EB1200  NCB
CIU2_EN_PP15_IP3_WDOG_W1S      0x0001070101EA1200  NCB
CIU2_EN_PP15_IP3_WRKQ          0x0001070101E90200  NCB
CIU2_EN_PP15_IP3_WRKQ_W1C      0x0001070101EB0200  NCB
CIU2_EN_PP15_IP3_WRKQ_W1S      0x0001070101EA0200  NCB
CIU2_EN_PP15_IP4_GPIO          0x0001070101E97400  NCB
CIU2_EN_PP15_IP4_GPIO_W1C      0x0001070101EB7400  NCB
CIU2_EN_PP15_IP4_GPIO_W1S      0x0001070101EA7400  NCB
CIU2_EN_PP15_IP4_IO            0x0001070101E94400  NCB
CIU2_EN_PP15_IP4_IO_W1C        0x0001070101EB4400  NCB
CIU2_EN_PP15_IP4_IO_W1S        0x0001070101EA4400  NCB
CIU2_EN_PP15_IP4_MBOX          0x0001070101E98400  NCB
CIU2_EN_PP15_IP4_MBOX_W1C      0x0001070101EB8400  NCB
CIU2_EN_PP15_IP4_MBOX_W1S      0x0001070101EA8400  NCB
CIU2_EN_PP15_IP4_MEM           0x0001070101E95400  NCB
CIU2_EN_PP15_IP4_MEM_W1C       0x0001070101EB5400  NCB
CIU2_EN_PP15_IP4_MEM_W1S       0x0001070101EA5400  NCB
CIU2_EN_PP15_IP4_MIO           0x0001070101E93400  NCB
CIU2_EN_PP15_IP4_MIO_W1C       0x0001070101EB3400  NCB
CIU2_EN_PP15_IP4_MIO_W1S       0x0001070101EA3400  NCB
CIU2_EN_PP15_IP4_PKT           0x0001070101E96400  NCB
CIU2_EN_PP15_IP4_PKT_W1C       0x0001070101EB6400  NCB
CIU2_EN_PP15_IP4_PKT_W1S       0x0001070101EA6400  NCB
CIU2_EN_PP15_IP4_RML           0x0001070101E92400  NCB
CIU2_EN_PP15_IP4_RML_W1C       0x0001070101EB2400  NCB
CIU2_EN_PP15_IP4_RML_W1S       0x0001070101EA2400  NCB
CIU2_EN_PP15_IP4_WDOG          0x0001070101E91400  NCB
CIU2_EN_PP15_IP4_WDOG_W1C      0x0001070101EB1400  NCB
CIU2_EN_PP15_IP4_WDOG_W1S      0x0001070101EA1400  NCB
CIU2_EN_PP15_IP4_WRKQ          0x0001070101E90400  NCB
CIU2_EN_PP15_IP4_WRKQ_W1C      0x0001070101EB0400  NCB
CIU2_EN_PP15_IP4_WRKQ_W1S      0x0001070101EA0400  NCB
CIU2_EN_PP16_IP2_GPIO          0x0001070102097000  NCB
CIU2_EN_PP16_IP2_GPIO_W1C      0x00010701020B7000  NCB
CIU2_EN_PP16_IP2_GPIO_W1S      0x00010701020A7000  NCB
CIU2_EN_PP16_IP2_IO            0x0001070102094000  NCB
CIU2_EN_PP16_IP2_IO_W1C        0x00010701020B4000  NCB
CIU2_EN_PP16_IP2_IO_W1S        0x00010701020A4000  NCB
CIU2_EN_PP16_IP2_MBOX          0x0001070102098000  NCB
CIU2_EN_PP16_IP2_MBOX_W1C      0x00010701020B8000  NCB
CIU2_EN_PP16_IP2_MBOX_W1S      0x00010701020A8000  NCB
CIU2_EN_PP16_IP2_MEM           0x0001070102095000  NCB
CIU2_EN_PP16_IP2_MEM_W1C       0x00010701020B5000  NCB
CIU2_EN_PP16_IP2_MEM_W1S       0x00010701020A5000  NCB
CIU2_EN_PP16_IP2_MIO           0x0001070102093000  NCB
CIU2_EN_PP16_IP2_MIO_W1C       0x00010701020B3000  NCB
CIU2_EN_PP16_IP2_MIO_W1S       0x00010701020A3000  NCB
CIU2_EN_PP16_IP2_PKT           0x0001070102096000  NCB
CIU2_EN_PP16_IP2_PKT_W1C       0x00010701020B6000  NCB
CIU2_EN_PP16_IP2_PKT_W1S       0x00010701020A6000  NCB
CIU2_EN_PP16_IP2_RML           0x0001070102092000  NCB
CIU2_EN_PP16_IP2_RML_W1C       0x00010701020B2000  NCB
CIU2_EN_PP16_IP2_RML_W1S       0x00010701020A2000  NCB
CIU2_EN_PP16_IP2_WDOG          0x0001070102091000  NCB
CIU2_EN_PP16_IP2_WDOG_W1C      0x00010701020B1000  NCB
CIU2_EN_PP16_IP2_WDOG_W1S      0x00010701020A1000  NCB
CIU2_EN_PP16_IP2_WRKQ          0x0001070102090000  NCB
CIU2_EN_PP16_IP2_WRKQ_W1C      0x00010701020B0000  NCB
CIU2_EN_PP16_IP2_WRKQ_W1S      0x00010701020A0000  NCB
CIU2_EN_PP16_IP3_GPIO          0x0001070102097200  NCB
CIU2_EN_PP16_IP3_GPIO_W1C      0x00010701020B7200  NCB
CIU2_EN_PP16_IP3_GPIO_W1S      0x00010701020A7200  NCB
CIU2_EN_PP16_IP3_IO            0x0001070102094200  NCB
CIU2_EN_PP16_IP3_IO_W1C        0x00010701020B4200  NCB
CIU2_EN_PP16_IP3_IO_W1S        0x00010701020A4200  NCB
CIU2_EN_PP16_IP3_MBOX          0x0001070102098200  NCB
CIU2_EN_PP16_IP3_MBOX_W1C      0x00010701020B8200  NCB
CIU2_EN_PP16_IP3_MBOX_W1S      0x00010701020A8200  NCB
CIU2_EN_PP16_IP3_MEM           0x0001070102095200  NCB
CIU2_EN_PP16_IP3_MEM_W1C       0x00010701020B5200  NCB
CIU2_EN_PP16_IP3_MEM_W1S       0x00010701020A5200  NCB
CIU2_EN_PP16_IP3_MIO           0x0001070102093200  NCB
CIU2_EN_PP16_IP3_MIO_W1C       0x00010701020B3200  NCB
CIU2_EN_PP16_IP3_MIO_W1S       0x00010701020A3200  NCB
CIU2_EN_PP16_IP3_PKT           0x0001070102096200  NCB
CIU2_EN_PP16_IP3_PKT_W1C       0x00010701020B6200  NCB
CIU2_EN_PP16_IP3_PKT_W1S       0x00010701020A6200  NCB
CIU2_EN_PP16_IP3_RML           0x0001070102092200  NCB
CIU2_EN_PP16_IP3_RML_W1C       0x00010701020B2200  NCB
CIU2_EN_PP16_IP3_RML_W1S       0x00010701020A2200  NCB
CIU2_EN_PP16_IP3_WDOG          0x0001070102091200  NCB
CIU2_EN_PP16_IP3_WDOG_W1C      0x00010701020B1200  NCB
CIU2_EN_PP16_IP3_WDOG_W1S      0x00010701020A1200  NCB
CIU2_EN_PP16_IP3_WRKQ          0x0001070102090200  NCB
CIU2_EN_PP16_IP3_WRKQ_W1C      0x00010701020B0200  NCB
CIU2_EN_PP16_IP3_WRKQ_W1S      0x00010701020A0200  NCB
CIU2_EN_PP16_IP4_GPIO          0x0001070102097400  NCB
CIU2_EN_PP16_IP4_GPIO_W1C      0x00010701020B7400  NCB
CIU2_EN_PP16_IP4_GPIO_W1S      0x00010701020A7400  NCB
CIU2_EN_PP16_IP4_IO            0x0001070102094400  NCB
CIU2_EN_PP16_IP4_IO_W1C        0x00010701020B4400  NCB
CIU2_EN_PP16_IP4_IO_W1S        0x00010701020A4400  NCB
CIU2_EN_PP16_IP4_MBOX          0x0001070102098400  NCB
CIU2_EN_PP16_IP4_MBOX_W1C      0x00010701020B8400  NCB
CIU2_EN_PP16_IP4_MBOX_W1S      0x00010701020A8400  NCB
CIU2_EN_PP16_IP4_MEM           0x0001070102095400  NCB
CIU2_EN_PP16_IP4_MEM_W1C       0x00010701020B5400  NCB
CIU2_EN_PP16_IP4_MEM_W1S       0x00010701020A5400  NCB
CIU2_EN_PP16_IP4_MIO           0x0001070102093400  NCB
CIU2_EN_PP16_IP4_MIO_W1C       0x00010701020B3400  NCB
CIU2_EN_PP16_IP4_MIO_W1S       0x00010701020A3400  NCB
CIU2_EN_PP16_IP4_PKT           0x0001070102096400  NCB
CIU2_EN_PP16_IP4_PKT_W1C       0x00010701020B6400  NCB
CIU2_EN_PP16_IP4_PKT_W1S       0x00010701020A6400  NCB
CIU2_EN_PP16_IP4_RML           0x0001070102092400  NCB
CIU2_EN_PP16_IP4_RML_W1C       0x00010701020B2400  NCB
CIU2_EN_PP16_IP4_RML_W1S       0x00010701020A2400  NCB
CIU2_EN_PP16_IP4_WDOG          0x0001070102091400  NCB
CIU2_EN_PP16_IP4_WDOG_W1C      0x00010701020B1400  NCB
CIU2_EN_PP16_IP4_WDOG_W1S      0x00010701020A1400  NCB
CIU2_EN_PP16_IP4_WRKQ          0x0001070102090400  NCB
CIU2_EN_PP16_IP4_WRKQ_W1C      0x00010701020B0400  NCB
CIU2_EN_PP16_IP4_WRKQ_W1S      0x00010701020A0400  NCB
CIU2_EN_PP17_IP2_GPIO          0x0001070102297000  NCB
CIU2_EN_PP17_IP2_GPIO_W1C      0x00010701022B7000  NCB
CIU2_EN_PP17_IP2_GPIO_W1S      0x00010701022A7000  NCB
CIU2_EN_PP17_IP2_IO            0x0001070102294000  NCB
CIU2_EN_PP17_IP2_IO_W1C        0x00010701022B4000  NCB
CIU2_EN_PP17_IP2_IO_W1S        0x00010701022A4000  NCB
CIU2_EN_PP17_IP2_MBOX          0x0001070102298000  NCB
CIU2_EN_PP17_IP2_MBOX_W1C      0x00010701022B8000  NCB
CIU2_EN_PP17_IP2_MBOX_W1S      0x00010701022A8000  NCB
CIU2_EN_PP17_IP2_MEM           0x0001070102295000  NCB
CIU2_EN_PP17_IP2_MEM_W1C       0x00010701022B5000  NCB
CIU2_EN_PP17_IP2_MEM_W1S       0x00010701022A5000  NCB
CIU2_EN_PP17_IP2_MIO           0x0001070102293000  NCB
CIU2_EN_PP17_IP2_MIO_W1C       0x00010701022B3000  NCB
CIU2_EN_PP17_IP2_MIO_W1S       0x00010701022A3000  NCB
CIU2_EN_PP17_IP2_PKT           0x0001070102296000  NCB
CIU2_EN_PP17_IP2_PKT_W1C       0x00010701022B6000  NCB
CIU2_EN_PP17_IP2_PKT_W1S       0x00010701022A6000  NCB
CIU2_EN_PP17_IP2_RML           0x0001070102292000  NCB
CIU2_EN_PP17_IP2_RML_W1C       0x00010701022B2000  NCB
CIU2_EN_PP17_IP2_RML_W1S       0x00010701022A2000  NCB
CIU2_EN_PP17_IP2_WDOG          0x0001070102291000  NCB
CIU2_EN_PP17_IP2_WDOG_W1C      0x00010701022B1000  NCB
CIU2_EN_PP17_IP2_WDOG_W1S      0x00010701022A1000  NCB
CIU2_EN_PP17_IP2_WRKQ          0x0001070102290000  NCB
CIU2_EN_PP17_IP2_WRKQ_W1C      0x00010701022B0000  NCB
CIU2_EN_PP17_IP2_WRKQ_W1S      0x00010701022A0000  NCB
CIU2_EN_PP17_IP3_GPIO          0x0001070102297200  NCB
CIU2_EN_PP17_IP3_GPIO_W1C      0x00010701022B7200  NCB
CIU2_EN_PP17_IP3_GPIO_W1S      0x00010701022A7200  NCB
CIU2_EN_PP17_IP3_IO            0x0001070102294200  NCB
CIU2_EN_PP17_IP3_IO_W1C        0x00010701022B4200  NCB
CIU2_EN_PP17_IP3_IO_W1S        0x00010701022A4200  NCB
CIU2_EN_PP17_IP3_MBOX          0x0001070102298200  NCB
CIU2_EN_PP17_IP3_MBOX_W1C      0x00010701022B8200  NCB
CIU2_EN_PP17_IP3_MBOX_W1S      0x00010701022A8200  NCB
CIU2_EN_PP17_IP3_MEM           0x0001070102295200  NCB
CIU2_EN_PP17_IP3_MEM_W1C       0x00010701022B5200  NCB
CIU2_EN_PP17_IP3_MEM_W1S       0x00010701022A5200  NCB
CIU2_EN_PP17_IP3_MIO           0x0001070102293200  NCB
CIU2_EN_PP17_IP3_MIO_W1C       0x00010701022B3200  NCB
CIU2_EN_PP17_IP3_MIO_W1S       0x00010701022A3200  NCB
CIU2_EN_PP17_IP3_PKT           0x0001070102296200  NCB
CIU2_EN_PP17_IP3_PKT_W1C       0x00010701022B6200  NCB
CIU2_EN_PP17_IP3_PKT_W1S       0x00010701022A6200  NCB
CIU2_EN_PP17_IP3_RML           0x0001070102292200  NCB
CIU2_EN_PP17_IP3_RML_W1C       0x00010701022B2200  NCB
CIU2_EN_PP17_IP3_RML_W1S       0x00010701022A2200  NCB
CIU2_EN_PP17_IP3_WDOG          0x0001070102291200  NCB
CIU2_EN_PP17_IP3_WDOG_W1C      0x00010701022B1200  NCB
CIU2_EN_PP17_IP3_WDOG_W1S      0x00010701022A1200  NCB
CIU2_EN_PP17_IP3_WRKQ          0x0001070102290200  NCB
CIU2_EN_PP17_IP3_WRKQ_W1C      0x00010701022B0200  NCB
CIU2_EN_PP17_IP3_WRKQ_W1S      0x00010701022A0200  NCB
CIU2_EN_PP17_IP4_GPIO          0x0001070102297400  NCB
CIU2_EN_PP17_IP4_GPIO_W1C      0x00010701022B7400  NCB
CIU2_EN_PP17_IP4_GPIO_W1S      0x00010701022A7400  NCB
CIU2_EN_PP17_IP4_IO            0x0001070102294400  NCB
CIU2_EN_PP17_IP4_IO_W1C        0x00010701022B4400  NCB
CIU2_EN_PP17_IP4_IO_W1S        0x00010701022A4400  NCB
CIU2_EN_PP17_IP4_MBOX          0x0001070102298400  NCB
CIU2_EN_PP17_IP4_MBOX_W1C      0x00010701022B8400  NCB
CIU2_EN_PP17_IP4_MBOX_W1S      0x00010701022A8400  NCB
CIU2_EN_PP17_IP4_MEM           0x0001070102295400  NCB
CIU2_EN_PP17_IP4_MEM_W1C       0x00010701022B5400  NCB
CIU2_EN_PP17_IP4_MEM_W1S       0x00010701022A5400  NCB
CIU2_EN_PP17_IP4_MIO           0x0001070102293400  NCB
CIU2_EN_PP17_IP4_MIO_W1C       0x00010701022B3400  NCB
CIU2_EN_PP17_IP4_MIO_W1S       0x00010701022A3400  NCB
CIU2_EN_PP17_IP4_PKT           0x0001070102296400  NCB
CIU2_EN_PP17_IP4_PKT_W1C       0x00010701022B6400  NCB
CIU2_EN_PP17_IP4_PKT_W1S       0x00010701022A6400  NCB
CIU2_EN_PP17_IP4_RML           0x0001070102292400  NCB
CIU2_EN_PP17_IP4_RML_W1C       0x00010701022B2400  NCB
CIU2_EN_PP17_IP4_RML_W1S       0x00010701022A2400  NCB
CIU2_EN_PP17_IP4_WDOG          0x0001070102291400  NCB
CIU2_EN_PP17_IP4_WDOG_W1C      0x00010701022B1400  NCB
CIU2_EN_PP17_IP4_WDOG_W1S      0x00010701022A1400  NCB
CIU2_EN_PP17_IP4_WRKQ          0x0001070102290400  NCB
CIU2_EN_PP17_IP4_WRKQ_W1C      0x00010701022B0400  NCB
CIU2_EN_PP17_IP4_WRKQ_W1S      0x00010701022A0400  NCB
CIU2_EN_PP18_IP2_GPIO          0x0001070102497000  NCB
CIU2_EN_PP18_IP2_GPIO_W1C      0x00010701024B7000  NCB
CIU2_EN_PP18_IP2_GPIO_W1S      0x00010701024A7000  NCB
CIU2_EN_PP18_IP2_IO            0x0001070102494000  NCB
CIU2_EN_PP18_IP2_IO_W1C        0x00010701024B4000  NCB
CIU2_EN_PP18_IP2_IO_W1S        0x00010701024A4000  NCB
CIU2_EN_PP18_IP2_MBOX          0x0001070102498000  NCB
CIU2_EN_PP18_IP2_MBOX_W1C      0x00010701024B8000  NCB
CIU2_EN_PP18_IP2_MBOX_W1S      0x00010701024A8000  NCB
CIU2_EN_PP18_IP2_MEM           0x0001070102495000  NCB
CIU2_EN_PP18_IP2_MEM_W1C       0x00010701024B5000  NCB
CIU2_EN_PP18_IP2_MEM_W1S       0x00010701024A5000  NCB
CIU2_EN_PP18_IP2_MIO           0x0001070102493000  NCB
CIU2_EN_PP18_IP2_MIO_W1C       0x00010701024B3000  NCB
CIU2_EN_PP18_IP2_MIO_W1S       0x00010701024A3000  NCB
CIU2_EN_PP18_IP2_PKT           0x0001070102496000  NCB
CIU2_EN_PP18_IP2_PKT_W1C       0x00010701024B6000  NCB
CIU2_EN_PP18_IP2_PKT_W1S       0x00010701024A6000  NCB
CIU2_EN_PP18_IP2_RML           0x0001070102492000  NCB
CIU2_EN_PP18_IP2_RML_W1C       0x00010701024B2000  NCB
CIU2_EN_PP18_IP2_RML_W1S       0x00010701024A2000  NCB
CIU2_EN_PP18_IP2_WDOG          0x0001070102491000  NCB
CIU2_EN_PP18_IP2_WDOG_W1C      0x00010701024B1000  NCB
CIU2_EN_PP18_IP2_WDOG_W1S      0x00010701024A1000  NCB
CIU2_EN_PP18_IP2_WRKQ          0x0001070102490000  NCB
CIU2_EN_PP18_IP2_WRKQ_W1C      0x00010701024B0000  NCB
CIU2_EN_PP18_IP2_WRKQ_W1S      0x00010701024A0000  NCB
CIU2_EN_PP18_IP3_GPIO          0x0001070102497200  NCB
CIU2_EN_PP18_IP3_GPIO_W1C      0x00010701024B7200  NCB
CIU2_EN_PP18_IP3_GPIO_W1S      0x00010701024A7200  NCB
CIU2_EN_PP18_IP3_IO            0x0001070102494200  NCB
CIU2_EN_PP18_IP3_IO_W1C        0x00010701024B4200  NCB
CIU2_EN_PP18_IP3_IO_W1S        0x00010701024A4200  NCB
CIU2_EN_PP18_IP3_MBOX          0x0001070102498200  NCB
CIU2_EN_PP18_IP3_MBOX_W1C      0x00010701024B8200  NCB
CIU2_EN_PP18_IP3_MBOX_W1S      0x00010701024A8200  NCB
CIU2_EN_PP18_IP3_MEM           0x0001070102495200  NCB
CIU2_EN_PP18_IP3_MEM_W1C       0x00010701024B5200  NCB
CIU2_EN_PP18_IP3_MEM_W1S       0x00010701024A5200  NCB
CIU2_EN_PP18_IP3_MIO           0x0001070102493200  NCB
CIU2_EN_PP18_IP3_MIO_W1C       0x00010701024B3200  NCB
CIU2_EN_PP18_IP3_MIO_W1S       0x00010701024A3200  NCB
CIU2_EN_PP18_IP3_PKT           0x0001070102496200  NCB
CIU2_EN_PP18_IP3_PKT_W1C       0x00010701024B6200  NCB
CIU2_EN_PP18_IP3_PKT_W1S       0x00010701024A6200  NCB
CIU2_EN_PP18_IP3_RML           0x0001070102492200  NCB
CIU2_EN_PP18_IP3_RML_W1C       0x00010701024B2200  NCB
CIU2_EN_PP18_IP3_RML_W1S       0x00010701024A2200  NCB
CIU2_EN_PP18_IP3_WDOG          0x0001070102491200  NCB
CIU2_EN_PP18_IP3_WDOG_W1C      0x00010701024B1200  NCB
CIU2_EN_PP18_IP3_WDOG_W1S      0x00010701024A1200  NCB
CIU2_EN_PP18_IP3_WRKQ          0x0001070102490200  NCB
CIU2_EN_PP18_IP3_WRKQ_W1C      0x00010701024B0200  NCB
CIU2_EN_PP18_IP3_WRKQ_W1S      0x00010701024A0200  NCB
CIU2_EN_PP18_IP4_GPIO          0x0001070102497400  NCB
CIU2_EN_PP18_IP4_GPIO_W1C      0x00010701024B7400  NCB
CIU2_EN_PP18_IP4_GPIO_W1S      0x00010701024A7400  NCB
CIU2_EN_PP18_IP4_IO            0x0001070102494400  NCB
CIU2_EN_PP18_IP4_IO_W1C        0x00010701024B4400  NCB
CIU2_EN_PP18_IP4_IO_W1S        0x00010701024A4400  NCB
CIU2_EN_PP18_IP4_MBOX          0x0001070102498400  NCB
CIU2_EN_PP18_IP4_MBOX_W1C      0x00010701024B8400  NCB
CIU2_EN_PP18_IP4_MBOX_W1S      0x00010701024A8400  NCB
CIU2_EN_PP18_IP4_MEM           0x0001070102495400  NCB
CIU2_EN_PP18_IP4_MEM_W1C       0x00010701024B5400  NCB
CIU2_EN_PP18_IP4_MEM_W1S       0x00010701024A5400  NCB
CIU2_EN_PP18_IP4_MIO           0x0001070102493400  NCB
CIU2_EN_PP18_IP4_MIO_W1C       0x00010701024B3400  NCB
CIU2_EN_PP18_IP4_MIO_W1S       0x00010701024A3400  NCB
CIU2_EN_PP18_IP4_PKT           0x0001070102496400  NCB
CIU2_EN_PP18_IP4_PKT_W1C       0x00010701024B6400  NCB
CIU2_EN_PP18_IP4_PKT_W1S       0x00010701024A6400  NCB
CIU2_EN_PP18_IP4_RML           0x0001070102492400  NCB
CIU2_EN_PP18_IP4_RML_W1C       0x00010701024B2400  NCB
CIU2_EN_PP18_IP4_RML_W1S       0x00010701024A2400  NCB
CIU2_EN_PP18_IP4_WDOG          0x0001070102491400  NCB
CIU2_EN_PP18_IP4_WDOG_W1C      0x00010701024B1400  NCB
CIU2_EN_PP18_IP4_WDOG_W1S      0x00010701024A1400  NCB
CIU2_EN_PP18_IP4_WRKQ          0x0001070102490400  NCB
CIU2_EN_PP18_IP4_WRKQ_W1C      0x00010701024B0400  NCB
CIU2_EN_PP18_IP4_WRKQ_W1S      0x00010701024A0400  NCB
CIU2_EN_PP19_IP2_GPIO          0x0001070102697000  NCB
CIU2_EN_PP19_IP2_GPIO_W1C      0x00010701026B7000  NCB
CIU2_EN_PP19_IP2_GPIO_W1S      0x00010701026A7000  NCB
CIU2_EN_PP19_IP2_IO            0x0001070102694000  NCB
CIU2_EN_PP19_IP2_IO_W1C        0x00010701026B4000  NCB
CIU2_EN_PP19_IP2_IO_W1S        0x00010701026A4000  NCB
CIU2_EN_PP19_IP2_MBOX          0x0001070102698000  NCB
CIU2_EN_PP19_IP2_MBOX_W1C      0x00010701026B8000  NCB
CIU2_EN_PP19_IP2_MBOX_W1S      0x00010701026A8000  NCB
CIU2_EN_PP19_IP2_MEM           0x0001070102695000  NCB
CIU2_EN_PP19_IP2_MEM_W1C       0x00010701026B5000  NCB
CIU2_EN_PP19_IP2_MEM_W1S       0x00010701026A5000  NCB
CIU2_EN_PP19_IP2_MIO           0x0001070102693000  NCB
CIU2_EN_PP19_IP2_MIO_W1C       0x00010701026B3000  NCB
CIU2_EN_PP19_IP2_MIO_W1S       0x00010701026A3000  NCB
CIU2_EN_PP19_IP2_PKT           0x0001070102696000  NCB
CIU2_EN_PP19_IP2_PKT_W1C       0x00010701026B6000  NCB
CIU2_EN_PP19_IP2_PKT_W1S       0x00010701026A6000  NCB
CIU2_EN_PP19_IP2_RML           0x0001070102692000  NCB
CIU2_EN_PP19_IP2_RML_W1C       0x00010701026B2000  NCB
CIU2_EN_PP19_IP2_RML_W1S       0x00010701026A2000  NCB
CIU2_EN_PP19_IP2_WDOG          0x0001070102691000  NCB
CIU2_EN_PP19_IP2_WDOG_W1C      0x00010701026B1000  NCB
CIU2_EN_PP19_IP2_WDOG_W1S      0x00010701026A1000  NCB
CIU2_EN_PP19_IP2_WRKQ          0x0001070102690000  NCB
CIU2_EN_PP19_IP2_WRKQ_W1C      0x00010701026B0000  NCB
CIU2_EN_PP19_IP2_WRKQ_W1S      0x00010701026A0000  NCB
CIU2_EN_PP19_IP3_GPIO          0x0001070102697200  NCB
CIU2_EN_PP19_IP3_GPIO_W1C      0x00010701026B7200  NCB
CIU2_EN_PP19_IP3_GPIO_W1S      0x00010701026A7200  NCB
CIU2_EN_PP19_IP3_IO            0x0001070102694200  NCB
CIU2_EN_PP19_IP3_IO_W1C        0x00010701026B4200  NCB
CIU2_EN_PP19_IP3_IO_W1S        0x00010701026A4200  NCB
CIU2_EN_PP19_IP3_MBOX          0x0001070102698200  NCB
CIU2_EN_PP19_IP3_MBOX_W1C      0x00010701026B8200  NCB
CIU2_EN_PP19_IP3_MBOX_W1S      0x00010701026A8200  NCB
CIU2_EN_PP19_IP3_MEM           0x0001070102695200  NCB
CIU2_EN_PP19_IP3_MEM_W1C       0x00010701026B5200  NCB
CIU2_EN_PP19_IP3_MEM_W1S       0x00010701026A5200  NCB
CIU2_EN_PP19_IP3_MIO           0x0001070102693200  NCB
CIU2_EN_PP19_IP3_MIO_W1C       0x00010701026B3200  NCB
CIU2_EN_PP19_IP3_MIO_W1S       0x00010701026A3200  NCB
CIU2_EN_PP19_IP3_PKT           0x0001070102696200  NCB
CIU2_EN_PP19_IP3_PKT_W1C       0x00010701026B6200  NCB
CIU2_EN_PP19_IP3_PKT_W1S       0x00010701026A6200  NCB
CIU2_EN_PP19_IP3_RML           0x0001070102692200  NCB
CIU2_EN_PP19_IP3_RML_W1C       0x00010701026B2200  NCB
CIU2_EN_PP19_IP3_RML_W1S       0x00010701026A2200  NCB
CIU2_EN_PP19_IP3_WDOG          0x0001070102691200  NCB
CIU2_EN_PP19_IP3_WDOG_W1C      0x00010701026B1200  NCB
CIU2_EN_PP19_IP3_WDOG_W1S      0x00010701026A1200  NCB
CIU2_EN_PP19_IP3_WRKQ          0x0001070102690200  NCB
CIU2_EN_PP19_IP3_WRKQ_W1C      0x00010701026B0200  NCB
CIU2_EN_PP19_IP3_WRKQ_W1S      0x00010701026A0200  NCB
CIU2_EN_PP19_IP4_GPIO          0x0001070102697400  NCB
CIU2_EN_PP19_IP4_GPIO_W1C      0x00010701026B7400  NCB
CIU2_EN_PP19_IP4_GPIO_W1S      0x00010701026A7400  NCB
CIU2_EN_PP19_IP4_IO            0x0001070102694400  NCB
CIU2_EN_PP19_IP4_IO_W1C        0x00010701026B4400  NCB
CIU2_EN_PP19_IP4_IO_W1S        0x00010701026A4400  NCB
CIU2_EN_PP19_IP4_MBOX          0x0001070102698400  NCB
CIU2_EN_PP19_IP4_MBOX_W1C      0x00010701026B8400  NCB
CIU2_EN_PP19_IP4_MBOX_W1S      0x00010701026A8400  NCB
CIU2_EN_PP19_IP4_MEM           0x0001070102695400  NCB
CIU2_EN_PP19_IP4_MEM_W1C       0x00010701026B5400  NCB
CIU2_EN_PP19_IP4_MEM_W1S       0x00010701026A5400  NCB
CIU2_EN_PP19_IP4_MIO           0x0001070102693400  NCB
CIU2_EN_PP19_IP4_MIO_W1C       0x00010701026B3400  NCB
CIU2_EN_PP19_IP4_MIO_W1S       0x00010701026A3400  NCB
CIU2_EN_PP19_IP4_PKT           0x0001070102696400  NCB
CIU2_EN_PP19_IP4_PKT_W1C       0x00010701026B6400  NCB
CIU2_EN_PP19_IP4_PKT_W1S       0x00010701026A6400  NCB
CIU2_EN_PP19_IP4_RML           0x0001070102692400  NCB
CIU2_EN_PP19_IP4_RML_W1C       0x00010701026B2400  NCB
CIU2_EN_PP19_IP4_RML_W1S       0x00010701026A2400  NCB
CIU2_EN_PP19_IP4_WDOG          0x0001070102691400  NCB
CIU2_EN_PP19_IP4_WDOG_W1C      0x00010701026B1400  NCB
CIU2_EN_PP19_IP4_WDOG_W1S      0x00010701026A1400  NCB
CIU2_EN_PP19_IP4_WRKQ          0x0001070102690400  NCB
CIU2_EN_PP19_IP4_WRKQ_W1C      0x00010701026B0400  NCB
CIU2_EN_PP19_IP4_WRKQ_W1S      0x00010701026A0400  NCB
CIU2_EN_PP20_IP2_GPIO          0x0001070102897000  NCB
CIU2_EN_PP20_IP2_GPIO_W1C      0x00010701028B7000  NCB
CIU2_EN_PP20_IP2_GPIO_W1S      0x00010701028A7000  NCB
CIU2_EN_PP20_IP2_IO            0x0001070102894000  NCB
CIU2_EN_PP20_IP2_IO_W1C        0x00010701028B4000  NCB
CIU2_EN_PP20_IP2_IO_W1S        0x00010701028A4000  NCB
CIU2_EN_PP20_IP2_MBOX          0x0001070102898000  NCB
CIU2_EN_PP20_IP2_MBOX_W1C      0x00010701028B8000  NCB
CIU2_EN_PP20_IP2_MBOX_W1S      0x00010701028A8000  NCB
CIU2_EN_PP20_IP2_MEM           0x0001070102895000  NCB
CIU2_EN_PP20_IP2_MEM_W1C       0x00010701028B5000  NCB
CIU2_EN_PP20_IP2_MEM_W1S       0x00010701028A5000  NCB
CIU2_EN_PP20_IP2_MIO           0x0001070102893000  NCB
CIU2_EN_PP20_IP2_MIO_W1C       0x00010701028B3000  NCB
CIU2_EN_PP20_IP2_MIO_W1S       0x00010701028A3000  NCB
CIU2_EN_PP20_IP2_PKT           0x0001070102896000  NCB
CIU2_EN_PP20_IP2_PKT_W1C       0x00010701028B6000  NCB
CIU2_EN_PP20_IP2_PKT_W1S       0x00010701028A6000  NCB
CIU2_EN_PP20_IP2_RML           0x0001070102892000  NCB
CIU2_EN_PP20_IP2_RML_W1C       0x00010701028B2000  NCB
CIU2_EN_PP20_IP2_RML_W1S       0x00010701028A2000  NCB
CIU2_EN_PP20_IP2_WDOG          0x0001070102891000  NCB
CIU2_EN_PP20_IP2_WDOG_W1C      0x00010701028B1000  NCB
CIU2_EN_PP20_IP2_WDOG_W1S      0x00010701028A1000  NCB
CIU2_EN_PP20_IP2_WRKQ          0x0001070102890000  NCB
CIU2_EN_PP20_IP2_WRKQ_W1C      0x00010701028B0000  NCB
CIU2_EN_PP20_IP2_WRKQ_W1S      0x00010701028A0000  NCB
CIU2_EN_PP20_IP3_GPIO          0x0001070102897200  NCB
CIU2_EN_PP20_IP3_GPIO_W1C      0x00010701028B7200  NCB
CIU2_EN_PP20_IP3_GPIO_W1S      0x00010701028A7200  NCB
CIU2_EN_PP20_IP3_IO            0x0001070102894200  NCB
CIU2_EN_PP20_IP3_IO_W1C        0x00010701028B4200  NCB
CIU2_EN_PP20_IP3_IO_W1S        0x00010701028A4200  NCB
CIU2_EN_PP20_IP3_MBOX          0x0001070102898200  NCB
CIU2_EN_PP20_IP3_MBOX_W1C      0x00010701028B8200  NCB
CIU2_EN_PP20_IP3_MBOX_W1S      0x00010701028A8200  NCB
CIU2_EN_PP20_IP3_MEM           0x0001070102895200  NCB
CIU2_EN_PP20_IP3_MEM_W1C       0x00010701028B5200  NCB
CIU2_EN_PP20_IP3_MEM_W1S       0x00010701028A5200  NCB
CIU2_EN_PP20_IP3_MIO           0x0001070102893200  NCB
CIU2_EN_PP20_IP3_MIO_W1C       0x00010701028B3200  NCB
CIU2_EN_PP20_IP3_MIO_W1S       0x00010701028A3200  NCB
CIU2_EN_PP20_IP3_PKT           0x0001070102896200  NCB
CIU2_EN_PP20_IP3_PKT_W1C       0x00010701028B6200  NCB
CIU2_EN_PP20_IP3_PKT_W1S       0x00010701028A6200  NCB
CIU2_EN_PP20_IP3_RML           0x0001070102892200  NCB
CIU2_EN_PP20_IP3_RML_W1C       0x00010701028B2200  NCB
CIU2_EN_PP20_IP3_RML_W1S       0x00010701028A2200  NCB
CIU2_EN_PP20_IP3_WDOG          0x0001070102891200  NCB
CIU2_EN_PP20_IP3_WDOG_W1C      0x00010701028B1200  NCB
CIU2_EN_PP20_IP3_WDOG_W1S      0x00010701028A1200  NCB
CIU2_EN_PP20_IP3_WRKQ          0x0001070102890200  NCB
CIU2_EN_PP20_IP3_WRKQ_W1C      0x00010701028B0200  NCB
CIU2_EN_PP20_IP3_WRKQ_W1S      0x00010701028A0200  NCB
CIU2_EN_PP20_IP4_GPIO          0x0001070102897400  NCB
CIU2_EN_PP20_IP4_GPIO_W1C      0x00010701028B7400  NCB
CIU2_EN_PP20_IP4_GPIO_W1S      0x00010701028A7400  NCB
CIU2_EN_PP20_IP4_IO            0x0001070102894400  NCB
CIU2_EN_PP20_IP4_IO_W1C        0x00010701028B4400  NCB
CIU2_EN_PP20_IP4_IO_W1S        0x00010701028A4400  NCB
CIU2_EN_PP20_IP4_MBOX          0x0001070102898400  NCB
CIU2_EN_PP20_IP4_MBOX_W1C      0x00010701028B8400  NCB
CIU2_EN_PP20_IP4_MBOX_W1S      0x00010701028A8400  NCB
CIU2_EN_PP20_IP4_MEM           0x0001070102895400  NCB
CIU2_EN_PP20_IP4_MEM_W1C       0x00010701028B5400  NCB
CIU2_EN_PP20_IP4_MEM_W1S       0x00010701028A5400  NCB
CIU2_EN_PP20_IP4_MIO           0x0001070102893400  NCB
CIU2_EN_PP20_IP4_MIO_W1C       0x00010701028B3400  NCB
CIU2_EN_PP20_IP4_MIO_W1S       0x00010701028A3400  NCB
CIU2_EN_PP20_IP4_PKT           0x0001070102896400  NCB
CIU2_EN_PP20_IP4_PKT_W1C       0x00010701028B6400  NCB
CIU2_EN_PP20_IP4_PKT_W1S       0x00010701028A6400  NCB
CIU2_EN_PP20_IP4_RML           0x0001070102892400  NCB
CIU2_EN_PP20_IP4_RML_W1C       0x00010701028B2400  NCB
CIU2_EN_PP20_IP4_RML_W1S       0x00010701028A2400  NCB
CIU2_EN_PP20_IP4_WDOG          0x0001070102891400  NCB
CIU2_EN_PP20_IP4_WDOG_W1C      0x00010701028B1400  NCB
CIU2_EN_PP20_IP4_WDOG_W1S      0x00010701028A1400  NCB
CIU2_EN_PP20_IP4_WRKQ          0x0001070102890400  NCB
CIU2_EN_PP20_IP4_WRKQ_W1C      0x00010701028B0400  NCB
CIU2_EN_PP20_IP4_WRKQ_W1S      0x00010701028A0400  NCB
CIU2_EN_PP21_IP2_GPIO          0x0001070102A97000  NCB
CIU2_EN_PP21_IP2_GPIO_W1C      0x0001070102AB7000  NCB
CIU2_EN_PP21_IP2_GPIO_W1S      0x0001070102AA7000  NCB
CIU2_EN_PP21_IP2_IO            0x0001070102A94000  NCB
CIU2_EN_PP21_IP2_IO_W1C        0x0001070102AB4000  NCB
CIU2_EN_PP21_IP2_IO_W1S        0x0001070102AA4000  NCB
CIU2_EN_PP21_IP2_MBOX          0x0001070102A98000  NCB
CIU2_EN_PP21_IP2_MBOX_W1C      0x0001070102AB8000  NCB
CIU2_EN_PP21_IP2_MBOX_W1S      0x0001070102AA8000  NCB
CIU2_EN_PP21_IP2_MEM           0x0001070102A95000  NCB
CIU2_EN_PP21_IP2_MEM_W1C       0x0001070102AB5000  NCB
CIU2_EN_PP21_IP2_MEM_W1S       0x0001070102AA5000  NCB
CIU2_EN_PP21_IP2_MIO           0x0001070102A93000  NCB
CIU2_EN_PP21_IP2_MIO_W1C       0x0001070102AB3000  NCB
CIU2_EN_PP21_IP2_MIO_W1S       0x0001070102AA3000  NCB
CIU2_EN_PP21_IP2_PKT           0x0001070102A96000  NCB
CIU2_EN_PP21_IP2_PKT_W1C       0x0001070102AB6000  NCB
CIU2_EN_PP21_IP2_PKT_W1S       0x0001070102AA6000  NCB
CIU2_EN_PP21_IP2_RML           0x0001070102A92000  NCB
CIU2_EN_PP21_IP2_RML_W1C       0x0001070102AB2000  NCB
CIU2_EN_PP21_IP2_RML_W1S       0x0001070102AA2000  NCB
CIU2_EN_PP21_IP2_WDOG          0x0001070102A91000  NCB
CIU2_EN_PP21_IP2_WDOG_W1C      0x0001070102AB1000  NCB
CIU2_EN_PP21_IP2_WDOG_W1S      0x0001070102AA1000  NCB
CIU2_EN_PP21_IP2_WRKQ          0x0001070102A90000  NCB
CIU2_EN_PP21_IP2_WRKQ_W1C      0x0001070102AB0000  NCB
CIU2_EN_PP21_IP2_WRKQ_W1S      0x0001070102AA0000  NCB
CIU2_EN_PP21_IP3_GPIO          0x0001070102A97200  NCB
CIU2_EN_PP21_IP3_GPIO_W1C      0x0001070102AB7200  NCB
CIU2_EN_PP21_IP3_GPIO_W1S      0x0001070102AA7200  NCB
CIU2_EN_PP21_IP3_IO            0x0001070102A94200  NCB
CIU2_EN_PP21_IP3_IO_W1C        0x0001070102AB4200  NCB
CIU2_EN_PP21_IP3_IO_W1S        0x0001070102AA4200  NCB
CIU2_EN_PP21_IP3_MBOX          0x0001070102A98200  NCB
CIU2_EN_PP21_IP3_MBOX_W1C      0x0001070102AB8200  NCB
CIU2_EN_PP21_IP3_MBOX_W1S      0x0001070102AA8200  NCB
CIU2_EN_PP21_IP3_MEM           0x0001070102A95200  NCB
CIU2_EN_PP21_IP3_MEM_W1C       0x0001070102AB5200  NCB
CIU2_EN_PP21_IP3_MEM_W1S       0x0001070102AA5200  NCB
CIU2_EN_PP21_IP3_MIO           0x0001070102A93200  NCB
CIU2_EN_PP21_IP3_MIO_W1C       0x0001070102AB3200  NCB
CIU2_EN_PP21_IP3_MIO_W1S       0x0001070102AA3200  NCB
CIU2_EN_PP21_IP3_PKT           0x0001070102A96200  NCB
CIU2_EN_PP21_IP3_PKT_W1C       0x0001070102AB6200  NCB
CIU2_EN_PP21_IP3_PKT_W1S       0x0001070102AA6200  NCB
CIU2_EN_PP21_IP3_RML           0x0001070102A92200  NCB
CIU2_EN_PP21_IP3_RML_W1C       0x0001070102AB2200  NCB
CIU2_EN_PP21_IP3_RML_W1S       0x0001070102AA2200  NCB
CIU2_EN_PP21_IP3_WDOG          0x0001070102A91200  NCB
CIU2_EN_PP21_IP3_WDOG_W1C      0x0001070102AB1200  NCB
CIU2_EN_PP21_IP3_WDOG_W1S      0x0001070102AA1200  NCB
CIU2_EN_PP21_IP3_WRKQ          0x0001070102A90200  NCB
CIU2_EN_PP21_IP3_WRKQ_W1C      0x0001070102AB0200  NCB
CIU2_EN_PP21_IP3_WRKQ_W1S      0x0001070102AA0200  NCB
CIU2_EN_PP21_IP4_GPIO          0x0001070102A97400  NCB
CIU2_EN_PP21_IP4_GPIO_W1C      0x0001070102AB7400  NCB
CIU2_EN_PP21_IP4_GPIO_W1S      0x0001070102AA7400  NCB
CIU2_EN_PP21_IP4_IO            0x0001070102A94400  NCB
CIU2_EN_PP21_IP4_IO_W1C        0x0001070102AB4400  NCB
CIU2_EN_PP21_IP4_IO_W1S        0x0001070102AA4400  NCB
CIU2_EN_PP21_IP4_MBOX          0x0001070102A98400  NCB
CIU2_EN_PP21_IP4_MBOX_W1C      0x0001070102AB8400  NCB
CIU2_EN_PP21_IP4_MBOX_W1S      0x0001070102AA8400  NCB
CIU2_EN_PP21_IP4_MEM           0x0001070102A95400  NCB
CIU2_EN_PP21_IP4_MEM_W1C       0x0001070102AB5400  NCB
CIU2_EN_PP21_IP4_MEM_W1S       0x0001070102AA5400  NCB
CIU2_EN_PP21_IP4_MIO           0x0001070102A93400  NCB
CIU2_EN_PP21_IP4_MIO_W1C       0x0001070102AB3400  NCB
CIU2_EN_PP21_IP4_MIO_W1S       0x0001070102AA3400  NCB
CIU2_EN_PP21_IP4_PKT           0x0001070102A96400  NCB
CIU2_EN_PP21_IP4_PKT_W1C       0x0001070102AB6400  NCB
CIU2_EN_PP21_IP4_PKT_W1S       0x0001070102AA6400  NCB
CIU2_EN_PP21_IP4_RML           0x0001070102A92400  NCB
CIU2_EN_PP21_IP4_RML_W1C       0x0001070102AB2400  NCB
CIU2_EN_PP21_IP4_RML_W1S       0x0001070102AA2400  NCB
CIU2_EN_PP21_IP4_WDOG          0x0001070102A91400  NCB
CIU2_EN_PP21_IP4_WDOG_W1C      0x0001070102AB1400  NCB
CIU2_EN_PP21_IP4_WDOG_W1S      0x0001070102AA1400  NCB
CIU2_EN_PP21_IP4_WRKQ          0x0001070102A90400  NCB
CIU2_EN_PP21_IP4_WRKQ_W1C      0x0001070102AB0400  NCB
CIU2_EN_PP21_IP4_WRKQ_W1S      0x0001070102AA0400  NCB
CIU2_EN_PP22_IP2_GPIO          0x0001070102C97000  NCB
CIU2_EN_PP22_IP2_GPIO_W1C      0x0001070102CB7000  NCB
CIU2_EN_PP22_IP2_GPIO_W1S      0x0001070102CA7000  NCB
CIU2_EN_PP22_IP2_IO            0x0001070102C94000  NCB
CIU2_EN_PP22_IP2_IO_W1C        0x0001070102CB4000  NCB
CIU2_EN_PP22_IP2_IO_W1S        0x0001070102CA4000  NCB
CIU2_EN_PP22_IP2_MBOX          0x0001070102C98000  NCB
CIU2_EN_PP22_IP2_MBOX_W1C      0x0001070102CB8000  NCB
CIU2_EN_PP22_IP2_MBOX_W1S      0x0001070102CA8000  NCB
CIU2_EN_PP22_IP2_MEM           0x0001070102C95000  NCB
CIU2_EN_PP22_IP2_MEM_W1C       0x0001070102CB5000  NCB
CIU2_EN_PP22_IP2_MEM_W1S       0x0001070102CA5000  NCB
CIU2_EN_PP22_IP2_MIO           0x0001070102C93000  NCB
CIU2_EN_PP22_IP2_MIO_W1C       0x0001070102CB3000  NCB
CIU2_EN_PP22_IP2_MIO_W1S       0x0001070102CA3000  NCB
CIU2_EN_PP22_IP2_PKT           0x0001070102C96000  NCB
CIU2_EN_PP22_IP2_PKT_W1C       0x0001070102CB6000  NCB
CIU2_EN_PP22_IP2_PKT_W1S       0x0001070102CA6000  NCB
CIU2_EN_PP22_IP2_RML           0x0001070102C92000  NCB
CIU2_EN_PP22_IP2_RML_W1C       0x0001070102CB2000  NCB
CIU2_EN_PP22_IP2_RML_W1S       0x0001070102CA2000  NCB
CIU2_EN_PP22_IP2_WDOG          0x0001070102C91000  NCB
CIU2_EN_PP22_IP2_WDOG_W1C      0x0001070102CB1000  NCB
CIU2_EN_PP22_IP2_WDOG_W1S      0x0001070102CA1000  NCB
CIU2_EN_PP22_IP2_WRKQ          0x0001070102C90000  NCB
CIU2_EN_PP22_IP2_WRKQ_W1C      0x0001070102CB0000  NCB
CIU2_EN_PP22_IP2_WRKQ_W1S      0x0001070102CA0000  NCB
CIU2_EN_PP22_IP3_GPIO          0x0001070102C97200  NCB
CIU2_EN_PP22_IP3_GPIO_W1C      0x0001070102CB7200  NCB
CIU2_EN_PP22_IP3_GPIO_W1S      0x0001070102CA7200  NCB
CIU2_EN_PP22_IP3_IO            0x0001070102C94200  NCB
CIU2_EN_PP22_IP3_IO_W1C        0x0001070102CB4200  NCB
CIU2_EN_PP22_IP3_IO_W1S        0x0001070102CA4200  NCB
CIU2_EN_PP22_IP3_MBOX          0x0001070102C98200  NCB
CIU2_EN_PP22_IP3_MBOX_W1C      0x0001070102CB8200  NCB
CIU2_EN_PP22_IP3_MBOX_W1S      0x0001070102CA8200  NCB
CIU2_EN_PP22_IP3_MEM           0x0001070102C95200  NCB
CIU2_EN_PP22_IP3_MEM_W1C       0x0001070102CB5200  NCB
CIU2_EN_PP22_IP3_MEM_W1S       0x0001070102CA5200  NCB
CIU2_EN_PP22_IP3_MIO           0x0001070102C93200  NCB
CIU2_EN_PP22_IP3_MIO_W1C       0x0001070102CB3200  NCB
CIU2_EN_PP22_IP3_MIO_W1S       0x0001070102CA3200  NCB
CIU2_EN_PP22_IP3_PKT           0x0001070102C96200  NCB
CIU2_EN_PP22_IP3_PKT_W1C       0x0001070102CB6200  NCB
CIU2_EN_PP22_IP3_PKT_W1S       0x0001070102CA6200  NCB
CIU2_EN_PP22_IP3_RML           0x0001070102C92200  NCB
CIU2_EN_PP22_IP3_RML_W1C       0x0001070102CB2200  NCB
CIU2_EN_PP22_IP3_RML_W1S       0x0001070102CA2200  NCB
CIU2_EN_PP22_IP3_WDOG          0x0001070102C91200  NCB
CIU2_EN_PP22_IP3_WDOG_W1C      0x0001070102CB1200  NCB
CIU2_EN_PP22_IP3_WDOG_W1S      0x0001070102CA1200  NCB
CIU2_EN_PP22_IP3_WRKQ          0x0001070102C90200  NCB
CIU2_EN_PP22_IP3_WRKQ_W1C      0x0001070102CB0200  NCB
CIU2_EN_PP22_IP3_WRKQ_W1S      0x0001070102CA0200  NCB
CIU2_EN_PP22_IP4_GPIO          0x0001070102C97400  NCB
CIU2_EN_PP22_IP4_GPIO_W1C      0x0001070102CB7400  NCB
CIU2_EN_PP22_IP4_GPIO_W1S      0x0001070102CA7400  NCB
CIU2_EN_PP22_IP4_IO            0x0001070102C94400  NCB
CIU2_EN_PP22_IP4_IO_W1C        0x0001070102CB4400  NCB
CIU2_EN_PP22_IP4_IO_W1S        0x0001070102CA4400  NCB
CIU2_EN_PP22_IP4_MBOX          0x0001070102C98400  NCB
CIU2_EN_PP22_IP4_MBOX_W1C      0x0001070102CB8400  NCB
CIU2_EN_PP22_IP4_MBOX_W1S      0x0001070102CA8400  NCB
CIU2_EN_PP22_IP4_MEM           0x0001070102C95400  NCB
CIU2_EN_PP22_IP4_MEM_W1C       0x0001070102CB5400  NCB
CIU2_EN_PP22_IP4_MEM_W1S       0x0001070102CA5400  NCB
CIU2_EN_PP22_IP4_MIO           0x0001070102C93400  NCB
CIU2_EN_PP22_IP4_MIO_W1C       0x0001070102CB3400  NCB
CIU2_EN_PP22_IP4_MIO_W1S       0x0001070102CA3400  NCB
CIU2_EN_PP22_IP4_PKT           0x0001070102C96400  NCB
CIU2_EN_PP22_IP4_PKT_W1C       0x0001070102CB6400  NCB
CIU2_EN_PP22_IP4_PKT_W1S       0x0001070102CA6400  NCB
CIU2_EN_PP22_IP4_RML           0x0001070102C92400  NCB
CIU2_EN_PP22_IP4_RML_W1C       0x0001070102CB2400  NCB
CIU2_EN_PP22_IP4_RML_W1S       0x0001070102CA2400  NCB
CIU2_EN_PP22_IP4_WDOG          0x0001070102C91400  NCB
CIU2_EN_PP22_IP4_WDOG_W1C      0x0001070102CB1400  NCB
CIU2_EN_PP22_IP4_WDOG_W1S      0x0001070102CA1400  NCB
CIU2_EN_PP22_IP4_WRKQ          0x0001070102C90400  NCB
CIU2_EN_PP22_IP4_WRKQ_W1C      0x0001070102CB0400  NCB
CIU2_EN_PP22_IP4_WRKQ_W1S      0x0001070102CA0400  NCB
CIU2_EN_PP23_IP2_GPIO          0x0001070102E97000  NCB
CIU2_EN_PP23_IP2_GPIO_W1C      0x0001070102EB7000  NCB
CIU2_EN_PP23_IP2_GPIO_W1S      0x0001070102EA7000  NCB
CIU2_EN_PP23_IP2_IO            0x0001070102E94000  NCB
CIU2_EN_PP23_IP2_IO_W1C        0x0001070102EB4000  NCB
CIU2_EN_PP23_IP2_IO_W1S        0x0001070102EA4000  NCB
CIU2_EN_PP23_IP2_MBOX          0x0001070102E98000  NCB
CIU2_EN_PP23_IP2_MBOX_W1C      0x0001070102EB8000  NCB
CIU2_EN_PP23_IP2_MBOX_W1S      0x0001070102EA8000  NCB
CIU2_EN_PP23_IP2_MEM           0x0001070102E95000  NCB
CIU2_EN_PP23_IP2_MEM_W1C       0x0001070102EB5000  NCB
CIU2_EN_PP23_IP2_MEM_W1S       0x0001070102EA5000  NCB
CIU2_EN_PP23_IP2_MIO           0x0001070102E93000  NCB
CIU2_EN_PP23_IP2_MIO_W1C       0x0001070102EB3000  NCB
CIU2_EN_PP23_IP2_MIO_W1S       0x0001070102EA3000  NCB
CIU2_EN_PP23_IP2_PKT           0x0001070102E96000  NCB
CIU2_EN_PP23_IP2_PKT_W1C       0x0001070102EB6000  NCB
CIU2_EN_PP23_IP2_PKT_W1S       0x0001070102EA6000  NCB
CIU2_EN_PP23_IP2_RML           0x0001070102E92000  NCB
CIU2_EN_PP23_IP2_RML_W1C       0x0001070102EB2000  NCB
CIU2_EN_PP23_IP2_RML_W1S       0x0001070102EA2000  NCB
CIU2_EN_PP23_IP2_WDOG          0x0001070102E91000  NCB
CIU2_EN_PP23_IP2_WDOG_W1C      0x0001070102EB1000  NCB
CIU2_EN_PP23_IP2_WDOG_W1S      0x0001070102EA1000  NCB
CIU2_EN_PP23_IP2_WRKQ          0x0001070102E90000  NCB
CIU2_EN_PP23_IP2_WRKQ_W1C      0x0001070102EB0000  NCB
CIU2_EN_PP23_IP2_WRKQ_W1S      0x0001070102EA0000  NCB
CIU2_EN_PP23_IP3_GPIO          0x0001070102E97200  NCB
CIU2_EN_PP23_IP3_GPIO_W1C      0x0001070102EB7200  NCB
CIU2_EN_PP23_IP3_GPIO_W1S      0x0001070102EA7200  NCB
CIU2_EN_PP23_IP3_IO            0x0001070102E94200  NCB
CIU2_EN_PP23_IP3_IO_W1C        0x0001070102EB4200  NCB
CIU2_EN_PP23_IP3_IO_W1S        0x0001070102EA4200  NCB
CIU2_EN_PP23_IP3_MBOX          0x0001070102E98200  NCB
CIU2_EN_PP23_IP3_MBOX_W1C      0x0001070102EB8200  NCB
CIU2_EN_PP23_IP3_MBOX_W1S      0x0001070102EA8200  NCB
CIU2_EN_PP23_IP3_MEM           0x0001070102E95200  NCB
CIU2_EN_PP23_IP3_MEM_W1C       0x0001070102EB5200  NCB
CIU2_EN_PP23_IP3_MEM_W1S       0x0001070102EA5200  NCB
CIU2_EN_PP23_IP3_MIO           0x0001070102E93200  NCB
CIU2_EN_PP23_IP3_MIO_W1C       0x0001070102EB3200  NCB
CIU2_EN_PP23_IP3_MIO_W1S       0x0001070102EA3200  NCB
CIU2_EN_PP23_IP3_PKT           0x0001070102E96200  NCB
CIU2_EN_PP23_IP3_PKT_W1C       0x0001070102EB6200  NCB
CIU2_EN_PP23_IP3_PKT_W1S       0x0001070102EA6200  NCB
CIU2_EN_PP23_IP3_RML           0x0001070102E92200  NCB
CIU2_EN_PP23_IP3_RML_W1C       0x0001070102EB2200  NCB
CIU2_EN_PP23_IP3_RML_W1S       0x0001070102EA2200  NCB
CIU2_EN_PP23_IP3_WDOG          0x0001070102E91200  NCB
CIU2_EN_PP23_IP3_WDOG_W1C      0x0001070102EB1200  NCB
CIU2_EN_PP23_IP3_WDOG_W1S      0x0001070102EA1200  NCB
CIU2_EN_PP23_IP3_WRKQ          0x0001070102E90200  NCB
CIU2_EN_PP23_IP3_WRKQ_W1C      0x0001070102EB0200  NCB
CIU2_EN_PP23_IP3_WRKQ_W1S      0x0001070102EA0200  NCB
CIU2_EN_PP23_IP4_GPIO          0x0001070102E97400  NCB
CIU2_EN_PP23_IP4_GPIO_W1C      0x0001070102EB7400  NCB
CIU2_EN_PP23_IP4_GPIO_W1S      0x0001070102EA7400  NCB
CIU2_EN_PP23_IP4_IO            0x0001070102E94400  NCB
CIU2_EN_PP23_IP4_IO_W1C        0x0001070102EB4400  NCB
CIU2_EN_PP23_IP4_IO_W1S        0x0001070102EA4400  NCB
CIU2_EN_PP23_IP4_MBOX          0x0001070102E98400  NCB
CIU2_EN_PP23_IP4_MBOX_W1C      0x0001070102EB8400  NCB
CIU2_EN_PP23_IP4_MBOX_W1S      0x0001070102EA8400  NCB
CIU2_EN_PP23_IP4_MEM           0x0001070102E95400  NCB
CIU2_EN_PP23_IP4_MEM_W1C       0x0001070102EB5400  NCB
CIU2_EN_PP23_IP4_MEM_W1S       0x0001070102EA5400  NCB
CIU2_EN_PP23_IP4_MIO           0x0001070102E93400  NCB
CIU2_EN_PP23_IP4_MIO_W1C       0x0001070102EB3400  NCB
CIU2_EN_PP23_IP4_MIO_W1S       0x0001070102EA3400  NCB
CIU2_EN_PP23_IP4_PKT           0x0001070102E96400  NCB
CIU2_EN_PP23_IP4_PKT_W1C       0x0001070102EB6400  NCB
CIU2_EN_PP23_IP4_PKT_W1S       0x0001070102EA6400  NCB
CIU2_EN_PP23_IP4_RML           0x0001070102E92400  NCB
CIU2_EN_PP23_IP4_RML_W1C       0x0001070102EB2400  NCB
CIU2_EN_PP23_IP4_RML_W1S       0x0001070102EA2400  NCB
CIU2_EN_PP23_IP4_WDOG          0x0001070102E91400  NCB
CIU2_EN_PP23_IP4_WDOG_W1C      0x0001070102EB1400  NCB
CIU2_EN_PP23_IP4_WDOG_W1S      0x0001070102EA1400  NCB
CIU2_EN_PP23_IP4_WRKQ          0x0001070102E90400  NCB
CIU2_EN_PP23_IP4_WRKQ_W1C      0x0001070102EB0400  NCB
CIU2_EN_PP23_IP4_WRKQ_W1S      0x0001070102EA0400  NCB
CIU2_EN_PP24_IP2_GPIO          0x0001070103097000  NCB
CIU2_EN_PP24_IP2_GPIO_W1C      0x00010701030B7000  NCB
CIU2_EN_PP24_IP2_GPIO_W1S      0x00010701030A7000  NCB
CIU2_EN_PP24_IP2_IO            0x0001070103094000  NCB
CIU2_EN_PP24_IP2_IO_W1C        0x00010701030B4000  NCB
CIU2_EN_PP24_IP2_IO_W1S        0x00010701030A4000  NCB
CIU2_EN_PP24_IP2_MBOX          0x0001070103098000  NCB
CIU2_EN_PP24_IP2_MBOX_W1C      0x00010701030B8000  NCB
CIU2_EN_PP24_IP2_MBOX_W1S      0x00010701030A8000  NCB
CIU2_EN_PP24_IP2_MEM           0x0001070103095000  NCB
CIU2_EN_PP24_IP2_MEM_W1C       0x00010701030B5000  NCB
CIU2_EN_PP24_IP2_MEM_W1S       0x00010701030A5000  NCB
CIU2_EN_PP24_IP2_MIO           0x0001070103093000  NCB
CIU2_EN_PP24_IP2_MIO_W1C       0x00010701030B3000  NCB
CIU2_EN_PP24_IP2_MIO_W1S       0x00010701030A3000  NCB
CIU2_EN_PP24_IP2_PKT           0x0001070103096000  NCB
CIU2_EN_PP24_IP2_PKT_W1C       0x00010701030B6000  NCB
CIU2_EN_PP24_IP2_PKT_W1S       0x00010701030A6000  NCB
CIU2_EN_PP24_IP2_RML           0x0001070103092000  NCB
CIU2_EN_PP24_IP2_RML_W1C       0x00010701030B2000  NCB
CIU2_EN_PP24_IP2_RML_W1S       0x00010701030A2000  NCB
CIU2_EN_PP24_IP2_WDOG          0x0001070103091000  NCB
CIU2_EN_PP24_IP2_WDOG_W1C      0x00010701030B1000  NCB
CIU2_EN_PP24_IP2_WDOG_W1S      0x00010701030A1000  NCB
CIU2_EN_PP24_IP2_WRKQ          0x0001070103090000  NCB
CIU2_EN_PP24_IP2_WRKQ_W1C      0x00010701030B0000  NCB
CIU2_EN_PP24_IP2_WRKQ_W1S      0x00010701030A0000  NCB
CIU2_EN_PP24_IP3_GPIO          0x0001070103097200  NCB
CIU2_EN_PP24_IP3_GPIO_W1C      0x00010701030B7200  NCB
CIU2_EN_PP24_IP3_GPIO_W1S      0x00010701030A7200  NCB
CIU2_EN_PP24_IP3_IO            0x0001070103094200  NCB
CIU2_EN_PP24_IP3_IO_W1C        0x00010701030B4200  NCB
CIU2_EN_PP24_IP3_IO_W1S        0x00010701030A4200  NCB
CIU2_EN_PP24_IP3_MBOX          0x0001070103098200  NCB
CIU2_EN_PP24_IP3_MBOX_W1C      0x00010701030B8200  NCB
CIU2_EN_PP24_IP3_MBOX_W1S      0x00010701030A8200  NCB
CIU2_EN_PP24_IP3_MEM           0x0001070103095200  NCB
CIU2_EN_PP24_IP3_MEM_W1C       0x00010701030B5200  NCB
CIU2_EN_PP24_IP3_MEM_W1S       0x00010701030A5200  NCB
CIU2_EN_PP24_IP3_MIO           0x0001070103093200  NCB
CIU2_EN_PP24_IP3_MIO_W1C       0x00010701030B3200  NCB
CIU2_EN_PP24_IP3_MIO_W1S       0x00010701030A3200  NCB
CIU2_EN_PP24_IP3_PKT           0x0001070103096200  NCB
CIU2_EN_PP24_IP3_PKT_W1C       0x00010701030B6200  NCB
CIU2_EN_PP24_IP3_PKT_W1S       0x00010701030A6200  NCB
CIU2_EN_PP24_IP3_RML           0x0001070103092200  NCB
CIU2_EN_PP24_IP3_RML_W1C       0x00010701030B2200  NCB
CIU2_EN_PP24_IP3_RML_W1S       0x00010701030A2200  NCB
CIU2_EN_PP24_IP3_WDOG          0x0001070103091200  NCB
CIU2_EN_PP24_IP3_WDOG_W1C      0x00010701030B1200  NCB
CIU2_EN_PP24_IP3_WDOG_W1S      0x00010701030A1200  NCB
CIU2_EN_PP24_IP3_WRKQ          0x0001070103090200  NCB
CIU2_EN_PP24_IP3_WRKQ_W1C      0x00010701030B0200  NCB
CIU2_EN_PP24_IP3_WRKQ_W1S      0x00010701030A0200  NCB
CIU2_EN_PP24_IP4_GPIO          0x0001070103097400  NCB
CIU2_EN_PP24_IP4_GPIO_W1C      0x00010701030B7400  NCB
CIU2_EN_PP24_IP4_GPIO_W1S      0x00010701030A7400  NCB
CIU2_EN_PP24_IP4_IO            0x0001070103094400  NCB
CIU2_EN_PP24_IP4_IO_W1C        0x00010701030B4400  NCB
CIU2_EN_PP24_IP4_IO_W1S        0x00010701030A4400  NCB
CIU2_EN_PP24_IP4_MBOX          0x0001070103098400  NCB
CIU2_EN_PP24_IP4_MBOX_W1C      0x00010701030B8400  NCB
CIU2_EN_PP24_IP4_MBOX_W1S      0x00010701030A8400  NCB
CIU2_EN_PP24_IP4_MEM           0x0001070103095400  NCB
CIU2_EN_PP24_IP4_MEM_W1C       0x00010701030B5400  NCB
CIU2_EN_PP24_IP4_MEM_W1S       0x00010701030A5400  NCB
CIU2_EN_PP24_IP4_MIO           0x0001070103093400  NCB
CIU2_EN_PP24_IP4_MIO_W1C       0x00010701030B3400  NCB
CIU2_EN_PP24_IP4_MIO_W1S       0x00010701030A3400  NCB
CIU2_EN_PP24_IP4_PKT           0x0001070103096400  NCB
CIU2_EN_PP24_IP4_PKT_W1C       0x00010701030B6400  NCB
CIU2_EN_PP24_IP4_PKT_W1S       0x00010701030A6400  NCB
CIU2_EN_PP24_IP4_RML           0x0001070103092400  NCB
CIU2_EN_PP24_IP4_RML_W1C       0x00010701030B2400  NCB
CIU2_EN_PP24_IP4_RML_W1S       0x00010701030A2400  NCB
CIU2_EN_PP24_IP4_WDOG          0x0001070103091400  NCB
CIU2_EN_PP24_IP4_WDOG_W1C      0x00010701030B1400  NCB
CIU2_EN_PP24_IP4_WDOG_W1S      0x00010701030A1400  NCB
CIU2_EN_PP24_IP4_WRKQ          0x0001070103090400  NCB
CIU2_EN_PP24_IP4_WRKQ_W1C      0x00010701030B0400  NCB
CIU2_EN_PP24_IP4_WRKQ_W1S      0x00010701030A0400  NCB
CIU2_EN_PP25_IP2_GPIO          0x0001070103297000  NCB
CIU2_EN_PP25_IP2_GPIO_W1C      0x00010701032B7000  NCB
CIU2_EN_PP25_IP2_GPIO_W1S      0x00010701032A7000  NCB
CIU2_EN_PP25_IP2_IO            0x0001070103294000  NCB
CIU2_EN_PP25_IP2_IO_W1C        0x00010701032B4000  NCB
CIU2_EN_PP25_IP2_IO_W1S        0x00010701032A4000  NCB
CIU2_EN_PP25_IP2_MBOX          0x0001070103298000  NCB
CIU2_EN_PP25_IP2_MBOX_W1C      0x00010701032B8000  NCB
CIU2_EN_PP25_IP2_MBOX_W1S      0x00010701032A8000  NCB
CIU2_EN_PP25_IP2_MEM           0x0001070103295000  NCB
CIU2_EN_PP25_IP2_MEM_W1C       0x00010701032B5000  NCB
CIU2_EN_PP25_IP2_MEM_W1S       0x00010701032A5000  NCB
CIU2_EN_PP25_IP2_MIO           0x0001070103293000  NCB
CIU2_EN_PP25_IP2_MIO_W1C       0x00010701032B3000  NCB
CIU2_EN_PP25_IP2_MIO_W1S       0x00010701032A3000  NCB
CIU2_EN_PP25_IP2_PKT           0x0001070103296000  NCB
CIU2_EN_PP25_IP2_PKT_W1C       0x00010701032B6000  NCB
CIU2_EN_PP25_IP2_PKT_W1S       0x00010701032A6000  NCB
CIU2_EN_PP25_IP2_RML           0x0001070103292000  NCB
CIU2_EN_PP25_IP2_RML_W1C       0x00010701032B2000  NCB
CIU2_EN_PP25_IP2_RML_W1S       0x00010701032A2000  NCB
CIU2_EN_PP25_IP2_WDOG          0x0001070103291000  NCB
CIU2_EN_PP25_IP2_WDOG_W1C      0x00010701032B1000  NCB
CIU2_EN_PP25_IP2_WDOG_W1S      0x00010701032A1000  NCB
CIU2_EN_PP25_IP2_WRKQ          0x0001070103290000  NCB
CIU2_EN_PP25_IP2_WRKQ_W1C      0x00010701032B0000  NCB
CIU2_EN_PP25_IP2_WRKQ_W1S      0x00010701032A0000  NCB
CIU2_EN_PP25_IP3_GPIO          0x0001070103297200  NCB
CIU2_EN_PP25_IP3_GPIO_W1C      0x00010701032B7200  NCB
CIU2_EN_PP25_IP3_GPIO_W1S      0x00010701032A7200  NCB
CIU2_EN_PP25_IP3_IO            0x0001070103294200  NCB
CIU2_EN_PP25_IP3_IO_W1C        0x00010701032B4200  NCB
CIU2_EN_PP25_IP3_IO_W1S        0x00010701032A4200  NCB
CIU2_EN_PP25_IP3_MBOX          0x0001070103298200  NCB
CIU2_EN_PP25_IP3_MBOX_W1C      0x00010701032B8200  NCB
CIU2_EN_PP25_IP3_MBOX_W1S      0x00010701032A8200  NCB
CIU2_EN_PP25_IP3_MEM           0x0001070103295200  NCB
CIU2_EN_PP25_IP3_MEM_W1C       0x00010701032B5200  NCB
CIU2_EN_PP25_IP3_MEM_W1S       0x00010701032A5200  NCB
CIU2_EN_PP25_IP3_MIO           0x0001070103293200  NCB
CIU2_EN_PP25_IP3_MIO_W1C       0x00010701032B3200  NCB
CIU2_EN_PP25_IP3_MIO_W1S       0x00010701032A3200  NCB
CIU2_EN_PP25_IP3_PKT           0x0001070103296200  NCB
CIU2_EN_PP25_IP3_PKT_W1C       0x00010701032B6200  NCB
CIU2_EN_PP25_IP3_PKT_W1S       0x00010701032A6200  NCB
CIU2_EN_PP25_IP3_RML           0x0001070103292200  NCB
CIU2_EN_PP25_IP3_RML_W1C       0x00010701032B2200  NCB
CIU2_EN_PP25_IP3_RML_W1S       0x00010701032A2200  NCB
CIU2_EN_PP25_IP3_WDOG          0x0001070103291200  NCB
CIU2_EN_PP25_IP3_WDOG_W1C      0x00010701032B1200  NCB
CIU2_EN_PP25_IP3_WDOG_W1S      0x00010701032A1200  NCB
CIU2_EN_PP25_IP3_WRKQ          0x0001070103290200  NCB
CIU2_EN_PP25_IP3_WRKQ_W1C      0x00010701032B0200  NCB
CIU2_EN_PP25_IP3_WRKQ_W1S      0x00010701032A0200  NCB
CIU2_EN_PP25_IP4_GPIO          0x0001070103297400  NCB
CIU2_EN_PP25_IP4_GPIO_W1C      0x00010701032B7400  NCB
CIU2_EN_PP25_IP4_GPIO_W1S      0x00010701032A7400  NCB
CIU2_EN_PP25_IP4_IO            0x0001070103294400  NCB
CIU2_EN_PP25_IP4_IO_W1C        0x00010701032B4400  NCB
CIU2_EN_PP25_IP4_IO_W1S        0x00010701032A4400  NCB
CIU2_EN_PP25_IP4_MBOX          0x0001070103298400  NCB
CIU2_EN_PP25_IP4_MBOX_W1C      0x00010701032B8400  NCB
CIU2_EN_PP25_IP4_MBOX_W1S      0x00010701032A8400  NCB
CIU2_EN_PP25_IP4_MEM           0x0001070103295400  NCB
CIU2_EN_PP25_IP4_MEM_W1C       0x00010701032B5400  NCB
CIU2_EN_PP25_IP4_MEM_W1S       0x00010701032A5400  NCB
CIU2_EN_PP25_IP4_MIO           0x0001070103293400  NCB
CIU2_EN_PP25_IP4_MIO_W1C       0x00010701032B3400  NCB
CIU2_EN_PP25_IP4_MIO_W1S       0x00010701032A3400  NCB
CIU2_EN_PP25_IP4_PKT           0x0001070103296400  NCB
CIU2_EN_PP25_IP4_PKT_W1C       0x00010701032B6400  NCB
CIU2_EN_PP25_IP4_PKT_W1S       0x00010701032A6400  NCB
CIU2_EN_PP25_IP4_RML           0x0001070103292400  NCB
CIU2_EN_PP25_IP4_RML_W1C       0x00010701032B2400  NCB
CIU2_EN_PP25_IP4_RML_W1S       0x00010701032A2400  NCB
CIU2_EN_PP25_IP4_WDOG          0x0001070103291400  NCB
CIU2_EN_PP25_IP4_WDOG_W1C      0x00010701032B1400  NCB
CIU2_EN_PP25_IP4_WDOG_W1S      0x00010701032A1400  NCB
CIU2_EN_PP25_IP4_WRKQ          0x0001070103290400  NCB
CIU2_EN_PP25_IP4_WRKQ_W1C      0x00010701032B0400  NCB
CIU2_EN_PP25_IP4_WRKQ_W1S      0x00010701032A0400  NCB
CIU2_EN_PP26_IP2_GPIO          0x0001070103497000  NCB
CIU2_EN_PP26_IP2_GPIO_W1C      0x00010701034B7000  NCB
CIU2_EN_PP26_IP2_GPIO_W1S      0x00010701034A7000  NCB
CIU2_EN_PP26_IP2_IO            0x0001070103494000  NCB
CIU2_EN_PP26_IP2_IO_W1C        0x00010701034B4000  NCB
CIU2_EN_PP26_IP2_IO_W1S        0x00010701034A4000  NCB
CIU2_EN_PP26_IP2_MBOX          0x0001070103498000  NCB
CIU2_EN_PP26_IP2_MBOX_W1C      0x00010701034B8000  NCB
CIU2_EN_PP26_IP2_MBOX_W1S      0x00010701034A8000  NCB
CIU2_EN_PP26_IP2_MEM           0x0001070103495000  NCB
CIU2_EN_PP26_IP2_MEM_W1C       0x00010701034B5000  NCB
CIU2_EN_PP26_IP2_MEM_W1S       0x00010701034A5000  NCB
CIU2_EN_PP26_IP2_MIO           0x0001070103493000  NCB
CIU2_EN_PP26_IP2_MIO_W1C       0x00010701034B3000  NCB
CIU2_EN_PP26_IP2_MIO_W1S       0x00010701034A3000  NCB
CIU2_EN_PP26_IP2_PKT           0x0001070103496000  NCB
CIU2_EN_PP26_IP2_PKT_W1C       0x00010701034B6000  NCB
CIU2_EN_PP26_IP2_PKT_W1S       0x00010701034A6000  NCB
CIU2_EN_PP26_IP2_RML           0x0001070103492000  NCB
CIU2_EN_PP26_IP2_RML_W1C       0x00010701034B2000  NCB
CIU2_EN_PP26_IP2_RML_W1S       0x00010701034A2000  NCB
CIU2_EN_PP26_IP2_WDOG          0x0001070103491000  NCB
CIU2_EN_PP26_IP2_WDOG_W1C      0x00010701034B1000  NCB
CIU2_EN_PP26_IP2_WDOG_W1S      0x00010701034A1000  NCB
CIU2_EN_PP26_IP2_WRKQ          0x0001070103490000  NCB
CIU2_EN_PP26_IP2_WRKQ_W1C      0x00010701034B0000  NCB
CIU2_EN_PP26_IP2_WRKQ_W1S      0x00010701034A0000  NCB
CIU2_EN_PP26_IP3_GPIO          0x0001070103497200  NCB
CIU2_EN_PP26_IP3_GPIO_W1C      0x00010701034B7200  NCB
CIU2_EN_PP26_IP3_GPIO_W1S      0x00010701034A7200  NCB
CIU2_EN_PP26_IP3_IO            0x0001070103494200  NCB
CIU2_EN_PP26_IP3_IO_W1C        0x00010701034B4200  NCB
CIU2_EN_PP26_IP3_IO_W1S        0x00010701034A4200  NCB
CIU2_EN_PP26_IP3_MBOX          0x0001070103498200  NCB
CIU2_EN_PP26_IP3_MBOX_W1C      0x00010701034B8200  NCB
CIU2_EN_PP26_IP3_MBOX_W1S      0x00010701034A8200  NCB
CIU2_EN_PP26_IP3_MEM           0x0001070103495200  NCB
CIU2_EN_PP26_IP3_MEM_W1C       0x00010701034B5200  NCB
CIU2_EN_PP26_IP3_MEM_W1S       0x00010701034A5200  NCB
CIU2_EN_PP26_IP3_MIO           0x0001070103493200  NCB
CIU2_EN_PP26_IP3_MIO_W1C       0x00010701034B3200  NCB
CIU2_EN_PP26_IP3_MIO_W1S       0x00010701034A3200  NCB
CIU2_EN_PP26_IP3_PKT           0x0001070103496200  NCB
CIU2_EN_PP26_IP3_PKT_W1C       0x00010701034B6200  NCB
CIU2_EN_PP26_IP3_PKT_W1S       0x00010701034A6200  NCB
CIU2_EN_PP26_IP3_RML           0x0001070103492200  NCB
CIU2_EN_PP26_IP3_RML_W1C       0x00010701034B2200  NCB
CIU2_EN_PP26_IP3_RML_W1S       0x00010701034A2200  NCB
CIU2_EN_PP26_IP3_WDOG          0x0001070103491200  NCB
CIU2_EN_PP26_IP3_WDOG_W1C      0x00010701034B1200  NCB
CIU2_EN_PP26_IP3_WDOG_W1S      0x00010701034A1200  NCB
CIU2_EN_PP26_IP3_WRKQ          0x0001070103490200  NCB
CIU2_EN_PP26_IP3_WRKQ_W1C      0x00010701034B0200  NCB
CIU2_EN_PP26_IP3_WRKQ_W1S      0x00010701034A0200  NCB
CIU2_EN_PP26_IP4_GPIO          0x0001070103497400  NCB
CIU2_EN_PP26_IP4_GPIO_W1C      0x00010701034B7400  NCB
CIU2_EN_PP26_IP4_GPIO_W1S      0x00010701034A7400  NCB
CIU2_EN_PP26_IP4_IO            0x0001070103494400  NCB
CIU2_EN_PP26_IP4_IO_W1C        0x00010701034B4400  NCB
CIU2_EN_PP26_IP4_IO_W1S        0x00010701034A4400  NCB
CIU2_EN_PP26_IP4_MBOX          0x0001070103498400  NCB
CIU2_EN_PP26_IP4_MBOX_W1C      0x00010701034B8400  NCB
CIU2_EN_PP26_IP4_MBOX_W1S      0x00010701034A8400  NCB
CIU2_EN_PP26_IP4_MEM           0x0001070103495400  NCB
CIU2_EN_PP26_IP4_MEM_W1C       0x00010701034B5400  NCB
CIU2_EN_PP26_IP4_MEM_W1S       0x00010701034A5400  NCB
CIU2_EN_PP26_IP4_MIO           0x0001070103493400  NCB
CIU2_EN_PP26_IP4_MIO_W1C       0x00010701034B3400  NCB
CIU2_EN_PP26_IP4_MIO_W1S       0x00010701034A3400  NCB
CIU2_EN_PP26_IP4_PKT           0x0001070103496400  NCB
CIU2_EN_PP26_IP4_PKT_W1C       0x00010701034B6400  NCB
CIU2_EN_PP26_IP4_PKT_W1S       0x00010701034A6400  NCB
CIU2_EN_PP26_IP4_RML           0x0001070103492400  NCB
CIU2_EN_PP26_IP4_RML_W1C       0x00010701034B2400  NCB
CIU2_EN_PP26_IP4_RML_W1S       0x00010701034A2400  NCB
CIU2_EN_PP26_IP4_WDOG          0x0001070103491400  NCB
CIU2_EN_PP26_IP4_WDOG_W1C      0x00010701034B1400  NCB
CIU2_EN_PP26_IP4_WDOG_W1S      0x00010701034A1400  NCB
CIU2_EN_PP26_IP4_WRKQ          0x0001070103490400  NCB
CIU2_EN_PP26_IP4_WRKQ_W1C      0x00010701034B0400  NCB
CIU2_EN_PP26_IP4_WRKQ_W1S      0x00010701034A0400  NCB
CIU2_EN_PP27_IP2_GPIO          0x0001070103697000  NCB
CIU2_EN_PP27_IP2_GPIO_W1C      0x00010701036B7000  NCB
CIU2_EN_PP27_IP2_GPIO_W1S      0x00010701036A7000  NCB
CIU2_EN_PP27_IP2_IO            0x0001070103694000  NCB
CIU2_EN_PP27_IP2_IO_W1C        0x00010701036B4000  NCB
CIU2_EN_PP27_IP2_IO_W1S        0x00010701036A4000  NCB
CIU2_EN_PP27_IP2_MBOX          0x0001070103698000  NCB
CIU2_EN_PP27_IP2_MBOX_W1C      0x00010701036B8000  NCB
CIU2_EN_PP27_IP2_MBOX_W1S      0x00010701036A8000  NCB
CIU2_EN_PP27_IP2_MEM           0x0001070103695000  NCB
CIU2_EN_PP27_IP2_MEM_W1C       0x00010701036B5000  NCB
CIU2_EN_PP27_IP2_MEM_W1S       0x00010701036A5000  NCB
CIU2_EN_PP27_IP2_MIO           0x0001070103693000  NCB
CIU2_EN_PP27_IP2_MIO_W1C       0x00010701036B3000  NCB
CIU2_EN_PP27_IP2_MIO_W1S       0x00010701036A3000  NCB
CIU2_EN_PP27_IP2_PKT           0x0001070103696000  NCB
CIU2_EN_PP27_IP2_PKT_W1C       0x00010701036B6000  NCB
CIU2_EN_PP27_IP2_PKT_W1S       0x00010701036A6000  NCB
CIU2_EN_PP27_IP2_RML           0x0001070103692000  NCB
CIU2_EN_PP27_IP2_RML_W1C       0x00010701036B2000  NCB
CIU2_EN_PP27_IP2_RML_W1S       0x00010701036A2000  NCB
CIU2_EN_PP27_IP2_WDOG          0x0001070103691000  NCB
CIU2_EN_PP27_IP2_WDOG_W1C      0x00010701036B1000  NCB
CIU2_EN_PP27_IP2_WDOG_W1S      0x00010701036A1000  NCB
CIU2_EN_PP27_IP2_WRKQ          0x0001070103690000  NCB
CIU2_EN_PP27_IP2_WRKQ_W1C      0x00010701036B0000  NCB
CIU2_EN_PP27_IP2_WRKQ_W1S      0x00010701036A0000  NCB
CIU2_EN_PP27_IP3_GPIO          0x0001070103697200  NCB
CIU2_EN_PP27_IP3_GPIO_W1C      0x00010701036B7200  NCB
CIU2_EN_PP27_IP3_GPIO_W1S      0x00010701036A7200  NCB
CIU2_EN_PP27_IP3_IO            0x0001070103694200  NCB
CIU2_EN_PP27_IP3_IO_W1C        0x00010701036B4200  NCB
CIU2_EN_PP27_IP3_IO_W1S        0x00010701036A4200  NCB
CIU2_EN_PP27_IP3_MBOX          0x0001070103698200  NCB
CIU2_EN_PP27_IP3_MBOX_W1C      0x00010701036B8200  NCB
CIU2_EN_PP27_IP3_MBOX_W1S      0x00010701036A8200  NCB
CIU2_EN_PP27_IP3_MEM           0x0001070103695200  NCB
CIU2_EN_PP27_IP3_MEM_W1C       0x00010701036B5200  NCB
CIU2_EN_PP27_IP3_MEM_W1S       0x00010701036A5200  NCB
CIU2_EN_PP27_IP3_MIO           0x0001070103693200  NCB
CIU2_EN_PP27_IP3_MIO_W1C       0x00010701036B3200  NCB
CIU2_EN_PP27_IP3_MIO_W1S       0x00010701036A3200  NCB
CIU2_EN_PP27_IP3_PKT           0x0001070103696200  NCB
CIU2_EN_PP27_IP3_PKT_W1C       0x00010701036B6200  NCB
CIU2_EN_PP27_IP3_PKT_W1S       0x00010701036A6200  NCB
CIU2_EN_PP27_IP3_RML           0x0001070103692200  NCB
CIU2_EN_PP27_IP3_RML_W1C       0x00010701036B2200  NCB
CIU2_EN_PP27_IP3_RML_W1S       0x00010701036A2200  NCB
CIU2_EN_PP27_IP3_WDOG          0x0001070103691200  NCB
CIU2_EN_PP27_IP3_WDOG_W1C      0x00010701036B1200  NCB
CIU2_EN_PP27_IP3_WDOG_W1S      0x00010701036A1200  NCB
CIU2_EN_PP27_IP3_WRKQ          0x0001070103690200  NCB
CIU2_EN_PP27_IP3_WRKQ_W1C      0x00010701036B0200  NCB
CIU2_EN_PP27_IP3_WRKQ_W1S      0x00010701036A0200  NCB
CIU2_EN_PP27_IP4_GPIO          0x0001070103697400  NCB
CIU2_EN_PP27_IP4_GPIO_W1C      0x00010701036B7400  NCB
CIU2_EN_PP27_IP4_GPIO_W1S      0x00010701036A7400  NCB
CIU2_EN_PP27_IP4_IO            0x0001070103694400  NCB
CIU2_EN_PP27_IP4_IO_W1C        0x00010701036B4400  NCB
CIU2_EN_PP27_IP4_IO_W1S        0x00010701036A4400  NCB
CIU2_EN_PP27_IP4_MBOX          0x0001070103698400  NCB
CIU2_EN_PP27_IP4_MBOX_W1C      0x00010701036B8400  NCB
CIU2_EN_PP27_IP4_MBOX_W1S      0x00010701036A8400  NCB
CIU2_EN_PP27_IP4_MEM           0x0001070103695400  NCB
CIU2_EN_PP27_IP4_MEM_W1C       0x00010701036B5400  NCB
CIU2_EN_PP27_IP4_MEM_W1S       0x00010701036A5400  NCB
CIU2_EN_PP27_IP4_MIO           0x0001070103693400  NCB
CIU2_EN_PP27_IP4_MIO_W1C       0x00010701036B3400  NCB
CIU2_EN_PP27_IP4_MIO_W1S       0x00010701036A3400  NCB
CIU2_EN_PP27_IP4_PKT           0x0001070103696400  NCB
CIU2_EN_PP27_IP4_PKT_W1C       0x00010701036B6400  NCB
CIU2_EN_PP27_IP4_PKT_W1S       0x00010701036A6400  NCB
CIU2_EN_PP27_IP4_RML           0x0001070103692400  NCB
CIU2_EN_PP27_IP4_RML_W1C       0x00010701036B2400  NCB
CIU2_EN_PP27_IP4_RML_W1S       0x00010701036A2400  NCB
CIU2_EN_PP27_IP4_WDOG          0x0001070103691400  NCB
CIU2_EN_PP27_IP4_WDOG_W1C      0x00010701036B1400  NCB
CIU2_EN_PP27_IP4_WDOG_W1S      0x00010701036A1400  NCB
CIU2_EN_PP27_IP4_WRKQ          0x0001070103690400  NCB
CIU2_EN_PP27_IP4_WRKQ_W1C      0x00010701036B0400  NCB
CIU2_EN_PP27_IP4_WRKQ_W1S      0x00010701036A0400  NCB
CIU2_EN_PP28_IP2_GPIO          0x0001070103897000  NCB
CIU2_EN_PP28_IP2_GPIO_W1C      0x00010701038B7000  NCB
CIU2_EN_PP28_IP2_GPIO_W1S      0x00010701038A7000  NCB
CIU2_EN_PP28_IP2_IO            0x0001070103894000  NCB
CIU2_EN_PP28_IP2_IO_W1C        0x00010701038B4000  NCB
CIU2_EN_PP28_IP2_IO_W1S        0x00010701038A4000  NCB
CIU2_EN_PP28_IP2_MBOX          0x0001070103898000  NCB
CIU2_EN_PP28_IP2_MBOX_W1C      0x00010701038B8000  NCB
CIU2_EN_PP28_IP2_MBOX_W1S      0x00010701038A8000  NCB
CIU2_EN_PP28_IP2_MEM           0x0001070103895000  NCB
CIU2_EN_PP28_IP2_MEM_W1C       0x00010701038B5000  NCB
CIU2_EN_PP28_IP2_MEM_W1S       0x00010701038A5000  NCB
CIU2_EN_PP28_IP2_MIO           0x0001070103893000  NCB
CIU2_EN_PP28_IP2_MIO_W1C       0x00010701038B3000  NCB
CIU2_EN_PP28_IP2_MIO_W1S       0x00010701038A3000  NCB
CIU2_EN_PP28_IP2_PKT           0x0001070103896000  NCB
CIU2_EN_PP28_IP2_PKT_W1C       0x00010701038B6000  NCB
CIU2_EN_PP28_IP2_PKT_W1S       0x00010701038A6000  NCB
CIU2_EN_PP28_IP2_RML           0x0001070103892000  NCB
CIU2_EN_PP28_IP2_RML_W1C       0x00010701038B2000  NCB
CIU2_EN_PP28_IP2_RML_W1S       0x00010701038A2000  NCB
CIU2_EN_PP28_IP2_WDOG          0x0001070103891000  NCB
CIU2_EN_PP28_IP2_WDOG_W1C      0x00010701038B1000  NCB
CIU2_EN_PP28_IP2_WDOG_W1S      0x00010701038A1000  NCB
CIU2_EN_PP28_IP2_WRKQ          0x0001070103890000  NCB
CIU2_EN_PP28_IP2_WRKQ_W1C      0x00010701038B0000  NCB
CIU2_EN_PP28_IP2_WRKQ_W1S      0x00010701038A0000  NCB
CIU2_EN_PP28_IP3_GPIO          0x0001070103897200  NCB
CIU2_EN_PP28_IP3_GPIO_W1C      0x00010701038B7200  NCB
CIU2_EN_PP28_IP3_GPIO_W1S      0x00010701038A7200  NCB
CIU2_EN_PP28_IP3_IO            0x0001070103894200  NCB
CIU2_EN_PP28_IP3_IO_W1C        0x00010701038B4200  NCB
CIU2_EN_PP28_IP3_IO_W1S        0x00010701038A4200  NCB
CIU2_EN_PP28_IP3_MBOX          0x0001070103898200  NCB
CIU2_EN_PP28_IP3_MBOX_W1C      0x00010701038B8200  NCB
CIU2_EN_PP28_IP3_MBOX_W1S      0x00010701038A8200  NCB
CIU2_EN_PP28_IP3_MEM           0x0001070103895200  NCB
CIU2_EN_PP28_IP3_MEM_W1C       0x00010701038B5200  NCB
CIU2_EN_PP28_IP3_MEM_W1S       0x00010701038A5200  NCB
CIU2_EN_PP28_IP3_MIO           0x0001070103893200  NCB
CIU2_EN_PP28_IP3_MIO_W1C       0x00010701038B3200  NCB
CIU2_EN_PP28_IP3_MIO_W1S       0x00010701038A3200  NCB
CIU2_EN_PP28_IP3_PKT           0x0001070103896200  NCB
CIU2_EN_PP28_IP3_PKT_W1C       0x00010701038B6200  NCB
CIU2_EN_PP28_IP3_PKT_W1S       0x00010701038A6200  NCB
CIU2_EN_PP28_IP3_RML           0x0001070103892200  NCB
CIU2_EN_PP28_IP3_RML_W1C       0x00010701038B2200  NCB
CIU2_EN_PP28_IP3_RML_W1S       0x00010701038A2200  NCB
CIU2_EN_PP28_IP3_WDOG          0x0001070103891200  NCB
CIU2_EN_PP28_IP3_WDOG_W1C      0x00010701038B1200  NCB
CIU2_EN_PP28_IP3_WDOG_W1S      0x00010701038A1200  NCB
CIU2_EN_PP28_IP3_WRKQ          0x0001070103890200  NCB
CIU2_EN_PP28_IP3_WRKQ_W1C      0x00010701038B0200  NCB
CIU2_EN_PP28_IP3_WRKQ_W1S      0x00010701038A0200  NCB
CIU2_EN_PP28_IP4_GPIO          0x0001070103897400  NCB
CIU2_EN_PP28_IP4_GPIO_W1C      0x00010701038B7400  NCB
CIU2_EN_PP28_IP4_GPIO_W1S      0x00010701038A7400  NCB
CIU2_EN_PP28_IP4_IO            0x0001070103894400  NCB
CIU2_EN_PP28_IP4_IO_W1C        0x00010701038B4400  NCB
CIU2_EN_PP28_IP4_IO_W1S        0x00010701038A4400  NCB
CIU2_EN_PP28_IP4_MBOX          0x0001070103898400  NCB
CIU2_EN_PP28_IP4_MBOX_W1C      0x00010701038B8400  NCB
CIU2_EN_PP28_IP4_MBOX_W1S      0x00010701038A8400  NCB
CIU2_EN_PP28_IP4_MEM           0x0001070103895400  NCB
CIU2_EN_PP28_IP4_MEM_W1C       0x00010701038B5400  NCB
CIU2_EN_PP28_IP4_MEM_W1S       0x00010701038A5400  NCB
CIU2_EN_PP28_IP4_MIO           0x0001070103893400  NCB
CIU2_EN_PP28_IP4_MIO_W1C       0x00010701038B3400  NCB
CIU2_EN_PP28_IP4_MIO_W1S       0x00010701038A3400  NCB
CIU2_EN_PP28_IP4_PKT           0x0001070103896400  NCB
CIU2_EN_PP28_IP4_PKT_W1C       0x00010701038B6400  NCB
CIU2_EN_PP28_IP4_PKT_W1S       0x00010701038A6400  NCB
CIU2_EN_PP28_IP4_RML           0x0001070103892400  NCB
CIU2_EN_PP28_IP4_RML_W1C       0x00010701038B2400  NCB
CIU2_EN_PP28_IP4_RML_W1S       0x00010701038A2400  NCB
CIU2_EN_PP28_IP4_WDOG          0x0001070103891400  NCB
CIU2_EN_PP28_IP4_WDOG_W1C      0x00010701038B1400  NCB
CIU2_EN_PP28_IP4_WDOG_W1S      0x00010701038A1400  NCB
CIU2_EN_PP28_IP4_WRKQ          0x0001070103890400  NCB
CIU2_EN_PP28_IP4_WRKQ_W1C      0x00010701038B0400  NCB
CIU2_EN_PP28_IP4_WRKQ_W1S      0x00010701038A0400  NCB
CIU2_EN_PP29_IP2_GPIO          0x0001070103A97000  NCB
CIU2_EN_PP29_IP2_GPIO_W1C      0x0001070103AB7000  NCB
CIU2_EN_PP29_IP2_GPIO_W1S      0x0001070103AA7000  NCB
CIU2_EN_PP29_IP2_IO            0x0001070103A94000  NCB
CIU2_EN_PP29_IP2_IO_W1C        0x0001070103AB4000  NCB
CIU2_EN_PP29_IP2_IO_W1S        0x0001070103AA4000  NCB
CIU2_EN_PP29_IP2_MBOX          0x0001070103A98000  NCB
CIU2_EN_PP29_IP2_MBOX_W1C      0x0001070103AB8000  NCB
CIU2_EN_PP29_IP2_MBOX_W1S      0x0001070103AA8000  NCB
CIU2_EN_PP29_IP2_MEM           0x0001070103A95000  NCB
CIU2_EN_PP29_IP2_MEM_W1C       0x0001070103AB5000  NCB
CIU2_EN_PP29_IP2_MEM_W1S       0x0001070103AA5000  NCB
CIU2_EN_PP29_IP2_MIO           0x0001070103A93000  NCB
CIU2_EN_PP29_IP2_MIO_W1C       0x0001070103AB3000  NCB
CIU2_EN_PP29_IP2_MIO_W1S       0x0001070103AA3000  NCB
CIU2_EN_PP29_IP2_PKT           0x0001070103A96000  NCB
CIU2_EN_PP29_IP2_PKT_W1C       0x0001070103AB6000  NCB
CIU2_EN_PP29_IP2_PKT_W1S       0x0001070103AA6000  NCB
CIU2_EN_PP29_IP2_RML           0x0001070103A92000  NCB
CIU2_EN_PP29_IP2_RML_W1C       0x0001070103AB2000  NCB
CIU2_EN_PP29_IP2_RML_W1S       0x0001070103AA2000  NCB
CIU2_EN_PP29_IP2_WDOG          0x0001070103A91000  NCB
CIU2_EN_PP29_IP2_WDOG_W1C      0x0001070103AB1000  NCB
CIU2_EN_PP29_IP2_WDOG_W1S      0x0001070103AA1000  NCB
CIU2_EN_PP29_IP2_WRKQ          0x0001070103A90000  NCB
CIU2_EN_PP29_IP2_WRKQ_W1C      0x0001070103AB0000  NCB
CIU2_EN_PP29_IP2_WRKQ_W1S      0x0001070103AA0000  NCB
CIU2_EN_PP29_IP3_GPIO          0x0001070103A97200  NCB
CIU2_EN_PP29_IP3_GPIO_W1C      0x0001070103AB7200  NCB
CIU2_EN_PP29_IP3_GPIO_W1S      0x0001070103AA7200  NCB
CIU2_EN_PP29_IP3_IO            0x0001070103A94200  NCB
CIU2_EN_PP29_IP3_IO_W1C        0x0001070103AB4200  NCB
CIU2_EN_PP29_IP3_IO_W1S        0x0001070103AA4200  NCB
CIU2_EN_PP29_IP3_MBOX          0x0001070103A98200  NCB
CIU2_EN_PP29_IP3_MBOX_W1C      0x0001070103AB8200  NCB
CIU2_EN_PP29_IP3_MBOX_W1S      0x0001070103AA8200  NCB
CIU2_EN_PP29_IP3_MEM           0x0001070103A95200  NCB
CIU2_EN_PP29_IP3_MEM_W1C       0x0001070103AB5200  NCB
CIU2_EN_PP29_IP3_MEM_W1S       0x0001070103AA5200  NCB
CIU2_EN_PP29_IP3_MIO           0x0001070103A93200  NCB
CIU2_EN_PP29_IP3_MIO_W1C       0x0001070103AB3200  NCB
CIU2_EN_PP29_IP3_MIO_W1S       0x0001070103AA3200  NCB
CIU2_EN_PP29_IP3_PKT           0x0001070103A96200  NCB
CIU2_EN_PP29_IP3_PKT_W1C       0x0001070103AB6200  NCB
CIU2_EN_PP29_IP3_PKT_W1S       0x0001070103AA6200  NCB
CIU2_EN_PP29_IP3_RML           0x0001070103A92200  NCB
CIU2_EN_PP29_IP3_RML_W1C       0x0001070103AB2200  NCB
CIU2_EN_PP29_IP3_RML_W1S       0x0001070103AA2200  NCB
CIU2_EN_PP29_IP3_WDOG          0x0001070103A91200  NCB
CIU2_EN_PP29_IP3_WDOG_W1C      0x0001070103AB1200  NCB
CIU2_EN_PP29_IP3_WDOG_W1S      0x0001070103AA1200  NCB
CIU2_EN_PP29_IP3_WRKQ          0x0001070103A90200  NCB
CIU2_EN_PP29_IP3_WRKQ_W1C      0x0001070103AB0200  NCB
CIU2_EN_PP29_IP3_WRKQ_W1S      0x0001070103AA0200  NCB
CIU2_EN_PP29_IP4_GPIO          0x0001070103A97400  NCB
CIU2_EN_PP29_IP4_GPIO_W1C      0x0001070103AB7400  NCB
CIU2_EN_PP29_IP4_GPIO_W1S      0x0001070103AA7400  NCB
CIU2_EN_PP29_IP4_IO            0x0001070103A94400  NCB
CIU2_EN_PP29_IP4_IO_W1C        0x0001070103AB4400  NCB
CIU2_EN_PP29_IP4_IO_W1S        0x0001070103AA4400  NCB
CIU2_EN_PP29_IP4_MBOX          0x0001070103A98400  NCB
CIU2_EN_PP29_IP4_MBOX_W1C      0x0001070103AB8400  NCB
CIU2_EN_PP29_IP4_MBOX_W1S      0x0001070103AA8400  NCB
CIU2_EN_PP29_IP4_MEM           0x0001070103A95400  NCB
CIU2_EN_PP29_IP4_MEM_W1C       0x0001070103AB5400  NCB
CIU2_EN_PP29_IP4_MEM_W1S       0x0001070103AA5400  NCB
CIU2_EN_PP29_IP4_MIO           0x0001070103A93400  NCB
CIU2_EN_PP29_IP4_MIO_W1C       0x0001070103AB3400  NCB
CIU2_EN_PP29_IP4_MIO_W1S       0x0001070103AA3400  NCB
CIU2_EN_PP29_IP4_PKT           0x0001070103A96400  NCB
CIU2_EN_PP29_IP4_PKT_W1C       0x0001070103AB6400  NCB
CIU2_EN_PP29_IP4_PKT_W1S       0x0001070103AA6400  NCB
CIU2_EN_PP29_IP4_RML           0x0001070103A92400  NCB
CIU2_EN_PP29_IP4_RML_W1C       0x0001070103AB2400  NCB
CIU2_EN_PP29_IP4_RML_W1S       0x0001070103AA2400  NCB
CIU2_EN_PP29_IP4_WDOG          0x0001070103A91400  NCB
CIU2_EN_PP29_IP4_WDOG_W1C      0x0001070103AB1400  NCB
CIU2_EN_PP29_IP4_WDOG_W1S      0x0001070103AA1400  NCB
CIU2_EN_PP29_IP4_WRKQ          0x0001070103A90400  NCB
CIU2_EN_PP29_IP4_WRKQ_W1C      0x0001070103AB0400  NCB
CIU2_EN_PP29_IP4_WRKQ_W1S      0x0001070103AA0400  NCB
CIU2_EN_PP30_IP2_GPIO          0x0001070103C97000  NCB
CIU2_EN_PP30_IP2_GPIO_W1C      0x0001070103CB7000  NCB
CIU2_EN_PP30_IP2_GPIO_W1S      0x0001070103CA7000  NCB
CIU2_EN_PP30_IP2_IO            0x0001070103C94000  NCB
CIU2_EN_PP30_IP2_IO_W1C        0x0001070103CB4000  NCB
CIU2_EN_PP30_IP2_IO_W1S        0x0001070103CA4000  NCB
CIU2_EN_PP30_IP2_MBOX          0x0001070103C98000  NCB
CIU2_EN_PP30_IP2_MBOX_W1C      0x0001070103CB8000  NCB
CIU2_EN_PP30_IP2_MBOX_W1S      0x0001070103CA8000  NCB
CIU2_EN_PP30_IP2_MEM           0x0001070103C95000  NCB
CIU2_EN_PP30_IP2_MEM_W1C       0x0001070103CB5000  NCB
CIU2_EN_PP30_IP2_MEM_W1S       0x0001070103CA5000  NCB
CIU2_EN_PP30_IP2_MIO           0x0001070103C93000  NCB
CIU2_EN_PP30_IP2_MIO_W1C       0x0001070103CB3000  NCB
CIU2_EN_PP30_IP2_MIO_W1S       0x0001070103CA3000  NCB
CIU2_EN_PP30_IP2_PKT           0x0001070103C96000  NCB
CIU2_EN_PP30_IP2_PKT_W1C       0x0001070103CB6000  NCB
CIU2_EN_PP30_IP2_PKT_W1S       0x0001070103CA6000  NCB
CIU2_EN_PP30_IP2_RML           0x0001070103C92000  NCB
CIU2_EN_PP30_IP2_RML_W1C       0x0001070103CB2000  NCB
CIU2_EN_PP30_IP2_RML_W1S       0x0001070103CA2000  NCB
CIU2_EN_PP30_IP2_WDOG          0x0001070103C91000  NCB
CIU2_EN_PP30_IP2_WDOG_W1C      0x0001070103CB1000  NCB
CIU2_EN_PP30_IP2_WDOG_W1S      0x0001070103CA1000  NCB
CIU2_EN_PP30_IP2_WRKQ          0x0001070103C90000  NCB
CIU2_EN_PP30_IP2_WRKQ_W1C      0x0001070103CB0000  NCB
CIU2_EN_PP30_IP2_WRKQ_W1S      0x0001070103CA0000  NCB
CIU2_EN_PP30_IP3_GPIO          0x0001070103C97200  NCB
CIU2_EN_PP30_IP3_GPIO_W1C      0x0001070103CB7200  NCB
CIU2_EN_PP30_IP3_GPIO_W1S      0x0001070103CA7200  NCB
CIU2_EN_PP30_IP3_IO            0x0001070103C94200  NCB
CIU2_EN_PP30_IP3_IO_W1C        0x0001070103CB4200  NCB
CIU2_EN_PP30_IP3_IO_W1S        0x0001070103CA4200  NCB
CIU2_EN_PP30_IP3_MBOX          0x0001070103C98200  NCB
CIU2_EN_PP30_IP3_MBOX_W1C      0x0001070103CB8200  NCB
CIU2_EN_PP30_IP3_MBOX_W1S      0x0001070103CA8200  NCB
CIU2_EN_PP30_IP3_MEM           0x0001070103C95200  NCB
CIU2_EN_PP30_IP3_MEM_W1C       0x0001070103CB5200  NCB
CIU2_EN_PP30_IP3_MEM_W1S       0x0001070103CA5200  NCB
CIU2_EN_PP30_IP3_MIO           0x0001070103C93200  NCB
CIU2_EN_PP30_IP3_MIO_W1C       0x0001070103CB3200  NCB
CIU2_EN_PP30_IP3_MIO_W1S       0x0001070103CA3200  NCB
CIU2_EN_PP30_IP3_PKT           0x0001070103C96200  NCB
CIU2_EN_PP30_IP3_PKT_W1C       0x0001070103CB6200  NCB
CIU2_EN_PP30_IP3_PKT_W1S       0x0001070103CA6200  NCB
CIU2_EN_PP30_IP3_RML           0x0001070103C92200  NCB
CIU2_EN_PP30_IP3_RML_W1C       0x0001070103CB2200  NCB
CIU2_EN_PP30_IP3_RML_W1S       0x0001070103CA2200  NCB
CIU2_EN_PP30_IP3_WDOG          0x0001070103C91200  NCB
CIU2_EN_PP30_IP3_WDOG_W1C      0x0001070103CB1200  NCB
CIU2_EN_PP30_IP3_WDOG_W1S      0x0001070103CA1200  NCB
CIU2_EN_PP30_IP3_WRKQ          0x0001070103C90200  NCB
CIU2_EN_PP30_IP3_WRKQ_W1C      0x0001070103CB0200  NCB
CIU2_EN_PP30_IP3_WRKQ_W1S      0x0001070103CA0200  NCB
CIU2_EN_PP30_IP4_GPIO          0x0001070103C97400  NCB
CIU2_EN_PP30_IP4_GPIO_W1C      0x0001070103CB7400  NCB
CIU2_EN_PP30_IP4_GPIO_W1S      0x0001070103CA7400  NCB
CIU2_EN_PP30_IP4_IO            0x0001070103C94400  NCB
CIU2_EN_PP30_IP4_IO_W1C        0x0001070103CB4400  NCB
CIU2_EN_PP30_IP4_IO_W1S        0x0001070103CA4400  NCB
CIU2_EN_PP30_IP4_MBOX          0x0001070103C98400  NCB
CIU2_EN_PP30_IP4_MBOX_W1C      0x0001070103CB8400  NCB
CIU2_EN_PP30_IP4_MBOX_W1S      0x0001070103CA8400  NCB
CIU2_EN_PP30_IP4_MEM           0x0001070103C95400  NCB
CIU2_EN_PP30_IP4_MEM_W1C       0x0001070103CB5400  NCB
CIU2_EN_PP30_IP4_MEM_W1S       0x0001070103CA5400  NCB
CIU2_EN_PP30_IP4_MIO           0x0001070103C93400  NCB
CIU2_EN_PP30_IP4_MIO_W1C       0x0001070103CB3400  NCB
CIU2_EN_PP30_IP4_MIO_W1S       0x0001070103CA3400  NCB
CIU2_EN_PP30_IP4_PKT           0x0001070103C96400  NCB
CIU2_EN_PP30_IP4_PKT_W1C       0x0001070103CB6400  NCB
CIU2_EN_PP30_IP4_PKT_W1S       0x0001070103CA6400  NCB
CIU2_EN_PP30_IP4_RML           0x0001070103C92400  NCB
CIU2_EN_PP30_IP4_RML_W1C       0x0001070103CB2400  NCB
CIU2_EN_PP30_IP4_RML_W1S       0x0001070103CA2400  NCB
CIU2_EN_PP30_IP4_WDOG          0x0001070103C91400  NCB
CIU2_EN_PP30_IP4_WDOG_W1C      0x0001070103CB1400  NCB
CIU2_EN_PP30_IP4_WDOG_W1S      0x0001070103CA1400  NCB
CIU2_EN_PP30_IP4_WRKQ          0x0001070103C90400  NCB
CIU2_EN_PP30_IP4_WRKQ_W1C      0x0001070103CB0400  NCB
CIU2_EN_PP30_IP4_WRKQ_W1S      0x0001070103CA0400  NCB
CIU2_EN_PP31_IP2_GPIO          0x0001070103E97000  NCB
CIU2_EN_PP31_IP2_GPIO_W1C      0x0001070103EB7000  NCB
CIU2_EN_PP31_IP2_GPIO_W1S      0x0001070103EA7000  NCB
CIU2_EN_PP31_IP2_IO            0x0001070103E94000  NCB
CIU2_EN_PP31_IP2_IO_W1C        0x0001070103EB4000  NCB
CIU2_EN_PP31_IP2_IO_W1S        0x0001070103EA4000  NCB
CIU2_EN_PP31_IP2_MBOX          0x0001070103E98000  NCB
CIU2_EN_PP31_IP2_MBOX_W1C      0x0001070103EB8000  NCB
CIU2_EN_PP31_IP2_MBOX_W1S      0x0001070103EA8000  NCB
CIU2_EN_PP31_IP2_MEM           0x0001070103E95000  NCB
CIU2_EN_PP31_IP2_MEM_W1C       0x0001070103EB5000  NCB
CIU2_EN_PP31_IP2_MEM_W1S       0x0001070103EA5000  NCB
CIU2_EN_PP31_IP2_MIO           0x0001070103E93000  NCB
CIU2_EN_PP31_IP2_MIO_W1C       0x0001070103EB3000  NCB
CIU2_EN_PP31_IP2_MIO_W1S       0x0001070103EA3000  NCB
CIU2_EN_PP31_IP2_PKT           0x0001070103E96000  NCB
CIU2_EN_PP31_IP2_PKT_W1C       0x0001070103EB6000  NCB
CIU2_EN_PP31_IP2_PKT_W1S       0x0001070103EA6000  NCB
CIU2_EN_PP31_IP2_RML           0x0001070103E92000  NCB
CIU2_EN_PP31_IP2_RML_W1C       0x0001070103EB2000  NCB
CIU2_EN_PP31_IP2_RML_W1S       0x0001070103EA2000  NCB
CIU2_EN_PP31_IP2_WDOG          0x0001070103E91000  NCB
CIU2_EN_PP31_IP2_WDOG_W1C      0x0001070103EB1000  NCB
CIU2_EN_PP31_IP2_WDOG_W1S      0x0001070103EA1000  NCB
CIU2_EN_PP31_IP2_WRKQ          0x0001070103E90000  NCB
CIU2_EN_PP31_IP2_WRKQ_W1C      0x0001070103EB0000  NCB
CIU2_EN_PP31_IP2_WRKQ_W1S      0x0001070103EA0000  NCB
CIU2_EN_PP31_IP3_GPIO          0x0001070103E97200  NCB
CIU2_EN_PP31_IP3_GPIO_W1C      0x0001070103EB7200  NCB
CIU2_EN_PP31_IP3_GPIO_W1S      0x0001070103EA7200  NCB
CIU2_EN_PP31_IP3_IO            0x0001070103E94200  NCB
CIU2_EN_PP31_IP3_IO_W1C        0x0001070103EB4200  NCB
CIU2_EN_PP31_IP3_IO_W1S        0x0001070103EA4200  NCB
CIU2_EN_PP31_IP3_MBOX          0x0001070103E98200  NCB
CIU2_EN_PP31_IP3_MBOX_W1C      0x0001070103EB8200  NCB
CIU2_EN_PP31_IP3_MBOX_W1S      0x0001070103EA8200  NCB
CIU2_EN_PP31_IP3_MEM           0x0001070103E95200  NCB
CIU2_EN_PP31_IP3_MEM_W1C       0x0001070103EB5200  NCB
CIU2_EN_PP31_IP3_MEM_W1S       0x0001070103EA5200  NCB
CIU2_EN_PP31_IP3_MIO           0x0001070103E93200  NCB
CIU2_EN_PP31_IP3_MIO_W1C       0x0001070103EB3200  NCB
CIU2_EN_PP31_IP3_MIO_W1S       0x0001070103EA3200  NCB
CIU2_EN_PP31_IP3_PKT           0x0001070103E96200  NCB
CIU2_EN_PP31_IP3_PKT_W1C       0x0001070103EB6200  NCB
CIU2_EN_PP31_IP3_PKT_W1S       0x0001070103EA6200  NCB
CIU2_EN_PP31_IP3_RML           0x0001070103E92200  NCB
CIU2_EN_PP31_IP3_RML_W1C       0x0001070103EB2200  NCB
CIU2_EN_PP31_IP3_RML_W1S       0x0001070103EA2200  NCB
CIU2_EN_PP31_IP3_WDOG          0x0001070103E91200  NCB
CIU2_EN_PP31_IP3_WDOG_W1C      0x0001070103EB1200  NCB
CIU2_EN_PP31_IP3_WDOG_W1S      0x0001070103EA1200  NCB
CIU2_EN_PP31_IP3_WRKQ          0x0001070103E90200  NCB
CIU2_EN_PP31_IP3_WRKQ_W1C      0x0001070103EB0200  NCB
CIU2_EN_PP31_IP3_WRKQ_W1S      0x0001070103EA0200  NCB
CIU2_EN_PP31_IP4_GPIO          0x0001070103E97400  NCB
CIU2_EN_PP31_IP4_GPIO_W1C      0x0001070103EB7400  NCB
CIU2_EN_PP31_IP4_GPIO_W1S      0x0001070103EA7400  NCB
CIU2_EN_PP31_IP4_IO            0x0001070103E94400  NCB
CIU2_EN_PP31_IP4_IO_W1C        0x0001070103EB4400  NCB
CIU2_EN_PP31_IP4_IO_W1S        0x0001070103EA4400  NCB
CIU2_EN_PP31_IP4_MBOX          0x0001070103E98400  NCB
CIU2_EN_PP31_IP4_MBOX_W1C      0x0001070103EB8400  NCB
CIU2_EN_PP31_IP4_MBOX_W1S      0x0001070103EA8400  NCB
CIU2_EN_PP31_IP4_MEM           0x0001070103E95400  NCB
CIU2_EN_PP31_IP4_MEM_W1C       0x0001070103EB5400  NCB
CIU2_EN_PP31_IP4_MEM_W1S       0x0001070103EA5400  NCB
CIU2_EN_PP31_IP4_MIO           0x0001070103E93400  NCB
CIU2_EN_PP31_IP4_MIO_W1C       0x0001070103EB3400  NCB
CIU2_EN_PP31_IP4_MIO_W1S       0x0001070103EA3400  NCB
CIU2_EN_PP31_IP4_PKT           0x0001070103E96400  NCB
CIU2_EN_PP31_IP4_PKT_W1C       0x0001070103EB6400  NCB
CIU2_EN_PP31_IP4_PKT_W1S       0x0001070103EA6400  NCB
CIU2_EN_PP31_IP4_RML           0x0001070103E92400  NCB
CIU2_EN_PP31_IP4_RML_W1C       0x0001070103EB2400  NCB
CIU2_EN_PP31_IP4_RML_W1S       0x0001070103EA2400  NCB
CIU2_EN_PP31_IP4_WDOG          0x0001070103E91400  NCB
CIU2_EN_PP31_IP4_WDOG_W1C      0x0001070103EB1400  NCB
CIU2_EN_PP31_IP4_WDOG_W1S      0x0001070103EA1400  NCB
CIU2_EN_PP31_IP4_WRKQ          0x0001070103E90400  NCB
CIU2_EN_PP31_IP4_WRKQ_W1C      0x0001070103EB0400  NCB
CIU2_EN_PP31_IP4_WRKQ_W1S      0x0001070103EA0400  NCB
CIU2_INTR_CIU_READY            0x0001070100102008  NCB
CIU2_INTR_RAM_ECC_CTL          0x0001070100102010  NCB
CIU2_INTR_RAM_ECC_ST           0x0001070100102018  NCB
CIU2_INTR_SLOWDOWN             0x0001070100102000  NCB
CIU2_MBOX_CLR0                 0x0001070100100600  NCB
CIU2_MBOX_CLR1                 0x0001070100100608  NCB
CIU2_MBOX_CLR2                 0x0001070100100610  NCB
CIU2_MBOX_CLR3                 0x0001070100100618  NCB
CIU2_MBOX_CLR4                 0x0001070100100620  NCB
CIU2_MBOX_CLR5                 0x0001070100100628  NCB
CIU2_MBOX_CLR6                 0x0001070100100630  NCB
CIU2_MBOX_CLR7                 0x0001070100100638  NCB
CIU2_MBOX_CLR8                 0x0001070100100640  NCB
CIU2_MBOX_CLR9                 0x0001070100100648  NCB
CIU2_MBOX_CLR10                0x0001070100100650  NCB
CIU2_MBOX_CLR11                0x0001070100100658  NCB
CIU2_MBOX_CLR12                0x0001070100100660  NCB
CIU2_MBOX_CLR13                0x0001070100100668  NCB
CIU2_MBOX_CLR14                0x0001070100100670  NCB
CIU2_MBOX_CLR15                0x0001070100100678  NCB
CIU2_MBOX_CLR16                0x0001070100100680  NCB
CIU2_MBOX_CLR17                0x0001070100100688  NCB
CIU2_MBOX_CLR18                0x0001070100100690  NCB
CIU2_MBOX_CLR19                0x0001070100100698  NCB
CIU2_MBOX_CLR20                0x00010701001006A0  NCB
CIU2_MBOX_CLR21                0x00010701001006A8  NCB
CIU2_MBOX_CLR22                0x00010701001006B0  NCB
CIU2_MBOX_CLR23                0x00010701001006B8  NCB
CIU2_MBOX_CLR24                0x00010701001006C0  NCB
CIU2_MBOX_CLR25                0x00010701001006C8  NCB
CIU2_MBOX_CLR26                0x00010701001006D0  NCB
CIU2_MBOX_CLR27                0x00010701001006D8  NCB
CIU2_MBOX_CLR28                0x00010701001006E0  NCB
CIU2_MBOX_CLR29                0x00010701001006E8  NCB
CIU2_MBOX_CLR30                0x00010701001006F0  NCB
CIU2_MBOX_CLR31                0x00010701001006F8  NCB
CIU2_MBOX_SET0                 0x0001070100100400  NCB
CIU2_MBOX_SET1                 0x0001070100100408  NCB
CIU2_MBOX_SET2                 0x0001070100100410  NCB
CIU2_MBOX_SET3                 0x0001070100100418  NCB
CIU2_MBOX_SET4                 0x0001070100100420  NCB
CIU2_MBOX_SET5                 0x0001070100100428  NCB
CIU2_MBOX_SET6                 0x0001070100100430  NCB
CIU2_MBOX_SET7                 0x0001070100100438  NCB
CIU2_MBOX_SET8                 0x0001070100100440  NCB
CIU2_MBOX_SET9                 0x0001070100100448  NCB
CIU2_MBOX_SET10                0x0001070100100450  NCB
CIU2_MBOX_SET11                0x0001070100100458  NCB
CIU2_MBOX_SET12                0x0001070100100460  NCB
CIU2_MBOX_SET13                0x0001070100100468  NCB
CIU2_MBOX_SET14                0x0001070100100470  NCB
CIU2_MBOX_SET15                0x0001070100100478  NCB
CIU2_MBOX_SET16                0x0001070100100480  NCB
CIU2_MBOX_SET17                0x0001070100100488  NCB
CIU2_MBOX_SET18                0x0001070100100490  NCB
CIU2_MBOX_SET19                0x0001070100100498  NCB
CIU2_MBOX_SET20                0x00010701001004A0  NCB
CIU2_MBOX_SET21                0x00010701001004A8  NCB
CIU2_MBOX_SET22                0x00010701001004B0  NCB
CIU2_MBOX_SET23                0x00010701001004B8  NCB
CIU2_MBOX_SET24                0x00010701001004C0  NCB
CIU2_MBOX_SET25                0x00010701001004C8  NCB
CIU2_MBOX_SET26                0x00010701001004D0  NCB
CIU2_MBOX_SET27                0x00010701001004D8  NCB
CIU2_MBOX_SET28                0x00010701001004E0  NCB
CIU2_MBOX_SET29                0x00010701001004E8  NCB
CIU2_MBOX_SET30                0x00010701001004F0  NCB
CIU2_MBOX_SET31                0x00010701001004F8  NCB
CIU2_MSIRED_PP0_IP2            0x00010701000C1000  NCB
CIU2_MSIRED_PP0_IP3            0x00010701000C1200  NCB
CIU2_MSIRED_PP0_IP4            0x00010701000C1400  NCB
CIU2_MSIRED_PP1_IP2            0x00010701002C1000  NCB
CIU2_MSIRED_PP1_IP3            0x00010701002C1200  NCB
CIU2_MSIRED_PP1_IP4            0x00010701002C1400  NCB
CIU2_MSIRED_PP2_IP2            0x00010701004C1000  NCB
CIU2_MSIRED_PP2_IP3            0x00010701004C1200  NCB
CIU2_MSIRED_PP2_IP4            0x00010701004C1400  NCB
CIU2_MSIRED_PP3_IP2            0x00010701006C1000  NCB
CIU2_MSIRED_PP3_IP3            0x00010701006C1200  NCB
CIU2_MSIRED_PP3_IP4            0x00010701006C1400  NCB
CIU2_MSIRED_PP4_IP2            0x00010701008C1000  NCB
CIU2_MSIRED_PP4_IP3            0x00010701008C1200  NCB
CIU2_MSIRED_PP4_IP4            0x00010701008C1400  NCB
CIU2_MSIRED_PP5_IP2            0x0001070100AC1000  NCB
CIU2_MSIRED_PP5_IP3            0x0001070100AC1200  NCB
CIU2_MSIRED_PP5_IP4            0x0001070100AC1400  NCB
CIU2_MSIRED_PP6_IP2            0x0001070100CC1000  NCB
CIU2_MSIRED_PP6_IP3            0x0001070100CC1200  NCB
CIU2_MSIRED_PP6_IP4            0x0001070100CC1400  NCB
CIU2_MSIRED_PP7_IP2            0x0001070100EC1000  NCB
CIU2_MSIRED_PP7_IP3            0x0001070100EC1200  NCB
CIU2_MSIRED_PP7_IP4            0x0001070100EC1400  NCB
CIU2_MSIRED_PP8_IP2            0x00010701010C1000  NCB
CIU2_MSIRED_PP8_IP3            0x00010701010C1200  NCB
CIU2_MSIRED_PP8_IP4            0x00010701010C1400  NCB
CIU2_MSIRED_PP9_IP2            0x00010701012C1000  NCB
CIU2_MSIRED_PP9_IP3            0x00010701012C1200  NCB
CIU2_MSIRED_PP9_IP4            0x00010701012C1400  NCB
CIU2_MSIRED_PP10_IP2           0x00010701014C1000  NCB
CIU2_MSIRED_PP10_IP3           0x00010701014C1200  NCB
CIU2_MSIRED_PP10_IP4           0x00010701014C1400  NCB
CIU2_MSIRED_PP11_IP2           0x00010701016C1000  NCB
CIU2_MSIRED_PP11_IP3           0x00010701016C1200  NCB
CIU2_MSIRED_PP11_IP4           0x00010701016C1400  NCB
CIU2_MSIRED_PP12_IP2           0x00010701018C1000  NCB
CIU2_MSIRED_PP12_IP3           0x00010701018C1200  NCB
CIU2_MSIRED_PP12_IP4           0x00010701018C1400  NCB
CIU2_MSIRED_PP13_IP2           0x0001070101AC1000  NCB
CIU2_MSIRED_PP13_IP3           0x0001070101AC1200  NCB
CIU2_MSIRED_PP13_IP4           0x0001070101AC1400  NCB
CIU2_MSIRED_PP14_IP2           0x0001070101CC1000  NCB
CIU2_MSIRED_PP14_IP3           0x0001070101CC1200  NCB
CIU2_MSIRED_PP14_IP4           0x0001070101CC1400  NCB
CIU2_MSIRED_PP15_IP2           0x0001070101EC1000  NCB
CIU2_MSIRED_PP15_IP3           0x0001070101EC1200  NCB
CIU2_MSIRED_PP15_IP4           0x0001070101EC1400  NCB
CIU2_MSIRED_PP16_IP2           0x00010701020C1000  NCB
CIU2_MSIRED_PP16_IP3           0x00010701020C1200  NCB
CIU2_MSIRED_PP16_IP4           0x00010701020C1400  NCB
CIU2_MSIRED_PP17_IP2           0x00010701022C1000  NCB
CIU2_MSIRED_PP17_IP3           0x00010701022C1200  NCB
CIU2_MSIRED_PP17_IP4           0x00010701022C1400  NCB
CIU2_MSIRED_PP18_IP2           0x00010701024C1000  NCB
CIU2_MSIRED_PP18_IP3           0x00010701024C1200  NCB
CIU2_MSIRED_PP18_IP4           0x00010701024C1400  NCB
CIU2_MSIRED_PP19_IP2           0x00010701026C1000  NCB
CIU2_MSIRED_PP19_IP3           0x00010701026C1200  NCB
CIU2_MSIRED_PP19_IP4           0x00010701026C1400  NCB
CIU2_MSIRED_PP20_IP2           0x00010701028C1000  NCB
CIU2_MSIRED_PP20_IP3           0x00010701028C1200  NCB
CIU2_MSIRED_PP20_IP4           0x00010701028C1400  NCB
CIU2_MSIRED_PP21_IP2           0x0001070102AC1000  NCB
CIU2_MSIRED_PP21_IP3           0x0001070102AC1200  NCB
CIU2_MSIRED_PP21_IP4           0x0001070102AC1400  NCB
CIU2_MSIRED_PP22_IP2           0x0001070102CC1000  NCB
CIU2_MSIRED_PP22_IP3           0x0001070102CC1200  NCB
CIU2_MSIRED_PP22_IP4           0x0001070102CC1400  NCB
CIU2_MSIRED_PP23_IP2           0x0001070102EC1000  NCB
CIU2_MSIRED_PP23_IP3           0x0001070102EC1200  NCB
CIU2_MSIRED_PP23_IP4           0x0001070102EC1400  NCB
CIU2_MSIRED_PP24_IP2           0x00010701030C1000  NCB
CIU2_MSIRED_PP24_IP3           0x00010701030C1200  NCB
CIU2_MSIRED_PP24_IP4           0x00010701030C1400  NCB
CIU2_MSIRED_PP25_IP2           0x00010701032C1000  NCB
CIU2_MSIRED_PP25_IP3           0x00010701032C1200  NCB
CIU2_MSIRED_PP25_IP4           0x00010701032C1400  NCB
CIU2_MSIRED_PP26_IP2           0x00010701034C1000  NCB
CIU2_MSIRED_PP26_IP3           0x00010701034C1200  NCB
CIU2_MSIRED_PP26_IP4           0x00010701034C1400  NCB
CIU2_MSIRED_PP27_IP2           0x00010701036C1000  NCB
CIU2_MSIRED_PP27_IP3           0x00010701036C1200  NCB
CIU2_MSIRED_PP27_IP4           0x00010701036C1400  NCB
CIU2_MSIRED_PP28_IP2           0x00010701038C1000  NCB
CIU2_MSIRED_PP28_IP3           0x00010701038C1200  NCB
CIU2_MSIRED_PP28_IP4           0x00010701038C1400  NCB
CIU2_MSIRED_PP29_IP2           0x0001070103AC1000  NCB
CIU2_MSIRED_PP29_IP3           0x0001070103AC1200  NCB
CIU2_MSIRED_PP29_IP4           0x0001070103AC1400  NCB
CIU2_MSIRED_PP30_IP2           0x0001070103CC1000  NCB
CIU2_MSIRED_PP30_IP3           0x0001070103CC1200  NCB
CIU2_MSIRED_PP30_IP4           0x0001070103CC1400  NCB
CIU2_MSIRED_PP31_IP2           0x0001070103EC1000  NCB
CIU2_MSIRED_PP31_IP3           0x0001070103EC1200  NCB
CIU2_MSIRED_PP31_IP4           0x0001070103EC1400  NCB
CIU2_MSI_RCV0                  0x00010701000C2000  NCB
CIU2_MSI_RCV1                  0x00010701000C2008  NCB
CIU2_MSI_RCV2                  0x00010701000C2010  NCB
CIU2_MSI_RCV3                  0x00010701000C2018  NCB
CIU2_MSI_RCV4                  0x00010701000C2020  NCB
CIU2_MSI_RCV5                  0x00010701000C2028  NCB
CIU2_MSI_RCV6                  0x00010701000C2030  NCB
CIU2_MSI_RCV7                  0x00010701000C2038  NCB
CIU2_MSI_RCV8                  0x00010701000C2040  NCB
CIU2_MSI_RCV9                  0x00010701000C2048  NCB
CIU2_MSI_RCV10                 0x00010701000C2050  NCB
CIU2_MSI_RCV11                 0x00010701000C2058  NCB
CIU2_MSI_RCV12                 0x00010701000C2060  NCB
CIU2_MSI_RCV13                 0x00010701000C2068  NCB
CIU2_MSI_RCV14                 0x00010701000C2070  NCB
CIU2_MSI_RCV15                 0x00010701000C2078  NCB
CIU2_MSI_RCV16                 0x00010701000C2080  NCB
CIU2_MSI_RCV17                 0x00010701000C2088  NCB
CIU2_MSI_RCV18                 0x00010701000C2090  NCB
CIU2_MSI_RCV19                 0x00010701000C2098  NCB
CIU2_MSI_RCV20                 0x00010701000C20A0  NCB
CIU2_MSI_RCV21                 0x00010701000C20A8  NCB
CIU2_MSI_RCV22                 0x00010701000C20B0  NCB
CIU2_MSI_RCV23                 0x00010701000C20B8  NCB
CIU2_MSI_RCV24                 0x00010701000C20C0  NCB
CIU2_MSI_RCV25                 0x00010701000C20C8  NCB
CIU2_MSI_RCV26                 0x00010701000C20D0  NCB
CIU2_MSI_RCV27                 0x00010701000C20D8  NCB
CIU2_MSI_RCV28                 0x00010701000C20E0  NCB
CIU2_MSI_RCV29                 0x00010701000C20E8  NCB
CIU2_MSI_RCV30                 0x00010701000C20F0  NCB
CIU2_MSI_RCV31                 0x00010701000C20F8  NCB
CIU2_MSI_RCV32                 0x00010701000C2100  NCB
CIU2_MSI_RCV33                 0x00010701000C2108  NCB
CIU2_MSI_RCV34                 0x00010701000C2110  NCB
CIU2_MSI_RCV35                 0x00010701000C2118  NCB
CIU2_MSI_RCV36                 0x00010701000C2120  NCB
CIU2_MSI_RCV37                 0x00010701000C2128  NCB
CIU2_MSI_RCV38                 0x00010701000C2130  NCB
CIU2_MSI_RCV39                 0x00010701000C2138  NCB
CIU2_MSI_RCV40                 0x00010701000C2140  NCB
CIU2_MSI_RCV41                 0x00010701000C2148  NCB
CIU2_MSI_RCV42                 0x00010701000C2150  NCB
CIU2_MSI_RCV43                 0x00010701000C2158  NCB
CIU2_MSI_RCV44                 0x00010701000C2160  NCB
CIU2_MSI_RCV45                 0x00010701000C2168  NCB
CIU2_MSI_RCV46                 0x00010701000C2170  NCB
CIU2_MSI_RCV47                 0x00010701000C2178  NCB
CIU2_MSI_RCV48                 0x00010701000C2180  NCB
CIU2_MSI_RCV49                 0x00010701000C2188  NCB
CIU2_MSI_RCV50                 0x00010701000C2190  NCB
CIU2_MSI_RCV51                 0x00010701000C2198  NCB
CIU2_MSI_RCV52                 0x00010701000C21A0  NCB
CIU2_MSI_RCV53                 0x00010701000C21A8  NCB
CIU2_MSI_RCV54                 0x00010701000C21B0  NCB
CIU2_MSI_RCV55                 0x00010701000C21B8  NCB
CIU2_MSI_RCV56                 0x00010701000C21C0  NCB
CIU2_MSI_RCV57                 0x00010701000C21C8  NCB
CIU2_MSI_RCV58                 0x00010701000C21D0  NCB
CIU2_MSI_RCV59                 0x00010701000C21D8  NCB
CIU2_MSI_RCV60                 0x00010701000C21E0  NCB
CIU2_MSI_RCV61                 0x00010701000C21E8  NCB
CIU2_MSI_RCV62                 0x00010701000C21F0  NCB
CIU2_MSI_RCV63                 0x00010701000C21F8  NCB
CIU2_MSI_RCV64                 0x00010701000C2200  NCB
CIU2_MSI_RCV65                 0x00010701000C2208  NCB
CIU2_MSI_RCV66                 0x00010701000C2210  NCB
CIU2_MSI_RCV67                 0x00010701000C2218  NCB
CIU2_MSI_RCV68                 0x00010701000C2220  NCB
CIU2_MSI_RCV69                 0x00010701000C2228  NCB
CIU2_MSI_RCV70                 0x00010701000C2230  NCB
CIU2_MSI_RCV71                 0x00010701000C2238  NCB
CIU2_MSI_RCV72                 0x00010701000C2240  NCB
CIU2_MSI_RCV73                 0x00010701000C2248  NCB
CIU2_MSI_RCV74                 0x00010701000C2250  NCB
CIU2_MSI_RCV75                 0x00010701000C2258  NCB
CIU2_MSI_RCV76                 0x00010701000C2260  NCB
CIU2_MSI_RCV77                 0x00010701000C2268  NCB
CIU2_MSI_RCV78                 0x00010701000C2270  NCB
CIU2_MSI_RCV79                 0x00010701000C2278  NCB
CIU2_MSI_RCV80                 0x00010701000C2280  NCB
CIU2_MSI_RCV81                 0x00010701000C2288  NCB
CIU2_MSI_RCV82                 0x00010701000C2290  NCB
CIU2_MSI_RCV83                 0x00010701000C2298  NCB
CIU2_MSI_RCV84                 0x00010701000C22A0  NCB
CIU2_MSI_RCV85                 0x00010701000C22A8  NCB
CIU2_MSI_RCV86                 0x00010701000C22B0  NCB
CIU2_MSI_RCV87                 0x00010701000C22B8  NCB
CIU2_MSI_RCV88                 0x00010701000C22C0  NCB
CIU2_MSI_RCV89                 0x00010701000C22C8  NCB
CIU2_MSI_RCV90                 0x00010701000C22D0  NCB
CIU2_MSI_RCV91                 0x00010701000C22D8  NCB
CIU2_MSI_RCV92                 0x00010701000C22E0  NCB
CIU2_MSI_RCV93                 0x00010701000C22E8  NCB
CIU2_MSI_RCV94                 0x00010701000C22F0  NCB
CIU2_MSI_RCV95                 0x00010701000C22F8  NCB
CIU2_MSI_RCV96                 0x00010701000C2300  NCB
CIU2_MSI_RCV97                 0x00010701000C2308  NCB
CIU2_MSI_RCV98                 0x00010701000C2310  NCB
CIU2_MSI_RCV99                 0x00010701000C2318  NCB
CIU2_MSI_RCV100                0x00010701000C2320  NCB
CIU2_MSI_RCV101                0x00010701000C2328  NCB
CIU2_MSI_RCV102                0x00010701000C2330  NCB
CIU2_MSI_RCV103                0x00010701000C2338  NCB
CIU2_MSI_RCV104                0x00010701000C2340  NCB
CIU2_MSI_RCV105                0x00010701000C2348  NCB
CIU2_MSI_RCV106                0x00010701000C2350  NCB
CIU2_MSI_RCV107                0x00010701000C2358  NCB
CIU2_MSI_RCV108                0x00010701000C2360  NCB
CIU2_MSI_RCV109                0x00010701000C2368  NCB
CIU2_MSI_RCV110                0x00010701000C2370  NCB
CIU2_MSI_RCV111                0x00010701000C2378  NCB
CIU2_MSI_RCV112                0x00010701000C2380  NCB
CIU2_MSI_RCV113                0x00010701000C2388  NCB
CIU2_MSI_RCV114                0x00010701000C2390  NCB
CIU2_MSI_RCV115                0x00010701000C2398  NCB
CIU2_MSI_RCV116                0x00010701000C23A0  NCB
CIU2_MSI_RCV117                0x00010701000C23A8  NCB
CIU2_MSI_RCV118                0x00010701000C23B0  NCB
CIU2_MSI_RCV119                0x00010701000C23B8  NCB
CIU2_MSI_RCV120                0x00010701000C23C0  NCB
CIU2_MSI_RCV121                0x00010701000C23C8  NCB
CIU2_MSI_RCV122                0x00010701000C23D0  NCB
CIU2_MSI_RCV123                0x00010701000C23D8  NCB
CIU2_MSI_RCV124                0x00010701000C23E0  NCB
CIU2_MSI_RCV125                0x00010701000C23E8  NCB
CIU2_MSI_RCV126                0x00010701000C23F0  NCB
CIU2_MSI_RCV127                0x00010701000C23F8  NCB
CIU2_MSI_RCV128                0x00010701000C2400  NCB
CIU2_MSI_RCV129                0x00010701000C2408  NCB
CIU2_MSI_RCV130                0x00010701000C2410  NCB
CIU2_MSI_RCV131                0x00010701000C2418  NCB
CIU2_MSI_RCV132                0x00010701000C2420  NCB
CIU2_MSI_RCV133                0x00010701000C2428  NCB
CIU2_MSI_RCV134                0x00010701000C2430  NCB
CIU2_MSI_RCV135                0x00010701000C2438  NCB
CIU2_MSI_RCV136                0x00010701000C2440  NCB
CIU2_MSI_RCV137                0x00010701000C2448  NCB
CIU2_MSI_RCV138                0x00010701000C2450  NCB
CIU2_MSI_RCV139                0x00010701000C2458  NCB
CIU2_MSI_RCV140                0x00010701000C2460  NCB
CIU2_MSI_RCV141                0x00010701000C2468  NCB
CIU2_MSI_RCV142                0x00010701000C2470  NCB
CIU2_MSI_RCV143                0x00010701000C2478  NCB
CIU2_MSI_RCV144                0x00010701000C2480  NCB
CIU2_MSI_RCV145                0x00010701000C2488  NCB
CIU2_MSI_RCV146                0x00010701000C2490  NCB
CIU2_MSI_RCV147                0x00010701000C2498  NCB
CIU2_MSI_RCV148                0x00010701000C24A0  NCB
CIU2_MSI_RCV149                0x00010701000C24A8  NCB
CIU2_MSI_RCV150                0x00010701000C24B0  NCB
CIU2_MSI_RCV151                0x00010701000C24B8  NCB
CIU2_MSI_RCV152                0x00010701000C24C0  NCB
CIU2_MSI_RCV153                0x00010701000C24C8  NCB
CIU2_MSI_RCV154                0x00010701000C24D0  NCB
CIU2_MSI_RCV155                0x00010701000C24D8  NCB
CIU2_MSI_RCV156                0x00010701000C24E0  NCB
CIU2_MSI_RCV157                0x00010701000C24E8  NCB
CIU2_MSI_RCV158                0x00010701000C24F0  NCB
CIU2_MSI_RCV159                0x00010701000C24F8  NCB
CIU2_MSI_RCV160                0x00010701000C2500  NCB
CIU2_MSI_RCV161                0x00010701000C2508  NCB
CIU2_MSI_RCV162                0x00010701000C2510  NCB
CIU2_MSI_RCV163                0x00010701000C2518  NCB
CIU2_MSI_RCV164                0x00010701000C2520  NCB
CIU2_MSI_RCV165                0x00010701000C2528  NCB
CIU2_MSI_RCV166                0x00010701000C2530  NCB
CIU2_MSI_RCV167                0x00010701000C2538  NCB
CIU2_MSI_RCV168                0x00010701000C2540  NCB
CIU2_MSI_RCV169                0x00010701000C2548  NCB
CIU2_MSI_RCV170                0x00010701000C2550  NCB
CIU2_MSI_RCV171                0x00010701000C2558  NCB
CIU2_MSI_RCV172                0x00010701000C2560  NCB
CIU2_MSI_RCV173                0x00010701000C2568  NCB
CIU2_MSI_RCV174                0x00010701000C2570  NCB
CIU2_MSI_RCV175                0x00010701000C2578  NCB
CIU2_MSI_RCV176                0x00010701000C2580  NCB
CIU2_MSI_RCV177                0x00010701000C2588  NCB
CIU2_MSI_RCV178                0x00010701000C2590  NCB
CIU2_MSI_RCV179                0x00010701000C2598  NCB
CIU2_MSI_RCV180                0x00010701000C25A0  NCB
CIU2_MSI_RCV181                0x00010701000C25A8  NCB
CIU2_MSI_RCV182                0x00010701000C25B0  NCB
CIU2_MSI_RCV183                0x00010701000C25B8  NCB
CIU2_MSI_RCV184                0x00010701000C25C0  NCB
CIU2_MSI_RCV185                0x00010701000C25C8  NCB
CIU2_MSI_RCV186                0x00010701000C25D0  NCB
CIU2_MSI_RCV187                0x00010701000C25D8  NCB
CIU2_MSI_RCV188                0x00010701000C25E0  NCB
CIU2_MSI_RCV189                0x00010701000C25E8  NCB
CIU2_MSI_RCV190                0x00010701000C25F0  NCB
CIU2_MSI_RCV191                0x00010701000C25F8  NCB
CIU2_MSI_RCV192                0x00010701000C2600  NCB
CIU2_MSI_RCV193                0x00010701000C2608  NCB
CIU2_MSI_RCV194                0x00010701000C2610  NCB
CIU2_MSI_RCV195                0x00010701000C2618  NCB
CIU2_MSI_RCV196                0x00010701000C2620  NCB
CIU2_MSI_RCV197                0x00010701000C2628  NCB
CIU2_MSI_RCV198                0x00010701000C2630  NCB
CIU2_MSI_RCV199                0x00010701000C2638  NCB
CIU2_MSI_RCV200                0x00010701000C2640  NCB
CIU2_MSI_RCV201                0x00010701000C2648  NCB
CIU2_MSI_RCV202                0x00010701000C2650  NCB
CIU2_MSI_RCV203                0x00010701000C2658  NCB
CIU2_MSI_RCV204                0x00010701000C2660  NCB
CIU2_MSI_RCV205                0x00010701000C2668  NCB
CIU2_MSI_RCV206                0x00010701000C2670  NCB
CIU2_MSI_RCV207                0x00010701000C2678  NCB
CIU2_MSI_RCV208                0x00010701000C2680  NCB
CIU2_MSI_RCV209                0x00010701000C2688  NCB
CIU2_MSI_RCV210                0x00010701000C2690  NCB
CIU2_MSI_RCV211                0x00010701000C2698  NCB
CIU2_MSI_RCV212                0x00010701000C26A0  NCB
CIU2_MSI_RCV213                0x00010701000C26A8  NCB
CIU2_MSI_RCV214                0x00010701000C26B0  NCB
CIU2_MSI_RCV215                0x00010701000C26B8  NCB
CIU2_MSI_RCV216                0x00010701000C26C0  NCB
CIU2_MSI_RCV217                0x00010701000C26C8  NCB
CIU2_MSI_RCV218                0x00010701000C26D0  NCB
CIU2_MSI_RCV219                0x00010701000C26D8  NCB
CIU2_MSI_RCV220                0x00010701000C26E0  NCB
CIU2_MSI_RCV221                0x00010701000C26E8  NCB
CIU2_MSI_RCV222                0x00010701000C26F0  NCB
CIU2_MSI_RCV223                0x00010701000C26F8  NCB
CIU2_MSI_RCV224                0x00010701000C2700  NCB
CIU2_MSI_RCV225                0x00010701000C2708  NCB
CIU2_MSI_RCV226                0x00010701000C2710  NCB
CIU2_MSI_RCV227                0x00010701000C2718  NCB
CIU2_MSI_RCV228                0x00010701000C2720  NCB
CIU2_MSI_RCV229                0x00010701000C2728  NCB
CIU2_MSI_RCV230                0x00010701000C2730  NCB
CIU2_MSI_RCV231                0x00010701000C2738  NCB
CIU2_MSI_RCV232                0x00010701000C2740  NCB
CIU2_MSI_RCV233                0x00010701000C2748  NCB
CIU2_MSI_RCV234                0x00010701000C2750  NCB
CIU2_MSI_RCV235                0x00010701000C2758  NCB
CIU2_MSI_RCV236                0x00010701000C2760  NCB
CIU2_MSI_RCV237                0x00010701000C2768  NCB
CIU2_MSI_RCV238                0x00010701000C2770  NCB
CIU2_MSI_RCV239                0x00010701000C2778  NCB
CIU2_MSI_RCV240                0x00010701000C2780  NCB
CIU2_MSI_RCV241                0x00010701000C2788  NCB
CIU2_MSI_RCV242                0x00010701000C2790  NCB
CIU2_MSI_RCV243                0x00010701000C2798  NCB
CIU2_MSI_RCV244                0x00010701000C27A0  NCB
CIU2_MSI_RCV245                0x00010701000C27A8  NCB
CIU2_MSI_RCV246                0x00010701000C27B0  NCB
CIU2_MSI_RCV247                0x00010701000C27B8  NCB
CIU2_MSI_RCV248                0x00010701000C27C0  NCB
CIU2_MSI_RCV249                0x00010701000C27C8  NCB
CIU2_MSI_RCV250                0x00010701000C27D0  NCB
CIU2_MSI_RCV251                0x00010701000C27D8  NCB
CIU2_MSI_RCV252                0x00010701000C27E0  NCB
CIU2_MSI_RCV253                0x00010701000C27E8  NCB
CIU2_MSI_RCV254                0x00010701000C27F0  NCB
CIU2_MSI_RCV255                0x00010701000C27F8  NCB
CIU2_MSI_SEL0                  0x00010701000C3000  NCB
CIU2_MSI_SEL1                  0x00010701000C3008  NCB
CIU2_MSI_SEL2                  0x00010701000C3010  NCB
CIU2_MSI_SEL3                  0x00010701000C3018  NCB
CIU2_MSI_SEL4                  0x00010701000C3020  NCB
CIU2_MSI_SEL5                  0x00010701000C3028  NCB
CIU2_MSI_SEL6                  0x00010701000C3030  NCB
CIU2_MSI_SEL7                  0x00010701000C3038  NCB
CIU2_MSI_SEL8                  0x00010701000C3040  NCB
CIU2_MSI_SEL9                  0x00010701000C3048  NCB
CIU2_MSI_SEL10                 0x00010701000C3050  NCB
CIU2_MSI_SEL11                 0x00010701000C3058  NCB
CIU2_MSI_SEL12                 0x00010701000C3060  NCB
CIU2_MSI_SEL13                 0x00010701000C3068  NCB
CIU2_MSI_SEL14                 0x00010701000C3070  NCB
CIU2_MSI_SEL15                 0x00010701000C3078  NCB
CIU2_MSI_SEL16                 0x00010701000C3080  NCB
CIU2_MSI_SEL17                 0x00010701000C3088  NCB
CIU2_MSI_SEL18                 0x00010701000C3090  NCB
CIU2_MSI_SEL19                 0x00010701000C3098  NCB
CIU2_MSI_SEL20                 0x00010701000C30A0  NCB
CIU2_MSI_SEL21                 0x00010701000C30A8  NCB
CIU2_MSI_SEL22                 0x00010701000C30B0  NCB
CIU2_MSI_SEL23                 0x00010701000C30B8  NCB
CIU2_MSI_SEL24                 0x00010701000C30C0  NCB
CIU2_MSI_SEL25                 0x00010701000C30C8  NCB
CIU2_MSI_SEL26                 0x00010701000C30D0  NCB
CIU2_MSI_SEL27                 0x00010701000C30D8  NCB
CIU2_MSI_SEL28                 0x00010701000C30E0  NCB
CIU2_MSI_SEL29                 0x00010701000C30E8  NCB
CIU2_MSI_SEL30                 0x00010701000C30F0  NCB
CIU2_MSI_SEL31                 0x00010701000C30F8  NCB
CIU2_MSI_SEL32                 0x00010701000C3100  NCB
CIU2_MSI_SEL33                 0x00010701000C3108  NCB
CIU2_MSI_SEL34                 0x00010701000C3110  NCB
CIU2_MSI_SEL35                 0x00010701000C3118  NCB
CIU2_MSI_SEL36                 0x00010701000C3120  NCB
CIU2_MSI_SEL37                 0x00010701000C3128  NCB
CIU2_MSI_SEL38                 0x00010701000C3130  NCB
CIU2_MSI_SEL39                 0x00010701000C3138  NCB
CIU2_MSI_SEL40                 0x00010701000C3140  NCB
CIU2_MSI_SEL41                 0x00010701000C3148  NCB
CIU2_MSI_SEL42                 0x00010701000C3150  NCB
CIU2_MSI_SEL43                 0x00010701000C3158  NCB
CIU2_MSI_SEL44                 0x00010701000C3160  NCB
CIU2_MSI_SEL45                 0x00010701000C3168  NCB
CIU2_MSI_SEL46                 0x00010701000C3170  NCB
CIU2_MSI_SEL47                 0x00010701000C3178  NCB
CIU2_MSI_SEL48                 0x00010701000C3180  NCB
CIU2_MSI_SEL49                 0x00010701000C3188  NCB
CIU2_MSI_SEL50                 0x00010701000C3190  NCB
CIU2_MSI_SEL51                 0x00010701000C3198  NCB
CIU2_MSI_SEL52                 0x00010701000C31A0  NCB
CIU2_MSI_SEL53                 0x00010701000C31A8  NCB
CIU2_MSI_SEL54                 0x00010701000C31B0  NCB
CIU2_MSI_SEL55                 0x00010701000C31B8  NCB
CIU2_MSI_SEL56                 0x00010701000C31C0  NCB
CIU2_MSI_SEL57                 0x00010701000C31C8  NCB
CIU2_MSI_SEL58                 0x00010701000C31D0  NCB
CIU2_MSI_SEL59                 0x00010701000C31D8  NCB
CIU2_MSI_SEL60                 0x00010701000C31E0  NCB
CIU2_MSI_SEL61                 0x00010701000C31E8  NCB
CIU2_MSI_SEL62                 0x00010701000C31F0  NCB
CIU2_MSI_SEL63                 0x00010701000C31F8  NCB
CIU2_MSI_SEL64                 0x00010701000C3200  NCB
CIU2_MSI_SEL65                 0x00010701000C3208  NCB
CIU2_MSI_SEL66                 0x00010701000C3210  NCB
CIU2_MSI_SEL67                 0x00010701000C3218  NCB
CIU2_MSI_SEL68                 0x00010701000C3220  NCB
CIU2_MSI_SEL69                 0x00010701000C3228  NCB
CIU2_MSI_SEL70                 0x00010701000C3230  NCB
CIU2_MSI_SEL71                 0x00010701000C3238  NCB
CIU2_MSI_SEL72                 0x00010701000C3240  NCB
CIU2_MSI_SEL73                 0x00010701000C3248  NCB
CIU2_MSI_SEL74                 0x00010701000C3250  NCB
CIU2_MSI_SEL75                 0x00010701000C3258  NCB
CIU2_MSI_SEL76                 0x00010701000C3260  NCB
CIU2_MSI_SEL77                 0x00010701000C3268  NCB
CIU2_MSI_SEL78                 0x00010701000C3270  NCB
CIU2_MSI_SEL79                 0x00010701000C3278  NCB
CIU2_MSI_SEL80                 0x00010701000C3280  NCB
CIU2_MSI_SEL81                 0x00010701000C3288  NCB
CIU2_MSI_SEL82                 0x00010701000C3290  NCB
CIU2_MSI_SEL83                 0x00010701000C3298  NCB
CIU2_MSI_SEL84                 0x00010701000C32A0  NCB
CIU2_MSI_SEL85                 0x00010701000C32A8  NCB
CIU2_MSI_SEL86                 0x00010701000C32B0  NCB
CIU2_MSI_SEL87                 0x00010701000C32B8  NCB
CIU2_MSI_SEL88                 0x00010701000C32C0  NCB
CIU2_MSI_SEL89                 0x00010701000C32C8  NCB
CIU2_MSI_SEL90                 0x00010701000C32D0  NCB
CIU2_MSI_SEL91                 0x00010701000C32D8  NCB
CIU2_MSI_SEL92                 0x00010701000C32E0  NCB
CIU2_MSI_SEL93                 0x00010701000C32E8  NCB
CIU2_MSI_SEL94                 0x00010701000C32F0  NCB
CIU2_MSI_SEL95                 0x00010701000C32F8  NCB
CIU2_MSI_SEL96                 0x00010701000C3300  NCB
CIU2_MSI_SEL97                 0x00010701000C3308  NCB
CIU2_MSI_SEL98                 0x00010701000C3310  NCB
CIU2_MSI_SEL99                 0x00010701000C3318  NCB
CIU2_MSI_SEL100                0x00010701000C3320  NCB
CIU2_MSI_SEL101                0x00010701000C3328  NCB
CIU2_MSI_SEL102                0x00010701000C3330  NCB
CIU2_MSI_SEL103                0x00010701000C3338  NCB
CIU2_MSI_SEL104                0x00010701000C3340  NCB
CIU2_MSI_SEL105                0x00010701000C3348  NCB
CIU2_MSI_SEL106                0x00010701000C3350  NCB
CIU2_MSI_SEL107                0x00010701000C3358  NCB
CIU2_MSI_SEL108                0x00010701000C3360  NCB
CIU2_MSI_SEL109                0x00010701000C3368  NCB
CIU2_MSI_SEL110                0x00010701000C3370  NCB
CIU2_MSI_SEL111                0x00010701000C3378  NCB
CIU2_MSI_SEL112                0x00010701000C3380  NCB
CIU2_MSI_SEL113                0x00010701000C3388  NCB
CIU2_MSI_SEL114                0x00010701000C3390  NCB
CIU2_MSI_SEL115                0x00010701000C3398  NCB
CIU2_MSI_SEL116                0x00010701000C33A0  NCB
CIU2_MSI_SEL117                0x00010701000C33A8  NCB
CIU2_MSI_SEL118                0x00010701000C33B0  NCB
CIU2_MSI_SEL119                0x00010701000C33B8  NCB
CIU2_MSI_SEL120                0x00010701000C33C0  NCB
CIU2_MSI_SEL121                0x00010701000C33C8  NCB
CIU2_MSI_SEL122                0x00010701000C33D0  NCB
CIU2_MSI_SEL123                0x00010701000C33D8  NCB
CIU2_MSI_SEL124                0x00010701000C33E0  NCB
CIU2_MSI_SEL125                0x00010701000C33E8  NCB
CIU2_MSI_SEL126                0x00010701000C33F0  NCB
CIU2_MSI_SEL127                0x00010701000C33F8  NCB
CIU2_MSI_SEL128                0x00010701000C3400  NCB
CIU2_MSI_SEL129                0x00010701000C3408  NCB
CIU2_MSI_SEL130                0x00010701000C3410  NCB
CIU2_MSI_SEL131                0x00010701000C3418  NCB
CIU2_MSI_SEL132                0x00010701000C3420  NCB
CIU2_MSI_SEL133                0x00010701000C3428  NCB
CIU2_MSI_SEL134                0x00010701000C3430  NCB
CIU2_MSI_SEL135                0x00010701000C3438  NCB
CIU2_MSI_SEL136                0x00010701000C3440  NCB
CIU2_MSI_SEL137                0x00010701000C3448  NCB
CIU2_MSI_SEL138                0x00010701000C3450  NCB
CIU2_MSI_SEL139                0x00010701000C3458  NCB
CIU2_MSI_SEL140                0x00010701000C3460  NCB
CIU2_MSI_SEL141                0x00010701000C3468  NCB
CIU2_MSI_SEL142                0x00010701000C3470  NCB
CIU2_MSI_SEL143                0x00010701000C3478  NCB
CIU2_MSI_SEL144                0x00010701000C3480  NCB
CIU2_MSI_SEL145                0x00010701000C3488  NCB
CIU2_MSI_SEL146                0x00010701000C3490  NCB
CIU2_MSI_SEL147                0x00010701000C3498  NCB
CIU2_MSI_SEL148                0x00010701000C34A0  NCB
CIU2_MSI_SEL149                0x00010701000C34A8  NCB
CIU2_MSI_SEL150                0x00010701000C34B0  NCB
CIU2_MSI_SEL151                0x00010701000C34B8  NCB
CIU2_MSI_SEL152                0x00010701000C34C0  NCB
CIU2_MSI_SEL153                0x00010701000C34C8  NCB
CIU2_MSI_SEL154                0x00010701000C34D0  NCB
CIU2_MSI_SEL155                0x00010701000C34D8  NCB
CIU2_MSI_SEL156                0x00010701000C34E0  NCB
CIU2_MSI_SEL157                0x00010701000C34E8  NCB
CIU2_MSI_SEL158                0x00010701000C34F0  NCB
CIU2_MSI_SEL159                0x00010701000C34F8  NCB
CIU2_MSI_SEL160                0x00010701000C3500  NCB
CIU2_MSI_SEL161                0x00010701000C3508  NCB
CIU2_MSI_SEL162                0x00010701000C3510  NCB
CIU2_MSI_SEL163                0x00010701000C3518  NCB
CIU2_MSI_SEL164                0x00010701000C3520  NCB
CIU2_MSI_SEL165                0x00010701000C3528  NCB
CIU2_MSI_SEL166                0x00010701000C3530  NCB
CIU2_MSI_SEL167                0x00010701000C3538  NCB
CIU2_MSI_SEL168                0x00010701000C3540  NCB
CIU2_MSI_SEL169                0x00010701000C3548  NCB
CIU2_MSI_SEL170                0x00010701000C3550  NCB
CIU2_MSI_SEL171                0x00010701000C3558  NCB
CIU2_MSI_SEL172                0x00010701000C3560  NCB
CIU2_MSI_SEL173                0x00010701000C3568  NCB
CIU2_MSI_SEL174                0x00010701000C3570  NCB
CIU2_MSI_SEL175                0x00010701000C3578  NCB
CIU2_MSI_SEL176                0x00010701000C3580  NCB
CIU2_MSI_SEL177                0x00010701000C3588  NCB
CIU2_MSI_SEL178                0x00010701000C3590  NCB
CIU2_MSI_SEL179                0x00010701000C3598  NCB
CIU2_MSI_SEL180                0x00010701000C35A0  NCB
CIU2_MSI_SEL181                0x00010701000C35A8  NCB
CIU2_MSI_SEL182                0x00010701000C35B0  NCB
CIU2_MSI_SEL183                0x00010701000C35B8  NCB
CIU2_MSI_SEL184                0x00010701000C35C0  NCB
CIU2_MSI_SEL185                0x00010701000C35C8  NCB
CIU2_MSI_SEL186                0x00010701000C35D0  NCB
CIU2_MSI_SEL187                0x00010701000C35D8  NCB
CIU2_MSI_SEL188                0x00010701000C35E0  NCB
CIU2_MSI_SEL189                0x00010701000C35E8  NCB
CIU2_MSI_SEL190                0x00010701000C35F0  NCB
CIU2_MSI_SEL191                0x00010701000C35F8  NCB
CIU2_MSI_SEL192                0x00010701000C3600  NCB
CIU2_MSI_SEL193                0x00010701000C3608  NCB
CIU2_MSI_SEL194                0x00010701000C3610  NCB
CIU2_MSI_SEL195                0x00010701000C3618  NCB
CIU2_MSI_SEL196                0x00010701000C3620  NCB
CIU2_MSI_SEL197                0x00010701000C3628  NCB
CIU2_MSI_SEL198                0x00010701000C3630  NCB
CIU2_MSI_SEL199                0x00010701000C3638  NCB
CIU2_MSI_SEL200                0x00010701000C3640  NCB
CIU2_MSI_SEL201                0x00010701000C3648  NCB
CIU2_MSI_SEL202                0x00010701000C3650  NCB
CIU2_MSI_SEL203                0x00010701000C3658  NCB
CIU2_MSI_SEL204                0x00010701000C3660  NCB
CIU2_MSI_SEL205                0x00010701000C3668  NCB
CIU2_MSI_SEL206                0x00010701000C3670  NCB
CIU2_MSI_SEL207                0x00010701000C3678  NCB
CIU2_MSI_SEL208                0x00010701000C3680  NCB
CIU2_MSI_SEL209                0x00010701000C3688  NCB
CIU2_MSI_SEL210                0x00010701000C3690  NCB
CIU2_MSI_SEL211                0x00010701000C3698  NCB
CIU2_MSI_SEL212                0x00010701000C36A0  NCB
CIU2_MSI_SEL213                0x00010701000C36A8  NCB
CIU2_MSI_SEL214                0x00010701000C36B0  NCB
CIU2_MSI_SEL215                0x00010701000C36B8  NCB
CIU2_MSI_SEL216                0x00010701000C36C0  NCB
CIU2_MSI_SEL217                0x00010701000C36C8  NCB
CIU2_MSI_SEL218                0x00010701000C36D0  NCB
CIU2_MSI_SEL219                0x00010701000C36D8  NCB
CIU2_MSI_SEL220                0x00010701000C36E0  NCB
CIU2_MSI_SEL221                0x00010701000C36E8  NCB
CIU2_MSI_SEL222                0x00010701000C36F0  NCB
CIU2_MSI_SEL223                0x00010701000C36F8  NCB
CIU2_MSI_SEL224                0x00010701000C3700  NCB
CIU2_MSI_SEL225                0x00010701000C3708  NCB
CIU2_MSI_SEL226                0x00010701000C3710  NCB
CIU2_MSI_SEL227                0x00010701000C3718  NCB
CIU2_MSI_SEL228                0x00010701000C3720  NCB
CIU2_MSI_SEL229                0x00010701000C3728  NCB
CIU2_MSI_SEL230                0x00010701000C3730  NCB
CIU2_MSI_SEL231                0x00010701000C3738  NCB
CIU2_MSI_SEL232                0x00010701000C3740  NCB
CIU2_MSI_SEL233                0x00010701000C3748  NCB
CIU2_MSI_SEL234                0x00010701000C3750  NCB
CIU2_MSI_SEL235                0x00010701000C3758  NCB
CIU2_MSI_SEL236                0x00010701000C3760  NCB
CIU2_MSI_SEL237                0x00010701000C3768  NCB
CIU2_MSI_SEL238                0x00010701000C3770  NCB
CIU2_MSI_SEL239                0x00010701000C3778  NCB
CIU2_MSI_SEL240                0x00010701000C3780  NCB
CIU2_MSI_SEL241                0x00010701000C3788  NCB
CIU2_MSI_SEL242                0x00010701000C3790  NCB
CIU2_MSI_SEL243                0x00010701000C3798  NCB
CIU2_MSI_SEL244                0x00010701000C37A0  NCB
CIU2_MSI_SEL245                0x00010701000C37A8  NCB
CIU2_MSI_SEL246                0x00010701000C37B0  NCB
CIU2_MSI_SEL247                0x00010701000C37B8  NCB
CIU2_MSI_SEL248                0x00010701000C37C0  NCB
CIU2_MSI_SEL249                0x00010701000C37C8  NCB
CIU2_MSI_SEL250                0x00010701000C37D0  NCB
CIU2_MSI_SEL251                0x00010701000C37D8  NCB
CIU2_MSI_SEL252                0x00010701000C37E0  NCB
CIU2_MSI_SEL253                0x00010701000C37E8  NCB
CIU2_MSI_SEL254                0x00010701000C37F0  NCB
CIU2_MSI_SEL255                0x00010701000C37F8  NCB
CIU2_PP_POKE0                  0x0001070100100200  NCB
CIU2_PP_POKE1                  0x0001070100100208  NCB
CIU2_PP_POKE2                  0x0001070100100210  NCB
CIU2_PP_POKE3                  0x0001070100100218  NCB
CIU2_PP_POKE4                  0x0001070100100220  NCB
CIU2_PP_POKE5                  0x0001070100100228  NCB
CIU2_PP_POKE6                  0x0001070100100230  NCB
CIU2_PP_POKE7                  0x0001070100100238  NCB
CIU2_PP_POKE8                  0x0001070100100240  NCB
CIU2_PP_POKE9                  0x0001070100100248  NCB
CIU2_PP_POKE10                 0x0001070100100250  NCB
CIU2_PP_POKE11                 0x0001070100100258  NCB
CIU2_PP_POKE12                 0x0001070100100260  NCB
CIU2_PP_POKE13                 0x0001070100100268  NCB
CIU2_PP_POKE14                 0x0001070100100270  NCB
CIU2_PP_POKE15                 0x0001070100100278  NCB
CIU2_PP_POKE16                 0x0001070100100280  NCB
CIU2_PP_POKE17                 0x0001070100100288  NCB
CIU2_PP_POKE18                 0x0001070100100290  NCB
CIU2_PP_POKE19                 0x0001070100100298  NCB
CIU2_PP_POKE20                 0x00010701001002A0  NCB
CIU2_PP_POKE21                 0x00010701001002A8  NCB
CIU2_PP_POKE22                 0x00010701001002B0  NCB
CIU2_PP_POKE23                 0x00010701001002B8  NCB
CIU2_PP_POKE24                 0x00010701001002C0  NCB
CIU2_PP_POKE25                 0x00010701001002C8  NCB
CIU2_PP_POKE26                 0x00010701001002D0  NCB
CIU2_PP_POKE27                 0x00010701001002D8  NCB
CIU2_PP_POKE28                 0x00010701001002E0  NCB
CIU2_PP_POKE29                 0x00010701001002E8  NCB
CIU2_PP_POKE30                 0x00010701001002F0  NCB
CIU2_PP_POKE31                 0x00010701001002F8  NCB
CIU2_RAW_IO0_INT_GPIO          0x0001070108047800  NCB
CIU2_RAW_IO0_INT_IO            0x0001070108044800  NCB
CIU2_RAW_IO0_INT_MEM           0x0001070108045800  NCB
CIU2_RAW_IO0_INT_MIO           0x0001070108043800  NCB
CIU2_RAW_IO0_INT_PKT           0x0001070108046800  NCB
CIU2_RAW_IO0_INT_RML           0x0001070108042800  NCB
CIU2_RAW_IO0_INT_WDOG          0x0001070108041800  NCB
CIU2_RAW_IO0_INT_WRKQ          0x0001070108040800  NCB
CIU2_RAW_IO1_INT_GPIO          0x0001070108247800  NCB
CIU2_RAW_IO1_INT_IO            0x0001070108244800  NCB
CIU2_RAW_IO1_INT_MEM           0x0001070108245800  NCB
CIU2_RAW_IO1_INT_MIO           0x0001070108243800  NCB
CIU2_RAW_IO1_INT_PKT           0x0001070108246800  NCB
CIU2_RAW_IO1_INT_RML           0x0001070108242800  NCB
CIU2_RAW_IO1_INT_WDOG          0x0001070108241800  NCB
CIU2_RAW_IO1_INT_WRKQ          0x0001070108240800  NCB
CIU2_RAW_PP0_IP2_GPIO          0x0001070100047000  NCB
CIU2_RAW_PP0_IP2_IO            0x0001070100044000  NCB
CIU2_RAW_PP0_IP2_MEM           0x0001070100045000  NCB
CIU2_RAW_PP0_IP2_MIO           0x0001070100043000  NCB
CIU2_RAW_PP0_IP2_PKT           0x0001070100046000  NCB
CIU2_RAW_PP0_IP2_RML           0x0001070100042000  NCB
CIU2_RAW_PP0_IP2_WDOG          0x0001070100041000  NCB
CIU2_RAW_PP0_IP2_WRKQ          0x0001070100040000  NCB
CIU2_RAW_PP0_IP3_GPIO          0x0001070100047200  NCB
CIU2_RAW_PP0_IP3_IO            0x0001070100044200  NCB
CIU2_RAW_PP0_IP3_MEM           0x0001070100045200  NCB
CIU2_RAW_PP0_IP3_MIO           0x0001070100043200  NCB
CIU2_RAW_PP0_IP3_PKT           0x0001070100046200  NCB
CIU2_RAW_PP0_IP3_RML           0x0001070100042200  NCB
CIU2_RAW_PP0_IP3_WDOG          0x0001070100041200  NCB
CIU2_RAW_PP0_IP3_WRKQ          0x0001070100040200  NCB
CIU2_RAW_PP0_IP4_GPIO          0x0001070100047400  NCB
CIU2_RAW_PP0_IP4_IO            0x0001070100044400  NCB
CIU2_RAW_PP0_IP4_MEM           0x0001070100045400  NCB
CIU2_RAW_PP0_IP4_MIO           0x0001070100043400  NCB
CIU2_RAW_PP0_IP4_PKT           0x0001070100046400  NCB
CIU2_RAW_PP0_IP4_RML           0x0001070100042400  NCB
CIU2_RAW_PP0_IP4_WDOG          0x0001070100041400  NCB
CIU2_RAW_PP0_IP4_WRKQ          0x0001070100040400  NCB
CIU2_RAW_PP1_IP2_GPIO          0x0001070100247000  NCB
CIU2_RAW_PP1_IP2_IO            0x0001070100244000  NCB
CIU2_RAW_PP1_IP2_MEM           0x0001070100245000  NCB
CIU2_RAW_PP1_IP2_MIO           0x0001070100243000  NCB
CIU2_RAW_PP1_IP2_PKT           0x0001070100246000  NCB
CIU2_RAW_PP1_IP2_RML           0x0001070100242000  NCB
CIU2_RAW_PP1_IP2_WDOG          0x0001070100241000  NCB
CIU2_RAW_PP1_IP2_WRKQ          0x0001070100240000  NCB
CIU2_RAW_PP1_IP3_GPIO          0x0001070100247200  NCB
CIU2_RAW_PP1_IP3_IO            0x0001070100244200  NCB
CIU2_RAW_PP1_IP3_MEM           0x0001070100245200  NCB
CIU2_RAW_PP1_IP3_MIO           0x0001070100243200  NCB
CIU2_RAW_PP1_IP3_PKT           0x0001070100246200  NCB
CIU2_RAW_PP1_IP3_RML           0x0001070100242200  NCB
CIU2_RAW_PP1_IP3_WDOG          0x0001070100241200  NCB
CIU2_RAW_PP1_IP3_WRKQ          0x0001070100240200  NCB
CIU2_RAW_PP1_IP4_GPIO          0x0001070100247400  NCB
CIU2_RAW_PP1_IP4_IO            0x0001070100244400  NCB
CIU2_RAW_PP1_IP4_MEM           0x0001070100245400  NCB
CIU2_RAW_PP1_IP4_MIO           0x0001070100243400  NCB
CIU2_RAW_PP1_IP4_PKT           0x0001070100246400  NCB
CIU2_RAW_PP1_IP4_RML           0x0001070100242400  NCB
CIU2_RAW_PP1_IP4_WDOG          0x0001070100241400  NCB
CIU2_RAW_PP1_IP4_WRKQ          0x0001070100240400  NCB
CIU2_RAW_PP2_IP2_GPIO          0x0001070100447000  NCB
CIU2_RAW_PP2_IP2_IO            0x0001070100444000  NCB
CIU2_RAW_PP2_IP2_MEM           0x0001070100445000  NCB
CIU2_RAW_PP2_IP2_MIO           0x0001070100443000  NCB
CIU2_RAW_PP2_IP2_PKT           0x0001070100446000  NCB
CIU2_RAW_PP2_IP2_RML           0x0001070100442000  NCB
CIU2_RAW_PP2_IP2_WDOG          0x0001070100441000  NCB
CIU2_RAW_PP2_IP2_WRKQ          0x0001070100440000  NCB
CIU2_RAW_PP2_IP3_GPIO          0x0001070100447200  NCB
CIU2_RAW_PP2_IP3_IO            0x0001070100444200  NCB
CIU2_RAW_PP2_IP3_MEM           0x0001070100445200  NCB
CIU2_RAW_PP2_IP3_MIO           0x0001070100443200  NCB
CIU2_RAW_PP2_IP3_PKT           0x0001070100446200  NCB
CIU2_RAW_PP2_IP3_RML           0x0001070100442200  NCB
CIU2_RAW_PP2_IP3_WDOG          0x0001070100441200  NCB
CIU2_RAW_PP2_IP3_WRKQ          0x0001070100440200  NCB
CIU2_RAW_PP2_IP4_GPIO          0x0001070100447400  NCB
CIU2_RAW_PP2_IP4_IO            0x0001070100444400  NCB
CIU2_RAW_PP2_IP4_MEM           0x0001070100445400  NCB
CIU2_RAW_PP2_IP4_MIO           0x0001070100443400  NCB
CIU2_RAW_PP2_IP4_PKT           0x0001070100446400  NCB
CIU2_RAW_PP2_IP4_RML           0x0001070100442400  NCB
CIU2_RAW_PP2_IP4_WDOG          0x0001070100441400  NCB
CIU2_RAW_PP2_IP4_WRKQ          0x0001070100440400  NCB
CIU2_RAW_PP3_IP2_GPIO          0x0001070100647000  NCB
CIU2_RAW_PP3_IP2_IO            0x0001070100644000  NCB
CIU2_RAW_PP3_IP2_MEM           0x0001070100645000  NCB
CIU2_RAW_PP3_IP2_MIO           0x0001070100643000  NCB
CIU2_RAW_PP3_IP2_PKT           0x0001070100646000  NCB
CIU2_RAW_PP3_IP2_RML           0x0001070100642000  NCB
CIU2_RAW_PP3_IP2_WDOG          0x0001070100641000  NCB
CIU2_RAW_PP3_IP2_WRKQ          0x0001070100640000  NCB
CIU2_RAW_PP3_IP3_GPIO          0x0001070100647200  NCB
CIU2_RAW_PP3_IP3_IO            0x0001070100644200  NCB
CIU2_RAW_PP3_IP3_MEM           0x0001070100645200  NCB
CIU2_RAW_PP3_IP3_MIO           0x0001070100643200  NCB
CIU2_RAW_PP3_IP3_PKT           0x0001070100646200  NCB
CIU2_RAW_PP3_IP3_RML           0x0001070100642200  NCB
CIU2_RAW_PP3_IP3_WDOG          0x0001070100641200  NCB
CIU2_RAW_PP3_IP3_WRKQ          0x0001070100640200  NCB
CIU2_RAW_PP3_IP4_GPIO          0x0001070100647400  NCB
CIU2_RAW_PP3_IP4_IO            0x0001070100644400  NCB
CIU2_RAW_PP3_IP4_MEM           0x0001070100645400  NCB
CIU2_RAW_PP3_IP4_MIO           0x0001070100643400  NCB
CIU2_RAW_PP3_IP4_PKT           0x0001070100646400  NCB
CIU2_RAW_PP3_IP4_RML           0x0001070100642400  NCB
CIU2_RAW_PP3_IP4_WDOG          0x0001070100641400  NCB
CIU2_RAW_PP3_IP4_WRKQ          0x0001070100640400  NCB
CIU2_RAW_PP4_IP2_GPIO          0x0001070100847000  NCB
CIU2_RAW_PP4_IP2_IO            0x0001070100844000  NCB
CIU2_RAW_PP4_IP2_MEM           0x0001070100845000  NCB
CIU2_RAW_PP4_IP2_MIO           0x0001070100843000  NCB
CIU2_RAW_PP4_IP2_PKT           0x0001070100846000  NCB
CIU2_RAW_PP4_IP2_RML           0x0001070100842000  NCB
CIU2_RAW_PP4_IP2_WDOG          0x0001070100841000  NCB
CIU2_RAW_PP4_IP2_WRKQ          0x0001070100840000  NCB
CIU2_RAW_PP4_IP3_GPIO          0x0001070100847200  NCB
CIU2_RAW_PP4_IP3_IO            0x0001070100844200  NCB
CIU2_RAW_PP4_IP3_MEM           0x0001070100845200  NCB
CIU2_RAW_PP4_IP3_MIO           0x0001070100843200  NCB
CIU2_RAW_PP4_IP3_PKT           0x0001070100846200  NCB
CIU2_RAW_PP4_IP3_RML           0x0001070100842200  NCB
CIU2_RAW_PP4_IP3_WDOG          0x0001070100841200  NCB
CIU2_RAW_PP4_IP3_WRKQ          0x0001070100840200  NCB
CIU2_RAW_PP4_IP4_GPIO          0x0001070100847400  NCB
CIU2_RAW_PP4_IP4_IO            0x0001070100844400  NCB
CIU2_RAW_PP4_IP4_MEM           0x0001070100845400  NCB
CIU2_RAW_PP4_IP4_MIO           0x0001070100843400  NCB
CIU2_RAW_PP4_IP4_PKT           0x0001070100846400  NCB
CIU2_RAW_PP4_IP4_RML           0x0001070100842400  NCB
CIU2_RAW_PP4_IP4_WDOG          0x0001070100841400  NCB
CIU2_RAW_PP4_IP4_WRKQ          0x0001070100840400  NCB
CIU2_RAW_PP5_IP2_GPIO          0x0001070100A47000  NCB
CIU2_RAW_PP5_IP2_IO            0x0001070100A44000  NCB
CIU2_RAW_PP5_IP2_MEM           0x0001070100A45000  NCB
CIU2_RAW_PP5_IP2_MIO           0x0001070100A43000  NCB
CIU2_RAW_PP5_IP2_PKT           0x0001070100A46000  NCB
CIU2_RAW_PP5_IP2_RML           0x0001070100A42000  NCB
CIU2_RAW_PP5_IP2_WDOG          0x0001070100A41000  NCB
CIU2_RAW_PP5_IP2_WRKQ          0x0001070100A40000  NCB
CIU2_RAW_PP5_IP3_GPIO          0x0001070100A47200  NCB
CIU2_RAW_PP5_IP3_IO            0x0001070100A44200  NCB
CIU2_RAW_PP5_IP3_MEM           0x0001070100A45200  NCB
CIU2_RAW_PP5_IP3_MIO           0x0001070100A43200  NCB
CIU2_RAW_PP5_IP3_PKT           0x0001070100A46200  NCB
CIU2_RAW_PP5_IP3_RML           0x0001070100A42200  NCB
CIU2_RAW_PP5_IP3_WDOG          0x0001070100A41200  NCB
CIU2_RAW_PP5_IP3_WRKQ          0x0001070100A40200  NCB
CIU2_RAW_PP5_IP4_GPIO          0x0001070100A47400  NCB
CIU2_RAW_PP5_IP4_IO            0x0001070100A44400  NCB
CIU2_RAW_PP5_IP4_MEM           0x0001070100A45400  NCB
CIU2_RAW_PP5_IP4_MIO           0x0001070100A43400  NCB
CIU2_RAW_PP5_IP4_PKT           0x0001070100A46400  NCB
CIU2_RAW_PP5_IP4_RML           0x0001070100A42400  NCB
CIU2_RAW_PP5_IP4_WDOG          0x0001070100A41400  NCB
CIU2_RAW_PP5_IP4_WRKQ          0x0001070100A40400  NCB
CIU2_RAW_PP6_IP2_GPIO          0x0001070100C47000  NCB
CIU2_RAW_PP6_IP2_IO            0x0001070100C44000  NCB
CIU2_RAW_PP6_IP2_MEM           0x0001070100C45000  NCB
CIU2_RAW_PP6_IP2_MIO           0x0001070100C43000  NCB
CIU2_RAW_PP6_IP2_PKT           0x0001070100C46000  NCB
CIU2_RAW_PP6_IP2_RML           0x0001070100C42000  NCB
CIU2_RAW_PP6_IP2_WDOG          0x0001070100C41000  NCB
CIU2_RAW_PP6_IP2_WRKQ          0x0001070100C40000  NCB
CIU2_RAW_PP6_IP3_GPIO          0x0001070100C47200  NCB
CIU2_RAW_PP6_IP3_IO            0x0001070100C44200  NCB
CIU2_RAW_PP6_IP3_MEM           0x0001070100C45200  NCB
CIU2_RAW_PP6_IP3_MIO           0x0001070100C43200  NCB
CIU2_RAW_PP6_IP3_PKT           0x0001070100C46200  NCB
CIU2_RAW_PP6_IP3_RML           0x0001070100C42200  NCB
CIU2_RAW_PP6_IP3_WDOG          0x0001070100C41200  NCB
CIU2_RAW_PP6_IP3_WRKQ          0x0001070100C40200  NCB
CIU2_RAW_PP6_IP4_GPIO          0x0001070100C47400  NCB
CIU2_RAW_PP6_IP4_IO            0x0001070100C44400  NCB
CIU2_RAW_PP6_IP4_MEM           0x0001070100C45400  NCB
CIU2_RAW_PP6_IP4_MIO           0x0001070100C43400  NCB
CIU2_RAW_PP6_IP4_PKT           0x0001070100C46400  NCB
CIU2_RAW_PP6_IP4_RML           0x0001070100C42400  NCB
CIU2_RAW_PP6_IP4_WDOG          0x0001070100C41400  NCB
CIU2_RAW_PP6_IP4_WRKQ          0x0001070100C40400  NCB
CIU2_RAW_PP7_IP2_GPIO          0x0001070100E47000  NCB
CIU2_RAW_PP7_IP2_IO            0x0001070100E44000  NCB
CIU2_RAW_PP7_IP2_MEM           0x0001070100E45000  NCB
CIU2_RAW_PP7_IP2_MIO           0x0001070100E43000  NCB
CIU2_RAW_PP7_IP2_PKT           0x0001070100E46000  NCB
CIU2_RAW_PP7_IP2_RML           0x0001070100E42000  NCB
CIU2_RAW_PP7_IP2_WDOG          0x0001070100E41000  NCB
CIU2_RAW_PP7_IP2_WRKQ          0x0001070100E40000  NCB
CIU2_RAW_PP7_IP3_GPIO          0x0001070100E47200  NCB
CIU2_RAW_PP7_IP3_IO            0x0001070100E44200  NCB
CIU2_RAW_PP7_IP3_MEM           0x0001070100E45200  NCB
CIU2_RAW_PP7_IP3_MIO           0x0001070100E43200  NCB
CIU2_RAW_PP7_IP3_PKT           0x0001070100E46200  NCB
CIU2_RAW_PP7_IP3_RML           0x0001070100E42200  NCB
CIU2_RAW_PP7_IP3_WDOG          0x0001070100E41200  NCB
CIU2_RAW_PP7_IP3_WRKQ          0x0001070100E40200  NCB
CIU2_RAW_PP7_IP4_GPIO          0x0001070100E47400  NCB
CIU2_RAW_PP7_IP4_IO            0x0001070100E44400  NCB
CIU2_RAW_PP7_IP4_MEM           0x0001070100E45400  NCB
CIU2_RAW_PP7_IP4_MIO           0x0001070100E43400  NCB
CIU2_RAW_PP7_IP4_PKT           0x0001070100E46400  NCB
CIU2_RAW_PP7_IP4_RML           0x0001070100E42400  NCB
CIU2_RAW_PP7_IP4_WDOG          0x0001070100E41400  NCB
CIU2_RAW_PP7_IP4_WRKQ          0x0001070100E40400  NCB
CIU2_RAW_PP8_IP2_GPIO          0x0001070101047000  NCB
CIU2_RAW_PP8_IP2_IO            0x0001070101044000  NCB
CIU2_RAW_PP8_IP2_MEM           0x0001070101045000  NCB
CIU2_RAW_PP8_IP2_MIO           0x0001070101043000  NCB
CIU2_RAW_PP8_IP2_PKT           0x0001070101046000  NCB
CIU2_RAW_PP8_IP2_RML           0x0001070101042000  NCB
CIU2_RAW_PP8_IP2_WDOG          0x0001070101041000  NCB
CIU2_RAW_PP8_IP2_WRKQ          0x0001070101040000  NCB
CIU2_RAW_PP8_IP3_GPIO          0x0001070101047200  NCB
CIU2_RAW_PP8_IP3_IO            0x0001070101044200  NCB
CIU2_RAW_PP8_IP3_MEM           0x0001070101045200  NCB
CIU2_RAW_PP8_IP3_MIO           0x0001070101043200  NCB
CIU2_RAW_PP8_IP3_PKT           0x0001070101046200  NCB
CIU2_RAW_PP8_IP3_RML           0x0001070101042200  NCB
CIU2_RAW_PP8_IP3_WDOG          0x0001070101041200  NCB
CIU2_RAW_PP8_IP3_WRKQ          0x0001070101040200  NCB
CIU2_RAW_PP8_IP4_GPIO          0x0001070101047400  NCB
CIU2_RAW_PP8_IP4_IO            0x0001070101044400  NCB
CIU2_RAW_PP8_IP4_MEM           0x0001070101045400  NCB
CIU2_RAW_PP8_IP4_MIO           0x0001070101043400  NCB
CIU2_RAW_PP8_IP4_PKT           0x0001070101046400  NCB
CIU2_RAW_PP8_IP4_RML           0x0001070101042400  NCB
CIU2_RAW_PP8_IP4_WDOG          0x0001070101041400  NCB
CIU2_RAW_PP8_IP4_WRKQ          0x0001070101040400  NCB
CIU2_RAW_PP9_IP2_GPIO          0x0001070101247000  NCB
CIU2_RAW_PP9_IP2_IO            0x0001070101244000  NCB
CIU2_RAW_PP9_IP2_MEM           0x0001070101245000  NCB
CIU2_RAW_PP9_IP2_MIO           0x0001070101243000  NCB
CIU2_RAW_PP9_IP2_PKT           0x0001070101246000  NCB
CIU2_RAW_PP9_IP2_RML           0x0001070101242000  NCB
CIU2_RAW_PP9_IP2_WDOG          0x0001070101241000  NCB
CIU2_RAW_PP9_IP2_WRKQ          0x0001070101240000  NCB
CIU2_RAW_PP9_IP3_GPIO          0x0001070101247200  NCB
CIU2_RAW_PP9_IP3_IO            0x0001070101244200  NCB
CIU2_RAW_PP9_IP3_MEM           0x0001070101245200  NCB
CIU2_RAW_PP9_IP3_MIO           0x0001070101243200  NCB
CIU2_RAW_PP9_IP3_PKT           0x0001070101246200  NCB
CIU2_RAW_PP9_IP3_RML           0x0001070101242200  NCB
CIU2_RAW_PP9_IP3_WDOG          0x0001070101241200  NCB
CIU2_RAW_PP9_IP3_WRKQ          0x0001070101240200  NCB
CIU2_RAW_PP9_IP4_GPIO          0x0001070101247400  NCB
CIU2_RAW_PP9_IP4_IO            0x0001070101244400  NCB
CIU2_RAW_PP9_IP4_MEM           0x0001070101245400  NCB
CIU2_RAW_PP9_IP4_MIO           0x0001070101243400  NCB
CIU2_RAW_PP9_IP4_PKT           0x0001070101246400  NCB
CIU2_RAW_PP9_IP4_RML           0x0001070101242400  NCB
CIU2_RAW_PP9_IP4_WDOG          0x0001070101241400  NCB
CIU2_RAW_PP9_IP4_WRKQ          0x0001070101240400  NCB
CIU2_RAW_PP10_IP2_GPIO         0x0001070101447000  NCB
CIU2_RAW_PP10_IP2_IO           0x0001070101444000  NCB
CIU2_RAW_PP10_IP2_MEM          0x0001070101445000  NCB
CIU2_RAW_PP10_IP2_MIO          0x0001070101443000  NCB
CIU2_RAW_PP10_IP2_PKT          0x0001070101446000  NCB
CIU2_RAW_PP10_IP2_RML          0x0001070101442000  NCB
CIU2_RAW_PP10_IP2_WDOG         0x0001070101441000  NCB
CIU2_RAW_PP10_IP2_WRKQ         0x0001070101440000  NCB
CIU2_RAW_PP10_IP3_GPIO         0x0001070101447200  NCB
CIU2_RAW_PP10_IP3_IO           0x0001070101444200  NCB
CIU2_RAW_PP10_IP3_MEM          0x0001070101445200  NCB
CIU2_RAW_PP10_IP3_MIO          0x0001070101443200  NCB
CIU2_RAW_PP10_IP3_PKT          0x0001070101446200  NCB
CIU2_RAW_PP10_IP3_RML          0x0001070101442200  NCB
CIU2_RAW_PP10_IP3_WDOG         0x0001070101441200  NCB
CIU2_RAW_PP10_IP3_WRKQ         0x0001070101440200  NCB
CIU2_RAW_PP10_IP4_GPIO         0x0001070101447400  NCB
CIU2_RAW_PP10_IP4_IO           0x0001070101444400  NCB
CIU2_RAW_PP10_IP4_MEM          0x0001070101445400  NCB
CIU2_RAW_PP10_IP4_MIO          0x0001070101443400  NCB
CIU2_RAW_PP10_IP4_PKT          0x0001070101446400  NCB
CIU2_RAW_PP10_IP4_RML          0x0001070101442400  NCB
CIU2_RAW_PP10_IP4_WDOG         0x0001070101441400  NCB
CIU2_RAW_PP10_IP4_WRKQ         0x0001070101440400  NCB
CIU2_RAW_PP11_IP2_GPIO         0x0001070101647000  NCB
CIU2_RAW_PP11_IP2_IO           0x0001070101644000  NCB
CIU2_RAW_PP11_IP2_MEM          0x0001070101645000  NCB
CIU2_RAW_PP11_IP2_MIO          0x0001070101643000  NCB
CIU2_RAW_PP11_IP2_PKT          0x0001070101646000  NCB
CIU2_RAW_PP11_IP2_RML          0x0001070101642000  NCB
CIU2_RAW_PP11_IP2_WDOG         0x0001070101641000  NCB
CIU2_RAW_PP11_IP2_WRKQ         0x0001070101640000  NCB
CIU2_RAW_PP11_IP3_GPIO         0x0001070101647200  NCB
CIU2_RAW_PP11_IP3_IO           0x0001070101644200  NCB
CIU2_RAW_PP11_IP3_MEM          0x0001070101645200  NCB
CIU2_RAW_PP11_IP3_MIO          0x0001070101643200  NCB
CIU2_RAW_PP11_IP3_PKT          0x0001070101646200  NCB
CIU2_RAW_PP11_IP3_RML          0x0001070101642200  NCB
CIU2_RAW_PP11_IP3_WDOG         0x0001070101641200  NCB
CIU2_RAW_PP11_IP3_WRKQ         0x0001070101640200  NCB
CIU2_RAW_PP11_IP4_GPIO         0x0001070101647400  NCB
CIU2_RAW_PP11_IP4_IO           0x0001070101644400  NCB
CIU2_RAW_PP11_IP4_MEM          0x0001070101645400  NCB
CIU2_RAW_PP11_IP4_MIO          0x0001070101643400  NCB
CIU2_RAW_PP11_IP4_PKT          0x0001070101646400  NCB
CIU2_RAW_PP11_IP4_RML          0x0001070101642400  NCB
CIU2_RAW_PP11_IP4_WDOG         0x0001070101641400  NCB
CIU2_RAW_PP11_IP4_WRKQ         0x0001070101640400  NCB
CIU2_RAW_PP12_IP2_GPIO         0x0001070101847000  NCB
CIU2_RAW_PP12_IP2_IO           0x0001070101844000  NCB
CIU2_RAW_PP12_IP2_MEM          0x0001070101845000  NCB
CIU2_RAW_PP12_IP2_MIO          0x0001070101843000  NCB
CIU2_RAW_PP12_IP2_PKT          0x0001070101846000  NCB
CIU2_RAW_PP12_IP2_RML          0x0001070101842000  NCB
CIU2_RAW_PP12_IP2_WDOG         0x0001070101841000  NCB
CIU2_RAW_PP12_IP2_WRKQ         0x0001070101840000  NCB
CIU2_RAW_PP12_IP3_GPIO         0x0001070101847200  NCB
CIU2_RAW_PP12_IP3_IO           0x0001070101844200  NCB
CIU2_RAW_PP12_IP3_MEM          0x0001070101845200  NCB
CIU2_RAW_PP12_IP3_MIO          0x0001070101843200  NCB
CIU2_RAW_PP12_IP3_PKT          0x0001070101846200  NCB
CIU2_RAW_PP12_IP3_RML          0x0001070101842200  NCB
CIU2_RAW_PP12_IP3_WDOG         0x0001070101841200  NCB
CIU2_RAW_PP12_IP3_WRKQ         0x0001070101840200  NCB
CIU2_RAW_PP12_IP4_GPIO         0x0001070101847400  NCB
CIU2_RAW_PP12_IP4_IO           0x0001070101844400  NCB
CIU2_RAW_PP12_IP4_MEM          0x0001070101845400  NCB
CIU2_RAW_PP12_IP4_MIO          0x0001070101843400  NCB
CIU2_RAW_PP12_IP4_PKT          0x0001070101846400  NCB
CIU2_RAW_PP12_IP4_RML          0x0001070101842400  NCB
CIU2_RAW_PP12_IP4_WDOG         0x0001070101841400  NCB
CIU2_RAW_PP12_IP4_WRKQ         0x0001070101840400  NCB
CIU2_RAW_PP13_IP2_GPIO         0x0001070101A47000  NCB
CIU2_RAW_PP13_IP2_IO           0x0001070101A44000  NCB
CIU2_RAW_PP13_IP2_MEM          0x0001070101A45000  NCB
CIU2_RAW_PP13_IP2_MIO          0x0001070101A43000  NCB
CIU2_RAW_PP13_IP2_PKT          0x0001070101A46000  NCB
CIU2_RAW_PP13_IP2_RML          0x0001070101A42000  NCB
CIU2_RAW_PP13_IP2_WDOG         0x0001070101A41000  NCB
CIU2_RAW_PP13_IP2_WRKQ         0x0001070101A40000  NCB
CIU2_RAW_PP13_IP3_GPIO         0x0001070101A47200  NCB
CIU2_RAW_PP13_IP3_IO           0x0001070101A44200  NCB
CIU2_RAW_PP13_IP3_MEM          0x0001070101A45200  NCB
CIU2_RAW_PP13_IP3_MIO          0x0001070101A43200  NCB
CIU2_RAW_PP13_IP3_PKT          0x0001070101A46200  NCB
CIU2_RAW_PP13_IP3_RML          0x0001070101A42200  NCB
CIU2_RAW_PP13_IP3_WDOG         0x0001070101A41200  NCB
CIU2_RAW_PP13_IP3_WRKQ         0x0001070101A40200  NCB
CIU2_RAW_PP13_IP4_GPIO         0x0001070101A47400  NCB
CIU2_RAW_PP13_IP4_IO           0x0001070101A44400  NCB
CIU2_RAW_PP13_IP4_MEM          0x0001070101A45400  NCB
CIU2_RAW_PP13_IP4_MIO          0x0001070101A43400  NCB
CIU2_RAW_PP13_IP4_PKT          0x0001070101A46400  NCB
CIU2_RAW_PP13_IP4_RML          0x0001070101A42400  NCB
CIU2_RAW_PP13_IP4_WDOG         0x0001070101A41400  NCB
CIU2_RAW_PP13_IP4_WRKQ         0x0001070101A40400  NCB
CIU2_RAW_PP14_IP2_GPIO         0x0001070101C47000  NCB
CIU2_RAW_PP14_IP2_IO           0x0001070101C44000  NCB
CIU2_RAW_PP14_IP2_MEM          0x0001070101C45000  NCB
CIU2_RAW_PP14_IP2_MIO          0x0001070101C43000  NCB
CIU2_RAW_PP14_IP2_PKT          0x0001070101C46000  NCB
CIU2_RAW_PP14_IP2_RML          0x0001070101C42000  NCB
CIU2_RAW_PP14_IP2_WDOG         0x0001070101C41000  NCB
CIU2_RAW_PP14_IP2_WRKQ         0x0001070101C40000  NCB
CIU2_RAW_PP14_IP3_GPIO         0x0001070101C47200  NCB
CIU2_RAW_PP14_IP3_IO           0x0001070101C44200  NCB
CIU2_RAW_PP14_IP3_MEM          0x0001070101C45200  NCB
CIU2_RAW_PP14_IP3_MIO          0x0001070101C43200  NCB
CIU2_RAW_PP14_IP3_PKT          0x0001070101C46200  NCB
CIU2_RAW_PP14_IP3_RML          0x0001070101C42200  NCB
CIU2_RAW_PP14_IP3_WDOG         0x0001070101C41200  NCB
CIU2_RAW_PP14_IP3_WRKQ         0x0001070101C40200  NCB
CIU2_RAW_PP14_IP4_GPIO         0x0001070101C47400  NCB
CIU2_RAW_PP14_IP4_IO           0x0001070101C44400  NCB
CIU2_RAW_PP14_IP4_MEM          0x0001070101C45400  NCB
CIU2_RAW_PP14_IP4_MIO          0x0001070101C43400  NCB
CIU2_RAW_PP14_IP4_PKT          0x0001070101C46400  NCB
CIU2_RAW_PP14_IP4_RML          0x0001070101C42400  NCB
CIU2_RAW_PP14_IP4_WDOG         0x0001070101C41400  NCB
CIU2_RAW_PP14_IP4_WRKQ         0x0001070101C40400  NCB
CIU2_RAW_PP15_IP2_GPIO         0x0001070101E47000  NCB
CIU2_RAW_PP15_IP2_IO           0x0001070101E44000  NCB
CIU2_RAW_PP15_IP2_MEM          0x0001070101E45000  NCB
CIU2_RAW_PP15_IP2_MIO          0x0001070101E43000  NCB
CIU2_RAW_PP15_IP2_PKT          0x0001070101E46000  NCB
CIU2_RAW_PP15_IP2_RML          0x0001070101E42000  NCB
CIU2_RAW_PP15_IP2_WDOG         0x0001070101E41000  NCB
CIU2_RAW_PP15_IP2_WRKQ         0x0001070101E40000  NCB
CIU2_RAW_PP15_IP3_GPIO         0x0001070101E47200  NCB
CIU2_RAW_PP15_IP3_IO           0x0001070101E44200  NCB
CIU2_RAW_PP15_IP3_MEM          0x0001070101E45200  NCB
CIU2_RAW_PP15_IP3_MIO          0x0001070101E43200  NCB
CIU2_RAW_PP15_IP3_PKT          0x0001070101E46200  NCB
CIU2_RAW_PP15_IP3_RML          0x0001070101E42200  NCB
CIU2_RAW_PP15_IP3_WDOG         0x0001070101E41200  NCB
CIU2_RAW_PP15_IP3_WRKQ         0x0001070101E40200  NCB
CIU2_RAW_PP15_IP4_GPIO         0x0001070101E47400  NCB
CIU2_RAW_PP15_IP4_IO           0x0001070101E44400  NCB
CIU2_RAW_PP15_IP4_MEM          0x0001070101E45400  NCB
CIU2_RAW_PP15_IP4_MIO          0x0001070101E43400  NCB
CIU2_RAW_PP15_IP4_PKT          0x0001070101E46400  NCB
CIU2_RAW_PP15_IP4_RML          0x0001070101E42400  NCB
CIU2_RAW_PP15_IP4_WDOG         0x0001070101E41400  NCB
CIU2_RAW_PP15_IP4_WRKQ         0x0001070101E40400  NCB
CIU2_RAW_PP16_IP2_GPIO         0x0001070102047000  NCB
CIU2_RAW_PP16_IP2_IO           0x0001070102044000  NCB
CIU2_RAW_PP16_IP2_MEM          0x0001070102045000  NCB
CIU2_RAW_PP16_IP2_MIO          0x0001070102043000  NCB
CIU2_RAW_PP16_IP2_PKT          0x0001070102046000  NCB
CIU2_RAW_PP16_IP2_RML          0x0001070102042000  NCB
CIU2_RAW_PP16_IP2_WDOG         0x0001070102041000  NCB
CIU2_RAW_PP16_IP2_WRKQ         0x0001070102040000  NCB
CIU2_RAW_PP16_IP3_GPIO         0x0001070102047200  NCB
CIU2_RAW_PP16_IP3_IO           0x0001070102044200  NCB
CIU2_RAW_PP16_IP3_MEM          0x0001070102045200  NCB
CIU2_RAW_PP16_IP3_MIO          0x0001070102043200  NCB
CIU2_RAW_PP16_IP3_PKT          0x0001070102046200  NCB
CIU2_RAW_PP16_IP3_RML          0x0001070102042200  NCB
CIU2_RAW_PP16_IP3_WDOG         0x0001070102041200  NCB
CIU2_RAW_PP16_IP3_WRKQ         0x0001070102040200  NCB
CIU2_RAW_PP16_IP4_GPIO         0x0001070102047400  NCB
CIU2_RAW_PP16_IP4_IO           0x0001070102044400  NCB
CIU2_RAW_PP16_IP4_MEM          0x0001070102045400  NCB
CIU2_RAW_PP16_IP4_MIO          0x0001070102043400  NCB
CIU2_RAW_PP16_IP4_PKT          0x0001070102046400  NCB
CIU2_RAW_PP16_IP4_RML          0x0001070102042400  NCB
CIU2_RAW_PP16_IP4_WDOG         0x0001070102041400  NCB
CIU2_RAW_PP16_IP4_WRKQ         0x0001070102040400  NCB
CIU2_RAW_PP17_IP2_GPIO         0x0001070102247000  NCB
CIU2_RAW_PP17_IP2_IO           0x0001070102244000  NCB
CIU2_RAW_PP17_IP2_MEM          0x0001070102245000  NCB
CIU2_RAW_PP17_IP2_MIO          0x0001070102243000  NCB
CIU2_RAW_PP17_IP2_PKT          0x0001070102246000  NCB
CIU2_RAW_PP17_IP2_RML          0x0001070102242000  NCB
CIU2_RAW_PP17_IP2_WDOG         0x0001070102241000  NCB
CIU2_RAW_PP17_IP2_WRKQ         0x0001070102240000  NCB
CIU2_RAW_PP17_IP3_GPIO         0x0001070102247200  NCB
CIU2_RAW_PP17_IP3_IO           0x0001070102244200  NCB
CIU2_RAW_PP17_IP3_MEM          0x0001070102245200  NCB
CIU2_RAW_PP17_IP3_MIO          0x0001070102243200  NCB
CIU2_RAW_PP17_IP3_PKT          0x0001070102246200  NCB
CIU2_RAW_PP17_IP3_RML          0x0001070102242200  NCB
CIU2_RAW_PP17_IP3_WDOG         0x0001070102241200  NCB
CIU2_RAW_PP17_IP3_WRKQ         0x0001070102240200  NCB
CIU2_RAW_PP17_IP4_GPIO         0x0001070102247400  NCB
CIU2_RAW_PP17_IP4_IO           0x0001070102244400  NCB
CIU2_RAW_PP17_IP4_MEM          0x0001070102245400  NCB
CIU2_RAW_PP17_IP4_MIO          0x0001070102243400  NCB
CIU2_RAW_PP17_IP4_PKT          0x0001070102246400  NCB
CIU2_RAW_PP17_IP4_RML          0x0001070102242400  NCB
CIU2_RAW_PP17_IP4_WDOG         0x0001070102241400  NCB
CIU2_RAW_PP17_IP4_WRKQ         0x0001070102240400  NCB
CIU2_RAW_PP18_IP2_GPIO         0x0001070102447000  NCB
CIU2_RAW_PP18_IP2_IO           0x0001070102444000  NCB
CIU2_RAW_PP18_IP2_MEM          0x0001070102445000  NCB
CIU2_RAW_PP18_IP2_MIO          0x0001070102443000  NCB
CIU2_RAW_PP18_IP2_PKT          0x0001070102446000  NCB
CIU2_RAW_PP18_IP2_RML          0x0001070102442000  NCB
CIU2_RAW_PP18_IP2_WDOG         0x0001070102441000  NCB
CIU2_RAW_PP18_IP2_WRKQ         0x0001070102440000  NCB
CIU2_RAW_PP18_IP3_GPIO         0x0001070102447200  NCB
CIU2_RAW_PP18_IP3_IO           0x0001070102444200  NCB
CIU2_RAW_PP18_IP3_MEM          0x0001070102445200  NCB
CIU2_RAW_PP18_IP3_MIO          0x0001070102443200  NCB
CIU2_RAW_PP18_IP3_PKT          0x0001070102446200  NCB
CIU2_RAW_PP18_IP3_RML          0x0001070102442200  NCB
CIU2_RAW_PP18_IP3_WDOG         0x0001070102441200  NCB
CIU2_RAW_PP18_IP3_WRKQ         0x0001070102440200  NCB
CIU2_RAW_PP18_IP4_GPIO         0x0001070102447400  NCB
CIU2_RAW_PP18_IP4_IO           0x0001070102444400  NCB
CIU2_RAW_PP18_IP4_MEM          0x0001070102445400  NCB
CIU2_RAW_PP18_IP4_MIO          0x0001070102443400  NCB
CIU2_RAW_PP18_IP4_PKT          0x0001070102446400  NCB
CIU2_RAW_PP18_IP4_RML          0x0001070102442400  NCB
CIU2_RAW_PP18_IP4_WDOG         0x0001070102441400  NCB
CIU2_RAW_PP18_IP4_WRKQ         0x0001070102440400  NCB
CIU2_RAW_PP19_IP2_GPIO         0x0001070102647000  NCB
CIU2_RAW_PP19_IP2_IO           0x0001070102644000  NCB
CIU2_RAW_PP19_IP2_MEM          0x0001070102645000  NCB
CIU2_RAW_PP19_IP2_MIO          0x0001070102643000  NCB
CIU2_RAW_PP19_IP2_PKT          0x0001070102646000  NCB
CIU2_RAW_PP19_IP2_RML          0x0001070102642000  NCB
CIU2_RAW_PP19_IP2_WDOG         0x0001070102641000  NCB
CIU2_RAW_PP19_IP2_WRKQ         0x0001070102640000  NCB
CIU2_RAW_PP19_IP3_GPIO         0x0001070102647200  NCB
CIU2_RAW_PP19_IP3_IO           0x0001070102644200  NCB
CIU2_RAW_PP19_IP3_MEM          0x0001070102645200  NCB
CIU2_RAW_PP19_IP3_MIO          0x0001070102643200  NCB
CIU2_RAW_PP19_IP3_PKT          0x0001070102646200  NCB
CIU2_RAW_PP19_IP3_RML          0x0001070102642200  NCB
CIU2_RAW_PP19_IP3_WDOG         0x0001070102641200  NCB
CIU2_RAW_PP19_IP3_WRKQ         0x0001070102640200  NCB
CIU2_RAW_PP19_IP4_GPIO         0x0001070102647400  NCB
CIU2_RAW_PP19_IP4_IO           0x0001070102644400  NCB
CIU2_RAW_PP19_IP4_MEM          0x0001070102645400  NCB
CIU2_RAW_PP19_IP4_MIO          0x0001070102643400  NCB
CIU2_RAW_PP19_IP4_PKT          0x0001070102646400  NCB
CIU2_RAW_PP19_IP4_RML          0x0001070102642400  NCB
CIU2_RAW_PP19_IP4_WDOG         0x0001070102641400  NCB
CIU2_RAW_PP19_IP4_WRKQ         0x0001070102640400  NCB
CIU2_RAW_PP20_IP2_GPIO         0x0001070102847000  NCB
CIU2_RAW_PP20_IP2_IO           0x0001070102844000  NCB
CIU2_RAW_PP20_IP2_MEM          0x0001070102845000  NCB
CIU2_RAW_PP20_IP2_MIO          0x0001070102843000  NCB
CIU2_RAW_PP20_IP2_PKT          0x0001070102846000  NCB
CIU2_RAW_PP20_IP2_RML          0x0001070102842000  NCB
CIU2_RAW_PP20_IP2_WDOG         0x0001070102841000  NCB
CIU2_RAW_PP20_IP2_WRKQ         0x0001070102840000  NCB
CIU2_RAW_PP20_IP3_GPIO         0x0001070102847200  NCB
CIU2_RAW_PP20_IP3_IO           0x0001070102844200  NCB
CIU2_RAW_PP20_IP3_MEM          0x0001070102845200  NCB
CIU2_RAW_PP20_IP3_MIO          0x0001070102843200  NCB
CIU2_RAW_PP20_IP3_PKT          0x0001070102846200  NCB
CIU2_RAW_PP20_IP3_RML          0x0001070102842200  NCB
CIU2_RAW_PP20_IP3_WDOG         0x0001070102841200  NCB
CIU2_RAW_PP20_IP3_WRKQ         0x0001070102840200  NCB
CIU2_RAW_PP20_IP4_GPIO         0x0001070102847400  NCB
CIU2_RAW_PP20_IP4_IO           0x0001070102844400  NCB
CIU2_RAW_PP20_IP4_MEM          0x0001070102845400  NCB
CIU2_RAW_PP20_IP4_MIO          0x0001070102843400  NCB
CIU2_RAW_PP20_IP4_PKT          0x0001070102846400  NCB
CIU2_RAW_PP20_IP4_RML          0x0001070102842400  NCB
CIU2_RAW_PP20_IP4_WDOG         0x0001070102841400  NCB
CIU2_RAW_PP20_IP4_WRKQ         0x0001070102840400  NCB
CIU2_RAW_PP21_IP2_GPIO         0x0001070102A47000  NCB
CIU2_RAW_PP21_IP2_IO           0x0001070102A44000  NCB
CIU2_RAW_PP21_IP2_MEM          0x0001070102A45000  NCB
CIU2_RAW_PP21_IP2_MIO          0x0001070102A43000  NCB
CIU2_RAW_PP21_IP2_PKT          0x0001070102A46000  NCB
CIU2_RAW_PP21_IP2_RML          0x0001070102A42000  NCB
CIU2_RAW_PP21_IP2_WDOG         0x0001070102A41000  NCB
CIU2_RAW_PP21_IP2_WRKQ         0x0001070102A40000  NCB
CIU2_RAW_PP21_IP3_GPIO         0x0001070102A47200  NCB
CIU2_RAW_PP21_IP3_IO           0x0001070102A44200  NCB
CIU2_RAW_PP21_IP3_MEM          0x0001070102A45200  NCB
CIU2_RAW_PP21_IP3_MIO          0x0001070102A43200  NCB
CIU2_RAW_PP21_IP3_PKT          0x0001070102A46200  NCB
CIU2_RAW_PP21_IP3_RML          0x0001070102A42200  NCB
CIU2_RAW_PP21_IP3_WDOG         0x0001070102A41200  NCB
CIU2_RAW_PP21_IP3_WRKQ         0x0001070102A40200  NCB
CIU2_RAW_PP21_IP4_GPIO         0x0001070102A47400  NCB
CIU2_RAW_PP21_IP4_IO           0x0001070102A44400  NCB
CIU2_RAW_PP21_IP4_MEM          0x0001070102A45400  NCB
CIU2_RAW_PP21_IP4_MIO          0x0001070102A43400  NCB
CIU2_RAW_PP21_IP4_PKT          0x0001070102A46400  NCB
CIU2_RAW_PP21_IP4_RML          0x0001070102A42400  NCB
CIU2_RAW_PP21_IP4_WDOG         0x0001070102A41400  NCB
CIU2_RAW_PP21_IP4_WRKQ         0x0001070102A40400  NCB
CIU2_RAW_PP22_IP2_GPIO         0x0001070102C47000  NCB
CIU2_RAW_PP22_IP2_IO           0x0001070102C44000  NCB
CIU2_RAW_PP22_IP2_MEM          0x0001070102C45000  NCB
CIU2_RAW_PP22_IP2_MIO          0x0001070102C43000  NCB
CIU2_RAW_PP22_IP2_PKT          0x0001070102C46000  NCB
CIU2_RAW_PP22_IP2_RML          0x0001070102C42000  NCB
CIU2_RAW_PP22_IP2_WDOG         0x0001070102C41000  NCB
CIU2_RAW_PP22_IP2_WRKQ         0x0001070102C40000  NCB
CIU2_RAW_PP22_IP3_GPIO         0x0001070102C47200  NCB
CIU2_RAW_PP22_IP3_IO           0x0001070102C44200  NCB
CIU2_RAW_PP22_IP3_MEM          0x0001070102C45200  NCB
CIU2_RAW_PP22_IP3_MIO          0x0001070102C43200  NCB
CIU2_RAW_PP22_IP3_PKT          0x0001070102C46200  NCB
CIU2_RAW_PP22_IP3_RML          0x0001070102C42200  NCB
CIU2_RAW_PP22_IP3_WDOG         0x0001070102C41200  NCB
CIU2_RAW_PP22_IP3_WRKQ         0x0001070102C40200  NCB
CIU2_RAW_PP22_IP4_GPIO         0x0001070102C47400  NCB
CIU2_RAW_PP22_IP4_IO           0x0001070102C44400  NCB
CIU2_RAW_PP22_IP4_MEM          0x0001070102C45400  NCB
CIU2_RAW_PP22_IP4_MIO          0x0001070102C43400  NCB
CIU2_RAW_PP22_IP4_PKT          0x0001070102C46400  NCB
CIU2_RAW_PP22_IP4_RML          0x0001070102C42400  NCB
CIU2_RAW_PP22_IP4_WDOG         0x0001070102C41400  NCB
CIU2_RAW_PP22_IP4_WRKQ         0x0001070102C40400  NCB
CIU2_RAW_PP23_IP2_GPIO         0x0001070102E47000  NCB
CIU2_RAW_PP23_IP2_IO           0x0001070102E44000  NCB
CIU2_RAW_PP23_IP2_MEM          0x0001070102E45000  NCB
CIU2_RAW_PP23_IP2_MIO          0x0001070102E43000  NCB
CIU2_RAW_PP23_IP2_PKT          0x0001070102E46000  NCB
CIU2_RAW_PP23_IP2_RML          0x0001070102E42000  NCB
CIU2_RAW_PP23_IP2_WDOG         0x0001070102E41000  NCB
CIU2_RAW_PP23_IP2_WRKQ         0x0001070102E40000  NCB
CIU2_RAW_PP23_IP3_GPIO         0x0001070102E47200  NCB
CIU2_RAW_PP23_IP3_IO           0x0001070102E44200  NCB
CIU2_RAW_PP23_IP3_MEM          0x0001070102E45200  NCB
CIU2_RAW_PP23_IP3_MIO          0x0001070102E43200  NCB
CIU2_RAW_PP23_IP3_PKT          0x0001070102E46200  NCB
CIU2_RAW_PP23_IP3_RML          0x0001070102E42200  NCB
CIU2_RAW_PP23_IP3_WDOG         0x0001070102E41200  NCB
CIU2_RAW_PP23_IP3_WRKQ         0x0001070102E40200  NCB
CIU2_RAW_PP23_IP4_GPIO         0x0001070102E47400  NCB
CIU2_RAW_PP23_IP4_IO           0x0001070102E44400  NCB
CIU2_RAW_PP23_IP4_MEM          0x0001070102E45400  NCB
CIU2_RAW_PP23_IP4_MIO          0x0001070102E43400  NCB
CIU2_RAW_PP23_IP4_PKT          0x0001070102E46400  NCB
CIU2_RAW_PP23_IP4_RML          0x0001070102E42400  NCB
CIU2_RAW_PP23_IP4_WDOG         0x0001070102E41400  NCB
CIU2_RAW_PP23_IP4_WRKQ         0x0001070102E40400  NCB
CIU2_RAW_PP24_IP2_GPIO         0x0001070103047000  NCB
CIU2_RAW_PP24_IP2_IO           0x0001070103044000  NCB
CIU2_RAW_PP24_IP2_MEM          0x0001070103045000  NCB
CIU2_RAW_PP24_IP2_MIO          0x0001070103043000  NCB
CIU2_RAW_PP24_IP2_PKT          0x0001070103046000  NCB
CIU2_RAW_PP24_IP2_RML          0x0001070103042000  NCB
CIU2_RAW_PP24_IP2_WDOG         0x0001070103041000  NCB
CIU2_RAW_PP24_IP2_WRKQ         0x0001070103040000  NCB
CIU2_RAW_PP24_IP3_GPIO         0x0001070103047200  NCB
CIU2_RAW_PP24_IP3_IO           0x0001070103044200  NCB
CIU2_RAW_PP24_IP3_MEM          0x0001070103045200  NCB
CIU2_RAW_PP24_IP3_MIO          0x0001070103043200  NCB
CIU2_RAW_PP24_IP3_PKT          0x0001070103046200  NCB
CIU2_RAW_PP24_IP3_RML          0x0001070103042200  NCB
CIU2_RAW_PP24_IP3_WDOG         0x0001070103041200  NCB
CIU2_RAW_PP24_IP3_WRKQ         0x0001070103040200  NCB
CIU2_RAW_PP24_IP4_GPIO         0x0001070103047400  NCB
CIU2_RAW_PP24_IP4_IO           0x0001070103044400  NCB
CIU2_RAW_PP24_IP4_MEM          0x0001070103045400  NCB
CIU2_RAW_PP24_IP4_MIO          0x0001070103043400  NCB
CIU2_RAW_PP24_IP4_PKT          0x0001070103046400  NCB
CIU2_RAW_PP24_IP4_RML          0x0001070103042400  NCB
CIU2_RAW_PP24_IP4_WDOG         0x0001070103041400  NCB
CIU2_RAW_PP24_IP4_WRKQ         0x0001070103040400  NCB
CIU2_RAW_PP25_IP2_GPIO         0x0001070103247000  NCB
CIU2_RAW_PP25_IP2_IO           0x0001070103244000  NCB
CIU2_RAW_PP25_IP2_MEM          0x0001070103245000  NCB
CIU2_RAW_PP25_IP2_MIO          0x0001070103243000  NCB
CIU2_RAW_PP25_IP2_PKT          0x0001070103246000  NCB
CIU2_RAW_PP25_IP2_RML          0x0001070103242000  NCB
CIU2_RAW_PP25_IP2_WDOG         0x0001070103241000  NCB
CIU2_RAW_PP25_IP2_WRKQ         0x0001070103240000  NCB
CIU2_RAW_PP25_IP3_GPIO         0x0001070103247200  NCB
CIU2_RAW_PP25_IP3_IO           0x0001070103244200  NCB
CIU2_RAW_PP25_IP3_MEM          0x0001070103245200  NCB
CIU2_RAW_PP25_IP3_MIO          0x0001070103243200  NCB
CIU2_RAW_PP25_IP3_PKT          0x0001070103246200  NCB
CIU2_RAW_PP25_IP3_RML          0x0001070103242200  NCB
CIU2_RAW_PP25_IP3_WDOG         0x0001070103241200  NCB
CIU2_RAW_PP25_IP3_WRKQ         0x0001070103240200  NCB
CIU2_RAW_PP25_IP4_GPIO         0x0001070103247400  NCB
CIU2_RAW_PP25_IP4_IO           0x0001070103244400  NCB
CIU2_RAW_PP25_IP4_MEM          0x0001070103245400  NCB
CIU2_RAW_PP25_IP4_MIO          0x0001070103243400  NCB
CIU2_RAW_PP25_IP4_PKT          0x0001070103246400  NCB
CIU2_RAW_PP25_IP4_RML          0x0001070103242400  NCB
CIU2_RAW_PP25_IP4_WDOG         0x0001070103241400  NCB
CIU2_RAW_PP25_IP4_WRKQ         0x0001070103240400  NCB
CIU2_RAW_PP26_IP2_GPIO         0x0001070103447000  NCB
CIU2_RAW_PP26_IP2_IO           0x0001070103444000  NCB
CIU2_RAW_PP26_IP2_MEM          0x0001070103445000  NCB
CIU2_RAW_PP26_IP2_MIO          0x0001070103443000  NCB
CIU2_RAW_PP26_IP2_PKT          0x0001070103446000  NCB
CIU2_RAW_PP26_IP2_RML          0x0001070103442000  NCB
CIU2_RAW_PP26_IP2_WDOG         0x0001070103441000  NCB
CIU2_RAW_PP26_IP2_WRKQ         0x0001070103440000  NCB
CIU2_RAW_PP26_IP3_GPIO         0x0001070103447200  NCB
CIU2_RAW_PP26_IP3_IO           0x0001070103444200  NCB
CIU2_RAW_PP26_IP3_MEM          0x0001070103445200  NCB
CIU2_RAW_PP26_IP3_MIO          0x0001070103443200  NCB
CIU2_RAW_PP26_IP3_PKT          0x0001070103446200  NCB
CIU2_RAW_PP26_IP3_RML          0x0001070103442200  NCB
CIU2_RAW_PP26_IP3_WDOG         0x0001070103441200  NCB
CIU2_RAW_PP26_IP3_WRKQ         0x0001070103440200  NCB
CIU2_RAW_PP26_IP4_GPIO         0x0001070103447400  NCB
CIU2_RAW_PP26_IP4_IO           0x0001070103444400  NCB
CIU2_RAW_PP26_IP4_MEM          0x0001070103445400  NCB
CIU2_RAW_PP26_IP4_MIO          0x0001070103443400  NCB
CIU2_RAW_PP26_IP4_PKT          0x0001070103446400  NCB
CIU2_RAW_PP26_IP4_RML          0x0001070103442400  NCB
CIU2_RAW_PP26_IP4_WDOG         0x0001070103441400  NCB
CIU2_RAW_PP26_IP4_WRKQ         0x0001070103440400  NCB
CIU2_RAW_PP27_IP2_GPIO         0x0001070103647000  NCB
CIU2_RAW_PP27_IP2_IO           0x0001070103644000  NCB
CIU2_RAW_PP27_IP2_MEM          0x0001070103645000  NCB
CIU2_RAW_PP27_IP2_MIO          0x0001070103643000  NCB
CIU2_RAW_PP27_IP2_PKT          0x0001070103646000  NCB
CIU2_RAW_PP27_IP2_RML          0x0001070103642000  NCB
CIU2_RAW_PP27_IP2_WDOG         0x0001070103641000  NCB
CIU2_RAW_PP27_IP2_WRKQ         0x0001070103640000  NCB
CIU2_RAW_PP27_IP3_GPIO         0x0001070103647200  NCB
CIU2_RAW_PP27_IP3_IO           0x0001070103644200  NCB
CIU2_RAW_PP27_IP3_MEM          0x0001070103645200  NCB
CIU2_RAW_PP27_IP3_MIO          0x0001070103643200  NCB
CIU2_RAW_PP27_IP3_PKT          0x0001070103646200  NCB
CIU2_RAW_PP27_IP3_RML          0x0001070103642200  NCB
CIU2_RAW_PP27_IP3_WDOG         0x0001070103641200  NCB
CIU2_RAW_PP27_IP3_WRKQ         0x0001070103640200  NCB
CIU2_RAW_PP27_IP4_GPIO         0x0001070103647400  NCB
CIU2_RAW_PP27_IP4_IO           0x0001070103644400  NCB
CIU2_RAW_PP27_IP4_MEM          0x0001070103645400  NCB
CIU2_RAW_PP27_IP4_MIO          0x0001070103643400  NCB
CIU2_RAW_PP27_IP4_PKT          0x0001070103646400  NCB
CIU2_RAW_PP27_IP4_RML          0x0001070103642400  NCB
CIU2_RAW_PP27_IP4_WDOG         0x0001070103641400  NCB
CIU2_RAW_PP27_IP4_WRKQ         0x0001070103640400  NCB
CIU2_RAW_PP28_IP2_GPIO         0x0001070103847000  NCB
CIU2_RAW_PP28_IP2_IO           0x0001070103844000  NCB
CIU2_RAW_PP28_IP2_MEM          0x0001070103845000  NCB
CIU2_RAW_PP28_IP2_MIO          0x0001070103843000  NCB
CIU2_RAW_PP28_IP2_PKT          0x0001070103846000  NCB
CIU2_RAW_PP28_IP2_RML          0x0001070103842000  NCB
CIU2_RAW_PP28_IP2_WDOG         0x0001070103841000  NCB
CIU2_RAW_PP28_IP2_WRKQ         0x0001070103840000  NCB
CIU2_RAW_PP28_IP3_GPIO         0x0001070103847200  NCB
CIU2_RAW_PP28_IP3_IO           0x0001070103844200  NCB
CIU2_RAW_PP28_IP3_MEM          0x0001070103845200  NCB
CIU2_RAW_PP28_IP3_MIO          0x0001070103843200  NCB
CIU2_RAW_PP28_IP3_PKT          0x0001070103846200  NCB
CIU2_RAW_PP28_IP3_RML          0x0001070103842200  NCB
CIU2_RAW_PP28_IP3_WDOG         0x0001070103841200  NCB
CIU2_RAW_PP28_IP3_WRKQ         0x0001070103840200  NCB
CIU2_RAW_PP28_IP4_GPIO         0x0001070103847400  NCB
CIU2_RAW_PP28_IP4_IO           0x0001070103844400  NCB
CIU2_RAW_PP28_IP4_MEM          0x0001070103845400  NCB
CIU2_RAW_PP28_IP4_MIO          0x0001070103843400  NCB
CIU2_RAW_PP28_IP4_PKT          0x0001070103846400  NCB
CIU2_RAW_PP28_IP4_RML          0x0001070103842400  NCB
CIU2_RAW_PP28_IP4_WDOG         0x0001070103841400  NCB
CIU2_RAW_PP28_IP4_WRKQ         0x0001070103840400  NCB
CIU2_RAW_PP29_IP2_GPIO         0x0001070103A47000  NCB
CIU2_RAW_PP29_IP2_IO           0x0001070103A44000  NCB
CIU2_RAW_PP29_IP2_MEM          0x0001070103A45000  NCB
CIU2_RAW_PP29_IP2_MIO          0x0001070103A43000  NCB
CIU2_RAW_PP29_IP2_PKT          0x0001070103A46000  NCB
CIU2_RAW_PP29_IP2_RML          0x0001070103A42000  NCB
CIU2_RAW_PP29_IP2_WDOG         0x0001070103A41000  NCB
CIU2_RAW_PP29_IP2_WRKQ         0x0001070103A40000  NCB
CIU2_RAW_PP29_IP3_GPIO         0x0001070103A47200  NCB
CIU2_RAW_PP29_IP3_IO           0x0001070103A44200  NCB
CIU2_RAW_PP29_IP3_MEM          0x0001070103A45200  NCB
CIU2_RAW_PP29_IP3_MIO          0x0001070103A43200  NCB
CIU2_RAW_PP29_IP3_PKT          0x0001070103A46200  NCB
CIU2_RAW_PP29_IP3_RML          0x0001070103A42200  NCB
CIU2_RAW_PP29_IP3_WDOG         0x0001070103A41200  NCB
CIU2_RAW_PP29_IP3_WRKQ         0x0001070103A40200  NCB
CIU2_RAW_PP29_IP4_GPIO         0x0001070103A47400  NCB
CIU2_RAW_PP29_IP4_IO           0x0001070103A44400  NCB
CIU2_RAW_PP29_IP4_MEM          0x0001070103A45400  NCB
CIU2_RAW_PP29_IP4_MIO          0x0001070103A43400  NCB
CIU2_RAW_PP29_IP4_PKT          0x0001070103A46400  NCB
CIU2_RAW_PP29_IP4_RML          0x0001070103A42400  NCB
CIU2_RAW_PP29_IP4_WDOG         0x0001070103A41400  NCB
CIU2_RAW_PP29_IP4_WRKQ         0x0001070103A40400  NCB
CIU2_RAW_PP30_IP2_GPIO         0x0001070103C47000  NCB
CIU2_RAW_PP30_IP2_IO           0x0001070103C44000  NCB
CIU2_RAW_PP30_IP2_MEM          0x0001070103C45000  NCB
CIU2_RAW_PP30_IP2_MIO          0x0001070103C43000  NCB
CIU2_RAW_PP30_IP2_PKT          0x0001070103C46000  NCB
CIU2_RAW_PP30_IP2_RML          0x0001070103C42000  NCB
CIU2_RAW_PP30_IP2_WDOG         0x0001070103C41000  NCB
CIU2_RAW_PP30_IP2_WRKQ         0x0001070103C40000  NCB
CIU2_RAW_PP30_IP3_GPIO         0x0001070103C47200  NCB
CIU2_RAW_PP30_IP3_IO           0x0001070103C44200  NCB
CIU2_RAW_PP30_IP3_MEM          0x0001070103C45200  NCB
CIU2_RAW_PP30_IP3_MIO          0x0001070103C43200  NCB
CIU2_RAW_PP30_IP3_PKT          0x0001070103C46200  NCB
CIU2_RAW_PP30_IP3_RML          0x0001070103C42200  NCB
CIU2_RAW_PP30_IP3_WDOG         0x0001070103C41200  NCB
CIU2_RAW_PP30_IP3_WRKQ         0x0001070103C40200  NCB
CIU2_RAW_PP30_IP4_GPIO         0x0001070103C47400  NCB
CIU2_RAW_PP30_IP4_IO           0x0001070103C44400  NCB
CIU2_RAW_PP30_IP4_MEM          0x0001070103C45400  NCB
CIU2_RAW_PP30_IP4_MIO          0x0001070103C43400  NCB
CIU2_RAW_PP30_IP4_PKT          0x0001070103C46400  NCB
CIU2_RAW_PP30_IP4_RML          0x0001070103C42400  NCB
CIU2_RAW_PP30_IP4_WDOG         0x0001070103C41400  NCB
CIU2_RAW_PP30_IP4_WRKQ         0x0001070103C40400  NCB
CIU2_RAW_PP31_IP2_GPIO         0x0001070103E47000  NCB
CIU2_RAW_PP31_IP2_IO           0x0001070103E44000  NCB
CIU2_RAW_PP31_IP2_MEM          0x0001070103E45000  NCB
CIU2_RAW_PP31_IP2_MIO          0x0001070103E43000  NCB
CIU2_RAW_PP31_IP2_PKT          0x0001070103E46000  NCB
CIU2_RAW_PP31_IP2_RML          0x0001070103E42000  NCB
CIU2_RAW_PP31_IP2_WDOG         0x0001070103E41000  NCB
CIU2_RAW_PP31_IP2_WRKQ         0x0001070103E40000  NCB
CIU2_RAW_PP31_IP3_GPIO         0x0001070103E47200  NCB
CIU2_RAW_PP31_IP3_IO           0x0001070103E44200  NCB
CIU2_RAW_PP31_IP3_MEM          0x0001070103E45200  NCB
CIU2_RAW_PP31_IP3_MIO          0x0001070103E43200  NCB
CIU2_RAW_PP31_IP3_PKT          0x0001070103E46200  NCB
CIU2_RAW_PP31_IP3_RML          0x0001070103E42200  NCB
CIU2_RAW_PP31_IP3_WDOG         0x0001070103E41200  NCB
CIU2_RAW_PP31_IP3_WRKQ         0x0001070103E40200  NCB
CIU2_RAW_PP31_IP4_GPIO         0x0001070103E47400  NCB
CIU2_RAW_PP31_IP4_IO           0x0001070103E44400  NCB
CIU2_RAW_PP31_IP4_MEM          0x0001070103E45400  NCB
CIU2_RAW_PP31_IP4_MIO          0x0001070103E43400  NCB
CIU2_RAW_PP31_IP4_PKT          0x0001070103E46400  NCB
CIU2_RAW_PP31_IP4_RML          0x0001070103E42400  NCB
CIU2_RAW_PP31_IP4_WDOG         0x0001070103E41400  NCB
CIU2_RAW_PP31_IP4_WRKQ         0x0001070103E40400  NCB
CIU2_SRC_IO0_INT_GPIO          0x0001070108087800  NCB
CIU2_SRC_IO0_INT_IO            0x0001070108084800  NCB
CIU2_SRC_IO0_INT_MBOX          0x0001070108088800  NCB
CIU2_SRC_IO0_INT_MEM           0x0001070108085800  NCB
CIU2_SRC_IO0_INT_MIO           0x0001070108083800  NCB
CIU2_SRC_IO0_INT_PKT           0x0001070108086800  NCB
CIU2_SRC_IO0_INT_RML           0x0001070108082800  NCB
CIU2_SRC_IO0_INT_WDOG          0x0001070108081800  NCB
CIU2_SRC_IO0_INT_WRKQ          0x0001070108080800  NCB
CIU2_SRC_IO1_INT_GPIO          0x0001070108287800  NCB
CIU2_SRC_IO1_INT_IO            0x0001070108284800  NCB
CIU2_SRC_IO1_INT_MBOX          0x0001070108288800  NCB
CIU2_SRC_IO1_INT_MEM           0x0001070108285800  NCB
CIU2_SRC_IO1_INT_MIO           0x0001070108283800  NCB
CIU2_SRC_IO1_INT_PKT           0x0001070108286800  NCB
CIU2_SRC_IO1_INT_RML           0x0001070108282800  NCB
CIU2_SRC_IO1_INT_WDOG          0x0001070108281800  NCB
CIU2_SRC_IO1_INT_WRKQ          0x0001070108280800  NCB
CIU2_SRC_PP0_IP2_GPIO          0x0001070100087000  NCB
CIU2_SRC_PP0_IP2_IO            0x0001070100084000  NCB
CIU2_SRC_PP0_IP2_MBOX          0x0001070100088000  NCB
CIU2_SRC_PP0_IP2_MEM           0x0001070100085000  NCB
CIU2_SRC_PP0_IP2_MIO           0x0001070100083000  NCB
CIU2_SRC_PP0_IP2_PKT           0x0001070100086000  NCB
CIU2_SRC_PP0_IP2_RML           0x0001070100082000  NCB
CIU2_SRC_PP0_IP2_WDOG          0x0001070100081000  NCB
CIU2_SRC_PP0_IP2_WRKQ          0x0001070100080000  NCB
CIU2_SRC_PP0_IP3_GPIO          0x0001070100087200  NCB
CIU2_SRC_PP0_IP3_IO            0x0001070100084200  NCB
CIU2_SRC_PP0_IP3_MBOX          0x0001070100088200  NCB
CIU2_SRC_PP0_IP3_MEM           0x0001070100085200  NCB
CIU2_SRC_PP0_IP3_MIO           0x0001070100083200  NCB
CIU2_SRC_PP0_IP3_PKT           0x0001070100086200  NCB
CIU2_SRC_PP0_IP3_RML           0x0001070100082200  NCB
CIU2_SRC_PP0_IP3_WDOG          0x0001070100081200  NCB
CIU2_SRC_PP0_IP3_WRKQ          0x0001070100080200  NCB
CIU2_SRC_PP0_IP4_GPIO          0x0001070100087400  NCB
CIU2_SRC_PP0_IP4_IO            0x0001070100084400  NCB
CIU2_SRC_PP0_IP4_MBOX          0x0001070100088400  NCB
CIU2_SRC_PP0_IP4_MEM           0x0001070100085400  NCB
CIU2_SRC_PP0_IP4_MIO           0x0001070100083400  NCB
CIU2_SRC_PP0_IP4_PKT           0x0001070100086400  NCB
CIU2_SRC_PP0_IP4_RML           0x0001070100082400  NCB
CIU2_SRC_PP0_IP4_WDOG          0x0001070100081400  NCB
CIU2_SRC_PP0_IP4_WRKQ          0x0001070100080400  NCB
CIU2_SRC_PP1_IP2_GPIO          0x0001070100287000  NCB
CIU2_SRC_PP1_IP2_IO            0x0001070100284000  NCB
CIU2_SRC_PP1_IP2_MBOX          0x0001070100288000  NCB
CIU2_SRC_PP1_IP2_MEM           0x0001070100285000  NCB
CIU2_SRC_PP1_IP2_MIO           0x0001070100283000  NCB
CIU2_SRC_PP1_IP2_PKT           0x0001070100286000  NCB
CIU2_SRC_PP1_IP2_RML           0x0001070100282000  NCB
CIU2_SRC_PP1_IP2_WDOG          0x0001070100281000  NCB
CIU2_SRC_PP1_IP2_WRKQ          0x0001070100280000  NCB
CIU2_SRC_PP1_IP3_GPIO          0x0001070100287200  NCB
CIU2_SRC_PP1_IP3_IO            0x0001070100284200  NCB
CIU2_SRC_PP1_IP3_MBOX          0x0001070100288200  NCB
CIU2_SRC_PP1_IP3_MEM           0x0001070100285200  NCB
CIU2_SRC_PP1_IP3_MIO           0x0001070100283200  NCB
CIU2_SRC_PP1_IP3_PKT           0x0001070100286200  NCB
CIU2_SRC_PP1_IP3_RML           0x0001070100282200  NCB
CIU2_SRC_PP1_IP3_WDOG          0x0001070100281200  NCB
CIU2_SRC_PP1_IP3_WRKQ          0x0001070100280200  NCB
CIU2_SRC_PP1_IP4_GPIO          0x0001070100287400  NCB
CIU2_SRC_PP1_IP4_IO            0x0001070100284400  NCB
CIU2_SRC_PP1_IP4_MBOX          0x0001070100288400  NCB
CIU2_SRC_PP1_IP4_MEM           0x0001070100285400  NCB
CIU2_SRC_PP1_IP4_MIO           0x0001070100283400  NCB
CIU2_SRC_PP1_IP4_PKT           0x0001070100286400  NCB
CIU2_SRC_PP1_IP4_RML           0x0001070100282400  NCB
CIU2_SRC_PP1_IP4_WDOG          0x0001070100281400  NCB
CIU2_SRC_PP1_IP4_WRKQ          0x0001070100280400  NCB
CIU2_SRC_PP2_IP2_GPIO          0x0001070100487000  NCB
CIU2_SRC_PP2_IP2_IO            0x0001070100484000  NCB
CIU2_SRC_PP2_IP2_MBOX          0x0001070100488000  NCB
CIU2_SRC_PP2_IP2_MEM           0x0001070100485000  NCB
CIU2_SRC_PP2_IP2_MIO           0x0001070100483000  NCB
CIU2_SRC_PP2_IP2_PKT           0x0001070100486000  NCB
CIU2_SRC_PP2_IP2_RML           0x0001070100482000  NCB
CIU2_SRC_PP2_IP2_WDOG          0x0001070100481000  NCB
CIU2_SRC_PP2_IP2_WRKQ          0x0001070100480000  NCB
CIU2_SRC_PP2_IP3_GPIO          0x0001070100487200  NCB
CIU2_SRC_PP2_IP3_IO            0x0001070100484200  NCB
CIU2_SRC_PP2_IP3_MBOX          0x0001070100488200  NCB
CIU2_SRC_PP2_IP3_MEM           0x0001070100485200  NCB
CIU2_SRC_PP2_IP3_MIO           0x0001070100483200  NCB
CIU2_SRC_PP2_IP3_PKT           0x0001070100486200  NCB
CIU2_SRC_PP2_IP3_RML           0x0001070100482200  NCB
CIU2_SRC_PP2_IP3_WDOG          0x0001070100481200  NCB
CIU2_SRC_PP2_IP3_WRKQ          0x0001070100480200  NCB
CIU2_SRC_PP2_IP4_GPIO          0x0001070100487400  NCB
CIU2_SRC_PP2_IP4_IO            0x0001070100484400  NCB
CIU2_SRC_PP2_IP4_MBOX          0x0001070100488400  NCB
CIU2_SRC_PP2_IP4_MEM           0x0001070100485400  NCB
CIU2_SRC_PP2_IP4_MIO           0x0001070100483400  NCB
CIU2_SRC_PP2_IP4_PKT           0x0001070100486400  NCB
CIU2_SRC_PP2_IP4_RML           0x0001070100482400  NCB
CIU2_SRC_PP2_IP4_WDOG          0x0001070100481400  NCB
CIU2_SRC_PP2_IP4_WRKQ          0x0001070100480400  NCB
CIU2_SRC_PP3_IP2_GPIO          0x0001070100687000  NCB
CIU2_SRC_PP3_IP2_IO            0x0001070100684000  NCB
CIU2_SRC_PP3_IP2_MBOX          0x0001070100688000  NCB
CIU2_SRC_PP3_IP2_MEM           0x0001070100685000  NCB
CIU2_SRC_PP3_IP2_MIO           0x0001070100683000  NCB
CIU2_SRC_PP3_IP2_PKT           0x0001070100686000  NCB
CIU2_SRC_PP3_IP2_RML           0x0001070100682000  NCB
CIU2_SRC_PP3_IP2_WDOG          0x0001070100681000  NCB
CIU2_SRC_PP3_IP2_WRKQ          0x0001070100680000  NCB
CIU2_SRC_PP3_IP3_GPIO          0x0001070100687200  NCB
CIU2_SRC_PP3_IP3_IO            0x0001070100684200  NCB
CIU2_SRC_PP3_IP3_MBOX          0x0001070100688200  NCB
CIU2_SRC_PP3_IP3_MEM           0x0001070100685200  NCB
CIU2_SRC_PP3_IP3_MIO           0x0001070100683200  NCB
CIU2_SRC_PP3_IP3_PKT           0x0001070100686200  NCB
CIU2_SRC_PP3_IP3_RML           0x0001070100682200  NCB
CIU2_SRC_PP3_IP3_WDOG          0x0001070100681200  NCB
CIU2_SRC_PP3_IP3_WRKQ          0x0001070100680200  NCB
CIU2_SRC_PP3_IP4_GPIO          0x0001070100687400  NCB
CIU2_SRC_PP3_IP4_IO            0x0001070100684400  NCB
CIU2_SRC_PP3_IP4_MBOX          0x0001070100688400  NCB
CIU2_SRC_PP3_IP4_MEM           0x0001070100685400  NCB
CIU2_SRC_PP3_IP4_MIO           0x0001070100683400  NCB
CIU2_SRC_PP3_IP4_PKT           0x0001070100686400  NCB
CIU2_SRC_PP3_IP4_RML           0x0001070100682400  NCB
CIU2_SRC_PP3_IP4_WDOG          0x0001070100681400  NCB
CIU2_SRC_PP3_IP4_WRKQ          0x0001070100680400  NCB
CIU2_SRC_PP4_IP2_GPIO          0x0001070100887000  NCB
CIU2_SRC_PP4_IP2_IO            0x0001070100884000  NCB
CIU2_SRC_PP4_IP2_MBOX          0x0001070100888000  NCB
CIU2_SRC_PP4_IP2_MEM           0x0001070100885000  NCB
CIU2_SRC_PP4_IP2_MIO           0x0001070100883000  NCB
CIU2_SRC_PP4_IP2_PKT           0x0001070100886000  NCB
CIU2_SRC_PP4_IP2_RML           0x0001070100882000  NCB
CIU2_SRC_PP4_IP2_WDOG          0x0001070100881000  NCB
CIU2_SRC_PP4_IP2_WRKQ          0x0001070100880000  NCB
CIU2_SRC_PP4_IP3_GPIO          0x0001070100887200  NCB
CIU2_SRC_PP4_IP3_IO            0x0001070100884200  NCB
CIU2_SRC_PP4_IP3_MBOX          0x0001070100888200  NCB
CIU2_SRC_PP4_IP3_MEM           0x0001070100885200  NCB
CIU2_SRC_PP4_IP3_MIO           0x0001070100883200  NCB
CIU2_SRC_PP4_IP3_PKT           0x0001070100886200  NCB
CIU2_SRC_PP4_IP3_RML           0x0001070100882200  NCB
CIU2_SRC_PP4_IP3_WDOG          0x0001070100881200  NCB
CIU2_SRC_PP4_IP3_WRKQ          0x0001070100880200  NCB
CIU2_SRC_PP4_IP4_GPIO          0x0001070100887400  NCB
CIU2_SRC_PP4_IP4_IO            0x0001070100884400  NCB
CIU2_SRC_PP4_IP4_MBOX          0x0001070100888400  NCB
CIU2_SRC_PP4_IP4_MEM           0x0001070100885400  NCB
CIU2_SRC_PP4_IP4_MIO           0x0001070100883400  NCB
CIU2_SRC_PP4_IP4_PKT           0x0001070100886400  NCB
CIU2_SRC_PP4_IP4_RML           0x0001070100882400  NCB
CIU2_SRC_PP4_IP4_WDOG          0x0001070100881400  NCB
CIU2_SRC_PP4_IP4_WRKQ          0x0001070100880400  NCB
CIU2_SRC_PP5_IP2_GPIO          0x0001070100A87000  NCB
CIU2_SRC_PP5_IP2_IO            0x0001070100A84000  NCB
CIU2_SRC_PP5_IP2_MBOX          0x0001070100A88000  NCB
CIU2_SRC_PP5_IP2_MEM           0x0001070100A85000  NCB
CIU2_SRC_PP5_IP2_MIO           0x0001070100A83000  NCB
CIU2_SRC_PP5_IP2_PKT           0x0001070100A86000  NCB
CIU2_SRC_PP5_IP2_RML           0x0001070100A82000  NCB
CIU2_SRC_PP5_IP2_WDOG          0x0001070100A81000  NCB
CIU2_SRC_PP5_IP2_WRKQ          0x0001070100A80000  NCB
CIU2_SRC_PP5_IP3_GPIO          0x0001070100A87200  NCB
CIU2_SRC_PP5_IP3_IO            0x0001070100A84200  NCB
CIU2_SRC_PP5_IP3_MBOX          0x0001070100A88200  NCB
CIU2_SRC_PP5_IP3_MEM           0x0001070100A85200  NCB
CIU2_SRC_PP5_IP3_MIO           0x0001070100A83200  NCB
CIU2_SRC_PP5_IP3_PKT           0x0001070100A86200  NCB
CIU2_SRC_PP5_IP3_RML           0x0001070100A82200  NCB
CIU2_SRC_PP5_IP3_WDOG          0x0001070100A81200  NCB
CIU2_SRC_PP5_IP3_WRKQ          0x0001070100A80200  NCB
CIU2_SRC_PP5_IP4_GPIO          0x0001070100A87400  NCB
CIU2_SRC_PP5_IP4_IO            0x0001070100A84400  NCB
CIU2_SRC_PP5_IP4_MBOX          0x0001070100A88400  NCB
CIU2_SRC_PP5_IP4_MEM           0x0001070100A85400  NCB
CIU2_SRC_PP5_IP4_MIO           0x0001070100A83400  NCB
CIU2_SRC_PP5_IP4_PKT           0x0001070100A86400  NCB
CIU2_SRC_PP5_IP4_RML           0x0001070100A82400  NCB
CIU2_SRC_PP5_IP4_WDOG          0x0001070100A81400  NCB
CIU2_SRC_PP5_IP4_WRKQ          0x0001070100A80400  NCB
CIU2_SRC_PP6_IP2_GPIO          0x0001070100C87000  NCB
CIU2_SRC_PP6_IP2_IO            0x0001070100C84000  NCB
CIU2_SRC_PP6_IP2_MBOX          0x0001070100C88000  NCB
CIU2_SRC_PP6_IP2_MEM           0x0001070100C85000  NCB
CIU2_SRC_PP6_IP2_MIO           0x0001070100C83000  NCB
CIU2_SRC_PP6_IP2_PKT           0x0001070100C86000  NCB
CIU2_SRC_PP6_IP2_RML           0x0001070100C82000  NCB
CIU2_SRC_PP6_IP2_WDOG          0x0001070100C81000  NCB
CIU2_SRC_PP6_IP2_WRKQ          0x0001070100C80000  NCB
CIU2_SRC_PP6_IP3_GPIO          0x0001070100C87200  NCB
CIU2_SRC_PP6_IP3_IO            0x0001070100C84200  NCB
CIU2_SRC_PP6_IP3_MBOX          0x0001070100C88200  NCB
CIU2_SRC_PP6_IP3_MEM           0x0001070100C85200  NCB
CIU2_SRC_PP6_IP3_MIO           0x0001070100C83200  NCB
CIU2_SRC_PP6_IP3_PKT           0x0001070100C86200  NCB
CIU2_SRC_PP6_IP3_RML           0x0001070100C82200  NCB
CIU2_SRC_PP6_IP3_WDOG          0x0001070100C81200  NCB
CIU2_SRC_PP6_IP3_WRKQ          0x0001070100C80200  NCB
CIU2_SRC_PP6_IP4_GPIO          0x0001070100C87400  NCB
CIU2_SRC_PP6_IP4_IO            0x0001070100C84400  NCB
CIU2_SRC_PP6_IP4_MBOX          0x0001070100C88400  NCB
CIU2_SRC_PP6_IP4_MEM           0x0001070100C85400  NCB
CIU2_SRC_PP6_IP4_MIO           0x0001070100C83400  NCB
CIU2_SRC_PP6_IP4_PKT           0x0001070100C86400  NCB
CIU2_SRC_PP6_IP4_RML           0x0001070100C82400  NCB
CIU2_SRC_PP6_IP4_WDOG          0x0001070100C81400  NCB
CIU2_SRC_PP6_IP4_WRKQ          0x0001070100C80400  NCB
CIU2_SRC_PP7_IP2_GPIO          0x0001070100E87000  NCB
CIU2_SRC_PP7_IP2_IO            0x0001070100E84000  NCB
CIU2_SRC_PP7_IP2_MBOX          0x0001070100E88000  NCB
CIU2_SRC_PP7_IP2_MEM           0x0001070100E85000  NCB
CIU2_SRC_PP7_IP2_MIO           0x0001070100E83000  NCB
CIU2_SRC_PP7_IP2_PKT           0x0001070100E86000  NCB
CIU2_SRC_PP7_IP2_RML           0x0001070100E82000  NCB
CIU2_SRC_PP7_IP2_WDOG          0x0001070100E81000  NCB
CIU2_SRC_PP7_IP2_WRKQ          0x0001070100E80000  NCB
CIU2_SRC_PP7_IP3_GPIO          0x0001070100E87200  NCB
CIU2_SRC_PP7_IP3_IO            0x0001070100E84200  NCB
CIU2_SRC_PP7_IP3_MBOX          0x0001070100E88200  NCB
CIU2_SRC_PP7_IP3_MEM           0x0001070100E85200  NCB
CIU2_SRC_PP7_IP3_MIO           0x0001070100E83200  NCB
CIU2_SRC_PP7_IP3_PKT           0x0001070100E86200  NCB
CIU2_SRC_PP7_IP3_RML           0x0001070100E82200  NCB
CIU2_SRC_PP7_IP3_WDOG          0x0001070100E81200  NCB
CIU2_SRC_PP7_IP3_WRKQ          0x0001070100E80200  NCB
CIU2_SRC_PP7_IP4_GPIO          0x0001070100E87400  NCB
CIU2_SRC_PP7_IP4_IO            0x0001070100E84400  NCB
CIU2_SRC_PP7_IP4_MBOX          0x0001070100E88400  NCB
CIU2_SRC_PP7_IP4_MEM           0x0001070100E85400  NCB
CIU2_SRC_PP7_IP4_MIO           0x0001070100E83400  NCB
CIU2_SRC_PP7_IP4_PKT           0x0001070100E86400  NCB
CIU2_SRC_PP7_IP4_RML           0x0001070100E82400  NCB
CIU2_SRC_PP7_IP4_WDOG          0x0001070100E81400  NCB
CIU2_SRC_PP7_IP4_WRKQ          0x0001070100E80400  NCB
CIU2_SRC_PP8_IP2_GPIO          0x0001070101087000  NCB
CIU2_SRC_PP8_IP2_IO            0x0001070101084000  NCB
CIU2_SRC_PP8_IP2_MBOX          0x0001070101088000  NCB
CIU2_SRC_PP8_IP2_MEM           0x0001070101085000  NCB
CIU2_SRC_PP8_IP2_MIO           0x0001070101083000  NCB
CIU2_SRC_PP8_IP2_PKT           0x0001070101086000  NCB
CIU2_SRC_PP8_IP2_RML           0x0001070101082000  NCB
CIU2_SRC_PP8_IP2_WDOG          0x0001070101081000  NCB
CIU2_SRC_PP8_IP2_WRKQ          0x0001070101080000  NCB
CIU2_SRC_PP8_IP3_GPIO          0x0001070101087200  NCB
CIU2_SRC_PP8_IP3_IO            0x0001070101084200  NCB
CIU2_SRC_PP8_IP3_MBOX          0x0001070101088200  NCB
CIU2_SRC_PP8_IP3_MEM           0x0001070101085200  NCB
CIU2_SRC_PP8_IP3_MIO           0x0001070101083200  NCB
CIU2_SRC_PP8_IP3_PKT           0x0001070101086200  NCB
CIU2_SRC_PP8_IP3_RML           0x0001070101082200  NCB
CIU2_SRC_PP8_IP3_WDOG          0x0001070101081200  NCB
CIU2_SRC_PP8_IP3_WRKQ          0x0001070101080200  NCB
CIU2_SRC_PP8_IP4_GPIO          0x0001070101087400  NCB
CIU2_SRC_PP8_IP4_IO            0x0001070101084400  NCB
CIU2_SRC_PP8_IP4_MBOX          0x0001070101088400  NCB
CIU2_SRC_PP8_IP4_MEM           0x0001070101085400  NCB
CIU2_SRC_PP8_IP4_MIO           0x0001070101083400  NCB
CIU2_SRC_PP8_IP4_PKT           0x0001070101086400  NCB
CIU2_SRC_PP8_IP4_RML           0x0001070101082400  NCB
CIU2_SRC_PP8_IP4_WDOG          0x0001070101081400  NCB
CIU2_SRC_PP8_IP4_WRKQ          0x0001070101080400  NCB
CIU2_SRC_PP9_IP2_GPIO          0x0001070101287000  NCB
CIU2_SRC_PP9_IP2_IO            0x0001070101284000  NCB
CIU2_SRC_PP9_IP2_MBOX          0x0001070101288000  NCB
CIU2_SRC_PP9_IP2_MEM           0x0001070101285000  NCB
CIU2_SRC_PP9_IP2_MIO           0x0001070101283000  NCB
CIU2_SRC_PP9_IP2_PKT           0x0001070101286000  NCB
CIU2_SRC_PP9_IP2_RML           0x0001070101282000  NCB
CIU2_SRC_PP9_IP2_WDOG          0x0001070101281000  NCB
CIU2_SRC_PP9_IP2_WRKQ          0x0001070101280000  NCB
CIU2_SRC_PP9_IP3_GPIO          0x0001070101287200  NCB
CIU2_SRC_PP9_IP3_IO            0x0001070101284200  NCB
CIU2_SRC_PP9_IP3_MBOX          0x0001070101288200  NCB
CIU2_SRC_PP9_IP3_MEM           0x0001070101285200  NCB
CIU2_SRC_PP9_IP3_MIO           0x0001070101283200  NCB
CIU2_SRC_PP9_IP3_PKT           0x0001070101286200  NCB
CIU2_SRC_PP9_IP3_RML           0x0001070101282200  NCB
CIU2_SRC_PP9_IP3_WDOG          0x0001070101281200  NCB
CIU2_SRC_PP9_IP3_WRKQ          0x0001070101280200  NCB
CIU2_SRC_PP9_IP4_GPIO          0x0001070101287400  NCB
CIU2_SRC_PP9_IP4_IO            0x0001070101284400  NCB
CIU2_SRC_PP9_IP4_MBOX          0x0001070101288400  NCB
CIU2_SRC_PP9_IP4_MEM           0x0001070101285400  NCB
CIU2_SRC_PP9_IP4_MIO           0x0001070101283400  NCB
CIU2_SRC_PP9_IP4_PKT           0x0001070101286400  NCB
CIU2_SRC_PP9_IP4_RML           0x0001070101282400  NCB
CIU2_SRC_PP9_IP4_WDOG          0x0001070101281400  NCB
CIU2_SRC_PP9_IP4_WRKQ          0x0001070101280400  NCB
CIU2_SRC_PP10_IP2_GPIO         0x0001070101487000  NCB
CIU2_SRC_PP10_IP2_IO           0x0001070101484000  NCB
CIU2_SRC_PP10_IP2_MBOX         0x0001070101488000  NCB
CIU2_SRC_PP10_IP2_MEM          0x0001070101485000  NCB
CIU2_SRC_PP10_IP2_MIO          0x0001070101483000  NCB
CIU2_SRC_PP10_IP2_PKT          0x0001070101486000  NCB
CIU2_SRC_PP10_IP2_RML          0x0001070101482000  NCB
CIU2_SRC_PP10_IP2_WDOG         0x0001070101481000  NCB
CIU2_SRC_PP10_IP2_WRKQ         0x0001070101480000  NCB
CIU2_SRC_PP10_IP3_GPIO         0x0001070101487200  NCB
CIU2_SRC_PP10_IP3_IO           0x0001070101484200  NCB
CIU2_SRC_PP10_IP3_MBOX         0x0001070101488200  NCB
CIU2_SRC_PP10_IP3_MEM          0x0001070101485200  NCB
CIU2_SRC_PP10_IP3_MIO          0x0001070101483200  NCB
CIU2_SRC_PP10_IP3_PKT          0x0001070101486200  NCB
CIU2_SRC_PP10_IP3_RML          0x0001070101482200  NCB
CIU2_SRC_PP10_IP3_WDOG         0x0001070101481200  NCB
CIU2_SRC_PP10_IP3_WRKQ         0x0001070101480200  NCB
CIU2_SRC_PP10_IP4_GPIO         0x0001070101487400  NCB
CIU2_SRC_PP10_IP4_IO           0x0001070101484400  NCB
CIU2_SRC_PP10_IP4_MBOX         0x0001070101488400  NCB
CIU2_SRC_PP10_IP4_MEM          0x0001070101485400  NCB
CIU2_SRC_PP10_IP4_MIO          0x0001070101483400  NCB
CIU2_SRC_PP10_IP4_PKT          0x0001070101486400  NCB
CIU2_SRC_PP10_IP4_RML          0x0001070101482400  NCB
CIU2_SRC_PP10_IP4_WDOG         0x0001070101481400  NCB
CIU2_SRC_PP10_IP4_WRKQ         0x0001070101480400  NCB
CIU2_SRC_PP11_IP2_GPIO         0x0001070101687000  NCB
CIU2_SRC_PP11_IP2_IO           0x0001070101684000  NCB
CIU2_SRC_PP11_IP2_MBOX         0x0001070101688000  NCB
CIU2_SRC_PP11_IP2_MEM          0x0001070101685000  NCB
CIU2_SRC_PP11_IP2_MIO          0x0001070101683000  NCB
CIU2_SRC_PP11_IP2_PKT          0x0001070101686000  NCB
CIU2_SRC_PP11_IP2_RML          0x0001070101682000  NCB
CIU2_SRC_PP11_IP2_WDOG         0x0001070101681000  NCB
CIU2_SRC_PP11_IP2_WRKQ         0x0001070101680000  NCB
CIU2_SRC_PP11_IP3_GPIO         0x0001070101687200  NCB
CIU2_SRC_PP11_IP3_IO           0x0001070101684200  NCB
CIU2_SRC_PP11_IP3_MBOX         0x0001070101688200  NCB
CIU2_SRC_PP11_IP3_MEM          0x0001070101685200  NCB
CIU2_SRC_PP11_IP3_MIO          0x0001070101683200  NCB
CIU2_SRC_PP11_IP3_PKT          0x0001070101686200  NCB
CIU2_SRC_PP11_IP3_RML          0x0001070101682200  NCB
CIU2_SRC_PP11_IP3_WDOG         0x0001070101681200  NCB
CIU2_SRC_PP11_IP3_WRKQ         0x0001070101680200  NCB
CIU2_SRC_PP11_IP4_GPIO         0x0001070101687400  NCB
CIU2_SRC_PP11_IP4_IO           0x0001070101684400  NCB
CIU2_SRC_PP11_IP4_MBOX         0x0001070101688400  NCB
CIU2_SRC_PP11_IP4_MEM          0x0001070101685400  NCB
CIU2_SRC_PP11_IP4_MIO          0x0001070101683400  NCB
CIU2_SRC_PP11_IP4_PKT          0x0001070101686400  NCB
CIU2_SRC_PP11_IP4_RML          0x0001070101682400  NCB
CIU2_SRC_PP11_IP4_WDOG         0x0001070101681400  NCB
CIU2_SRC_PP11_IP4_WRKQ         0x0001070101680400  NCB
CIU2_SRC_PP12_IP2_GPIO         0x0001070101887000  NCB
CIU2_SRC_PP12_IP2_IO           0x0001070101884000  NCB
CIU2_SRC_PP12_IP2_MBOX         0x0001070101888000  NCB
CIU2_SRC_PP12_IP2_MEM          0x0001070101885000  NCB
CIU2_SRC_PP12_IP2_MIO          0x0001070101883000  NCB
CIU2_SRC_PP12_IP2_PKT          0x0001070101886000  NCB
CIU2_SRC_PP12_IP2_RML          0x0001070101882000  NCB
CIU2_SRC_PP12_IP2_WDOG         0x0001070101881000  NCB
CIU2_SRC_PP12_IP2_WRKQ         0x0001070101880000  NCB
CIU2_SRC_PP12_IP3_GPIO         0x0001070101887200  NCB
CIU2_SRC_PP12_IP3_IO           0x0001070101884200  NCB
CIU2_SRC_PP12_IP3_MBOX         0x0001070101888200  NCB
CIU2_SRC_PP12_IP3_MEM          0x0001070101885200  NCB
CIU2_SRC_PP12_IP3_MIO          0x0001070101883200  NCB
CIU2_SRC_PP12_IP3_PKT          0x0001070101886200  NCB
CIU2_SRC_PP12_IP3_RML          0x0001070101882200  NCB
CIU2_SRC_PP12_IP3_WDOG         0x0001070101881200  NCB
CIU2_SRC_PP12_IP3_WRKQ         0x0001070101880200  NCB
CIU2_SRC_PP12_IP4_GPIO         0x0001070101887400  NCB
CIU2_SRC_PP12_IP4_IO           0x0001070101884400  NCB
CIU2_SRC_PP12_IP4_MBOX         0x0001070101888400  NCB
CIU2_SRC_PP12_IP4_MEM          0x0001070101885400  NCB
CIU2_SRC_PP12_IP4_MIO          0x0001070101883400  NCB
CIU2_SRC_PP12_IP4_PKT          0x0001070101886400  NCB
CIU2_SRC_PP12_IP4_RML          0x0001070101882400  NCB
CIU2_SRC_PP12_IP4_WDOG         0x0001070101881400  NCB
CIU2_SRC_PP12_IP4_WRKQ         0x0001070101880400  NCB
CIU2_SRC_PP13_IP2_GPIO         0x0001070101A87000  NCB
CIU2_SRC_PP13_IP2_IO           0x0001070101A84000  NCB
CIU2_SRC_PP13_IP2_MBOX         0x0001070101A88000  NCB
CIU2_SRC_PP13_IP2_MEM          0x0001070101A85000  NCB
CIU2_SRC_PP13_IP2_MIO          0x0001070101A83000  NCB
CIU2_SRC_PP13_IP2_PKT          0x0001070101A86000  NCB
CIU2_SRC_PP13_IP2_RML          0x0001070101A82000  NCB
CIU2_SRC_PP13_IP2_WDOG         0x0001070101A81000  NCB
CIU2_SRC_PP13_IP2_WRKQ         0x0001070101A80000  NCB
CIU2_SRC_PP13_IP3_GPIO         0x0001070101A87200  NCB
CIU2_SRC_PP13_IP3_IO           0x0001070101A84200  NCB
CIU2_SRC_PP13_IP3_MBOX         0x0001070101A88200  NCB
CIU2_SRC_PP13_IP3_MEM          0x0001070101A85200  NCB
CIU2_SRC_PP13_IP3_MIO          0x0001070101A83200  NCB
CIU2_SRC_PP13_IP3_PKT          0x0001070101A86200  NCB
CIU2_SRC_PP13_IP3_RML          0x0001070101A82200  NCB
CIU2_SRC_PP13_IP3_WDOG         0x0001070101A81200  NCB
CIU2_SRC_PP13_IP3_WRKQ         0x0001070101A80200  NCB
CIU2_SRC_PP13_IP4_GPIO         0x0001070101A87400  NCB
CIU2_SRC_PP13_IP4_IO           0x0001070101A84400  NCB
CIU2_SRC_PP13_IP4_MBOX         0x0001070101A88400  NCB
CIU2_SRC_PP13_IP4_MEM          0x0001070101A85400  NCB
CIU2_SRC_PP13_IP4_MIO          0x0001070101A83400  NCB
CIU2_SRC_PP13_IP4_PKT          0x0001070101A86400  NCB
CIU2_SRC_PP13_IP4_RML          0x0001070101A82400  NCB
CIU2_SRC_PP13_IP4_WDOG         0x0001070101A81400  NCB
CIU2_SRC_PP13_IP4_WRKQ         0x0001070101A80400  NCB
CIU2_SRC_PP14_IP2_GPIO         0x0001070101C87000  NCB
CIU2_SRC_PP14_IP2_IO           0x0001070101C84000  NCB
CIU2_SRC_PP14_IP2_MBOX         0x0001070101C88000  NCB
CIU2_SRC_PP14_IP2_MEM          0x0001070101C85000  NCB
CIU2_SRC_PP14_IP2_MIO          0x0001070101C83000  NCB
CIU2_SRC_PP14_IP2_PKT          0x0001070101C86000  NCB
CIU2_SRC_PP14_IP2_RML          0x0001070101C82000  NCB
CIU2_SRC_PP14_IP2_WDOG         0x0001070101C81000  NCB
CIU2_SRC_PP14_IP2_WRKQ         0x0001070101C80000  NCB
CIU2_SRC_PP14_IP3_GPIO         0x0001070101C87200  NCB
CIU2_SRC_PP14_IP3_IO           0x0001070101C84200  NCB
CIU2_SRC_PP14_IP3_MBOX         0x0001070101C88200  NCB
CIU2_SRC_PP14_IP3_MEM          0x0001070101C85200  NCB
CIU2_SRC_PP14_IP3_MIO          0x0001070101C83200  NCB
CIU2_SRC_PP14_IP3_PKT          0x0001070101C86200  NCB
CIU2_SRC_PP14_IP3_RML          0x0001070101C82200  NCB
CIU2_SRC_PP14_IP3_WDOG         0x0001070101C81200  NCB
CIU2_SRC_PP14_IP3_WRKQ         0x0001070101C80200  NCB
CIU2_SRC_PP14_IP4_GPIO         0x0001070101C87400  NCB
CIU2_SRC_PP14_IP4_IO           0x0001070101C84400  NCB
CIU2_SRC_PP14_IP4_MBOX         0x0001070101C88400  NCB
CIU2_SRC_PP14_IP4_MEM          0x0001070101C85400  NCB
CIU2_SRC_PP14_IP4_MIO          0x0001070101C83400  NCB
CIU2_SRC_PP14_IP4_PKT          0x0001070101C86400  NCB
CIU2_SRC_PP14_IP4_RML          0x0001070101C82400  NCB
CIU2_SRC_PP14_IP4_WDOG         0x0001070101C81400  NCB
CIU2_SRC_PP14_IP4_WRKQ         0x0001070101C80400  NCB
CIU2_SRC_PP15_IP2_GPIO         0x0001070101E87000  NCB
CIU2_SRC_PP15_IP2_IO           0x0001070101E84000  NCB
CIU2_SRC_PP15_IP2_MBOX         0x0001070101E88000  NCB
CIU2_SRC_PP15_IP2_MEM          0x0001070101E85000  NCB
CIU2_SRC_PP15_IP2_MIO          0x0001070101E83000  NCB
CIU2_SRC_PP15_IP2_PKT          0x0001070101E86000  NCB
CIU2_SRC_PP15_IP2_RML          0x0001070101E82000  NCB
CIU2_SRC_PP15_IP2_WDOG         0x0001070101E81000  NCB
CIU2_SRC_PP15_IP2_WRKQ         0x0001070101E80000  NCB
CIU2_SRC_PP15_IP3_GPIO         0x0001070101E87200  NCB
CIU2_SRC_PP15_IP3_IO           0x0001070101E84200  NCB
CIU2_SRC_PP15_IP3_MBOX         0x0001070101E88200  NCB
CIU2_SRC_PP15_IP3_MEM          0x0001070101E85200  NCB
CIU2_SRC_PP15_IP3_MIO          0x0001070101E83200  NCB
CIU2_SRC_PP15_IP3_PKT          0x0001070101E86200  NCB
CIU2_SRC_PP15_IP3_RML          0x0001070101E82200  NCB
CIU2_SRC_PP15_IP3_WDOG         0x0001070101E81200  NCB
CIU2_SRC_PP15_IP3_WRKQ         0x0001070101E80200  NCB
CIU2_SRC_PP15_IP4_GPIO         0x0001070101E87400  NCB
CIU2_SRC_PP15_IP4_IO           0x0001070101E84400  NCB
CIU2_SRC_PP15_IP4_MBOX         0x0001070101E88400  NCB
CIU2_SRC_PP15_IP4_MEM          0x0001070101E85400  NCB
CIU2_SRC_PP15_IP4_MIO          0x0001070101E83400  NCB
CIU2_SRC_PP15_IP4_PKT          0x0001070101E86400  NCB
CIU2_SRC_PP15_IP4_RML          0x0001070101E82400  NCB
CIU2_SRC_PP15_IP4_WDOG         0x0001070101E81400  NCB
CIU2_SRC_PP15_IP4_WRKQ         0x0001070101E80400  NCB
CIU2_SRC_PP16_IP2_GPIO         0x0001070102087000  NCB
CIU2_SRC_PP16_IP2_IO           0x0001070102084000  NCB
CIU2_SRC_PP16_IP2_MBOX         0x0001070102088000  NCB
CIU2_SRC_PP16_IP2_MEM          0x0001070102085000  NCB
CIU2_SRC_PP16_IP2_MIO          0x0001070102083000  NCB
CIU2_SRC_PP16_IP2_PKT          0x0001070102086000  NCB
CIU2_SRC_PP16_IP2_RML          0x0001070102082000  NCB
CIU2_SRC_PP16_IP2_WDOG         0x0001070102081000  NCB
CIU2_SRC_PP16_IP2_WRKQ         0x0001070102080000  NCB
CIU2_SRC_PP16_IP3_GPIO         0x0001070102087200  NCB
CIU2_SRC_PP16_IP3_IO           0x0001070102084200  NCB
CIU2_SRC_PP16_IP3_MBOX         0x0001070102088200  NCB
CIU2_SRC_PP16_IP3_MEM          0x0001070102085200  NCB
CIU2_SRC_PP16_IP3_MIO          0x0001070102083200  NCB
CIU2_SRC_PP16_IP3_PKT          0x0001070102086200  NCB
CIU2_SRC_PP16_IP3_RML          0x0001070102082200  NCB
CIU2_SRC_PP16_IP3_WDOG         0x0001070102081200  NCB
CIU2_SRC_PP16_IP3_WRKQ         0x0001070102080200  NCB
CIU2_SRC_PP16_IP4_GPIO         0x0001070102087400  NCB
CIU2_SRC_PP16_IP4_IO           0x0001070102084400  NCB
CIU2_SRC_PP16_IP4_MBOX         0x0001070102088400  NCB
CIU2_SRC_PP16_IP4_MEM          0x0001070102085400  NCB
CIU2_SRC_PP16_IP4_MIO          0x0001070102083400  NCB
CIU2_SRC_PP16_IP4_PKT          0x0001070102086400  NCB
CIU2_SRC_PP16_IP4_RML          0x0001070102082400  NCB
CIU2_SRC_PP16_IP4_WDOG         0x0001070102081400  NCB
CIU2_SRC_PP16_IP4_WRKQ         0x0001070102080400  NCB
CIU2_SRC_PP17_IP2_GPIO         0x0001070102287000  NCB
CIU2_SRC_PP17_IP2_IO           0x0001070102284000  NCB
CIU2_SRC_PP17_IP2_MBOX         0x0001070102288000  NCB
CIU2_SRC_PP17_IP2_MEM          0x0001070102285000  NCB
CIU2_SRC_PP17_IP2_MIO          0x0001070102283000  NCB
CIU2_SRC_PP17_IP2_PKT          0x0001070102286000  NCB
CIU2_SRC_PP17_IP2_RML          0x0001070102282000  NCB
CIU2_SRC_PP17_IP2_WDOG         0x0001070102281000  NCB
CIU2_SRC_PP17_IP2_WRKQ         0x0001070102280000  NCB
CIU2_SRC_PP17_IP3_GPIO         0x0001070102287200  NCB
CIU2_SRC_PP17_IP3_IO           0x0001070102284200  NCB
CIU2_SRC_PP17_IP3_MBOX         0x0001070102288200  NCB
CIU2_SRC_PP17_IP3_MEM          0x0001070102285200  NCB
CIU2_SRC_PP17_IP3_MIO          0x0001070102283200  NCB
CIU2_SRC_PP17_IP3_PKT          0x0001070102286200  NCB
CIU2_SRC_PP17_IP3_RML          0x0001070102282200  NCB
CIU2_SRC_PP17_IP3_WDOG         0x0001070102281200  NCB
CIU2_SRC_PP17_IP3_WRKQ         0x0001070102280200  NCB
CIU2_SRC_PP17_IP4_GPIO         0x0001070102287400  NCB
CIU2_SRC_PP17_IP4_IO           0x0001070102284400  NCB
CIU2_SRC_PP17_IP4_MBOX         0x0001070102288400  NCB
CIU2_SRC_PP17_IP4_MEM          0x0001070102285400  NCB
CIU2_SRC_PP17_IP4_MIO          0x0001070102283400  NCB
CIU2_SRC_PP17_IP4_PKT          0x0001070102286400  NCB
CIU2_SRC_PP17_IP4_RML          0x0001070102282400  NCB
CIU2_SRC_PP17_IP4_WDOG         0x0001070102281400  NCB
CIU2_SRC_PP17_IP4_WRKQ         0x0001070102280400  NCB
CIU2_SRC_PP18_IP2_GPIO         0x0001070102487000  NCB
CIU2_SRC_PP18_IP2_IO           0x0001070102484000  NCB
CIU2_SRC_PP18_IP2_MBOX         0x0001070102488000  NCB
CIU2_SRC_PP18_IP2_MEM          0x0001070102485000  NCB
CIU2_SRC_PP18_IP2_MIO          0x0001070102483000  NCB
CIU2_SRC_PP18_IP2_PKT          0x0001070102486000  NCB
CIU2_SRC_PP18_IP2_RML          0x0001070102482000  NCB
CIU2_SRC_PP18_IP2_WDOG         0x0001070102481000  NCB
CIU2_SRC_PP18_IP2_WRKQ         0x0001070102480000  NCB
CIU2_SRC_PP18_IP3_GPIO         0x0001070102487200  NCB
CIU2_SRC_PP18_IP3_IO           0x0001070102484200  NCB
CIU2_SRC_PP18_IP3_MBOX         0x0001070102488200  NCB
CIU2_SRC_PP18_IP3_MEM          0x0001070102485200  NCB
CIU2_SRC_PP18_IP3_MIO          0x0001070102483200  NCB
CIU2_SRC_PP18_IP3_PKT          0x0001070102486200  NCB
CIU2_SRC_PP18_IP3_RML          0x0001070102482200  NCB
CIU2_SRC_PP18_IP3_WDOG         0x0001070102481200  NCB
CIU2_SRC_PP18_IP3_WRKQ         0x0001070102480200  NCB
CIU2_SRC_PP18_IP4_GPIO         0x0001070102487400  NCB
CIU2_SRC_PP18_IP4_IO           0x0001070102484400  NCB
CIU2_SRC_PP18_IP4_MBOX         0x0001070102488400  NCB
CIU2_SRC_PP18_IP4_MEM          0x0001070102485400  NCB
CIU2_SRC_PP18_IP4_MIO          0x0001070102483400  NCB
CIU2_SRC_PP18_IP4_PKT          0x0001070102486400  NCB
CIU2_SRC_PP18_IP4_RML          0x0001070102482400  NCB
CIU2_SRC_PP18_IP4_WDOG         0x0001070102481400  NCB
CIU2_SRC_PP18_IP4_WRKQ         0x0001070102480400  NCB
CIU2_SRC_PP19_IP2_GPIO         0x0001070102687000  NCB
CIU2_SRC_PP19_IP2_IO           0x0001070102684000  NCB
CIU2_SRC_PP19_IP2_MBOX         0x0001070102688000  NCB
CIU2_SRC_PP19_IP2_MEM          0x0001070102685000  NCB
CIU2_SRC_PP19_IP2_MIO          0x0001070102683000  NCB
CIU2_SRC_PP19_IP2_PKT          0x0001070102686000  NCB
CIU2_SRC_PP19_IP2_RML          0x0001070102682000  NCB
CIU2_SRC_PP19_IP2_WDOG         0x0001070102681000  NCB
CIU2_SRC_PP19_IP2_WRKQ         0x0001070102680000  NCB
CIU2_SRC_PP19_IP3_GPIO         0x0001070102687200  NCB
CIU2_SRC_PP19_IP3_IO           0x0001070102684200  NCB
CIU2_SRC_PP19_IP3_MBOX         0x0001070102688200  NCB
CIU2_SRC_PP19_IP3_MEM          0x0001070102685200  NCB
CIU2_SRC_PP19_IP3_MIO          0x0001070102683200  NCB
CIU2_SRC_PP19_IP3_PKT          0x0001070102686200  NCB
CIU2_SRC_PP19_IP3_RML          0x0001070102682200  NCB
CIU2_SRC_PP19_IP3_WDOG         0x0001070102681200  NCB
CIU2_SRC_PP19_IP3_WRKQ         0x0001070102680200  NCB
CIU2_SRC_PP19_IP4_GPIO         0x0001070102687400  NCB
CIU2_SRC_PP19_IP4_IO           0x0001070102684400  NCB
CIU2_SRC_PP19_IP4_MBOX         0x0001070102688400  NCB
CIU2_SRC_PP19_IP4_MEM          0x0001070102685400  NCB
CIU2_SRC_PP19_IP4_MIO          0x0001070102683400  NCB
CIU2_SRC_PP19_IP4_PKT          0x0001070102686400  NCB
CIU2_SRC_PP19_IP4_RML          0x0001070102682400  NCB
CIU2_SRC_PP19_IP4_WDOG         0x0001070102681400  NCB
CIU2_SRC_PP19_IP4_WRKQ         0x0001070102680400  NCB
CIU2_SRC_PP20_IP2_GPIO         0x0001070102887000  NCB
CIU2_SRC_PP20_IP2_IO           0x0001070102884000  NCB
CIU2_SRC_PP20_IP2_MBOX         0x0001070102888000  NCB
CIU2_SRC_PP20_IP2_MEM          0x0001070102885000  NCB
CIU2_SRC_PP20_IP2_MIO          0x0001070102883000  NCB
CIU2_SRC_PP20_IP2_PKT          0x0001070102886000  NCB
CIU2_SRC_PP20_IP2_RML          0x0001070102882000  NCB
CIU2_SRC_PP20_IP2_WDOG         0x0001070102881000  NCB
CIU2_SRC_PP20_IP2_WRKQ         0x0001070102880000  NCB
CIU2_SRC_PP20_IP3_GPIO         0x0001070102887200  NCB
CIU2_SRC_PP20_IP3_IO           0x0001070102884200  NCB
CIU2_SRC_PP20_IP3_MBOX         0x0001070102888200  NCB
CIU2_SRC_PP20_IP3_MEM          0x0001070102885200  NCB
CIU2_SRC_PP20_IP3_MIO          0x0001070102883200  NCB
CIU2_SRC_PP20_IP3_PKT          0x0001070102886200  NCB
CIU2_SRC_PP20_IP3_RML          0x0001070102882200  NCB
CIU2_SRC_PP20_IP3_WDOG         0x0001070102881200  NCB
CIU2_SRC_PP20_IP3_WRKQ         0x0001070102880200  NCB
CIU2_SRC_PP20_IP4_GPIO         0x0001070102887400  NCB
CIU2_SRC_PP20_IP4_IO           0x0001070102884400  NCB
CIU2_SRC_PP20_IP4_MBOX         0x0001070102888400  NCB
CIU2_SRC_PP20_IP4_MEM          0x0001070102885400  NCB
CIU2_SRC_PP20_IP4_MIO          0x0001070102883400  NCB
CIU2_SRC_PP20_IP4_PKT          0x0001070102886400  NCB
CIU2_SRC_PP20_IP4_RML          0x0001070102882400  NCB
CIU2_SRC_PP20_IP4_WDOG         0x0001070102881400  NCB
CIU2_SRC_PP20_IP4_WRKQ         0x0001070102880400  NCB
CIU2_SRC_PP21_IP2_GPIO         0x0001070102A87000  NCB
CIU2_SRC_PP21_IP2_IO           0x0001070102A84000  NCB
CIU2_SRC_PP21_IP2_MBOX         0x0001070102A88000  NCB
CIU2_SRC_PP21_IP2_MEM          0x0001070102A85000  NCB
CIU2_SRC_PP21_IP2_MIO          0x0001070102A83000  NCB
CIU2_SRC_PP21_IP2_PKT          0x0001070102A86000  NCB
CIU2_SRC_PP21_IP2_RML          0x0001070102A82000  NCB
CIU2_SRC_PP21_IP2_WDOG         0x0001070102A81000  NCB
CIU2_SRC_PP21_IP2_WRKQ         0x0001070102A80000  NCB
CIU2_SRC_PP21_IP3_GPIO         0x0001070102A87200  NCB
CIU2_SRC_PP21_IP3_IO           0x0001070102A84200  NCB
CIU2_SRC_PP21_IP3_MBOX         0x0001070102A88200  NCB
CIU2_SRC_PP21_IP3_MEM          0x0001070102A85200  NCB
CIU2_SRC_PP21_IP3_MIO          0x0001070102A83200  NCB
CIU2_SRC_PP21_IP3_PKT          0x0001070102A86200  NCB
CIU2_SRC_PP21_IP3_RML          0x0001070102A82200  NCB
CIU2_SRC_PP21_IP3_WDOG         0x0001070102A81200  NCB
CIU2_SRC_PP21_IP3_WRKQ         0x0001070102A80200  NCB
CIU2_SRC_PP21_IP4_GPIO         0x0001070102A87400  NCB
CIU2_SRC_PP21_IP4_IO           0x0001070102A84400  NCB
CIU2_SRC_PP21_IP4_MBOX         0x0001070102A88400  NCB
CIU2_SRC_PP21_IP4_MEM          0x0001070102A85400  NCB
CIU2_SRC_PP21_IP4_MIO          0x0001070102A83400  NCB
CIU2_SRC_PP21_IP4_PKT          0x0001070102A86400  NCB
CIU2_SRC_PP21_IP4_RML          0x0001070102A82400  NCB
CIU2_SRC_PP21_IP4_WDOG         0x0001070102A81400  NCB
CIU2_SRC_PP21_IP4_WRKQ         0x0001070102A80400  NCB
CIU2_SRC_PP22_IP2_GPIO         0x0001070102C87000  NCB
CIU2_SRC_PP22_IP2_IO           0x0001070102C84000  NCB
CIU2_SRC_PP22_IP2_MBOX         0x0001070102C88000  NCB
CIU2_SRC_PP22_IP2_MEM          0x0001070102C85000  NCB
CIU2_SRC_PP22_IP2_MIO          0x0001070102C83000  NCB
CIU2_SRC_PP22_IP2_PKT          0x0001070102C86000  NCB
CIU2_SRC_PP22_IP2_RML          0x0001070102C82000  NCB
CIU2_SRC_PP22_IP2_WDOG         0x0001070102C81000  NCB
CIU2_SRC_PP22_IP2_WRKQ         0x0001070102C80000  NCB
CIU2_SRC_PP22_IP3_GPIO         0x0001070102C87200  NCB
CIU2_SRC_PP22_IP3_IO           0x0001070102C84200  NCB
CIU2_SRC_PP22_IP3_MBOX         0x0001070102C88200  NCB
CIU2_SRC_PP22_IP3_MEM          0x0001070102C85200  NCB
CIU2_SRC_PP22_IP3_MIO          0x0001070102C83200  NCB
CIU2_SRC_PP22_IP3_PKT          0x0001070102C86200  NCB
CIU2_SRC_PP22_IP3_RML          0x0001070102C82200  NCB
CIU2_SRC_PP22_IP3_WDOG         0x0001070102C81200  NCB
CIU2_SRC_PP22_IP3_WRKQ         0x0001070102C80200  NCB
CIU2_SRC_PP22_IP4_GPIO         0x0001070102C87400  NCB
CIU2_SRC_PP22_IP4_IO           0x0001070102C84400  NCB
CIU2_SRC_PP22_IP4_MBOX         0x0001070102C88400  NCB
CIU2_SRC_PP22_IP4_MEM          0x0001070102C85400  NCB
CIU2_SRC_PP22_IP4_MIO          0x0001070102C83400  NCB
CIU2_SRC_PP22_IP4_PKT          0x0001070102C86400  NCB
CIU2_SRC_PP22_IP4_RML          0x0001070102C82400  NCB
CIU2_SRC_PP22_IP4_WDOG         0x0001070102C81400  NCB
CIU2_SRC_PP22_IP4_WRKQ         0x0001070102C80400  NCB
CIU2_SRC_PP23_IP2_GPIO         0x0001070102E87000  NCB
CIU2_SRC_PP23_IP2_IO           0x0001070102E84000  NCB
CIU2_SRC_PP23_IP2_MBOX         0x0001070102E88000  NCB
CIU2_SRC_PP23_IP2_MEM          0x0001070102E85000  NCB
CIU2_SRC_PP23_IP2_MIO          0x0001070102E83000  NCB
CIU2_SRC_PP23_IP2_PKT          0x0001070102E86000  NCB
CIU2_SRC_PP23_IP2_RML          0x0001070102E82000  NCB
CIU2_SRC_PP23_IP2_WDOG         0x0001070102E81000  NCB
CIU2_SRC_PP23_IP2_WRKQ         0x0001070102E80000  NCB
CIU2_SRC_PP23_IP3_GPIO         0x0001070102E87200  NCB
CIU2_SRC_PP23_IP3_IO           0x0001070102E84200  NCB
CIU2_SRC_PP23_IP3_MBOX         0x0001070102E88200  NCB
CIU2_SRC_PP23_IP3_MEM          0x0001070102E85200  NCB
CIU2_SRC_PP23_IP3_MIO          0x0001070102E83200  NCB
CIU2_SRC_PP23_IP3_PKT          0x0001070102E86200  NCB
CIU2_SRC_PP23_IP3_RML          0x0001070102E82200  NCB
CIU2_SRC_PP23_IP3_WDOG         0x0001070102E81200  NCB
CIU2_SRC_PP23_IP3_WRKQ         0x0001070102E80200  NCB
CIU2_SRC_PP23_IP4_GPIO         0x0001070102E87400  NCB
CIU2_SRC_PP23_IP4_IO           0x0001070102E84400  NCB
CIU2_SRC_PP23_IP4_MBOX         0x0001070102E88400  NCB
CIU2_SRC_PP23_IP4_MEM          0x0001070102E85400  NCB
CIU2_SRC_PP23_IP4_MIO          0x0001070102E83400  NCB
CIU2_SRC_PP23_IP4_PKT          0x0001070102E86400  NCB
CIU2_SRC_PP23_IP4_RML          0x0001070102E82400  NCB
CIU2_SRC_PP23_IP4_WDOG         0x0001070102E81400  NCB
CIU2_SRC_PP23_IP4_WRKQ         0x0001070102E80400  NCB
CIU2_SRC_PP24_IP2_GPIO         0x0001070103087000  NCB
CIU2_SRC_PP24_IP2_IO           0x0001070103084000  NCB
CIU2_SRC_PP24_IP2_MBOX         0x0001070103088000  NCB
CIU2_SRC_PP24_IP2_MEM          0x0001070103085000  NCB
CIU2_SRC_PP24_IP2_MIO          0x0001070103083000  NCB
CIU2_SRC_PP24_IP2_PKT          0x0001070103086000  NCB
CIU2_SRC_PP24_IP2_RML          0x0001070103082000  NCB
CIU2_SRC_PP24_IP2_WDOG         0x0001070103081000  NCB
CIU2_SRC_PP24_IP2_WRKQ         0x0001070103080000  NCB
CIU2_SRC_PP24_IP3_GPIO         0x0001070103087200  NCB
CIU2_SRC_PP24_IP3_IO           0x0001070103084200  NCB
CIU2_SRC_PP24_IP3_MBOX         0x0001070103088200  NCB
CIU2_SRC_PP24_IP3_MEM          0x0001070103085200  NCB
CIU2_SRC_PP24_IP3_MIO          0x0001070103083200  NCB
CIU2_SRC_PP24_IP3_PKT          0x0001070103086200  NCB
CIU2_SRC_PP24_IP3_RML          0x0001070103082200  NCB
CIU2_SRC_PP24_IP3_WDOG         0x0001070103081200  NCB
CIU2_SRC_PP24_IP3_WRKQ         0x0001070103080200  NCB
CIU2_SRC_PP24_IP4_GPIO         0x0001070103087400  NCB
CIU2_SRC_PP24_IP4_IO           0x0001070103084400  NCB
CIU2_SRC_PP24_IP4_MBOX         0x0001070103088400  NCB
CIU2_SRC_PP24_IP4_MEM          0x0001070103085400  NCB
CIU2_SRC_PP24_IP4_MIO          0x0001070103083400  NCB
CIU2_SRC_PP24_IP4_PKT          0x0001070103086400  NCB
CIU2_SRC_PP24_IP4_RML          0x0001070103082400  NCB
CIU2_SRC_PP24_IP4_WDOG         0x0001070103081400  NCB
CIU2_SRC_PP24_IP4_WRKQ         0x0001070103080400  NCB
CIU2_SRC_PP25_IP2_GPIO         0x0001070103287000  NCB
CIU2_SRC_PP25_IP2_IO           0x0001070103284000  NCB
CIU2_SRC_PP25_IP2_MBOX         0x0001070103288000  NCB
CIU2_SRC_PP25_IP2_MEM          0x0001070103285000  NCB
CIU2_SRC_PP25_IP2_MIO          0x0001070103283000  NCB
CIU2_SRC_PP25_IP2_PKT          0x0001070103286000  NCB
CIU2_SRC_PP25_IP2_RML          0x0001070103282000  NCB
CIU2_SRC_PP25_IP2_WDOG         0x0001070103281000  NCB
CIU2_SRC_PP25_IP2_WRKQ         0x0001070103280000  NCB
CIU2_SRC_PP25_IP3_GPIO         0x0001070103287200  NCB
CIU2_SRC_PP25_IP3_IO           0x0001070103284200  NCB
CIU2_SRC_PP25_IP3_MBOX         0x0001070103288200  NCB
CIU2_SRC_PP25_IP3_MEM          0x0001070103285200  NCB
CIU2_SRC_PP25_IP3_MIO          0x0001070103283200  NCB
CIU2_SRC_PP25_IP3_PKT          0x0001070103286200  NCB
CIU2_SRC_PP25_IP3_RML          0x0001070103282200  NCB
CIU2_SRC_PP25_IP3_WDOG         0x0001070103281200  NCB
CIU2_SRC_PP25_IP3_WRKQ         0x0001070103280200  NCB
CIU2_SRC_PP25_IP4_GPIO         0x0001070103287400  NCB
CIU2_SRC_PP25_IP4_IO           0x0001070103284400  NCB
CIU2_SRC_PP25_IP4_MBOX         0x0001070103288400  NCB
CIU2_SRC_PP25_IP4_MEM          0x0001070103285400  NCB
CIU2_SRC_PP25_IP4_MIO          0x0001070103283400  NCB
CIU2_SRC_PP25_IP4_PKT          0x0001070103286400  NCB
CIU2_SRC_PP25_IP4_RML          0x0001070103282400  NCB
CIU2_SRC_PP25_IP4_WDOG         0x0001070103281400  NCB
CIU2_SRC_PP25_IP4_WRKQ         0x0001070103280400  NCB
CIU2_SRC_PP26_IP2_GPIO         0x0001070103487000  NCB
CIU2_SRC_PP26_IP2_IO           0x0001070103484000  NCB
CIU2_SRC_PP26_IP2_MBOX         0x0001070103488000  NCB
CIU2_SRC_PP26_IP2_MEM          0x0001070103485000  NCB
CIU2_SRC_PP26_IP2_MIO          0x0001070103483000  NCB
CIU2_SRC_PP26_IP2_PKT          0x0001070103486000  NCB
CIU2_SRC_PP26_IP2_RML          0x0001070103482000  NCB
CIU2_SRC_PP26_IP2_WDOG         0x0001070103481000  NCB
CIU2_SRC_PP26_IP2_WRKQ         0x0001070103480000  NCB
CIU2_SRC_PP26_IP3_GPIO         0x0001070103487200  NCB
CIU2_SRC_PP26_IP3_IO           0x0001070103484200  NCB
CIU2_SRC_PP26_IP3_MBOX         0x0001070103488200  NCB
CIU2_SRC_PP26_IP3_MEM          0x0001070103485200  NCB
CIU2_SRC_PP26_IP3_MIO          0x0001070103483200  NCB
CIU2_SRC_PP26_IP3_PKT          0x0001070103486200  NCB
CIU2_SRC_PP26_IP3_RML          0x0001070103482200  NCB
CIU2_SRC_PP26_IP3_WDOG         0x0001070103481200  NCB
CIU2_SRC_PP26_IP3_WRKQ         0x0001070103480200  NCB
CIU2_SRC_PP26_IP4_GPIO         0x0001070103487400  NCB
CIU2_SRC_PP26_IP4_IO           0x0001070103484400  NCB
CIU2_SRC_PP26_IP4_MBOX         0x0001070103488400  NCB
CIU2_SRC_PP26_IP4_MEM          0x0001070103485400  NCB
CIU2_SRC_PP26_IP4_MIO          0x0001070103483400  NCB
CIU2_SRC_PP26_IP4_PKT          0x0001070103486400  NCB
CIU2_SRC_PP26_IP4_RML          0x0001070103482400  NCB
CIU2_SRC_PP26_IP4_WDOG         0x0001070103481400  NCB
CIU2_SRC_PP26_IP4_WRKQ         0x0001070103480400  NCB
CIU2_SRC_PP27_IP2_GPIO         0x0001070103687000  NCB
CIU2_SRC_PP27_IP2_IO           0x0001070103684000  NCB
CIU2_SRC_PP27_IP2_MBOX         0x0001070103688000  NCB
CIU2_SRC_PP27_IP2_MEM          0x0001070103685000  NCB
CIU2_SRC_PP27_IP2_MIO          0x0001070103683000  NCB
CIU2_SRC_PP27_IP2_PKT          0x0001070103686000  NCB
CIU2_SRC_PP27_IP2_RML          0x0001070103682000  NCB
CIU2_SRC_PP27_IP2_WDOG         0x0001070103681000  NCB
CIU2_SRC_PP27_IP2_WRKQ         0x0001070103680000  NCB
CIU2_SRC_PP27_IP3_GPIO         0x0001070103687200  NCB
CIU2_SRC_PP27_IP3_IO           0x0001070103684200  NCB
CIU2_SRC_PP27_IP3_MBOX         0x0001070103688200  NCB
CIU2_SRC_PP27_IP3_MEM          0x0001070103685200  NCB
CIU2_SRC_PP27_IP3_MIO          0x0001070103683200  NCB
CIU2_SRC_PP27_IP3_PKT          0x0001070103686200  NCB
CIU2_SRC_PP27_IP3_RML          0x0001070103682200  NCB
CIU2_SRC_PP27_IP3_WDOG         0x0001070103681200  NCB
CIU2_SRC_PP27_IP3_WRKQ         0x0001070103680200  NCB
CIU2_SRC_PP27_IP4_GPIO         0x0001070103687400  NCB
CIU2_SRC_PP27_IP4_IO           0x0001070103684400  NCB
CIU2_SRC_PP27_IP4_MBOX         0x0001070103688400  NCB
CIU2_SRC_PP27_IP4_MEM          0x0001070103685400  NCB
CIU2_SRC_PP27_IP4_MIO          0x0001070103683400  NCB
CIU2_SRC_PP27_IP4_PKT          0x0001070103686400  NCB
CIU2_SRC_PP27_IP4_RML          0x0001070103682400  NCB
CIU2_SRC_PP27_IP4_WDOG         0x0001070103681400  NCB
CIU2_SRC_PP27_IP4_WRKQ         0x0001070103680400  NCB
CIU2_SRC_PP28_IP2_GPIO         0x0001070103887000  NCB
CIU2_SRC_PP28_IP2_IO           0x0001070103884000  NCB
CIU2_SRC_PP28_IP2_MBOX         0x0001070103888000  NCB
CIU2_SRC_PP28_IP2_MEM          0x0001070103885000  NCB
CIU2_SRC_PP28_IP2_MIO          0x0001070103883000  NCB
CIU2_SRC_PP28_IP2_PKT          0x0001070103886000  NCB
CIU2_SRC_PP28_IP2_RML          0x0001070103882000  NCB
CIU2_SRC_PP28_IP2_WDOG         0x0001070103881000  NCB
CIU2_SRC_PP28_IP2_WRKQ         0x0001070103880000  NCB
CIU2_SRC_PP28_IP3_GPIO         0x0001070103887200  NCB
CIU2_SRC_PP28_IP3_IO           0x0001070103884200  NCB
CIU2_SRC_PP28_IP3_MBOX         0x0001070103888200  NCB
CIU2_SRC_PP28_IP3_MEM          0x0001070103885200  NCB
CIU2_SRC_PP28_IP3_MIO          0x0001070103883200  NCB
CIU2_SRC_PP28_IP3_PKT          0x0001070103886200  NCB
CIU2_SRC_PP28_IP3_RML          0x0001070103882200  NCB
CIU2_SRC_PP28_IP3_WDOG         0x0001070103881200  NCB
CIU2_SRC_PP28_IP3_WRKQ         0x0001070103880200  NCB
CIU2_SRC_PP28_IP4_GPIO         0x0001070103887400  NCB
CIU2_SRC_PP28_IP4_IO           0x0001070103884400  NCB
CIU2_SRC_PP28_IP4_MBOX         0x0001070103888400  NCB
CIU2_SRC_PP28_IP4_MEM          0x0001070103885400  NCB
CIU2_SRC_PP28_IP4_MIO          0x0001070103883400  NCB
CIU2_SRC_PP28_IP4_PKT          0x0001070103886400  NCB
CIU2_SRC_PP28_IP4_RML          0x0001070103882400  NCB
CIU2_SRC_PP28_IP4_WDOG         0x0001070103881400  NCB
CIU2_SRC_PP28_IP4_WRKQ         0x0001070103880400  NCB
CIU2_SRC_PP29_IP2_GPIO         0x0001070103A87000  NCB
CIU2_SRC_PP29_IP2_IO           0x0001070103A84000  NCB
CIU2_SRC_PP29_IP2_MBOX         0x0001070103A88000  NCB
CIU2_SRC_PP29_IP2_MEM          0x0001070103A85000  NCB
CIU2_SRC_PP29_IP2_MIO          0x0001070103A83000  NCB
CIU2_SRC_PP29_IP2_PKT          0x0001070103A86000  NCB
CIU2_SRC_PP29_IP2_RML          0x0001070103A82000  NCB
CIU2_SRC_PP29_IP2_WDOG         0x0001070103A81000  NCB
CIU2_SRC_PP29_IP2_WRKQ         0x0001070103A80000  NCB
CIU2_SRC_PP29_IP3_GPIO         0x0001070103A87200  NCB
CIU2_SRC_PP29_IP3_IO           0x0001070103A84200  NCB
CIU2_SRC_PP29_IP3_MBOX         0x0001070103A88200  NCB
CIU2_SRC_PP29_IP3_MEM          0x0001070103A85200  NCB
CIU2_SRC_PP29_IP3_MIO          0x0001070103A83200  NCB
CIU2_SRC_PP29_IP3_PKT          0x0001070103A86200  NCB
CIU2_SRC_PP29_IP3_RML          0x0001070103A82200  NCB
CIU2_SRC_PP29_IP3_WDOG         0x0001070103A81200  NCB
CIU2_SRC_PP29_IP3_WRKQ         0x0001070103A80200  NCB
CIU2_SRC_PP29_IP4_GPIO         0x0001070103A87400  NCB
CIU2_SRC_PP29_IP4_IO           0x0001070103A84400  NCB
CIU2_SRC_PP29_IP4_MBOX         0x0001070103A88400  NCB
CIU2_SRC_PP29_IP4_MEM          0x0001070103A85400  NCB
CIU2_SRC_PP29_IP4_MIO          0x0001070103A83400  NCB
CIU2_SRC_PP29_IP4_PKT          0x0001070103A86400  NCB
CIU2_SRC_PP29_IP4_RML          0x0001070103A82400  NCB
CIU2_SRC_PP29_IP4_WDOG         0x0001070103A81400  NCB
CIU2_SRC_PP29_IP4_WRKQ         0x0001070103A80400  NCB
CIU2_SRC_PP30_IP2_GPIO         0x0001070103C87000  NCB
CIU2_SRC_PP30_IP2_IO           0x0001070103C84000  NCB
CIU2_SRC_PP30_IP2_MBOX         0x0001070103C88000  NCB
CIU2_SRC_PP30_IP2_MEM          0x0001070103C85000  NCB
CIU2_SRC_PP30_IP2_MIO          0x0001070103C83000  NCB
CIU2_SRC_PP30_IP2_PKT          0x0001070103C86000  NCB
CIU2_SRC_PP30_IP2_RML          0x0001070103C82000  NCB
CIU2_SRC_PP30_IP2_WDOG         0x0001070103C81000  NCB
CIU2_SRC_PP30_IP2_WRKQ         0x0001070103C80000  NCB
CIU2_SRC_PP30_IP3_GPIO         0x0001070103C87200  NCB
CIU2_SRC_PP30_IP3_IO           0x0001070103C84200  NCB
CIU2_SRC_PP30_IP3_MBOX         0x0001070103C88200  NCB
CIU2_SRC_PP30_IP3_MEM          0x0001070103C85200  NCB
CIU2_SRC_PP30_IP3_MIO          0x0001070103C83200  NCB
CIU2_SRC_PP30_IP3_PKT          0x0001070103C86200  NCB
CIU2_SRC_PP30_IP3_RML          0x0001070103C82200  NCB
CIU2_SRC_PP30_IP3_WDOG         0x0001070103C81200  NCB
CIU2_SRC_PP30_IP3_WRKQ         0x0001070103C80200  NCB
CIU2_SRC_PP30_IP4_GPIO         0x0001070103C87400  NCB
CIU2_SRC_PP30_IP4_IO           0x0001070103C84400  NCB
CIU2_SRC_PP30_IP4_MBOX         0x0001070103C88400  NCB
CIU2_SRC_PP30_IP4_MEM          0x0001070103C85400  NCB
CIU2_SRC_PP30_IP4_MIO          0x0001070103C83400  NCB
CIU2_SRC_PP30_IP4_PKT          0x0001070103C86400  NCB
CIU2_SRC_PP30_IP4_RML          0x0001070103C82400  NCB
CIU2_SRC_PP30_IP4_WDOG         0x0001070103C81400  NCB
CIU2_SRC_PP30_IP4_WRKQ         0x0001070103C80400  NCB
CIU2_SRC_PP31_IP2_GPIO         0x0001070103E87000  NCB
CIU2_SRC_PP31_IP2_IO           0x0001070103E84000  NCB
CIU2_SRC_PP31_IP2_MBOX         0x0001070103E88000  NCB
CIU2_SRC_PP31_IP2_MEM          0x0001070103E85000  NCB
CIU2_SRC_PP31_IP2_MIO          0x0001070103E83000  NCB
CIU2_SRC_PP31_IP2_PKT          0x0001070103E86000  NCB
CIU2_SRC_PP31_IP2_RML          0x0001070103E82000  NCB
CIU2_SRC_PP31_IP2_WDOG         0x0001070103E81000  NCB
CIU2_SRC_PP31_IP2_WRKQ         0x0001070103E80000  NCB
CIU2_SRC_PP31_IP3_GPIO         0x0001070103E87200  NCB
CIU2_SRC_PP31_IP3_IO           0x0001070103E84200  NCB
CIU2_SRC_PP31_IP3_MBOX         0x0001070103E88200  NCB
CIU2_SRC_PP31_IP3_MEM          0x0001070103E85200  NCB
CIU2_SRC_PP31_IP3_MIO          0x0001070103E83200  NCB
CIU2_SRC_PP31_IP3_PKT          0x0001070103E86200  NCB
CIU2_SRC_PP31_IP3_RML          0x0001070103E82200  NCB
CIU2_SRC_PP31_IP3_WDOG         0x0001070103E81200  NCB
CIU2_SRC_PP31_IP3_WRKQ         0x0001070103E80200  NCB
CIU2_SRC_PP31_IP4_GPIO         0x0001070103E87400  NCB
CIU2_SRC_PP31_IP4_IO           0x0001070103E84400  NCB
CIU2_SRC_PP31_IP4_MBOX         0x0001070103E88400  NCB
CIU2_SRC_PP31_IP4_MEM          0x0001070103E85400  NCB
CIU2_SRC_PP31_IP4_MIO          0x0001070103E83400  NCB
CIU2_SRC_PP31_IP4_PKT          0x0001070103E86400  NCB
CIU2_SRC_PP31_IP4_RML          0x0001070103E82400  NCB
CIU2_SRC_PP31_IP4_WDOG         0x0001070103E81400  NCB
CIU2_SRC_PP31_IP4_WRKQ         0x0001070103E80400  NCB
CIU2_SUM_IO0_INT               0x0001070100000800  NCB
CIU2_SUM_IO1_INT               0x0001070100000808  NCB
CIU2_SUM_PP0_IP2               0x0001070100000000  NCB
CIU2_SUM_PP0_IP3               0x0001070100000200  NCB
CIU2_SUM_PP0_IP4               0x0001070100000400  NCB
CIU2_SUM_PP1_IP2               0x0001070100000008  NCB
CIU2_SUM_PP1_IP3               0x0001070100000208  NCB
CIU2_SUM_PP1_IP4               0x0001070100000408  NCB
CIU2_SUM_PP2_IP2               0x0001070100000010  NCB
CIU2_SUM_PP2_IP3               0x0001070100000210  NCB
CIU2_SUM_PP2_IP4               0x0001070100000410  NCB
CIU2_SUM_PP3_IP2               0x0001070100000018  NCB
CIU2_SUM_PP3_IP3               0x0001070100000218  NCB
CIU2_SUM_PP3_IP4               0x0001070100000418  NCB
CIU2_SUM_PP4_IP2               0x0001070100000020  NCB
CIU2_SUM_PP4_IP3               0x0001070100000220  NCB
CIU2_SUM_PP4_IP4               0x0001070100000420  NCB
CIU2_SUM_PP5_IP2               0x0001070100000028  NCB
CIU2_SUM_PP5_IP3               0x0001070100000228  NCB
CIU2_SUM_PP5_IP4               0x0001070100000428  NCB
CIU2_SUM_PP6_IP2               0x0001070100000030  NCB
CIU2_SUM_PP6_IP3               0x0001070100000230  NCB
CIU2_SUM_PP6_IP4               0x0001070100000430  NCB
CIU2_SUM_PP7_IP2               0x0001070100000038  NCB
CIU2_SUM_PP7_IP3               0x0001070100000238  NCB
CIU2_SUM_PP7_IP4               0x0001070100000438  NCB
CIU2_SUM_PP8_IP2               0x0001070100000040  NCB
CIU2_SUM_PP8_IP3               0x0001070100000240  NCB
CIU2_SUM_PP8_IP4               0x0001070100000440  NCB
CIU2_SUM_PP9_IP2               0x0001070100000048  NCB
CIU2_SUM_PP9_IP3               0x0001070100000248  NCB
CIU2_SUM_PP9_IP4               0x0001070100000448  NCB
CIU2_SUM_PP10_IP2              0x0001070100000050  NCB
CIU2_SUM_PP10_IP3              0x0001070100000250  NCB
CIU2_SUM_PP10_IP4              0x0001070100000450  NCB
CIU2_SUM_PP11_IP2              0x0001070100000058  NCB
CIU2_SUM_PP11_IP3              0x0001070100000258  NCB
CIU2_SUM_PP11_IP4              0x0001070100000458  NCB
CIU2_SUM_PP12_IP2              0x0001070100000060  NCB
CIU2_SUM_PP12_IP3              0x0001070100000260  NCB
CIU2_SUM_PP12_IP4              0x0001070100000460  NCB
CIU2_SUM_PP13_IP2              0x0001070100000068  NCB
CIU2_SUM_PP13_IP3              0x0001070100000268  NCB
CIU2_SUM_PP13_IP4              0x0001070100000468  NCB
CIU2_SUM_PP14_IP2              0x0001070100000070  NCB
CIU2_SUM_PP14_IP3              0x0001070100000270  NCB
CIU2_SUM_PP14_IP4              0x0001070100000470  NCB
CIU2_SUM_PP15_IP2              0x0001070100000078  NCB
CIU2_SUM_PP15_IP3              0x0001070100000278  NCB
CIU2_SUM_PP15_IP4              0x0001070100000478  NCB
CIU2_SUM_PP16_IP2              0x0001070100000080  NCB
CIU2_SUM_PP16_IP3              0x0001070100000280  NCB
CIU2_SUM_PP16_IP4              0x0001070100000480  NCB
CIU2_SUM_PP17_IP2              0x0001070100000088  NCB
CIU2_SUM_PP17_IP3              0x0001070100000288  NCB
CIU2_SUM_PP17_IP4              0x0001070100000488  NCB
CIU2_SUM_PP18_IP2              0x0001070100000090  NCB
CIU2_SUM_PP18_IP3              0x0001070100000290  NCB
CIU2_SUM_PP18_IP4              0x0001070100000490  NCB
CIU2_SUM_PP19_IP2              0x0001070100000098  NCB
CIU2_SUM_PP19_IP3              0x0001070100000298  NCB
CIU2_SUM_PP19_IP4              0x0001070100000498  NCB
CIU2_SUM_PP20_IP2              0x00010701000000A0  NCB
CIU2_SUM_PP20_IP3              0x00010701000002A0  NCB
CIU2_SUM_PP20_IP4              0x00010701000004A0  NCB
CIU2_SUM_PP21_IP2              0x00010701000000A8  NCB
CIU2_SUM_PP21_IP3              0x00010701000002A8  NCB
CIU2_SUM_PP21_IP4              0x00010701000004A8  NCB
CIU2_SUM_PP22_IP2              0x00010701000000B0  NCB
CIU2_SUM_PP22_IP3              0x00010701000002B0  NCB
CIU2_SUM_PP22_IP4              0x00010701000004B0  NCB
CIU2_SUM_PP23_IP2              0x00010701000000B8  NCB
CIU2_SUM_PP23_IP3              0x00010701000002B8  NCB
CIU2_SUM_PP23_IP4              0x00010701000004B8  NCB
CIU2_SUM_PP24_IP2              0x00010701000000C0  NCB
CIU2_SUM_PP24_IP3              0x00010701000002C0  NCB
CIU2_SUM_PP24_IP4              0x00010701000004C0  NCB
CIU2_SUM_PP25_IP2              0x00010701000000C8  NCB
CIU2_SUM_PP25_IP3              0x00010701000002C8  NCB
CIU2_SUM_PP25_IP4              0x00010701000004C8  NCB
CIU2_SUM_PP26_IP2              0x00010701000000D0  NCB
CIU2_SUM_PP26_IP3              0x00010701000002D0  NCB
CIU2_SUM_PP26_IP4              0x00010701000004D0  NCB
CIU2_SUM_PP27_IP2              0x00010701000000D8  NCB
CIU2_SUM_PP27_IP3              0x00010701000002D8  NCB
CIU2_SUM_PP27_IP4              0x00010701000004D8  NCB
CIU2_SUM_PP28_IP2              0x00010701000000E0  NCB
CIU2_SUM_PP28_IP3              0x00010701000002E0  NCB
CIU2_SUM_PP28_IP4              0x00010701000004E0  NCB
CIU2_SUM_PP29_IP2              0x00010701000000E8  NCB
CIU2_SUM_PP29_IP3              0x00010701000002E8  NCB
CIU2_SUM_PP29_IP4              0x00010701000004E8  NCB
CIU2_SUM_PP30_IP2              0x00010701000000F0  NCB
CIU2_SUM_PP30_IP3              0x00010701000002F0  NCB
CIU2_SUM_PP30_IP4              0x00010701000004F0  NCB
CIU2_SUM_PP31_IP2              0x00010701000000F8  NCB
CIU2_SUM_PP31_IP3              0x00010701000002F8  NCB
CIU2_SUM_PP31_IP4              0x00010701000004F8  NCB
CIU2_WDOG0                     0x0001070100100000  NCB
CIU2_WDOG1                     0x0001070100100008  NCB
CIU2_WDOG2                     0x0001070100100010  NCB
CIU2_WDOG3                     0x0001070100100018  NCB
CIU2_WDOG4                     0x0001070100100020  NCB
CIU2_WDOG5                     0x0001070100100028  NCB
CIU2_WDOG6                     0x0001070100100030  NCB
CIU2_WDOG7                     0x0001070100100038  NCB
CIU2_WDOG8                     0x0001070100100040  NCB
CIU2_WDOG9                     0x0001070100100048  NCB
CIU2_WDOG10                    0x0001070100100050  NCB
CIU2_WDOG11                    0x0001070100100058  NCB
CIU2_WDOG12                    0x0001070100100060  NCB
CIU2_WDOG13                    0x0001070100100068  NCB
CIU2_WDOG14                    0x0001070100100070  NCB
CIU2_WDOG15                    0x0001070100100078  NCB
CIU2_WDOG16                    0x0001070100100080  NCB
CIU2_WDOG17                    0x0001070100100088  NCB
CIU2_WDOG18                    0x0001070100100090  NCB
CIU2_WDOG19                    0x0001070100100098  NCB
CIU2_WDOG20                    0x00010701001000A0  NCB
CIU2_WDOG21                    0x00010701001000A8  NCB
CIU2_WDOG22                    0x00010701001000B0  NCB
CIU2_WDOG23                    0x00010701001000B8  NCB
CIU2_WDOG24                    0x00010701001000C0  NCB
CIU2_WDOG25                    0x00010701001000C8  NCB
CIU2_WDOG26                    0x00010701001000D0  NCB
CIU2_WDOG27                    0x00010701001000D8  NCB
CIU2_WDOG28                    0x00010701001000E0  NCB
CIU2_WDOG29                    0x00010701001000E8  NCB
CIU2_WDOG30                    0x00010701001000F0  NCB
CIU2_WDOG31                    0x00010701001000F8  NCB
CIU_BIST                       0x0001070000000730  NCB
CIU_DINT                       0x0001070000000720  NCB
CIU_FUSE                       0x0001070000000728  NCB
CIU_GSTOP                      0x0001070000000710  NCB
CIU_INT_DBG_SEL                0x00010700000007D0  NCB
CIU_NMI                        0x0001070000000718  NCB
CIU_PCI_INTA                   0x0001070000000750  NCB
CIU_PP_BIST_STAT               0x00010700000007E0  NCB
CIU_PP_DBG                     0x0001070000000708  NCB
CIU_PP_RST                     0x0001070000000700  NCB
CIU_QLM0                       0x0001070000000780  NCB
CIU_QLM1                       0x0001070000000788  NCB
CIU_QLM2                       0x0001070000000790  NCB
CIU_QLM3                       0x0001070000000798  NCB
CIU_QLM4                       0x00010700000007A0  NCB
CIU_QLM_JTGC                   0x0001070000000768  NCB
CIU_QLM_JTGD                   0x0001070000000770  NCB
CIU_SOFT_BIST                  0x0001070000000738  NCB
CIU_SOFT_PRST                  0x0001070000000748  NCB
CIU_SOFT_PRST1                 0x0001070000000758  NCB
CIU_SOFT_RST                   0x0001070000000740  NCB
CIU_TIM0                       0x0001070000000480  NCB
CIU_TIM1                       0x0001070000000488  NCB
CIU_TIM2                       0x0001070000000490  NCB
CIU_TIM3                       0x0001070000000498  NCB
DFA_BIST0                      0x00011800370007F0  RSL
DFA_BIST1                      0x00011800370007F8  RSL
DFA_CONFIG                     0x0001180037000000  RSL
DFA_CONTROL                    0x0001180037000020  RSL
DFA_DBELL                      0x0001370000000000  NCB
DFA_DEBUG0                     0x0001180037000040  RSL
DFA_DEBUG1                     0x0001180037000048  RSL
DFA_DEBUG2                     0x0001180037000050  RSL
DFA_DEBUG3                     0x0001180037000058  RSL
DFA_DIFCTL                     0x0001370600000000  NCB
DFA_DIFRDPTR                   0x0001370200000000  NCB
DFA_DTCFADR                    0x0001180037000060  RSL
DFA_ERROR                      0x0001180037000028  RSL
DFA_INTMSK                     0x0001180037000030  RSL
DFA_MEMHIDAT                   0x0001370700000000  NCB
DFA_PFC0_CNT                   0x0001180037000090  RSL
DFA_PFC0_CTL                   0x0001180037000088  RSL
DFA_PFC1_CNT                   0x00011800370000A0  RSL
DFA_PFC1_CTL                   0x0001180037000098  RSL
DFA_PFC2_CNT                   0x00011800370000B0  RSL
DFA_PFC2_CTL                   0x00011800370000A8  RSL
DFA_PFC3_CNT                   0x00011800370000C0  RSL
DFA_PFC3_CTL                   0x00011800370000B8  RSL
DFA_PFC_GCTL                   0x0001180037000080  RSL
DPI_BIST_STATUS                0x0001DF0000000000  NCB
DPI_CTL                        0x0001DF0000000040  NCB
DPI_DMA0_COUNTS                0x0001DF0000000300  NCB
DPI_DMA0_DBELL                 0x0001DF0000000200  NCB
DPI_DMA0_ERR_RSP_STATUS        0x0001DF0000000A80  NCB
DPI_DMA0_IBUFF_SADDR           0x0001DF0000000280  NCB
DPI_DMA0_IFLIGHT               0x0001DF0000000A00  NCB
DPI_DMA0_NADDR                 0x0001DF0000000380  NCB
DPI_DMA0_REQBNK0               0x0001DF0000000400  NCB
DPI_DMA0_REQBNK1               0x0001DF0000000480  NCB
DPI_DMA1_COUNTS                0x0001DF0000000308  NCB
DPI_DMA1_DBELL                 0x0001DF0000000208  NCB
DPI_DMA1_ERR_RSP_STATUS        0x0001DF0000000A88  NCB
DPI_DMA1_IBUFF_SADDR           0x0001DF0000000288  NCB
DPI_DMA1_IFLIGHT               0x0001DF0000000A08  NCB
DPI_DMA1_NADDR                 0x0001DF0000000388  NCB
DPI_DMA1_REQBNK0               0x0001DF0000000408  NCB
DPI_DMA1_REQBNK1               0x0001DF0000000488  NCB
DPI_DMA2_COUNTS                0x0001DF0000000310  NCB
DPI_DMA2_DBELL                 0x0001DF0000000210  NCB
DPI_DMA2_ERR_RSP_STATUS        0x0001DF0000000A90  NCB
DPI_DMA2_IBUFF_SADDR           0x0001DF0000000290  NCB
DPI_DMA2_IFLIGHT               0x0001DF0000000A10  NCB
DPI_DMA2_NADDR                 0x0001DF0000000390  NCB
DPI_DMA2_REQBNK0               0x0001DF0000000410  NCB
DPI_DMA2_REQBNK1               0x0001DF0000000490  NCB
DPI_DMA3_COUNTS                0x0001DF0000000318  NCB
DPI_DMA3_DBELL                 0x0001DF0000000218  NCB
DPI_DMA3_ERR_RSP_STATUS        0x0001DF0000000A98  NCB
DPI_DMA3_IBUFF_SADDR           0x0001DF0000000298  NCB
DPI_DMA3_IFLIGHT               0x0001DF0000000A18  NCB
DPI_DMA3_NADDR                 0x0001DF0000000398  NCB
DPI_DMA3_REQBNK0               0x0001DF0000000418  NCB
DPI_DMA3_REQBNK1               0x0001DF0000000498  NCB
DPI_DMA4_COUNTS                0x0001DF0000000320  NCB
DPI_DMA4_DBELL                 0x0001DF0000000220  NCB
DPI_DMA4_ERR_RSP_STATUS        0x0001DF0000000AA0  NCB
DPI_DMA4_IBUFF_SADDR           0x0001DF00000002A0  NCB
DPI_DMA4_IFLIGHT               0x0001DF0000000A20  NCB
DPI_DMA4_NADDR                 0x0001DF00000003A0  NCB
DPI_DMA4_REQBNK0               0x0001DF0000000420  NCB
DPI_DMA4_REQBNK1               0x0001DF00000004A0  NCB
DPI_DMA5_COUNTS                0x0001DF0000000328  NCB
DPI_DMA5_DBELL                 0x0001DF0000000228  NCB
DPI_DMA5_ERR_RSP_STATUS        0x0001DF0000000AA8  NCB
DPI_DMA5_IBUFF_SADDR           0x0001DF00000002A8  NCB
DPI_DMA5_IFLIGHT               0x0001DF0000000A28  NCB
DPI_DMA5_NADDR                 0x0001DF00000003A8  NCB
DPI_DMA5_REQBNK0               0x0001DF0000000428  NCB
DPI_DMA5_REQBNK1               0x0001DF00000004A8  NCB
DPI_DMA6_COUNTS                0x0001DF0000000330  NCB
DPI_DMA6_DBELL                 0x0001DF0000000230  NCB
DPI_DMA6_ERR_RSP_STATUS        0x0001DF0000000AB0  NCB
DPI_DMA6_IBUFF_SADDR           0x0001DF00000002B0  NCB
DPI_DMA6_IFLIGHT               0x0001DF0000000A30  NCB
DPI_DMA6_NADDR                 0x0001DF00000003B0  NCB
DPI_DMA6_REQBNK0               0x0001DF0000000430  NCB
DPI_DMA6_REQBNK1               0x0001DF00000004B0  NCB
DPI_DMA7_COUNTS                0x0001DF0000000338  NCB
DPI_DMA7_DBELL                 0x0001DF0000000238  NCB
DPI_DMA7_ERR_RSP_STATUS        0x0001DF0000000AB8  NCB
DPI_DMA7_IBUFF_SADDR           0x0001DF00000002B8  NCB
DPI_DMA7_IFLIGHT               0x0001DF0000000A38  NCB
DPI_DMA7_NADDR                 0x0001DF00000003B8  NCB
DPI_DMA7_REQBNK0               0x0001DF0000000438  NCB
DPI_DMA7_REQBNK1               0x0001DF00000004B8  NCB
DPI_DMA_CONTROL                0x0001DF0000000048  NCB
DPI_DMA_ENG0_EN                0x0001DF0000000080  NCB
DPI_DMA_ENG1_EN                0x0001DF0000000088  NCB
DPI_DMA_ENG2_EN                0x0001DF0000000090  NCB
DPI_DMA_ENG3_EN                0x0001DF0000000098  NCB
DPI_DMA_ENG4_EN                0x0001DF00000000A0  NCB
DPI_DMA_ENG5_EN                0x0001DF00000000A8  NCB
DPI_ENG0_BUF                   0x0001DF0000000880  NCB
DPI_ENG1_BUF                   0x0001DF0000000888  NCB
DPI_ENG2_BUF                   0x0001DF0000000890  NCB
DPI_ENG3_BUF                   0x0001DF0000000898  NCB
DPI_ENG4_BUF                   0x0001DF00000008A0  NCB
DPI_ENG5_BUF                   0x0001DF00000008A8  NCB
DPI_INFO_REG                   0x0001DF0000000980  NCB
DPI_INT_EN                     0x0001DF0000000010  NCB
DPI_INT_REG                    0x0001DF0000000008  NCB
DPI_PINT_INFO                  0x0001DF0000000830  NCB
DPI_PKT_ERR_RSP                0x0001DF0000000078  NCB
DPI_REQ_ERR_RSP                0x0001DF0000000058  NCB
DPI_REQ_ERR_RSP_EN             0x0001DF0000000068  NCB
DPI_REQ_ERR_RST                0x0001DF0000000060  NCB
DPI_REQ_ERR_RST_EN             0x0001DF0000000070  NCB
DPI_REQ_ERR_SKIP_COMP          0x0001DF0000000838  NCB
DPI_REQ_GBL_EN                 0x0001DF0000000050  NCB
DPI_SLI_PRT0_CFG               0x0001DF0000000900  NCB
DPI_SLI_PRT0_ERR               0x0001DF0000000928  NCB
DPI_SLI_PRT0_ERR_INFO          0x0001DF0000000940  NCB
DPI_SLI_PRT1_CFG               0x0001DF0000000908  NCB
DPI_SLI_PRT1_ERR               0x0001DF0000000930  NCB
DPI_SLI_PRT1_ERR_INFO          0x0001DF0000000948  NCB
FPA_ADDR_RANGE_ERROR           0x0001180028000458  RSL
FPA_BIST_STATUS                0x00011800280000E8  RSL
FPA_CTL_STATUS                 0x0001180028000050  RSL
FPA_FPF0_MARKS                 0x0001180028000000  RSL
FPA_FPF0_SIZE                  0x0001180028000058  RSL
FPA_FPF1_MARKS                 0x0001180028000008  RSL
FPA_FPF1_SIZE                  0x0001180028000060  RSL
FPA_FPF2_MARKS                 0x0001180028000010  RSL
FPA_FPF2_SIZE                  0x0001180028000068  RSL
FPA_FPF3_MARKS                 0x0001180028000018  RSL
FPA_FPF3_SIZE                  0x0001180028000070  RSL
FPA_FPF4_MARKS                 0x0001180028000020  RSL
FPA_FPF4_SIZE                  0x0001180028000078  RSL
FPA_FPF5_MARKS                 0x0001180028000028  RSL
FPA_FPF5_SIZE                  0x0001180028000080  RSL
FPA_FPF6_MARKS                 0x0001180028000030  RSL
FPA_FPF6_SIZE                  0x0001180028000088  RSL
FPA_FPF7_MARKS                 0x0001180028000038  RSL
FPA_FPF7_SIZE                  0x0001180028000090  RSL
FPA_FPF8_MARKS                 0x0001180028000240  RSL
FPA_FPF8_SIZE                  0x0001180028000248  RSL
FPA_INT_ENB                    0x0001180028000048  RSL
FPA_INT_SUM                    0x0001180028000040  RSL
FPA_PACKET_THRESHOLD           0x0001180028000460  RSL
FPA_POOL0_END_ADDR             0x0001180028000358  RSL
FPA_POOL0_START_ADDR           0x0001180028000258  RSL
FPA_POOL0_THRESHOLD            0x0001180028000140  RSL
FPA_POOL1_END_ADDR             0x0001180028000360  RSL
FPA_POOL1_START_ADDR           0x0001180028000260  RSL
FPA_POOL1_THRESHOLD            0x0001180028000148  RSL
FPA_POOL2_END_ADDR             0x0001180028000368  RSL
FPA_POOL2_START_ADDR           0x0001180028000268  RSL
FPA_POOL2_THRESHOLD            0x0001180028000150  RSL
FPA_POOL3_END_ADDR             0x0001180028000370  RSL
FPA_POOL3_START_ADDR           0x0001180028000270  RSL
FPA_POOL3_THRESHOLD            0x0001180028000158  RSL
FPA_POOL4_END_ADDR             0x0001180028000378  RSL
FPA_POOL4_START_ADDR           0x0001180028000278  RSL
FPA_POOL4_THRESHOLD            0x0001180028000160  RSL
FPA_POOL5_END_ADDR             0x0001180028000380  RSL
FPA_POOL5_START_ADDR           0x0001180028000280  RSL
FPA_POOL5_THRESHOLD            0x0001180028000168  RSL
FPA_POOL6_END_ADDR             0x0001180028000388  RSL
FPA_POOL6_START_ADDR           0x0001180028000288  RSL
FPA_POOL6_THRESHOLD            0x0001180028000170  RSL
FPA_POOL7_END_ADDR             0x0001180028000390  RSL
FPA_POOL7_START_ADDR           0x0001180028000290  RSL
FPA_POOL7_THRESHOLD            0x0001180028000178  RSL
FPA_POOL8_END_ADDR             0x0001180028000398  RSL
FPA_POOL8_START_ADDR           0x0001180028000298  RSL
FPA_POOL8_THRESHOLD            0x0001180028000180  RSL
FPA_QUE0_AVAILABLE             0x0001180028000098  RSL
FPA_QUE0_PAGE_INDEX            0x00011800280000F0  RSL
FPA_QUE1_AVAILABLE             0x00011800280000A0  RSL
FPA_QUE1_PAGE_INDEX            0x00011800280000F8  RSL
FPA_QUE2_AVAILABLE             0x00011800280000A8  RSL
FPA_QUE2_PAGE_INDEX            0x0001180028000100  RSL
FPA_QUE3_AVAILABLE             0x00011800280000B0  RSL
FPA_QUE3_PAGE_INDEX            0x0001180028000108  RSL
FPA_QUE4_AVAILABLE             0x00011800280000B8  RSL
FPA_QUE4_PAGE_INDEX            0x0001180028000110  RSL
FPA_QUE5_AVAILABLE             0x00011800280000C0  RSL
FPA_QUE5_PAGE_INDEX            0x0001180028000118  RSL
FPA_QUE6_AVAILABLE             0x00011800280000C8  RSL
FPA_QUE6_PAGE_INDEX            0x0001180028000120  RSL
FPA_QUE7_AVAILABLE             0x00011800280000D0  RSL
FPA_QUE7_PAGE_INDEX            0x0001180028000128  RSL
FPA_QUE8_AVAILABLE             0x00011800280000D8  RSL
FPA_QUE8_PAGE_INDEX            0x0001180028000250  RSL
FPA_QUE_ACT                    0x0001180028000138  RSL
FPA_QUE_EXP                    0x0001180028000130  RSL
FPA_WQE_THRESHOLD              0x0001180028000468  RSL
GMX0_BAD_REG                   0x0001180008000518  RSL
GMX0_BIST                      0x0001180008000400  RSL
GMX0_BPID_MAP000               0x0001180008000680  RSL
GMX0_BPID_MAP001               0x0001180008000688  RSL
GMX0_BPID_MAP002               0x0001180008000690  RSL
GMX0_BPID_MAP003               0x0001180008000698  RSL
GMX0_BPID_MAP004               0x00011800080006A0  RSL
GMX0_BPID_MAP005               0x00011800080006A8  RSL
GMX0_BPID_MAP006               0x00011800080006B0  RSL
GMX0_BPID_MAP007               0x00011800080006B8  RSL
GMX0_BPID_MAP008               0x00011800080006C0  RSL
GMX0_BPID_MAP009               0x00011800080006C8  RSL
GMX0_BPID_MAP010               0x00011800080006D0  RSL
GMX0_BPID_MAP011               0x00011800080006D8  RSL
GMX0_BPID_MAP012               0x00011800080006E0  RSL
GMX0_BPID_MAP013               0x00011800080006E8  RSL
GMX0_BPID_MAP014               0x00011800080006F0  RSL
GMX0_BPID_MAP015               0x00011800080006F8  RSL
GMX0_BPID_MSK                  0x0001180008000700  RSL
GMX0_CLK_EN                    0x00011800080007F0  RSL
GMX0_EBP_DIS                   0x0001180008000608  RSL
GMX0_EBP_MSK                   0x0001180008000600  RSL
GMX0_HG2_CONTROL               0x0001180008000550  RSL
GMX0_INF_MODE                  0x00011800080007F8  RSL
GMX0_NXA_ADR                   0x0001180008000510  RSL
GMX0_PIPE_STATUS               0x0001180008000760  RSL
GMX0_PRT000_CBFC_CTL           0x0001180008000580  RSL
GMX0_PRT000_CFG                0x0001180008000010  RSL
GMX0_PRT001_CFG                0x0001180008000810  RSL
GMX0_PRT002_CFG                0x0001180008001010  RSL
GMX0_PRT003_CFG                0x0001180008001810  RSL
GMX0_RX000_ADR_CAM0            0x0001180008000180  RSL
GMX0_RX000_ADR_CAM1            0x0001180008000188  RSL
GMX0_RX000_ADR_CAM2            0x0001180008000190  RSL
GMX0_RX000_ADR_CAM3            0x0001180008000198  RSL
GMX0_RX000_ADR_CAM4            0x00011800080001A0  RSL
GMX0_RX000_ADR_CAM5            0x00011800080001A8  RSL
GMX0_RX000_ADR_CAM_EN          0x0001180008000108  RSL
GMX0_RX000_ADR_CTL             0x0001180008000100  RSL
GMX0_RX000_DECISION            0x0001180008000040  RSL
GMX0_RX000_FRM_CHK             0x0001180008000020  RSL
GMX0_RX000_FRM_CTL             0x0001180008000018  RSL
GMX0_RX000_IFG                 0x0001180008000058  RSL
GMX0_RX000_INT_EN              0x0001180008000008  RSL
GMX0_RX000_INT_REG             0x0001180008000000  RSL
GMX0_RX000_JABBER              0x0001180008000038  RSL
GMX0_RX000_PAUSE_DROP_TIME     0x0001180008000068  RSL
GMX0_RX000_STATS_CTL           0x0001180008000050  RSL
GMX0_RX000_STATS_OCTS          0x0001180008000088  RSL
GMX0_RX000_STATS_OCTS_CTL      0x0001180008000098  RSL
GMX0_RX000_STATS_OCTS_DMAC     0x00011800080000A8  RSL
GMX0_RX000_STATS_OCTS_DRP      0x00011800080000B8  RSL
GMX0_RX000_STATS_PKTS          0x0001180008000080  RSL
GMX0_RX000_STATS_PKTS_BAD      0x00011800080000C0  RSL
GMX0_RX000_STATS_PKTS_CTL      0x0001180008000090  RSL
GMX0_RX000_STATS_PKTS_DMAC     0x00011800080000A0  RSL
GMX0_RX000_STATS_PKTS_DRP      0x00011800080000B0  RSL
GMX0_RX000_UDD_SKP             0x0001180008000048  RSL
GMX0_RX001_ADR_CAM0            0x0001180008000980  RSL
GMX0_RX001_ADR_CAM1            0x0001180008000988  RSL
GMX0_RX001_ADR_CAM2            0x0001180008000990  RSL
GMX0_RX001_ADR_CAM3            0x0001180008000998  RSL
GMX0_RX001_ADR_CAM4            0x00011800080009A0  RSL
GMX0_RX001_ADR_CAM5            0x00011800080009A8  RSL
GMX0_RX001_ADR_CAM_EN          0x0001180008000908  RSL
GMX0_RX001_ADR_CTL             0x0001180008000900  RSL
GMX0_RX001_DECISION            0x0001180008000840  RSL
GMX0_RX001_FRM_CHK             0x0001180008000820  RSL
GMX0_RX001_FRM_CTL             0x0001180008000818  RSL
GMX0_RX001_IFG                 0x0001180008000858  RSL
GMX0_RX001_INT_EN              0x0001180008000808  RSL
GMX0_RX001_INT_REG             0x0001180008000800  RSL
GMX0_RX001_JABBER              0x0001180008000838  RSL
GMX0_RX001_PAUSE_DROP_TIME     0x0001180008000868  RSL
GMX0_RX001_STATS_CTL           0x0001180008000850  RSL
GMX0_RX001_STATS_OCTS          0x0001180008000888  RSL
GMX0_RX001_STATS_OCTS_CTL      0x0001180008000898  RSL
GMX0_RX001_STATS_OCTS_DMAC     0x00011800080008A8  RSL
GMX0_RX001_STATS_OCTS_DRP      0x00011800080008B8  RSL
GMX0_RX001_STATS_PKTS          0x0001180008000880  RSL
GMX0_RX001_STATS_PKTS_BAD      0x00011800080008C0  RSL
GMX0_RX001_STATS_PKTS_CTL      0x0001180008000890  RSL
GMX0_RX001_STATS_PKTS_DMAC     0x00011800080008A0  RSL
GMX0_RX001_STATS_PKTS_DRP      0x00011800080008B0  RSL
GMX0_RX001_UDD_SKP             0x0001180008000848  RSL
GMX0_RX002_ADR_CAM0            0x0001180008001180  RSL
GMX0_RX002_ADR_CAM1            0x0001180008001188  RSL
GMX0_RX002_ADR_CAM2            0x0001180008001190  RSL
GMX0_RX002_ADR_CAM3            0x0001180008001198  RSL
GMX0_RX002_ADR_CAM4            0x00011800080011A0  RSL
GMX0_RX002_ADR_CAM5            0x00011800080011A8  RSL
GMX0_RX002_ADR_CAM_EN          0x0001180008001108  RSL
GMX0_RX002_ADR_CTL             0x0001180008001100  RSL
GMX0_RX002_DECISION            0x0001180008001040  RSL
GMX0_RX002_FRM_CHK             0x0001180008001020  RSL
GMX0_RX002_FRM_CTL             0x0001180008001018  RSL
GMX0_RX002_IFG                 0x0001180008001058  RSL
GMX0_RX002_INT_EN              0x0001180008001008  RSL
GMX0_RX002_INT_REG             0x0001180008001000  RSL
GMX0_RX002_JABBER              0x0001180008001038  RSL
GMX0_RX002_PAUSE_DROP_TIME     0x0001180008001068  RSL
GMX0_RX002_STATS_CTL           0x0001180008001050  RSL
GMX0_RX002_STATS_OCTS          0x0001180008001088  RSL
GMX0_RX002_STATS_OCTS_CTL      0x0001180008001098  RSL
GMX0_RX002_STATS_OCTS_DMAC     0x00011800080010A8  RSL
GMX0_RX002_STATS_OCTS_DRP      0x00011800080010B8  RSL
GMX0_RX002_STATS_PKTS          0x0001180008001080  RSL
GMX0_RX002_STATS_PKTS_BAD      0x00011800080010C0  RSL
GMX0_RX002_STATS_PKTS_CTL      0x0001180008001090  RSL
GMX0_RX002_STATS_PKTS_DMAC     0x00011800080010A0  RSL
GMX0_RX002_STATS_PKTS_DRP      0x00011800080010B0  RSL
GMX0_RX002_UDD_SKP             0x0001180008001048  RSL
GMX0_RX003_ADR_CAM0            0x0001180008001980  RSL
GMX0_RX003_ADR_CAM1            0x0001180008001988  RSL
GMX0_RX003_ADR_CAM2            0x0001180008001990  RSL
GMX0_RX003_ADR_CAM3            0x0001180008001998  RSL
GMX0_RX003_ADR_CAM4            0x00011800080019A0  RSL
GMX0_RX003_ADR_CAM5            0x00011800080019A8  RSL
GMX0_RX003_ADR_CAM_EN          0x0001180008001908  RSL
GMX0_RX003_ADR_CTL             0x0001180008001900  RSL
GMX0_RX003_DECISION            0x0001180008001840  RSL
GMX0_RX003_FRM_CHK             0x0001180008001820  RSL
GMX0_RX003_FRM_CTL             0x0001180008001818  RSL
GMX0_RX003_IFG                 0x0001180008001858  RSL
GMX0_RX003_INT_EN              0x0001180008001808  RSL
GMX0_RX003_INT_REG             0x0001180008001800  RSL
GMX0_RX003_JABBER              0x0001180008001838  RSL
GMX0_RX003_PAUSE_DROP_TIME     0x0001180008001868  RSL
GMX0_RX003_STATS_CTL           0x0001180008001850  RSL
GMX0_RX003_STATS_OCTS          0x0001180008001888  RSL
GMX0_RX003_STATS_OCTS_CTL      0x0001180008001898  RSL
GMX0_RX003_STATS_OCTS_DMAC     0x00011800080018A8  RSL
GMX0_RX003_STATS_OCTS_DRP      0x00011800080018B8  RSL
GMX0_RX003_STATS_PKTS          0x0001180008001880  RSL
GMX0_RX003_STATS_PKTS_BAD      0x00011800080018C0  RSL
GMX0_RX003_STATS_PKTS_CTL      0x0001180008001890  RSL
GMX0_RX003_STATS_PKTS_DMAC     0x00011800080018A0  RSL
GMX0_RX003_STATS_PKTS_DRP      0x00011800080018B0  RSL
GMX0_RX003_UDD_SKP             0x0001180008001848  RSL
GMX0_RXAUI_CTL                 0x0001180008000740  RSL
GMX0_RX_BP_DROP000             0x0001180008000420  RSL
GMX0_RX_BP_DROP001             0x0001180008000428  RSL
GMX0_RX_BP_DROP002             0x0001180008000430  RSL
GMX0_RX_BP_DROP003             0x0001180008000438  RSL
GMX0_RX_BP_OFF000              0x0001180008000460  RSL
GMX0_RX_BP_OFF001              0x0001180008000468  RSL
GMX0_RX_BP_OFF002              0x0001180008000470  RSL
GMX0_RX_BP_OFF003              0x0001180008000478  RSL
GMX0_RX_BP_ON000               0x0001180008000440  RSL
GMX0_RX_BP_ON001               0x0001180008000448  RSL
GMX0_RX_BP_ON002               0x0001180008000450  RSL
GMX0_RX_BP_ON003               0x0001180008000458  RSL
GMX0_RX_HG2_STATUS             0x0001180008000548  RSL
GMX0_RX_PRTS                   0x0001180008000410  RSL
GMX0_RX_PRT_INFO               0x00011800080004E8  RSL
GMX0_RX_XAUI_BAD_COL           0x0001180008000538  RSL
GMX0_RX_XAUI_CTL               0x0001180008000530  RSL
GMX0_SMAC000                   0x0001180008000230  RSL
GMX0_SMAC001                   0x0001180008000A30  RSL
GMX0_SMAC002                   0x0001180008001230  RSL
GMX0_SMAC003                   0x0001180008001A30  RSL
GMX0_SOFT_BIST                 0x00011800080007E8  RSL
GMX0_STAT_BP                   0x0001180008000520  RSL
GMX0_TX000_APPEND              0x0001180008000218  RSL
GMX0_TX000_BURST               0x0001180008000228  RSL
GMX0_TX000_CBFC_XOFF           0x00011800080005A0  RSL
GMX0_TX000_CBFC_XON            0x00011800080005C0  RSL
GMX0_TX000_CTL                 0x0001180008000270  RSL
GMX0_TX000_MIN_PKT             0x0001180008000240  RSL
GMX0_TX000_PAUSE_PKT_INTERVAL  0x0001180008000248  RSL
GMX0_TX000_PAUSE_PKT_TIME      0x0001180008000238  RSL
GMX0_TX000_PAUSE_TOGO          0x0001180008000258  RSL
GMX0_TX000_PAUSE_ZERO          0x0001180008000260  RSL
GMX0_TX000_PIPE                0x0001180008000310  RSL
GMX0_TX000_SGMII_CTL           0x0001180008000300  RSL
GMX0_TX000_SLOT                0x0001180008000220  RSL
GMX0_TX000_SOFT_PAUSE          0x0001180008000250  RSL
GMX0_TX000_STAT0               0x0001180008000280  RSL
GMX0_TX000_STAT1               0x0001180008000288  RSL
GMX0_TX000_STAT2               0x0001180008000290  RSL
GMX0_TX000_STAT3               0x0001180008000298  RSL
GMX0_TX000_STAT4               0x00011800080002A0  RSL
GMX0_TX000_STAT5               0x00011800080002A8  RSL
GMX0_TX000_STAT6               0x00011800080002B0  RSL
GMX0_TX000_STAT7               0x00011800080002B8  RSL
GMX0_TX000_STAT8               0x00011800080002C0  RSL
GMX0_TX000_STAT9               0x00011800080002C8  RSL
GMX0_TX000_STATS_CTL           0x0001180008000268  RSL
GMX0_TX000_THRESH              0x0001180008000210  RSL
GMX0_TX001_APPEND              0x0001180008000A18  RSL
GMX0_TX001_BURST               0x0001180008000A28  RSL
GMX0_TX001_CTL                 0x0001180008000A70  RSL
GMX0_TX001_MIN_PKT             0x0001180008000A40  RSL
GMX0_TX001_PAUSE_PKT_INTERVAL  0x0001180008000A48  RSL
GMX0_TX001_PAUSE_PKT_TIME      0x0001180008000A38  RSL
GMX0_TX001_PAUSE_TOGO          0x0001180008000A58  RSL
GMX0_TX001_PAUSE_ZERO          0x0001180008000A60  RSL
GMX0_TX001_PIPE                0x0001180008000B10  RSL
GMX0_TX001_SGMII_CTL           0x0001180008000B00  RSL
GMX0_TX001_SLOT                0x0001180008000A20  RSL
GMX0_TX001_SOFT_PAUSE          0x0001180008000A50  RSL
GMX0_TX001_STAT0               0x0001180008000A80  RSL
GMX0_TX001_STAT1               0x0001180008000A88  RSL
GMX0_TX001_STAT2               0x0001180008000A90  RSL
GMX0_TX001_STAT3               0x0001180008000A98  RSL
GMX0_TX001_STAT4               0x0001180008000AA0  RSL
GMX0_TX001_STAT5               0x0001180008000AA8  RSL
GMX0_TX001_STAT6               0x0001180008000AB0  RSL
GMX0_TX001_STAT7               0x0001180008000AB8  RSL
GMX0_TX001_STAT8               0x0001180008000AC0  RSL
GMX0_TX001_STAT9               0x0001180008000AC8  RSL
GMX0_TX001_STATS_CTL           0x0001180008000A68  RSL
GMX0_TX001_THRESH              0x0001180008000A10  RSL
GMX0_TX002_APPEND              0x0001180008001218  RSL
GMX0_TX002_BURST               0x0001180008001228  RSL
GMX0_TX002_CTL                 0x0001180008001270  RSL
GMX0_TX002_MIN_PKT             0x0001180008001240  RSL
GMX0_TX002_PAUSE_PKT_INTERVAL  0x0001180008001248  RSL
GMX0_TX002_PAUSE_PKT_TIME      0x0001180008001238  RSL
GMX0_TX002_PAUSE_TOGO          0x0001180008001258  RSL
GMX0_TX002_PAUSE_ZERO          0x0001180008001260  RSL
GMX0_TX002_PIPE                0x0001180008001310  RSL
GMX0_TX002_SGMII_CTL           0x0001180008001300  RSL
GMX0_TX002_SLOT                0x0001180008001220  RSL
GMX0_TX002_SOFT_PAUSE          0x0001180008001250  RSL
GMX0_TX002_STAT0               0x0001180008001280  RSL
GMX0_TX002_STAT1               0x0001180008001288  RSL
GMX0_TX002_STAT2               0x0001180008001290  RSL
GMX0_TX002_STAT3               0x0001180008001298  RSL
GMX0_TX002_STAT4               0x00011800080012A0  RSL
GMX0_TX002_STAT5               0x00011800080012A8  RSL
GMX0_TX002_STAT6               0x00011800080012B0  RSL
GMX0_TX002_STAT7               0x00011800080012B8  RSL
GMX0_TX002_STAT8               0x00011800080012C0  RSL
GMX0_TX002_STAT9               0x00011800080012C8  RSL
GMX0_TX002_STATS_CTL           0x0001180008001268  RSL
GMX0_TX002_THRESH              0x0001180008001210  RSL
GMX0_TX003_APPEND              0x0001180008001A18  RSL
GMX0_TX003_BURST               0x0001180008001A28  RSL
GMX0_TX003_CTL                 0x0001180008001A70  RSL
GMX0_TX003_MIN_PKT             0x0001180008001A40  RSL
GMX0_TX003_PAUSE_PKT_INTERVAL  0x0001180008001A48  RSL
GMX0_TX003_PAUSE_PKT_TIME      0x0001180008001A38  RSL
GMX0_TX003_PAUSE_TOGO          0x0001180008001A58  RSL
GMX0_TX003_PAUSE_ZERO          0x0001180008001A60  RSL
GMX0_TX003_PIPE                0x0001180008001B10  RSL
GMX0_TX003_SGMII_CTL           0x0001180008001B00  RSL
GMX0_TX003_SLOT                0x0001180008001A20  RSL
GMX0_TX003_SOFT_PAUSE          0x0001180008001A50  RSL
GMX0_TX003_STAT0               0x0001180008001A80  RSL
GMX0_TX003_STAT1               0x0001180008001A88  RSL
GMX0_TX003_STAT2               0x0001180008001A90  RSL
GMX0_TX003_STAT3               0x0001180008001A98  RSL
GMX0_TX003_STAT4               0x0001180008001AA0  RSL
GMX0_TX003_STAT5               0x0001180008001AA8  RSL
GMX0_TX003_STAT6               0x0001180008001AB0  RSL
GMX0_TX003_STAT7               0x0001180008001AB8  RSL
GMX0_TX003_STAT8               0x0001180008001AC0  RSL
GMX0_TX003_STAT9               0x0001180008001AC8  RSL
GMX0_TX003_STATS_CTL           0x0001180008001A68  RSL
GMX0_TX003_THRESH              0x0001180008001A10  RSL
GMX0_TX_BP                     0x00011800080004D0  RSL
GMX0_TX_COL_ATTEMPT            0x0001180008000498  RSL
GMX0_TX_CORRUPT                0x00011800080004D8  RSL
GMX0_TX_HG2_REG1               0x0001180008000558  RSL
GMX0_TX_HG2_REG2               0x0001180008000560  RSL
GMX0_TX_IFG                    0x0001180008000488  RSL
GMX0_TX_INT_EN                 0x0001180008000508  RSL
GMX0_TX_INT_REG                0x0001180008000500  RSL
GMX0_TX_JAM                    0x0001180008000490  RSL
GMX0_TX_LFSR                   0x00011800080004F8  RSL
GMX0_TX_OVR_BP                 0x00011800080004C8  RSL
GMX0_TX_PAUSE_PKT_DMAC         0x00011800080004A0  RSL
GMX0_TX_PAUSE_PKT_TYPE         0x00011800080004A8  RSL
GMX0_TX_PRTS                   0x0001180008000480  RSL
GMX0_TX_XAUI_CTL               0x0001180008000528  RSL
GMX0_XAUI_EXT_LOOPBACK         0x0001180008000540  RSL
GMX1_BAD_REG                   0x0001180009000518  RSL
GMX1_BIST                      0x0001180009000400  RSL
GMX1_BPID_MAP000               0x0001180009000680  RSL
GMX1_BPID_MAP001               0x0001180009000688  RSL
GMX1_BPID_MAP002               0x0001180009000690  RSL
GMX1_BPID_MAP003               0x0001180009000698  RSL
GMX1_BPID_MAP004               0x00011800090006A0  RSL
GMX1_BPID_MAP005               0x00011800090006A8  RSL
GMX1_BPID_MAP006               0x00011800090006B0  RSL
GMX1_BPID_MAP007               0x00011800090006B8  RSL
GMX1_BPID_MAP008               0x00011800090006C0  RSL
GMX1_BPID_MAP009               0x00011800090006C8  RSL
GMX1_BPID_MAP010               0x00011800090006D0  RSL
GMX1_BPID_MAP011               0x00011800090006D8  RSL
GMX1_BPID_MAP012               0x00011800090006E0  RSL
GMX1_BPID_MAP013               0x00011800090006E8  RSL
GMX1_BPID_MAP014               0x00011800090006F0  RSL
GMX1_BPID_MAP015               0x00011800090006F8  RSL
GMX1_BPID_MSK                  0x0001180009000700  RSL
GMX1_CLK_EN                    0x00011800090007F0  RSL
GMX1_EBP_DIS                   0x0001180009000608  RSL
GMX1_EBP_MSK                   0x0001180009000600  RSL
GMX1_HG2_CONTROL               0x0001180009000550  RSL
GMX1_INF_MODE                  0x00011800090007F8  RSL
GMX1_NXA_ADR                   0x0001180009000510  RSL
GMX1_PIPE_STATUS               0x0001180009000760  RSL
GMX1_PRT000_CBFC_CTL           0x0001180009000580  RSL
GMX1_PRT000_CFG                0x0001180009000010  RSL
GMX1_PRT001_CFG                0x0001180009000810  RSL
GMX1_PRT002_CFG                0x0001180009001010  RSL
GMX1_PRT003_CFG                0x0001180009001810  RSL
GMX1_RX000_ADR_CAM0            0x0001180009000180  RSL
GMX1_RX000_ADR_CAM1            0x0001180009000188  RSL
GMX1_RX000_ADR_CAM2            0x0001180009000190  RSL
GMX1_RX000_ADR_CAM3            0x0001180009000198  RSL
GMX1_RX000_ADR_CAM4            0x00011800090001A0  RSL
GMX1_RX000_ADR_CAM5            0x00011800090001A8  RSL
GMX1_RX000_ADR_CAM_EN          0x0001180009000108  RSL
GMX1_RX000_ADR_CTL             0x0001180009000100  RSL
GMX1_RX000_DECISION            0x0001180009000040  RSL
GMX1_RX000_FRM_CHK             0x0001180009000020  RSL
GMX1_RX000_FRM_CTL             0x0001180009000018  RSL
GMX1_RX000_IFG                 0x0001180009000058  RSL
GMX1_RX000_INT_EN              0x0001180009000008  RSL
GMX1_RX000_INT_REG             0x0001180009000000  RSL
GMX1_RX000_JABBER              0x0001180009000038  RSL
GMX1_RX000_PAUSE_DROP_TIME     0x0001180009000068  RSL
GMX1_RX000_STATS_CTL           0x0001180009000050  RSL
GMX1_RX000_STATS_OCTS          0x0001180009000088  RSL
GMX1_RX000_STATS_OCTS_CTL      0x0001180009000098  RSL
GMX1_RX000_STATS_OCTS_DMAC     0x00011800090000A8  RSL
GMX1_RX000_STATS_OCTS_DRP      0x00011800090000B8  RSL
GMX1_RX000_STATS_PKTS          0x0001180009000080  RSL
GMX1_RX000_STATS_PKTS_BAD      0x00011800090000C0  RSL
GMX1_RX000_STATS_PKTS_CTL      0x0001180009000090  RSL
GMX1_RX000_STATS_PKTS_DMAC     0x00011800090000A0  RSL
GMX1_RX000_STATS_PKTS_DRP      0x00011800090000B0  RSL
GMX1_RX000_UDD_SKP             0x0001180009000048  RSL
GMX1_RX001_ADR_CAM0            0x0001180009000980  RSL
GMX1_RX001_ADR_CAM1            0x0001180009000988  RSL
GMX1_RX001_ADR_CAM2            0x0001180009000990  RSL
GMX1_RX001_ADR_CAM3            0x0001180009000998  RSL
GMX1_RX001_ADR_CAM4            0x00011800090009A0  RSL
GMX1_RX001_ADR_CAM5            0x00011800090009A8  RSL
GMX1_RX001_ADR_CAM_EN          0x0001180009000908  RSL
GMX1_RX001_ADR_CTL             0x0001180009000900  RSL
GMX1_RX001_DECISION            0x0001180009000840  RSL
GMX1_RX001_FRM_CHK             0x0001180009000820  RSL
GMX1_RX001_FRM_CTL             0x0001180009000818  RSL
GMX1_RX001_IFG                 0x0001180009000858  RSL
GMX1_RX001_INT_EN              0x0001180009000808  RSL
GMX1_RX001_INT_REG             0x0001180009000800  RSL
GMX1_RX001_JABBER              0x0001180009000838  RSL
GMX1_RX001_PAUSE_DROP_TIME     0x0001180009000868  RSL
GMX1_RX001_STATS_CTL           0x0001180009000850  RSL
GMX1_RX001_STATS_OCTS          0x0001180009000888  RSL
GMX1_RX001_STATS_OCTS_CTL      0x0001180009000898  RSL
GMX1_RX001_STATS_OCTS_DMAC     0x00011800090008A8  RSL
GMX1_RX001_STATS_OCTS_DRP      0x00011800090008B8  RSL
GMX1_RX001_STATS_PKTS          0x0001180009000880  RSL
GMX1_RX001_STATS_PKTS_BAD      0x00011800090008C0  RSL
GMX1_RX001_STATS_PKTS_CTL      0x0001180009000890  RSL
GMX1_RX001_STATS_PKTS_DMAC     0x00011800090008A0  RSL
GMX1_RX001_STATS_PKTS_DRP      0x00011800090008B0  RSL
GMX1_RX001_UDD_SKP             0x0001180009000848  RSL
GMX1_RX002_ADR_CAM0            0x0001180009001180  RSL
GMX1_RX002_ADR_CAM1            0x0001180009001188  RSL
GMX1_RX002_ADR_CAM2            0x0001180009001190  RSL
GMX1_RX002_ADR_CAM3            0x0001180009001198  RSL
GMX1_RX002_ADR_CAM4            0x00011800090011A0  RSL
GMX1_RX002_ADR_CAM5            0x00011800090011A8  RSL
GMX1_RX002_ADR_CAM_EN          0x0001180009001108  RSL
GMX1_RX002_ADR_CTL             0x0001180009001100  RSL
GMX1_RX002_DECISION            0x0001180009001040  RSL
GMX1_RX002_FRM_CHK             0x0001180009001020  RSL
GMX1_RX002_FRM_CTL             0x0001180009001018  RSL
GMX1_RX002_IFG                 0x0001180009001058  RSL
GMX1_RX002_INT_EN              0x0001180009001008  RSL
GMX1_RX002_INT_REG             0x0001180009001000  RSL
GMX1_RX002_JABBER              0x0001180009001038  RSL
GMX1_RX002_PAUSE_DROP_TIME     0x0001180009001068  RSL
GMX1_RX002_STATS_CTL           0x0001180009001050  RSL
GMX1_RX002_STATS_OCTS          0x0001180009001088  RSL
GMX1_RX002_STATS_OCTS_CTL      0x0001180009001098  RSL
GMX1_RX002_STATS_OCTS_DMAC     0x00011800090010A8  RSL
GMX1_RX002_STATS_OCTS_DRP      0x00011800090010B8  RSL
GMX1_RX002_STATS_PKTS          0x0001180009001080  RSL
GMX1_RX002_STATS_PKTS_BAD      0x00011800090010C0  RSL
GMX1_RX002_STATS_PKTS_CTL      0x0001180009001090  RSL
GMX1_RX002_STATS_PKTS_DMAC     0x00011800090010A0  RSL
GMX1_RX002_STATS_PKTS_DRP      0x00011800090010B0  RSL
GMX1_RX002_UDD_SKP             0x0001180009001048  RSL
GMX1_RX003_ADR_CAM0            0x0001180009001980  RSL
GMX1_RX003_ADR_CAM1            0x0001180009001988  RSL
GMX1_RX003_ADR_CAM2            0x0001180009001990  RSL
GMX1_RX003_ADR_CAM3            0x0001180009001998  RSL
GMX1_RX003_ADR_CAM4            0x00011800090019A0  RSL
GMX1_RX003_ADR_CAM5            0x00011800090019A8  RSL
GMX1_RX003_ADR_CAM_EN          0x0001180009001908  RSL
GMX1_RX003_ADR_CTL             0x0001180009001900  RSL
GMX1_RX003_DECISION            0x0001180009001840  RSL
GMX1_RX003_FRM_CHK             0x0001180009001820  RSL
GMX1_RX003_FRM_CTL             0x0001180009001818  RSL
GMX1_RX003_IFG                 0x0001180009001858  RSL
GMX1_RX003_INT_EN              0x0001180009001808  RSL
GMX1_RX003_INT_REG             0x0001180009001800  RSL
GMX1_RX003_JABBER              0x0001180009001838  RSL
GMX1_RX003_PAUSE_DROP_TIME     0x0001180009001868  RSL
GMX1_RX003_STATS_CTL           0x0001180009001850  RSL
GMX1_RX003_STATS_OCTS          0x0001180009001888  RSL
GMX1_RX003_STATS_OCTS_CTL      0x0001180009001898  RSL
GMX1_RX003_STATS_OCTS_DMAC     0x00011800090018A8  RSL
GMX1_RX003_STATS_OCTS_DRP      0x00011800090018B8  RSL
GMX1_RX003_STATS_PKTS          0x0001180009001880  RSL
GMX1_RX003_STATS_PKTS_BAD      0x00011800090018C0  RSL
GMX1_RX003_STATS_PKTS_CTL      0x0001180009001890  RSL
GMX1_RX003_STATS_PKTS_DMAC     0x00011800090018A0  RSL
GMX1_RX003_STATS_PKTS_DRP      0x00011800090018B0  RSL
GMX1_RX003_UDD_SKP             0x0001180009001848  RSL
GMX1_RXAUI_CTL                 0x0001180009000740  RSL
GMX1_RX_BP_DROP000             0x0001180009000420  RSL
GMX1_RX_BP_DROP001             0x0001180009000428  RSL
GMX1_RX_BP_DROP002             0x0001180009000430  RSL
GMX1_RX_BP_DROP003             0x0001180009000438  RSL
GMX1_RX_BP_OFF000              0x0001180009000460  RSL
GMX1_RX_BP_OFF001              0x0001180009000468  RSL
GMX1_RX_BP_OFF002              0x0001180009000470  RSL
GMX1_RX_BP_OFF003              0x0001180009000478  RSL
GMX1_RX_BP_ON000               0x0001180009000440  RSL
GMX1_RX_BP_ON001               0x0001180009000448  RSL
GMX1_RX_BP_ON002               0x0001180009000450  RSL
GMX1_RX_BP_ON003               0x0001180009000458  RSL
GMX1_RX_HG2_STATUS             0x0001180009000548  RSL
GMX1_RX_PRTS                   0x0001180009000410  RSL
GMX1_RX_PRT_INFO               0x00011800090004E8  RSL
GMX1_RX_XAUI_BAD_COL           0x0001180009000538  RSL
GMX1_RX_XAUI_CTL               0x0001180009000530  RSL
GMX1_SMAC000                   0x0001180009000230  RSL
GMX1_SMAC001                   0x0001180009000A30  RSL
GMX1_SMAC002                   0x0001180009001230  RSL
GMX1_SMAC003                   0x0001180009001A30  RSL
GMX1_SOFT_BIST                 0x00011800090007E8  RSL
GMX1_STAT_BP                   0x0001180009000520  RSL
GMX1_TX000_APPEND              0x0001180009000218  RSL
GMX1_TX000_BURST               0x0001180009000228  RSL
GMX1_TX000_CBFC_XOFF           0x00011800090005A0  RSL
GMX1_TX000_CBFC_XON            0x00011800090005C0  RSL
GMX1_TX000_CTL                 0x0001180009000270  RSL
GMX1_TX000_MIN_PKT             0x0001180009000240  RSL
GMX1_TX000_PAUSE_PKT_INTERVAL  0x0001180009000248  RSL
GMX1_TX000_PAUSE_PKT_TIME      0x0001180009000238  RSL
GMX1_TX000_PAUSE_TOGO          0x0001180009000258  RSL
GMX1_TX000_PAUSE_ZERO          0x0001180009000260  RSL
GMX1_TX000_PIPE                0x0001180009000310  RSL
GMX1_TX000_SGMII_CTL           0x0001180009000300  RSL
GMX1_TX000_SLOT                0x0001180009000220  RSL
GMX1_TX000_SOFT_PAUSE          0x0001180009000250  RSL
GMX1_TX000_STAT0               0x0001180009000280  RSL
GMX1_TX000_STAT1               0x0001180009000288  RSL
GMX1_TX000_STAT2               0x0001180009000290  RSL
GMX1_TX000_STAT3               0x0001180009000298  RSL
GMX1_TX000_STAT4               0x00011800090002A0  RSL
GMX1_TX000_STAT5               0x00011800090002A8  RSL
GMX1_TX000_STAT6               0x00011800090002B0  RSL
GMX1_TX000_STAT7               0x00011800090002B8  RSL
GMX1_TX000_STAT8               0x00011800090002C0  RSL
GMX1_TX000_STAT9               0x00011800090002C8  RSL
GMX1_TX000_STATS_CTL           0x0001180009000268  RSL
GMX1_TX000_THRESH              0x0001180009000210  RSL
GMX1_TX001_APPEND              0x0001180009000A18  RSL
GMX1_TX001_BURST               0x0001180009000A28  RSL
GMX1_TX001_CTL                 0x0001180009000A70  RSL
GMX1_TX001_MIN_PKT             0x0001180009000A40  RSL
GMX1_TX001_PAUSE_PKT_INTERVAL  0x0001180009000A48  RSL
GMX1_TX001_PAUSE_PKT_TIME      0x0001180009000A38  RSL
GMX1_TX001_PAUSE_TOGO          0x0001180009000A58  RSL
GMX1_TX001_PAUSE_ZERO          0x0001180009000A60  RSL
GMX1_TX001_PIPE                0x0001180009000B10  RSL
GMX1_TX001_SGMII_CTL           0x0001180009000B00  RSL
GMX1_TX001_SLOT                0x0001180009000A20  RSL
GMX1_TX001_SOFT_PAUSE          0x0001180009000A50  RSL
GMX1_TX001_STAT0               0x0001180009000A80  RSL
GMX1_TX001_STAT1               0x0001180009000A88  RSL
GMX1_TX001_STAT2               0x0001180009000A90  RSL
GMX1_TX001_STAT3               0x0001180009000A98  RSL
GMX1_TX001_STAT4               0x0001180009000AA0  RSL
GMX1_TX001_STAT5               0x0001180009000AA8  RSL
GMX1_TX001_STAT6               0x0001180009000AB0  RSL
GMX1_TX001_STAT7               0x0001180009000AB8  RSL
GMX1_TX001_STAT8               0x0001180009000AC0  RSL
GMX1_TX001_STAT9               0x0001180009000AC8  RSL
GMX1_TX001_STATS_CTL           0x0001180009000A68  RSL
GMX1_TX001_THRESH              0x0001180009000A10  RSL
GMX1_TX002_APPEND              0x0001180009001218  RSL
GMX1_TX002_BURST               0x0001180009001228  RSL
GMX1_TX002_CTL                 0x0001180009001270  RSL
GMX1_TX002_MIN_PKT             0x0001180009001240  RSL
GMX1_TX002_PAUSE_PKT_INTERVAL  0x0001180009001248  RSL
GMX1_TX002_PAUSE_PKT_TIME      0x0001180009001238  RSL
GMX1_TX002_PAUSE_TOGO          0x0001180009001258  RSL
GMX1_TX002_PAUSE_ZERO          0x0001180009001260  RSL
GMX1_TX002_PIPE                0x0001180009001310  RSL
GMX1_TX002_SGMII_CTL           0x0001180009001300  RSL
GMX1_TX002_SLOT                0x0001180009001220  RSL
GMX1_TX002_SOFT_PAUSE          0x0001180009001250  RSL
GMX1_TX002_STAT0               0x0001180009001280  RSL
GMX1_TX002_STAT1               0x0001180009001288  RSL
GMX1_TX002_STAT2               0x0001180009001290  RSL
GMX1_TX002_STAT3               0x0001180009001298  RSL
GMX1_TX002_STAT4               0x00011800090012A0  RSL
GMX1_TX002_STAT5               0x00011800090012A8  RSL
GMX1_TX002_STAT6               0x00011800090012B0  RSL
GMX1_TX002_STAT7               0x00011800090012B8  RSL
GMX1_TX002_STAT8               0x00011800090012C0  RSL
GMX1_TX002_STAT9               0x00011800090012C8  RSL
GMX1_TX002_STATS_CTL           0x0001180009001268  RSL
GMX1_TX002_THRESH              0x0001180009001210  RSL
GMX1_TX003_APPEND              0x0001180009001A18  RSL
GMX1_TX003_BURST               0x0001180009001A28  RSL
GMX1_TX003_CTL                 0x0001180009001A70  RSL
GMX1_TX003_MIN_PKT             0x0001180009001A40  RSL
GMX1_TX003_PAUSE_PKT_INTERVAL  0x0001180009001A48  RSL
GMX1_TX003_PAUSE_PKT_TIME      0x0001180009001A38  RSL
GMX1_TX003_PAUSE_TOGO          0x0001180009001A58  RSL
GMX1_TX003_PAUSE_ZERO          0x0001180009001A60  RSL
GMX1_TX003_PIPE                0x0001180009001B10  RSL
GMX1_TX003_SGMII_CTL           0x0001180009001B00  RSL
GMX1_TX003_SLOT                0x0001180009001A20  RSL
GMX1_TX003_SOFT_PAUSE          0x0001180009001A50  RSL
GMX1_TX003_STAT0               0x0001180009001A80  RSL
GMX1_TX003_STAT1               0x0001180009001A88  RSL
GMX1_TX003_STAT2               0x0001180009001A90  RSL
GMX1_TX003_STAT3               0x0001180009001A98  RSL
GMX1_TX003_STAT4               0x0001180009001AA0  RSL
GMX1_TX003_STAT5               0x0001180009001AA8  RSL
GMX1_TX003_STAT6               0x0001180009001AB0  RSL
GMX1_TX003_STAT7               0x0001180009001AB8  RSL
GMX1_TX003_STAT8               0x0001180009001AC0  RSL
GMX1_TX003_STAT9               0x0001180009001AC8  RSL
GMX1_TX003_STATS_CTL           0x0001180009001A68  RSL
GMX1_TX003_THRESH              0x0001180009001A10  RSL
GMX1_TX_BP                     0x00011800090004D0  RSL
GMX1_TX_COL_ATTEMPT            0x0001180009000498  RSL
GMX1_TX_CORRUPT                0x00011800090004D8  RSL
GMX1_TX_HG2_REG1               0x0001180009000558  RSL
GMX1_TX_HG2_REG2               0x0001180009000560  RSL
GMX1_TX_IFG                    0x0001180009000488  RSL
GMX1_TX_INT_EN                 0x0001180009000508  RSL
GMX1_TX_INT_REG                0x0001180009000500  RSL
GMX1_TX_JAM                    0x0001180009000490  RSL
GMX1_TX_LFSR                   0x00011800090004F8  RSL
GMX1_TX_OVR_BP                 0x00011800090004C8  RSL
GMX1_TX_PAUSE_PKT_DMAC         0x00011800090004A0  RSL
GMX1_TX_PAUSE_PKT_TYPE         0x00011800090004A8  RSL
GMX1_TX_PRTS                   0x0001180009000480  RSL
GMX1_TX_XAUI_CTL               0x0001180009000528  RSL
GMX1_XAUI_EXT_LOOPBACK         0x0001180009000540  RSL
GMX2_BAD_REG                   0x000118000A000518  RSL
GMX2_BIST                      0x000118000A000400  RSL
GMX2_BPID_MAP000               0x000118000A000680  RSL
GMX2_BPID_MAP001               0x000118000A000688  RSL
GMX2_BPID_MAP002               0x000118000A000690  RSL
GMX2_BPID_MAP003               0x000118000A000698  RSL
GMX2_BPID_MAP004               0x000118000A0006A0  RSL
GMX2_BPID_MAP005               0x000118000A0006A8  RSL
GMX2_BPID_MAP006               0x000118000A0006B0  RSL
GMX2_BPID_MAP007               0x000118000A0006B8  RSL
GMX2_BPID_MAP008               0x000118000A0006C0  RSL
GMX2_BPID_MAP009               0x000118000A0006C8  RSL
GMX2_BPID_MAP010               0x000118000A0006D0  RSL
GMX2_BPID_MAP011               0x000118000A0006D8  RSL
GMX2_BPID_MAP012               0x000118000A0006E0  RSL
GMX2_BPID_MAP013               0x000118000A0006E8  RSL
GMX2_BPID_MAP014               0x000118000A0006F0  RSL
GMX2_BPID_MAP015               0x000118000A0006F8  RSL
GMX2_BPID_MSK                  0x000118000A000700  RSL
GMX2_CLK_EN                    0x000118000A0007F0  RSL
GMX2_EBP_DIS                   0x000118000A000608  RSL
GMX2_EBP_MSK                   0x000118000A000600  RSL
GMX2_HG2_CONTROL               0x000118000A000550  RSL
GMX2_INF_MODE                  0x000118000A0007F8  RSL
GMX2_NXA_ADR                   0x000118000A000510  RSL
GMX2_PIPE_STATUS               0x000118000A000760  RSL
GMX2_PRT000_CBFC_CTL           0x000118000A000580  RSL
GMX2_PRT000_CFG                0x000118000A000010  RSL
GMX2_PRT001_CFG                0x000118000A000810  RSL
GMX2_PRT002_CFG                0x000118000A001010  RSL
GMX2_PRT003_CFG                0x000118000A001810  RSL
GMX2_RX000_ADR_CAM0            0x000118000A000180  RSL
GMX2_RX000_ADR_CAM1            0x000118000A000188  RSL
GMX2_RX000_ADR_CAM2            0x000118000A000190  RSL
GMX2_RX000_ADR_CAM3            0x000118000A000198  RSL
GMX2_RX000_ADR_CAM4            0x000118000A0001A0  RSL
GMX2_RX000_ADR_CAM5            0x000118000A0001A8  RSL
GMX2_RX000_ADR_CAM_EN          0x000118000A000108  RSL
GMX2_RX000_ADR_CTL             0x000118000A000100  RSL
GMX2_RX000_DECISION            0x000118000A000040  RSL
GMX2_RX000_FRM_CHK             0x000118000A000020  RSL
GMX2_RX000_FRM_CTL             0x000118000A000018  RSL
GMX2_RX000_IFG                 0x000118000A000058  RSL
GMX2_RX000_INT_EN              0x000118000A000008  RSL
GMX2_RX000_INT_REG             0x000118000A000000  RSL
GMX2_RX000_JABBER              0x000118000A000038  RSL
GMX2_RX000_PAUSE_DROP_TIME     0x000118000A000068  RSL
GMX2_RX000_STATS_CTL           0x000118000A000050  RSL
GMX2_RX000_STATS_OCTS          0x000118000A000088  RSL
GMX2_RX000_STATS_OCTS_CTL      0x000118000A000098  RSL
GMX2_RX000_STATS_OCTS_DMAC     0x000118000A0000A8  RSL
GMX2_RX000_STATS_OCTS_DRP      0x000118000A0000B8  RSL
GMX2_RX000_STATS_PKTS          0x000118000A000080  RSL
GMX2_RX000_STATS_PKTS_BAD      0x000118000A0000C0  RSL
GMX2_RX000_STATS_PKTS_CTL      0x000118000A000090  RSL
GMX2_RX000_STATS_PKTS_DMAC     0x000118000A0000A0  RSL
GMX2_RX000_STATS_PKTS_DRP      0x000118000A0000B0  RSL
GMX2_RX000_UDD_SKP             0x000118000A000048  RSL
GMX2_RX001_ADR_CAM0            0x000118000A000980  RSL
GMX2_RX001_ADR_CAM1            0x000118000A000988  RSL
GMX2_RX001_ADR_CAM2            0x000118000A000990  RSL
GMX2_RX001_ADR_CAM3            0x000118000A000998  RSL
GMX2_RX001_ADR_CAM4            0x000118000A0009A0  RSL
GMX2_RX001_ADR_CAM5            0x000118000A0009A8  RSL
GMX2_RX001_ADR_CAM_EN          0x000118000A000908  RSL
GMX2_RX001_ADR_CTL             0x000118000A000900  RSL
GMX2_RX001_DECISION            0x000118000A000840  RSL
GMX2_RX001_FRM_CHK             0x000118000A000820  RSL
GMX2_RX001_FRM_CTL             0x000118000A000818  RSL
GMX2_RX001_IFG                 0x000118000A000858  RSL
GMX2_RX001_INT_EN              0x000118000A000808  RSL
GMX2_RX001_INT_REG             0x000118000A000800  RSL
GMX2_RX001_JABBER              0x000118000A000838  RSL
GMX2_RX001_PAUSE_DROP_TIME     0x000118000A000868  RSL
GMX2_RX001_STATS_CTL           0x000118000A000850  RSL
GMX2_RX001_STATS_OCTS          0x000118000A000888  RSL
GMX2_RX001_STATS_OCTS_CTL      0x000118000A000898  RSL
GMX2_RX001_STATS_OCTS_DMAC     0x000118000A0008A8  RSL
GMX2_RX001_STATS_OCTS_DRP      0x000118000A0008B8  RSL
GMX2_RX001_STATS_PKTS          0x000118000A000880  RSL
GMX2_RX001_STATS_PKTS_BAD      0x000118000A0008C0  RSL
GMX2_RX001_STATS_PKTS_CTL      0x000118000A000890  RSL
GMX2_RX001_STATS_PKTS_DMAC     0x000118000A0008A0  RSL
GMX2_RX001_STATS_PKTS_DRP      0x000118000A0008B0  RSL
GMX2_RX001_UDD_SKP             0x000118000A000848  RSL
GMX2_RX002_ADR_CAM0            0x000118000A001180  RSL
GMX2_RX002_ADR_CAM1            0x000118000A001188  RSL
GMX2_RX002_ADR_CAM2            0x000118000A001190  RSL
GMX2_RX002_ADR_CAM3            0x000118000A001198  RSL
GMX2_RX002_ADR_CAM4            0x000118000A0011A0  RSL
GMX2_RX002_ADR_CAM5            0x000118000A0011A8  RSL
GMX2_RX002_ADR_CAM_EN          0x000118000A001108  RSL
GMX2_RX002_ADR_CTL             0x000118000A001100  RSL
GMX2_RX002_DECISION            0x000118000A001040  RSL
GMX2_RX002_FRM_CHK             0x000118000A001020  RSL
GMX2_RX002_FRM_CTL             0x000118000A001018  RSL
GMX2_RX002_IFG                 0x000118000A001058  RSL
GMX2_RX002_INT_EN              0x000118000A001008  RSL
GMX2_RX002_INT_REG             0x000118000A001000  RSL
GMX2_RX002_JABBER              0x000118000A001038  RSL
GMX2_RX002_PAUSE_DROP_TIME     0x000118000A001068  RSL
GMX2_RX002_STATS_CTL           0x000118000A001050  RSL
GMX2_RX002_STATS_OCTS          0x000118000A001088  RSL
GMX2_RX002_STATS_OCTS_CTL      0x000118000A001098  RSL
GMX2_RX002_STATS_OCTS_DMAC     0x000118000A0010A8  RSL
GMX2_RX002_STATS_OCTS_DRP      0x000118000A0010B8  RSL
GMX2_RX002_STATS_PKTS          0x000118000A001080  RSL
GMX2_RX002_STATS_PKTS_BAD      0x000118000A0010C0  RSL
GMX2_RX002_STATS_PKTS_CTL      0x000118000A001090  RSL
GMX2_RX002_STATS_PKTS_DMAC     0x000118000A0010A0  RSL
GMX2_RX002_STATS_PKTS_DRP      0x000118000A0010B0  RSL
GMX2_RX002_UDD_SKP             0x000118000A001048  RSL
GMX2_RX003_ADR_CAM0            0x000118000A001980  RSL
GMX2_RX003_ADR_CAM1            0x000118000A001988  RSL
GMX2_RX003_ADR_CAM2            0x000118000A001990  RSL
GMX2_RX003_ADR_CAM3            0x000118000A001998  RSL
GMX2_RX003_ADR_CAM4            0x000118000A0019A0  RSL
GMX2_RX003_ADR_CAM5            0x000118000A0019A8  RSL
GMX2_RX003_ADR_CAM_EN          0x000118000A001908  RSL
GMX2_RX003_ADR_CTL             0x000118000A001900  RSL
GMX2_RX003_DECISION            0x000118000A001840  RSL
GMX2_RX003_FRM_CHK             0x000118000A001820  RSL
GMX2_RX003_FRM_CTL             0x000118000A001818  RSL
GMX2_RX003_IFG                 0x000118000A001858  RSL
GMX2_RX003_INT_EN              0x000118000A001808  RSL
GMX2_RX003_INT_REG             0x000118000A001800  RSL
GMX2_RX003_JABBER              0x000118000A001838  RSL
GMX2_RX003_PAUSE_DROP_TIME     0x000118000A001868  RSL
GMX2_RX003_STATS_CTL           0x000118000A001850  RSL
GMX2_RX003_STATS_OCTS          0x000118000A001888  RSL
GMX2_RX003_STATS_OCTS_CTL      0x000118000A001898  RSL
GMX2_RX003_STATS_OCTS_DMAC     0x000118000A0018A8  RSL
GMX2_RX003_STATS_OCTS_DRP      0x000118000A0018B8  RSL
GMX2_RX003_STATS_PKTS          0x000118000A001880  RSL
GMX2_RX003_STATS_PKTS_BAD      0x000118000A0018C0  RSL
GMX2_RX003_STATS_PKTS_CTL      0x000118000A001890  RSL
GMX2_RX003_STATS_PKTS_DMAC     0x000118000A0018A0  RSL
GMX2_RX003_STATS_PKTS_DRP      0x000118000A0018B0  RSL
GMX2_RX003_UDD_SKP             0x000118000A001848  RSL
GMX2_RXAUI_CTL                 0x000118000A000740  RSL
GMX2_RX_BP_DROP000             0x000118000A000420  RSL
GMX2_RX_BP_DROP001             0x000118000A000428  RSL
GMX2_RX_BP_DROP002             0x000118000A000430  RSL
GMX2_RX_BP_DROP003             0x000118000A000438  RSL
GMX2_RX_BP_OFF000              0x000118000A000460  RSL
GMX2_RX_BP_OFF001              0x000118000A000468  RSL
GMX2_RX_BP_OFF002              0x000118000A000470  RSL
GMX2_RX_BP_OFF003              0x000118000A000478  RSL
GMX2_RX_BP_ON000               0x000118000A000440  RSL
GMX2_RX_BP_ON001               0x000118000A000448  RSL
GMX2_RX_BP_ON002               0x000118000A000450  RSL
GMX2_RX_BP_ON003               0x000118000A000458  RSL
GMX2_RX_HG2_STATUS             0x000118000A000548  RSL
GMX2_RX_PRTS                   0x000118000A000410  RSL
GMX2_RX_PRT_INFO               0x000118000A0004E8  RSL
GMX2_RX_XAUI_BAD_COL           0x000118000A000538  RSL
GMX2_RX_XAUI_CTL               0x000118000A000530  RSL
GMX2_SMAC000                   0x000118000A000230  RSL
GMX2_SMAC001                   0x000118000A000A30  RSL
GMX2_SMAC002                   0x000118000A001230  RSL
GMX2_SMAC003                   0x000118000A001A30  RSL
GMX2_SOFT_BIST                 0x000118000A0007E8  RSL
GMX2_STAT_BP                   0x000118000A000520  RSL
GMX2_TX000_APPEND              0x000118000A000218  RSL
GMX2_TX000_BURST               0x000118000A000228  RSL
GMX2_TX000_CBFC_XOFF           0x000118000A0005A0  RSL
GMX2_TX000_CBFC_XON            0x000118000A0005C0  RSL
GMX2_TX000_CTL                 0x000118000A000270  RSL
GMX2_TX000_MIN_PKT             0x000118000A000240  RSL
GMX2_TX000_PAUSE_PKT_INTERVAL  0x000118000A000248  RSL
GMX2_TX000_PAUSE_PKT_TIME      0x000118000A000238  RSL
GMX2_TX000_PAUSE_TOGO          0x000118000A000258  RSL
GMX2_TX000_PAUSE_ZERO          0x000118000A000260  RSL
GMX2_TX000_PIPE                0x000118000A000310  RSL
GMX2_TX000_SGMII_CTL           0x000118000A000300  RSL
GMX2_TX000_SLOT                0x000118000A000220  RSL
GMX2_TX000_SOFT_PAUSE          0x000118000A000250  RSL
GMX2_TX000_STAT0               0x000118000A000280  RSL
GMX2_TX000_STAT1               0x000118000A000288  RSL
GMX2_TX000_STAT2               0x000118000A000290  RSL
GMX2_TX000_STAT3               0x000118000A000298  RSL
GMX2_TX000_STAT4               0x000118000A0002A0  RSL
GMX2_TX000_STAT5               0x000118000A0002A8  RSL
GMX2_TX000_STAT6               0x000118000A0002B0  RSL
GMX2_TX000_STAT7               0x000118000A0002B8  RSL
GMX2_TX000_STAT8               0x000118000A0002C0  RSL
GMX2_TX000_STAT9               0x000118000A0002C8  RSL
GMX2_TX000_STATS_CTL           0x000118000A000268  RSL
GMX2_TX000_THRESH              0x000118000A000210  RSL
GMX2_TX001_APPEND              0x000118000A000A18  RSL
GMX2_TX001_BURST               0x000118000A000A28  RSL
GMX2_TX001_CTL                 0x000118000A000A70  RSL
GMX2_TX001_MIN_PKT             0x000118000A000A40  RSL
GMX2_TX001_PAUSE_PKT_INTERVAL  0x000118000A000A48  RSL
GMX2_TX001_PAUSE_PKT_TIME      0x000118000A000A38  RSL
GMX2_TX001_PAUSE_TOGO          0x000118000A000A58  RSL
GMX2_TX001_PAUSE_ZERO          0x000118000A000A60  RSL
GMX2_TX001_PIPE                0x000118000A000B10  RSL
GMX2_TX001_SGMII_CTL           0x000118000A000B00  RSL
GMX2_TX001_SLOT                0x000118000A000A20  RSL
GMX2_TX001_SOFT_PAUSE          0x000118000A000A50  RSL
GMX2_TX001_STAT0               0x000118000A000A80  RSL
GMX2_TX001_STAT1               0x000118000A000A88  RSL
GMX2_TX001_STAT2               0x000118000A000A90  RSL
GMX2_TX001_STAT3               0x000118000A000A98  RSL
GMX2_TX001_STAT4               0x000118000A000AA0  RSL
GMX2_TX001_STAT5               0x000118000A000AA8  RSL
GMX2_TX001_STAT6               0x000118000A000AB0  RSL
GMX2_TX001_STAT7               0x000118000A000AB8  RSL
GMX2_TX001_STAT8               0x000118000A000AC0  RSL
GMX2_TX001_STAT9               0x000118000A000AC8  RSL
GMX2_TX001_STATS_CTL           0x000118000A000A68  RSL
GMX2_TX001_THRESH              0x000118000A000A10  RSL
GMX2_TX002_APPEND              0x000118000A001218  RSL
GMX2_TX002_BURST               0x000118000A001228  RSL
GMX2_TX002_CTL                 0x000118000A001270  RSL
GMX2_TX002_MIN_PKT             0x000118000A001240  RSL
GMX2_TX002_PAUSE_PKT_INTERVAL  0x000118000A001248  RSL
GMX2_TX002_PAUSE_PKT_TIME      0x000118000A001238  RSL
GMX2_TX002_PAUSE_TOGO          0x000118000A001258  RSL
GMX2_TX002_PAUSE_ZERO          0x000118000A001260  RSL
GMX2_TX002_PIPE                0x000118000A001310  RSL
GMX2_TX002_SGMII_CTL           0x000118000A001300  RSL
GMX2_TX002_SLOT                0x000118000A001220  RSL
GMX2_TX002_SOFT_PAUSE          0x000118000A001250  RSL
GMX2_TX002_STAT0               0x000118000A001280  RSL
GMX2_TX002_STAT1               0x000118000A001288  RSL
GMX2_TX002_STAT2               0x000118000A001290  RSL
GMX2_TX002_STAT3               0x000118000A001298  RSL
GMX2_TX002_STAT4               0x000118000A0012A0  RSL
GMX2_TX002_STAT5               0x000118000A0012A8  RSL
GMX2_TX002_STAT6               0x000118000A0012B0  RSL
GMX2_TX002_STAT7               0x000118000A0012B8  RSL
GMX2_TX002_STAT8               0x000118000A0012C0  RSL
GMX2_TX002_STAT9               0x000118000A0012C8  RSL
GMX2_TX002_STATS_CTL           0x000118000A001268  RSL
GMX2_TX002_THRESH              0x000118000A001210  RSL
GMX2_TX003_APPEND              0x000118000A001A18  RSL
GMX2_TX003_BURST               0x000118000A001A28  RSL
GMX2_TX003_CTL                 0x000118000A001A70  RSL
GMX2_TX003_MIN_PKT             0x000118000A001A40  RSL
GMX2_TX003_PAUSE_PKT_INTERVAL  0x000118000A001A48  RSL
GMX2_TX003_PAUSE_PKT_TIME      0x000118000A001A38  RSL
GMX2_TX003_PAUSE_TOGO          0x000118000A001A58  RSL
GMX2_TX003_PAUSE_ZERO          0x000118000A001A60  RSL
GMX2_TX003_PIPE                0x000118000A001B10  RSL
GMX2_TX003_SGMII_CTL           0x000118000A001B00  RSL
GMX2_TX003_SLOT                0x000118000A001A20  RSL
GMX2_TX003_SOFT_PAUSE          0x000118000A001A50  RSL
GMX2_TX003_STAT0               0x000118000A001A80  RSL
GMX2_TX003_STAT1               0x000118000A001A88  RSL
GMX2_TX003_STAT2               0x000118000A001A90  RSL
GMX2_TX003_STAT3               0x000118000A001A98  RSL
GMX2_TX003_STAT4               0x000118000A001AA0  RSL
GMX2_TX003_STAT5               0x000118000A001AA8  RSL
GMX2_TX003_STAT6               0x000118000A001AB0  RSL
GMX2_TX003_STAT7               0x000118000A001AB8  RSL
GMX2_TX003_STAT8               0x000118000A001AC0  RSL
GMX2_TX003_STAT9               0x000118000A001AC8  RSL
GMX2_TX003_STATS_CTL           0x000118000A001A68  RSL
GMX2_TX003_THRESH              0x000118000A001A10  RSL
GMX2_TX_BP                     0x000118000A0004D0  RSL
GMX2_TX_COL_ATTEMPT            0x000118000A000498  RSL
GMX2_TX_CORRUPT                0x000118000A0004D8  RSL
GMX2_TX_HG2_REG1               0x000118000A000558  RSL
GMX2_TX_HG2_REG2               0x000118000A000560  RSL
GMX2_TX_IFG                    0x000118000A000488  RSL
GMX2_TX_INT_EN                 0x000118000A000508  RSL
GMX2_TX_INT_REG                0x000118000A000500  RSL
GMX2_TX_JAM                    0x000118000A000490  RSL
GMX2_TX_LFSR                   0x000118000A0004F8  RSL
GMX2_TX_OVR_BP                 0x000118000A0004C8  RSL
GMX2_TX_PAUSE_PKT_DMAC         0x000118000A0004A0  RSL
GMX2_TX_PAUSE_PKT_TYPE         0x000118000A0004A8  RSL
GMX2_TX_PRTS                   0x000118000A000480  RSL
GMX2_TX_XAUI_CTL               0x000118000A000528  RSL
GMX2_XAUI_EXT_LOOPBACK         0x000118000A000540  RSL
GMX3_BAD_REG                   0x000118000B000518  RSL
GMX3_BIST                      0x000118000B000400  RSL
GMX3_BPID_MAP000               0x000118000B000680  RSL
GMX3_BPID_MAP001               0x000118000B000688  RSL
GMX3_BPID_MAP002               0x000118000B000690  RSL
GMX3_BPID_MAP003               0x000118000B000698  RSL
GMX3_BPID_MAP004               0x000118000B0006A0  RSL
GMX3_BPID_MAP005               0x000118000B0006A8  RSL
GMX3_BPID_MAP006               0x000118000B0006B0  RSL
GMX3_BPID_MAP007               0x000118000B0006B8  RSL
GMX3_BPID_MAP008               0x000118000B0006C0  RSL
GMX3_BPID_MAP009               0x000118000B0006C8  RSL
GMX3_BPID_MAP010               0x000118000B0006D0  RSL
GMX3_BPID_MAP011               0x000118000B0006D8  RSL
GMX3_BPID_MAP012               0x000118000B0006E0  RSL
GMX3_BPID_MAP013               0x000118000B0006E8  RSL
GMX3_BPID_MAP014               0x000118000B0006F0  RSL
GMX3_BPID_MAP015               0x000118000B0006F8  RSL
GMX3_BPID_MSK                  0x000118000B000700  RSL
GMX3_CLK_EN                    0x000118000B0007F0  RSL
GMX3_EBP_DIS                   0x000118000B000608  RSL
GMX3_EBP_MSK                   0x000118000B000600  RSL
GMX3_HG2_CONTROL               0x000118000B000550  RSL
GMX3_INF_MODE                  0x000118000B0007F8  RSL
GMX3_NXA_ADR                   0x000118000B000510  RSL
GMX3_PIPE_STATUS               0x000118000B000760  RSL
GMX3_PRT000_CBFC_CTL           0x000118000B000580  RSL
GMX3_PRT000_CFG                0x000118000B000010  RSL
GMX3_PRT001_CFG                0x000118000B000810  RSL
GMX3_PRT002_CFG                0x000118000B001010  RSL
GMX3_PRT003_CFG                0x000118000B001810  RSL
GMX3_RX000_ADR_CAM0            0x000118000B000180  RSL
GMX3_RX000_ADR_CAM1            0x000118000B000188  RSL
GMX3_RX000_ADR_CAM2            0x000118000B000190  RSL
GMX3_RX000_ADR_CAM3            0x000118000B000198  RSL
GMX3_RX000_ADR_CAM4            0x000118000B0001A0  RSL
GMX3_RX000_ADR_CAM5            0x000118000B0001A8  RSL
GMX3_RX000_ADR_CAM_EN          0x000118000B000108  RSL
GMX3_RX000_ADR_CTL             0x000118000B000100  RSL
GMX3_RX000_DECISION            0x000118000B000040  RSL
GMX3_RX000_FRM_CHK             0x000118000B000020  RSL
GMX3_RX000_FRM_CTL             0x000118000B000018  RSL
GMX3_RX000_IFG                 0x000118000B000058  RSL
GMX3_RX000_INT_EN              0x000118000B000008  RSL
GMX3_RX000_INT_REG             0x000118000B000000  RSL
GMX3_RX000_JABBER              0x000118000B000038  RSL
GMX3_RX000_PAUSE_DROP_TIME     0x000118000B000068  RSL
GMX3_RX000_STATS_CTL           0x000118000B000050  RSL
GMX3_RX000_STATS_OCTS          0x000118000B000088  RSL
GMX3_RX000_STATS_OCTS_CTL      0x000118000B000098  RSL
GMX3_RX000_STATS_OCTS_DMAC     0x000118000B0000A8  RSL
GMX3_RX000_STATS_OCTS_DRP      0x000118000B0000B8  RSL
GMX3_RX000_STATS_PKTS          0x000118000B000080  RSL
GMX3_RX000_STATS_PKTS_BAD      0x000118000B0000C0  RSL
GMX3_RX000_STATS_PKTS_CTL      0x000118000B000090  RSL
GMX3_RX000_STATS_PKTS_DMAC     0x000118000B0000A0  RSL
GMX3_RX000_STATS_PKTS_DRP      0x000118000B0000B0  RSL
GMX3_RX000_UDD_SKP             0x000118000B000048  RSL
GMX3_RX001_ADR_CAM0            0x000118000B000980  RSL
GMX3_RX001_ADR_CAM1            0x000118000B000988  RSL
GMX3_RX001_ADR_CAM2            0x000118000B000990  RSL
GMX3_RX001_ADR_CAM3            0x000118000B000998  RSL
GMX3_RX001_ADR_CAM4            0x000118000B0009A0  RSL
GMX3_RX001_ADR_CAM5            0x000118000B0009A8  RSL
GMX3_RX001_ADR_CAM_EN          0x000118000B000908  RSL
GMX3_RX001_ADR_CTL             0x000118000B000900  RSL
GMX3_RX001_DECISION            0x000118000B000840  RSL
GMX3_RX001_FRM_CHK             0x000118000B000820  RSL
GMX3_RX001_FRM_CTL             0x000118000B000818  RSL
GMX3_RX001_IFG                 0x000118000B000858  RSL
GMX3_RX001_INT_EN              0x000118000B000808  RSL
GMX3_RX001_INT_REG             0x000118000B000800  RSL
GMX3_RX001_JABBER              0x000118000B000838  RSL
GMX3_RX001_PAUSE_DROP_TIME     0x000118000B000868  RSL
GMX3_RX001_STATS_CTL           0x000118000B000850  RSL
GMX3_RX001_STATS_OCTS          0x000118000B000888  RSL
GMX3_RX001_STATS_OCTS_CTL      0x000118000B000898  RSL
GMX3_RX001_STATS_OCTS_DMAC     0x000118000B0008A8  RSL
GMX3_RX001_STATS_OCTS_DRP      0x000118000B0008B8  RSL
GMX3_RX001_STATS_PKTS          0x000118000B000880  RSL
GMX3_RX001_STATS_PKTS_BAD      0x000118000B0008C0  RSL
GMX3_RX001_STATS_PKTS_CTL      0x000118000B000890  RSL
GMX3_RX001_STATS_PKTS_DMAC     0x000118000B0008A0  RSL
GMX3_RX001_STATS_PKTS_DRP      0x000118000B0008B0  RSL
GMX3_RX001_UDD_SKP             0x000118000B000848  RSL
GMX3_RX002_ADR_CAM0            0x000118000B001180  RSL
GMX3_RX002_ADR_CAM1            0x000118000B001188  RSL
GMX3_RX002_ADR_CAM2            0x000118000B001190  RSL
GMX3_RX002_ADR_CAM3            0x000118000B001198  RSL
GMX3_RX002_ADR_CAM4            0x000118000B0011A0  RSL
GMX3_RX002_ADR_CAM5            0x000118000B0011A8  RSL
GMX3_RX002_ADR_CAM_EN          0x000118000B001108  RSL
GMX3_RX002_ADR_CTL             0x000118000B001100  RSL
GMX3_RX002_DECISION            0x000118000B001040  RSL
GMX3_RX002_FRM_CHK             0x000118000B001020  RSL
GMX3_RX002_FRM_CTL             0x000118000B001018  RSL
GMX3_RX002_IFG                 0x000118000B001058  RSL
GMX3_RX002_INT_EN              0x000118000B001008  RSL
GMX3_RX002_INT_REG             0x000118000B001000  RSL
GMX3_RX002_JABBER              0x000118000B001038  RSL
GMX3_RX002_PAUSE_DROP_TIME     0x000118000B001068  RSL
GMX3_RX002_STATS_CTL           0x000118000B001050  RSL
GMX3_RX002_STATS_OCTS          0x000118000B001088  RSL
GMX3_RX002_STATS_OCTS_CTL      0x000118000B001098  RSL
GMX3_RX002_STATS_OCTS_DMAC     0x000118000B0010A8  RSL
GMX3_RX002_STATS_OCTS_DRP      0x000118000B0010B8  RSL
GMX3_RX002_STATS_PKTS          0x000118000B001080  RSL
GMX3_RX002_STATS_PKTS_BAD      0x000118000B0010C0  RSL
GMX3_RX002_STATS_PKTS_CTL      0x000118000B001090  RSL
GMX3_RX002_STATS_PKTS_DMAC     0x000118000B0010A0  RSL
GMX3_RX002_STATS_PKTS_DRP      0x000118000B0010B0  RSL
GMX3_RX002_UDD_SKP             0x000118000B001048  RSL
GMX3_RX003_ADR_CAM0            0x000118000B001980  RSL
GMX3_RX003_ADR_CAM1            0x000118000B001988  RSL
GMX3_RX003_ADR_CAM2            0x000118000B001990  RSL
GMX3_RX003_ADR_CAM3            0x000118000B001998  RSL
GMX3_RX003_ADR_CAM4            0x000118000B0019A0  RSL
GMX3_RX003_ADR_CAM5            0x000118000B0019A8  RSL
GMX3_RX003_ADR_CAM_EN          0x000118000B001908  RSL
GMX3_RX003_ADR_CTL             0x000118000B001900  RSL
GMX3_RX003_DECISION            0x000118000B001840  RSL
GMX3_RX003_FRM_CHK             0x000118000B001820  RSL
GMX3_RX003_FRM_CTL             0x000118000B001818  RSL
GMX3_RX003_IFG                 0x000118000B001858  RSL
GMX3_RX003_INT_EN              0x000118000B001808  RSL
GMX3_RX003_INT_REG             0x000118000B001800  RSL
GMX3_RX003_JABBER              0x000118000B001838  RSL
GMX3_RX003_PAUSE_DROP_TIME     0x000118000B001868  RSL
GMX3_RX003_STATS_CTL           0x000118000B001850  RSL
GMX3_RX003_STATS_OCTS          0x000118000B001888  RSL
GMX3_RX003_STATS_OCTS_CTL      0x000118000B001898  RSL
GMX3_RX003_STATS_OCTS_DMAC     0x000118000B0018A8  RSL
GMX3_RX003_STATS_OCTS_DRP      0x000118000B0018B8  RSL
GMX3_RX003_STATS_PKTS          0x000118000B001880  RSL
GMX3_RX003_STATS_PKTS_BAD      0x000118000B0018C0  RSL
GMX3_RX003_STATS_PKTS_CTL      0x000118000B001890  RSL
GMX3_RX003_STATS_PKTS_DMAC     0x000118000B0018A0  RSL
GMX3_RX003_STATS_PKTS_DRP      0x000118000B0018B0  RSL
GMX3_RX003_UDD_SKP             0x000118000B001848  RSL
GMX3_RXAUI_CTL                 0x000118000B000740  RSL
GMX3_RX_BP_DROP000             0x000118000B000420  RSL
GMX3_RX_BP_DROP001             0x000118000B000428  RSL
GMX3_RX_BP_DROP002             0x000118000B000430  RSL
GMX3_RX_BP_DROP003             0x000118000B000438  RSL
GMX3_RX_BP_OFF000              0x000118000B000460  RSL
GMX3_RX_BP_OFF001              0x000118000B000468  RSL
GMX3_RX_BP_OFF002              0x000118000B000470  RSL
GMX3_RX_BP_OFF003              0x000118000B000478  RSL
GMX3_RX_BP_ON000               0x000118000B000440  RSL
GMX3_RX_BP_ON001               0x000118000B000448  RSL
GMX3_RX_BP_ON002               0x000118000B000450  RSL
GMX3_RX_BP_ON003               0x000118000B000458  RSL
GMX3_RX_HG2_STATUS             0x000118000B000548  RSL
GMX3_RX_PRTS                   0x000118000B000410  RSL
GMX3_RX_PRT_INFO               0x000118000B0004E8  RSL
GMX3_RX_XAUI_BAD_COL           0x000118000B000538  RSL
GMX3_RX_XAUI_CTL               0x000118000B000530  RSL
GMX3_SMAC000                   0x000118000B000230  RSL
GMX3_SMAC001                   0x000118000B000A30  RSL
GMX3_SMAC002                   0x000118000B001230  RSL
GMX3_SMAC003                   0x000118000B001A30  RSL
GMX3_SOFT_BIST                 0x000118000B0007E8  RSL
GMX3_STAT_BP                   0x000118000B000520  RSL
GMX3_TX000_APPEND              0x000118000B000218  RSL
GMX3_TX000_BURST               0x000118000B000228  RSL
GMX3_TX000_CBFC_XOFF           0x000118000B0005A0  RSL
GMX3_TX000_CBFC_XON            0x000118000B0005C0  RSL
GMX3_TX000_CTL                 0x000118000B000270  RSL
GMX3_TX000_MIN_PKT             0x000118000B000240  RSL
GMX3_TX000_PAUSE_PKT_INTERVAL  0x000118000B000248  RSL
GMX3_TX000_PAUSE_PKT_TIME      0x000118000B000238  RSL
GMX3_TX000_PAUSE_TOGO          0x000118000B000258  RSL
GMX3_TX000_PAUSE_ZERO          0x000118000B000260  RSL
GMX3_TX000_PIPE                0x000118000B000310  RSL
GMX3_TX000_SGMII_CTL           0x000118000B000300  RSL
GMX3_TX000_SLOT                0x000118000B000220  RSL
GMX3_TX000_SOFT_PAUSE          0x000118000B000250  RSL
GMX3_TX000_STAT0               0x000118000B000280  RSL
GMX3_TX000_STAT1               0x000118000B000288  RSL
GMX3_TX000_STAT2               0x000118000B000290  RSL
GMX3_TX000_STAT3               0x000118000B000298  RSL
GMX3_TX000_STAT4               0x000118000B0002A0  RSL
GMX3_TX000_STAT5               0x000118000B0002A8  RSL
GMX3_TX000_STAT6               0x000118000B0002B0  RSL
GMX3_TX000_STAT7               0x000118000B0002B8  RSL
GMX3_TX000_STAT8               0x000118000B0002C0  RSL
GMX3_TX000_STAT9               0x000118000B0002C8  RSL
GMX3_TX000_STATS_CTL           0x000118000B000268  RSL
GMX3_TX000_THRESH              0x000118000B000210  RSL
GMX3_TX001_APPEND              0x000118000B000A18  RSL
GMX3_TX001_BURST               0x000118000B000A28  RSL
GMX3_TX001_CTL                 0x000118000B000A70  RSL
GMX3_TX001_MIN_PKT             0x000118000B000A40  RSL
GMX3_TX001_PAUSE_PKT_INTERVAL  0x000118000B000A48  RSL
GMX3_TX001_PAUSE_PKT_TIME      0x000118000B000A38  RSL
GMX3_TX001_PAUSE_TOGO          0x000118000B000A58  RSL
GMX3_TX001_PAUSE_ZERO          0x000118000B000A60  RSL
GMX3_TX001_PIPE                0x000118000B000B10  RSL
GMX3_TX001_SGMII_CTL           0x000118000B000B00  RSL
GMX3_TX001_SLOT                0x000118000B000A20  RSL
GMX3_TX001_SOFT_PAUSE          0x000118000B000A50  RSL
GMX3_TX001_STAT0               0x000118000B000A80  RSL
GMX3_TX001_STAT1               0x000118000B000A88  RSL
GMX3_TX001_STAT2               0x000118000B000A90  RSL
GMX3_TX001_STAT3               0x000118000B000A98  RSL
GMX3_TX001_STAT4               0x000118000B000AA0  RSL
GMX3_TX001_STAT5               0x000118000B000AA8  RSL
GMX3_TX001_STAT6               0x000118000B000AB0  RSL
GMX3_TX001_STAT7               0x000118000B000AB8  RSL
GMX3_TX001_STAT8               0x000118000B000AC0  RSL
GMX3_TX001_STAT9               0x000118000B000AC8  RSL
GMX3_TX001_STATS_CTL           0x000118000B000A68  RSL
GMX3_TX001_THRESH              0x000118000B000A10  RSL
GMX3_TX002_APPEND              0x000118000B001218  RSL
GMX3_TX002_BURST               0x000118000B001228  RSL
GMX3_TX002_CTL                 0x000118000B001270  RSL
GMX3_TX002_MIN_PKT             0x000118000B001240  RSL
GMX3_TX002_PAUSE_PKT_INTERVAL  0x000118000B001248  RSL
GMX3_TX002_PAUSE_PKT_TIME      0x000118000B001238  RSL
GMX3_TX002_PAUSE_TOGO          0x000118000B001258  RSL
GMX3_TX002_PAUSE_ZERO          0x000118000B001260  RSL
GMX3_TX002_PIPE                0x000118000B001310  RSL
GMX3_TX002_SGMII_CTL           0x000118000B001300  RSL
GMX3_TX002_SLOT                0x000118000B001220  RSL
GMX3_TX002_SOFT_PAUSE          0x000118000B001250  RSL
GMX3_TX002_STAT0               0x000118000B001280  RSL
GMX3_TX002_STAT1               0x000118000B001288  RSL
GMX3_TX002_STAT2               0x000118000B001290  RSL
GMX3_TX002_STAT3               0x000118000B001298  RSL
GMX3_TX002_STAT4               0x000118000B0012A0  RSL
GMX3_TX002_STAT5               0x000118000B0012A8  RSL
GMX3_TX002_STAT6               0x000118000B0012B0  RSL
GMX3_TX002_STAT7               0x000118000B0012B8  RSL
GMX3_TX002_STAT8               0x000118000B0012C0  RSL
GMX3_TX002_STAT9               0x000118000B0012C8  RSL
GMX3_TX002_STATS_CTL           0x000118000B001268  RSL
GMX3_TX002_THRESH              0x000118000B001210  RSL
GMX3_TX003_APPEND              0x000118000B001A18  RSL
GMX3_TX003_BURST               0x000118000B001A28  RSL
GMX3_TX003_CTL                 0x000118000B001A70  RSL
GMX3_TX003_MIN_PKT             0x000118000B001A40  RSL
GMX3_TX003_PAUSE_PKT_INTERVAL  0x000118000B001A48  RSL
GMX3_TX003_PAUSE_PKT_TIME      0x000118000B001A38  RSL
GMX3_TX003_PAUSE_TOGO          0x000118000B001A58  RSL
GMX3_TX003_PAUSE_ZERO          0x000118000B001A60  RSL
GMX3_TX003_PIPE                0x000118000B001B10  RSL
GMX3_TX003_SGMII_CTL           0x000118000B001B00  RSL
GMX3_TX003_SLOT                0x000118000B001A20  RSL
GMX3_TX003_SOFT_PAUSE          0x000118000B001A50  RSL
GMX3_TX003_STAT0               0x000118000B001A80  RSL
GMX3_TX003_STAT1               0x000118000B001A88  RSL
GMX3_TX003_STAT2               0x000118000B001A90  RSL
GMX3_TX003_STAT3               0x000118000B001A98  RSL
GMX3_TX003_STAT4               0x000118000B001AA0  RSL
GMX3_TX003_STAT5               0x000118000B001AA8  RSL
GMX3_TX003_STAT6               0x000118000B001AB0  RSL
GMX3_TX003_STAT7               0x000118000B001AB8  RSL
GMX3_TX003_STAT8               0x000118000B001AC0  RSL
GMX3_TX003_STAT9               0x000118000B001AC8  RSL
GMX3_TX003_STATS_CTL           0x000118000B001A68  RSL
GMX3_TX003_THRESH              0x000118000B001A10  RSL
GMX3_TX_BP                     0x000118000B0004D0  RSL
GMX3_TX_COL_ATTEMPT            0x000118000B000498  RSL
GMX3_TX_CORRUPT                0x000118000B0004D8  RSL
GMX3_TX_HG2_REG1               0x000118000B000558  RSL
GMX3_TX_HG2_REG2               0x000118000B000560  RSL
GMX3_TX_IFG                    0x000118000B000488  RSL
GMX3_TX_INT_EN                 0x000118000B000508  RSL
GMX3_TX_INT_REG                0x000118000B000500  RSL
GMX3_TX_JAM                    0x000118000B000490  RSL
GMX3_TX_LFSR                   0x000118000B0004F8  RSL
GMX3_TX_OVR_BP                 0x000118000B0004C8  RSL
GMX3_TX_PAUSE_PKT_DMAC         0x000118000B0004A0  RSL
GMX3_TX_PAUSE_PKT_TYPE         0x000118000B0004A8  RSL
GMX3_TX_PRTS                   0x000118000B000480  RSL
GMX3_TX_XAUI_CTL               0x000118000B000528  RSL
GMX3_XAUI_EXT_LOOPBACK         0x000118000B000540  RSL
GMX4_BAD_REG                   0x000118000C000518  RSL
GMX4_BIST                      0x000118000C000400  RSL
GMX4_BPID_MAP000               0x000118000C000680  RSL
GMX4_BPID_MAP001               0x000118000C000688  RSL
GMX4_BPID_MAP002               0x000118000C000690  RSL
GMX4_BPID_MAP003               0x000118000C000698  RSL
GMX4_BPID_MAP004               0x000118000C0006A0  RSL
GMX4_BPID_MAP005               0x000118000C0006A8  RSL
GMX4_BPID_MAP006               0x000118000C0006B0  RSL
GMX4_BPID_MAP007               0x000118000C0006B8  RSL
GMX4_BPID_MAP008               0x000118000C0006C0  RSL
GMX4_BPID_MAP009               0x000118000C0006C8  RSL
GMX4_BPID_MAP010               0x000118000C0006D0  RSL
GMX4_BPID_MAP011               0x000118000C0006D8  RSL
GMX4_BPID_MAP012               0x000118000C0006E0  RSL
GMX4_BPID_MAP013               0x000118000C0006E8  RSL
GMX4_BPID_MAP014               0x000118000C0006F0  RSL
GMX4_BPID_MAP015               0x000118000C0006F8  RSL
GMX4_BPID_MSK                  0x000118000C000700  RSL
GMX4_CLK_EN                    0x000118000C0007F0  RSL
GMX4_EBP_DIS                   0x000118000C000608  RSL
GMX4_EBP_MSK                   0x000118000C000600  RSL
GMX4_HG2_CONTROL               0x000118000C000550  RSL
GMX4_INF_MODE                  0x000118000C0007F8  RSL
GMX4_NXA_ADR                   0x000118000C000510  RSL
GMX4_PIPE_STATUS               0x000118000C000760  RSL
GMX4_PRT000_CBFC_CTL           0x000118000C000580  RSL
GMX4_PRT000_CFG                0x000118000C000010  RSL
GMX4_PRT001_CFG                0x000118000C000810  RSL
GMX4_PRT002_CFG                0x000118000C001010  RSL
GMX4_PRT003_CFG                0x000118000C001810  RSL
GMX4_RX000_ADR_CAM0            0x000118000C000180  RSL
GMX4_RX000_ADR_CAM1            0x000118000C000188  RSL
GMX4_RX000_ADR_CAM2            0x000118000C000190  RSL
GMX4_RX000_ADR_CAM3            0x000118000C000198  RSL
GMX4_RX000_ADR_CAM4            0x000118000C0001A0  RSL
GMX4_RX000_ADR_CAM5            0x000118000C0001A8  RSL
GMX4_RX000_ADR_CAM_EN          0x000118000C000108  RSL
GMX4_RX000_ADR_CTL             0x000118000C000100  RSL
GMX4_RX000_DECISION            0x000118000C000040  RSL
GMX4_RX000_FRM_CHK             0x000118000C000020  RSL
GMX4_RX000_FRM_CTL             0x000118000C000018  RSL
GMX4_RX000_IFG                 0x000118000C000058  RSL
GMX4_RX000_INT_EN              0x000118000C000008  RSL
GMX4_RX000_INT_REG             0x000118000C000000  RSL
GMX4_RX000_JABBER              0x000118000C000038  RSL
GMX4_RX000_PAUSE_DROP_TIME     0x000118000C000068  RSL
GMX4_RX000_STATS_CTL           0x000118000C000050  RSL
GMX4_RX000_STATS_OCTS          0x000118000C000088  RSL
GMX4_RX000_STATS_OCTS_CTL      0x000118000C000098  RSL
GMX4_RX000_STATS_OCTS_DMAC     0x000118000C0000A8  RSL
GMX4_RX000_STATS_OCTS_DRP      0x000118000C0000B8  RSL
GMX4_RX000_STATS_PKTS          0x000118000C000080  RSL
GMX4_RX000_STATS_PKTS_BAD      0x000118000C0000C0  RSL
GMX4_RX000_STATS_PKTS_CTL      0x000118000C000090  RSL
GMX4_RX000_STATS_PKTS_DMAC     0x000118000C0000A0  RSL
GMX4_RX000_STATS_PKTS_DRP      0x000118000C0000B0  RSL
GMX4_RX000_UDD_SKP             0x000118000C000048  RSL
GMX4_RX001_ADR_CAM0            0x000118000C000980  RSL
GMX4_RX001_ADR_CAM1            0x000118000C000988  RSL
GMX4_RX001_ADR_CAM2            0x000118000C000990  RSL
GMX4_RX001_ADR_CAM3            0x000118000C000998  RSL
GMX4_RX001_ADR_CAM4            0x000118000C0009A0  RSL
GMX4_RX001_ADR_CAM5            0x000118000C0009A8  RSL
GMX4_RX001_ADR_CAM_EN          0x000118000C000908  RSL
GMX4_RX001_ADR_CTL             0x000118000C000900  RSL
GMX4_RX001_DECISION            0x000118000C000840  RSL
GMX4_RX001_FRM_CHK             0x000118000C000820  RSL
GMX4_RX001_FRM_CTL             0x000118000C000818  RSL
GMX4_RX001_IFG                 0x000118000C000858  RSL
GMX4_RX001_INT_EN              0x000118000C000808  RSL
GMX4_RX001_INT_REG             0x000118000C000800  RSL
GMX4_RX001_JABBER              0x000118000C000838  RSL
GMX4_RX001_PAUSE_DROP_TIME     0x000118000C000868  RSL
GMX4_RX001_STATS_CTL           0x000118000C000850  RSL
GMX4_RX001_STATS_OCTS          0x000118000C000888  RSL
GMX4_RX001_STATS_OCTS_CTL      0x000118000C000898  RSL
GMX4_RX001_STATS_OCTS_DMAC     0x000118000C0008A8  RSL
GMX4_RX001_STATS_OCTS_DRP      0x000118000C0008B8  RSL
GMX4_RX001_STATS_PKTS          0x000118000C000880  RSL
GMX4_RX001_STATS_PKTS_BAD      0x000118000C0008C0  RSL
GMX4_RX001_STATS_PKTS_CTL      0x000118000C000890  RSL
GMX4_RX001_STATS_PKTS_DMAC     0x000118000C0008A0  RSL
GMX4_RX001_STATS_PKTS_DRP      0x000118000C0008B0  RSL
GMX4_RX001_UDD_SKP             0x000118000C000848  RSL
GMX4_RX002_ADR_CAM0            0x000118000C001180  RSL
GMX4_RX002_ADR_CAM1            0x000118000C001188  RSL
GMX4_RX002_ADR_CAM2            0x000118000C001190  RSL
GMX4_RX002_ADR_CAM3            0x000118000C001198  RSL
GMX4_RX002_ADR_CAM4            0x000118000C0011A0  RSL
GMX4_RX002_ADR_CAM5            0x000118000C0011A8  RSL
GMX4_RX002_ADR_CAM_EN          0x000118000C001108  RSL
GMX4_RX002_ADR_CTL             0x000118000C001100  RSL
GMX4_RX002_DECISION            0x000118000C001040  RSL
GMX4_RX002_FRM_CHK             0x000118000C001020  RSL
GMX4_RX002_FRM_CTL             0x000118000C001018  RSL
GMX4_RX002_IFG                 0x000118000C001058  RSL
GMX4_RX002_INT_EN              0x000118000C001008  RSL
GMX4_RX002_INT_REG             0x000118000C001000  RSL
GMX4_RX002_JABBER              0x000118000C001038  RSL
GMX4_RX002_PAUSE_DROP_TIME     0x000118000C001068  RSL
GMX4_RX002_STATS_CTL           0x000118000C001050  RSL
GMX4_RX002_STATS_OCTS          0x000118000C001088  RSL
GMX4_RX002_STATS_OCTS_CTL      0x000118000C001098  RSL
GMX4_RX002_STATS_OCTS_DMAC     0x000118000C0010A8  RSL
GMX4_RX002_STATS_OCTS_DRP      0x000118000C0010B8  RSL
GMX4_RX002_STATS_PKTS          0x000118000C001080  RSL
GMX4_RX002_STATS_PKTS_BAD      0x000118000C0010C0  RSL
GMX4_RX002_STATS_PKTS_CTL      0x000118000C001090  RSL
GMX4_RX002_STATS_PKTS_DMAC     0x000118000C0010A0  RSL
GMX4_RX002_STATS_PKTS_DRP      0x000118000C0010B0  RSL
GMX4_RX002_UDD_SKP             0x000118000C001048  RSL
GMX4_RX003_ADR_CAM0            0x000118000C001980  RSL
GMX4_RX003_ADR_CAM1            0x000118000C001988  RSL
GMX4_RX003_ADR_CAM2            0x000118000C001990  RSL
GMX4_RX003_ADR_CAM3            0x000118000C001998  RSL
GMX4_RX003_ADR_CAM4            0x000118000C0019A0  RSL
GMX4_RX003_ADR_CAM5            0x000118000C0019A8  RSL
GMX4_RX003_ADR_CAM_EN          0x000118000C001908  RSL
GMX4_RX003_ADR_CTL             0x000118000C001900  RSL
GMX4_RX003_DECISION            0x000118000C001840  RSL
GMX4_RX003_FRM_CHK             0x000118000C001820  RSL
GMX4_RX003_FRM_CTL             0x000118000C001818  RSL
GMX4_RX003_IFG                 0x000118000C001858  RSL
GMX4_RX003_INT_EN              0x000118000C001808  RSL
GMX4_RX003_INT_REG             0x000118000C001800  RSL
GMX4_RX003_JABBER              0x000118000C001838  RSL
GMX4_RX003_PAUSE_DROP_TIME     0x000118000C001868  RSL
GMX4_RX003_STATS_CTL           0x000118000C001850  RSL
GMX4_RX003_STATS_OCTS          0x000118000C001888  RSL
GMX4_RX003_STATS_OCTS_CTL      0x000118000C001898  RSL
GMX4_RX003_STATS_OCTS_DMAC     0x000118000C0018A8  RSL
GMX4_RX003_STATS_OCTS_DRP      0x000118000C0018B8  RSL
GMX4_RX003_STATS_PKTS          0x000118000C001880  RSL
GMX4_RX003_STATS_PKTS_BAD      0x000118000C0018C0  RSL
GMX4_RX003_STATS_PKTS_CTL      0x000118000C001890  RSL
GMX4_RX003_STATS_PKTS_DMAC     0x000118000C0018A0  RSL
GMX4_RX003_STATS_PKTS_DRP      0x000118000C0018B0  RSL
GMX4_RX003_UDD_SKP             0x000118000C001848  RSL
GMX4_RXAUI_CTL                 0x000118000C000740  RSL
GMX4_RX_BP_DROP000             0x000118000C000420  RSL
GMX4_RX_BP_DROP001             0x000118000C000428  RSL
GMX4_RX_BP_DROP002             0x000118000C000430  RSL
GMX4_RX_BP_DROP003             0x000118000C000438  RSL
GMX4_RX_BP_OFF000              0x000118000C000460  RSL
GMX4_RX_BP_OFF001              0x000118000C000468  RSL
GMX4_RX_BP_OFF002              0x000118000C000470  RSL
GMX4_RX_BP_OFF003              0x000118000C000478  RSL
GMX4_RX_BP_ON000               0x000118000C000440  RSL
GMX4_RX_BP_ON001               0x000118000C000448  RSL
GMX4_RX_BP_ON002               0x000118000C000450  RSL
GMX4_RX_BP_ON003               0x000118000C000458  RSL
GMX4_RX_HG2_STATUS             0x000118000C000548  RSL
GMX4_RX_PRTS                   0x000118000C000410  RSL
GMX4_RX_PRT_INFO               0x000118000C0004E8  RSL
GMX4_RX_XAUI_BAD_COL           0x000118000C000538  RSL
GMX4_RX_XAUI_CTL               0x000118000C000530  RSL
GMX4_SMAC000                   0x000118000C000230  RSL
GMX4_SMAC001                   0x000118000C000A30  RSL
GMX4_SMAC002                   0x000118000C001230  RSL
GMX4_SMAC003                   0x000118000C001A30  RSL
GMX4_SOFT_BIST                 0x000118000C0007E8  RSL
GMX4_STAT_BP                   0x000118000C000520  RSL
GMX4_TX000_APPEND              0x000118000C000218  RSL
GMX4_TX000_BURST               0x000118000C000228  RSL
GMX4_TX000_CBFC_XOFF           0x000118000C0005A0  RSL
GMX4_TX000_CBFC_XON            0x000118000C0005C0  RSL
GMX4_TX000_CTL                 0x000118000C000270  RSL
GMX4_TX000_MIN_PKT             0x000118000C000240  RSL
GMX4_TX000_PAUSE_PKT_INTERVAL  0x000118000C000248  RSL
GMX4_TX000_PAUSE_PKT_TIME      0x000118000C000238  RSL
GMX4_TX000_PAUSE_TOGO          0x000118000C000258  RSL
GMX4_TX000_PAUSE_ZERO          0x000118000C000260  RSL
GMX4_TX000_PIPE                0x000118000C000310  RSL
GMX4_TX000_SGMII_CTL           0x000118000C000300  RSL
GMX4_TX000_SLOT                0x000118000C000220  RSL
GMX4_TX000_SOFT_PAUSE          0x000118000C000250  RSL
GMX4_TX000_STAT0               0x000118000C000280  RSL
GMX4_TX000_STAT1               0x000118000C000288  RSL
GMX4_TX000_STAT2               0x000118000C000290  RSL
GMX4_TX000_STAT3               0x000118000C000298  RSL
GMX4_TX000_STAT4               0x000118000C0002A0  RSL
GMX4_TX000_STAT5               0x000118000C0002A8  RSL
GMX4_TX000_STAT6               0x000118000C0002B0  RSL
GMX4_TX000_STAT7               0x000118000C0002B8  RSL
GMX4_TX000_STAT8               0x000118000C0002C0  RSL
GMX4_TX000_STAT9               0x000118000C0002C8  RSL
GMX4_TX000_STATS_CTL           0x000118000C000268  RSL
GMX4_TX000_THRESH              0x000118000C000210  RSL
GMX4_TX001_APPEND              0x000118000C000A18  RSL
GMX4_TX001_BURST               0x000118000C000A28  RSL
GMX4_TX001_CTL                 0x000118000C000A70  RSL
GMX4_TX001_MIN_PKT             0x000118000C000A40  RSL
GMX4_TX001_PAUSE_PKT_INTERVAL  0x000118000C000A48  RSL
GMX4_TX001_PAUSE_PKT_TIME      0x000118000C000A38  RSL
GMX4_TX001_PAUSE_TOGO          0x000118000C000A58  RSL
GMX4_TX001_PAUSE_ZERO          0x000118000C000A60  RSL
GMX4_TX001_PIPE                0x000118000C000B10  RSL
GMX4_TX001_SGMII_CTL           0x000118000C000B00  RSL
GMX4_TX001_SLOT                0x000118000C000A20  RSL
GMX4_TX001_SOFT_PAUSE          0x000118000C000A50  RSL
GMX4_TX001_STAT0               0x000118000C000A80  RSL
GMX4_TX001_STAT1               0x000118000C000A88  RSL
GMX4_TX001_STAT2               0x000118000C000A90  RSL
GMX4_TX001_STAT3               0x000118000C000A98  RSL
GMX4_TX001_STAT4               0x000118000C000AA0  RSL
GMX4_TX001_STAT5               0x000118000C000AA8  RSL
GMX4_TX001_STAT6               0x000118000C000AB0  RSL
GMX4_TX001_STAT7               0x000118000C000AB8  RSL
GMX4_TX001_STAT8               0x000118000C000AC0  RSL
GMX4_TX001_STAT9               0x000118000C000AC8  RSL
GMX4_TX001_STATS_CTL           0x000118000C000A68  RSL
GMX4_TX001_THRESH              0x000118000C000A10  RSL
GMX4_TX002_APPEND              0x000118000C001218  RSL
GMX4_TX002_BURST               0x000118000C001228  RSL
GMX4_TX002_CTL                 0x000118000C001270  RSL
GMX4_TX002_MIN_PKT             0x000118000C001240  RSL
GMX4_TX002_PAUSE_PKT_INTERVAL  0x000118000C001248  RSL
GMX4_TX002_PAUSE_PKT_TIME      0x000118000C001238  RSL
GMX4_TX002_PAUSE_TOGO          0x000118000C001258  RSL
GMX4_TX002_PAUSE_ZERO          0x000118000C001260  RSL
GMX4_TX002_PIPE                0x000118000C001310  RSL
GMX4_TX002_SGMII_CTL           0x000118000C001300  RSL
GMX4_TX002_SLOT                0x000118000C001220  RSL
GMX4_TX002_SOFT_PAUSE          0x000118000C001250  RSL
GMX4_TX002_STAT0               0x000118000C001280  RSL
GMX4_TX002_STAT1               0x000118000C001288  RSL
GMX4_TX002_STAT2               0x000118000C001290  RSL
GMX4_TX002_STAT3               0x000118000C001298  RSL
GMX4_TX002_STAT4               0x000118000C0012A0  RSL
GMX4_TX002_STAT5               0x000118000C0012A8  RSL
GMX4_TX002_STAT6               0x000118000C0012B0  RSL
GMX4_TX002_STAT7               0x000118000C0012B8  RSL
GMX4_TX002_STAT8               0x000118000C0012C0  RSL
GMX4_TX002_STAT9               0x000118000C0012C8  RSL
GMX4_TX002_STATS_CTL           0x000118000C001268  RSL
GMX4_TX002_THRESH              0x000118000C001210  RSL
GMX4_TX003_APPEND              0x000118000C001A18  RSL
GMX4_TX003_BURST               0x000118000C001A28  RSL
GMX4_TX003_CTL                 0x000118000C001A70  RSL
GMX4_TX003_MIN_PKT             0x000118000C001A40  RSL
GMX4_TX003_PAUSE_PKT_INTERVAL  0x000118000C001A48  RSL
GMX4_TX003_PAUSE_PKT_TIME      0x000118000C001A38  RSL
GMX4_TX003_PAUSE_TOGO          0x000118000C001A58  RSL
GMX4_TX003_PAUSE_ZERO          0x000118000C001A60  RSL
GMX4_TX003_PIPE                0x000118000C001B10  RSL
GMX4_TX003_SGMII_CTL           0x000118000C001B00  RSL
GMX4_TX003_SLOT                0x000118000C001A20  RSL
GMX4_TX003_SOFT_PAUSE          0x000118000C001A50  RSL
GMX4_TX003_STAT0               0x000118000C001A80  RSL
GMX4_TX003_STAT1               0x000118000C001A88  RSL
GMX4_TX003_STAT2               0x000118000C001A90  RSL
GMX4_TX003_STAT3               0x000118000C001A98  RSL
GMX4_TX003_STAT4               0x000118000C001AA0  RSL
GMX4_TX003_STAT5               0x000118000C001AA8  RSL
GMX4_TX003_STAT6               0x000118000C001AB0  RSL
GMX4_TX003_STAT7               0x000118000C001AB8  RSL
GMX4_TX003_STAT8               0x000118000C001AC0  RSL
GMX4_TX003_STAT9               0x000118000C001AC8  RSL
GMX4_TX003_STATS_CTL           0x000118000C001A68  RSL
GMX4_TX003_THRESH              0x000118000C001A10  RSL
GMX4_TX_BP                     0x000118000C0004D0  RSL
GMX4_TX_COL_ATTEMPT            0x000118000C000498  RSL
GMX4_TX_CORRUPT                0x000118000C0004D8  RSL
GMX4_TX_HG2_REG1               0x000118000C000558  RSL
GMX4_TX_HG2_REG2               0x000118000C000560  RSL
GMX4_TX_IFG                    0x000118000C000488  RSL
GMX4_TX_INT_EN                 0x000118000C000508  RSL
GMX4_TX_INT_REG                0x000118000C000500  RSL
GMX4_TX_JAM                    0x000118000C000490  RSL
GMX4_TX_LFSR                   0x000118000C0004F8  RSL
GMX4_TX_OVR_BP                 0x000118000C0004C8  RSL
GMX4_TX_PAUSE_PKT_DMAC         0x000118000C0004A0  RSL
GMX4_TX_PAUSE_PKT_TYPE         0x000118000C0004A8  RSL
GMX4_TX_PRTS                   0x000118000C000480  RSL
GMX4_TX_XAUI_CTL               0x000118000C000528  RSL
GMX4_XAUI_EXT_LOOPBACK         0x000118000C000540  RSL
GPIO_BIT_CFG0                  0x0001070000000800  NCB
GPIO_BIT_CFG1                  0x0001070000000808  NCB
GPIO_BIT_CFG2                  0x0001070000000810  NCB
GPIO_BIT_CFG3                  0x0001070000000818  NCB
GPIO_BIT_CFG4                  0x0001070000000820  NCB
GPIO_BIT_CFG5                  0x0001070000000828  NCB
GPIO_BIT_CFG6                  0x0001070000000830  NCB
GPIO_BIT_CFG7                  0x0001070000000838  NCB
GPIO_BIT_CFG8                  0x0001070000000840  NCB
GPIO_BIT_CFG9                  0x0001070000000848  NCB
GPIO_BIT_CFG10                 0x0001070000000850  NCB
GPIO_BIT_CFG11                 0x0001070000000858  NCB
GPIO_BIT_CFG12                 0x0001070000000860  NCB
GPIO_BIT_CFG13                 0x0001070000000868  NCB
GPIO_BIT_CFG14                 0x0001070000000870  NCB
GPIO_BIT_CFG15                 0x0001070000000878  NCB
GPIO_CLK_GEN0                  0x00010700000008C0  NCB
GPIO_CLK_GEN1                  0x00010700000008C8  NCB
GPIO_CLK_GEN2                  0x00010700000008D0  NCB
GPIO_CLK_GEN3                  0x00010700000008D8  NCB
GPIO_CLK_QLM0                  0x00010700000008E0  NCB
GPIO_CLK_QLM1                  0x00010700000008E8  NCB
GPIO_INT_CLR                   0x0001070000000898  NCB
GPIO_RX_DAT                    0x0001070000000880  NCB
GPIO_TIM_CTL                   0x00010700000008A0  NCB
GPIO_TX_CLR                    0x0001070000000890  NCB
GPIO_TX_SET                    0x0001070000000888  NCB
ILK_BIST_SUM                   0x0001180014000038  RSL
ILK_GBL_CFG                    0x0001180014000000  RSL
ILK_GBL_INT                    0x0001180014000008  RSL
ILK_GBL_INT_EN                 0x0001180014000010  RSL
ILK_INT_SUM                    0x0001180014000030  RSL
ILK_LNE_DBG                    0x0001180014030008  RSL
ILK_LNE_STS_MSG                0x0001180014030000  RSL
ILK_RX0_CFG0                   0x0001180014020000  RSL
ILK_RX0_CFG1                   0x0001180014020008  RSL
ILK_RX0_FLOW_CTL0              0x0001180014020090  RSL
ILK_RX0_FLOW_CTL1              0x0001180014020098  RSL
ILK_RX0_IDX_CAL                0x00011800140200A0  RSL
ILK_RX0_IDX_STAT0              0x0001180014020070  RSL
ILK_RX0_IDX_STAT1              0x0001180014020078  RSL
ILK_RX0_INT                    0x0001180014020010  RSL
ILK_RX0_INT_EN                 0x0001180014020018  RSL
ILK_RX0_JABBER                 0x00011800140200B8  RSL
ILK_RX0_MEM_CAL0               0x00011800140200A8  RSL
ILK_RX0_MEM_CAL1               0x00011800140200B0  RSL
ILK_RX0_MEM_STAT0              0x0001180014020080  RSL
ILK_RX0_MEM_STAT1              0x0001180014020088  RSL
ILK_RX0_STAT0                  0x0001180014020020  RSL
ILK_RX0_STAT1                  0x0001180014020028  RSL
ILK_RX0_STAT2                  0x0001180014020030  RSL
ILK_RX0_STAT3                  0x0001180014020038  RSL
ILK_RX0_STAT4                  0x0001180014020040  RSL
ILK_RX0_STAT5                  0x0001180014020048  RSL
ILK_RX0_STAT6                  0x0001180014020050  RSL
ILK_RX0_STAT7                  0x0001180014020058  RSL
ILK_RX0_STAT8                  0x0001180014020060  RSL
ILK_RX0_STAT9                  0x0001180014020068  RSL
ILK_RX1_CFG0                   0x0001180014024000  RSL
ILK_RX1_CFG1                   0x0001180014024008  RSL
ILK_RX1_FLOW_CTL0              0x0001180014024090  RSL
ILK_RX1_FLOW_CTL1              0x0001180014024098  RSL
ILK_RX1_IDX_CAL                0x00011800140240A0  RSL
ILK_RX1_IDX_STAT0              0x0001180014024070  RSL
ILK_RX1_IDX_STAT1              0x0001180014024078  RSL
ILK_RX1_INT                    0x0001180014024010  RSL
ILK_RX1_INT_EN                 0x0001180014024018  RSL
ILK_RX1_JABBER                 0x00011800140240B8  RSL
ILK_RX1_MEM_CAL0               0x00011800140240A8  RSL
ILK_RX1_MEM_CAL1               0x00011800140240B0  RSL
ILK_RX1_MEM_STAT0              0x0001180014024080  RSL
ILK_RX1_MEM_STAT1              0x0001180014024088  RSL
ILK_RX1_STAT0                  0x0001180014024020  RSL
ILK_RX1_STAT1                  0x0001180014024028  RSL
ILK_RX1_STAT2                  0x0001180014024030  RSL
ILK_RX1_STAT3                  0x0001180014024038  RSL
ILK_RX1_STAT4                  0x0001180014024040  RSL
ILK_RX1_STAT5                  0x0001180014024048  RSL
ILK_RX1_STAT6                  0x0001180014024050  RSL
ILK_RX1_STAT7                  0x0001180014024058  RSL
ILK_RX1_STAT8                  0x0001180014024060  RSL
ILK_RX1_STAT9                  0x0001180014024068  RSL
ILK_RXF_IDX_PMAP               0x0001180014000020  RSL
ILK_RXF_MEM_PMAP               0x0001180014000028  RSL
ILK_RX_LNE0_CFG                0x0001180014038000  RSL
ILK_RX_LNE0_INT                0x0001180014038008  RSL
ILK_RX_LNE0_INT_EN             0x0001180014038010  RSL
ILK_RX_LNE0_STAT0              0x0001180014038018  RSL
ILK_RX_LNE0_STAT1              0x0001180014038020  RSL
ILK_RX_LNE0_STAT2              0x0001180014038028  RSL
ILK_RX_LNE0_STAT3              0x0001180014038030  RSL
ILK_RX_LNE0_STAT4              0x0001180014038038  RSL
ILK_RX_LNE0_STAT5              0x0001180014038040  RSL
ILK_RX_LNE0_STAT6              0x0001180014038048  RSL
ILK_RX_LNE0_STAT7              0x0001180014038050  RSL
ILK_RX_LNE0_STAT8              0x0001180014038058  RSL
ILK_RX_LNE0_STAT9              0x0001180014038060  RSL
ILK_RX_LNE1_CFG                0x0001180014038400  RSL
ILK_RX_LNE1_INT                0x0001180014038408  RSL
ILK_RX_LNE1_INT_EN             0x0001180014038410  RSL
ILK_RX_LNE1_STAT0              0x0001180014038418  RSL
ILK_RX_LNE1_STAT1              0x0001180014038420  RSL
ILK_RX_LNE1_STAT2              0x0001180014038428  RSL
ILK_RX_LNE1_STAT3              0x0001180014038430  RSL
ILK_RX_LNE1_STAT4              0x0001180014038438  RSL
ILK_RX_LNE1_STAT5              0x0001180014038440  RSL
ILK_RX_LNE1_STAT6              0x0001180014038448  RSL
ILK_RX_LNE1_STAT7              0x0001180014038450  RSL
ILK_RX_LNE1_STAT8              0x0001180014038458  RSL
ILK_RX_LNE1_STAT9              0x0001180014038460  RSL
ILK_RX_LNE2_CFG                0x0001180014038800  RSL
ILK_RX_LNE2_INT                0x0001180014038808  RSL
ILK_RX_LNE2_INT_EN             0x0001180014038810  RSL
ILK_RX_LNE2_STAT0              0x0001180014038818  RSL
ILK_RX_LNE2_STAT1              0x0001180014038820  RSL
ILK_RX_LNE2_STAT2              0x0001180014038828  RSL
ILK_RX_LNE2_STAT3              0x0001180014038830  RSL
ILK_RX_LNE2_STAT4              0x0001180014038838  RSL
ILK_RX_LNE2_STAT5              0x0001180014038840  RSL
ILK_RX_LNE2_STAT6              0x0001180014038848  RSL
ILK_RX_LNE2_STAT7              0x0001180014038850  RSL
ILK_RX_LNE2_STAT8              0x0001180014038858  RSL
ILK_RX_LNE2_STAT9              0x0001180014038860  RSL
ILK_RX_LNE3_CFG                0x0001180014038C00  RSL
ILK_RX_LNE3_INT                0x0001180014038C08  RSL
ILK_RX_LNE3_INT_EN             0x0001180014038C10  RSL
ILK_RX_LNE3_STAT0              0x0001180014038C18  RSL
ILK_RX_LNE3_STAT1              0x0001180014038C20  RSL
ILK_RX_LNE3_STAT2              0x0001180014038C28  RSL
ILK_RX_LNE3_STAT3              0x0001180014038C30  RSL
ILK_RX_LNE3_STAT4              0x0001180014038C38  RSL
ILK_RX_LNE3_STAT5              0x0001180014038C40  RSL
ILK_RX_LNE3_STAT6              0x0001180014038C48  RSL
ILK_RX_LNE3_STAT7              0x0001180014038C50  RSL
ILK_RX_LNE3_STAT8              0x0001180014038C58  RSL
ILK_RX_LNE3_STAT9              0x0001180014038C60  RSL
ILK_RX_LNE4_CFG                0x0001180014039000  RSL
ILK_RX_LNE4_INT                0x0001180014039008  RSL
ILK_RX_LNE4_INT_EN             0x0001180014039010  RSL
ILK_RX_LNE4_STAT0              0x0001180014039018  RSL
ILK_RX_LNE4_STAT1              0x0001180014039020  RSL
ILK_RX_LNE4_STAT2              0x0001180014039028  RSL
ILK_RX_LNE4_STAT3              0x0001180014039030  RSL
ILK_RX_LNE4_STAT4              0x0001180014039038  RSL
ILK_RX_LNE4_STAT5              0x0001180014039040  RSL
ILK_RX_LNE4_STAT6              0x0001180014039048  RSL
ILK_RX_LNE4_STAT7              0x0001180014039050  RSL
ILK_RX_LNE4_STAT8              0x0001180014039058  RSL
ILK_RX_LNE4_STAT9              0x0001180014039060  RSL
ILK_RX_LNE5_CFG                0x0001180014039400  RSL
ILK_RX_LNE5_INT                0x0001180014039408  RSL
ILK_RX_LNE5_INT_EN             0x0001180014039410  RSL
ILK_RX_LNE5_STAT0              0x0001180014039418  RSL
ILK_RX_LNE5_STAT1              0x0001180014039420  RSL
ILK_RX_LNE5_STAT2              0x0001180014039428  RSL
ILK_RX_LNE5_STAT3              0x0001180014039430  RSL
ILK_RX_LNE5_STAT4              0x0001180014039438  RSL
ILK_RX_LNE5_STAT5              0x0001180014039440  RSL
ILK_RX_LNE5_STAT6              0x0001180014039448  RSL
ILK_RX_LNE5_STAT7              0x0001180014039450  RSL
ILK_RX_LNE5_STAT8              0x0001180014039458  RSL
ILK_RX_LNE5_STAT9              0x0001180014039460  RSL
ILK_RX_LNE6_CFG                0x0001180014039800  RSL
ILK_RX_LNE6_INT                0x0001180014039808  RSL
ILK_RX_LNE6_INT_EN             0x0001180014039810  RSL
ILK_RX_LNE6_STAT0              0x0001180014039818  RSL
ILK_RX_LNE6_STAT1              0x0001180014039820  RSL
ILK_RX_LNE6_STAT2              0x0001180014039828  RSL
ILK_RX_LNE6_STAT3              0x0001180014039830  RSL
ILK_RX_LNE6_STAT4              0x0001180014039838  RSL
ILK_RX_LNE6_STAT5              0x0001180014039840  RSL
ILK_RX_LNE6_STAT6              0x0001180014039848  RSL
ILK_RX_LNE6_STAT7              0x0001180014039850  RSL
ILK_RX_LNE6_STAT8              0x0001180014039858  RSL
ILK_RX_LNE6_STAT9              0x0001180014039860  RSL
ILK_RX_LNE7_CFG                0x0001180014039C00  RSL
ILK_RX_LNE7_INT                0x0001180014039C08  RSL
ILK_RX_LNE7_INT_EN             0x0001180014039C10  RSL
ILK_RX_LNE7_STAT0              0x0001180014039C18  RSL
ILK_RX_LNE7_STAT1              0x0001180014039C20  RSL
ILK_RX_LNE7_STAT2              0x0001180014039C28  RSL
ILK_RX_LNE7_STAT3              0x0001180014039C30  RSL
ILK_RX_LNE7_STAT4              0x0001180014039C38  RSL
ILK_RX_LNE7_STAT5              0x0001180014039C40  RSL
ILK_RX_LNE7_STAT6              0x0001180014039C48  RSL
ILK_RX_LNE7_STAT7              0x0001180014039C50  RSL
ILK_RX_LNE7_STAT8              0x0001180014039C58  RSL
ILK_RX_LNE7_STAT9              0x0001180014039C60  RSL
ILK_SER_CFG                    0x0001180014000018  RSL
ILK_TX0_CFG0                   0x0001180014010000  RSL
ILK_TX0_CFG1                   0x0001180014010008  RSL
ILK_TX0_DBG                    0x0001180014010070  RSL
ILK_TX0_FLOW_CTL0              0x0001180014010048  RSL
ILK_TX0_FLOW_CTL1              0x0001180014010050  RSL
ILK_TX0_IDX_CAL                0x0001180014010058  RSL
ILK_TX0_IDX_PMAP               0x0001180014010010  RSL
ILK_TX0_IDX_STAT0              0x0001180014010020  RSL
ILK_TX0_IDX_STAT1              0x0001180014010028  RSL
ILK_TX0_INT                    0x0001180014010078  RSL
ILK_TX0_INT_EN                 0x0001180014010080  RSL
ILK_TX0_MEM_CAL0               0x0001180014010060  RSL
ILK_TX0_MEM_CAL1               0x0001180014010068  RSL
ILK_TX0_MEM_PMAP               0x0001180014010018  RSL
ILK_TX0_MEM_STAT0              0x0001180014010030  RSL
ILK_TX0_MEM_STAT1              0x0001180014010038  RSL
ILK_TX0_PIPE                   0x0001180014010088  RSL
ILK_TX0_RMATCH                 0x0001180014010040  RSL
ILK_TX1_CFG0                   0x0001180014014000  RSL
ILK_TX1_CFG1                   0x0001180014014008  RSL
ILK_TX1_DBG                    0x0001180014014070  RSL
ILK_TX1_FLOW_CTL0              0x0001180014014048  RSL
ILK_TX1_FLOW_CTL1              0x0001180014014050  RSL
ILK_TX1_IDX_CAL                0x0001180014014058  RSL
ILK_TX1_IDX_PMAP               0x0001180014014010  RSL
ILK_TX1_IDX_STAT0              0x0001180014014020  RSL
ILK_TX1_IDX_STAT1              0x0001180014014028  RSL
ILK_TX1_INT                    0x0001180014014078  RSL
ILK_TX1_INT_EN                 0x0001180014014080  RSL
ILK_TX1_MEM_CAL0               0x0001180014014060  RSL
ILK_TX1_MEM_CAL1               0x0001180014014068  RSL
ILK_TX1_MEM_PMAP               0x0001180014014018  RSL
ILK_TX1_MEM_STAT0              0x0001180014014030  RSL
ILK_TX1_MEM_STAT1              0x0001180014014038  RSL
ILK_TX1_PIPE                   0x0001180014014088  RSL
ILK_TX1_RMATCH                 0x0001180014014040  RSL
IOB0_BIST_STATUS               0x00011800F00007F8  RSL
IOB0_CTL_STATUS                0x00011800F0000050  RSL
IOB0_FAU_TIMEOUT               0x00011800F0000000  RSL
IOB0_INB_CONTROL_MATCH         0x00011800F0000078  RSL
IOB0_INB_CONTROL_MATCH_ENB     0x00011800F0000088  RSL
IOB0_INB_DATA_MATCH            0x00011800F0000070  RSL
IOB0_INB_DATA_MATCH_ENB        0x00011800F0000080  RSL
IOB0_INT_ENB                   0x00011800F0000060  RSL
IOB0_INT_SUM                   0x00011800F0000058  RSL
IOB0_OUTB_COM_PRI_CNT          0x00011800F0000040  RSL
IOB0_OUTB_CONTROL_MATCH        0x00011800F0000098  RSL
IOB0_OUTB_CONTROL_MATCH_ENB    0x00011800F00000A8  RSL
IOB0_OUTB_DATA_MATCH           0x00011800F0000090  RSL
IOB0_OUTB_DATA_MATCH_ENB       0x00011800F00000A0  RSL
IOB0_OUTB_FPA_PRI_CNT          0x00011800F0000048  RSL
IOB0_OUTB_REQ_PRI_CNT          0x00011800F0000038  RSL
IOB0_TO_CMB_CREDITS            0x00011800F00000B0  RSL
IOB0_TO_NCB_DID_00_CREDITS     0x00011800F0000800  RSL
IOB0_TO_NCB_DID_24_CREDITS     0x00011800F00008C0  RSL
IOB0_TO_NCB_DID_32_CREDITS     0x00011800F0000900  RSL
IOB0_TO_NCB_DID_40_CREDITS     0x00011800F0000940  RSL
IOB0_TO_NCB_DID_55_CREDITS     0x00011800F00009B8  RSL
IOB0_TO_NCB_DID_64_CREDITS     0x00011800F0000A00  RSL
IOB0_TO_NCB_DID_79_CREDITS     0x00011800F0000A78  RSL
IOB0_TO_NCB_DID_96_CREDITS     0x00011800F0000B00  RSL
IOB0_TO_NCB_DID_98_CREDITS     0x00011800F0000B10  RSL
IOB0_TO_NCB_DID_111_CREDITS    0x00011800F0000B78  RSL
IOB0_TO_NCB_DID_223_CREDITS    0x00011800F0000EF8  RSL
IOB1_BIST_STATUS               0x00011800F00107F8  RSL
IOB1_CTL_STATUS                0x00011800F0010050  RSL
IOB1_TO_CMB_CREDITS            0x00011800F00100B0  RSL
IPD_1ST_MBUFF_SKIP             0x00014F0000000000  NCB
IPD_1st_NEXT_PTR_BACK          0x00014F0000000150  NCB
IPD_2nd_NEXT_PTR_BACK          0x00014F0000000158  NCB
IPD_BIST_STATUS                0x00014F00000007F8  NCB
IPD_BPID0_MBUF_TH              0x00014F0000002000  NCB
IPD_BPID1_MBUF_TH              0x00014F0000002008  NCB
IPD_BPID2_MBUF_TH              0x00014F0000002010  NCB
IPD_BPID3_MBUF_TH              0x00014F0000002018  NCB
IPD_BPID4_MBUF_TH              0x00014F0000002020  NCB
IPD_BPID5_MBUF_TH              0x00014F0000002028  NCB
IPD_BPID6_MBUF_TH              0x00014F0000002030  NCB
IPD_BPID7_MBUF_TH              0x00014F0000002038  NCB
IPD_BPID8_MBUF_TH              0x00014F0000002040  NCB
IPD_BPID9_MBUF_TH              0x00014F0000002048  NCB
IPD_BPID10_MBUF_TH             0x00014F0000002050  NCB
IPD_BPID11_MBUF_TH             0x00014F0000002058  NCB
IPD_BPID12_MBUF_TH             0x00014F0000002060  NCB
IPD_BPID13_MBUF_TH             0x00014F0000002068  NCB
IPD_BPID14_MBUF_TH             0x00014F0000002070  NCB
IPD_BPID15_MBUF_TH             0x00014F0000002078  NCB
IPD_BPID16_MBUF_TH             0x00014F0000002080  NCB
IPD_BPID17_MBUF_TH             0x00014F0000002088  NCB
IPD_BPID18_MBUF_TH             0x00014F0000002090  NCB
IPD_BPID19_MBUF_TH             0x00014F0000002098  NCB
IPD_BPID20_MBUF_TH             0x00014F00000020A0  NCB
IPD_BPID21_MBUF_TH             0x00014F00000020A8  NCB
IPD_BPID22_MBUF_TH             0x00014F00000020B0  NCB
IPD_BPID23_MBUF_TH             0x00014F00000020B8  NCB
IPD_BPID24_MBUF_TH             0x00014F00000020C0  NCB
IPD_BPID25_MBUF_TH             0x00014F00000020C8  NCB
IPD_BPID26_MBUF_TH             0x00014F00000020D0  NCB
IPD_BPID27_MBUF_TH             0x00014F00000020D8  NCB
IPD_BPID28_MBUF_TH             0x00014F00000020E0  NCB
IPD_BPID29_MBUF_TH             0x00014F00000020E8  NCB
IPD_BPID30_MBUF_TH             0x00014F00000020F0  NCB
IPD_BPID31_MBUF_TH             0x00014F00000020F8  NCB
IPD_BPID32_MBUF_TH             0x00014F0000002100  NCB
IPD_BPID33_MBUF_TH             0x00014F0000002108  NCB
IPD_BPID34_MBUF_TH             0x00014F0000002110  NCB
IPD_BPID35_MBUF_TH             0x00014F0000002118  NCB
IPD_BPID36_MBUF_TH             0x00014F0000002120  NCB
IPD_BPID37_MBUF_TH             0x00014F0000002128  NCB
IPD_BPID38_MBUF_TH             0x00014F0000002130  NCB
IPD_BPID39_MBUF_TH             0x00014F0000002138  NCB
IPD_BPID40_MBUF_TH             0x00014F0000002140  NCB
IPD_BPID41_MBUF_TH             0x00014F0000002148  NCB
IPD_BPID42_MBUF_TH             0x00014F0000002150  NCB
IPD_BPID43_MBUF_TH             0x00014F0000002158  NCB
IPD_BPID44_MBUF_TH             0x00014F0000002160  NCB
IPD_BPID45_MBUF_TH             0x00014F0000002168  NCB
IPD_BPID46_MBUF_TH             0x00014F0000002170  NCB
IPD_BPID47_MBUF_TH             0x00014F0000002178  NCB
IPD_BPID48_MBUF_TH             0x00014F0000002180  NCB
IPD_BPID49_MBUF_TH             0x00014F0000002188  NCB
IPD_BPID50_MBUF_TH             0x00014F0000002190  NCB
IPD_BPID51_MBUF_TH             0x00014F0000002198  NCB
IPD_BPID52_MBUF_TH             0x00014F00000021A0  NCB
IPD_BPID53_MBUF_TH             0x00014F00000021A8  NCB
IPD_BPID54_MBUF_TH             0x00014F00000021B0  NCB
IPD_BPID55_MBUF_TH             0x00014F00000021B8  NCB
IPD_BPID56_MBUF_TH             0x00014F00000021C0  NCB
IPD_BPID57_MBUF_TH             0x00014F00000021C8  NCB
IPD_BPID58_MBUF_TH             0x00014F00000021D0  NCB
IPD_BPID59_MBUF_TH             0x00014F00000021D8  NCB
IPD_BPID60_MBUF_TH             0x00014F00000021E0  NCB
IPD_BPID61_MBUF_TH             0x00014F00000021E8  NCB
IPD_BPID62_MBUF_TH             0x00014F00000021F0  NCB
IPD_BPID63_MBUF_TH             0x00014F00000021F8  NCB
IPD_BPID_BP_COUNTER0           0x00014F0000003000  NCB
IPD_BPID_BP_COUNTER1           0x00014F0000003008  NCB
IPD_BPID_BP_COUNTER2           0x00014F0000003010  NCB
IPD_BPID_BP_COUNTER3           0x00014F0000003018  NCB
IPD_BPID_BP_COUNTER4           0x00014F0000003020  NCB
IPD_BPID_BP_COUNTER5           0x00014F0000003028  NCB
IPD_BPID_BP_COUNTER6           0x00014F0000003030  NCB
IPD_BPID_BP_COUNTER7           0x00014F0000003038  NCB
IPD_BPID_BP_COUNTER8           0x00014F0000003040  NCB
IPD_BPID_BP_COUNTER9           0x00014F0000003048  NCB
IPD_BPID_BP_COUNTER10          0x00014F0000003050  NCB
IPD_BPID_BP_COUNTER11          0x00014F0000003058  NCB
IPD_BPID_BP_COUNTER12          0x00014F0000003060  NCB
IPD_BPID_BP_COUNTER13          0x00014F0000003068  NCB
IPD_BPID_BP_COUNTER14          0x00014F0000003070  NCB
IPD_BPID_BP_COUNTER15          0x00014F0000003078  NCB
IPD_BPID_BP_COUNTER16          0x00014F0000003080  NCB
IPD_BPID_BP_COUNTER17          0x00014F0000003088  NCB
IPD_BPID_BP_COUNTER18          0x00014F0000003090  NCB
IPD_BPID_BP_COUNTER19          0x00014F0000003098  NCB
IPD_BPID_BP_COUNTER20          0x00014F00000030A0  NCB
IPD_BPID_BP_COUNTER21          0x00014F00000030A8  NCB
IPD_BPID_BP_COUNTER22          0x00014F00000030B0  NCB
IPD_BPID_BP_COUNTER23          0x00014F00000030B8  NCB
IPD_BPID_BP_COUNTER24          0x00014F00000030C0  NCB
IPD_BPID_BP_COUNTER25          0x00014F00000030C8  NCB
IPD_BPID_BP_COUNTER26          0x00014F00000030D0  NCB
IPD_BPID_BP_COUNTER27          0x00014F00000030D8  NCB
IPD_BPID_BP_COUNTER28          0x00014F00000030E0  NCB
IPD_BPID_BP_COUNTER29          0x00014F00000030E8  NCB
IPD_BPID_BP_COUNTER30          0x00014F00000030F0  NCB
IPD_BPID_BP_COUNTER31          0x00014F00000030F8  NCB
IPD_BPID_BP_COUNTER32          0x00014F0000003100  NCB
IPD_BPID_BP_COUNTER33          0x00014F0000003108  NCB
IPD_BPID_BP_COUNTER34          0x00014F0000003110  NCB
IPD_BPID_BP_COUNTER35          0x00014F0000003118  NCB
IPD_BPID_BP_COUNTER36          0x00014F0000003120  NCB
IPD_BPID_BP_COUNTER37          0x00014F0000003128  NCB
IPD_BPID_BP_COUNTER38          0x00014F0000003130  NCB
IPD_BPID_BP_COUNTER39          0x00014F0000003138  NCB
IPD_BPID_BP_COUNTER40          0x00014F0000003140  NCB
IPD_BPID_BP_COUNTER41          0x00014F0000003148  NCB
IPD_BPID_BP_COUNTER42          0x00014F0000003150  NCB
IPD_BPID_BP_COUNTER43          0x00014F0000003158  NCB
IPD_BPID_BP_COUNTER44          0x00014F0000003160  NCB
IPD_BPID_BP_COUNTER45          0x00014F0000003168  NCB
IPD_BPID_BP_COUNTER46          0x00014F0000003170  NCB
IPD_BPID_BP_COUNTER47          0x00014F0000003178  NCB
IPD_BPID_BP_COUNTER48          0x00014F0000003180  NCB
IPD_BPID_BP_COUNTER49          0x00014F0000003188  NCB
IPD_BPID_BP_COUNTER50          0x00014F0000003190  NCB
IPD_BPID_BP_COUNTER51          0x00014F0000003198  NCB
IPD_BPID_BP_COUNTER52          0x00014F00000031A0  NCB
IPD_BPID_BP_COUNTER53          0x00014F00000031A8  NCB
IPD_BPID_BP_COUNTER54          0x00014F00000031B0  NCB
IPD_BPID_BP_COUNTER55          0x00014F00000031B8  NCB
IPD_BPID_BP_COUNTER56          0x00014F00000031C0  NCB
IPD_BPID_BP_COUNTER57          0x00014F00000031C8  NCB
IPD_BPID_BP_COUNTER58          0x00014F00000031D0  NCB
IPD_BPID_BP_COUNTER59          0x00014F00000031D8  NCB
IPD_BPID_BP_COUNTER60          0x00014F00000031E0  NCB
IPD_BPID_BP_COUNTER61          0x00014F00000031E8  NCB
IPD_BPID_BP_COUNTER62          0x00014F00000031F0  NCB
IPD_BPID_BP_COUNTER63          0x00014F00000031F8  NCB
IPD_CLK_COUNT                  0x00014F0000000338  NCB
IPD_CREDITS                    0x00014F0000004410  NCB
IPD_CTL_STATUS                 0x00014F0000000018  NCB
IPD_ECC_CTL                    0x00014F0000004408  NCB
IPD_FREE_PTR_FIFO_CTL          0x00014F0000000780  NCB
IPD_FREE_PTR_VALUE             0x00014F0000000788  NCB
IPD_HOLD_PTR_FIFO_CTL          0x00014F0000000790  NCB
IPD_INT_ENB                    0x00014F0000000160  NCB
IPD_INT_SUM                    0x00014F0000000168  NCB
IPD_NEXT_PKT_PTR               0x00014F00000007A0  NCB
IPD_NEXT_WQE_PTR               0x00014F00000007A8  NCB
IPD_NOT_1ST_MBUFF_SKIP         0x00014F0000000008  NCB
IPD_ON_BP_DROP_PKT0            0x00014F0000004100  NCB
IPD_PACKET_MBUFF_SIZE          0x00014F0000000010  NCB
IPD_PKT_ERR                    0x00014F00000003F0  NCB
IPD_PORT_PTR_FIFO_CTL          0x00014F0000000798  NCB
IPD_PORT_QOS_0_CNT             0x00014F0000000888  NCB
IPD_PORT_QOS_1_CNT             0x00014F0000000890  NCB
IPD_PORT_QOS_2_CNT             0x00014F0000000898  NCB
IPD_PORT_QOS_3_CNT             0x00014F00000008A0  NCB
IPD_PORT_QOS_4_CNT             0x00014F00000008A8  NCB
IPD_PORT_QOS_5_CNT             0x00014F00000008B0  NCB
IPD_PORT_QOS_6_CNT             0x00014F00000008B8  NCB
IPD_PORT_QOS_7_CNT             0x00014F00000008C0  NCB
IPD_PORT_QOS_8_CNT             0x00014F00000008C8  NCB
IPD_PORT_QOS_9_CNT             0x00014F00000008D0  NCB
IPD_PORT_QOS_10_CNT            0x00014F00000008D8  NCB
IPD_PORT_QOS_11_CNT            0x00014F00000008E0  NCB
IPD_PORT_QOS_12_CNT            0x00014F00000008E8  NCB
IPD_PORT_QOS_13_CNT            0x00014F00000008F0  NCB
IPD_PORT_QOS_14_CNT            0x00014F00000008F8  NCB
IPD_PORT_QOS_15_CNT            0x00014F0000000900  NCB
IPD_PORT_QOS_16_CNT            0x00014F0000000908  NCB
IPD_PORT_QOS_17_CNT            0x00014F0000000910  NCB
IPD_PORT_QOS_18_CNT            0x00014F0000000918  NCB
IPD_PORT_QOS_19_CNT            0x00014F0000000920  NCB
IPD_PORT_QOS_20_CNT            0x00014F0000000928  NCB
IPD_PORT_QOS_21_CNT            0x00014F0000000930  NCB
IPD_PORT_QOS_22_CNT            0x00014F0000000938  NCB
IPD_PORT_QOS_23_CNT            0x00014F0000000940  NCB
IPD_PORT_QOS_24_CNT            0x00014F0000000948  NCB
IPD_PORT_QOS_25_CNT            0x00014F0000000950  NCB
IPD_PORT_QOS_26_CNT            0x00014F0000000958  NCB
IPD_PORT_QOS_27_CNT            0x00014F0000000960  NCB
IPD_PORT_QOS_28_CNT            0x00014F0000000968  NCB
IPD_PORT_QOS_29_CNT            0x00014F0000000970  NCB
IPD_PORT_QOS_30_CNT            0x00014F0000000978  NCB
IPD_PORT_QOS_31_CNT            0x00014F0000000980  NCB
IPD_PORT_QOS_32_CNT            0x00014F0000000988  NCB
IPD_PORT_QOS_33_CNT            0x00014F0000000990  NCB
IPD_PORT_QOS_34_CNT            0x00014F0000000998  NCB
IPD_PORT_QOS_35_CNT            0x00014F00000009A0  NCB
IPD_PORT_QOS_36_CNT            0x00014F00000009A8  NCB
IPD_PORT_QOS_37_CNT            0x00014F00000009B0  NCB
IPD_PORT_QOS_38_CNT            0x00014F00000009B8  NCB
IPD_PORT_QOS_39_CNT            0x00014F00000009C0  NCB
IPD_PORT_QOS_40_CNT            0x00014F00000009C8  NCB
IPD_PORT_QOS_41_CNT            0x00014F00000009D0  NCB
IPD_PORT_QOS_42_CNT            0x00014F00000009D8  NCB
IPD_PORT_QOS_43_CNT            0x00014F00000009E0  NCB
IPD_PORT_QOS_44_CNT            0x00014F00000009E8  NCB
IPD_PORT_QOS_45_CNT            0x00014F00000009F0  NCB
IPD_PORT_QOS_46_CNT            0x00014F00000009F8  NCB
IPD_PORT_QOS_47_CNT            0x00014F0000000A00  NCB
IPD_PORT_QOS_48_CNT            0x00014F0000000A08  NCB
IPD_PORT_QOS_49_CNT            0x00014F0000000A10  NCB
IPD_PORT_QOS_50_CNT            0x00014F0000000A18  NCB
IPD_PORT_QOS_51_CNT            0x00014F0000000A20  NCB
IPD_PORT_QOS_52_CNT            0x00014F0000000A28  NCB
IPD_PORT_QOS_53_CNT            0x00014F0000000A30  NCB
IPD_PORT_QOS_54_CNT            0x00014F0000000A38  NCB
IPD_PORT_QOS_55_CNT            0x00014F0000000A40  NCB
IPD_PORT_QOS_56_CNT            0x00014F0000000A48  NCB
IPD_PORT_QOS_57_CNT            0x00014F0000000A50  NCB
IPD_PORT_QOS_58_CNT            0x00014F0000000A58  NCB
IPD_PORT_QOS_59_CNT            0x00014F0000000A60  NCB
IPD_PORT_QOS_60_CNT            0x00014F0000000A68  NCB
IPD_PORT_QOS_61_CNT            0x00014F0000000A70  NCB
IPD_PORT_QOS_62_CNT            0x00014F0000000A78  NCB
IPD_PORT_QOS_63_CNT            0x00014F0000000A80  NCB
IPD_PORT_QOS_64_CNT            0x00014F0000000A88  NCB
IPD_PORT_QOS_65_CNT            0x00014F0000000A90  NCB
IPD_PORT_QOS_66_CNT            0x00014F0000000A98  NCB
IPD_PORT_QOS_67_CNT            0x00014F0000000AA0  NCB
IPD_PORT_QOS_68_CNT            0x00014F0000000AA8  NCB
IPD_PORT_QOS_69_CNT            0x00014F0000000AB0  NCB
IPD_PORT_QOS_70_CNT            0x00014F0000000AB8  NCB
IPD_PORT_QOS_71_CNT            0x00014F0000000AC0  NCB
IPD_PORT_QOS_72_CNT            0x00014F0000000AC8  NCB
IPD_PORT_QOS_73_CNT            0x00014F0000000AD0  NCB
IPD_PORT_QOS_74_CNT            0x00014F0000000AD8  NCB
IPD_PORT_QOS_75_CNT            0x00014F0000000AE0  NCB
IPD_PORT_QOS_76_CNT            0x00014F0000000AE8  NCB
IPD_PORT_QOS_77_CNT            0x00014F0000000AF0  NCB
IPD_PORT_QOS_78_CNT            0x00014F0000000AF8  NCB
IPD_PORT_QOS_79_CNT            0x00014F0000000B00  NCB
IPD_PORT_QOS_80_CNT            0x00014F0000000B08  NCB
IPD_PORT_QOS_81_CNT            0x00014F0000000B10  NCB
IPD_PORT_QOS_82_CNT            0x00014F0000000B18  NCB
IPD_PORT_QOS_83_CNT            0x00014F0000000B20  NCB
IPD_PORT_QOS_84_CNT            0x00014F0000000B28  NCB
IPD_PORT_QOS_85_CNT            0x00014F0000000B30  NCB
IPD_PORT_QOS_86_CNT            0x00014F0000000B38  NCB
IPD_PORT_QOS_87_CNT            0x00014F0000000B40  NCB
IPD_PORT_QOS_88_CNT            0x00014F0000000B48  NCB
IPD_PORT_QOS_89_CNT            0x00014F0000000B50  NCB
IPD_PORT_QOS_90_CNT            0x00014F0000000B58  NCB
IPD_PORT_QOS_91_CNT            0x00014F0000000B60  NCB
IPD_PORT_QOS_92_CNT            0x00014F0000000B68  NCB
IPD_PORT_QOS_93_CNT            0x00014F0000000B70  NCB
IPD_PORT_QOS_94_CNT            0x00014F0000000B78  NCB
IPD_PORT_QOS_95_CNT            0x00014F0000000B80  NCB
IPD_PORT_QOS_96_CNT            0x00014F0000000B88  NCB
IPD_PORT_QOS_97_CNT            0x00014F0000000B90  NCB
IPD_PORT_QOS_98_CNT            0x00014F0000000B98  NCB
IPD_PORT_QOS_99_CNT            0x00014F0000000BA0  NCB
IPD_PORT_QOS_100_CNT           0x00014F0000000BA8  NCB
IPD_PORT_QOS_101_CNT           0x00014F0000000BB0  NCB
IPD_PORT_QOS_102_CNT           0x00014F0000000BB8  NCB
IPD_PORT_QOS_103_CNT           0x00014F0000000BC0  NCB
IPD_PORT_QOS_104_CNT           0x00014F0000000BC8  NCB
IPD_PORT_QOS_105_CNT           0x00014F0000000BD0  NCB
IPD_PORT_QOS_106_CNT           0x00014F0000000BD8  NCB
IPD_PORT_QOS_107_CNT           0x00014F0000000BE0  NCB
IPD_PORT_QOS_108_CNT           0x00014F0000000BE8  NCB
IPD_PORT_QOS_109_CNT           0x00014F0000000BF0  NCB
IPD_PORT_QOS_110_CNT           0x00014F0000000BF8  NCB
IPD_PORT_QOS_111_CNT           0x00014F0000000C00  NCB
IPD_PORT_QOS_112_CNT           0x00014F0000000C08  NCB
IPD_PORT_QOS_113_CNT           0x00014F0000000C10  NCB
IPD_PORT_QOS_114_CNT           0x00014F0000000C18  NCB
IPD_PORT_QOS_115_CNT           0x00014F0000000C20  NCB
IPD_PORT_QOS_116_CNT           0x00014F0000000C28  NCB
IPD_PORT_QOS_117_CNT           0x00014F0000000C30  NCB
IPD_PORT_QOS_118_CNT           0x00014F0000000C38  NCB
IPD_PORT_QOS_119_CNT           0x00014F0000000C40  NCB
IPD_PORT_QOS_120_CNT           0x00014F0000000C48  NCB
IPD_PORT_QOS_121_CNT           0x00014F0000000C50  NCB
IPD_PORT_QOS_122_CNT           0x00014F0000000C58  NCB
IPD_PORT_QOS_123_CNT           0x00014F0000000C60  NCB
IPD_PORT_QOS_124_CNT           0x00014F0000000C68  NCB
IPD_PORT_QOS_125_CNT           0x00014F0000000C70  NCB
IPD_PORT_QOS_126_CNT           0x00014F0000000C78  NCB
IPD_PORT_QOS_127_CNT           0x00014F0000000C80  NCB
IPD_PORT_QOS_128_CNT           0x00014F0000000C88  NCB
IPD_PORT_QOS_129_CNT           0x00014F0000000C90  NCB
IPD_PORT_QOS_130_CNT           0x00014F0000000C98  NCB
IPD_PORT_QOS_131_CNT           0x00014F0000000CA0  NCB
IPD_PORT_QOS_132_CNT           0x00014F0000000CA8  NCB
IPD_PORT_QOS_133_CNT           0x00014F0000000CB0  NCB
IPD_PORT_QOS_134_CNT           0x00014F0000000CB8  NCB
IPD_PORT_QOS_135_CNT           0x00014F0000000CC0  NCB
IPD_PORT_QOS_136_CNT           0x00014F0000000CC8  NCB
IPD_PORT_QOS_137_CNT           0x00014F0000000CD0  NCB
IPD_PORT_QOS_138_CNT           0x00014F0000000CD8  NCB
IPD_PORT_QOS_139_CNT           0x00014F0000000CE0  NCB
IPD_PORT_QOS_140_CNT           0x00014F0000000CE8  NCB
IPD_PORT_QOS_141_CNT           0x00014F0000000CF0  NCB
IPD_PORT_QOS_142_CNT           0x00014F0000000CF8  NCB
IPD_PORT_QOS_143_CNT           0x00014F0000000D00  NCB
IPD_PORT_QOS_144_CNT           0x00014F0000000D08  NCB
IPD_PORT_QOS_145_CNT           0x00014F0000000D10  NCB
IPD_PORT_QOS_146_CNT           0x00014F0000000D18  NCB
IPD_PORT_QOS_147_CNT           0x00014F0000000D20  NCB
IPD_PORT_QOS_148_CNT           0x00014F0000000D28  NCB
IPD_PORT_QOS_149_CNT           0x00014F0000000D30  NCB
IPD_PORT_QOS_150_CNT           0x00014F0000000D38  NCB
IPD_PORT_QOS_151_CNT           0x00014F0000000D40  NCB
IPD_PORT_QOS_152_CNT           0x00014F0000000D48  NCB
IPD_PORT_QOS_153_CNT           0x00014F0000000D50  NCB
IPD_PORT_QOS_154_CNT           0x00014F0000000D58  NCB
IPD_PORT_QOS_155_CNT           0x00014F0000000D60  NCB
IPD_PORT_QOS_156_CNT           0x00014F0000000D68  NCB
IPD_PORT_QOS_157_CNT           0x00014F0000000D70  NCB
IPD_PORT_QOS_158_CNT           0x00014F0000000D78  NCB
IPD_PORT_QOS_159_CNT           0x00014F0000000D80  NCB
IPD_PORT_QOS_160_CNT           0x00014F0000000D88  NCB
IPD_PORT_QOS_161_CNT           0x00014F0000000D90  NCB
IPD_PORT_QOS_162_CNT           0x00014F0000000D98  NCB
IPD_PORT_QOS_163_CNT           0x00014F0000000DA0  NCB
IPD_PORT_QOS_164_CNT           0x00014F0000000DA8  NCB
IPD_PORT_QOS_165_CNT           0x00014F0000000DB0  NCB
IPD_PORT_QOS_166_CNT           0x00014F0000000DB8  NCB
IPD_PORT_QOS_167_CNT           0x00014F0000000DC0  NCB
IPD_PORT_QOS_168_CNT           0x00014F0000000DC8  NCB
IPD_PORT_QOS_169_CNT           0x00014F0000000DD0  NCB
IPD_PORT_QOS_170_CNT           0x00014F0000000DD8  NCB
IPD_PORT_QOS_171_CNT           0x00014F0000000DE0  NCB
IPD_PORT_QOS_172_CNT           0x00014F0000000DE8  NCB
IPD_PORT_QOS_173_CNT           0x00014F0000000DF0  NCB
IPD_PORT_QOS_174_CNT           0x00014F0000000DF8  NCB
IPD_PORT_QOS_175_CNT           0x00014F0000000E00  NCB
IPD_PORT_QOS_176_CNT           0x00014F0000000E08  NCB
IPD_PORT_QOS_177_CNT           0x00014F0000000E10  NCB
IPD_PORT_QOS_178_CNT           0x00014F0000000E18  NCB
IPD_PORT_QOS_179_CNT           0x00014F0000000E20  NCB
IPD_PORT_QOS_180_CNT           0x00014F0000000E28  NCB
IPD_PORT_QOS_181_CNT           0x00014F0000000E30  NCB
IPD_PORT_QOS_182_CNT           0x00014F0000000E38  NCB
IPD_PORT_QOS_183_CNT           0x00014F0000000E40  NCB
IPD_PORT_QOS_184_CNT           0x00014F0000000E48  NCB
IPD_PORT_QOS_185_CNT           0x00014F0000000E50  NCB
IPD_PORT_QOS_186_CNT           0x00014F0000000E58  NCB
IPD_PORT_QOS_187_CNT           0x00014F0000000E60  NCB
IPD_PORT_QOS_188_CNT           0x00014F0000000E68  NCB
IPD_PORT_QOS_189_CNT           0x00014F0000000E70  NCB
IPD_PORT_QOS_190_CNT           0x00014F0000000E78  NCB
IPD_PORT_QOS_191_CNT           0x00014F0000000E80  NCB
IPD_PORT_QOS_192_CNT           0x00014F0000000E88  NCB
IPD_PORT_QOS_193_CNT           0x00014F0000000E90  NCB
IPD_PORT_QOS_194_CNT           0x00014F0000000E98  NCB
IPD_PORT_QOS_195_CNT           0x00014F0000000EA0  NCB
IPD_PORT_QOS_196_CNT           0x00014F0000000EA8  NCB
IPD_PORT_QOS_197_CNT           0x00014F0000000EB0  NCB
IPD_PORT_QOS_198_CNT           0x00014F0000000EB8  NCB
IPD_PORT_QOS_199_CNT           0x00014F0000000EC0  NCB
IPD_PORT_QOS_200_CNT           0x00014F0000000EC8  NCB
IPD_PORT_QOS_201_CNT           0x00014F0000000ED0  NCB
IPD_PORT_QOS_202_CNT           0x00014F0000000ED8  NCB
IPD_PORT_QOS_203_CNT           0x00014F0000000EE0  NCB
IPD_PORT_QOS_204_CNT           0x00014F0000000EE8  NCB
IPD_PORT_QOS_205_CNT           0x00014F0000000EF0  NCB
IPD_PORT_QOS_206_CNT           0x00014F0000000EF8  NCB
IPD_PORT_QOS_207_CNT           0x00014F0000000F00  NCB
IPD_PORT_QOS_208_CNT           0x00014F0000000F08  NCB
IPD_PORT_QOS_209_CNT           0x00014F0000000F10  NCB
IPD_PORT_QOS_210_CNT           0x00014F0000000F18  NCB
IPD_PORT_QOS_211_CNT           0x00014F0000000F20  NCB
IPD_PORT_QOS_212_CNT           0x00014F0000000F28  NCB
IPD_PORT_QOS_213_CNT           0x00014F0000000F30  NCB
IPD_PORT_QOS_214_CNT           0x00014F0000000F38  NCB
IPD_PORT_QOS_215_CNT           0x00014F0000000F40  NCB
IPD_PORT_QOS_216_CNT           0x00014F0000000F48  NCB
IPD_PORT_QOS_217_CNT           0x00014F0000000F50  NCB
IPD_PORT_QOS_218_CNT           0x00014F0000000F58  NCB
IPD_PORT_QOS_219_CNT           0x00014F0000000F60  NCB
IPD_PORT_QOS_220_CNT           0x00014F0000000F68  NCB
IPD_PORT_QOS_221_CNT           0x00014F0000000F70  NCB
IPD_PORT_QOS_222_CNT           0x00014F0000000F78  NCB
IPD_PORT_QOS_223_CNT           0x00014F0000000F80  NCB
IPD_PORT_QOS_224_CNT           0x00014F0000000F88  NCB
IPD_PORT_QOS_225_CNT           0x00014F0000000F90  NCB
IPD_PORT_QOS_226_CNT           0x00014F0000000F98  NCB
IPD_PORT_QOS_227_CNT           0x00014F0000000FA0  NCB
IPD_PORT_QOS_228_CNT           0x00014F0000000FA8  NCB
IPD_PORT_QOS_229_CNT           0x00014F0000000FB0  NCB
IPD_PORT_QOS_230_CNT           0x00014F0000000FB8  NCB
IPD_PORT_QOS_231_CNT           0x00014F0000000FC0  NCB
IPD_PORT_QOS_232_CNT           0x00014F0000000FC8  NCB
IPD_PORT_QOS_233_CNT           0x00014F0000000FD0  NCB
IPD_PORT_QOS_234_CNT           0x00014F0000000FD8  NCB
IPD_PORT_QOS_235_CNT           0x00014F0000000FE0  NCB
IPD_PORT_QOS_236_CNT           0x00014F0000000FE8  NCB
IPD_PORT_QOS_237_CNT           0x00014F0000000FF0  NCB
IPD_PORT_QOS_238_CNT           0x00014F0000000FF8  NCB
IPD_PORT_QOS_239_CNT           0x00014F0000001000  NCB
IPD_PORT_QOS_240_CNT           0x00014F0000001008  NCB
IPD_PORT_QOS_241_CNT           0x00014F0000001010  NCB
IPD_PORT_QOS_242_CNT           0x00014F0000001018  NCB
IPD_PORT_QOS_243_CNT           0x00014F0000001020  NCB
IPD_PORT_QOS_244_CNT           0x00014F0000001028  NCB
IPD_PORT_QOS_245_CNT           0x00014F0000001030  NCB
IPD_PORT_QOS_246_CNT           0x00014F0000001038  NCB
IPD_PORT_QOS_247_CNT           0x00014F0000001040  NCB
IPD_PORT_QOS_248_CNT           0x00014F0000001048  NCB
IPD_PORT_QOS_249_CNT           0x00014F0000001050  NCB
IPD_PORT_QOS_250_CNT           0x00014F0000001058  NCB
IPD_PORT_QOS_251_CNT           0x00014F0000001060  NCB
IPD_PORT_QOS_252_CNT           0x00014F0000001068  NCB
IPD_PORT_QOS_253_CNT           0x00014F0000001070  NCB
IPD_PORT_QOS_254_CNT           0x00014F0000001078  NCB
IPD_PORT_QOS_255_CNT           0x00014F0000001080  NCB
IPD_PORT_QOS_256_CNT           0x00014F0000001088  NCB
IPD_PORT_QOS_257_CNT           0x00014F0000001090  NCB
IPD_PORT_QOS_258_CNT           0x00014F0000001098  NCB
IPD_PORT_QOS_259_CNT           0x00014F00000010A0  NCB
IPD_PORT_QOS_260_CNT           0x00014F00000010A8  NCB
IPD_PORT_QOS_261_CNT           0x00014F00000010B0  NCB
IPD_PORT_QOS_262_CNT           0x00014F00000010B8  NCB
IPD_PORT_QOS_263_CNT           0x00014F00000010C0  NCB
IPD_PORT_QOS_264_CNT           0x00014F00000010C8  NCB
IPD_PORT_QOS_265_CNT           0x00014F00000010D0  NCB
IPD_PORT_QOS_266_CNT           0x00014F00000010D8  NCB
IPD_PORT_QOS_267_CNT           0x00014F00000010E0  NCB
IPD_PORT_QOS_268_CNT           0x00014F00000010E8  NCB
IPD_PORT_QOS_269_CNT           0x00014F00000010F0  NCB
IPD_PORT_QOS_270_CNT           0x00014F00000010F8  NCB
IPD_PORT_QOS_271_CNT           0x00014F0000001100  NCB
IPD_PORT_QOS_272_CNT           0x00014F0000001108  NCB
IPD_PORT_QOS_273_CNT           0x00014F0000001110  NCB
IPD_PORT_QOS_274_CNT           0x00014F0000001118  NCB
IPD_PORT_QOS_275_CNT           0x00014F0000001120  NCB
IPD_PORT_QOS_276_CNT           0x00014F0000001128  NCB
IPD_PORT_QOS_277_CNT           0x00014F0000001130  NCB
IPD_PORT_QOS_278_CNT           0x00014F0000001138  NCB
IPD_PORT_QOS_279_CNT           0x00014F0000001140  NCB
IPD_PORT_QOS_280_CNT           0x00014F0000001148  NCB
IPD_PORT_QOS_281_CNT           0x00014F0000001150  NCB
IPD_PORT_QOS_282_CNT           0x00014F0000001158  NCB
IPD_PORT_QOS_283_CNT           0x00014F0000001160  NCB
IPD_PORT_QOS_284_CNT           0x00014F0000001168  NCB
IPD_PORT_QOS_285_CNT           0x00014F0000001170  NCB
IPD_PORT_QOS_286_CNT           0x00014F0000001178  NCB
IPD_PORT_QOS_287_CNT           0x00014F0000001180  NCB
IPD_PORT_QOS_288_CNT           0x00014F0000001188  NCB
IPD_PORT_QOS_289_CNT           0x00014F0000001190  NCB
IPD_PORT_QOS_290_CNT           0x00014F0000001198  NCB
IPD_PORT_QOS_291_CNT           0x00014F00000011A0  NCB
IPD_PORT_QOS_292_CNT           0x00014F00000011A8  NCB
IPD_PORT_QOS_293_CNT           0x00014F00000011B0  NCB
IPD_PORT_QOS_294_CNT           0x00014F00000011B8  NCB
IPD_PORT_QOS_295_CNT           0x00014F00000011C0  NCB
IPD_PORT_QOS_296_CNT           0x00014F00000011C8  NCB
IPD_PORT_QOS_297_CNT           0x00014F00000011D0  NCB
IPD_PORT_QOS_298_CNT           0x00014F00000011D8  NCB
IPD_PORT_QOS_299_CNT           0x00014F00000011E0  NCB
IPD_PORT_QOS_300_CNT           0x00014F00000011E8  NCB
IPD_PORT_QOS_301_CNT           0x00014F00000011F0  NCB
IPD_PORT_QOS_302_CNT           0x00014F00000011F8  NCB
IPD_PORT_QOS_303_CNT           0x00014F0000001200  NCB
IPD_PORT_QOS_304_CNT           0x00014F0000001208  NCB
IPD_PORT_QOS_305_CNT           0x00014F0000001210  NCB
IPD_PORT_QOS_306_CNT           0x00014F0000001218  NCB
IPD_PORT_QOS_307_CNT           0x00014F0000001220  NCB
IPD_PORT_QOS_308_CNT           0x00014F0000001228  NCB
IPD_PORT_QOS_309_CNT           0x00014F0000001230  NCB
IPD_PORT_QOS_310_CNT           0x00014F0000001238  NCB
IPD_PORT_QOS_311_CNT           0x00014F0000001240  NCB
IPD_PORT_QOS_312_CNT           0x00014F0000001248  NCB
IPD_PORT_QOS_313_CNT           0x00014F0000001250  NCB
IPD_PORT_QOS_314_CNT           0x00014F0000001258  NCB
IPD_PORT_QOS_315_CNT           0x00014F0000001260  NCB
IPD_PORT_QOS_316_CNT           0x00014F0000001268  NCB
IPD_PORT_QOS_317_CNT           0x00014F0000001270  NCB
IPD_PORT_QOS_318_CNT           0x00014F0000001278  NCB
IPD_PORT_QOS_319_CNT           0x00014F0000001280  NCB
IPD_PORT_QOS_320_CNT           0x00014F0000001288  NCB
IPD_PORT_QOS_321_CNT           0x00014F0000001290  NCB
IPD_PORT_QOS_322_CNT           0x00014F0000001298  NCB
IPD_PORT_QOS_323_CNT           0x00014F00000012A0  NCB
IPD_PORT_QOS_324_CNT           0x00014F00000012A8  NCB
IPD_PORT_QOS_325_CNT           0x00014F00000012B0  NCB
IPD_PORT_QOS_326_CNT           0x00014F00000012B8  NCB
IPD_PORT_QOS_327_CNT           0x00014F00000012C0  NCB
IPD_PORT_QOS_328_CNT           0x00014F00000012C8  NCB
IPD_PORT_QOS_329_CNT           0x00014F00000012D0  NCB
IPD_PORT_QOS_330_CNT           0x00014F00000012D8  NCB
IPD_PORT_QOS_331_CNT           0x00014F00000012E0  NCB
IPD_PORT_QOS_332_CNT           0x00014F00000012E8  NCB
IPD_PORT_QOS_333_CNT           0x00014F00000012F0  NCB
IPD_PORT_QOS_334_CNT           0x00014F00000012F8  NCB
IPD_PORT_QOS_335_CNT           0x00014F0000001300  NCB
IPD_PORT_QOS_336_CNT           0x00014F0000001308  NCB
IPD_PORT_QOS_337_CNT           0x00014F0000001310  NCB
IPD_PORT_QOS_338_CNT           0x00014F0000001318  NCB
IPD_PORT_QOS_339_CNT           0x00014F0000001320  NCB
IPD_PORT_QOS_340_CNT           0x00014F0000001328  NCB
IPD_PORT_QOS_341_CNT           0x00014F0000001330  NCB
IPD_PORT_QOS_342_CNT           0x00014F0000001338  NCB
IPD_PORT_QOS_343_CNT           0x00014F0000001340  NCB
IPD_PORT_QOS_344_CNT           0x00014F0000001348  NCB
IPD_PORT_QOS_345_CNT           0x00014F0000001350  NCB
IPD_PORT_QOS_346_CNT           0x00014F0000001358  NCB
IPD_PORT_QOS_347_CNT           0x00014F0000001360  NCB
IPD_PORT_QOS_348_CNT           0x00014F0000001368  NCB
IPD_PORT_QOS_349_CNT           0x00014F0000001370  NCB
IPD_PORT_QOS_350_CNT           0x00014F0000001378  NCB
IPD_PORT_QOS_351_CNT           0x00014F0000001380  NCB
IPD_PORT_QOS_352_CNT           0x00014F0000001388  NCB
IPD_PORT_QOS_353_CNT           0x00014F0000001390  NCB
IPD_PORT_QOS_354_CNT           0x00014F0000001398  NCB
IPD_PORT_QOS_355_CNT           0x00014F00000013A0  NCB
IPD_PORT_QOS_356_CNT           0x00014F00000013A8  NCB
IPD_PORT_QOS_357_CNT           0x00014F00000013B0  NCB
IPD_PORT_QOS_358_CNT           0x00014F00000013B8  NCB
IPD_PORT_QOS_359_CNT           0x00014F00000013C0  NCB
IPD_PORT_QOS_360_CNT           0x00014F00000013C8  NCB
IPD_PORT_QOS_361_CNT           0x00014F00000013D0  NCB
IPD_PORT_QOS_362_CNT           0x00014F00000013D8  NCB
IPD_PORT_QOS_363_CNT           0x00014F00000013E0  NCB
IPD_PORT_QOS_364_CNT           0x00014F00000013E8  NCB
IPD_PORT_QOS_365_CNT           0x00014F00000013F0  NCB
IPD_PORT_QOS_366_CNT           0x00014F00000013F8  NCB
IPD_PORT_QOS_367_CNT           0x00014F0000001400  NCB
IPD_PORT_QOS_368_CNT           0x00014F0000001408  NCB
IPD_PORT_QOS_369_CNT           0x00014F0000001410  NCB
IPD_PORT_QOS_370_CNT           0x00014F0000001418  NCB
IPD_PORT_QOS_371_CNT           0x00014F0000001420  NCB
IPD_PORT_QOS_372_CNT           0x00014F0000001428  NCB
IPD_PORT_QOS_373_CNT           0x00014F0000001430  NCB
IPD_PORT_QOS_374_CNT           0x00014F0000001438  NCB
IPD_PORT_QOS_375_CNT           0x00014F0000001440  NCB
IPD_PORT_QOS_376_CNT           0x00014F0000001448  NCB
IPD_PORT_QOS_377_CNT           0x00014F0000001450  NCB
IPD_PORT_QOS_378_CNT           0x00014F0000001458  NCB
IPD_PORT_QOS_379_CNT           0x00014F0000001460  NCB
IPD_PORT_QOS_380_CNT           0x00014F0000001468  NCB
IPD_PORT_QOS_381_CNT           0x00014F0000001470  NCB
IPD_PORT_QOS_382_CNT           0x00014F0000001478  NCB
IPD_PORT_QOS_383_CNT           0x00014F0000001480  NCB
IPD_PORT_QOS_384_CNT           0x00014F0000001488  NCB
IPD_PORT_QOS_385_CNT           0x00014F0000001490  NCB
IPD_PORT_QOS_386_CNT           0x00014F0000001498  NCB
IPD_PORT_QOS_387_CNT           0x00014F00000014A0  NCB
IPD_PORT_QOS_388_CNT           0x00014F00000014A8  NCB
IPD_PORT_QOS_389_CNT           0x00014F00000014B0  NCB
IPD_PORT_QOS_390_CNT           0x00014F00000014B8  NCB
IPD_PORT_QOS_391_CNT           0x00014F00000014C0  NCB
IPD_PORT_QOS_392_CNT           0x00014F00000014C8  NCB
IPD_PORT_QOS_393_CNT           0x00014F00000014D0  NCB
IPD_PORT_QOS_394_CNT           0x00014F00000014D8  NCB
IPD_PORT_QOS_395_CNT           0x00014F00000014E0  NCB
IPD_PORT_QOS_396_CNT           0x00014F00000014E8  NCB
IPD_PORT_QOS_397_CNT           0x00014F00000014F0  NCB
IPD_PORT_QOS_398_CNT           0x00014F00000014F8  NCB
IPD_PORT_QOS_399_CNT           0x00014F0000001500  NCB
IPD_PORT_QOS_400_CNT           0x00014F0000001508  NCB
IPD_PORT_QOS_401_CNT           0x00014F0000001510  NCB
IPD_PORT_QOS_402_CNT           0x00014F0000001518  NCB
IPD_PORT_QOS_403_CNT           0x00014F0000001520  NCB
IPD_PORT_QOS_404_CNT           0x00014F0000001528  NCB
IPD_PORT_QOS_405_CNT           0x00014F0000001530  NCB
IPD_PORT_QOS_406_CNT           0x00014F0000001538  NCB
IPD_PORT_QOS_407_CNT           0x00014F0000001540  NCB
IPD_PORT_QOS_408_CNT           0x00014F0000001548  NCB
IPD_PORT_QOS_409_CNT           0x00014F0000001550  NCB
IPD_PORT_QOS_410_CNT           0x00014F0000001558  NCB
IPD_PORT_QOS_411_CNT           0x00014F0000001560  NCB
IPD_PORT_QOS_412_CNT           0x00014F0000001568  NCB
IPD_PORT_QOS_413_CNT           0x00014F0000001570  NCB
IPD_PORT_QOS_414_CNT           0x00014F0000001578  NCB
IPD_PORT_QOS_415_CNT           0x00014F0000001580  NCB
IPD_PORT_QOS_416_CNT           0x00014F0000001588  NCB
IPD_PORT_QOS_417_CNT           0x00014F0000001590  NCB
IPD_PORT_QOS_418_CNT           0x00014F0000001598  NCB
IPD_PORT_QOS_419_CNT           0x00014F00000015A0  NCB
IPD_PORT_QOS_420_CNT           0x00014F00000015A8  NCB
IPD_PORT_QOS_421_CNT           0x00014F00000015B0  NCB
IPD_PORT_QOS_422_CNT           0x00014F00000015B8  NCB
IPD_PORT_QOS_423_CNT           0x00014F00000015C0  NCB
IPD_PORT_QOS_424_CNT           0x00014F00000015C8  NCB
IPD_PORT_QOS_425_CNT           0x00014F00000015D0  NCB
IPD_PORT_QOS_426_CNT           0x00014F00000015D8  NCB
IPD_PORT_QOS_427_CNT           0x00014F00000015E0  NCB
IPD_PORT_QOS_428_CNT           0x00014F00000015E8  NCB
IPD_PORT_QOS_429_CNT           0x00014F00000015F0  NCB
IPD_PORT_QOS_430_CNT           0x00014F00000015F8  NCB
IPD_PORT_QOS_431_CNT           0x00014F0000001600  NCB
IPD_PORT_QOS_432_CNT           0x00014F0000001608  NCB
IPD_PORT_QOS_433_CNT           0x00014F0000001610  NCB
IPD_PORT_QOS_434_CNT           0x00014F0000001618  NCB
IPD_PORT_QOS_435_CNT           0x00014F0000001620  NCB
IPD_PORT_QOS_436_CNT           0x00014F0000001628  NCB
IPD_PORT_QOS_437_CNT           0x00014F0000001630  NCB
IPD_PORT_QOS_438_CNT           0x00014F0000001638  NCB
IPD_PORT_QOS_439_CNT           0x00014F0000001640  NCB
IPD_PORT_QOS_440_CNT           0x00014F0000001648  NCB
IPD_PORT_QOS_441_CNT           0x00014F0000001650  NCB
IPD_PORT_QOS_442_CNT           0x00014F0000001658  NCB
IPD_PORT_QOS_443_CNT           0x00014F0000001660  NCB
IPD_PORT_QOS_444_CNT           0x00014F0000001668  NCB
IPD_PORT_QOS_445_CNT           0x00014F0000001670  NCB
IPD_PORT_QOS_446_CNT           0x00014F0000001678  NCB
IPD_PORT_QOS_447_CNT           0x00014F0000001680  NCB
IPD_PORT_QOS_448_CNT           0x00014F0000001688  NCB
IPD_PORT_QOS_449_CNT           0x00014F0000001690  NCB
IPD_PORT_QOS_450_CNT           0x00014F0000001698  NCB
IPD_PORT_QOS_451_CNT           0x00014F00000016A0  NCB
IPD_PORT_QOS_452_CNT           0x00014F00000016A8  NCB
IPD_PORT_QOS_453_CNT           0x00014F00000016B0  NCB
IPD_PORT_QOS_454_CNT           0x00014F00000016B8  NCB
IPD_PORT_QOS_455_CNT           0x00014F00000016C0  NCB
IPD_PORT_QOS_456_CNT           0x00014F00000016C8  NCB
IPD_PORT_QOS_457_CNT           0x00014F00000016D0  NCB
IPD_PORT_QOS_458_CNT           0x00014F00000016D8  NCB
IPD_PORT_QOS_459_CNT           0x00014F00000016E0  NCB
IPD_PORT_QOS_460_CNT           0x00014F00000016E8  NCB
IPD_PORT_QOS_461_CNT           0x00014F00000016F0  NCB
IPD_PORT_QOS_462_CNT           0x00014F00000016F8  NCB
IPD_PORT_QOS_463_CNT           0x00014F0000001700  NCB
IPD_PORT_QOS_464_CNT           0x00014F0000001708  NCB
IPD_PORT_QOS_465_CNT           0x00014F0000001710  NCB
IPD_PORT_QOS_466_CNT           0x00014F0000001718  NCB
IPD_PORT_QOS_467_CNT           0x00014F0000001720  NCB
IPD_PORT_QOS_468_CNT           0x00014F0000001728  NCB
IPD_PORT_QOS_469_CNT           0x00014F0000001730  NCB
IPD_PORT_QOS_470_CNT           0x00014F0000001738  NCB
IPD_PORT_QOS_471_CNT           0x00014F0000001740  NCB
IPD_PORT_QOS_472_CNT           0x00014F0000001748  NCB
IPD_PORT_QOS_473_CNT           0x00014F0000001750  NCB
IPD_PORT_QOS_474_CNT           0x00014F0000001758  NCB
IPD_PORT_QOS_475_CNT           0x00014F0000001760  NCB
IPD_PORT_QOS_476_CNT           0x00014F0000001768  NCB
IPD_PORT_QOS_477_CNT           0x00014F0000001770  NCB
IPD_PORT_QOS_478_CNT           0x00014F0000001778  NCB
IPD_PORT_QOS_479_CNT           0x00014F0000001780  NCB
IPD_PORT_QOS_480_CNT           0x00014F0000001788  NCB
IPD_PORT_QOS_481_CNT           0x00014F0000001790  NCB
IPD_PORT_QOS_482_CNT           0x00014F0000001798  NCB
IPD_PORT_QOS_483_CNT           0x00014F00000017A0  NCB
IPD_PORT_QOS_484_CNT           0x00014F00000017A8  NCB
IPD_PORT_QOS_485_CNT           0x00014F00000017B0  NCB
IPD_PORT_QOS_486_CNT           0x00014F00000017B8  NCB
IPD_PORT_QOS_487_CNT           0x00014F00000017C0  NCB
IPD_PORT_QOS_488_CNT           0x00014F00000017C8  NCB
IPD_PORT_QOS_489_CNT           0x00014F00000017D0  NCB
IPD_PORT_QOS_490_CNT           0x00014F00000017D8  NCB
IPD_PORT_QOS_491_CNT           0x00014F00000017E0  NCB
IPD_PORT_QOS_492_CNT           0x00014F00000017E8  NCB
IPD_PORT_QOS_493_CNT           0x00014F00000017F0  NCB
IPD_PORT_QOS_494_CNT           0x00014F00000017F8  NCB
IPD_PORT_QOS_495_CNT           0x00014F0000001800  NCB
IPD_PORT_QOS_496_CNT           0x00014F0000001808  NCB
IPD_PORT_QOS_497_CNT           0x00014F0000001810  NCB
IPD_PORT_QOS_498_CNT           0x00014F0000001818  NCB
IPD_PORT_QOS_499_CNT           0x00014F0000001820  NCB
IPD_PORT_QOS_500_CNT           0x00014F0000001828  NCB
IPD_PORT_QOS_501_CNT           0x00014F0000001830  NCB
IPD_PORT_QOS_502_CNT           0x00014F0000001838  NCB
IPD_PORT_QOS_503_CNT           0x00014F0000001840  NCB
IPD_PORT_QOS_504_CNT           0x00014F0000001848  NCB
IPD_PORT_QOS_505_CNT           0x00014F0000001850  NCB
IPD_PORT_QOS_506_CNT           0x00014F0000001858  NCB
IPD_PORT_QOS_507_CNT           0x00014F0000001860  NCB
IPD_PORT_QOS_508_CNT           0x00014F0000001868  NCB
IPD_PORT_QOS_509_CNT           0x00014F0000001870  NCB
IPD_PORT_QOS_510_CNT           0x00014F0000001878  NCB
IPD_PORT_QOS_511_CNT           0x00014F0000001880  NCB
IPD_PORT_QOS_INT0              0x00014F0000000808  NCB
IPD_PORT_QOS_INT1              0x00014F0000000810  NCB
IPD_PORT_QOS_INT2              0x00014F0000000818  NCB
IPD_PORT_QOS_INT3              0x00014F0000000820  NCB
IPD_PORT_QOS_INT4              0x00014F0000000828  NCB
IPD_PORT_QOS_INT5              0x00014F0000000830  NCB
IPD_PORT_QOS_INT6              0x00014F0000000838  NCB
IPD_PORT_QOS_INT7              0x00014F0000000840  NCB
IPD_PORT_QOS_INT_ENB0          0x00014F0000000848  NCB
IPD_PORT_QOS_INT_ENB1          0x00014F0000000850  NCB
IPD_PORT_QOS_INT_ENB2          0x00014F0000000858  NCB
IPD_PORT_QOS_INT_ENB3          0x00014F0000000860  NCB
IPD_PORT_QOS_INT_ENB4          0x00014F0000000868  NCB
IPD_PORT_QOS_INT_ENB5          0x00014F0000000870  NCB
IPD_PORT_QOS_INT_ENB6          0x00014F0000000878  NCB
IPD_PORT_QOS_INT_ENB7          0x00014F0000000880  NCB
IPD_PORT_SOP0                  0x00014F0000004400  NCB
IPD_PTR_COUNT                  0x00014F0000000320  NCB
IPD_QOS0_RED_MARKS             0x00014F0000000178  NCB
IPD_QOS1_RED_MARKS             0x00014F0000000180  NCB
IPD_QOS2_RED_MARKS             0x00014F0000000188  NCB
IPD_QOS3_RED_MARKS             0x00014F0000000190  NCB
IPD_QOS4_RED_MARKS             0x00014F0000000198  NCB
IPD_QOS5_RED_MARKS             0x00014F00000001A0  NCB
IPD_QOS6_RED_MARKS             0x00014F00000001A8  NCB
IPD_QOS7_RED_MARKS             0x00014F00000001B0  NCB
IPD_QUE0_FREE_PAGE_CNT         0x00014F0000000330  NCB
IPD_RED_BPID_ENABLE0           0x00014F0000004200  NCB
IPD_RED_DELAY                  0x00014F0000004300  NCB
IPD_RED_QUE0_PARAM             0x00014F00000002E0  NCB
IPD_RED_QUE1_PARAM             0x00014F00000002E8  NCB
IPD_RED_QUE2_PARAM             0x00014F00000002F0  NCB
IPD_RED_QUE3_PARAM             0x00014F00000002F8  NCB
IPD_RED_QUE4_PARAM             0x00014F0000000300  NCB
IPD_RED_QUE5_PARAM             0x00014F0000000308  NCB
IPD_RED_QUE6_PARAM             0x00014F0000000310  NCB
IPD_RED_QUE7_PARAM             0x00014F0000000318  NCB
IPD_SUB_PORT_BP_PAGE_CNT       0x00014F0000000148  NCB
IPD_SUB_PORT_QOS_CNT           0x00014F0000000800  NCB
IPD_WQE_FPA_QUEUE              0x00014F0000000020  NCB
KEY_BIST_REG                   0x0001180020000018  RSL
KEY_CTL_STATUS                 0x0001180020000010  RSL
KEY_INT_ENB                    0x0001180020000008  RSL
KEY_INT_SUM                    0x0001180020000000  RSL
L2C_BIG_CTL                    0x0001180080800030  RSL
L2C_BST                        0x00011800808007F8  RSL
L2C_BST_MEM0                   0x0001180080C007F8  RSL
L2C_BST_MEM1                   0x0001180080C407F8  RSL
L2C_BST_MEM2                   0x0001180080C807F8  RSL
L2C_BST_MEM3                   0x0001180080CC07F8  RSL
L2C_BST_TDT0                   0x0001180080A007F0  RSL
L2C_BST_TDT1                   0x0001180080A407F0  RSL
L2C_BST_TDT2                   0x0001180080A807F0  RSL
L2C_BST_TDT3                   0x0001180080AC07F0  RSL
L2C_BST_TTG0                   0x0001180080A007F8  RSL
L2C_BST_TTG1                   0x0001180080A407F8  RSL
L2C_BST_TTG2                   0x0001180080A807F8  RSL
L2C_BST_TTG3                   0x0001180080AC07F8  RSL
L2C_COP0_MAP0                  0x0001180080940000  RSL
L2C_COP0_MAP1                  0x0001180080940008  RSL
L2C_COP0_MAP2                  0x0001180080940010  RSL
L2C_COP0_MAP3                  0x0001180080940018  RSL
L2C_COP0_MAP4                  0x0001180080940020  RSL
L2C_COP0_MAP5                  0x0001180080940028  RSL
L2C_COP0_MAP6                  0x0001180080940030  RSL
L2C_COP0_MAP7                  0x0001180080940038  RSL
L2C_COP0_MAP8                  0x0001180080940040  RSL
L2C_COP0_MAP9                  0x0001180080940048  RSL
L2C_COP0_MAP10                 0x0001180080940050  RSL
L2C_COP0_MAP11                 0x0001180080940058  RSL
L2C_COP0_MAP12                 0x0001180080940060  RSL
L2C_COP0_MAP13                 0x0001180080940068  RSL
L2C_COP0_MAP14                 0x0001180080940070  RSL
L2C_COP0_MAP15                 0x0001180080940078  RSL
L2C_COP0_MAP16                 0x0001180080940080  RSL
L2C_COP0_MAP17                 0x0001180080940088  RSL
L2C_COP0_MAP18                 0x0001180080940090  RSL
L2C_COP0_MAP19                 0x0001180080940098  RSL
L2C_COP0_MAP20                 0x00011800809400A0  RSL
L2C_COP0_MAP21                 0x00011800809400A8  RSL
L2C_COP0_MAP22                 0x00011800809400B0  RSL
L2C_COP0_MAP23                 0x00011800809400B8  RSL
L2C_COP0_MAP24                 0x00011800809400C0  RSL
L2C_COP0_MAP25                 0x00011800809400C8  RSL
L2C_COP0_MAP26                 0x00011800809400D0  RSL
L2C_COP0_MAP27                 0x00011800809400D8  RSL
L2C_COP0_MAP28                 0x00011800809400E0  RSL
L2C_COP0_MAP29                 0x00011800809400E8  RSL
L2C_COP0_MAP30                 0x00011800809400F0  RSL
L2C_COP0_MAP31                 0x00011800809400F8  RSL
L2C_COP0_MAP32                 0x0001180080940100  RSL
L2C_COP0_MAP33                 0x0001180080940108  RSL
L2C_COP0_MAP34                 0x0001180080940110  RSL
L2C_COP0_MAP35                 0x0001180080940118  RSL
L2C_COP0_MAP36                 0x0001180080940120  RSL
L2C_COP0_MAP37                 0x0001180080940128  RSL
L2C_COP0_MAP38                 0x0001180080940130  RSL
L2C_COP0_MAP39                 0x0001180080940138  RSL
L2C_COP0_MAP40                 0x0001180080940140  RSL
L2C_COP0_MAP41                 0x0001180080940148  RSL
L2C_COP0_MAP42                 0x0001180080940150  RSL
L2C_COP0_MAP43                 0x0001180080940158  RSL
L2C_COP0_MAP44                 0x0001180080940160  RSL
L2C_COP0_MAP45                 0x0001180080940168  RSL
L2C_COP0_MAP46                 0x0001180080940170  RSL
L2C_COP0_MAP47                 0x0001180080940178  RSL
L2C_COP0_MAP48                 0x0001180080940180  RSL
L2C_COP0_MAP49                 0x0001180080940188  RSL
L2C_COP0_MAP50                 0x0001180080940190  RSL
L2C_COP0_MAP51                 0x0001180080940198  RSL
L2C_COP0_MAP52                 0x00011800809401A0  RSL
L2C_COP0_MAP53                 0x00011800809401A8  RSL
L2C_COP0_MAP54                 0x00011800809401B0  RSL
L2C_COP0_MAP55                 0x00011800809401B8  RSL
L2C_COP0_MAP56                 0x00011800809401C0  RSL
L2C_COP0_MAP57                 0x00011800809401C8  RSL
L2C_COP0_MAP58                 0x00011800809401D0  RSL
L2C_COP0_MAP59                 0x00011800809401D8  RSL
L2C_COP0_MAP60                 0x00011800809401E0  RSL
L2C_COP0_MAP61                 0x00011800809401E8  RSL
L2C_COP0_MAP62                 0x00011800809401F0  RSL
L2C_COP0_MAP63                 0x00011800809401F8  RSL
L2C_COP0_MAP64                 0x0001180080940200  RSL
L2C_COP0_MAP65                 0x0001180080940208  RSL
L2C_COP0_MAP66                 0x0001180080940210  RSL
L2C_COP0_MAP67                 0x0001180080940218  RSL
L2C_COP0_MAP68                 0x0001180080940220  RSL
L2C_COP0_MAP69                 0x0001180080940228  RSL
L2C_COP0_MAP70                 0x0001180080940230  RSL
L2C_COP0_MAP71                 0x0001180080940238  RSL
L2C_COP0_MAP72                 0x0001180080940240  RSL
L2C_COP0_MAP73                 0x0001180080940248  RSL
L2C_COP0_MAP74                 0x0001180080940250  RSL
L2C_COP0_MAP75                 0x0001180080940258  RSL
L2C_COP0_MAP76                 0x0001180080940260  RSL
L2C_COP0_MAP77                 0x0001180080940268  RSL
L2C_COP0_MAP78                 0x0001180080940270  RSL
L2C_COP0_MAP79                 0x0001180080940278  RSL
L2C_COP0_MAP80                 0x0001180080940280  RSL
L2C_COP0_MAP81                 0x0001180080940288  RSL
L2C_COP0_MAP82                 0x0001180080940290  RSL
L2C_COP0_MAP83                 0x0001180080940298  RSL
L2C_COP0_MAP84                 0x00011800809402A0  RSL
L2C_COP0_MAP85                 0x00011800809402A8  RSL
L2C_COP0_MAP86                 0x00011800809402B0  RSL
L2C_COP0_MAP87                 0x00011800809402B8  RSL
L2C_COP0_MAP88                 0x00011800809402C0  RSL
L2C_COP0_MAP89                 0x00011800809402C8  RSL
L2C_COP0_MAP90                 0x00011800809402D0  RSL
L2C_COP0_MAP91                 0x00011800809402D8  RSL
L2C_COP0_MAP92                 0x00011800809402E0  RSL
L2C_COP0_MAP93                 0x00011800809402E8  RSL
L2C_COP0_MAP94                 0x00011800809402F0  RSL
L2C_COP0_MAP95                 0x00011800809402F8  RSL
L2C_COP0_MAP96                 0x0001180080940300  RSL
L2C_COP0_MAP97                 0x0001180080940308  RSL
L2C_COP0_MAP98                 0x0001180080940310  RSL
L2C_COP0_MAP99                 0x0001180080940318  RSL
L2C_COP0_MAP100                0x0001180080940320  RSL
L2C_COP0_MAP101                0x0001180080940328  RSL
L2C_COP0_MAP102                0x0001180080940330  RSL
L2C_COP0_MAP103                0x0001180080940338  RSL
L2C_COP0_MAP104                0x0001180080940340  RSL
L2C_COP0_MAP105                0x0001180080940348  RSL
L2C_COP0_MAP106                0x0001180080940350  RSL
L2C_COP0_MAP107                0x0001180080940358  RSL
L2C_COP0_MAP108                0x0001180080940360  RSL
L2C_COP0_MAP109                0x0001180080940368  RSL
L2C_COP0_MAP110                0x0001180080940370  RSL
L2C_COP0_MAP111                0x0001180080940378  RSL
L2C_COP0_MAP112                0x0001180080940380  RSL
L2C_COP0_MAP113                0x0001180080940388  RSL
L2C_COP0_MAP114                0x0001180080940390  RSL
L2C_COP0_MAP115                0x0001180080940398  RSL
L2C_COP0_MAP116                0x00011800809403A0  RSL
L2C_COP0_MAP117                0x00011800809403A8  RSL
L2C_COP0_MAP118                0x00011800809403B0  RSL
L2C_COP0_MAP119                0x00011800809403B8  RSL
L2C_COP0_MAP120                0x00011800809403C0  RSL
L2C_COP0_MAP121                0x00011800809403C8  RSL
L2C_COP0_MAP122                0x00011800809403D0  RSL
L2C_COP0_MAP123                0x00011800809403D8  RSL
L2C_COP0_MAP124                0x00011800809403E0  RSL
L2C_COP0_MAP125                0x00011800809403E8  RSL
L2C_COP0_MAP126                0x00011800809403F0  RSL
L2C_COP0_MAP127                0x00011800809403F8  RSL
L2C_COP0_MAP128                0x0001180080940400  RSL
L2C_COP0_MAP129                0x0001180080940408  RSL
L2C_COP0_MAP130                0x0001180080940410  RSL
L2C_COP0_MAP131                0x0001180080940418  RSL
L2C_COP0_MAP132                0x0001180080940420  RSL
L2C_COP0_MAP133                0x0001180080940428  RSL
L2C_COP0_MAP134                0x0001180080940430  RSL
L2C_COP0_MAP135                0x0001180080940438  RSL
L2C_COP0_MAP136                0x0001180080940440  RSL
L2C_COP0_MAP137                0x0001180080940448  RSL
L2C_COP0_MAP138                0x0001180080940450  RSL
L2C_COP0_MAP139                0x0001180080940458  RSL
L2C_COP0_MAP140                0x0001180080940460  RSL
L2C_COP0_MAP141                0x0001180080940468  RSL
L2C_COP0_MAP142                0x0001180080940470  RSL
L2C_COP0_MAP143                0x0001180080940478  RSL
L2C_COP0_MAP144                0x0001180080940480  RSL
L2C_COP0_MAP145                0x0001180080940488  RSL
L2C_COP0_MAP146                0x0001180080940490  RSL
L2C_COP0_MAP147                0x0001180080940498  RSL
L2C_COP0_MAP148                0x00011800809404A0  RSL
L2C_COP0_MAP149                0x00011800809404A8  RSL
L2C_COP0_MAP150                0x00011800809404B0  RSL
L2C_COP0_MAP151                0x00011800809404B8  RSL
L2C_COP0_MAP152                0x00011800809404C0  RSL
L2C_COP0_MAP153                0x00011800809404C8  RSL
L2C_COP0_MAP154                0x00011800809404D0  RSL
L2C_COP0_MAP155                0x00011800809404D8  RSL
L2C_COP0_MAP156                0x00011800809404E0  RSL
L2C_COP0_MAP157                0x00011800809404E8  RSL
L2C_COP0_MAP158                0x00011800809404F0  RSL
L2C_COP0_MAP159                0x00011800809404F8  RSL
L2C_COP0_MAP160                0x0001180080940500  RSL
L2C_COP0_MAP161                0x0001180080940508  RSL
L2C_COP0_MAP162                0x0001180080940510  RSL
L2C_COP0_MAP163                0x0001180080940518  RSL
L2C_COP0_MAP164                0x0001180080940520  RSL
L2C_COP0_MAP165                0x0001180080940528  RSL
L2C_COP0_MAP166                0x0001180080940530  RSL
L2C_COP0_MAP167                0x0001180080940538  RSL
L2C_COP0_MAP168                0x0001180080940540  RSL
L2C_COP0_MAP169                0x0001180080940548  RSL
L2C_COP0_MAP170                0x0001180080940550  RSL
L2C_COP0_MAP171                0x0001180080940558  RSL
L2C_COP0_MAP172                0x0001180080940560  RSL
L2C_COP0_MAP173                0x0001180080940568  RSL
L2C_COP0_MAP174                0x0001180080940570  RSL
L2C_COP0_MAP175                0x0001180080940578  RSL
L2C_COP0_MAP176                0x0001180080940580  RSL
L2C_COP0_MAP177                0x0001180080940588  RSL
L2C_COP0_MAP178                0x0001180080940590  RSL
L2C_COP0_MAP179                0x0001180080940598  RSL
L2C_COP0_MAP180                0x00011800809405A0  RSL
L2C_COP0_MAP181                0x00011800809405A8  RSL
L2C_COP0_MAP182                0x00011800809405B0  RSL
L2C_COP0_MAP183                0x00011800809405B8  RSL
L2C_COP0_MAP184                0x00011800809405C0  RSL
L2C_COP0_MAP185                0x00011800809405C8  RSL
L2C_COP0_MAP186                0x00011800809405D0  RSL
L2C_COP0_MAP187                0x00011800809405D8  RSL
L2C_COP0_MAP188                0x00011800809405E0  RSL
L2C_COP0_MAP189                0x00011800809405E8  RSL
L2C_COP0_MAP190                0x00011800809405F0  RSL
L2C_COP0_MAP191                0x00011800809405F8  RSL
L2C_COP0_MAP192                0x0001180080940600  RSL
L2C_COP0_MAP193                0x0001180080940608  RSL
L2C_COP0_MAP194                0x0001180080940610  RSL
L2C_COP0_MAP195                0x0001180080940618  RSL
L2C_COP0_MAP196                0x0001180080940620  RSL
L2C_COP0_MAP197                0x0001180080940628  RSL
L2C_COP0_MAP198                0x0001180080940630  RSL
L2C_COP0_MAP199                0x0001180080940638  RSL
L2C_COP0_MAP200                0x0001180080940640  RSL
L2C_COP0_MAP201                0x0001180080940648  RSL
L2C_COP0_MAP202                0x0001180080940650  RSL
L2C_COP0_MAP203                0x0001180080940658  RSL
L2C_COP0_MAP204                0x0001180080940660  RSL
L2C_COP0_MAP205                0x0001180080940668  RSL
L2C_COP0_MAP206                0x0001180080940670  RSL
L2C_COP0_MAP207                0x0001180080940678  RSL
L2C_COP0_MAP208                0x0001180080940680  RSL
L2C_COP0_MAP209                0x0001180080940688  RSL
L2C_COP0_MAP210                0x0001180080940690  RSL
L2C_COP0_MAP211                0x0001180080940698  RSL
L2C_COP0_MAP212                0x00011800809406A0  RSL
L2C_COP0_MAP213                0x00011800809406A8  RSL
L2C_COP0_MAP214                0x00011800809406B0  RSL
L2C_COP0_MAP215                0x00011800809406B8  RSL
L2C_COP0_MAP216                0x00011800809406C0  RSL
L2C_COP0_MAP217                0x00011800809406C8  RSL
L2C_COP0_MAP218                0x00011800809406D0  RSL
L2C_COP0_MAP219                0x00011800809406D8  RSL
L2C_COP0_MAP220                0x00011800809406E0  RSL
L2C_COP0_MAP221                0x00011800809406E8  RSL
L2C_COP0_MAP222                0x00011800809406F0  RSL
L2C_COP0_MAP223                0x00011800809406F8  RSL
L2C_COP0_MAP224                0x0001180080940700  RSL
L2C_COP0_MAP225                0x0001180080940708  RSL
L2C_COP0_MAP226                0x0001180080940710  RSL
L2C_COP0_MAP227                0x0001180080940718  RSL
L2C_COP0_MAP228                0x0001180080940720  RSL
L2C_COP0_MAP229                0x0001180080940728  RSL
L2C_COP0_MAP230                0x0001180080940730  RSL
L2C_COP0_MAP231                0x0001180080940738  RSL
L2C_COP0_MAP232                0x0001180080940740  RSL
L2C_COP0_MAP233                0x0001180080940748  RSL
L2C_COP0_MAP234                0x0001180080940750  RSL
L2C_COP0_MAP235                0x0001180080940758  RSL
L2C_COP0_MAP236                0x0001180080940760  RSL
L2C_COP0_MAP237                0x0001180080940768  RSL
L2C_COP0_MAP238                0x0001180080940770  RSL
L2C_COP0_MAP239                0x0001180080940778  RSL
L2C_COP0_MAP240                0x0001180080940780  RSL
L2C_COP0_MAP241                0x0001180080940788  RSL
L2C_COP0_MAP242                0x0001180080940790  RSL
L2C_COP0_MAP243                0x0001180080940798  RSL
L2C_COP0_MAP244                0x00011800809407A0  RSL
L2C_COP0_MAP245                0x00011800809407A8  RSL
L2C_COP0_MAP246                0x00011800809407B0  RSL
L2C_COP0_MAP247                0x00011800809407B8  RSL
L2C_COP0_MAP248                0x00011800809407C0  RSL
L2C_COP0_MAP249                0x00011800809407C8  RSL
L2C_COP0_MAP250                0x00011800809407D0  RSL
L2C_COP0_MAP251                0x00011800809407D8  RSL
L2C_COP0_MAP252                0x00011800809407E0  RSL
L2C_COP0_MAP253                0x00011800809407E8  RSL
L2C_COP0_MAP254                0x00011800809407F0  RSL
L2C_COP0_MAP255                0x00011800809407F8  RSL
L2C_COP0_MAP256                0x0001180080940800  RSL
L2C_COP0_MAP257                0x0001180080940808  RSL
L2C_COP0_MAP258                0x0001180080940810  RSL
L2C_COP0_MAP259                0x0001180080940818  RSL
L2C_COP0_MAP260                0x0001180080940820  RSL
L2C_COP0_MAP261                0x0001180080940828  RSL
L2C_COP0_MAP262                0x0001180080940830  RSL
L2C_COP0_MAP263                0x0001180080940838  RSL
L2C_COP0_MAP264                0x0001180080940840  RSL
L2C_COP0_MAP265                0x0001180080940848  RSL
L2C_COP0_MAP266                0x0001180080940850  RSL
L2C_COP0_MAP267                0x0001180080940858  RSL
L2C_COP0_MAP268                0x0001180080940860  RSL
L2C_COP0_MAP269                0x0001180080940868  RSL
L2C_COP0_MAP270                0x0001180080940870  RSL
L2C_COP0_MAP271                0x0001180080940878  RSL
L2C_COP0_MAP272                0x0001180080940880  RSL
L2C_COP0_MAP273                0x0001180080940888  RSL
L2C_COP0_MAP274                0x0001180080940890  RSL
L2C_COP0_MAP275                0x0001180080940898  RSL
L2C_COP0_MAP276                0x00011800809408A0  RSL
L2C_COP0_MAP277                0x00011800809408A8  RSL
L2C_COP0_MAP278                0x00011800809408B0  RSL
L2C_COP0_MAP279                0x00011800809408B8  RSL
L2C_COP0_MAP280                0x00011800809408C0  RSL
L2C_COP0_MAP281                0x00011800809408C8  RSL
L2C_COP0_MAP282                0x00011800809408D0  RSL
L2C_COP0_MAP283                0x00011800809408D8  RSL
L2C_COP0_MAP284                0x00011800809408E0  RSL
L2C_COP0_MAP285                0x00011800809408E8  RSL
L2C_COP0_MAP286                0x00011800809408F0  RSL
L2C_COP0_MAP287                0x00011800809408F8  RSL
L2C_COP0_MAP288                0x0001180080940900  RSL
L2C_COP0_MAP289                0x0001180080940908  RSL
L2C_COP0_MAP290                0x0001180080940910  RSL
L2C_COP0_MAP291                0x0001180080940918  RSL
L2C_COP0_MAP292                0x0001180080940920  RSL
L2C_COP0_MAP293                0x0001180080940928  RSL
L2C_COP0_MAP294                0x0001180080940930  RSL
L2C_COP0_MAP295                0x0001180080940938  RSL
L2C_COP0_MAP296                0x0001180080940940  RSL
L2C_COP0_MAP297                0x0001180080940948  RSL
L2C_COP0_MAP298                0x0001180080940950  RSL
L2C_COP0_MAP299                0x0001180080940958  RSL
L2C_COP0_MAP300                0x0001180080940960  RSL
L2C_COP0_MAP301                0x0001180080940968  RSL
L2C_COP0_MAP302                0x0001180080940970  RSL
L2C_COP0_MAP303                0x0001180080940978  RSL
L2C_COP0_MAP304                0x0001180080940980  RSL
L2C_COP0_MAP305                0x0001180080940988  RSL
L2C_COP0_MAP306                0x0001180080940990  RSL
L2C_COP0_MAP307                0x0001180080940998  RSL
L2C_COP0_MAP308                0x00011800809409A0  RSL
L2C_COP0_MAP309                0x00011800809409A8  RSL
L2C_COP0_MAP310                0x00011800809409B0  RSL
L2C_COP0_MAP311                0x00011800809409B8  RSL
L2C_COP0_MAP312                0x00011800809409C0  RSL
L2C_COP0_MAP313                0x00011800809409C8  RSL
L2C_COP0_MAP314                0x00011800809409D0  RSL
L2C_COP0_MAP315                0x00011800809409D8  RSL
L2C_COP0_MAP316                0x00011800809409E0  RSL
L2C_COP0_MAP317                0x00011800809409E8  RSL
L2C_COP0_MAP318                0x00011800809409F0  RSL
L2C_COP0_MAP319                0x00011800809409F8  RSL
L2C_COP0_MAP320                0x0001180080940A00  RSL
L2C_COP0_MAP321                0x0001180080940A08  RSL
L2C_COP0_MAP322                0x0001180080940A10  RSL
L2C_COP0_MAP323                0x0001180080940A18  RSL
L2C_COP0_MAP324                0x0001180080940A20  RSL
L2C_COP0_MAP325                0x0001180080940A28  RSL
L2C_COP0_MAP326                0x0001180080940A30  RSL
L2C_COP0_MAP327                0x0001180080940A38  RSL
L2C_COP0_MAP328                0x0001180080940A40  RSL
L2C_COP0_MAP329                0x0001180080940A48  RSL
L2C_COP0_MAP330                0x0001180080940A50  RSL
L2C_COP0_MAP331                0x0001180080940A58  RSL
L2C_COP0_MAP332                0x0001180080940A60  RSL
L2C_COP0_MAP333                0x0001180080940A68  RSL
L2C_COP0_MAP334                0x0001180080940A70  RSL
L2C_COP0_MAP335                0x0001180080940A78  RSL
L2C_COP0_MAP336                0x0001180080940A80  RSL
L2C_COP0_MAP337                0x0001180080940A88  RSL
L2C_COP0_MAP338                0x0001180080940A90  RSL
L2C_COP0_MAP339                0x0001180080940A98  RSL
L2C_COP0_MAP340                0x0001180080940AA0  RSL
L2C_COP0_MAP341                0x0001180080940AA8  RSL
L2C_COP0_MAP342                0x0001180080940AB0  RSL
L2C_COP0_MAP343                0x0001180080940AB8  RSL
L2C_COP0_MAP344                0x0001180080940AC0  RSL
L2C_COP0_MAP345                0x0001180080940AC8  RSL
L2C_COP0_MAP346                0x0001180080940AD0  RSL
L2C_COP0_MAP347                0x0001180080940AD8  RSL
L2C_COP0_MAP348                0x0001180080940AE0  RSL
L2C_COP0_MAP349                0x0001180080940AE8  RSL
L2C_COP0_MAP350                0x0001180080940AF0  RSL
L2C_COP0_MAP351                0x0001180080940AF8  RSL
L2C_COP0_MAP352                0x0001180080940B00  RSL
L2C_COP0_MAP353                0x0001180080940B08  RSL
L2C_COP0_MAP354                0x0001180080940B10  RSL
L2C_COP0_MAP355                0x0001180080940B18  RSL
L2C_COP0_MAP356                0x0001180080940B20  RSL
L2C_COP0_MAP357                0x0001180080940B28  RSL
L2C_COP0_MAP358                0x0001180080940B30  RSL
L2C_COP0_MAP359                0x0001180080940B38  RSL
L2C_COP0_MAP360                0x0001180080940B40  RSL
L2C_COP0_MAP361                0x0001180080940B48  RSL
L2C_COP0_MAP362                0x0001180080940B50  RSL
L2C_COP0_MAP363                0x0001180080940B58  RSL
L2C_COP0_MAP364                0x0001180080940B60  RSL
L2C_COP0_MAP365                0x0001180080940B68  RSL
L2C_COP0_MAP366                0x0001180080940B70  RSL
L2C_COP0_MAP367                0x0001180080940B78  RSL
L2C_COP0_MAP368                0x0001180080940B80  RSL
L2C_COP0_MAP369                0x0001180080940B88  RSL
L2C_COP0_MAP370                0x0001180080940B90  RSL
L2C_COP0_MAP371                0x0001180080940B98  RSL
L2C_COP0_MAP372                0x0001180080940BA0  RSL
L2C_COP0_MAP373                0x0001180080940BA8  RSL
L2C_COP0_MAP374                0x0001180080940BB0  RSL
L2C_COP0_MAP375                0x0001180080940BB8  RSL
L2C_COP0_MAP376                0x0001180080940BC0  RSL
L2C_COP0_MAP377                0x0001180080940BC8  RSL
L2C_COP0_MAP378                0x0001180080940BD0  RSL
L2C_COP0_MAP379                0x0001180080940BD8  RSL
L2C_COP0_MAP380                0x0001180080940BE0  RSL
L2C_COP0_MAP381                0x0001180080940BE8  RSL
L2C_COP0_MAP382                0x0001180080940BF0  RSL
L2C_COP0_MAP383                0x0001180080940BF8  RSL
L2C_COP0_MAP384                0x0001180080940C00  RSL
L2C_COP0_MAP385                0x0001180080940C08  RSL
L2C_COP0_MAP386                0x0001180080940C10  RSL
L2C_COP0_MAP387                0x0001180080940C18  RSL
L2C_COP0_MAP388                0x0001180080940C20  RSL
L2C_COP0_MAP389                0x0001180080940C28  RSL
L2C_COP0_MAP390                0x0001180080940C30  RSL
L2C_COP0_MAP391                0x0001180080940C38  RSL
L2C_COP0_MAP392                0x0001180080940C40  RSL
L2C_COP0_MAP393                0x0001180080940C48  RSL
L2C_COP0_MAP394                0x0001180080940C50  RSL
L2C_COP0_MAP395                0x0001180080940C58  RSL
L2C_COP0_MAP396                0x0001180080940C60  RSL
L2C_COP0_MAP397                0x0001180080940C68  RSL
L2C_COP0_MAP398                0x0001180080940C70  RSL
L2C_COP0_MAP399                0x0001180080940C78  RSL
L2C_COP0_MAP400                0x0001180080940C80  RSL
L2C_COP0_MAP401                0x0001180080940C88  RSL
L2C_COP0_MAP402                0x0001180080940C90  RSL
L2C_COP0_MAP403                0x0001180080940C98  RSL
L2C_COP0_MAP404                0x0001180080940CA0  RSL
L2C_COP0_MAP405                0x0001180080940CA8  RSL
L2C_COP0_MAP406                0x0001180080940CB0  RSL
L2C_COP0_MAP407                0x0001180080940CB8  RSL
L2C_COP0_MAP408                0x0001180080940CC0  RSL
L2C_COP0_MAP409                0x0001180080940CC8  RSL
L2C_COP0_MAP410                0x0001180080940CD0  RSL
L2C_COP0_MAP411                0x0001180080940CD8  RSL
L2C_COP0_MAP412                0x0001180080940CE0  RSL
L2C_COP0_MAP413                0x0001180080940CE8  RSL
L2C_COP0_MAP414                0x0001180080940CF0  RSL
L2C_COP0_MAP415                0x0001180080940CF8  RSL
L2C_COP0_MAP416                0x0001180080940D00  RSL
L2C_COP0_MAP417                0x0001180080940D08  RSL
L2C_COP0_MAP418                0x0001180080940D10  RSL
L2C_COP0_MAP419                0x0001180080940D18  RSL
L2C_COP0_MAP420                0x0001180080940D20  RSL
L2C_COP0_MAP421                0x0001180080940D28  RSL
L2C_COP0_MAP422                0x0001180080940D30  RSL
L2C_COP0_MAP423                0x0001180080940D38  RSL
L2C_COP0_MAP424                0x0001180080940D40  RSL
L2C_COP0_MAP425                0x0001180080940D48  RSL
L2C_COP0_MAP426                0x0001180080940D50  RSL
L2C_COP0_MAP427                0x0001180080940D58  RSL
L2C_COP0_MAP428                0x0001180080940D60  RSL
L2C_COP0_MAP429                0x0001180080940D68  RSL
L2C_COP0_MAP430                0x0001180080940D70  RSL
L2C_COP0_MAP431                0x0001180080940D78  RSL
L2C_COP0_MAP432                0x0001180080940D80  RSL
L2C_COP0_MAP433                0x0001180080940D88  RSL
L2C_COP0_MAP434                0x0001180080940D90  RSL
L2C_COP0_MAP435                0x0001180080940D98  RSL
L2C_COP0_MAP436                0x0001180080940DA0  RSL
L2C_COP0_MAP437                0x0001180080940DA8  RSL
L2C_COP0_MAP438                0x0001180080940DB0  RSL
L2C_COP0_MAP439                0x0001180080940DB8  RSL
L2C_COP0_MAP440                0x0001180080940DC0  RSL
L2C_COP0_MAP441                0x0001180080940DC8  RSL
L2C_COP0_MAP442                0x0001180080940DD0  RSL
L2C_COP0_MAP443                0x0001180080940DD8  RSL
L2C_COP0_MAP444                0x0001180080940DE0  RSL
L2C_COP0_MAP445                0x0001180080940DE8  RSL
L2C_COP0_MAP446                0x0001180080940DF0  RSL
L2C_COP0_MAP447                0x0001180080940DF8  RSL
L2C_COP0_MAP448                0x0001180080940E00  RSL
L2C_COP0_MAP449                0x0001180080940E08  RSL
L2C_COP0_MAP450                0x0001180080940E10  RSL
L2C_COP0_MAP451                0x0001180080940E18  RSL
L2C_COP0_MAP452                0x0001180080940E20  RSL
L2C_COP0_MAP453                0x0001180080940E28  RSL
L2C_COP0_MAP454                0x0001180080940E30  RSL
L2C_COP0_MAP455                0x0001180080940E38  RSL
L2C_COP0_MAP456                0x0001180080940E40  RSL
L2C_COP0_MAP457                0x0001180080940E48  RSL
L2C_COP0_MAP458                0x0001180080940E50  RSL
L2C_COP0_MAP459                0x0001180080940E58  RSL
L2C_COP0_MAP460                0x0001180080940E60  RSL
L2C_COP0_MAP461                0x0001180080940E68  RSL
L2C_COP0_MAP462                0x0001180080940E70  RSL
L2C_COP0_MAP463                0x0001180080940E78  RSL
L2C_COP0_MAP464                0x0001180080940E80  RSL
L2C_COP0_MAP465                0x0001180080940E88  RSL
L2C_COP0_MAP466                0x0001180080940E90  RSL
L2C_COP0_MAP467                0x0001180080940E98  RSL
L2C_COP0_MAP468                0x0001180080940EA0  RSL
L2C_COP0_MAP469                0x0001180080940EA8  RSL
L2C_COP0_MAP470                0x0001180080940EB0  RSL
L2C_COP0_MAP471                0x0001180080940EB8  RSL
L2C_COP0_MAP472                0x0001180080940EC0  RSL
L2C_COP0_MAP473                0x0001180080940EC8  RSL
L2C_COP0_MAP474                0x0001180080940ED0  RSL
L2C_COP0_MAP475                0x0001180080940ED8  RSL
L2C_COP0_MAP476                0x0001180080940EE0  RSL
L2C_COP0_MAP477                0x0001180080940EE8  RSL
L2C_COP0_MAP478                0x0001180080940EF0  RSL
L2C_COP0_MAP479                0x0001180080940EF8  RSL
L2C_COP0_MAP480                0x0001180080940F00  RSL
L2C_COP0_MAP481                0x0001180080940F08  RSL
L2C_COP0_MAP482                0x0001180080940F10  RSL
L2C_COP0_MAP483                0x0001180080940F18  RSL
L2C_COP0_MAP484                0x0001180080940F20  RSL
L2C_COP0_MAP485                0x0001180080940F28  RSL
L2C_COP0_MAP486                0x0001180080940F30  RSL
L2C_COP0_MAP487                0x0001180080940F38  RSL
L2C_COP0_MAP488                0x0001180080940F40  RSL
L2C_COP0_MAP489                0x0001180080940F48  RSL
L2C_COP0_MAP490                0x0001180080940F50  RSL
L2C_COP0_MAP491                0x0001180080940F58  RSL
L2C_COP0_MAP492                0x0001180080940F60  RSL
L2C_COP0_MAP493                0x0001180080940F68  RSL
L2C_COP0_MAP494                0x0001180080940F70  RSL
L2C_COP0_MAP495                0x0001180080940F78  RSL
L2C_COP0_MAP496                0x0001180080940F80  RSL
L2C_COP0_MAP497                0x0001180080940F88  RSL
L2C_COP0_MAP498                0x0001180080940F90  RSL
L2C_COP0_MAP499                0x0001180080940F98  RSL
L2C_COP0_MAP500                0x0001180080940FA0  RSL
L2C_COP0_MAP501                0x0001180080940FA8  RSL
L2C_COP0_MAP502                0x0001180080940FB0  RSL
L2C_COP0_MAP503                0x0001180080940FB8  RSL
L2C_COP0_MAP504                0x0001180080940FC0  RSL
L2C_COP0_MAP505                0x0001180080940FC8  RSL
L2C_COP0_MAP506                0x0001180080940FD0  RSL
L2C_COP0_MAP507                0x0001180080940FD8  RSL
L2C_COP0_MAP508                0x0001180080940FE0  RSL
L2C_COP0_MAP509                0x0001180080940FE8  RSL
L2C_COP0_MAP510                0x0001180080940FF0  RSL
L2C_COP0_MAP511                0x0001180080940FF8  RSL
L2C_COP0_MAP512                0x0001180080941000  RSL
L2C_COP0_MAP513                0x0001180080941008  RSL
L2C_COP0_MAP514                0x0001180080941010  RSL
L2C_COP0_MAP515                0x0001180080941018  RSL
L2C_COP0_MAP516                0x0001180080941020  RSL
L2C_COP0_MAP517                0x0001180080941028  RSL
L2C_COP0_MAP518                0x0001180080941030  RSL
L2C_COP0_MAP519                0x0001180080941038  RSL
L2C_COP0_MAP520                0x0001180080941040  RSL
L2C_COP0_MAP521                0x0001180080941048  RSL
L2C_COP0_MAP522                0x0001180080941050  RSL
L2C_COP0_MAP523                0x0001180080941058  RSL
L2C_COP0_MAP524                0x0001180080941060  RSL
L2C_COP0_MAP525                0x0001180080941068  RSL
L2C_COP0_MAP526                0x0001180080941070  RSL
L2C_COP0_MAP527                0x0001180080941078  RSL
L2C_COP0_MAP528                0x0001180080941080  RSL
L2C_COP0_MAP529                0x0001180080941088  RSL
L2C_COP0_MAP530                0x0001180080941090  RSL
L2C_COP0_MAP531                0x0001180080941098  RSL
L2C_COP0_MAP532                0x00011800809410A0  RSL
L2C_COP0_MAP533                0x00011800809410A8  RSL
L2C_COP0_MAP534                0x00011800809410B0  RSL
L2C_COP0_MAP535                0x00011800809410B8  RSL
L2C_COP0_MAP536                0x00011800809410C0  RSL
L2C_COP0_MAP537                0x00011800809410C8  RSL
L2C_COP0_MAP538                0x00011800809410D0  RSL
L2C_COP0_MAP539                0x00011800809410D8  RSL
L2C_COP0_MAP540                0x00011800809410E0  RSL
L2C_COP0_MAP541                0x00011800809410E8  RSL
L2C_COP0_MAP542                0x00011800809410F0  RSL
L2C_COP0_MAP543                0x00011800809410F8  RSL
L2C_COP0_MAP544                0x0001180080941100  RSL
L2C_COP0_MAP545                0x0001180080941108  RSL
L2C_COP0_MAP546                0x0001180080941110  RSL
L2C_COP0_MAP547                0x0001180080941118  RSL
L2C_COP0_MAP548                0x0001180080941120  RSL
L2C_COP0_MAP549                0x0001180080941128  RSL
L2C_COP0_MAP550                0x0001180080941130  RSL
L2C_COP0_MAP551                0x0001180080941138  RSL
L2C_COP0_MAP552                0x0001180080941140  RSL
L2C_COP0_MAP553                0x0001180080941148  RSL
L2C_COP0_MAP554                0x0001180080941150  RSL
L2C_COP0_MAP555                0x0001180080941158  RSL
L2C_COP0_MAP556                0x0001180080941160  RSL
L2C_COP0_MAP557                0x0001180080941168  RSL
L2C_COP0_MAP558                0x0001180080941170  RSL
L2C_COP0_MAP559                0x0001180080941178  RSL
L2C_COP0_MAP560                0x0001180080941180  RSL
L2C_COP0_MAP561                0x0001180080941188  RSL
L2C_COP0_MAP562                0x0001180080941190  RSL
L2C_COP0_MAP563                0x0001180080941198  RSL
L2C_COP0_MAP564                0x00011800809411A0  RSL
L2C_COP0_MAP565                0x00011800809411A8  RSL
L2C_COP0_MAP566                0x00011800809411B0  RSL
L2C_COP0_MAP567                0x00011800809411B8  RSL
L2C_COP0_MAP568                0x00011800809411C0  RSL
L2C_COP0_MAP569                0x00011800809411C8  RSL
L2C_COP0_MAP570                0x00011800809411D0  RSL
L2C_COP0_MAP571                0x00011800809411D8  RSL
L2C_COP0_MAP572                0x00011800809411E0  RSL
L2C_COP0_MAP573                0x00011800809411E8  RSL
L2C_COP0_MAP574                0x00011800809411F0  RSL
L2C_COP0_MAP575                0x00011800809411F8  RSL
L2C_COP0_MAP576                0x0001180080941200  RSL
L2C_COP0_MAP577                0x0001180080941208  RSL
L2C_COP0_MAP578                0x0001180080941210  RSL
L2C_COP0_MAP579                0x0001180080941218  RSL
L2C_COP0_MAP580                0x0001180080941220  RSL
L2C_COP0_MAP581                0x0001180080941228  RSL
L2C_COP0_MAP582                0x0001180080941230  RSL
L2C_COP0_MAP583                0x0001180080941238  RSL
L2C_COP0_MAP584                0x0001180080941240  RSL
L2C_COP0_MAP585                0x0001180080941248  RSL
L2C_COP0_MAP586                0x0001180080941250  RSL
L2C_COP0_MAP587                0x0001180080941258  RSL
L2C_COP0_MAP588                0x0001180080941260  RSL
L2C_COP0_MAP589                0x0001180080941268  RSL
L2C_COP0_MAP590                0x0001180080941270  RSL
L2C_COP0_MAP591                0x0001180080941278  RSL
L2C_COP0_MAP592                0x0001180080941280  RSL
L2C_COP0_MAP593                0x0001180080941288  RSL
L2C_COP0_MAP594                0x0001180080941290  RSL
L2C_COP0_MAP595                0x0001180080941298  RSL
L2C_COP0_MAP596                0x00011800809412A0  RSL
L2C_COP0_MAP597                0x00011800809412A8  RSL
L2C_COP0_MAP598                0x00011800809412B0  RSL
L2C_COP0_MAP599                0x00011800809412B8  RSL
L2C_COP0_MAP600                0x00011800809412C0  RSL
L2C_COP0_MAP601                0x00011800809412C8  RSL
L2C_COP0_MAP602                0x00011800809412D0  RSL
L2C_COP0_MAP603                0x00011800809412D8  RSL
L2C_COP0_MAP604                0x00011800809412E0  RSL
L2C_COP0_MAP605                0x00011800809412E8  RSL
L2C_COP0_MAP606                0x00011800809412F0  RSL
L2C_COP0_MAP607                0x00011800809412F8  RSL
L2C_COP0_MAP608                0x0001180080941300  RSL
L2C_COP0_MAP609                0x0001180080941308  RSL
L2C_COP0_MAP610                0x0001180080941310  RSL
L2C_COP0_MAP611                0x0001180080941318  RSL
L2C_COP0_MAP612                0x0001180080941320  RSL
L2C_COP0_MAP613                0x0001180080941328  RSL
L2C_COP0_MAP614                0x0001180080941330  RSL
L2C_COP0_MAP615                0x0001180080941338  RSL
L2C_COP0_MAP616                0x0001180080941340  RSL
L2C_COP0_MAP617                0x0001180080941348  RSL
L2C_COP0_MAP618                0x0001180080941350  RSL
L2C_COP0_MAP619                0x0001180080941358  RSL
L2C_COP0_MAP620                0x0001180080941360  RSL
L2C_COP0_MAP621                0x0001180080941368  RSL
L2C_COP0_MAP622                0x0001180080941370  RSL
L2C_COP0_MAP623                0x0001180080941378  RSL
L2C_COP0_MAP624                0x0001180080941380  RSL
L2C_COP0_MAP625                0x0001180080941388  RSL
L2C_COP0_MAP626                0x0001180080941390  RSL
L2C_COP0_MAP627                0x0001180080941398  RSL
L2C_COP0_MAP628                0x00011800809413A0  RSL
L2C_COP0_MAP629                0x00011800809413A8  RSL
L2C_COP0_MAP630                0x00011800809413B0  RSL
L2C_COP0_MAP631                0x00011800809413B8  RSL
L2C_COP0_MAP632                0x00011800809413C0  RSL
L2C_COP0_MAP633                0x00011800809413C8  RSL
L2C_COP0_MAP634                0x00011800809413D0  RSL
L2C_COP0_MAP635                0x00011800809413D8  RSL
L2C_COP0_MAP636                0x00011800809413E0  RSL
L2C_COP0_MAP637                0x00011800809413E8  RSL
L2C_COP0_MAP638                0x00011800809413F0  RSL
L2C_COP0_MAP639                0x00011800809413F8  RSL
L2C_COP0_MAP640                0x0001180080941400  RSL
L2C_COP0_MAP641                0x0001180080941408  RSL
L2C_COP0_MAP642                0x0001180080941410  RSL
L2C_COP0_MAP643                0x0001180080941418  RSL
L2C_COP0_MAP644                0x0001180080941420  RSL
L2C_COP0_MAP645                0x0001180080941428  RSL
L2C_COP0_MAP646                0x0001180080941430  RSL
L2C_COP0_MAP647                0x0001180080941438  RSL
L2C_COP0_MAP648                0x0001180080941440  RSL
L2C_COP0_MAP649                0x0001180080941448  RSL
L2C_COP0_MAP650                0x0001180080941450  RSL
L2C_COP0_MAP651                0x0001180080941458  RSL
L2C_COP0_MAP652                0x0001180080941460  RSL
L2C_COP0_MAP653                0x0001180080941468  RSL
L2C_COP0_MAP654                0x0001180080941470  RSL
L2C_COP0_MAP655                0x0001180080941478  RSL
L2C_COP0_MAP656                0x0001180080941480  RSL
L2C_COP0_MAP657                0x0001180080941488  RSL
L2C_COP0_MAP658                0x0001180080941490  RSL
L2C_COP0_MAP659                0x0001180080941498  RSL
L2C_COP0_MAP660                0x00011800809414A0  RSL
L2C_COP0_MAP661                0x00011800809414A8  RSL
L2C_COP0_MAP662                0x00011800809414B0  RSL
L2C_COP0_MAP663                0x00011800809414B8  RSL
L2C_COP0_MAP664                0x00011800809414C0  RSL
L2C_COP0_MAP665                0x00011800809414C8  RSL
L2C_COP0_MAP666                0x00011800809414D0  RSL
L2C_COP0_MAP667                0x00011800809414D8  RSL
L2C_COP0_MAP668                0x00011800809414E0  RSL
L2C_COP0_MAP669                0x00011800809414E8  RSL
L2C_COP0_MAP670                0x00011800809414F0  RSL
L2C_COP0_MAP671                0x00011800809414F8  RSL
L2C_COP0_MAP672                0x0001180080941500  RSL
L2C_COP0_MAP673                0x0001180080941508  RSL
L2C_COP0_MAP674                0x0001180080941510  RSL
L2C_COP0_MAP675                0x0001180080941518  RSL
L2C_COP0_MAP676                0x0001180080941520  RSL
L2C_COP0_MAP677                0x0001180080941528  RSL
L2C_COP0_MAP678                0x0001180080941530  RSL
L2C_COP0_MAP679                0x0001180080941538  RSL
L2C_COP0_MAP680                0x0001180080941540  RSL
L2C_COP0_MAP681                0x0001180080941548  RSL
L2C_COP0_MAP682                0x0001180080941550  RSL
L2C_COP0_MAP683                0x0001180080941558  RSL
L2C_COP0_MAP684                0x0001180080941560  RSL
L2C_COP0_MAP685                0x0001180080941568  RSL
L2C_COP0_MAP686                0x0001180080941570  RSL
L2C_COP0_MAP687                0x0001180080941578  RSL
L2C_COP0_MAP688                0x0001180080941580  RSL
L2C_COP0_MAP689                0x0001180080941588  RSL
L2C_COP0_MAP690                0x0001180080941590  RSL
L2C_COP0_MAP691                0x0001180080941598  RSL
L2C_COP0_MAP692                0x00011800809415A0  RSL
L2C_COP0_MAP693                0x00011800809415A8  RSL
L2C_COP0_MAP694                0x00011800809415B0  RSL
L2C_COP0_MAP695                0x00011800809415B8  RSL
L2C_COP0_MAP696                0x00011800809415C0  RSL
L2C_COP0_MAP697                0x00011800809415C8  RSL
L2C_COP0_MAP698                0x00011800809415D0  RSL
L2C_COP0_MAP699                0x00011800809415D8  RSL
L2C_COP0_MAP700                0x00011800809415E0  RSL
L2C_COP0_MAP701                0x00011800809415E8  RSL
L2C_COP0_MAP702                0x00011800809415F0  RSL
L2C_COP0_MAP703                0x00011800809415F8  RSL
L2C_COP0_MAP704                0x0001180080941600  RSL
L2C_COP0_MAP705                0x0001180080941608  RSL
L2C_COP0_MAP706                0x0001180080941610  RSL
L2C_COP0_MAP707                0x0001180080941618  RSL
L2C_COP0_MAP708                0x0001180080941620  RSL
L2C_COP0_MAP709                0x0001180080941628  RSL
L2C_COP0_MAP710                0x0001180080941630  RSL
L2C_COP0_MAP711                0x0001180080941638  RSL
L2C_COP0_MAP712                0x0001180080941640  RSL
L2C_COP0_MAP713                0x0001180080941648  RSL
L2C_COP0_MAP714                0x0001180080941650  RSL
L2C_COP0_MAP715                0x0001180080941658  RSL
L2C_COP0_MAP716                0x0001180080941660  RSL
L2C_COP0_MAP717                0x0001180080941668  RSL
L2C_COP0_MAP718                0x0001180080941670  RSL
L2C_COP0_MAP719                0x0001180080941678  RSL
L2C_COP0_MAP720                0x0001180080941680  RSL
L2C_COP0_MAP721                0x0001180080941688  RSL
L2C_COP0_MAP722                0x0001180080941690  RSL
L2C_COP0_MAP723                0x0001180080941698  RSL
L2C_COP0_MAP724                0x00011800809416A0  RSL
L2C_COP0_MAP725                0x00011800809416A8  RSL
L2C_COP0_MAP726                0x00011800809416B0  RSL
L2C_COP0_MAP727                0x00011800809416B8  RSL
L2C_COP0_MAP728                0x00011800809416C0  RSL
L2C_COP0_MAP729                0x00011800809416C8  RSL
L2C_COP0_MAP730                0x00011800809416D0  RSL
L2C_COP0_MAP731                0x00011800809416D8  RSL
L2C_COP0_MAP732                0x00011800809416E0  RSL
L2C_COP0_MAP733                0x00011800809416E8  RSL
L2C_COP0_MAP734                0x00011800809416F0  RSL
L2C_COP0_MAP735                0x00011800809416F8  RSL
L2C_COP0_MAP736                0x0001180080941700  RSL
L2C_COP0_MAP737                0x0001180080941708  RSL
L2C_COP0_MAP738                0x0001180080941710  RSL
L2C_COP0_MAP739                0x0001180080941718  RSL
L2C_COP0_MAP740                0x0001180080941720  RSL
L2C_COP0_MAP741                0x0001180080941728  RSL
L2C_COP0_MAP742                0x0001180080941730  RSL
L2C_COP0_MAP743                0x0001180080941738  RSL
L2C_COP0_MAP744                0x0001180080941740  RSL
L2C_COP0_MAP745                0x0001180080941748  RSL
L2C_COP0_MAP746                0x0001180080941750  RSL
L2C_COP0_MAP747                0x0001180080941758  RSL
L2C_COP0_MAP748                0x0001180080941760  RSL
L2C_COP0_MAP749                0x0001180080941768  RSL
L2C_COP0_MAP750                0x0001180080941770  RSL
L2C_COP0_MAP751                0x0001180080941778  RSL
L2C_COP0_MAP752                0x0001180080941780  RSL
L2C_COP0_MAP753                0x0001180080941788  RSL
L2C_COP0_MAP754                0x0001180080941790  RSL
L2C_COP0_MAP755                0x0001180080941798  RSL
L2C_COP0_MAP756                0x00011800809417A0  RSL
L2C_COP0_MAP757                0x00011800809417A8  RSL
L2C_COP0_MAP758                0x00011800809417B0  RSL
L2C_COP0_MAP759                0x00011800809417B8  RSL
L2C_COP0_MAP760                0x00011800809417C0  RSL
L2C_COP0_MAP761                0x00011800809417C8  RSL
L2C_COP0_MAP762                0x00011800809417D0  RSL
L2C_COP0_MAP763                0x00011800809417D8  RSL
L2C_COP0_MAP764                0x00011800809417E0  RSL
L2C_COP0_MAP765                0x00011800809417E8  RSL
L2C_COP0_MAP766                0x00011800809417F0  RSL
L2C_COP0_MAP767                0x00011800809417F8  RSL
L2C_COP0_MAP768                0x0001180080941800  RSL
L2C_COP0_MAP769                0x0001180080941808  RSL
L2C_COP0_MAP770                0x0001180080941810  RSL
L2C_COP0_MAP771                0x0001180080941818  RSL
L2C_COP0_MAP772                0x0001180080941820  RSL
L2C_COP0_MAP773                0x0001180080941828  RSL
L2C_COP0_MAP774                0x0001180080941830  RSL
L2C_COP0_MAP775                0x0001180080941838  RSL
L2C_COP0_MAP776                0x0001180080941840  RSL
L2C_COP0_MAP777                0x0001180080941848  RSL
L2C_COP0_MAP778                0x0001180080941850  RSL
L2C_COP0_MAP779                0x0001180080941858  RSL
L2C_COP0_MAP780                0x0001180080941860  RSL
L2C_COP0_MAP781                0x0001180080941868  RSL
L2C_COP0_MAP782                0x0001180080941870  RSL
L2C_COP0_MAP783                0x0001180080941878  RSL
L2C_COP0_MAP784                0x0001180080941880  RSL
L2C_COP0_MAP785                0x0001180080941888  RSL
L2C_COP0_MAP786                0x0001180080941890  RSL
L2C_COP0_MAP787                0x0001180080941898  RSL
L2C_COP0_MAP788                0x00011800809418A0  RSL
L2C_COP0_MAP789                0x00011800809418A8  RSL
L2C_COP0_MAP790                0x00011800809418B0  RSL
L2C_COP0_MAP791                0x00011800809418B8  RSL
L2C_COP0_MAP792                0x00011800809418C0  RSL
L2C_COP0_MAP793                0x00011800809418C8  RSL
L2C_COP0_MAP794                0x00011800809418D0  RSL
L2C_COP0_MAP795                0x00011800809418D8  RSL
L2C_COP0_MAP796                0x00011800809418E0  RSL
L2C_COP0_MAP797                0x00011800809418E8  RSL
L2C_COP0_MAP798                0x00011800809418F0  RSL
L2C_COP0_MAP799                0x00011800809418F8  RSL
L2C_COP0_MAP800                0x0001180080941900  RSL
L2C_COP0_MAP801                0x0001180080941908  RSL
L2C_COP0_MAP802                0x0001180080941910  RSL
L2C_COP0_MAP803                0x0001180080941918  RSL
L2C_COP0_MAP804                0x0001180080941920  RSL
L2C_COP0_MAP805                0x0001180080941928  RSL
L2C_COP0_MAP806                0x0001180080941930  RSL
L2C_COP0_MAP807                0x0001180080941938  RSL
L2C_COP0_MAP808                0x0001180080941940  RSL
L2C_COP0_MAP809                0x0001180080941948  RSL
L2C_COP0_MAP810                0x0001180080941950  RSL
L2C_COP0_MAP811                0x0001180080941958  RSL
L2C_COP0_MAP812                0x0001180080941960  RSL
L2C_COP0_MAP813                0x0001180080941968  RSL
L2C_COP0_MAP814                0x0001180080941970  RSL
L2C_COP0_MAP815                0x0001180080941978  RSL
L2C_COP0_MAP816                0x0001180080941980  RSL
L2C_COP0_MAP817                0x0001180080941988  RSL
L2C_COP0_MAP818                0x0001180080941990  RSL
L2C_COP0_MAP819                0x0001180080941998  RSL
L2C_COP0_MAP820                0x00011800809419A0  RSL
L2C_COP0_MAP821                0x00011800809419A8  RSL
L2C_COP0_MAP822                0x00011800809419B0  RSL
L2C_COP0_MAP823                0x00011800809419B8  RSL
L2C_COP0_MAP824                0x00011800809419C0  RSL
L2C_COP0_MAP825                0x00011800809419C8  RSL
L2C_COP0_MAP826                0x00011800809419D0  RSL
L2C_COP0_MAP827                0x00011800809419D8  RSL
L2C_COP0_MAP828                0x00011800809419E0  RSL
L2C_COP0_MAP829                0x00011800809419E8  RSL
L2C_COP0_MAP830                0x00011800809419F0  RSL
L2C_COP0_MAP831                0x00011800809419F8  RSL
L2C_COP0_MAP832                0x0001180080941A00  RSL
L2C_COP0_MAP833                0x0001180080941A08  RSL
L2C_COP0_MAP834                0x0001180080941A10  RSL
L2C_COP0_MAP835                0x0001180080941A18  RSL
L2C_COP0_MAP836                0x0001180080941A20  RSL
L2C_COP0_MAP837                0x0001180080941A28  RSL
L2C_COP0_MAP838                0x0001180080941A30  RSL
L2C_COP0_MAP839                0x0001180080941A38  RSL
L2C_COP0_MAP840                0x0001180080941A40  RSL
L2C_COP0_MAP841                0x0001180080941A48  RSL
L2C_COP0_MAP842                0x0001180080941A50  RSL
L2C_COP0_MAP843                0x0001180080941A58  RSL
L2C_COP0_MAP844                0x0001180080941A60  RSL
L2C_COP0_MAP845                0x0001180080941A68  RSL
L2C_COP0_MAP846                0x0001180080941A70  RSL
L2C_COP0_MAP847                0x0001180080941A78  RSL
L2C_COP0_MAP848                0x0001180080941A80  RSL
L2C_COP0_MAP849                0x0001180080941A88  RSL
L2C_COP0_MAP850                0x0001180080941A90  RSL
L2C_COP0_MAP851                0x0001180080941A98  RSL
L2C_COP0_MAP852                0x0001180080941AA0  RSL
L2C_COP0_MAP853                0x0001180080941AA8  RSL
L2C_COP0_MAP854                0x0001180080941AB0  RSL
L2C_COP0_MAP855                0x0001180080941AB8  RSL
L2C_COP0_MAP856                0x0001180080941AC0  RSL
L2C_COP0_MAP857                0x0001180080941AC8  RSL
L2C_COP0_MAP858                0x0001180080941AD0  RSL
L2C_COP0_MAP859                0x0001180080941AD8  RSL
L2C_COP0_MAP860                0x0001180080941AE0  RSL
L2C_COP0_MAP861                0x0001180080941AE8  RSL
L2C_COP0_MAP862                0x0001180080941AF0  RSL
L2C_COP0_MAP863                0x0001180080941AF8  RSL
L2C_COP0_MAP864                0x0001180080941B00  RSL
L2C_COP0_MAP865                0x0001180080941B08  RSL
L2C_COP0_MAP866                0x0001180080941B10  RSL
L2C_COP0_MAP867                0x0001180080941B18  RSL
L2C_COP0_MAP868                0x0001180080941B20  RSL
L2C_COP0_MAP869                0x0001180080941B28  RSL
L2C_COP0_MAP870                0x0001180080941B30  RSL
L2C_COP0_MAP871                0x0001180080941B38  RSL
L2C_COP0_MAP872                0x0001180080941B40  RSL
L2C_COP0_MAP873                0x0001180080941B48  RSL
L2C_COP0_MAP874                0x0001180080941B50  RSL
L2C_COP0_MAP875                0x0001180080941B58  RSL
L2C_COP0_MAP876                0x0001180080941B60  RSL
L2C_COP0_MAP877                0x0001180080941B68  RSL
L2C_COP0_MAP878                0x0001180080941B70  RSL
L2C_COP0_MAP879                0x0001180080941B78  RSL
L2C_COP0_MAP880                0x0001180080941B80  RSL
L2C_COP0_MAP881                0x0001180080941B88  RSL
L2C_COP0_MAP882                0x0001180080941B90  RSL
L2C_COP0_MAP883                0x0001180080941B98  RSL
L2C_COP0_MAP884                0x0001180080941BA0  RSL
L2C_COP0_MAP885                0x0001180080941BA8  RSL
L2C_COP0_MAP886                0x0001180080941BB0  RSL
L2C_COP0_MAP887                0x0001180080941BB8  RSL
L2C_COP0_MAP888                0x0001180080941BC0  RSL
L2C_COP0_MAP889                0x0001180080941BC8  RSL
L2C_COP0_MAP890                0x0001180080941BD0  RSL
L2C_COP0_MAP891                0x0001180080941BD8  RSL
L2C_COP0_MAP892                0x0001180080941BE0  RSL
L2C_COP0_MAP893                0x0001180080941BE8  RSL
L2C_COP0_MAP894                0x0001180080941BF0  RSL
L2C_COP0_MAP895                0x0001180080941BF8  RSL
L2C_COP0_MAP896                0x0001180080941C00  RSL
L2C_COP0_MAP897                0x0001180080941C08  RSL
L2C_COP0_MAP898                0x0001180080941C10  RSL
L2C_COP0_MAP899                0x0001180080941C18  RSL
L2C_COP0_MAP900                0x0001180080941C20  RSL
L2C_COP0_MAP901                0x0001180080941C28  RSL
L2C_COP0_MAP902                0x0001180080941C30  RSL
L2C_COP0_MAP903                0x0001180080941C38  RSL
L2C_COP0_MAP904                0x0001180080941C40  RSL
L2C_COP0_MAP905                0x0001180080941C48  RSL
L2C_COP0_MAP906                0x0001180080941C50  RSL
L2C_COP0_MAP907                0x0001180080941C58  RSL
L2C_COP0_MAP908                0x0001180080941C60  RSL
L2C_COP0_MAP909                0x0001180080941C68  RSL
L2C_COP0_MAP910                0x0001180080941C70  RSL
L2C_COP0_MAP911                0x0001180080941C78  RSL
L2C_COP0_MAP912                0x0001180080941C80  RSL
L2C_COP0_MAP913                0x0001180080941C88  RSL
L2C_COP0_MAP914                0x0001180080941C90  RSL
L2C_COP0_MAP915                0x0001180080941C98  RSL
L2C_COP0_MAP916                0x0001180080941CA0  RSL
L2C_COP0_MAP917                0x0001180080941CA8  RSL
L2C_COP0_MAP918                0x0001180080941CB0  RSL
L2C_COP0_MAP919                0x0001180080941CB8  RSL
L2C_COP0_MAP920                0x0001180080941CC0  RSL
L2C_COP0_MAP921                0x0001180080941CC8  RSL
L2C_COP0_MAP922                0x0001180080941CD0  RSL
L2C_COP0_MAP923                0x0001180080941CD8  RSL
L2C_COP0_MAP924                0x0001180080941CE0  RSL
L2C_COP0_MAP925                0x0001180080941CE8  RSL
L2C_COP0_MAP926                0x0001180080941CF0  RSL
L2C_COP0_MAP927                0x0001180080941CF8  RSL
L2C_COP0_MAP928                0x0001180080941D00  RSL
L2C_COP0_MAP929                0x0001180080941D08  RSL
L2C_COP0_MAP930                0x0001180080941D10  RSL
L2C_COP0_MAP931                0x0001180080941D18  RSL
L2C_COP0_MAP932                0x0001180080941D20  RSL
L2C_COP0_MAP933                0x0001180080941D28  RSL
L2C_COP0_MAP934                0x0001180080941D30  RSL
L2C_COP0_MAP935                0x0001180080941D38  RSL
L2C_COP0_MAP936                0x0001180080941D40  RSL
L2C_COP0_MAP937                0x0001180080941D48  RSL
L2C_COP0_MAP938                0x0001180080941D50  RSL
L2C_COP0_MAP939                0x0001180080941D58  RSL
L2C_COP0_MAP940                0x0001180080941D60  RSL
L2C_COP0_MAP941                0x0001180080941D68  RSL
L2C_COP0_MAP942                0x0001180080941D70  RSL
L2C_COP0_MAP943                0x0001180080941D78  RSL
L2C_COP0_MAP944                0x0001180080941D80  RSL
L2C_COP0_MAP945                0x0001180080941D88  RSL
L2C_COP0_MAP946                0x0001180080941D90  RSL
L2C_COP0_MAP947                0x0001180080941D98  RSL
L2C_COP0_MAP948                0x0001180080941DA0  RSL
L2C_COP0_MAP949                0x0001180080941DA8  RSL
L2C_COP0_MAP950                0x0001180080941DB0  RSL
L2C_COP0_MAP951                0x0001180080941DB8  RSL
L2C_COP0_MAP952                0x0001180080941DC0  RSL
L2C_COP0_MAP953                0x0001180080941DC8  RSL
L2C_COP0_MAP954                0x0001180080941DD0  RSL
L2C_COP0_MAP955                0x0001180080941DD8  RSL
L2C_COP0_MAP956                0x0001180080941DE0  RSL
L2C_COP0_MAP957                0x0001180080941DE8  RSL
L2C_COP0_MAP958                0x0001180080941DF0  RSL
L2C_COP0_MAP959                0x0001180080941DF8  RSL
L2C_COP0_MAP960                0x0001180080941E00  RSL
L2C_COP0_MAP961                0x0001180080941E08  RSL
L2C_COP0_MAP962                0x0001180080941E10  RSL
L2C_COP0_MAP963                0x0001180080941E18  RSL
L2C_COP0_MAP964                0x0001180080941E20  RSL
L2C_COP0_MAP965                0x0001180080941E28  RSL
L2C_COP0_MAP966                0x0001180080941E30  RSL
L2C_COP0_MAP967                0x0001180080941E38  RSL
L2C_COP0_MAP968                0x0001180080941E40  RSL
L2C_COP0_MAP969                0x0001180080941E48  RSL
L2C_COP0_MAP970                0x0001180080941E50  RSL
L2C_COP0_MAP971                0x0001180080941E58  RSL
L2C_COP0_MAP972                0x0001180080941E60  RSL
L2C_COP0_MAP973                0x0001180080941E68  RSL
L2C_COP0_MAP974                0x0001180080941E70  RSL
L2C_COP0_MAP975                0x0001180080941E78  RSL
L2C_COP0_MAP976                0x0001180080941E80  RSL
L2C_COP0_MAP977                0x0001180080941E88  RSL
L2C_COP0_MAP978                0x0001180080941E90  RSL
L2C_COP0_MAP979                0x0001180080941E98  RSL
L2C_COP0_MAP980                0x0001180080941EA0  RSL
L2C_COP0_MAP981                0x0001180080941EA8  RSL
L2C_COP0_MAP982                0x0001180080941EB0  RSL
L2C_COP0_MAP983                0x0001180080941EB8  RSL
L2C_COP0_MAP984                0x0001180080941EC0  RSL
L2C_COP0_MAP985                0x0001180080941EC8  RSL
L2C_COP0_MAP986                0x0001180080941ED0  RSL
L2C_COP0_MAP987                0x0001180080941ED8  RSL
L2C_COP0_MAP988                0x0001180080941EE0  RSL
L2C_COP0_MAP989                0x0001180080941EE8  RSL
L2C_COP0_MAP990                0x0001180080941EF0  RSL
L2C_COP0_MAP991                0x0001180080941EF8  RSL
L2C_COP0_MAP992                0x0001180080941F00  RSL
L2C_COP0_MAP993                0x0001180080941F08  RSL
L2C_COP0_MAP994                0x0001180080941F10  RSL
L2C_COP0_MAP995                0x0001180080941F18  RSL
L2C_COP0_MAP996                0x0001180080941F20  RSL
L2C_COP0_MAP997                0x0001180080941F28  RSL
L2C_COP0_MAP998                0x0001180080941F30  RSL
L2C_COP0_MAP999                0x0001180080941F38  RSL
L2C_COP0_MAP1000               0x0001180080941F40  RSL
L2C_COP0_MAP1001               0x0001180080941F48  RSL
L2C_COP0_MAP1002               0x0001180080941F50  RSL
L2C_COP0_MAP1003               0x0001180080941F58  RSL
L2C_COP0_MAP1004               0x0001180080941F60  RSL
L2C_COP0_MAP1005               0x0001180080941F68  RSL
L2C_COP0_MAP1006               0x0001180080941F70  RSL
L2C_COP0_MAP1007               0x0001180080941F78  RSL
L2C_COP0_MAP1008               0x0001180080941F80  RSL
L2C_COP0_MAP1009               0x0001180080941F88  RSL
L2C_COP0_MAP1010               0x0001180080941F90  RSL
L2C_COP0_MAP1011               0x0001180080941F98  RSL
L2C_COP0_MAP1012               0x0001180080941FA0  RSL
L2C_COP0_MAP1013               0x0001180080941FA8  RSL
L2C_COP0_MAP1014               0x0001180080941FB0  RSL
L2C_COP0_MAP1015               0x0001180080941FB8  RSL
L2C_COP0_MAP1016               0x0001180080941FC0  RSL
L2C_COP0_MAP1017               0x0001180080941FC8  RSL
L2C_COP0_MAP1018               0x0001180080941FD0  RSL
L2C_COP0_MAP1019               0x0001180080941FD8  RSL
L2C_COP0_MAP1020               0x0001180080941FE0  RSL
L2C_COP0_MAP1021               0x0001180080941FE8  RSL
L2C_COP0_MAP1022               0x0001180080941FF0  RSL
L2C_COP0_MAP1023               0x0001180080941FF8  RSL
L2C_COP0_MAP1024               0x0001180080942000  RSL
L2C_COP0_MAP1025               0x0001180080942008  RSL
L2C_COP0_MAP1026               0x0001180080942010  RSL
L2C_COP0_MAP1027               0x0001180080942018  RSL
L2C_COP0_MAP1028               0x0001180080942020  RSL
L2C_COP0_MAP1029               0x0001180080942028  RSL
L2C_COP0_MAP1030               0x0001180080942030  RSL
L2C_COP0_MAP1031               0x0001180080942038  RSL
L2C_COP0_MAP1032               0x0001180080942040  RSL
L2C_COP0_MAP1033               0x0001180080942048  RSL
L2C_COP0_MAP1034               0x0001180080942050  RSL
L2C_COP0_MAP1035               0x0001180080942058  RSL
L2C_COP0_MAP1036               0x0001180080942060  RSL
L2C_COP0_MAP1037               0x0001180080942068  RSL
L2C_COP0_MAP1038               0x0001180080942070  RSL
L2C_COP0_MAP1039               0x0001180080942078  RSL
L2C_COP0_MAP1040               0x0001180080942080  RSL
L2C_COP0_MAP1041               0x0001180080942088  RSL
L2C_COP0_MAP1042               0x0001180080942090  RSL
L2C_COP0_MAP1043               0x0001180080942098  RSL
L2C_COP0_MAP1044               0x00011800809420A0  RSL
L2C_COP0_MAP1045               0x00011800809420A8  RSL
L2C_COP0_MAP1046               0x00011800809420B0  RSL
L2C_COP0_MAP1047               0x00011800809420B8  RSL
L2C_COP0_MAP1048               0x00011800809420C0  RSL
L2C_COP0_MAP1049               0x00011800809420C8  RSL
L2C_COP0_MAP1050               0x00011800809420D0  RSL
L2C_COP0_MAP1051               0x00011800809420D8  RSL
L2C_COP0_MAP1052               0x00011800809420E0  RSL
L2C_COP0_MAP1053               0x00011800809420E8  RSL
L2C_COP0_MAP1054               0x00011800809420F0  RSL
L2C_COP0_MAP1055               0x00011800809420F8  RSL
L2C_COP0_MAP1056               0x0001180080942100  RSL
L2C_COP0_MAP1057               0x0001180080942108  RSL
L2C_COP0_MAP1058               0x0001180080942110  RSL
L2C_COP0_MAP1059               0x0001180080942118  RSL
L2C_COP0_MAP1060               0x0001180080942120  RSL
L2C_COP0_MAP1061               0x0001180080942128  RSL
L2C_COP0_MAP1062               0x0001180080942130  RSL
L2C_COP0_MAP1063               0x0001180080942138  RSL
L2C_COP0_MAP1064               0x0001180080942140  RSL
L2C_COP0_MAP1065               0x0001180080942148  RSL
L2C_COP0_MAP1066               0x0001180080942150  RSL
L2C_COP0_MAP1067               0x0001180080942158  RSL
L2C_COP0_MAP1068               0x0001180080942160  RSL
L2C_COP0_MAP1069               0x0001180080942168  RSL
L2C_COP0_MAP1070               0x0001180080942170  RSL
L2C_COP0_MAP1071               0x0001180080942178  RSL
L2C_COP0_MAP1072               0x0001180080942180  RSL
L2C_COP0_MAP1073               0x0001180080942188  RSL
L2C_COP0_MAP1074               0x0001180080942190  RSL
L2C_COP0_MAP1075               0x0001180080942198  RSL
L2C_COP0_MAP1076               0x00011800809421A0  RSL
L2C_COP0_MAP1077               0x00011800809421A8  RSL
L2C_COP0_MAP1078               0x00011800809421B0  RSL
L2C_COP0_MAP1079               0x00011800809421B8  RSL
L2C_COP0_MAP1080               0x00011800809421C0  RSL
L2C_COP0_MAP1081               0x00011800809421C8  RSL
L2C_COP0_MAP1082               0x00011800809421D0  RSL
L2C_COP0_MAP1083               0x00011800809421D8  RSL
L2C_COP0_MAP1084               0x00011800809421E0  RSL
L2C_COP0_MAP1085               0x00011800809421E8  RSL
L2C_COP0_MAP1086               0x00011800809421F0  RSL
L2C_COP0_MAP1087               0x00011800809421F8  RSL
L2C_COP0_MAP1088               0x0001180080942200  RSL
L2C_COP0_MAP1089               0x0001180080942208  RSL
L2C_COP0_MAP1090               0x0001180080942210  RSL
L2C_COP0_MAP1091               0x0001180080942218  RSL
L2C_COP0_MAP1092               0x0001180080942220  RSL
L2C_COP0_MAP1093               0x0001180080942228  RSL
L2C_COP0_MAP1094               0x0001180080942230  RSL
L2C_COP0_MAP1095               0x0001180080942238  RSL
L2C_COP0_MAP1096               0x0001180080942240  RSL
L2C_COP0_MAP1097               0x0001180080942248  RSL
L2C_COP0_MAP1098               0x0001180080942250  RSL
L2C_COP0_MAP1099               0x0001180080942258  RSL
L2C_COP0_MAP1100               0x0001180080942260  RSL
L2C_COP0_MAP1101               0x0001180080942268  RSL
L2C_COP0_MAP1102               0x0001180080942270  RSL
L2C_COP0_MAP1103               0x0001180080942278  RSL
L2C_COP0_MAP1104               0x0001180080942280  RSL
L2C_COP0_MAP1105               0x0001180080942288  RSL
L2C_COP0_MAP1106               0x0001180080942290  RSL
L2C_COP0_MAP1107               0x0001180080942298  RSL
L2C_COP0_MAP1108               0x00011800809422A0  RSL
L2C_COP0_MAP1109               0x00011800809422A8  RSL
L2C_COP0_MAP1110               0x00011800809422B0  RSL
L2C_COP0_MAP1111               0x00011800809422B8  RSL
L2C_COP0_MAP1112               0x00011800809422C0  RSL
L2C_COP0_MAP1113               0x00011800809422C8  RSL
L2C_COP0_MAP1114               0x00011800809422D0  RSL
L2C_COP0_MAP1115               0x00011800809422D8  RSL
L2C_COP0_MAP1116               0x00011800809422E0  RSL
L2C_COP0_MAP1117               0x00011800809422E8  RSL
L2C_COP0_MAP1118               0x00011800809422F0  RSL
L2C_COP0_MAP1119               0x00011800809422F8  RSL
L2C_COP0_MAP1120               0x0001180080942300  RSL
L2C_COP0_MAP1121               0x0001180080942308  RSL
L2C_COP0_MAP1122               0x0001180080942310  RSL
L2C_COP0_MAP1123               0x0001180080942318  RSL
L2C_COP0_MAP1124               0x0001180080942320  RSL
L2C_COP0_MAP1125               0x0001180080942328  RSL
L2C_COP0_MAP1126               0x0001180080942330  RSL
L2C_COP0_MAP1127               0x0001180080942338  RSL
L2C_COP0_MAP1128               0x0001180080942340  RSL
L2C_COP0_MAP1129               0x0001180080942348  RSL
L2C_COP0_MAP1130               0x0001180080942350  RSL
L2C_COP0_MAP1131               0x0001180080942358  RSL
L2C_COP0_MAP1132               0x0001180080942360  RSL
L2C_COP0_MAP1133               0x0001180080942368  RSL
L2C_COP0_MAP1134               0x0001180080942370  RSL
L2C_COP0_MAP1135               0x0001180080942378  RSL
L2C_COP0_MAP1136               0x0001180080942380  RSL
L2C_COP0_MAP1137               0x0001180080942388  RSL
L2C_COP0_MAP1138               0x0001180080942390  RSL
L2C_COP0_MAP1139               0x0001180080942398  RSL
L2C_COP0_MAP1140               0x00011800809423A0  RSL
L2C_COP0_MAP1141               0x00011800809423A8  RSL
L2C_COP0_MAP1142               0x00011800809423B0  RSL
L2C_COP0_MAP1143               0x00011800809423B8  RSL
L2C_COP0_MAP1144               0x00011800809423C0  RSL
L2C_COP0_MAP1145               0x00011800809423C8  RSL
L2C_COP0_MAP1146               0x00011800809423D0  RSL
L2C_COP0_MAP1147               0x00011800809423D8  RSL
L2C_COP0_MAP1148               0x00011800809423E0  RSL
L2C_COP0_MAP1149               0x00011800809423E8  RSL
L2C_COP0_MAP1150               0x00011800809423F0  RSL
L2C_COP0_MAP1151               0x00011800809423F8  RSL
L2C_COP0_MAP1152               0x0001180080942400  RSL
L2C_COP0_MAP1153               0x0001180080942408  RSL
L2C_COP0_MAP1154               0x0001180080942410  RSL
L2C_COP0_MAP1155               0x0001180080942418  RSL
L2C_COP0_MAP1156               0x0001180080942420  RSL
L2C_COP0_MAP1157               0x0001180080942428  RSL
L2C_COP0_MAP1158               0x0001180080942430  RSL
L2C_COP0_MAP1159               0x0001180080942438  RSL
L2C_COP0_MAP1160               0x0001180080942440  RSL
L2C_COP0_MAP1161               0x0001180080942448  RSL
L2C_COP0_MAP1162               0x0001180080942450  RSL
L2C_COP0_MAP1163               0x0001180080942458  RSL
L2C_COP0_MAP1164               0x0001180080942460  RSL
L2C_COP0_MAP1165               0x0001180080942468  RSL
L2C_COP0_MAP1166               0x0001180080942470  RSL
L2C_COP0_MAP1167               0x0001180080942478  RSL
L2C_COP0_MAP1168               0x0001180080942480  RSL
L2C_COP0_MAP1169               0x0001180080942488  RSL
L2C_COP0_MAP1170               0x0001180080942490  RSL
L2C_COP0_MAP1171               0x0001180080942498  RSL
L2C_COP0_MAP1172               0x00011800809424A0  RSL
L2C_COP0_MAP1173               0x00011800809424A8  RSL
L2C_COP0_MAP1174               0x00011800809424B0  RSL
L2C_COP0_MAP1175               0x00011800809424B8  RSL
L2C_COP0_MAP1176               0x00011800809424C0  RSL
L2C_COP0_MAP1177               0x00011800809424C8  RSL
L2C_COP0_MAP1178               0x00011800809424D0  RSL
L2C_COP0_MAP1179               0x00011800809424D8  RSL
L2C_COP0_MAP1180               0x00011800809424E0  RSL
L2C_COP0_MAP1181               0x00011800809424E8  RSL
L2C_COP0_MAP1182               0x00011800809424F0  RSL
L2C_COP0_MAP1183               0x00011800809424F8  RSL
L2C_COP0_MAP1184               0x0001180080942500  RSL
L2C_COP0_MAP1185               0x0001180080942508  RSL
L2C_COP0_MAP1186               0x0001180080942510  RSL
L2C_COP0_MAP1187               0x0001180080942518  RSL
L2C_COP0_MAP1188               0x0001180080942520  RSL
L2C_COP0_MAP1189               0x0001180080942528  RSL
L2C_COP0_MAP1190               0x0001180080942530  RSL
L2C_COP0_MAP1191               0x0001180080942538  RSL
L2C_COP0_MAP1192               0x0001180080942540  RSL
L2C_COP0_MAP1193               0x0001180080942548  RSL
L2C_COP0_MAP1194               0x0001180080942550  RSL
L2C_COP0_MAP1195               0x0001180080942558  RSL
L2C_COP0_MAP1196               0x0001180080942560  RSL
L2C_COP0_MAP1197               0x0001180080942568  RSL
L2C_COP0_MAP1198               0x0001180080942570  RSL
L2C_COP0_MAP1199               0x0001180080942578  RSL
L2C_COP0_MAP1200               0x0001180080942580  RSL
L2C_COP0_MAP1201               0x0001180080942588  RSL
L2C_COP0_MAP1202               0x0001180080942590  RSL
L2C_COP0_MAP1203               0x0001180080942598  RSL
L2C_COP0_MAP1204               0x00011800809425A0  RSL
L2C_COP0_MAP1205               0x00011800809425A8  RSL
L2C_COP0_MAP1206               0x00011800809425B0  RSL
L2C_COP0_MAP1207               0x00011800809425B8  RSL
L2C_COP0_MAP1208               0x00011800809425C0  RSL
L2C_COP0_MAP1209               0x00011800809425C8  RSL
L2C_COP0_MAP1210               0x00011800809425D0  RSL
L2C_COP0_MAP1211               0x00011800809425D8  RSL
L2C_COP0_MAP1212               0x00011800809425E0  RSL
L2C_COP0_MAP1213               0x00011800809425E8  RSL
L2C_COP0_MAP1214               0x00011800809425F0  RSL
L2C_COP0_MAP1215               0x00011800809425F8  RSL
L2C_COP0_MAP1216               0x0001180080942600  RSL
L2C_COP0_MAP1217               0x0001180080942608  RSL
L2C_COP0_MAP1218               0x0001180080942610  RSL
L2C_COP0_MAP1219               0x0001180080942618  RSL
L2C_COP0_MAP1220               0x0001180080942620  RSL
L2C_COP0_MAP1221               0x0001180080942628  RSL
L2C_COP0_MAP1222               0x0001180080942630  RSL
L2C_COP0_MAP1223               0x0001180080942638  RSL
L2C_COP0_MAP1224               0x0001180080942640  RSL
L2C_COP0_MAP1225               0x0001180080942648  RSL
L2C_COP0_MAP1226               0x0001180080942650  RSL
L2C_COP0_MAP1227               0x0001180080942658  RSL
L2C_COP0_MAP1228               0x0001180080942660  RSL
L2C_COP0_MAP1229               0x0001180080942668  RSL
L2C_COP0_MAP1230               0x0001180080942670  RSL
L2C_COP0_MAP1231               0x0001180080942678  RSL
L2C_COP0_MAP1232               0x0001180080942680  RSL
L2C_COP0_MAP1233               0x0001180080942688  RSL
L2C_COP0_MAP1234               0x0001180080942690  RSL
L2C_COP0_MAP1235               0x0001180080942698  RSL
L2C_COP0_MAP1236               0x00011800809426A0  RSL
L2C_COP0_MAP1237               0x00011800809426A8  RSL
L2C_COP0_MAP1238               0x00011800809426B0  RSL
L2C_COP0_MAP1239               0x00011800809426B8  RSL
L2C_COP0_MAP1240               0x00011800809426C0  RSL
L2C_COP0_MAP1241               0x00011800809426C8  RSL
L2C_COP0_MAP1242               0x00011800809426D0  RSL
L2C_COP0_MAP1243               0x00011800809426D8  RSL
L2C_COP0_MAP1244               0x00011800809426E0  RSL
L2C_COP0_MAP1245               0x00011800809426E8  RSL
L2C_COP0_MAP1246               0x00011800809426F0  RSL
L2C_COP0_MAP1247               0x00011800809426F8  RSL
L2C_COP0_MAP1248               0x0001180080942700  RSL
L2C_COP0_MAP1249               0x0001180080942708  RSL
L2C_COP0_MAP1250               0x0001180080942710  RSL
L2C_COP0_MAP1251               0x0001180080942718  RSL
L2C_COP0_MAP1252               0x0001180080942720  RSL
L2C_COP0_MAP1253               0x0001180080942728  RSL
L2C_COP0_MAP1254               0x0001180080942730  RSL
L2C_COP0_MAP1255               0x0001180080942738  RSL
L2C_COP0_MAP1256               0x0001180080942740  RSL
L2C_COP0_MAP1257               0x0001180080942748  RSL
L2C_COP0_MAP1258               0x0001180080942750  RSL
L2C_COP0_MAP1259               0x0001180080942758  RSL
L2C_COP0_MAP1260               0x0001180080942760  RSL
L2C_COP0_MAP1261               0x0001180080942768  RSL
L2C_COP0_MAP1262               0x0001180080942770  RSL
L2C_COP0_MAP1263               0x0001180080942778  RSL
L2C_COP0_MAP1264               0x0001180080942780  RSL
L2C_COP0_MAP1265               0x0001180080942788  RSL
L2C_COP0_MAP1266               0x0001180080942790  RSL
L2C_COP0_MAP1267               0x0001180080942798  RSL
L2C_COP0_MAP1268               0x00011800809427A0  RSL
L2C_COP0_MAP1269               0x00011800809427A8  RSL
L2C_COP0_MAP1270               0x00011800809427B0  RSL
L2C_COP0_MAP1271               0x00011800809427B8  RSL
L2C_COP0_MAP1272               0x00011800809427C0  RSL
L2C_COP0_MAP1273               0x00011800809427C8  RSL
L2C_COP0_MAP1274               0x00011800809427D0  RSL
L2C_COP0_MAP1275               0x00011800809427D8  RSL
L2C_COP0_MAP1276               0x00011800809427E0  RSL
L2C_COP0_MAP1277               0x00011800809427E8  RSL
L2C_COP0_MAP1278               0x00011800809427F0  RSL
L2C_COP0_MAP1279               0x00011800809427F8  RSL
L2C_COP0_MAP1280               0x0001180080942800  RSL
L2C_COP0_MAP1281               0x0001180080942808  RSL
L2C_COP0_MAP1282               0x0001180080942810  RSL
L2C_COP0_MAP1283               0x0001180080942818  RSL
L2C_COP0_MAP1284               0x0001180080942820  RSL
L2C_COP0_MAP1285               0x0001180080942828  RSL
L2C_COP0_MAP1286               0x0001180080942830  RSL
L2C_COP0_MAP1287               0x0001180080942838  RSL
L2C_COP0_MAP1288               0x0001180080942840  RSL
L2C_COP0_MAP1289               0x0001180080942848  RSL
L2C_COP0_MAP1290               0x0001180080942850  RSL
L2C_COP0_MAP1291               0x0001180080942858  RSL
L2C_COP0_MAP1292               0x0001180080942860  RSL
L2C_COP0_MAP1293               0x0001180080942868  RSL
L2C_COP0_MAP1294               0x0001180080942870  RSL
L2C_COP0_MAP1295               0x0001180080942878  RSL
L2C_COP0_MAP1296               0x0001180080942880  RSL
L2C_COP0_MAP1297               0x0001180080942888  RSL
L2C_COP0_MAP1298               0x0001180080942890  RSL
L2C_COP0_MAP1299               0x0001180080942898  RSL
L2C_COP0_MAP1300               0x00011800809428A0  RSL
L2C_COP0_MAP1301               0x00011800809428A8  RSL
L2C_COP0_MAP1302               0x00011800809428B0  RSL
L2C_COP0_MAP1303               0x00011800809428B8  RSL
L2C_COP0_MAP1304               0x00011800809428C0  RSL
L2C_COP0_MAP1305               0x00011800809428C8  RSL
L2C_COP0_MAP1306               0x00011800809428D0  RSL
L2C_COP0_MAP1307               0x00011800809428D8  RSL
L2C_COP0_MAP1308               0x00011800809428E0  RSL
L2C_COP0_MAP1309               0x00011800809428E8  RSL
L2C_COP0_MAP1310               0x00011800809428F0  RSL
L2C_COP0_MAP1311               0x00011800809428F8  RSL
L2C_COP0_MAP1312               0x0001180080942900  RSL
L2C_COP0_MAP1313               0x0001180080942908  RSL
L2C_COP0_MAP1314               0x0001180080942910  RSL
L2C_COP0_MAP1315               0x0001180080942918  RSL
L2C_COP0_MAP1316               0x0001180080942920  RSL
L2C_COP0_MAP1317               0x0001180080942928  RSL
L2C_COP0_MAP1318               0x0001180080942930  RSL
L2C_COP0_MAP1319               0x0001180080942938  RSL
L2C_COP0_MAP1320               0x0001180080942940  RSL
L2C_COP0_MAP1321               0x0001180080942948  RSL
L2C_COP0_MAP1322               0x0001180080942950  RSL
L2C_COP0_MAP1323               0x0001180080942958  RSL
L2C_COP0_MAP1324               0x0001180080942960  RSL
L2C_COP0_MAP1325               0x0001180080942968  RSL
L2C_COP0_MAP1326               0x0001180080942970  RSL
L2C_COP0_MAP1327               0x0001180080942978  RSL
L2C_COP0_MAP1328               0x0001180080942980  RSL
L2C_COP0_MAP1329               0x0001180080942988  RSL
L2C_COP0_MAP1330               0x0001180080942990  RSL
L2C_COP0_MAP1331               0x0001180080942998  RSL
L2C_COP0_MAP1332               0x00011800809429A0  RSL
L2C_COP0_MAP1333               0x00011800809429A8  RSL
L2C_COP0_MAP1334               0x00011800809429B0  RSL
L2C_COP0_MAP1335               0x00011800809429B8  RSL
L2C_COP0_MAP1336               0x00011800809429C0  RSL
L2C_COP0_MAP1337               0x00011800809429C8  RSL
L2C_COP0_MAP1338               0x00011800809429D0  RSL
L2C_COP0_MAP1339               0x00011800809429D8  RSL
L2C_COP0_MAP1340               0x00011800809429E0  RSL
L2C_COP0_MAP1341               0x00011800809429E8  RSL
L2C_COP0_MAP1342               0x00011800809429F0  RSL
L2C_COP0_MAP1343               0x00011800809429F8  RSL
L2C_COP0_MAP1344               0x0001180080942A00  RSL
L2C_COP0_MAP1345               0x0001180080942A08  RSL
L2C_COP0_MAP1346               0x0001180080942A10  RSL
L2C_COP0_MAP1347               0x0001180080942A18  RSL
L2C_COP0_MAP1348               0x0001180080942A20  RSL
L2C_COP0_MAP1349               0x0001180080942A28  RSL
L2C_COP0_MAP1350               0x0001180080942A30  RSL
L2C_COP0_MAP1351               0x0001180080942A38  RSL
L2C_COP0_MAP1352               0x0001180080942A40  RSL
L2C_COP0_MAP1353               0x0001180080942A48  RSL
L2C_COP0_MAP1354               0x0001180080942A50  RSL
L2C_COP0_MAP1355               0x0001180080942A58  RSL
L2C_COP0_MAP1356               0x0001180080942A60  RSL
L2C_COP0_MAP1357               0x0001180080942A68  RSL
L2C_COP0_MAP1358               0x0001180080942A70  RSL
L2C_COP0_MAP1359               0x0001180080942A78  RSL
L2C_COP0_MAP1360               0x0001180080942A80  RSL
L2C_COP0_MAP1361               0x0001180080942A88  RSL
L2C_COP0_MAP1362               0x0001180080942A90  RSL
L2C_COP0_MAP1363               0x0001180080942A98  RSL
L2C_COP0_MAP1364               0x0001180080942AA0  RSL
L2C_COP0_MAP1365               0x0001180080942AA8  RSL
L2C_COP0_MAP1366               0x0001180080942AB0  RSL
L2C_COP0_MAP1367               0x0001180080942AB8  RSL
L2C_COP0_MAP1368               0x0001180080942AC0  RSL
L2C_COP0_MAP1369               0x0001180080942AC8  RSL
L2C_COP0_MAP1370               0x0001180080942AD0  RSL
L2C_COP0_MAP1371               0x0001180080942AD8  RSL
L2C_COP0_MAP1372               0x0001180080942AE0  RSL
L2C_COP0_MAP1373               0x0001180080942AE8  RSL
L2C_COP0_MAP1374               0x0001180080942AF0  RSL
L2C_COP0_MAP1375               0x0001180080942AF8  RSL
L2C_COP0_MAP1376               0x0001180080942B00  RSL
L2C_COP0_MAP1377               0x0001180080942B08  RSL
L2C_COP0_MAP1378               0x0001180080942B10  RSL
L2C_COP0_MAP1379               0x0001180080942B18  RSL
L2C_COP0_MAP1380               0x0001180080942B20  RSL
L2C_COP0_MAP1381               0x0001180080942B28  RSL
L2C_COP0_MAP1382               0x0001180080942B30  RSL
L2C_COP0_MAP1383               0x0001180080942B38  RSL
L2C_COP0_MAP1384               0x0001180080942B40  RSL
L2C_COP0_MAP1385               0x0001180080942B48  RSL
L2C_COP0_MAP1386               0x0001180080942B50  RSL
L2C_COP0_MAP1387               0x0001180080942B58  RSL
L2C_COP0_MAP1388               0x0001180080942B60  RSL
L2C_COP0_MAP1389               0x0001180080942B68  RSL
L2C_COP0_MAP1390               0x0001180080942B70  RSL
L2C_COP0_MAP1391               0x0001180080942B78  RSL
L2C_COP0_MAP1392               0x0001180080942B80  RSL
L2C_COP0_MAP1393               0x0001180080942B88  RSL
L2C_COP0_MAP1394               0x0001180080942B90  RSL
L2C_COP0_MAP1395               0x0001180080942B98  RSL
L2C_COP0_MAP1396               0x0001180080942BA0  RSL
L2C_COP0_MAP1397               0x0001180080942BA8  RSL
L2C_COP0_MAP1398               0x0001180080942BB0  RSL
L2C_COP0_MAP1399               0x0001180080942BB8  RSL
L2C_COP0_MAP1400               0x0001180080942BC0  RSL
L2C_COP0_MAP1401               0x0001180080942BC8  RSL
L2C_COP0_MAP1402               0x0001180080942BD0  RSL
L2C_COP0_MAP1403               0x0001180080942BD8  RSL
L2C_COP0_MAP1404               0x0001180080942BE0  RSL
L2C_COP0_MAP1405               0x0001180080942BE8  RSL
L2C_COP0_MAP1406               0x0001180080942BF0  RSL
L2C_COP0_MAP1407               0x0001180080942BF8  RSL
L2C_COP0_MAP1408               0x0001180080942C00  RSL
L2C_COP0_MAP1409               0x0001180080942C08  RSL
L2C_COP0_MAP1410               0x0001180080942C10  RSL
L2C_COP0_MAP1411               0x0001180080942C18  RSL
L2C_COP0_MAP1412               0x0001180080942C20  RSL
L2C_COP0_MAP1413               0x0001180080942C28  RSL
L2C_COP0_MAP1414               0x0001180080942C30  RSL
L2C_COP0_MAP1415               0x0001180080942C38  RSL
L2C_COP0_MAP1416               0x0001180080942C40  RSL
L2C_COP0_MAP1417               0x0001180080942C48  RSL
L2C_COP0_MAP1418               0x0001180080942C50  RSL
L2C_COP0_MAP1419               0x0001180080942C58  RSL
L2C_COP0_MAP1420               0x0001180080942C60  RSL
L2C_COP0_MAP1421               0x0001180080942C68  RSL
L2C_COP0_MAP1422               0x0001180080942C70  RSL
L2C_COP0_MAP1423               0x0001180080942C78  RSL
L2C_COP0_MAP1424               0x0001180080942C80  RSL
L2C_COP0_MAP1425               0x0001180080942C88  RSL
L2C_COP0_MAP1426               0x0001180080942C90  RSL
L2C_COP0_MAP1427               0x0001180080942C98  RSL
L2C_COP0_MAP1428               0x0001180080942CA0  RSL
L2C_COP0_MAP1429               0x0001180080942CA8  RSL
L2C_COP0_MAP1430               0x0001180080942CB0  RSL
L2C_COP0_MAP1431               0x0001180080942CB8  RSL
L2C_COP0_MAP1432               0x0001180080942CC0  RSL
L2C_COP0_MAP1433               0x0001180080942CC8  RSL
L2C_COP0_MAP1434               0x0001180080942CD0  RSL
L2C_COP0_MAP1435               0x0001180080942CD8  RSL
L2C_COP0_MAP1436               0x0001180080942CE0  RSL
L2C_COP0_MAP1437               0x0001180080942CE8  RSL
L2C_COP0_MAP1438               0x0001180080942CF0  RSL
L2C_COP0_MAP1439               0x0001180080942CF8  RSL
L2C_COP0_MAP1440               0x0001180080942D00  RSL
L2C_COP0_MAP1441               0x0001180080942D08  RSL
L2C_COP0_MAP1442               0x0001180080942D10  RSL
L2C_COP0_MAP1443               0x0001180080942D18  RSL
L2C_COP0_MAP1444               0x0001180080942D20  RSL
L2C_COP0_MAP1445               0x0001180080942D28  RSL
L2C_COP0_MAP1446               0x0001180080942D30  RSL
L2C_COP0_MAP1447               0x0001180080942D38  RSL
L2C_COP0_MAP1448               0x0001180080942D40  RSL
L2C_COP0_MAP1449               0x0001180080942D48  RSL
L2C_COP0_MAP1450               0x0001180080942D50  RSL
L2C_COP0_MAP1451               0x0001180080942D58  RSL
L2C_COP0_MAP1452               0x0001180080942D60  RSL
L2C_COP0_MAP1453               0x0001180080942D68  RSL
L2C_COP0_MAP1454               0x0001180080942D70  RSL
L2C_COP0_MAP1455               0x0001180080942D78  RSL
L2C_COP0_MAP1456               0x0001180080942D80  RSL
L2C_COP0_MAP1457               0x0001180080942D88  RSL
L2C_COP0_MAP1458               0x0001180080942D90  RSL
L2C_COP0_MAP1459               0x0001180080942D98  RSL
L2C_COP0_MAP1460               0x0001180080942DA0  RSL
L2C_COP0_MAP1461               0x0001180080942DA8  RSL
L2C_COP0_MAP1462               0x0001180080942DB0  RSL
L2C_COP0_MAP1463               0x0001180080942DB8  RSL
L2C_COP0_MAP1464               0x0001180080942DC0  RSL
L2C_COP0_MAP1465               0x0001180080942DC8  RSL
L2C_COP0_MAP1466               0x0001180080942DD0  RSL
L2C_COP0_MAP1467               0x0001180080942DD8  RSL
L2C_COP0_MAP1468               0x0001180080942DE0  RSL
L2C_COP0_MAP1469               0x0001180080942DE8  RSL
L2C_COP0_MAP1470               0x0001180080942DF0  RSL
L2C_COP0_MAP1471               0x0001180080942DF8  RSL
L2C_COP0_MAP1472               0x0001180080942E00  RSL
L2C_COP0_MAP1473               0x0001180080942E08  RSL
L2C_COP0_MAP1474               0x0001180080942E10  RSL
L2C_COP0_MAP1475               0x0001180080942E18  RSL
L2C_COP0_MAP1476               0x0001180080942E20  RSL
L2C_COP0_MAP1477               0x0001180080942E28  RSL
L2C_COP0_MAP1478               0x0001180080942E30  RSL
L2C_COP0_MAP1479               0x0001180080942E38  RSL
L2C_COP0_MAP1480               0x0001180080942E40  RSL
L2C_COP0_MAP1481               0x0001180080942E48  RSL
L2C_COP0_MAP1482               0x0001180080942E50  RSL
L2C_COP0_MAP1483               0x0001180080942E58  RSL
L2C_COP0_MAP1484               0x0001180080942E60  RSL
L2C_COP0_MAP1485               0x0001180080942E68  RSL
L2C_COP0_MAP1486               0x0001180080942E70  RSL
L2C_COP0_MAP1487               0x0001180080942E78  RSL
L2C_COP0_MAP1488               0x0001180080942E80  RSL
L2C_COP0_MAP1489               0x0001180080942E88  RSL
L2C_COP0_MAP1490               0x0001180080942E90  RSL
L2C_COP0_MAP1491               0x0001180080942E98  RSL
L2C_COP0_MAP1492               0x0001180080942EA0  RSL
L2C_COP0_MAP1493               0x0001180080942EA8  RSL
L2C_COP0_MAP1494               0x0001180080942EB0  RSL
L2C_COP0_MAP1495               0x0001180080942EB8  RSL
L2C_COP0_MAP1496               0x0001180080942EC0  RSL
L2C_COP0_MAP1497               0x0001180080942EC8  RSL
L2C_COP0_MAP1498               0x0001180080942ED0  RSL
L2C_COP0_MAP1499               0x0001180080942ED8  RSL
L2C_COP0_MAP1500               0x0001180080942EE0  RSL
L2C_COP0_MAP1501               0x0001180080942EE8  RSL
L2C_COP0_MAP1502               0x0001180080942EF0  RSL
L2C_COP0_MAP1503               0x0001180080942EF8  RSL
L2C_COP0_MAP1504               0x0001180080942F00  RSL
L2C_COP0_MAP1505               0x0001180080942F08  RSL
L2C_COP0_MAP1506               0x0001180080942F10  RSL
L2C_COP0_MAP1507               0x0001180080942F18  RSL
L2C_COP0_MAP1508               0x0001180080942F20  RSL
L2C_COP0_MAP1509               0x0001180080942F28  RSL
L2C_COP0_MAP1510               0x0001180080942F30  RSL
L2C_COP0_MAP1511               0x0001180080942F38  RSL
L2C_COP0_MAP1512               0x0001180080942F40  RSL
L2C_COP0_MAP1513               0x0001180080942F48  RSL
L2C_COP0_MAP1514               0x0001180080942F50  RSL
L2C_COP0_MAP1515               0x0001180080942F58  RSL
L2C_COP0_MAP1516               0x0001180080942F60  RSL
L2C_COP0_MAP1517               0x0001180080942F68  RSL
L2C_COP0_MAP1518               0x0001180080942F70  RSL
L2C_COP0_MAP1519               0x0001180080942F78  RSL
L2C_COP0_MAP1520               0x0001180080942F80  RSL
L2C_COP0_MAP1521               0x0001180080942F88  RSL
L2C_COP0_MAP1522               0x0001180080942F90  RSL
L2C_COP0_MAP1523               0x0001180080942F98  RSL
L2C_COP0_MAP1524               0x0001180080942FA0  RSL
L2C_COP0_MAP1525               0x0001180080942FA8  RSL
L2C_COP0_MAP1526               0x0001180080942FB0  RSL
L2C_COP0_MAP1527               0x0001180080942FB8  RSL
L2C_COP0_MAP1528               0x0001180080942FC0  RSL
L2C_COP0_MAP1529               0x0001180080942FC8  RSL
L2C_COP0_MAP1530               0x0001180080942FD0  RSL
L2C_COP0_MAP1531               0x0001180080942FD8  RSL
L2C_COP0_MAP1532               0x0001180080942FE0  RSL
L2C_COP0_MAP1533               0x0001180080942FE8  RSL
L2C_COP0_MAP1534               0x0001180080942FF0  RSL
L2C_COP0_MAP1535               0x0001180080942FF8  RSL
L2C_COP0_MAP1536               0x0001180080943000  RSL
L2C_COP0_MAP1537               0x0001180080943008  RSL
L2C_COP0_MAP1538               0x0001180080943010  RSL
L2C_COP0_MAP1539               0x0001180080943018  RSL
L2C_COP0_MAP1540               0x0001180080943020  RSL
L2C_COP0_MAP1541               0x0001180080943028  RSL
L2C_COP0_MAP1542               0x0001180080943030  RSL
L2C_COP0_MAP1543               0x0001180080943038  RSL
L2C_COP0_MAP1544               0x0001180080943040  RSL
L2C_COP0_MAP1545               0x0001180080943048  RSL
L2C_COP0_MAP1546               0x0001180080943050  RSL
L2C_COP0_MAP1547               0x0001180080943058  RSL
L2C_COP0_MAP1548               0x0001180080943060  RSL
L2C_COP0_MAP1549               0x0001180080943068  RSL
L2C_COP0_MAP1550               0x0001180080943070  RSL
L2C_COP0_MAP1551               0x0001180080943078  RSL
L2C_COP0_MAP1552               0x0001180080943080  RSL
L2C_COP0_MAP1553               0x0001180080943088  RSL
L2C_COP0_MAP1554               0x0001180080943090  RSL
L2C_COP0_MAP1555               0x0001180080943098  RSL
L2C_COP0_MAP1556               0x00011800809430A0  RSL
L2C_COP0_MAP1557               0x00011800809430A8  RSL
L2C_COP0_MAP1558               0x00011800809430B0  RSL
L2C_COP0_MAP1559               0x00011800809430B8  RSL
L2C_COP0_MAP1560               0x00011800809430C0  RSL
L2C_COP0_MAP1561               0x00011800809430C8  RSL
L2C_COP0_MAP1562               0x00011800809430D0  RSL
L2C_COP0_MAP1563               0x00011800809430D8  RSL
L2C_COP0_MAP1564               0x00011800809430E0  RSL
L2C_COP0_MAP1565               0x00011800809430E8  RSL
L2C_COP0_MAP1566               0x00011800809430F0  RSL
L2C_COP0_MAP1567               0x00011800809430F8  RSL
L2C_COP0_MAP1568               0x0001180080943100  RSL
L2C_COP0_MAP1569               0x0001180080943108  RSL
L2C_COP0_MAP1570               0x0001180080943110  RSL
L2C_COP0_MAP1571               0x0001180080943118  RSL
L2C_COP0_MAP1572               0x0001180080943120  RSL
L2C_COP0_MAP1573               0x0001180080943128  RSL
L2C_COP0_MAP1574               0x0001180080943130  RSL
L2C_COP0_MAP1575               0x0001180080943138  RSL
L2C_COP0_MAP1576               0x0001180080943140  RSL
L2C_COP0_MAP1577               0x0001180080943148  RSL
L2C_COP0_MAP1578               0x0001180080943150  RSL
L2C_COP0_MAP1579               0x0001180080943158  RSL
L2C_COP0_MAP1580               0x0001180080943160  RSL
L2C_COP0_MAP1581               0x0001180080943168  RSL
L2C_COP0_MAP1582               0x0001180080943170  RSL
L2C_COP0_MAP1583               0x0001180080943178  RSL
L2C_COP0_MAP1584               0x0001180080943180  RSL
L2C_COP0_MAP1585               0x0001180080943188  RSL
L2C_COP0_MAP1586               0x0001180080943190  RSL
L2C_COP0_MAP1587               0x0001180080943198  RSL
L2C_COP0_MAP1588               0x00011800809431A0  RSL
L2C_COP0_MAP1589               0x00011800809431A8  RSL
L2C_COP0_MAP1590               0x00011800809431B0  RSL
L2C_COP0_MAP1591               0x00011800809431B8  RSL
L2C_COP0_MAP1592               0x00011800809431C0  RSL
L2C_COP0_MAP1593               0x00011800809431C8  RSL
L2C_COP0_MAP1594               0x00011800809431D0  RSL
L2C_COP0_MAP1595               0x00011800809431D8  RSL
L2C_COP0_MAP1596               0x00011800809431E0  RSL
L2C_COP0_MAP1597               0x00011800809431E8  RSL
L2C_COP0_MAP1598               0x00011800809431F0  RSL
L2C_COP0_MAP1599               0x00011800809431F8  RSL
L2C_COP0_MAP1600               0x0001180080943200  RSL
L2C_COP0_MAP1601               0x0001180080943208  RSL
L2C_COP0_MAP1602               0x0001180080943210  RSL
L2C_COP0_MAP1603               0x0001180080943218  RSL
L2C_COP0_MAP1604               0x0001180080943220  RSL
L2C_COP0_MAP1605               0x0001180080943228  RSL
L2C_COP0_MAP1606               0x0001180080943230  RSL
L2C_COP0_MAP1607               0x0001180080943238  RSL
L2C_COP0_MAP1608               0x0001180080943240  RSL
L2C_COP0_MAP1609               0x0001180080943248  RSL
L2C_COP0_MAP1610               0x0001180080943250  RSL
L2C_COP0_MAP1611               0x0001180080943258  RSL
L2C_COP0_MAP1612               0x0001180080943260  RSL
L2C_COP0_MAP1613               0x0001180080943268  RSL
L2C_COP0_MAP1614               0x0001180080943270  RSL
L2C_COP0_MAP1615               0x0001180080943278  RSL
L2C_COP0_MAP1616               0x0001180080943280  RSL
L2C_COP0_MAP1617               0x0001180080943288  RSL
L2C_COP0_MAP1618               0x0001180080943290  RSL
L2C_COP0_MAP1619               0x0001180080943298  RSL
L2C_COP0_MAP1620               0x00011800809432A0  RSL
L2C_COP0_MAP1621               0x00011800809432A8  RSL
L2C_COP0_MAP1622               0x00011800809432B0  RSL
L2C_COP0_MAP1623               0x00011800809432B8  RSL
L2C_COP0_MAP1624               0x00011800809432C0  RSL
L2C_COP0_MAP1625               0x00011800809432C8  RSL
L2C_COP0_MAP1626               0x00011800809432D0  RSL
L2C_COP0_MAP1627               0x00011800809432D8  RSL
L2C_COP0_MAP1628               0x00011800809432E0  RSL
L2C_COP0_MAP1629               0x00011800809432E8  RSL
L2C_COP0_MAP1630               0x00011800809432F0  RSL
L2C_COP0_MAP1631               0x00011800809432F8  RSL
L2C_COP0_MAP1632               0x0001180080943300  RSL
L2C_COP0_MAP1633               0x0001180080943308  RSL
L2C_COP0_MAP1634               0x0001180080943310  RSL
L2C_COP0_MAP1635               0x0001180080943318  RSL
L2C_COP0_MAP1636               0x0001180080943320  RSL
L2C_COP0_MAP1637               0x0001180080943328  RSL
L2C_COP0_MAP1638               0x0001180080943330  RSL
L2C_COP0_MAP1639               0x0001180080943338  RSL
L2C_COP0_MAP1640               0x0001180080943340  RSL
L2C_COP0_MAP1641               0x0001180080943348  RSL
L2C_COP0_MAP1642               0x0001180080943350  RSL
L2C_COP0_MAP1643               0x0001180080943358  RSL
L2C_COP0_MAP1644               0x0001180080943360  RSL
L2C_COP0_MAP1645               0x0001180080943368  RSL
L2C_COP0_MAP1646               0x0001180080943370  RSL
L2C_COP0_MAP1647               0x0001180080943378  RSL
L2C_COP0_MAP1648               0x0001180080943380  RSL
L2C_COP0_MAP1649               0x0001180080943388  RSL
L2C_COP0_MAP1650               0x0001180080943390  RSL
L2C_COP0_MAP1651               0x0001180080943398  RSL
L2C_COP0_MAP1652               0x00011800809433A0  RSL
L2C_COP0_MAP1653               0x00011800809433A8  RSL
L2C_COP0_MAP1654               0x00011800809433B0  RSL
L2C_COP0_MAP1655               0x00011800809433B8  RSL
L2C_COP0_MAP1656               0x00011800809433C0  RSL
L2C_COP0_MAP1657               0x00011800809433C8  RSL
L2C_COP0_MAP1658               0x00011800809433D0  RSL
L2C_COP0_MAP1659               0x00011800809433D8  RSL
L2C_COP0_MAP1660               0x00011800809433E0  RSL
L2C_COP0_MAP1661               0x00011800809433E8  RSL
L2C_COP0_MAP1662               0x00011800809433F0  RSL
L2C_COP0_MAP1663               0x00011800809433F8  RSL
L2C_COP0_MAP1664               0x0001180080943400  RSL
L2C_COP0_MAP1665               0x0001180080943408  RSL
L2C_COP0_MAP1666               0x0001180080943410  RSL
L2C_COP0_MAP1667               0x0001180080943418  RSL
L2C_COP0_MAP1668               0x0001180080943420  RSL
L2C_COP0_MAP1669               0x0001180080943428  RSL
L2C_COP0_MAP1670               0x0001180080943430  RSL
L2C_COP0_MAP1671               0x0001180080943438  RSL
L2C_COP0_MAP1672               0x0001180080943440  RSL
L2C_COP0_MAP1673               0x0001180080943448  RSL
L2C_COP0_MAP1674               0x0001180080943450  RSL
L2C_COP0_MAP1675               0x0001180080943458  RSL
L2C_COP0_MAP1676               0x0001180080943460  RSL
L2C_COP0_MAP1677               0x0001180080943468  RSL
L2C_COP0_MAP1678               0x0001180080943470  RSL
L2C_COP0_MAP1679               0x0001180080943478  RSL
L2C_COP0_MAP1680               0x0001180080943480  RSL
L2C_COP0_MAP1681               0x0001180080943488  RSL
L2C_COP0_MAP1682               0x0001180080943490  RSL
L2C_COP0_MAP1683               0x0001180080943498  RSL
L2C_COP0_MAP1684               0x00011800809434A0  RSL
L2C_COP0_MAP1685               0x00011800809434A8  RSL
L2C_COP0_MAP1686               0x00011800809434B0  RSL
L2C_COP0_MAP1687               0x00011800809434B8  RSL
L2C_COP0_MAP1688               0x00011800809434C0  RSL
L2C_COP0_MAP1689               0x00011800809434C8  RSL
L2C_COP0_MAP1690               0x00011800809434D0  RSL
L2C_COP0_MAP1691               0x00011800809434D8  RSL
L2C_COP0_MAP1692               0x00011800809434E0  RSL
L2C_COP0_MAP1693               0x00011800809434E8  RSL
L2C_COP0_MAP1694               0x00011800809434F0  RSL
L2C_COP0_MAP1695               0x00011800809434F8  RSL
L2C_COP0_MAP1696               0x0001180080943500  RSL
L2C_COP0_MAP1697               0x0001180080943508  RSL
L2C_COP0_MAP1698               0x0001180080943510  RSL
L2C_COP0_MAP1699               0x0001180080943518  RSL
L2C_COP0_MAP1700               0x0001180080943520  RSL
L2C_COP0_MAP1701               0x0001180080943528  RSL
L2C_COP0_MAP1702               0x0001180080943530  RSL
L2C_COP0_MAP1703               0x0001180080943538  RSL
L2C_COP0_MAP1704               0x0001180080943540  RSL
L2C_COP0_MAP1705               0x0001180080943548  RSL
L2C_COP0_MAP1706               0x0001180080943550  RSL
L2C_COP0_MAP1707               0x0001180080943558  RSL
L2C_COP0_MAP1708               0x0001180080943560  RSL
L2C_COP0_MAP1709               0x0001180080943568  RSL
L2C_COP0_MAP1710               0x0001180080943570  RSL
L2C_COP0_MAP1711               0x0001180080943578  RSL
L2C_COP0_MAP1712               0x0001180080943580  RSL
L2C_COP0_MAP1713               0x0001180080943588  RSL
L2C_COP0_MAP1714               0x0001180080943590  RSL
L2C_COP0_MAP1715               0x0001180080943598  RSL
L2C_COP0_MAP1716               0x00011800809435A0  RSL
L2C_COP0_MAP1717               0x00011800809435A8  RSL
L2C_COP0_MAP1718               0x00011800809435B0  RSL
L2C_COP0_MAP1719               0x00011800809435B8  RSL
L2C_COP0_MAP1720               0x00011800809435C0  RSL
L2C_COP0_MAP1721               0x00011800809435C8  RSL
L2C_COP0_MAP1722               0x00011800809435D0  RSL
L2C_COP0_MAP1723               0x00011800809435D8  RSL
L2C_COP0_MAP1724               0x00011800809435E0  RSL
L2C_COP0_MAP1725               0x00011800809435E8  RSL
L2C_COP0_MAP1726               0x00011800809435F0  RSL
L2C_COP0_MAP1727               0x00011800809435F8  RSL
L2C_COP0_MAP1728               0x0001180080943600  RSL
L2C_COP0_MAP1729               0x0001180080943608  RSL
L2C_COP0_MAP1730               0x0001180080943610  RSL
L2C_COP0_MAP1731               0x0001180080943618  RSL
L2C_COP0_MAP1732               0x0001180080943620  RSL
L2C_COP0_MAP1733               0x0001180080943628  RSL
L2C_COP0_MAP1734               0x0001180080943630  RSL
L2C_COP0_MAP1735               0x0001180080943638  RSL
L2C_COP0_MAP1736               0x0001180080943640  RSL
L2C_COP0_MAP1737               0x0001180080943648  RSL
L2C_COP0_MAP1738               0x0001180080943650  RSL
L2C_COP0_MAP1739               0x0001180080943658  RSL
L2C_COP0_MAP1740               0x0001180080943660  RSL
L2C_COP0_MAP1741               0x0001180080943668  RSL
L2C_COP0_MAP1742               0x0001180080943670  RSL
L2C_COP0_MAP1743               0x0001180080943678  RSL
L2C_COP0_MAP1744               0x0001180080943680  RSL
L2C_COP0_MAP1745               0x0001180080943688  RSL
L2C_COP0_MAP1746               0x0001180080943690  RSL
L2C_COP0_MAP1747               0x0001180080943698  RSL
L2C_COP0_MAP1748               0x00011800809436A0  RSL
L2C_COP0_MAP1749               0x00011800809436A8  RSL
L2C_COP0_MAP1750               0x00011800809436B0  RSL
L2C_COP0_MAP1751               0x00011800809436B8  RSL
L2C_COP0_MAP1752               0x00011800809436C0  RSL
L2C_COP0_MAP1753               0x00011800809436C8  RSL
L2C_COP0_MAP1754               0x00011800809436D0  RSL
L2C_COP0_MAP1755               0x00011800809436D8  RSL
L2C_COP0_MAP1756               0x00011800809436E0  RSL
L2C_COP0_MAP1757               0x00011800809436E8  RSL
L2C_COP0_MAP1758               0x00011800809436F0  RSL
L2C_COP0_MAP1759               0x00011800809436F8  RSL
L2C_COP0_MAP1760               0x0001180080943700  RSL
L2C_COP0_MAP1761               0x0001180080943708  RSL
L2C_COP0_MAP1762               0x0001180080943710  RSL
L2C_COP0_MAP1763               0x0001180080943718  RSL
L2C_COP0_MAP1764               0x0001180080943720  RSL
L2C_COP0_MAP1765               0x0001180080943728  RSL
L2C_COP0_MAP1766               0x0001180080943730  RSL
L2C_COP0_MAP1767               0x0001180080943738  RSL
L2C_COP0_MAP1768               0x0001180080943740  RSL
L2C_COP0_MAP1769               0x0001180080943748  RSL
L2C_COP0_MAP1770               0x0001180080943750  RSL
L2C_COP0_MAP1771               0x0001180080943758  RSL
L2C_COP0_MAP1772               0x0001180080943760  RSL
L2C_COP0_MAP1773               0x0001180080943768  RSL
L2C_COP0_MAP1774               0x0001180080943770  RSL
L2C_COP0_MAP1775               0x0001180080943778  RSL
L2C_COP0_MAP1776               0x0001180080943780  RSL
L2C_COP0_MAP1777               0x0001180080943788  RSL
L2C_COP0_MAP1778               0x0001180080943790  RSL
L2C_COP0_MAP1779               0x0001180080943798  RSL
L2C_COP0_MAP1780               0x00011800809437A0  RSL
L2C_COP0_MAP1781               0x00011800809437A8  RSL
L2C_COP0_MAP1782               0x00011800809437B0  RSL
L2C_COP0_MAP1783               0x00011800809437B8  RSL
L2C_COP0_MAP1784               0x00011800809437C0  RSL
L2C_COP0_MAP1785               0x00011800809437C8  RSL
L2C_COP0_MAP1786               0x00011800809437D0  RSL
L2C_COP0_MAP1787               0x00011800809437D8  RSL
L2C_COP0_MAP1788               0x00011800809437E0  RSL
L2C_COP0_MAP1789               0x00011800809437E8  RSL
L2C_COP0_MAP1790               0x00011800809437F0  RSL
L2C_COP0_MAP1791               0x00011800809437F8  RSL
L2C_COP0_MAP1792               0x0001180080943800  RSL
L2C_COP0_MAP1793               0x0001180080943808  RSL
L2C_COP0_MAP1794               0x0001180080943810  RSL
L2C_COP0_MAP1795               0x0001180080943818  RSL
L2C_COP0_MAP1796               0x0001180080943820  RSL
L2C_COP0_MAP1797               0x0001180080943828  RSL
L2C_COP0_MAP1798               0x0001180080943830  RSL
L2C_COP0_MAP1799               0x0001180080943838  RSL
L2C_COP0_MAP1800               0x0001180080943840  RSL
L2C_COP0_MAP1801               0x0001180080943848  RSL
L2C_COP0_MAP1802               0x0001180080943850  RSL
L2C_COP0_MAP1803               0x0001180080943858  RSL
L2C_COP0_MAP1804               0x0001180080943860  RSL
L2C_COP0_MAP1805               0x0001180080943868  RSL
L2C_COP0_MAP1806               0x0001180080943870  RSL
L2C_COP0_MAP1807               0x0001180080943878  RSL
L2C_COP0_MAP1808               0x0001180080943880  RSL
L2C_COP0_MAP1809               0x0001180080943888  RSL
L2C_COP0_MAP1810               0x0001180080943890  RSL
L2C_COP0_MAP1811               0x0001180080943898  RSL
L2C_COP0_MAP1812               0x00011800809438A0  RSL
L2C_COP0_MAP1813               0x00011800809438A8  RSL
L2C_COP0_MAP1814               0x00011800809438B0  RSL
L2C_COP0_MAP1815               0x00011800809438B8  RSL
L2C_COP0_MAP1816               0x00011800809438C0  RSL
L2C_COP0_MAP1817               0x00011800809438C8  RSL
L2C_COP0_MAP1818               0x00011800809438D0  RSL
L2C_COP0_MAP1819               0x00011800809438D8  RSL
L2C_COP0_MAP1820               0x00011800809438E0  RSL
L2C_COP0_MAP1821               0x00011800809438E8  RSL
L2C_COP0_MAP1822               0x00011800809438F0  RSL
L2C_COP0_MAP1823               0x00011800809438F8  RSL
L2C_COP0_MAP1824               0x0001180080943900  RSL
L2C_COP0_MAP1825               0x0001180080943908  RSL
L2C_COP0_MAP1826               0x0001180080943910  RSL
L2C_COP0_MAP1827               0x0001180080943918  RSL
L2C_COP0_MAP1828               0x0001180080943920  RSL
L2C_COP0_MAP1829               0x0001180080943928  RSL
L2C_COP0_MAP1830               0x0001180080943930  RSL
L2C_COP0_MAP1831               0x0001180080943938  RSL
L2C_COP0_MAP1832               0x0001180080943940  RSL
L2C_COP0_MAP1833               0x0001180080943948  RSL
L2C_COP0_MAP1834               0x0001180080943950  RSL
L2C_COP0_MAP1835               0x0001180080943958  RSL
L2C_COP0_MAP1836               0x0001180080943960  RSL
L2C_COP0_MAP1837               0x0001180080943968  RSL
L2C_COP0_MAP1838               0x0001180080943970  RSL
L2C_COP0_MAP1839               0x0001180080943978  RSL
L2C_COP0_MAP1840               0x0001180080943980  RSL
L2C_COP0_MAP1841               0x0001180080943988  RSL
L2C_COP0_MAP1842               0x0001180080943990  RSL
L2C_COP0_MAP1843               0x0001180080943998  RSL
L2C_COP0_MAP1844               0x00011800809439A0  RSL
L2C_COP0_MAP1845               0x00011800809439A8  RSL
L2C_COP0_MAP1846               0x00011800809439B0  RSL
L2C_COP0_MAP1847               0x00011800809439B8  RSL
L2C_COP0_MAP1848               0x00011800809439C0  RSL
L2C_COP0_MAP1849               0x00011800809439C8  RSL
L2C_COP0_MAP1850               0x00011800809439D0  RSL
L2C_COP0_MAP1851               0x00011800809439D8  RSL
L2C_COP0_MAP1852               0x00011800809439E0  RSL
L2C_COP0_MAP1853               0x00011800809439E8  RSL
L2C_COP0_MAP1854               0x00011800809439F0  RSL
L2C_COP0_MAP1855               0x00011800809439F8  RSL
L2C_COP0_MAP1856               0x0001180080943A00  RSL
L2C_COP0_MAP1857               0x0001180080943A08  RSL
L2C_COP0_MAP1858               0x0001180080943A10  RSL
L2C_COP0_MAP1859               0x0001180080943A18  RSL
L2C_COP0_MAP1860               0x0001180080943A20  RSL
L2C_COP0_MAP1861               0x0001180080943A28  RSL
L2C_COP0_MAP1862               0x0001180080943A30  RSL
L2C_COP0_MAP1863               0x0001180080943A38  RSL
L2C_COP0_MAP1864               0x0001180080943A40  RSL
L2C_COP0_MAP1865               0x0001180080943A48  RSL
L2C_COP0_MAP1866               0x0001180080943A50  RSL
L2C_COP0_MAP1867               0x0001180080943A58  RSL
L2C_COP0_MAP1868               0x0001180080943A60  RSL
L2C_COP0_MAP1869               0x0001180080943A68  RSL
L2C_COP0_MAP1870               0x0001180080943A70  RSL
L2C_COP0_MAP1871               0x0001180080943A78  RSL
L2C_COP0_MAP1872               0x0001180080943A80  RSL
L2C_COP0_MAP1873               0x0001180080943A88  RSL
L2C_COP0_MAP1874               0x0001180080943A90  RSL
L2C_COP0_MAP1875               0x0001180080943A98  RSL
L2C_COP0_MAP1876               0x0001180080943AA0  RSL
L2C_COP0_MAP1877               0x0001180080943AA8  RSL
L2C_COP0_MAP1878               0x0001180080943AB0  RSL
L2C_COP0_MAP1879               0x0001180080943AB8  RSL
L2C_COP0_MAP1880               0x0001180080943AC0  RSL
L2C_COP0_MAP1881               0x0001180080943AC8  RSL
L2C_COP0_MAP1882               0x0001180080943AD0  RSL
L2C_COP0_MAP1883               0x0001180080943AD8  RSL
L2C_COP0_MAP1884               0x0001180080943AE0  RSL
L2C_COP0_MAP1885               0x0001180080943AE8  RSL
L2C_COP0_MAP1886               0x0001180080943AF0  RSL
L2C_COP0_MAP1887               0x0001180080943AF8  RSL
L2C_COP0_MAP1888               0x0001180080943B00  RSL
L2C_COP0_MAP1889               0x0001180080943B08  RSL
L2C_COP0_MAP1890               0x0001180080943B10  RSL
L2C_COP0_MAP1891               0x0001180080943B18  RSL
L2C_COP0_MAP1892               0x0001180080943B20  RSL
L2C_COP0_MAP1893               0x0001180080943B28  RSL
L2C_COP0_MAP1894               0x0001180080943B30  RSL
L2C_COP0_MAP1895               0x0001180080943B38  RSL
L2C_COP0_MAP1896               0x0001180080943B40  RSL
L2C_COP0_MAP1897               0x0001180080943B48  RSL
L2C_COP0_MAP1898               0x0001180080943B50  RSL
L2C_COP0_MAP1899               0x0001180080943B58  RSL
L2C_COP0_MAP1900               0x0001180080943B60  RSL
L2C_COP0_MAP1901               0x0001180080943B68  RSL
L2C_COP0_MAP1902               0x0001180080943B70  RSL
L2C_COP0_MAP1903               0x0001180080943B78  RSL
L2C_COP0_MAP1904               0x0001180080943B80  RSL
L2C_COP0_MAP1905               0x0001180080943B88  RSL
L2C_COP0_MAP1906               0x0001180080943B90  RSL
L2C_COP0_MAP1907               0x0001180080943B98  RSL
L2C_COP0_MAP1908               0x0001180080943BA0  RSL
L2C_COP0_MAP1909               0x0001180080943BA8  RSL
L2C_COP0_MAP1910               0x0001180080943BB0  RSL
L2C_COP0_MAP1911               0x0001180080943BB8  RSL
L2C_COP0_MAP1912               0x0001180080943BC0  RSL
L2C_COP0_MAP1913               0x0001180080943BC8  RSL
L2C_COP0_MAP1914               0x0001180080943BD0  RSL
L2C_COP0_MAP1915               0x0001180080943BD8  RSL
L2C_COP0_MAP1916               0x0001180080943BE0  RSL
L2C_COP0_MAP1917               0x0001180080943BE8  RSL
L2C_COP0_MAP1918               0x0001180080943BF0  RSL
L2C_COP0_MAP1919               0x0001180080943BF8  RSL
L2C_COP0_MAP1920               0x0001180080943C00  RSL
L2C_COP0_MAP1921               0x0001180080943C08  RSL
L2C_COP0_MAP1922               0x0001180080943C10  RSL
L2C_COP0_MAP1923               0x0001180080943C18  RSL
L2C_COP0_MAP1924               0x0001180080943C20  RSL
L2C_COP0_MAP1925               0x0001180080943C28  RSL
L2C_COP0_MAP1926               0x0001180080943C30  RSL
L2C_COP0_MAP1927               0x0001180080943C38  RSL
L2C_COP0_MAP1928               0x0001180080943C40  RSL
L2C_COP0_MAP1929               0x0001180080943C48  RSL
L2C_COP0_MAP1930               0x0001180080943C50  RSL
L2C_COP0_MAP1931               0x0001180080943C58  RSL
L2C_COP0_MAP1932               0x0001180080943C60  RSL
L2C_COP0_MAP1933               0x0001180080943C68  RSL
L2C_COP0_MAP1934               0x0001180080943C70  RSL
L2C_COP0_MAP1935               0x0001180080943C78  RSL
L2C_COP0_MAP1936               0x0001180080943C80  RSL
L2C_COP0_MAP1937               0x0001180080943C88  RSL
L2C_COP0_MAP1938               0x0001180080943C90  RSL
L2C_COP0_MAP1939               0x0001180080943C98  RSL
L2C_COP0_MAP1940               0x0001180080943CA0  RSL
L2C_COP0_MAP1941               0x0001180080943CA8  RSL
L2C_COP0_MAP1942               0x0001180080943CB0  RSL
L2C_COP0_MAP1943               0x0001180080943CB8  RSL
L2C_COP0_MAP1944               0x0001180080943CC0  RSL
L2C_COP0_MAP1945               0x0001180080943CC8  RSL
L2C_COP0_MAP1946               0x0001180080943CD0  RSL
L2C_COP0_MAP1947               0x0001180080943CD8  RSL
L2C_COP0_MAP1948               0x0001180080943CE0  RSL
L2C_COP0_MAP1949               0x0001180080943CE8  RSL
L2C_COP0_MAP1950               0x0001180080943CF0  RSL
L2C_COP0_MAP1951               0x0001180080943CF8  RSL
L2C_COP0_MAP1952               0x0001180080943D00  RSL
L2C_COP0_MAP1953               0x0001180080943D08  RSL
L2C_COP0_MAP1954               0x0001180080943D10  RSL
L2C_COP0_MAP1955               0x0001180080943D18  RSL
L2C_COP0_MAP1956               0x0001180080943D20  RSL
L2C_COP0_MAP1957               0x0001180080943D28  RSL
L2C_COP0_MAP1958               0x0001180080943D30  RSL
L2C_COP0_MAP1959               0x0001180080943D38  RSL
L2C_COP0_MAP1960               0x0001180080943D40  RSL
L2C_COP0_MAP1961               0x0001180080943D48  RSL
L2C_COP0_MAP1962               0x0001180080943D50  RSL
L2C_COP0_MAP1963               0x0001180080943D58  RSL
L2C_COP0_MAP1964               0x0001180080943D60  RSL
L2C_COP0_MAP1965               0x0001180080943D68  RSL
L2C_COP0_MAP1966               0x0001180080943D70  RSL
L2C_COP0_MAP1967               0x0001180080943D78  RSL
L2C_COP0_MAP1968               0x0001180080943D80  RSL
L2C_COP0_MAP1969               0x0001180080943D88  RSL
L2C_COP0_MAP1970               0x0001180080943D90  RSL
L2C_COP0_MAP1971               0x0001180080943D98  RSL
L2C_COP0_MAP1972               0x0001180080943DA0  RSL
L2C_COP0_MAP1973               0x0001180080943DA8  RSL
L2C_COP0_MAP1974               0x0001180080943DB0  RSL
L2C_COP0_MAP1975               0x0001180080943DB8  RSL
L2C_COP0_MAP1976               0x0001180080943DC0  RSL
L2C_COP0_MAP1977               0x0001180080943DC8  RSL
L2C_COP0_MAP1978               0x0001180080943DD0  RSL
L2C_COP0_MAP1979               0x0001180080943DD8  RSL
L2C_COP0_MAP1980               0x0001180080943DE0  RSL
L2C_COP0_MAP1981               0x0001180080943DE8  RSL
L2C_COP0_MAP1982               0x0001180080943DF0  RSL
L2C_COP0_MAP1983               0x0001180080943DF8  RSL
L2C_COP0_MAP1984               0x0001180080943E00  RSL
L2C_COP0_MAP1985               0x0001180080943E08  RSL
L2C_COP0_MAP1986               0x0001180080943E10  RSL
L2C_COP0_MAP1987               0x0001180080943E18  RSL
L2C_COP0_MAP1988               0x0001180080943E20  RSL
L2C_COP0_MAP1989               0x0001180080943E28  RSL
L2C_COP0_MAP1990               0x0001180080943E30  RSL
L2C_COP0_MAP1991               0x0001180080943E38  RSL
L2C_COP0_MAP1992               0x0001180080943E40  RSL
L2C_COP0_MAP1993               0x0001180080943E48  RSL
L2C_COP0_MAP1994               0x0001180080943E50  RSL
L2C_COP0_MAP1995               0x0001180080943E58  RSL
L2C_COP0_MAP1996               0x0001180080943E60  RSL
L2C_COP0_MAP1997               0x0001180080943E68  RSL
L2C_COP0_MAP1998               0x0001180080943E70  RSL
L2C_COP0_MAP1999               0x0001180080943E78  RSL
L2C_COP0_MAP2000               0x0001180080943E80  RSL
L2C_COP0_MAP2001               0x0001180080943E88  RSL
L2C_COP0_MAP2002               0x0001180080943E90  RSL
L2C_COP0_MAP2003               0x0001180080943E98  RSL
L2C_COP0_MAP2004               0x0001180080943EA0  RSL
L2C_COP0_MAP2005               0x0001180080943EA8  RSL
L2C_COP0_MAP2006               0x0001180080943EB0  RSL
L2C_COP0_MAP2007               0x0001180080943EB8  RSL
L2C_COP0_MAP2008               0x0001180080943EC0  RSL
L2C_COP0_MAP2009               0x0001180080943EC8  RSL
L2C_COP0_MAP2010               0x0001180080943ED0  RSL
L2C_COP0_MAP2011               0x0001180080943ED8  RSL
L2C_COP0_MAP2012               0x0001180080943EE0  RSL
L2C_COP0_MAP2013               0x0001180080943EE8  RSL
L2C_COP0_MAP2014               0x0001180080943EF0  RSL
L2C_COP0_MAP2015               0x0001180080943EF8  RSL
L2C_COP0_MAP2016               0x0001180080943F00  RSL
L2C_COP0_MAP2017               0x0001180080943F08  RSL
L2C_COP0_MAP2018               0x0001180080943F10  RSL
L2C_COP0_MAP2019               0x0001180080943F18  RSL
L2C_COP0_MAP2020               0x0001180080943F20  RSL
L2C_COP0_MAP2021               0x0001180080943F28  RSL
L2C_COP0_MAP2022               0x0001180080943F30  RSL
L2C_COP0_MAP2023               0x0001180080943F38  RSL
L2C_COP0_MAP2024               0x0001180080943F40  RSL
L2C_COP0_MAP2025               0x0001180080943F48  RSL
L2C_COP0_MAP2026               0x0001180080943F50  RSL
L2C_COP0_MAP2027               0x0001180080943F58  RSL
L2C_COP0_MAP2028               0x0001180080943F60  RSL
L2C_COP0_MAP2029               0x0001180080943F68  RSL
L2C_COP0_MAP2030               0x0001180080943F70  RSL
L2C_COP0_MAP2031               0x0001180080943F78  RSL
L2C_COP0_MAP2032               0x0001180080943F80  RSL
L2C_COP0_MAP2033               0x0001180080943F88  RSL
L2C_COP0_MAP2034               0x0001180080943F90  RSL
L2C_COP0_MAP2035               0x0001180080943F98  RSL
L2C_COP0_MAP2036               0x0001180080943FA0  RSL
L2C_COP0_MAP2037               0x0001180080943FA8  RSL
L2C_COP0_MAP2038               0x0001180080943FB0  RSL
L2C_COP0_MAP2039               0x0001180080943FB8  RSL
L2C_COP0_MAP2040               0x0001180080943FC0  RSL
L2C_COP0_MAP2041               0x0001180080943FC8  RSL
L2C_COP0_MAP2042               0x0001180080943FD0  RSL
L2C_COP0_MAP2043               0x0001180080943FD8  RSL
L2C_COP0_MAP2044               0x0001180080943FE0  RSL
L2C_COP0_MAP2045               0x0001180080943FE8  RSL
L2C_COP0_MAP2046               0x0001180080943FF0  RSL
L2C_COP0_MAP2047               0x0001180080943FF8  RSL
L2C_COP0_MAP2048               0x0001180080944000  RSL
L2C_COP0_MAP2049               0x0001180080944008  RSL
L2C_COP0_MAP2050               0x0001180080944010  RSL
L2C_COP0_MAP2051               0x0001180080944018  RSL
L2C_COP0_MAP2052               0x0001180080944020  RSL
L2C_COP0_MAP2053               0x0001180080944028  RSL
L2C_COP0_MAP2054               0x0001180080944030  RSL
L2C_COP0_MAP2055               0x0001180080944038  RSL
L2C_COP0_MAP2056               0x0001180080944040  RSL
L2C_COP0_MAP2057               0x0001180080944048  RSL
L2C_COP0_MAP2058               0x0001180080944050  RSL
L2C_COP0_MAP2059               0x0001180080944058  RSL
L2C_COP0_MAP2060               0x0001180080944060  RSL
L2C_COP0_MAP2061               0x0001180080944068  RSL
L2C_COP0_MAP2062               0x0001180080944070  RSL
L2C_COP0_MAP2063               0x0001180080944078  RSL
L2C_COP0_MAP2064               0x0001180080944080  RSL
L2C_COP0_MAP2065               0x0001180080944088  RSL
L2C_COP0_MAP2066               0x0001180080944090  RSL
L2C_COP0_MAP2067               0x0001180080944098  RSL
L2C_COP0_MAP2068               0x00011800809440A0  RSL
L2C_COP0_MAP2069               0x00011800809440A8  RSL
L2C_COP0_MAP2070               0x00011800809440B0  RSL
L2C_COP0_MAP2071               0x00011800809440B8  RSL
L2C_COP0_MAP2072               0x00011800809440C0  RSL
L2C_COP0_MAP2073               0x00011800809440C8  RSL
L2C_COP0_MAP2074               0x00011800809440D0  RSL
L2C_COP0_MAP2075               0x00011800809440D8  RSL
L2C_COP0_MAP2076               0x00011800809440E0  RSL
L2C_COP0_MAP2077               0x00011800809440E8  RSL
L2C_COP0_MAP2078               0x00011800809440F0  RSL
L2C_COP0_MAP2079               0x00011800809440F8  RSL
L2C_COP0_MAP2080               0x0001180080944100  RSL
L2C_COP0_MAP2081               0x0001180080944108  RSL
L2C_COP0_MAP2082               0x0001180080944110  RSL
L2C_COP0_MAP2083               0x0001180080944118  RSL
L2C_COP0_MAP2084               0x0001180080944120  RSL
L2C_COP0_MAP2085               0x0001180080944128  RSL
L2C_COP0_MAP2086               0x0001180080944130  RSL
L2C_COP0_MAP2087               0x0001180080944138  RSL
L2C_COP0_MAP2088               0x0001180080944140  RSL
L2C_COP0_MAP2089               0x0001180080944148  RSL
L2C_COP0_MAP2090               0x0001180080944150  RSL
L2C_COP0_MAP2091               0x0001180080944158  RSL
L2C_COP0_MAP2092               0x0001180080944160  RSL
L2C_COP0_MAP2093               0x0001180080944168  RSL
L2C_COP0_MAP2094               0x0001180080944170  RSL
L2C_COP0_MAP2095               0x0001180080944178  RSL
L2C_COP0_MAP2096               0x0001180080944180  RSL
L2C_COP0_MAP2097               0x0001180080944188  RSL
L2C_COP0_MAP2098               0x0001180080944190  RSL
L2C_COP0_MAP2099               0x0001180080944198  RSL
L2C_COP0_MAP2100               0x00011800809441A0  RSL
L2C_COP0_MAP2101               0x00011800809441A8  RSL
L2C_COP0_MAP2102               0x00011800809441B0  RSL
L2C_COP0_MAP2103               0x00011800809441B8  RSL
L2C_COP0_MAP2104               0x00011800809441C0  RSL
L2C_COP0_MAP2105               0x00011800809441C8  RSL
L2C_COP0_MAP2106               0x00011800809441D0  RSL
L2C_COP0_MAP2107               0x00011800809441D8  RSL
L2C_COP0_MAP2108               0x00011800809441E0  RSL
L2C_COP0_MAP2109               0x00011800809441E8  RSL
L2C_COP0_MAP2110               0x00011800809441F0  RSL
L2C_COP0_MAP2111               0x00011800809441F8  RSL
L2C_COP0_MAP2112               0x0001180080944200  RSL
L2C_COP0_MAP2113               0x0001180080944208  RSL
L2C_COP0_MAP2114               0x0001180080944210  RSL
L2C_COP0_MAP2115               0x0001180080944218  RSL
L2C_COP0_MAP2116               0x0001180080944220  RSL
L2C_COP0_MAP2117               0x0001180080944228  RSL
L2C_COP0_MAP2118               0x0001180080944230  RSL
L2C_COP0_MAP2119               0x0001180080944238  RSL
L2C_COP0_MAP2120               0x0001180080944240  RSL
L2C_COP0_MAP2121               0x0001180080944248  RSL
L2C_COP0_MAP2122               0x0001180080944250  RSL
L2C_COP0_MAP2123               0x0001180080944258  RSL
L2C_COP0_MAP2124               0x0001180080944260  RSL
L2C_COP0_MAP2125               0x0001180080944268  RSL
L2C_COP0_MAP2126               0x0001180080944270  RSL
L2C_COP0_MAP2127               0x0001180080944278  RSL
L2C_COP0_MAP2128               0x0001180080944280  RSL
L2C_COP0_MAP2129               0x0001180080944288  RSL
L2C_COP0_MAP2130               0x0001180080944290  RSL
L2C_COP0_MAP2131               0x0001180080944298  RSL
L2C_COP0_MAP2132               0x00011800809442A0  RSL
L2C_COP0_MAP2133               0x00011800809442A8  RSL
L2C_COP0_MAP2134               0x00011800809442B0  RSL
L2C_COP0_MAP2135               0x00011800809442B8  RSL
L2C_COP0_MAP2136               0x00011800809442C0  RSL
L2C_COP0_MAP2137               0x00011800809442C8  RSL
L2C_COP0_MAP2138               0x00011800809442D0  RSL
L2C_COP0_MAP2139               0x00011800809442D8  RSL
L2C_COP0_MAP2140               0x00011800809442E0  RSL
L2C_COP0_MAP2141               0x00011800809442E8  RSL
L2C_COP0_MAP2142               0x00011800809442F0  RSL
L2C_COP0_MAP2143               0x00011800809442F8  RSL
L2C_COP0_MAP2144               0x0001180080944300  RSL
L2C_COP0_MAP2145               0x0001180080944308  RSL
L2C_COP0_MAP2146               0x0001180080944310  RSL
L2C_COP0_MAP2147               0x0001180080944318  RSL
L2C_COP0_MAP2148               0x0001180080944320  RSL
L2C_COP0_MAP2149               0x0001180080944328  RSL
L2C_COP0_MAP2150               0x0001180080944330  RSL
L2C_COP0_MAP2151               0x0001180080944338  RSL
L2C_COP0_MAP2152               0x0001180080944340  RSL
L2C_COP0_MAP2153               0x0001180080944348  RSL
L2C_COP0_MAP2154               0x0001180080944350  RSL
L2C_COP0_MAP2155               0x0001180080944358  RSL
L2C_COP0_MAP2156               0x0001180080944360  RSL
L2C_COP0_MAP2157               0x0001180080944368  RSL
L2C_COP0_MAP2158               0x0001180080944370  RSL
L2C_COP0_MAP2159               0x0001180080944378  RSL
L2C_COP0_MAP2160               0x0001180080944380  RSL
L2C_COP0_MAP2161               0x0001180080944388  RSL
L2C_COP0_MAP2162               0x0001180080944390  RSL
L2C_COP0_MAP2163               0x0001180080944398  RSL
L2C_COP0_MAP2164               0x00011800809443A0  RSL
L2C_COP0_MAP2165               0x00011800809443A8  RSL
L2C_COP0_MAP2166               0x00011800809443B0  RSL
L2C_COP0_MAP2167               0x00011800809443B8  RSL
L2C_COP0_MAP2168               0x00011800809443C0  RSL
L2C_COP0_MAP2169               0x00011800809443C8  RSL
L2C_COP0_MAP2170               0x00011800809443D0  RSL
L2C_COP0_MAP2171               0x00011800809443D8  RSL
L2C_COP0_MAP2172               0x00011800809443E0  RSL
L2C_COP0_MAP2173               0x00011800809443E8  RSL
L2C_COP0_MAP2174               0x00011800809443F0  RSL
L2C_COP0_MAP2175               0x00011800809443F8  RSL
L2C_COP0_MAP2176               0x0001180080944400  RSL
L2C_COP0_MAP2177               0x0001180080944408  RSL
L2C_COP0_MAP2178               0x0001180080944410  RSL
L2C_COP0_MAP2179               0x0001180080944418  RSL
L2C_COP0_MAP2180               0x0001180080944420  RSL
L2C_COP0_MAP2181               0x0001180080944428  RSL
L2C_COP0_MAP2182               0x0001180080944430  RSL
L2C_COP0_MAP2183               0x0001180080944438  RSL
L2C_COP0_MAP2184               0x0001180080944440  RSL
L2C_COP0_MAP2185               0x0001180080944448  RSL
L2C_COP0_MAP2186               0x0001180080944450  RSL
L2C_COP0_MAP2187               0x0001180080944458  RSL
L2C_COP0_MAP2188               0x0001180080944460  RSL
L2C_COP0_MAP2189               0x0001180080944468  RSL
L2C_COP0_MAP2190               0x0001180080944470  RSL
L2C_COP0_MAP2191               0x0001180080944478  RSL
L2C_COP0_MAP2192               0x0001180080944480  RSL
L2C_COP0_MAP2193               0x0001180080944488  RSL
L2C_COP0_MAP2194               0x0001180080944490  RSL
L2C_COP0_MAP2195               0x0001180080944498  RSL
L2C_COP0_MAP2196               0x00011800809444A0  RSL
L2C_COP0_MAP2197               0x00011800809444A8  RSL
L2C_COP0_MAP2198               0x00011800809444B0  RSL
L2C_COP0_MAP2199               0x00011800809444B8  RSL
L2C_COP0_MAP2200               0x00011800809444C0  RSL
L2C_COP0_MAP2201               0x00011800809444C8  RSL
L2C_COP0_MAP2202               0x00011800809444D0  RSL
L2C_COP0_MAP2203               0x00011800809444D8  RSL
L2C_COP0_MAP2204               0x00011800809444E0  RSL
L2C_COP0_MAP2205               0x00011800809444E8  RSL
L2C_COP0_MAP2206               0x00011800809444F0  RSL
L2C_COP0_MAP2207               0x00011800809444F8  RSL
L2C_COP0_MAP2208               0x0001180080944500  RSL
L2C_COP0_MAP2209               0x0001180080944508  RSL
L2C_COP0_MAP2210               0x0001180080944510  RSL
L2C_COP0_MAP2211               0x0001180080944518  RSL
L2C_COP0_MAP2212               0x0001180080944520  RSL
L2C_COP0_MAP2213               0x0001180080944528  RSL
L2C_COP0_MAP2214               0x0001180080944530  RSL
L2C_COP0_MAP2215               0x0001180080944538  RSL
L2C_COP0_MAP2216               0x0001180080944540  RSL
L2C_COP0_MAP2217               0x0001180080944548  RSL
L2C_COP0_MAP2218               0x0001180080944550  RSL
L2C_COP0_MAP2219               0x0001180080944558  RSL
L2C_COP0_MAP2220               0x0001180080944560  RSL
L2C_COP0_MAP2221               0x0001180080944568  RSL
L2C_COP0_MAP2222               0x0001180080944570  RSL
L2C_COP0_MAP2223               0x0001180080944578  RSL
L2C_COP0_MAP2224               0x0001180080944580  RSL
L2C_COP0_MAP2225               0x0001180080944588  RSL
L2C_COP0_MAP2226               0x0001180080944590  RSL
L2C_COP0_MAP2227               0x0001180080944598  RSL
L2C_COP0_MAP2228               0x00011800809445A0  RSL
L2C_COP0_MAP2229               0x00011800809445A8  RSL
L2C_COP0_MAP2230               0x00011800809445B0  RSL
L2C_COP0_MAP2231               0x00011800809445B8  RSL
L2C_COP0_MAP2232               0x00011800809445C0  RSL
L2C_COP0_MAP2233               0x00011800809445C8  RSL
L2C_COP0_MAP2234               0x00011800809445D0  RSL
L2C_COP0_MAP2235               0x00011800809445D8  RSL
L2C_COP0_MAP2236               0x00011800809445E0  RSL
L2C_COP0_MAP2237               0x00011800809445E8  RSL
L2C_COP0_MAP2238               0x00011800809445F0  RSL
L2C_COP0_MAP2239               0x00011800809445F8  RSL
L2C_COP0_MAP2240               0x0001180080944600  RSL
L2C_COP0_MAP2241               0x0001180080944608  RSL
L2C_COP0_MAP2242               0x0001180080944610  RSL
L2C_COP0_MAP2243               0x0001180080944618  RSL
L2C_COP0_MAP2244               0x0001180080944620  RSL
L2C_COP0_MAP2245               0x0001180080944628  RSL
L2C_COP0_MAP2246               0x0001180080944630  RSL
L2C_COP0_MAP2247               0x0001180080944638  RSL
L2C_COP0_MAP2248               0x0001180080944640  RSL
L2C_COP0_MAP2249               0x0001180080944648  RSL
L2C_COP0_MAP2250               0x0001180080944650  RSL
L2C_COP0_MAP2251               0x0001180080944658  RSL
L2C_COP0_MAP2252               0x0001180080944660  RSL
L2C_COP0_MAP2253               0x0001180080944668  RSL
L2C_COP0_MAP2254               0x0001180080944670  RSL
L2C_COP0_MAP2255               0x0001180080944678  RSL
L2C_COP0_MAP2256               0x0001180080944680  RSL
L2C_COP0_MAP2257               0x0001180080944688  RSL
L2C_COP0_MAP2258               0x0001180080944690  RSL
L2C_COP0_MAP2259               0x0001180080944698  RSL
L2C_COP0_MAP2260               0x00011800809446A0  RSL
L2C_COP0_MAP2261               0x00011800809446A8  RSL
L2C_COP0_MAP2262               0x00011800809446B0  RSL
L2C_COP0_MAP2263               0x00011800809446B8  RSL
L2C_COP0_MAP2264               0x00011800809446C0  RSL
L2C_COP0_MAP2265               0x00011800809446C8  RSL
L2C_COP0_MAP2266               0x00011800809446D0  RSL
L2C_COP0_MAP2267               0x00011800809446D8  RSL
L2C_COP0_MAP2268               0x00011800809446E0  RSL
L2C_COP0_MAP2269               0x00011800809446E8  RSL
L2C_COP0_MAP2270               0x00011800809446F0  RSL
L2C_COP0_MAP2271               0x00011800809446F8  RSL
L2C_COP0_MAP2272               0x0001180080944700  RSL
L2C_COP0_MAP2273               0x0001180080944708  RSL
L2C_COP0_MAP2274               0x0001180080944710  RSL
L2C_COP0_MAP2275               0x0001180080944718  RSL
L2C_COP0_MAP2276               0x0001180080944720  RSL
L2C_COP0_MAP2277               0x0001180080944728  RSL
L2C_COP0_MAP2278               0x0001180080944730  RSL
L2C_COP0_MAP2279               0x0001180080944738  RSL
L2C_COP0_MAP2280               0x0001180080944740  RSL
L2C_COP0_MAP2281               0x0001180080944748  RSL
L2C_COP0_MAP2282               0x0001180080944750  RSL
L2C_COP0_MAP2283               0x0001180080944758  RSL
L2C_COP0_MAP2284               0x0001180080944760  RSL
L2C_COP0_MAP2285               0x0001180080944768  RSL
L2C_COP0_MAP2286               0x0001180080944770  RSL
L2C_COP0_MAP2287               0x0001180080944778  RSL
L2C_COP0_MAP2288               0x0001180080944780  RSL
L2C_COP0_MAP2289               0x0001180080944788  RSL
L2C_COP0_MAP2290               0x0001180080944790  RSL
L2C_COP0_MAP2291               0x0001180080944798  RSL
L2C_COP0_MAP2292               0x00011800809447A0  RSL
L2C_COP0_MAP2293               0x00011800809447A8  RSL
L2C_COP0_MAP2294               0x00011800809447B0  RSL
L2C_COP0_MAP2295               0x00011800809447B8  RSL
L2C_COP0_MAP2296               0x00011800809447C0  RSL
L2C_COP0_MAP2297               0x00011800809447C8  RSL
L2C_COP0_MAP2298               0x00011800809447D0  RSL
L2C_COP0_MAP2299               0x00011800809447D8  RSL
L2C_COP0_MAP2300               0x00011800809447E0  RSL
L2C_COP0_MAP2301               0x00011800809447E8  RSL
L2C_COP0_MAP2302               0x00011800809447F0  RSL
L2C_COP0_MAP2303               0x00011800809447F8  RSL
L2C_COP0_MAP2304               0x0001180080944800  RSL
L2C_COP0_MAP2305               0x0001180080944808  RSL
L2C_COP0_MAP2306               0x0001180080944810  RSL
L2C_COP0_MAP2307               0x0001180080944818  RSL
L2C_COP0_MAP2308               0x0001180080944820  RSL
L2C_COP0_MAP2309               0x0001180080944828  RSL
L2C_COP0_MAP2310               0x0001180080944830  RSL
L2C_COP0_MAP2311               0x0001180080944838  RSL
L2C_COP0_MAP2312               0x0001180080944840  RSL
L2C_COP0_MAP2313               0x0001180080944848  RSL
L2C_COP0_MAP2314               0x0001180080944850  RSL
L2C_COP0_MAP2315               0x0001180080944858  RSL
L2C_COP0_MAP2316               0x0001180080944860  RSL
L2C_COP0_MAP2317               0x0001180080944868  RSL
L2C_COP0_MAP2318               0x0001180080944870  RSL
L2C_COP0_MAP2319               0x0001180080944878  RSL
L2C_COP0_MAP2320               0x0001180080944880  RSL
L2C_COP0_MAP2321               0x0001180080944888  RSL
L2C_COP0_MAP2322               0x0001180080944890  RSL
L2C_COP0_MAP2323               0x0001180080944898  RSL
L2C_COP0_MAP2324               0x00011800809448A0  RSL
L2C_COP0_MAP2325               0x00011800809448A8  RSL
L2C_COP0_MAP2326               0x00011800809448B0  RSL
L2C_COP0_MAP2327               0x00011800809448B8  RSL
L2C_COP0_MAP2328               0x00011800809448C0  RSL
L2C_COP0_MAP2329               0x00011800809448C8  RSL
L2C_COP0_MAP2330               0x00011800809448D0  RSL
L2C_COP0_MAP2331               0x00011800809448D8  RSL
L2C_COP0_MAP2332               0x00011800809448E0  RSL
L2C_COP0_MAP2333               0x00011800809448E8  RSL
L2C_COP0_MAP2334               0x00011800809448F0  RSL
L2C_COP0_MAP2335               0x00011800809448F8  RSL
L2C_COP0_MAP2336               0x0001180080944900  RSL
L2C_COP0_MAP2337               0x0001180080944908  RSL
L2C_COP0_MAP2338               0x0001180080944910  RSL
L2C_COP0_MAP2339               0x0001180080944918  RSL
L2C_COP0_MAP2340               0x0001180080944920  RSL
L2C_COP0_MAP2341               0x0001180080944928  RSL
L2C_COP0_MAP2342               0x0001180080944930  RSL
L2C_COP0_MAP2343               0x0001180080944938  RSL
L2C_COP0_MAP2344               0x0001180080944940  RSL
L2C_COP0_MAP2345               0x0001180080944948  RSL
L2C_COP0_MAP2346               0x0001180080944950  RSL
L2C_COP0_MAP2347               0x0001180080944958  RSL
L2C_COP0_MAP2348               0x0001180080944960  RSL
L2C_COP0_MAP2349               0x0001180080944968  RSL
L2C_COP0_MAP2350               0x0001180080944970  RSL
L2C_COP0_MAP2351               0x0001180080944978  RSL
L2C_COP0_MAP2352               0x0001180080944980  RSL
L2C_COP0_MAP2353               0x0001180080944988  RSL
L2C_COP0_MAP2354               0x0001180080944990  RSL
L2C_COP0_MAP2355               0x0001180080944998  RSL
L2C_COP0_MAP2356               0x00011800809449A0  RSL
L2C_COP0_MAP2357               0x00011800809449A8  RSL
L2C_COP0_MAP2358               0x00011800809449B0  RSL
L2C_COP0_MAP2359               0x00011800809449B8  RSL
L2C_COP0_MAP2360               0x00011800809449C0  RSL
L2C_COP0_MAP2361               0x00011800809449C8  RSL
L2C_COP0_MAP2362               0x00011800809449D0  RSL
L2C_COP0_MAP2363               0x00011800809449D8  RSL
L2C_COP0_MAP2364               0x00011800809449E0  RSL
L2C_COP0_MAP2365               0x00011800809449E8  RSL
L2C_COP0_MAP2366               0x00011800809449F0  RSL
L2C_COP0_MAP2367               0x00011800809449F8  RSL
L2C_COP0_MAP2368               0x0001180080944A00  RSL
L2C_COP0_MAP2369               0x0001180080944A08  RSL
L2C_COP0_MAP2370               0x0001180080944A10  RSL
L2C_COP0_MAP2371               0x0001180080944A18  RSL
L2C_COP0_MAP2372               0x0001180080944A20  RSL
L2C_COP0_MAP2373               0x0001180080944A28  RSL
L2C_COP0_MAP2374               0x0001180080944A30  RSL
L2C_COP0_MAP2375               0x0001180080944A38  RSL
L2C_COP0_MAP2376               0x0001180080944A40  RSL
L2C_COP0_MAP2377               0x0001180080944A48  RSL
L2C_COP0_MAP2378               0x0001180080944A50  RSL
L2C_COP0_MAP2379               0x0001180080944A58  RSL
L2C_COP0_MAP2380               0x0001180080944A60  RSL
L2C_COP0_MAP2381               0x0001180080944A68  RSL
L2C_COP0_MAP2382               0x0001180080944A70  RSL
L2C_COP0_MAP2383               0x0001180080944A78  RSL
L2C_COP0_MAP2384               0x0001180080944A80  RSL
L2C_COP0_MAP2385               0x0001180080944A88  RSL
L2C_COP0_MAP2386               0x0001180080944A90  RSL
L2C_COP0_MAP2387               0x0001180080944A98  RSL
L2C_COP0_MAP2388               0x0001180080944AA0  RSL
L2C_COP0_MAP2389               0x0001180080944AA8  RSL
L2C_COP0_MAP2390               0x0001180080944AB0  RSL
L2C_COP0_MAP2391               0x0001180080944AB8  RSL
L2C_COP0_MAP2392               0x0001180080944AC0  RSL
L2C_COP0_MAP2393               0x0001180080944AC8  RSL
L2C_COP0_MAP2394               0x0001180080944AD0  RSL
L2C_COP0_MAP2395               0x0001180080944AD8  RSL
L2C_COP0_MAP2396               0x0001180080944AE0  RSL
L2C_COP0_MAP2397               0x0001180080944AE8  RSL
L2C_COP0_MAP2398               0x0001180080944AF0  RSL
L2C_COP0_MAP2399               0x0001180080944AF8  RSL
L2C_COP0_MAP2400               0x0001180080944B00  RSL
L2C_COP0_MAP2401               0x0001180080944B08  RSL
L2C_COP0_MAP2402               0x0001180080944B10  RSL
L2C_COP0_MAP2403               0x0001180080944B18  RSL
L2C_COP0_MAP2404               0x0001180080944B20  RSL
L2C_COP0_MAP2405               0x0001180080944B28  RSL
L2C_COP0_MAP2406               0x0001180080944B30  RSL
L2C_COP0_MAP2407               0x0001180080944B38  RSL
L2C_COP0_MAP2408               0x0001180080944B40  RSL
L2C_COP0_MAP2409               0x0001180080944B48  RSL
L2C_COP0_MAP2410               0x0001180080944B50  RSL
L2C_COP0_MAP2411               0x0001180080944B58  RSL
L2C_COP0_MAP2412               0x0001180080944B60  RSL
L2C_COP0_MAP2413               0x0001180080944B68  RSL
L2C_COP0_MAP2414               0x0001180080944B70  RSL
L2C_COP0_MAP2415               0x0001180080944B78  RSL
L2C_COP0_MAP2416               0x0001180080944B80  RSL
L2C_COP0_MAP2417               0x0001180080944B88  RSL
L2C_COP0_MAP2418               0x0001180080944B90  RSL
L2C_COP0_MAP2419               0x0001180080944B98  RSL
L2C_COP0_MAP2420               0x0001180080944BA0  RSL
L2C_COP0_MAP2421               0x0001180080944BA8  RSL
L2C_COP0_MAP2422               0x0001180080944BB0  RSL
L2C_COP0_MAP2423               0x0001180080944BB8  RSL
L2C_COP0_MAP2424               0x0001180080944BC0  RSL
L2C_COP0_MAP2425               0x0001180080944BC8  RSL
L2C_COP0_MAP2426               0x0001180080944BD0  RSL
L2C_COP0_MAP2427               0x0001180080944BD8  RSL
L2C_COP0_MAP2428               0x0001180080944BE0  RSL
L2C_COP0_MAP2429               0x0001180080944BE8  RSL
L2C_COP0_MAP2430               0x0001180080944BF0  RSL
L2C_COP0_MAP2431               0x0001180080944BF8  RSL
L2C_COP0_MAP2432               0x0001180080944C00  RSL
L2C_COP0_MAP2433               0x0001180080944C08  RSL
L2C_COP0_MAP2434               0x0001180080944C10  RSL
L2C_COP0_MAP2435               0x0001180080944C18  RSL
L2C_COP0_MAP2436               0x0001180080944C20  RSL
L2C_COP0_MAP2437               0x0001180080944C28  RSL
L2C_COP0_MAP2438               0x0001180080944C30  RSL
L2C_COP0_MAP2439               0x0001180080944C38  RSL
L2C_COP0_MAP2440               0x0001180080944C40  RSL
L2C_COP0_MAP2441               0x0001180080944C48  RSL
L2C_COP0_MAP2442               0x0001180080944C50  RSL
L2C_COP0_MAP2443               0x0001180080944C58  RSL
L2C_COP0_MAP2444               0x0001180080944C60  RSL
L2C_COP0_MAP2445               0x0001180080944C68  RSL
L2C_COP0_MAP2446               0x0001180080944C70  RSL
L2C_COP0_MAP2447               0x0001180080944C78  RSL
L2C_COP0_MAP2448               0x0001180080944C80  RSL
L2C_COP0_MAP2449               0x0001180080944C88  RSL
L2C_COP0_MAP2450               0x0001180080944C90  RSL
L2C_COP0_MAP2451               0x0001180080944C98  RSL
L2C_COP0_MAP2452               0x0001180080944CA0  RSL
L2C_COP0_MAP2453               0x0001180080944CA8  RSL
L2C_COP0_MAP2454               0x0001180080944CB0  RSL
L2C_COP0_MAP2455               0x0001180080944CB8  RSL
L2C_COP0_MAP2456               0x0001180080944CC0  RSL
L2C_COP0_MAP2457               0x0001180080944CC8  RSL
L2C_COP0_MAP2458               0x0001180080944CD0  RSL
L2C_COP0_MAP2459               0x0001180080944CD8  RSL
L2C_COP0_MAP2460               0x0001180080944CE0  RSL
L2C_COP0_MAP2461               0x0001180080944CE8  RSL
L2C_COP0_MAP2462               0x0001180080944CF0  RSL
L2C_COP0_MAP2463               0x0001180080944CF8  RSL
L2C_COP0_MAP2464               0x0001180080944D00  RSL
L2C_COP0_MAP2465               0x0001180080944D08  RSL
L2C_COP0_MAP2466               0x0001180080944D10  RSL
L2C_COP0_MAP2467               0x0001180080944D18  RSL
L2C_COP0_MAP2468               0x0001180080944D20  RSL
L2C_COP0_MAP2469               0x0001180080944D28  RSL
L2C_COP0_MAP2470               0x0001180080944D30  RSL
L2C_COP0_MAP2471               0x0001180080944D38  RSL
L2C_COP0_MAP2472               0x0001180080944D40  RSL
L2C_COP0_MAP2473               0x0001180080944D48  RSL
L2C_COP0_MAP2474               0x0001180080944D50  RSL
L2C_COP0_MAP2475               0x0001180080944D58  RSL
L2C_COP0_MAP2476               0x0001180080944D60  RSL
L2C_COP0_MAP2477               0x0001180080944D68  RSL
L2C_COP0_MAP2478               0x0001180080944D70  RSL
L2C_COP0_MAP2479               0x0001180080944D78  RSL
L2C_COP0_MAP2480               0x0001180080944D80  RSL
L2C_COP0_MAP2481               0x0001180080944D88  RSL
L2C_COP0_MAP2482               0x0001180080944D90  RSL
L2C_COP0_MAP2483               0x0001180080944D98  RSL
L2C_COP0_MAP2484               0x0001180080944DA0  RSL
L2C_COP0_MAP2485               0x0001180080944DA8  RSL
L2C_COP0_MAP2486               0x0001180080944DB0  RSL
L2C_COP0_MAP2487               0x0001180080944DB8  RSL
L2C_COP0_MAP2488               0x0001180080944DC0  RSL
L2C_COP0_MAP2489               0x0001180080944DC8  RSL
L2C_COP0_MAP2490               0x0001180080944DD0  RSL
L2C_COP0_MAP2491               0x0001180080944DD8  RSL
L2C_COP0_MAP2492               0x0001180080944DE0  RSL
L2C_COP0_MAP2493               0x0001180080944DE8  RSL
L2C_COP0_MAP2494               0x0001180080944DF0  RSL
L2C_COP0_MAP2495               0x0001180080944DF8  RSL
L2C_COP0_MAP2496               0x0001180080944E00  RSL
L2C_COP0_MAP2497               0x0001180080944E08  RSL
L2C_COP0_MAP2498               0x0001180080944E10  RSL
L2C_COP0_MAP2499               0x0001180080944E18  RSL
L2C_COP0_MAP2500               0x0001180080944E20  RSL
L2C_COP0_MAP2501               0x0001180080944E28  RSL
L2C_COP0_MAP2502               0x0001180080944E30  RSL
L2C_COP0_MAP2503               0x0001180080944E38  RSL
L2C_COP0_MAP2504               0x0001180080944E40  RSL
L2C_COP0_MAP2505               0x0001180080944E48  RSL
L2C_COP0_MAP2506               0x0001180080944E50  RSL
L2C_COP0_MAP2507               0x0001180080944E58  RSL
L2C_COP0_MAP2508               0x0001180080944E60  RSL
L2C_COP0_MAP2509               0x0001180080944E68  RSL
L2C_COP0_MAP2510               0x0001180080944E70  RSL
L2C_COP0_MAP2511               0x0001180080944E78  RSL
L2C_COP0_MAP2512               0x0001180080944E80  RSL
L2C_COP0_MAP2513               0x0001180080944E88  RSL
L2C_COP0_MAP2514               0x0001180080944E90  RSL
L2C_COP0_MAP2515               0x0001180080944E98  RSL
L2C_COP0_MAP2516               0x0001180080944EA0  RSL
L2C_COP0_MAP2517               0x0001180080944EA8  RSL
L2C_COP0_MAP2518               0x0001180080944EB0  RSL
L2C_COP0_MAP2519               0x0001180080944EB8  RSL
L2C_COP0_MAP2520               0x0001180080944EC0  RSL
L2C_COP0_MAP2521               0x0001180080944EC8  RSL
L2C_COP0_MAP2522               0x0001180080944ED0  RSL
L2C_COP0_MAP2523               0x0001180080944ED8  RSL
L2C_COP0_MAP2524               0x0001180080944EE0  RSL
L2C_COP0_MAP2525               0x0001180080944EE8  RSL
L2C_COP0_MAP2526               0x0001180080944EF0  RSL
L2C_COP0_MAP2527               0x0001180080944EF8  RSL
L2C_COP0_MAP2528               0x0001180080944F00  RSL
L2C_COP0_MAP2529               0x0001180080944F08  RSL
L2C_COP0_MAP2530               0x0001180080944F10  RSL
L2C_COP0_MAP2531               0x0001180080944F18  RSL
L2C_COP0_MAP2532               0x0001180080944F20  RSL
L2C_COP0_MAP2533               0x0001180080944F28  RSL
L2C_COP0_MAP2534               0x0001180080944F30  RSL
L2C_COP0_MAP2535               0x0001180080944F38  RSL
L2C_COP0_MAP2536               0x0001180080944F40  RSL
L2C_COP0_MAP2537               0x0001180080944F48  RSL
L2C_COP0_MAP2538               0x0001180080944F50  RSL
L2C_COP0_MAP2539               0x0001180080944F58  RSL
L2C_COP0_MAP2540               0x0001180080944F60  RSL
L2C_COP0_MAP2541               0x0001180080944F68  RSL
L2C_COP0_MAP2542               0x0001180080944F70  RSL
L2C_COP0_MAP2543               0x0001180080944F78  RSL
L2C_COP0_MAP2544               0x0001180080944F80  RSL
L2C_COP0_MAP2545               0x0001180080944F88  RSL
L2C_COP0_MAP2546               0x0001180080944F90  RSL
L2C_COP0_MAP2547               0x0001180080944F98  RSL
L2C_COP0_MAP2548               0x0001180080944FA0  RSL
L2C_COP0_MAP2549               0x0001180080944FA8  RSL
L2C_COP0_MAP2550               0x0001180080944FB0  RSL
L2C_COP0_MAP2551               0x0001180080944FB8  RSL
L2C_COP0_MAP2552               0x0001180080944FC0  RSL
L2C_COP0_MAP2553               0x0001180080944FC8  RSL
L2C_COP0_MAP2554               0x0001180080944FD0  RSL
L2C_COP0_MAP2555               0x0001180080944FD8  RSL
L2C_COP0_MAP2556               0x0001180080944FE0  RSL
L2C_COP0_MAP2557               0x0001180080944FE8  RSL
L2C_COP0_MAP2558               0x0001180080944FF0  RSL
L2C_COP0_MAP2559               0x0001180080944FF8  RSL
L2C_COP0_MAP2560               0x0001180080945000  RSL
L2C_COP0_MAP2561               0x0001180080945008  RSL
L2C_COP0_MAP2562               0x0001180080945010  RSL
L2C_COP0_MAP2563               0x0001180080945018  RSL
L2C_COP0_MAP2564               0x0001180080945020  RSL
L2C_COP0_MAP2565               0x0001180080945028  RSL
L2C_COP0_MAP2566               0x0001180080945030  RSL
L2C_COP0_MAP2567               0x0001180080945038  RSL
L2C_COP0_MAP2568               0x0001180080945040  RSL
L2C_COP0_MAP2569               0x0001180080945048  RSL
L2C_COP0_MAP2570               0x0001180080945050  RSL
L2C_COP0_MAP2571               0x0001180080945058  RSL
L2C_COP0_MAP2572               0x0001180080945060  RSL
L2C_COP0_MAP2573               0x0001180080945068  RSL
L2C_COP0_MAP2574               0x0001180080945070  RSL
L2C_COP0_MAP2575               0x0001180080945078  RSL
L2C_COP0_MAP2576               0x0001180080945080  RSL
L2C_COP0_MAP2577               0x0001180080945088  RSL
L2C_COP0_MAP2578               0x0001180080945090  RSL
L2C_COP0_MAP2579               0x0001180080945098  RSL
L2C_COP0_MAP2580               0x00011800809450A0  RSL
L2C_COP0_MAP2581               0x00011800809450A8  RSL
L2C_COP0_MAP2582               0x00011800809450B0  RSL
L2C_COP0_MAP2583               0x00011800809450B8  RSL
L2C_COP0_MAP2584               0x00011800809450C0  RSL
L2C_COP0_MAP2585               0x00011800809450C8  RSL
L2C_COP0_MAP2586               0x00011800809450D0  RSL
L2C_COP0_MAP2587               0x00011800809450D8  RSL
L2C_COP0_MAP2588               0x00011800809450E0  RSL
L2C_COP0_MAP2589               0x00011800809450E8  RSL
L2C_COP0_MAP2590               0x00011800809450F0  RSL
L2C_COP0_MAP2591               0x00011800809450F8  RSL
L2C_COP0_MAP2592               0x0001180080945100  RSL
L2C_COP0_MAP2593               0x0001180080945108  RSL
L2C_COP0_MAP2594               0x0001180080945110  RSL
L2C_COP0_MAP2595               0x0001180080945118  RSL
L2C_COP0_MAP2596               0x0001180080945120  RSL
L2C_COP0_MAP2597               0x0001180080945128  RSL
L2C_COP0_MAP2598               0x0001180080945130  RSL
L2C_COP0_MAP2599               0x0001180080945138  RSL
L2C_COP0_MAP2600               0x0001180080945140  RSL
L2C_COP0_MAP2601               0x0001180080945148  RSL
L2C_COP0_MAP2602               0x0001180080945150  RSL
L2C_COP0_MAP2603               0x0001180080945158  RSL
L2C_COP0_MAP2604               0x0001180080945160  RSL
L2C_COP0_MAP2605               0x0001180080945168  RSL
L2C_COP0_MAP2606               0x0001180080945170  RSL
L2C_COP0_MAP2607               0x0001180080945178  RSL
L2C_COP0_MAP2608               0x0001180080945180  RSL
L2C_COP0_MAP2609               0x0001180080945188  RSL
L2C_COP0_MAP2610               0x0001180080945190  RSL
L2C_COP0_MAP2611               0x0001180080945198  RSL
L2C_COP0_MAP2612               0x00011800809451A0  RSL
L2C_COP0_MAP2613               0x00011800809451A8  RSL
L2C_COP0_MAP2614               0x00011800809451B0  RSL
L2C_COP0_MAP2615               0x00011800809451B8  RSL
L2C_COP0_MAP2616               0x00011800809451C0  RSL
L2C_COP0_MAP2617               0x00011800809451C8  RSL
L2C_COP0_MAP2618               0x00011800809451D0  RSL
L2C_COP0_MAP2619               0x00011800809451D8  RSL
L2C_COP0_MAP2620               0x00011800809451E0  RSL
L2C_COP0_MAP2621               0x00011800809451E8  RSL
L2C_COP0_MAP2622               0x00011800809451F0  RSL
L2C_COP0_MAP2623               0x00011800809451F8  RSL
L2C_COP0_MAP2624               0x0001180080945200  RSL
L2C_COP0_MAP2625               0x0001180080945208  RSL
L2C_COP0_MAP2626               0x0001180080945210  RSL
L2C_COP0_MAP2627               0x0001180080945218  RSL
L2C_COP0_MAP2628               0x0001180080945220  RSL
L2C_COP0_MAP2629               0x0001180080945228  RSL
L2C_COP0_MAP2630               0x0001180080945230  RSL
L2C_COP0_MAP2631               0x0001180080945238  RSL
L2C_COP0_MAP2632               0x0001180080945240  RSL
L2C_COP0_MAP2633               0x0001180080945248  RSL
L2C_COP0_MAP2634               0x0001180080945250  RSL
L2C_COP0_MAP2635               0x0001180080945258  RSL
L2C_COP0_MAP2636               0x0001180080945260  RSL
L2C_COP0_MAP2637               0x0001180080945268  RSL
L2C_COP0_MAP2638               0x0001180080945270  RSL
L2C_COP0_MAP2639               0x0001180080945278  RSL
L2C_COP0_MAP2640               0x0001180080945280  RSL
L2C_COP0_MAP2641               0x0001180080945288  RSL
L2C_COP0_MAP2642               0x0001180080945290  RSL
L2C_COP0_MAP2643               0x0001180080945298  RSL
L2C_COP0_MAP2644               0x00011800809452A0  RSL
L2C_COP0_MAP2645               0x00011800809452A8  RSL
L2C_COP0_MAP2646               0x00011800809452B0  RSL
L2C_COP0_MAP2647               0x00011800809452B8  RSL
L2C_COP0_MAP2648               0x00011800809452C0  RSL
L2C_COP0_MAP2649               0x00011800809452C8  RSL
L2C_COP0_MAP2650               0x00011800809452D0  RSL
L2C_COP0_MAP2651               0x00011800809452D8  RSL
L2C_COP0_MAP2652               0x00011800809452E0  RSL
L2C_COP0_MAP2653               0x00011800809452E8  RSL
L2C_COP0_MAP2654               0x00011800809452F0  RSL
L2C_COP0_MAP2655               0x00011800809452F8  RSL
L2C_COP0_MAP2656               0x0001180080945300  RSL
L2C_COP0_MAP2657               0x0001180080945308  RSL
L2C_COP0_MAP2658               0x0001180080945310  RSL
L2C_COP0_MAP2659               0x0001180080945318  RSL
L2C_COP0_MAP2660               0x0001180080945320  RSL
L2C_COP0_MAP2661               0x0001180080945328  RSL
L2C_COP0_MAP2662               0x0001180080945330  RSL
L2C_COP0_MAP2663               0x0001180080945338  RSL
L2C_COP0_MAP2664               0x0001180080945340  RSL
L2C_COP0_MAP2665               0x0001180080945348  RSL
L2C_COP0_MAP2666               0x0001180080945350  RSL
L2C_COP0_MAP2667               0x0001180080945358  RSL
L2C_COP0_MAP2668               0x0001180080945360  RSL
L2C_COP0_MAP2669               0x0001180080945368  RSL
L2C_COP0_MAP2670               0x0001180080945370  RSL
L2C_COP0_MAP2671               0x0001180080945378  RSL
L2C_COP0_MAP2672               0x0001180080945380  RSL
L2C_COP0_MAP2673               0x0001180080945388  RSL
L2C_COP0_MAP2674               0x0001180080945390  RSL
L2C_COP0_MAP2675               0x0001180080945398  RSL
L2C_COP0_MAP2676               0x00011800809453A0  RSL
L2C_COP0_MAP2677               0x00011800809453A8  RSL
L2C_COP0_MAP2678               0x00011800809453B0  RSL
L2C_COP0_MAP2679               0x00011800809453B8  RSL
L2C_COP0_MAP2680               0x00011800809453C0  RSL
L2C_COP0_MAP2681               0x00011800809453C8  RSL
L2C_COP0_MAP2682               0x00011800809453D0  RSL
L2C_COP0_MAP2683               0x00011800809453D8  RSL
L2C_COP0_MAP2684               0x00011800809453E0  RSL
L2C_COP0_MAP2685               0x00011800809453E8  RSL
L2C_COP0_MAP2686               0x00011800809453F0  RSL
L2C_COP0_MAP2687               0x00011800809453F8  RSL
L2C_COP0_MAP2688               0x0001180080945400  RSL
L2C_COP0_MAP2689               0x0001180080945408  RSL
L2C_COP0_MAP2690               0x0001180080945410  RSL
L2C_COP0_MAP2691               0x0001180080945418  RSL
L2C_COP0_MAP2692               0x0001180080945420  RSL
L2C_COP0_MAP2693               0x0001180080945428  RSL
L2C_COP0_MAP2694               0x0001180080945430  RSL
L2C_COP0_MAP2695               0x0001180080945438  RSL
L2C_COP0_MAP2696               0x0001180080945440  RSL
L2C_COP0_MAP2697               0x0001180080945448  RSL
L2C_COP0_MAP2698               0x0001180080945450  RSL
L2C_COP0_MAP2699               0x0001180080945458  RSL
L2C_COP0_MAP2700               0x0001180080945460  RSL
L2C_COP0_MAP2701               0x0001180080945468  RSL
L2C_COP0_MAP2702               0x0001180080945470  RSL
L2C_COP0_MAP2703               0x0001180080945478  RSL
L2C_COP0_MAP2704               0x0001180080945480  RSL
L2C_COP0_MAP2705               0x0001180080945488  RSL
L2C_COP0_MAP2706               0x0001180080945490  RSL
L2C_COP0_MAP2707               0x0001180080945498  RSL
L2C_COP0_MAP2708               0x00011800809454A0  RSL
L2C_COP0_MAP2709               0x00011800809454A8  RSL
L2C_COP0_MAP2710               0x00011800809454B0  RSL
L2C_COP0_MAP2711               0x00011800809454B8  RSL
L2C_COP0_MAP2712               0x00011800809454C0  RSL
L2C_COP0_MAP2713               0x00011800809454C8  RSL
L2C_COP0_MAP2714               0x00011800809454D0  RSL
L2C_COP0_MAP2715               0x00011800809454D8  RSL
L2C_COP0_MAP2716               0x00011800809454E0  RSL
L2C_COP0_MAP2717               0x00011800809454E8  RSL
L2C_COP0_MAP2718               0x00011800809454F0  RSL
L2C_COP0_MAP2719               0x00011800809454F8  RSL
L2C_COP0_MAP2720               0x0001180080945500  RSL
L2C_COP0_MAP2721               0x0001180080945508  RSL
L2C_COP0_MAP2722               0x0001180080945510  RSL
L2C_COP0_MAP2723               0x0001180080945518  RSL
L2C_COP0_MAP2724               0x0001180080945520  RSL
L2C_COP0_MAP2725               0x0001180080945528  RSL
L2C_COP0_MAP2726               0x0001180080945530  RSL
L2C_COP0_MAP2727               0x0001180080945538  RSL
L2C_COP0_MAP2728               0x0001180080945540  RSL
L2C_COP0_MAP2729               0x0001180080945548  RSL
L2C_COP0_MAP2730               0x0001180080945550  RSL
L2C_COP0_MAP2731               0x0001180080945558  RSL
L2C_COP0_MAP2732               0x0001180080945560  RSL
L2C_COP0_MAP2733               0x0001180080945568  RSL
L2C_COP0_MAP2734               0x0001180080945570  RSL
L2C_COP0_MAP2735               0x0001180080945578  RSL
L2C_COP0_MAP2736               0x0001180080945580  RSL
L2C_COP0_MAP2737               0x0001180080945588  RSL
L2C_COP0_MAP2738               0x0001180080945590  RSL
L2C_COP0_MAP2739               0x0001180080945598  RSL
L2C_COP0_MAP2740               0x00011800809455A0  RSL
L2C_COP0_MAP2741               0x00011800809455A8  RSL
L2C_COP0_MAP2742               0x00011800809455B0  RSL
L2C_COP0_MAP2743               0x00011800809455B8  RSL
L2C_COP0_MAP2744               0x00011800809455C0  RSL
L2C_COP0_MAP2745               0x00011800809455C8  RSL
L2C_COP0_MAP2746               0x00011800809455D0  RSL
L2C_COP0_MAP2747               0x00011800809455D8  RSL
L2C_COP0_MAP2748               0x00011800809455E0  RSL
L2C_COP0_MAP2749               0x00011800809455E8  RSL
L2C_COP0_MAP2750               0x00011800809455F0  RSL
L2C_COP0_MAP2751               0x00011800809455F8  RSL
L2C_COP0_MAP2752               0x0001180080945600  RSL
L2C_COP0_MAP2753               0x0001180080945608  RSL
L2C_COP0_MAP2754               0x0001180080945610  RSL
L2C_COP0_MAP2755               0x0001180080945618  RSL
L2C_COP0_MAP2756               0x0001180080945620  RSL
L2C_COP0_MAP2757               0x0001180080945628  RSL
L2C_COP0_MAP2758               0x0001180080945630  RSL
L2C_COP0_MAP2759               0x0001180080945638  RSL
L2C_COP0_MAP2760               0x0001180080945640  RSL
L2C_COP0_MAP2761               0x0001180080945648  RSL
L2C_COP0_MAP2762               0x0001180080945650  RSL
L2C_COP0_MAP2763               0x0001180080945658  RSL
L2C_COP0_MAP2764               0x0001180080945660  RSL
L2C_COP0_MAP2765               0x0001180080945668  RSL
L2C_COP0_MAP2766               0x0001180080945670  RSL
L2C_COP0_MAP2767               0x0001180080945678  RSL
L2C_COP0_MAP2768               0x0001180080945680  RSL
L2C_COP0_MAP2769               0x0001180080945688  RSL
L2C_COP0_MAP2770               0x0001180080945690  RSL
L2C_COP0_MAP2771               0x0001180080945698  RSL
L2C_COP0_MAP2772               0x00011800809456A0  RSL
L2C_COP0_MAP2773               0x00011800809456A8  RSL
L2C_COP0_MAP2774               0x00011800809456B0  RSL
L2C_COP0_MAP2775               0x00011800809456B8  RSL
L2C_COP0_MAP2776               0x00011800809456C0  RSL
L2C_COP0_MAP2777               0x00011800809456C8  RSL
L2C_COP0_MAP2778               0x00011800809456D0  RSL
L2C_COP0_MAP2779               0x00011800809456D8  RSL
L2C_COP0_MAP2780               0x00011800809456E0  RSL
L2C_COP0_MAP2781               0x00011800809456E8  RSL
L2C_COP0_MAP2782               0x00011800809456F0  RSL
L2C_COP0_MAP2783               0x00011800809456F8  RSL
L2C_COP0_MAP2784               0x0001180080945700  RSL
L2C_COP0_MAP2785               0x0001180080945708  RSL
L2C_COP0_MAP2786               0x0001180080945710  RSL
L2C_COP0_MAP2787               0x0001180080945718  RSL
L2C_COP0_MAP2788               0x0001180080945720  RSL
L2C_COP0_MAP2789               0x0001180080945728  RSL
L2C_COP0_MAP2790               0x0001180080945730  RSL
L2C_COP0_MAP2791               0x0001180080945738  RSL
L2C_COP0_MAP2792               0x0001180080945740  RSL
L2C_COP0_MAP2793               0x0001180080945748  RSL
L2C_COP0_MAP2794               0x0001180080945750  RSL
L2C_COP0_MAP2795               0x0001180080945758  RSL
L2C_COP0_MAP2796               0x0001180080945760  RSL
L2C_COP0_MAP2797               0x0001180080945768  RSL
L2C_COP0_MAP2798               0x0001180080945770  RSL
L2C_COP0_MAP2799               0x0001180080945778  RSL
L2C_COP0_MAP2800               0x0001180080945780  RSL
L2C_COP0_MAP2801               0x0001180080945788  RSL
L2C_COP0_MAP2802               0x0001180080945790  RSL
L2C_COP0_MAP2803               0x0001180080945798  RSL
L2C_COP0_MAP2804               0x00011800809457A0  RSL
L2C_COP0_MAP2805               0x00011800809457A8  RSL
L2C_COP0_MAP2806               0x00011800809457B0  RSL
L2C_COP0_MAP2807               0x00011800809457B8  RSL
L2C_COP0_MAP2808               0x00011800809457C0  RSL
L2C_COP0_MAP2809               0x00011800809457C8  RSL
L2C_COP0_MAP2810               0x00011800809457D0  RSL
L2C_COP0_MAP2811               0x00011800809457D8  RSL
L2C_COP0_MAP2812               0x00011800809457E0  RSL
L2C_COP0_MAP2813               0x00011800809457E8  RSL
L2C_COP0_MAP2814               0x00011800809457F0  RSL
L2C_COP0_MAP2815               0x00011800809457F8  RSL
L2C_COP0_MAP2816               0x0001180080945800  RSL
L2C_COP0_MAP2817               0x0001180080945808  RSL
L2C_COP0_MAP2818               0x0001180080945810  RSL
L2C_COP0_MAP2819               0x0001180080945818  RSL
L2C_COP0_MAP2820               0x0001180080945820  RSL
L2C_COP0_MAP2821               0x0001180080945828  RSL
L2C_COP0_MAP2822               0x0001180080945830  RSL
L2C_COP0_MAP2823               0x0001180080945838  RSL
L2C_COP0_MAP2824               0x0001180080945840  RSL
L2C_COP0_MAP2825               0x0001180080945848  RSL
L2C_COP0_MAP2826               0x0001180080945850  RSL
L2C_COP0_MAP2827               0x0001180080945858  RSL
L2C_COP0_MAP2828               0x0001180080945860  RSL
L2C_COP0_MAP2829               0x0001180080945868  RSL
L2C_COP0_MAP2830               0x0001180080945870  RSL
L2C_COP0_MAP2831               0x0001180080945878  RSL
L2C_COP0_MAP2832               0x0001180080945880  RSL
L2C_COP0_MAP2833               0x0001180080945888  RSL
L2C_COP0_MAP2834               0x0001180080945890  RSL
L2C_COP0_MAP2835               0x0001180080945898  RSL
L2C_COP0_MAP2836               0x00011800809458A0  RSL
L2C_COP0_MAP2837               0x00011800809458A8  RSL
L2C_COP0_MAP2838               0x00011800809458B0  RSL
L2C_COP0_MAP2839               0x00011800809458B8  RSL
L2C_COP0_MAP2840               0x00011800809458C0  RSL
L2C_COP0_MAP2841               0x00011800809458C8  RSL
L2C_COP0_MAP2842               0x00011800809458D0  RSL
L2C_COP0_MAP2843               0x00011800809458D8  RSL
L2C_COP0_MAP2844               0x00011800809458E0  RSL
L2C_COP0_MAP2845               0x00011800809458E8  RSL
L2C_COP0_MAP2846               0x00011800809458F0  RSL
L2C_COP0_MAP2847               0x00011800809458F8  RSL
L2C_COP0_MAP2848               0x0001180080945900  RSL
L2C_COP0_MAP2849               0x0001180080945908  RSL
L2C_COP0_MAP2850               0x0001180080945910  RSL
L2C_COP0_MAP2851               0x0001180080945918  RSL
L2C_COP0_MAP2852               0x0001180080945920  RSL
L2C_COP0_MAP2853               0x0001180080945928  RSL
L2C_COP0_MAP2854               0x0001180080945930  RSL
L2C_COP0_MAP2855               0x0001180080945938  RSL
L2C_COP0_MAP2856               0x0001180080945940  RSL
L2C_COP0_MAP2857               0x0001180080945948  RSL
L2C_COP0_MAP2858               0x0001180080945950  RSL
L2C_COP0_MAP2859               0x0001180080945958  RSL
L2C_COP0_MAP2860               0x0001180080945960  RSL
L2C_COP0_MAP2861               0x0001180080945968  RSL
L2C_COP0_MAP2862               0x0001180080945970  RSL
L2C_COP0_MAP2863               0x0001180080945978  RSL
L2C_COP0_MAP2864               0x0001180080945980  RSL
L2C_COP0_MAP2865               0x0001180080945988  RSL
L2C_COP0_MAP2866               0x0001180080945990  RSL
L2C_COP0_MAP2867               0x0001180080945998  RSL
L2C_COP0_MAP2868               0x00011800809459A0  RSL
L2C_COP0_MAP2869               0x00011800809459A8  RSL
L2C_COP0_MAP2870               0x00011800809459B0  RSL
L2C_COP0_MAP2871               0x00011800809459B8  RSL
L2C_COP0_MAP2872               0x00011800809459C0  RSL
L2C_COP0_MAP2873               0x00011800809459C8  RSL
L2C_COP0_MAP2874               0x00011800809459D0  RSL
L2C_COP0_MAP2875               0x00011800809459D8  RSL
L2C_COP0_MAP2876               0x00011800809459E0  RSL
L2C_COP0_MAP2877               0x00011800809459E8  RSL
L2C_COP0_MAP2878               0x00011800809459F0  RSL
L2C_COP0_MAP2879               0x00011800809459F8  RSL
L2C_COP0_MAP2880               0x0001180080945A00  RSL
L2C_COP0_MAP2881               0x0001180080945A08  RSL
L2C_COP0_MAP2882               0x0001180080945A10  RSL
L2C_COP0_MAP2883               0x0001180080945A18  RSL
L2C_COP0_MAP2884               0x0001180080945A20  RSL
L2C_COP0_MAP2885               0x0001180080945A28  RSL
L2C_COP0_MAP2886               0x0001180080945A30  RSL
L2C_COP0_MAP2887               0x0001180080945A38  RSL
L2C_COP0_MAP2888               0x0001180080945A40  RSL
L2C_COP0_MAP2889               0x0001180080945A48  RSL
L2C_COP0_MAP2890               0x0001180080945A50  RSL
L2C_COP0_MAP2891               0x0001180080945A58  RSL
L2C_COP0_MAP2892               0x0001180080945A60  RSL
L2C_COP0_MAP2893               0x0001180080945A68  RSL
L2C_COP0_MAP2894               0x0001180080945A70  RSL
L2C_COP0_MAP2895               0x0001180080945A78  RSL
L2C_COP0_MAP2896               0x0001180080945A80  RSL
L2C_COP0_MAP2897               0x0001180080945A88  RSL
L2C_COP0_MAP2898               0x0001180080945A90  RSL
L2C_COP0_MAP2899               0x0001180080945A98  RSL
L2C_COP0_MAP2900               0x0001180080945AA0  RSL
L2C_COP0_MAP2901               0x0001180080945AA8  RSL
L2C_COP0_MAP2902               0x0001180080945AB0  RSL
L2C_COP0_MAP2903               0x0001180080945AB8  RSL
L2C_COP0_MAP2904               0x0001180080945AC0  RSL
L2C_COP0_MAP2905               0x0001180080945AC8  RSL
L2C_COP0_MAP2906               0x0001180080945AD0  RSL
L2C_COP0_MAP2907               0x0001180080945AD8  RSL
L2C_COP0_MAP2908               0x0001180080945AE0  RSL
L2C_COP0_MAP2909               0x0001180080945AE8  RSL
L2C_COP0_MAP2910               0x0001180080945AF0  RSL
L2C_COP0_MAP2911               0x0001180080945AF8  RSL
L2C_COP0_MAP2912               0x0001180080945B00  RSL
L2C_COP0_MAP2913               0x0001180080945B08  RSL
L2C_COP0_MAP2914               0x0001180080945B10  RSL
L2C_COP0_MAP2915               0x0001180080945B18  RSL
L2C_COP0_MAP2916               0x0001180080945B20  RSL
L2C_COP0_MAP2917               0x0001180080945B28  RSL
L2C_COP0_MAP2918               0x0001180080945B30  RSL
L2C_COP0_MAP2919               0x0001180080945B38  RSL
L2C_COP0_MAP2920               0x0001180080945B40  RSL
L2C_COP0_MAP2921               0x0001180080945B48  RSL
L2C_COP0_MAP2922               0x0001180080945B50  RSL
L2C_COP0_MAP2923               0x0001180080945B58  RSL
L2C_COP0_MAP2924               0x0001180080945B60  RSL
L2C_COP0_MAP2925               0x0001180080945B68  RSL
L2C_COP0_MAP2926               0x0001180080945B70  RSL
L2C_COP0_MAP2927               0x0001180080945B78  RSL
L2C_COP0_MAP2928               0x0001180080945B80  RSL
L2C_COP0_MAP2929               0x0001180080945B88  RSL
L2C_COP0_MAP2930               0x0001180080945B90  RSL
L2C_COP0_MAP2931               0x0001180080945B98  RSL
L2C_COP0_MAP2932               0x0001180080945BA0  RSL
L2C_COP0_MAP2933               0x0001180080945BA8  RSL
L2C_COP0_MAP2934               0x0001180080945BB0  RSL
L2C_COP0_MAP2935               0x0001180080945BB8  RSL
L2C_COP0_MAP2936               0x0001180080945BC0  RSL
L2C_COP0_MAP2937               0x0001180080945BC8  RSL
L2C_COP0_MAP2938               0x0001180080945BD0  RSL
L2C_COP0_MAP2939               0x0001180080945BD8  RSL
L2C_COP0_MAP2940               0x0001180080945BE0  RSL
L2C_COP0_MAP2941               0x0001180080945BE8  RSL
L2C_COP0_MAP2942               0x0001180080945BF0  RSL
L2C_COP0_MAP2943               0x0001180080945BF8  RSL
L2C_COP0_MAP2944               0x0001180080945C00  RSL
L2C_COP0_MAP2945               0x0001180080945C08  RSL
L2C_COP0_MAP2946               0x0001180080945C10  RSL
L2C_COP0_MAP2947               0x0001180080945C18  RSL
L2C_COP0_MAP2948               0x0001180080945C20  RSL
L2C_COP0_MAP2949               0x0001180080945C28  RSL
L2C_COP0_MAP2950               0x0001180080945C30  RSL
L2C_COP0_MAP2951               0x0001180080945C38  RSL
L2C_COP0_MAP2952               0x0001180080945C40  RSL
L2C_COP0_MAP2953               0x0001180080945C48  RSL
L2C_COP0_MAP2954               0x0001180080945C50  RSL
L2C_COP0_MAP2955               0x0001180080945C58  RSL
L2C_COP0_MAP2956               0x0001180080945C60  RSL
L2C_COP0_MAP2957               0x0001180080945C68  RSL
L2C_COP0_MAP2958               0x0001180080945C70  RSL
L2C_COP0_MAP2959               0x0001180080945C78  RSL
L2C_COP0_MAP2960               0x0001180080945C80  RSL
L2C_COP0_MAP2961               0x0001180080945C88  RSL
L2C_COP0_MAP2962               0x0001180080945C90  RSL
L2C_COP0_MAP2963               0x0001180080945C98  RSL
L2C_COP0_MAP2964               0x0001180080945CA0  RSL
L2C_COP0_MAP2965               0x0001180080945CA8  RSL
L2C_COP0_MAP2966               0x0001180080945CB0  RSL
L2C_COP0_MAP2967               0x0001180080945CB8  RSL
L2C_COP0_MAP2968               0x0001180080945CC0  RSL
L2C_COP0_MAP2969               0x0001180080945CC8  RSL
L2C_COP0_MAP2970               0x0001180080945CD0  RSL
L2C_COP0_MAP2971               0x0001180080945CD8  RSL
L2C_COP0_MAP2972               0x0001180080945CE0  RSL
L2C_COP0_MAP2973               0x0001180080945CE8  RSL
L2C_COP0_MAP2974               0x0001180080945CF0  RSL
L2C_COP0_MAP2975               0x0001180080945CF8  RSL
L2C_COP0_MAP2976               0x0001180080945D00  RSL
L2C_COP0_MAP2977               0x0001180080945D08  RSL
L2C_COP0_MAP2978               0x0001180080945D10  RSL
L2C_COP0_MAP2979               0x0001180080945D18  RSL
L2C_COP0_MAP2980               0x0001180080945D20  RSL
L2C_COP0_MAP2981               0x0001180080945D28  RSL
L2C_COP0_MAP2982               0x0001180080945D30  RSL
L2C_COP0_MAP2983               0x0001180080945D38  RSL
L2C_COP0_MAP2984               0x0001180080945D40  RSL
L2C_COP0_MAP2985               0x0001180080945D48  RSL
L2C_COP0_MAP2986               0x0001180080945D50  RSL
L2C_COP0_MAP2987               0x0001180080945D58  RSL
L2C_COP0_MAP2988               0x0001180080945D60  RSL
L2C_COP0_MAP2989               0x0001180080945D68  RSL
L2C_COP0_MAP2990               0x0001180080945D70  RSL
L2C_COP0_MAP2991               0x0001180080945D78  RSL
L2C_COP0_MAP2992               0x0001180080945D80  RSL
L2C_COP0_MAP2993               0x0001180080945D88  RSL
L2C_COP0_MAP2994               0x0001180080945D90  RSL
L2C_COP0_MAP2995               0x0001180080945D98  RSL
L2C_COP0_MAP2996               0x0001180080945DA0  RSL
L2C_COP0_MAP2997               0x0001180080945DA8  RSL
L2C_COP0_MAP2998               0x0001180080945DB0  RSL
L2C_COP0_MAP2999               0x0001180080945DB8  RSL
L2C_COP0_MAP3000               0x0001180080945DC0  RSL
L2C_COP0_MAP3001               0x0001180080945DC8  RSL
L2C_COP0_MAP3002               0x0001180080945DD0  RSL
L2C_COP0_MAP3003               0x0001180080945DD8  RSL
L2C_COP0_MAP3004               0x0001180080945DE0  RSL
L2C_COP0_MAP3005               0x0001180080945DE8  RSL
L2C_COP0_MAP3006               0x0001180080945DF0  RSL
L2C_COP0_MAP3007               0x0001180080945DF8  RSL
L2C_COP0_MAP3008               0x0001180080945E00  RSL
L2C_COP0_MAP3009               0x0001180080945E08  RSL
L2C_COP0_MAP3010               0x0001180080945E10  RSL
L2C_COP0_MAP3011               0x0001180080945E18  RSL
L2C_COP0_MAP3012               0x0001180080945E20  RSL
L2C_COP0_MAP3013               0x0001180080945E28  RSL
L2C_COP0_MAP3014               0x0001180080945E30  RSL
L2C_COP0_MAP3015               0x0001180080945E38  RSL
L2C_COP0_MAP3016               0x0001180080945E40  RSL
L2C_COP0_MAP3017               0x0001180080945E48  RSL
L2C_COP0_MAP3018               0x0001180080945E50  RSL
L2C_COP0_MAP3019               0x0001180080945E58  RSL
L2C_COP0_MAP3020               0x0001180080945E60  RSL
L2C_COP0_MAP3021               0x0001180080945E68  RSL
L2C_COP0_MAP3022               0x0001180080945E70  RSL
L2C_COP0_MAP3023               0x0001180080945E78  RSL
L2C_COP0_MAP3024               0x0001180080945E80  RSL
L2C_COP0_MAP3025               0x0001180080945E88  RSL
L2C_COP0_MAP3026               0x0001180080945E90  RSL
L2C_COP0_MAP3027               0x0001180080945E98  RSL
L2C_COP0_MAP3028               0x0001180080945EA0  RSL
L2C_COP0_MAP3029               0x0001180080945EA8  RSL
L2C_COP0_MAP3030               0x0001180080945EB0  RSL
L2C_COP0_MAP3031               0x0001180080945EB8  RSL
L2C_COP0_MAP3032               0x0001180080945EC0  RSL
L2C_COP0_MAP3033               0x0001180080945EC8  RSL
L2C_COP0_MAP3034               0x0001180080945ED0  RSL
L2C_COP0_MAP3035               0x0001180080945ED8  RSL
L2C_COP0_MAP3036               0x0001180080945EE0  RSL
L2C_COP0_MAP3037               0x0001180080945EE8  RSL
L2C_COP0_MAP3038               0x0001180080945EF0  RSL
L2C_COP0_MAP3039               0x0001180080945EF8  RSL
L2C_COP0_MAP3040               0x0001180080945F00  RSL
L2C_COP0_MAP3041               0x0001180080945F08  RSL
L2C_COP0_MAP3042               0x0001180080945F10  RSL
L2C_COP0_MAP3043               0x0001180080945F18  RSL
L2C_COP0_MAP3044               0x0001180080945F20  RSL
L2C_COP0_MAP3045               0x0001180080945F28  RSL
L2C_COP0_MAP3046               0x0001180080945F30  RSL
L2C_COP0_MAP3047               0x0001180080945F38  RSL
L2C_COP0_MAP3048               0x0001180080945F40  RSL
L2C_COP0_MAP3049               0x0001180080945F48  RSL
L2C_COP0_MAP3050               0x0001180080945F50  RSL
L2C_COP0_MAP3051               0x0001180080945F58  RSL
L2C_COP0_MAP3052               0x0001180080945F60  RSL
L2C_COP0_MAP3053               0x0001180080945F68  RSL
L2C_COP0_MAP3054               0x0001180080945F70  RSL
L2C_COP0_MAP3055               0x0001180080945F78  RSL
L2C_COP0_MAP3056               0x0001180080945F80  RSL
L2C_COP0_MAP3057               0x0001180080945F88  RSL
L2C_COP0_MAP3058               0x0001180080945F90  RSL
L2C_COP0_MAP3059               0x0001180080945F98  RSL
L2C_COP0_MAP3060               0x0001180080945FA0  RSL
L2C_COP0_MAP3061               0x0001180080945FA8  RSL
L2C_COP0_MAP3062               0x0001180080945FB0  RSL
L2C_COP0_MAP3063               0x0001180080945FB8  RSL
L2C_COP0_MAP3064               0x0001180080945FC0  RSL
L2C_COP0_MAP3065               0x0001180080945FC8  RSL
L2C_COP0_MAP3066               0x0001180080945FD0  RSL
L2C_COP0_MAP3067               0x0001180080945FD8  RSL
L2C_COP0_MAP3068               0x0001180080945FE0  RSL
L2C_COP0_MAP3069               0x0001180080945FE8  RSL
L2C_COP0_MAP3070               0x0001180080945FF0  RSL
L2C_COP0_MAP3071               0x0001180080945FF8  RSL
L2C_COP0_MAP3072               0x0001180080946000  RSL
L2C_COP0_MAP3073               0x0001180080946008  RSL
L2C_COP0_MAP3074               0x0001180080946010  RSL
L2C_COP0_MAP3075               0x0001180080946018  RSL
L2C_COP0_MAP3076               0x0001180080946020  RSL
L2C_COP0_MAP3077               0x0001180080946028  RSL
L2C_COP0_MAP3078               0x0001180080946030  RSL
L2C_COP0_MAP3079               0x0001180080946038  RSL
L2C_COP0_MAP3080               0x0001180080946040  RSL
L2C_COP0_MAP3081               0x0001180080946048  RSL
L2C_COP0_MAP3082               0x0001180080946050  RSL
L2C_COP0_MAP3083               0x0001180080946058  RSL
L2C_COP0_MAP3084               0x0001180080946060  RSL
L2C_COP0_MAP3085               0x0001180080946068  RSL
L2C_COP0_MAP3086               0x0001180080946070  RSL
L2C_COP0_MAP3087               0x0001180080946078  RSL
L2C_COP0_MAP3088               0x0001180080946080  RSL
L2C_COP0_MAP3089               0x0001180080946088  RSL
L2C_COP0_MAP3090               0x0001180080946090  RSL
L2C_COP0_MAP3091               0x0001180080946098  RSL
L2C_COP0_MAP3092               0x00011800809460A0  RSL
L2C_COP0_MAP3093               0x00011800809460A8  RSL
L2C_COP0_MAP3094               0x00011800809460B0  RSL
L2C_COP0_MAP3095               0x00011800809460B8  RSL
L2C_COP0_MAP3096               0x00011800809460C0  RSL
L2C_COP0_MAP3097               0x00011800809460C8  RSL
L2C_COP0_MAP3098               0x00011800809460D0  RSL
L2C_COP0_MAP3099               0x00011800809460D8  RSL
L2C_COP0_MAP3100               0x00011800809460E0  RSL
L2C_COP0_MAP3101               0x00011800809460E8  RSL
L2C_COP0_MAP3102               0x00011800809460F0  RSL
L2C_COP0_MAP3103               0x00011800809460F8  RSL
L2C_COP0_MAP3104               0x0001180080946100  RSL
L2C_COP0_MAP3105               0x0001180080946108  RSL
L2C_COP0_MAP3106               0x0001180080946110  RSL
L2C_COP0_MAP3107               0x0001180080946118  RSL
L2C_COP0_MAP3108               0x0001180080946120  RSL
L2C_COP0_MAP3109               0x0001180080946128  RSL
L2C_COP0_MAP3110               0x0001180080946130  RSL
L2C_COP0_MAP3111               0x0001180080946138  RSL
L2C_COP0_MAP3112               0x0001180080946140  RSL
L2C_COP0_MAP3113               0x0001180080946148  RSL
L2C_COP0_MAP3114               0x0001180080946150  RSL
L2C_COP0_MAP3115               0x0001180080946158  RSL
L2C_COP0_MAP3116               0x0001180080946160  RSL
L2C_COP0_MAP3117               0x0001180080946168  RSL
L2C_COP0_MAP3118               0x0001180080946170  RSL
L2C_COP0_MAP3119               0x0001180080946178  RSL
L2C_COP0_MAP3120               0x0001180080946180  RSL
L2C_COP0_MAP3121               0x0001180080946188  RSL
L2C_COP0_MAP3122               0x0001180080946190  RSL
L2C_COP0_MAP3123               0x0001180080946198  RSL
L2C_COP0_MAP3124               0x00011800809461A0  RSL
L2C_COP0_MAP3125               0x00011800809461A8  RSL
L2C_COP0_MAP3126               0x00011800809461B0  RSL
L2C_COP0_MAP3127               0x00011800809461B8  RSL
L2C_COP0_MAP3128               0x00011800809461C0  RSL
L2C_COP0_MAP3129               0x00011800809461C8  RSL
L2C_COP0_MAP3130               0x00011800809461D0  RSL
L2C_COP0_MAP3131               0x00011800809461D8  RSL
L2C_COP0_MAP3132               0x00011800809461E0  RSL
L2C_COP0_MAP3133               0x00011800809461E8  RSL
L2C_COP0_MAP3134               0x00011800809461F0  RSL
L2C_COP0_MAP3135               0x00011800809461F8  RSL
L2C_COP0_MAP3136               0x0001180080946200  RSL
L2C_COP0_MAP3137               0x0001180080946208  RSL
L2C_COP0_MAP3138               0x0001180080946210  RSL
L2C_COP0_MAP3139               0x0001180080946218  RSL
L2C_COP0_MAP3140               0x0001180080946220  RSL
L2C_COP0_MAP3141               0x0001180080946228  RSL
L2C_COP0_MAP3142               0x0001180080946230  RSL
L2C_COP0_MAP3143               0x0001180080946238  RSL
L2C_COP0_MAP3144               0x0001180080946240  RSL
L2C_COP0_MAP3145               0x0001180080946248  RSL
L2C_COP0_MAP3146               0x0001180080946250  RSL
L2C_COP0_MAP3147               0x0001180080946258  RSL
L2C_COP0_MAP3148               0x0001180080946260  RSL
L2C_COP0_MAP3149               0x0001180080946268  RSL
L2C_COP0_MAP3150               0x0001180080946270  RSL
L2C_COP0_MAP3151               0x0001180080946278  RSL
L2C_COP0_MAP3152               0x0001180080946280  RSL
L2C_COP0_MAP3153               0x0001180080946288  RSL
L2C_COP0_MAP3154               0x0001180080946290  RSL
L2C_COP0_MAP3155               0x0001180080946298  RSL
L2C_COP0_MAP3156               0x00011800809462A0  RSL
L2C_COP0_MAP3157               0x00011800809462A8  RSL
L2C_COP0_MAP3158               0x00011800809462B0  RSL
L2C_COP0_MAP3159               0x00011800809462B8  RSL
L2C_COP0_MAP3160               0x00011800809462C0  RSL
L2C_COP0_MAP3161               0x00011800809462C8  RSL
L2C_COP0_MAP3162               0x00011800809462D0  RSL
L2C_COP0_MAP3163               0x00011800809462D8  RSL
L2C_COP0_MAP3164               0x00011800809462E0  RSL
L2C_COP0_MAP3165               0x00011800809462E8  RSL
L2C_COP0_MAP3166               0x00011800809462F0  RSL
L2C_COP0_MAP3167               0x00011800809462F8  RSL
L2C_COP0_MAP3168               0x0001180080946300  RSL
L2C_COP0_MAP3169               0x0001180080946308  RSL
L2C_COP0_MAP3170               0x0001180080946310  RSL
L2C_COP0_MAP3171               0x0001180080946318  RSL
L2C_COP0_MAP3172               0x0001180080946320  RSL
L2C_COP0_MAP3173               0x0001180080946328  RSL
L2C_COP0_MAP3174               0x0001180080946330  RSL
L2C_COP0_MAP3175               0x0001180080946338  RSL
L2C_COP0_MAP3176               0x0001180080946340  RSL
L2C_COP0_MAP3177               0x0001180080946348  RSL
L2C_COP0_MAP3178               0x0001180080946350  RSL
L2C_COP0_MAP3179               0x0001180080946358  RSL
L2C_COP0_MAP3180               0x0001180080946360  RSL
L2C_COP0_MAP3181               0x0001180080946368  RSL
L2C_COP0_MAP3182               0x0001180080946370  RSL
L2C_COP0_MAP3183               0x0001180080946378  RSL
L2C_COP0_MAP3184               0x0001180080946380  RSL
L2C_COP0_MAP3185               0x0001180080946388  RSL
L2C_COP0_MAP3186               0x0001180080946390  RSL
L2C_COP0_MAP3187               0x0001180080946398  RSL
L2C_COP0_MAP3188               0x00011800809463A0  RSL
L2C_COP0_MAP3189               0x00011800809463A8  RSL
L2C_COP0_MAP3190               0x00011800809463B0  RSL
L2C_COP0_MAP3191               0x00011800809463B8  RSL
L2C_COP0_MAP3192               0x00011800809463C0  RSL
L2C_COP0_MAP3193               0x00011800809463C8  RSL
L2C_COP0_MAP3194               0x00011800809463D0  RSL
L2C_COP0_MAP3195               0x00011800809463D8  RSL
L2C_COP0_MAP3196               0x00011800809463E0  RSL
L2C_COP0_MAP3197               0x00011800809463E8  RSL
L2C_COP0_MAP3198               0x00011800809463F0  RSL
L2C_COP0_MAP3199               0x00011800809463F8  RSL
L2C_COP0_MAP3200               0x0001180080946400  RSL
L2C_COP0_MAP3201               0x0001180080946408  RSL
L2C_COP0_MAP3202               0x0001180080946410  RSL
L2C_COP0_MAP3203               0x0001180080946418  RSL
L2C_COP0_MAP3204               0x0001180080946420  RSL
L2C_COP0_MAP3205               0x0001180080946428  RSL
L2C_COP0_MAP3206               0x0001180080946430  RSL
L2C_COP0_MAP3207               0x0001180080946438  RSL
L2C_COP0_MAP3208               0x0001180080946440  RSL
L2C_COP0_MAP3209               0x0001180080946448  RSL
L2C_COP0_MAP3210               0x0001180080946450  RSL
L2C_COP0_MAP3211               0x0001180080946458  RSL
L2C_COP0_MAP3212               0x0001180080946460  RSL
L2C_COP0_MAP3213               0x0001180080946468  RSL
L2C_COP0_MAP3214               0x0001180080946470  RSL
L2C_COP0_MAP3215               0x0001180080946478  RSL
L2C_COP0_MAP3216               0x0001180080946480  RSL
L2C_COP0_MAP3217               0x0001180080946488  RSL
L2C_COP0_MAP3218               0x0001180080946490  RSL
L2C_COP0_MAP3219               0x0001180080946498  RSL
L2C_COP0_MAP3220               0x00011800809464A0  RSL
L2C_COP0_MAP3221               0x00011800809464A8  RSL
L2C_COP0_MAP3222               0x00011800809464B0  RSL
L2C_COP0_MAP3223               0x00011800809464B8  RSL
L2C_COP0_MAP3224               0x00011800809464C0  RSL
L2C_COP0_MAP3225               0x00011800809464C8  RSL
L2C_COP0_MAP3226               0x00011800809464D0  RSL
L2C_COP0_MAP3227               0x00011800809464D8  RSL
L2C_COP0_MAP3228               0x00011800809464E0  RSL
L2C_COP0_MAP3229               0x00011800809464E8  RSL
L2C_COP0_MAP3230               0x00011800809464F0  RSL
L2C_COP0_MAP3231               0x00011800809464F8  RSL
L2C_COP0_MAP3232               0x0001180080946500  RSL
L2C_COP0_MAP3233               0x0001180080946508  RSL
L2C_COP0_MAP3234               0x0001180080946510  RSL
L2C_COP0_MAP3235               0x0001180080946518  RSL
L2C_COP0_MAP3236               0x0001180080946520  RSL
L2C_COP0_MAP3237               0x0001180080946528  RSL
L2C_COP0_MAP3238               0x0001180080946530  RSL
L2C_COP0_MAP3239               0x0001180080946538  RSL
L2C_COP0_MAP3240               0x0001180080946540  RSL
L2C_COP0_MAP3241               0x0001180080946548  RSL
L2C_COP0_MAP3242               0x0001180080946550  RSL
L2C_COP0_MAP3243               0x0001180080946558  RSL
L2C_COP0_MAP3244               0x0001180080946560  RSL
L2C_COP0_MAP3245               0x0001180080946568  RSL
L2C_COP0_MAP3246               0x0001180080946570  RSL
L2C_COP0_MAP3247               0x0001180080946578  RSL
L2C_COP0_MAP3248               0x0001180080946580  RSL
L2C_COP0_MAP3249               0x0001180080946588  RSL
L2C_COP0_MAP3250               0x0001180080946590  RSL
L2C_COP0_MAP3251               0x0001180080946598  RSL
L2C_COP0_MAP3252               0x00011800809465A0  RSL
L2C_COP0_MAP3253               0x00011800809465A8  RSL
L2C_COP0_MAP3254               0x00011800809465B0  RSL
L2C_COP0_MAP3255               0x00011800809465B8  RSL
L2C_COP0_MAP3256               0x00011800809465C0  RSL
L2C_COP0_MAP3257               0x00011800809465C8  RSL
L2C_COP0_MAP3258               0x00011800809465D0  RSL
L2C_COP0_MAP3259               0x00011800809465D8  RSL
L2C_COP0_MAP3260               0x00011800809465E0  RSL
L2C_COP0_MAP3261               0x00011800809465E8  RSL
L2C_COP0_MAP3262               0x00011800809465F0  RSL
L2C_COP0_MAP3263               0x00011800809465F8  RSL
L2C_COP0_MAP3264               0x0001180080946600  RSL
L2C_COP0_MAP3265               0x0001180080946608  RSL
L2C_COP0_MAP3266               0x0001180080946610  RSL
L2C_COP0_MAP3267               0x0001180080946618  RSL
L2C_COP0_MAP3268               0x0001180080946620  RSL
L2C_COP0_MAP3269               0x0001180080946628  RSL
L2C_COP0_MAP3270               0x0001180080946630  RSL
L2C_COP0_MAP3271               0x0001180080946638  RSL
L2C_COP0_MAP3272               0x0001180080946640  RSL
L2C_COP0_MAP3273               0x0001180080946648  RSL
L2C_COP0_MAP3274               0x0001180080946650  RSL
L2C_COP0_MAP3275               0x0001180080946658  RSL
L2C_COP0_MAP3276               0x0001180080946660  RSL
L2C_COP0_MAP3277               0x0001180080946668  RSL
L2C_COP0_MAP3278               0x0001180080946670  RSL
L2C_COP0_MAP3279               0x0001180080946678  RSL
L2C_COP0_MAP3280               0x0001180080946680  RSL
L2C_COP0_MAP3281               0x0001180080946688  RSL
L2C_COP0_MAP3282               0x0001180080946690  RSL
L2C_COP0_MAP3283               0x0001180080946698  RSL
L2C_COP0_MAP3284               0x00011800809466A0  RSL
L2C_COP0_MAP3285               0x00011800809466A8  RSL
L2C_COP0_MAP3286               0x00011800809466B0  RSL
L2C_COP0_MAP3287               0x00011800809466B8  RSL
L2C_COP0_MAP3288               0x00011800809466C0  RSL
L2C_COP0_MAP3289               0x00011800809466C8  RSL
L2C_COP0_MAP3290               0x00011800809466D0  RSL
L2C_COP0_MAP3291               0x00011800809466D8  RSL
L2C_COP0_MAP3292               0x00011800809466E0  RSL
L2C_COP0_MAP3293               0x00011800809466E8  RSL
L2C_COP0_MAP3294               0x00011800809466F0  RSL
L2C_COP0_MAP3295               0x00011800809466F8  RSL
L2C_COP0_MAP3296               0x0001180080946700  RSL
L2C_COP0_MAP3297               0x0001180080946708  RSL
L2C_COP0_MAP3298               0x0001180080946710  RSL
L2C_COP0_MAP3299               0x0001180080946718  RSL
L2C_COP0_MAP3300               0x0001180080946720  RSL
L2C_COP0_MAP3301               0x0001180080946728  RSL
L2C_COP0_MAP3302               0x0001180080946730  RSL
L2C_COP0_MAP3303               0x0001180080946738  RSL
L2C_COP0_MAP3304               0x0001180080946740  RSL
L2C_COP0_MAP3305               0x0001180080946748  RSL
L2C_COP0_MAP3306               0x0001180080946750  RSL
L2C_COP0_MAP3307               0x0001180080946758  RSL
L2C_COP0_MAP3308               0x0001180080946760  RSL
L2C_COP0_MAP3309               0x0001180080946768  RSL
L2C_COP0_MAP3310               0x0001180080946770  RSL
L2C_COP0_MAP3311               0x0001180080946778  RSL
L2C_COP0_MAP3312               0x0001180080946780  RSL
L2C_COP0_MAP3313               0x0001180080946788  RSL
L2C_COP0_MAP3314               0x0001180080946790  RSL
L2C_COP0_MAP3315               0x0001180080946798  RSL
L2C_COP0_MAP3316               0x00011800809467A0  RSL
L2C_COP0_MAP3317               0x00011800809467A8  RSL
L2C_COP0_MAP3318               0x00011800809467B0  RSL
L2C_COP0_MAP3319               0x00011800809467B8  RSL
L2C_COP0_MAP3320               0x00011800809467C0  RSL
L2C_COP0_MAP3321               0x00011800809467C8  RSL
L2C_COP0_MAP3322               0x00011800809467D0  RSL
L2C_COP0_MAP3323               0x00011800809467D8  RSL
L2C_COP0_MAP3324               0x00011800809467E0  RSL
L2C_COP0_MAP3325               0x00011800809467E8  RSL
L2C_COP0_MAP3326               0x00011800809467F0  RSL
L2C_COP0_MAP3327               0x00011800809467F8  RSL
L2C_COP0_MAP3328               0x0001180080946800  RSL
L2C_COP0_MAP3329               0x0001180080946808  RSL
L2C_COP0_MAP3330               0x0001180080946810  RSL
L2C_COP0_MAP3331               0x0001180080946818  RSL
L2C_COP0_MAP3332               0x0001180080946820  RSL
L2C_COP0_MAP3333               0x0001180080946828  RSL
L2C_COP0_MAP3334               0x0001180080946830  RSL
L2C_COP0_MAP3335               0x0001180080946838  RSL
L2C_COP0_MAP3336               0x0001180080946840  RSL
L2C_COP0_MAP3337               0x0001180080946848  RSL
L2C_COP0_MAP3338               0x0001180080946850  RSL
L2C_COP0_MAP3339               0x0001180080946858  RSL
L2C_COP0_MAP3340               0x0001180080946860  RSL
L2C_COP0_MAP3341               0x0001180080946868  RSL
L2C_COP0_MAP3342               0x0001180080946870  RSL
L2C_COP0_MAP3343               0x0001180080946878  RSL
L2C_COP0_MAP3344               0x0001180080946880  RSL
L2C_COP0_MAP3345               0x0001180080946888  RSL
L2C_COP0_MAP3346               0x0001180080946890  RSL
L2C_COP0_MAP3347               0x0001180080946898  RSL
L2C_COP0_MAP3348               0x00011800809468A0  RSL
L2C_COP0_MAP3349               0x00011800809468A8  RSL
L2C_COP0_MAP3350               0x00011800809468B0  RSL
L2C_COP0_MAP3351               0x00011800809468B8  RSL
L2C_COP0_MAP3352               0x00011800809468C0  RSL
L2C_COP0_MAP3353               0x00011800809468C8  RSL
L2C_COP0_MAP3354               0x00011800809468D0  RSL
L2C_COP0_MAP3355               0x00011800809468D8  RSL
L2C_COP0_MAP3356               0x00011800809468E0  RSL
L2C_COP0_MAP3357               0x00011800809468E8  RSL
L2C_COP0_MAP3358               0x00011800809468F0  RSL
L2C_COP0_MAP3359               0x00011800809468F8  RSL
L2C_COP0_MAP3360               0x0001180080946900  RSL
L2C_COP0_MAP3361               0x0001180080946908  RSL
L2C_COP0_MAP3362               0x0001180080946910  RSL
L2C_COP0_MAP3363               0x0001180080946918  RSL
L2C_COP0_MAP3364               0x0001180080946920  RSL
L2C_COP0_MAP3365               0x0001180080946928  RSL
L2C_COP0_MAP3366               0x0001180080946930  RSL
L2C_COP0_MAP3367               0x0001180080946938  RSL
L2C_COP0_MAP3368               0x0001180080946940  RSL
L2C_COP0_MAP3369               0x0001180080946948  RSL
L2C_COP0_MAP3370               0x0001180080946950  RSL
L2C_COP0_MAP3371               0x0001180080946958  RSL
L2C_COP0_MAP3372               0x0001180080946960  RSL
L2C_COP0_MAP3373               0x0001180080946968  RSL
L2C_COP0_MAP3374               0x0001180080946970  RSL
L2C_COP0_MAP3375               0x0001180080946978  RSL
L2C_COP0_MAP3376               0x0001180080946980  RSL
L2C_COP0_MAP3377               0x0001180080946988  RSL
L2C_COP0_MAP3378               0x0001180080946990  RSL
L2C_COP0_MAP3379               0x0001180080946998  RSL
L2C_COP0_MAP3380               0x00011800809469A0  RSL
L2C_COP0_MAP3381               0x00011800809469A8  RSL
L2C_COP0_MAP3382               0x00011800809469B0  RSL
L2C_COP0_MAP3383               0x00011800809469B8  RSL
L2C_COP0_MAP3384               0x00011800809469C0  RSL
L2C_COP0_MAP3385               0x00011800809469C8  RSL
L2C_COP0_MAP3386               0x00011800809469D0  RSL
L2C_COP0_MAP3387               0x00011800809469D8  RSL
L2C_COP0_MAP3388               0x00011800809469E0  RSL
L2C_COP0_MAP3389               0x00011800809469E8  RSL
L2C_COP0_MAP3390               0x00011800809469F0  RSL
L2C_COP0_MAP3391               0x00011800809469F8  RSL
L2C_COP0_MAP3392               0x0001180080946A00  RSL
L2C_COP0_MAP3393               0x0001180080946A08  RSL
L2C_COP0_MAP3394               0x0001180080946A10  RSL
L2C_COP0_MAP3395               0x0001180080946A18  RSL
L2C_COP0_MAP3396               0x0001180080946A20  RSL
L2C_COP0_MAP3397               0x0001180080946A28  RSL
L2C_COP0_MAP3398               0x0001180080946A30  RSL
L2C_COP0_MAP3399               0x0001180080946A38  RSL
L2C_COP0_MAP3400               0x0001180080946A40  RSL
L2C_COP0_MAP3401               0x0001180080946A48  RSL
L2C_COP0_MAP3402               0x0001180080946A50  RSL
L2C_COP0_MAP3403               0x0001180080946A58  RSL
L2C_COP0_MAP3404               0x0001180080946A60  RSL
L2C_COP0_MAP3405               0x0001180080946A68  RSL
L2C_COP0_MAP3406               0x0001180080946A70  RSL
L2C_COP0_MAP3407               0x0001180080946A78  RSL
L2C_COP0_MAP3408               0x0001180080946A80  RSL
L2C_COP0_MAP3409               0x0001180080946A88  RSL
L2C_COP0_MAP3410               0x0001180080946A90  RSL
L2C_COP0_MAP3411               0x0001180080946A98  RSL
L2C_COP0_MAP3412               0x0001180080946AA0  RSL
L2C_COP0_MAP3413               0x0001180080946AA8  RSL
L2C_COP0_MAP3414               0x0001180080946AB0  RSL
L2C_COP0_MAP3415               0x0001180080946AB8  RSL
L2C_COP0_MAP3416               0x0001180080946AC0  RSL
L2C_COP0_MAP3417               0x0001180080946AC8  RSL
L2C_COP0_MAP3418               0x0001180080946AD0  RSL
L2C_COP0_MAP3419               0x0001180080946AD8  RSL
L2C_COP0_MAP3420               0x0001180080946AE0  RSL
L2C_COP0_MAP3421               0x0001180080946AE8  RSL
L2C_COP0_MAP3422               0x0001180080946AF0  RSL
L2C_COP0_MAP3423               0x0001180080946AF8  RSL
L2C_COP0_MAP3424               0x0001180080946B00  RSL
L2C_COP0_MAP3425               0x0001180080946B08  RSL
L2C_COP0_MAP3426               0x0001180080946B10  RSL
L2C_COP0_MAP3427               0x0001180080946B18  RSL
L2C_COP0_MAP3428               0x0001180080946B20  RSL
L2C_COP0_MAP3429               0x0001180080946B28  RSL
L2C_COP0_MAP3430               0x0001180080946B30  RSL
L2C_COP0_MAP3431               0x0001180080946B38  RSL
L2C_COP0_MAP3432               0x0001180080946B40  RSL
L2C_COP0_MAP3433               0x0001180080946B48  RSL
L2C_COP0_MAP3434               0x0001180080946B50  RSL
L2C_COP0_MAP3435               0x0001180080946B58  RSL
L2C_COP0_MAP3436               0x0001180080946B60  RSL
L2C_COP0_MAP3437               0x0001180080946B68  RSL
L2C_COP0_MAP3438               0x0001180080946B70  RSL
L2C_COP0_MAP3439               0x0001180080946B78  RSL
L2C_COP0_MAP3440               0x0001180080946B80  RSL
L2C_COP0_MAP3441               0x0001180080946B88  RSL
L2C_COP0_MAP3442               0x0001180080946B90  RSL
L2C_COP0_MAP3443               0x0001180080946B98  RSL
L2C_COP0_MAP3444               0x0001180080946BA0  RSL
L2C_COP0_MAP3445               0x0001180080946BA8  RSL
L2C_COP0_MAP3446               0x0001180080946BB0  RSL
L2C_COP0_MAP3447               0x0001180080946BB8  RSL
L2C_COP0_MAP3448               0x0001180080946BC0  RSL
L2C_COP0_MAP3449               0x0001180080946BC8  RSL
L2C_COP0_MAP3450               0x0001180080946BD0  RSL
L2C_COP0_MAP3451               0x0001180080946BD8  RSL
L2C_COP0_MAP3452               0x0001180080946BE0  RSL
L2C_COP0_MAP3453               0x0001180080946BE8  RSL
L2C_COP0_MAP3454               0x0001180080946BF0  RSL
L2C_COP0_MAP3455               0x0001180080946BF8  RSL
L2C_COP0_MAP3456               0x0001180080946C00  RSL
L2C_COP0_MAP3457               0x0001180080946C08  RSL
L2C_COP0_MAP3458               0x0001180080946C10  RSL
L2C_COP0_MAP3459               0x0001180080946C18  RSL
L2C_COP0_MAP3460               0x0001180080946C20  RSL
L2C_COP0_MAP3461               0x0001180080946C28  RSL
L2C_COP0_MAP3462               0x0001180080946C30  RSL
L2C_COP0_MAP3463               0x0001180080946C38  RSL
L2C_COP0_MAP3464               0x0001180080946C40  RSL
L2C_COP0_MAP3465               0x0001180080946C48  RSL
L2C_COP0_MAP3466               0x0001180080946C50  RSL
L2C_COP0_MAP3467               0x0001180080946C58  RSL
L2C_COP0_MAP3468               0x0001180080946C60  RSL
L2C_COP0_MAP3469               0x0001180080946C68  RSL
L2C_COP0_MAP3470               0x0001180080946C70  RSL
L2C_COP0_MAP3471               0x0001180080946C78  RSL
L2C_COP0_MAP3472               0x0001180080946C80  RSL
L2C_COP0_MAP3473               0x0001180080946C88  RSL
L2C_COP0_MAP3474               0x0001180080946C90  RSL
L2C_COP0_MAP3475               0x0001180080946C98  RSL
L2C_COP0_MAP3476               0x0001180080946CA0  RSL
L2C_COP0_MAP3477               0x0001180080946CA8  RSL
L2C_COP0_MAP3478               0x0001180080946CB0  RSL
L2C_COP0_MAP3479               0x0001180080946CB8  RSL
L2C_COP0_MAP3480               0x0001180080946CC0  RSL
L2C_COP0_MAP3481               0x0001180080946CC8  RSL
L2C_COP0_MAP3482               0x0001180080946CD0  RSL
L2C_COP0_MAP3483               0x0001180080946CD8  RSL
L2C_COP0_MAP3484               0x0001180080946CE0  RSL
L2C_COP0_MAP3485               0x0001180080946CE8  RSL
L2C_COP0_MAP3486               0x0001180080946CF0  RSL
L2C_COP0_MAP3487               0x0001180080946CF8  RSL
L2C_COP0_MAP3488               0x0001180080946D00  RSL
L2C_COP0_MAP3489               0x0001180080946D08  RSL
L2C_COP0_MAP3490               0x0001180080946D10  RSL
L2C_COP0_MAP3491               0x0001180080946D18  RSL
L2C_COP0_MAP3492               0x0001180080946D20  RSL
L2C_COP0_MAP3493               0x0001180080946D28  RSL
L2C_COP0_MAP3494               0x0001180080946D30  RSL
L2C_COP0_MAP3495               0x0001180080946D38  RSL
L2C_COP0_MAP3496               0x0001180080946D40  RSL
L2C_COP0_MAP3497               0x0001180080946D48  RSL
L2C_COP0_MAP3498               0x0001180080946D50  RSL
L2C_COP0_MAP3499               0x0001180080946D58  RSL
L2C_COP0_MAP3500               0x0001180080946D60  RSL
L2C_COP0_MAP3501               0x0001180080946D68  RSL
L2C_COP0_MAP3502               0x0001180080946D70  RSL
L2C_COP0_MAP3503               0x0001180080946D78  RSL
L2C_COP0_MAP3504               0x0001180080946D80  RSL
L2C_COP0_MAP3505               0x0001180080946D88  RSL
L2C_COP0_MAP3506               0x0001180080946D90  RSL
L2C_COP0_MAP3507               0x0001180080946D98  RSL
L2C_COP0_MAP3508               0x0001180080946DA0  RSL
L2C_COP0_MAP3509               0x0001180080946DA8  RSL
L2C_COP0_MAP3510               0x0001180080946DB0  RSL
L2C_COP0_MAP3511               0x0001180080946DB8  RSL
L2C_COP0_MAP3512               0x0001180080946DC0  RSL
L2C_COP0_MAP3513               0x0001180080946DC8  RSL
L2C_COP0_MAP3514               0x0001180080946DD0  RSL
L2C_COP0_MAP3515               0x0001180080946DD8  RSL
L2C_COP0_MAP3516               0x0001180080946DE0  RSL
L2C_COP0_MAP3517               0x0001180080946DE8  RSL
L2C_COP0_MAP3518               0x0001180080946DF0  RSL
L2C_COP0_MAP3519               0x0001180080946DF8  RSL
L2C_COP0_MAP3520               0x0001180080946E00  RSL
L2C_COP0_MAP3521               0x0001180080946E08  RSL
L2C_COP0_MAP3522               0x0001180080946E10  RSL
L2C_COP0_MAP3523               0x0001180080946E18  RSL
L2C_COP0_MAP3524               0x0001180080946E20  RSL
L2C_COP0_MAP3525               0x0001180080946E28  RSL
L2C_COP0_MAP3526               0x0001180080946E30  RSL
L2C_COP0_MAP3527               0x0001180080946E38  RSL
L2C_COP0_MAP3528               0x0001180080946E40  RSL
L2C_COP0_MAP3529               0x0001180080946E48  RSL
L2C_COP0_MAP3530               0x0001180080946E50  RSL
L2C_COP0_MAP3531               0x0001180080946E58  RSL
L2C_COP0_MAP3532               0x0001180080946E60  RSL
L2C_COP0_MAP3533               0x0001180080946E68  RSL
L2C_COP0_MAP3534               0x0001180080946E70  RSL
L2C_COP0_MAP3535               0x0001180080946E78  RSL
L2C_COP0_MAP3536               0x0001180080946E80  RSL
L2C_COP0_MAP3537               0x0001180080946E88  RSL
L2C_COP0_MAP3538               0x0001180080946E90  RSL
L2C_COP0_MAP3539               0x0001180080946E98  RSL
L2C_COP0_MAP3540               0x0001180080946EA0  RSL
L2C_COP0_MAP3541               0x0001180080946EA8  RSL
L2C_COP0_MAP3542               0x0001180080946EB0  RSL
L2C_COP0_MAP3543               0x0001180080946EB8  RSL
L2C_COP0_MAP3544               0x0001180080946EC0  RSL
L2C_COP0_MAP3545               0x0001180080946EC8  RSL
L2C_COP0_MAP3546               0x0001180080946ED0  RSL
L2C_COP0_MAP3547               0x0001180080946ED8  RSL
L2C_COP0_MAP3548               0x0001180080946EE0  RSL
L2C_COP0_MAP3549               0x0001180080946EE8  RSL
L2C_COP0_MAP3550               0x0001180080946EF0  RSL
L2C_COP0_MAP3551               0x0001180080946EF8  RSL
L2C_COP0_MAP3552               0x0001180080946F00  RSL
L2C_COP0_MAP3553               0x0001180080946F08  RSL
L2C_COP0_MAP3554               0x0001180080946F10  RSL
L2C_COP0_MAP3555               0x0001180080946F18  RSL
L2C_COP0_MAP3556               0x0001180080946F20  RSL
L2C_COP0_MAP3557               0x0001180080946F28  RSL
L2C_COP0_MAP3558               0x0001180080946F30  RSL
L2C_COP0_MAP3559               0x0001180080946F38  RSL
L2C_COP0_MAP3560               0x0001180080946F40  RSL
L2C_COP0_MAP3561               0x0001180080946F48  RSL
L2C_COP0_MAP3562               0x0001180080946F50  RSL
L2C_COP0_MAP3563               0x0001180080946F58  RSL
L2C_COP0_MAP3564               0x0001180080946F60  RSL
L2C_COP0_MAP3565               0x0001180080946F68  RSL
L2C_COP0_MAP3566               0x0001180080946F70  RSL
L2C_COP0_MAP3567               0x0001180080946F78  RSL
L2C_COP0_MAP3568               0x0001180080946F80  RSL
L2C_COP0_MAP3569               0x0001180080946F88  RSL
L2C_COP0_MAP3570               0x0001180080946F90  RSL
L2C_COP0_MAP3571               0x0001180080946F98  RSL
L2C_COP0_MAP3572               0x0001180080946FA0  RSL
L2C_COP0_MAP3573               0x0001180080946FA8  RSL
L2C_COP0_MAP3574               0x0001180080946FB0  RSL
L2C_COP0_MAP3575               0x0001180080946FB8  RSL
L2C_COP0_MAP3576               0x0001180080946FC0  RSL
L2C_COP0_MAP3577               0x0001180080946FC8  RSL
L2C_COP0_MAP3578               0x0001180080946FD0  RSL
L2C_COP0_MAP3579               0x0001180080946FD8  RSL
L2C_COP0_MAP3580               0x0001180080946FE0  RSL
L2C_COP0_MAP3581               0x0001180080946FE8  RSL
L2C_COP0_MAP3582               0x0001180080946FF0  RSL
L2C_COP0_MAP3583               0x0001180080946FF8  RSL
L2C_COP0_MAP3584               0x0001180080947000  RSL
L2C_COP0_MAP3585               0x0001180080947008  RSL
L2C_COP0_MAP3586               0x0001180080947010  RSL
L2C_COP0_MAP3587               0x0001180080947018  RSL
L2C_COP0_MAP3588               0x0001180080947020  RSL
L2C_COP0_MAP3589               0x0001180080947028  RSL
L2C_COP0_MAP3590               0x0001180080947030  RSL
L2C_COP0_MAP3591               0x0001180080947038  RSL
L2C_COP0_MAP3592               0x0001180080947040  RSL
L2C_COP0_MAP3593               0x0001180080947048  RSL
L2C_COP0_MAP3594               0x0001180080947050  RSL
L2C_COP0_MAP3595               0x0001180080947058  RSL
L2C_COP0_MAP3596               0x0001180080947060  RSL
L2C_COP0_MAP3597               0x0001180080947068  RSL
L2C_COP0_MAP3598               0x0001180080947070  RSL
L2C_COP0_MAP3599               0x0001180080947078  RSL
L2C_COP0_MAP3600               0x0001180080947080  RSL
L2C_COP0_MAP3601               0x0001180080947088  RSL
L2C_COP0_MAP3602               0x0001180080947090  RSL
L2C_COP0_MAP3603               0x0001180080947098  RSL
L2C_COP0_MAP3604               0x00011800809470A0  RSL
L2C_COP0_MAP3605               0x00011800809470A8  RSL
L2C_COP0_MAP3606               0x00011800809470B0  RSL
L2C_COP0_MAP3607               0x00011800809470B8  RSL
L2C_COP0_MAP3608               0x00011800809470C0  RSL
L2C_COP0_MAP3609               0x00011800809470C8  RSL
L2C_COP0_MAP3610               0x00011800809470D0  RSL
L2C_COP0_MAP3611               0x00011800809470D8  RSL
L2C_COP0_MAP3612               0x00011800809470E0  RSL
L2C_COP0_MAP3613               0x00011800809470E8  RSL
L2C_COP0_MAP3614               0x00011800809470F0  RSL
L2C_COP0_MAP3615               0x00011800809470F8  RSL
L2C_COP0_MAP3616               0x0001180080947100  RSL
L2C_COP0_MAP3617               0x0001180080947108  RSL
L2C_COP0_MAP3618               0x0001180080947110  RSL
L2C_COP0_MAP3619               0x0001180080947118  RSL
L2C_COP0_MAP3620               0x0001180080947120  RSL
L2C_COP0_MAP3621               0x0001180080947128  RSL
L2C_COP0_MAP3622               0x0001180080947130  RSL
L2C_COP0_MAP3623               0x0001180080947138  RSL
L2C_COP0_MAP3624               0x0001180080947140  RSL
L2C_COP0_MAP3625               0x0001180080947148  RSL
L2C_COP0_MAP3626               0x0001180080947150  RSL
L2C_COP0_MAP3627               0x0001180080947158  RSL
L2C_COP0_MAP3628               0x0001180080947160  RSL
L2C_COP0_MAP3629               0x0001180080947168  RSL
L2C_COP0_MAP3630               0x0001180080947170  RSL
L2C_COP0_MAP3631               0x0001180080947178  RSL
L2C_COP0_MAP3632               0x0001180080947180  RSL
L2C_COP0_MAP3633               0x0001180080947188  RSL
L2C_COP0_MAP3634               0x0001180080947190  RSL
L2C_COP0_MAP3635               0x0001180080947198  RSL
L2C_COP0_MAP3636               0x00011800809471A0  RSL
L2C_COP0_MAP3637               0x00011800809471A8  RSL
L2C_COP0_MAP3638               0x00011800809471B0  RSL
L2C_COP0_MAP3639               0x00011800809471B8  RSL
L2C_COP0_MAP3640               0x00011800809471C0  RSL
L2C_COP0_MAP3641               0x00011800809471C8  RSL
L2C_COP0_MAP3642               0x00011800809471D0  RSL
L2C_COP0_MAP3643               0x00011800809471D8  RSL
L2C_COP0_MAP3644               0x00011800809471E0  RSL
L2C_COP0_MAP3645               0x00011800809471E8  RSL
L2C_COP0_MAP3646               0x00011800809471F0  RSL
L2C_COP0_MAP3647               0x00011800809471F8  RSL
L2C_COP0_MAP3648               0x0001180080947200  RSL
L2C_COP0_MAP3649               0x0001180080947208  RSL
L2C_COP0_MAP3650               0x0001180080947210  RSL
L2C_COP0_MAP3651               0x0001180080947218  RSL
L2C_COP0_MAP3652               0x0001180080947220  RSL
L2C_COP0_MAP3653               0x0001180080947228  RSL
L2C_COP0_MAP3654               0x0001180080947230  RSL
L2C_COP0_MAP3655               0x0001180080947238  RSL
L2C_COP0_MAP3656               0x0001180080947240  RSL
L2C_COP0_MAP3657               0x0001180080947248  RSL
L2C_COP0_MAP3658               0x0001180080947250  RSL
L2C_COP0_MAP3659               0x0001180080947258  RSL
L2C_COP0_MAP3660               0x0001180080947260  RSL
L2C_COP0_MAP3661               0x0001180080947268  RSL
L2C_COP0_MAP3662               0x0001180080947270  RSL
L2C_COP0_MAP3663               0x0001180080947278  RSL
L2C_COP0_MAP3664               0x0001180080947280  RSL
L2C_COP0_MAP3665               0x0001180080947288  RSL
L2C_COP0_MAP3666               0x0001180080947290  RSL
L2C_COP0_MAP3667               0x0001180080947298  RSL
L2C_COP0_MAP3668               0x00011800809472A0  RSL
L2C_COP0_MAP3669               0x00011800809472A8  RSL
L2C_COP0_MAP3670               0x00011800809472B0  RSL
L2C_COP0_MAP3671               0x00011800809472B8  RSL
L2C_COP0_MAP3672               0x00011800809472C0  RSL
L2C_COP0_MAP3673               0x00011800809472C8  RSL
L2C_COP0_MAP3674               0x00011800809472D0  RSL
L2C_COP0_MAP3675               0x00011800809472D8  RSL
L2C_COP0_MAP3676               0x00011800809472E0  RSL
L2C_COP0_MAP3677               0x00011800809472E8  RSL
L2C_COP0_MAP3678               0x00011800809472F0  RSL
L2C_COP0_MAP3679               0x00011800809472F8  RSL
L2C_COP0_MAP3680               0x0001180080947300  RSL
L2C_COP0_MAP3681               0x0001180080947308  RSL
L2C_COP0_MAP3682               0x0001180080947310  RSL
L2C_COP0_MAP3683               0x0001180080947318  RSL
L2C_COP0_MAP3684               0x0001180080947320  RSL
L2C_COP0_MAP3685               0x0001180080947328  RSL
L2C_COP0_MAP3686               0x0001180080947330  RSL
L2C_COP0_MAP3687               0x0001180080947338  RSL
L2C_COP0_MAP3688               0x0001180080947340  RSL
L2C_COP0_MAP3689               0x0001180080947348  RSL
L2C_COP0_MAP3690               0x0001180080947350  RSL
L2C_COP0_MAP3691               0x0001180080947358  RSL
L2C_COP0_MAP3692               0x0001180080947360  RSL
L2C_COP0_MAP3693               0x0001180080947368  RSL
L2C_COP0_MAP3694               0x0001180080947370  RSL
L2C_COP0_MAP3695               0x0001180080947378  RSL
L2C_COP0_MAP3696               0x0001180080947380  RSL
L2C_COP0_MAP3697               0x0001180080947388  RSL
L2C_COP0_MAP3698               0x0001180080947390  RSL
L2C_COP0_MAP3699               0x0001180080947398  RSL
L2C_COP0_MAP3700               0x00011800809473A0  RSL
L2C_COP0_MAP3701               0x00011800809473A8  RSL
L2C_COP0_MAP3702               0x00011800809473B0  RSL
L2C_COP0_MAP3703               0x00011800809473B8  RSL
L2C_COP0_MAP3704               0x00011800809473C0  RSL
L2C_COP0_MAP3705               0x00011800809473C8  RSL
L2C_COP0_MAP3706               0x00011800809473D0  RSL
L2C_COP0_MAP3707               0x00011800809473D8  RSL
L2C_COP0_MAP3708               0x00011800809473E0  RSL
L2C_COP0_MAP3709               0x00011800809473E8  RSL
L2C_COP0_MAP3710               0x00011800809473F0  RSL
L2C_COP0_MAP3711               0x00011800809473F8  RSL
L2C_COP0_MAP3712               0x0001180080947400  RSL
L2C_COP0_MAP3713               0x0001180080947408  RSL
L2C_COP0_MAP3714               0x0001180080947410  RSL
L2C_COP0_MAP3715               0x0001180080947418  RSL
L2C_COP0_MAP3716               0x0001180080947420  RSL
L2C_COP0_MAP3717               0x0001180080947428  RSL
L2C_COP0_MAP3718               0x0001180080947430  RSL
L2C_COP0_MAP3719               0x0001180080947438  RSL
L2C_COP0_MAP3720               0x0001180080947440  RSL
L2C_COP0_MAP3721               0x0001180080947448  RSL
L2C_COP0_MAP3722               0x0001180080947450  RSL
L2C_COP0_MAP3723               0x0001180080947458  RSL
L2C_COP0_MAP3724               0x0001180080947460  RSL
L2C_COP0_MAP3725               0x0001180080947468  RSL
L2C_COP0_MAP3726               0x0001180080947470  RSL
L2C_COP0_MAP3727               0x0001180080947478  RSL
L2C_COP0_MAP3728               0x0001180080947480  RSL
L2C_COP0_MAP3729               0x0001180080947488  RSL
L2C_COP0_MAP3730               0x0001180080947490  RSL
L2C_COP0_MAP3731               0x0001180080947498  RSL
L2C_COP0_MAP3732               0x00011800809474A0  RSL
L2C_COP0_MAP3733               0x00011800809474A8  RSL
L2C_COP0_MAP3734               0x00011800809474B0  RSL
L2C_COP0_MAP3735               0x00011800809474B8  RSL
L2C_COP0_MAP3736               0x00011800809474C0  RSL
L2C_COP0_MAP3737               0x00011800809474C8  RSL
L2C_COP0_MAP3738               0x00011800809474D0  RSL
L2C_COP0_MAP3739               0x00011800809474D8  RSL
L2C_COP0_MAP3740               0x00011800809474E0  RSL
L2C_COP0_MAP3741               0x00011800809474E8  RSL
L2C_COP0_MAP3742               0x00011800809474F0  RSL
L2C_COP0_MAP3743               0x00011800809474F8  RSL
L2C_COP0_MAP3744               0x0001180080947500  RSL
L2C_COP0_MAP3745               0x0001180080947508  RSL
L2C_COP0_MAP3746               0x0001180080947510  RSL
L2C_COP0_MAP3747               0x0001180080947518  RSL
L2C_COP0_MAP3748               0x0001180080947520  RSL
L2C_COP0_MAP3749               0x0001180080947528  RSL
L2C_COP0_MAP3750               0x0001180080947530  RSL
L2C_COP0_MAP3751               0x0001180080947538  RSL
L2C_COP0_MAP3752               0x0001180080947540  RSL
L2C_COP0_MAP3753               0x0001180080947548  RSL
L2C_COP0_MAP3754               0x0001180080947550  RSL
L2C_COP0_MAP3755               0x0001180080947558  RSL
L2C_COP0_MAP3756               0x0001180080947560  RSL
L2C_COP0_MAP3757               0x0001180080947568  RSL
L2C_COP0_MAP3758               0x0001180080947570  RSL
L2C_COP0_MAP3759               0x0001180080947578  RSL
L2C_COP0_MAP3760               0x0001180080947580  RSL
L2C_COP0_MAP3761               0x0001180080947588  RSL
L2C_COP0_MAP3762               0x0001180080947590  RSL
L2C_COP0_MAP3763               0x0001180080947598  RSL
L2C_COP0_MAP3764               0x00011800809475A0  RSL
L2C_COP0_MAP3765               0x00011800809475A8  RSL
L2C_COP0_MAP3766               0x00011800809475B0  RSL
L2C_COP0_MAP3767               0x00011800809475B8  RSL
L2C_COP0_MAP3768               0x00011800809475C0  RSL
L2C_COP0_MAP3769               0x00011800809475C8  RSL
L2C_COP0_MAP3770               0x00011800809475D0  RSL
L2C_COP0_MAP3771               0x00011800809475D8  RSL
L2C_COP0_MAP3772               0x00011800809475E0  RSL
L2C_COP0_MAP3773               0x00011800809475E8  RSL
L2C_COP0_MAP3774               0x00011800809475F0  RSL
L2C_COP0_MAP3775               0x00011800809475F8  RSL
L2C_COP0_MAP3776               0x0001180080947600  RSL
L2C_COP0_MAP3777               0x0001180080947608  RSL
L2C_COP0_MAP3778               0x0001180080947610  RSL
L2C_COP0_MAP3779               0x0001180080947618  RSL
L2C_COP0_MAP3780               0x0001180080947620  RSL
L2C_COP0_MAP3781               0x0001180080947628  RSL
L2C_COP0_MAP3782               0x0001180080947630  RSL
L2C_COP0_MAP3783               0x0001180080947638  RSL
L2C_COP0_MAP3784               0x0001180080947640  RSL
L2C_COP0_MAP3785               0x0001180080947648  RSL
L2C_COP0_MAP3786               0x0001180080947650  RSL
L2C_COP0_MAP3787               0x0001180080947658  RSL
L2C_COP0_MAP3788               0x0001180080947660  RSL
L2C_COP0_MAP3789               0x0001180080947668  RSL
L2C_COP0_MAP3790               0x0001180080947670  RSL
L2C_COP0_MAP3791               0x0001180080947678  RSL
L2C_COP0_MAP3792               0x0001180080947680  RSL
L2C_COP0_MAP3793               0x0001180080947688  RSL
L2C_COP0_MAP3794               0x0001180080947690  RSL
L2C_COP0_MAP3795               0x0001180080947698  RSL
L2C_COP0_MAP3796               0x00011800809476A0  RSL
L2C_COP0_MAP3797               0x00011800809476A8  RSL
L2C_COP0_MAP3798               0x00011800809476B0  RSL
L2C_COP0_MAP3799               0x00011800809476B8  RSL
L2C_COP0_MAP3800               0x00011800809476C0  RSL
L2C_COP0_MAP3801               0x00011800809476C8  RSL
L2C_COP0_MAP3802               0x00011800809476D0  RSL
L2C_COP0_MAP3803               0x00011800809476D8  RSL
L2C_COP0_MAP3804               0x00011800809476E0  RSL
L2C_COP0_MAP3805               0x00011800809476E8  RSL
L2C_COP0_MAP3806               0x00011800809476F0  RSL
L2C_COP0_MAP3807               0x00011800809476F8  RSL
L2C_COP0_MAP3808               0x0001180080947700  RSL
L2C_COP0_MAP3809               0x0001180080947708  RSL
L2C_COP0_MAP3810               0x0001180080947710  RSL
L2C_COP0_MAP3811               0x0001180080947718  RSL
L2C_COP0_MAP3812               0x0001180080947720  RSL
L2C_COP0_MAP3813               0x0001180080947728  RSL
L2C_COP0_MAP3814               0x0001180080947730  RSL
L2C_COP0_MAP3815               0x0001180080947738  RSL
L2C_COP0_MAP3816               0x0001180080947740  RSL
L2C_COP0_MAP3817               0x0001180080947748  RSL
L2C_COP0_MAP3818               0x0001180080947750  RSL
L2C_COP0_MAP3819               0x0001180080947758  RSL
L2C_COP0_MAP3820               0x0001180080947760  RSL
L2C_COP0_MAP3821               0x0001180080947768  RSL
L2C_COP0_MAP3822               0x0001180080947770  RSL
L2C_COP0_MAP3823               0x0001180080947778  RSL
L2C_COP0_MAP3824               0x0001180080947780  RSL
L2C_COP0_MAP3825               0x0001180080947788  RSL
L2C_COP0_MAP3826               0x0001180080947790  RSL
L2C_COP0_MAP3827               0x0001180080947798  RSL
L2C_COP0_MAP3828               0x00011800809477A0  RSL
L2C_COP0_MAP3829               0x00011800809477A8  RSL
L2C_COP0_MAP3830               0x00011800809477B0  RSL
L2C_COP0_MAP3831               0x00011800809477B8  RSL
L2C_COP0_MAP3832               0x00011800809477C0  RSL
L2C_COP0_MAP3833               0x00011800809477C8  RSL
L2C_COP0_MAP3834               0x00011800809477D0  RSL
L2C_COP0_MAP3835               0x00011800809477D8  RSL
L2C_COP0_MAP3836               0x00011800809477E0  RSL
L2C_COP0_MAP3837               0x00011800809477E8  RSL
L2C_COP0_MAP3838               0x00011800809477F0  RSL
L2C_COP0_MAP3839               0x00011800809477F8  RSL
L2C_COP0_MAP3840               0x0001180080947800  RSL
L2C_COP0_MAP3841               0x0001180080947808  RSL
L2C_COP0_MAP3842               0x0001180080947810  RSL
L2C_COP0_MAP3843               0x0001180080947818  RSL
L2C_COP0_MAP3844               0x0001180080947820  RSL
L2C_COP0_MAP3845               0x0001180080947828  RSL
L2C_COP0_MAP3846               0x0001180080947830  RSL
L2C_COP0_MAP3847               0x0001180080947838  RSL
L2C_COP0_MAP3848               0x0001180080947840  RSL
L2C_COP0_MAP3849               0x0001180080947848  RSL
L2C_COP0_MAP3850               0x0001180080947850  RSL
L2C_COP0_MAP3851               0x0001180080947858  RSL
L2C_COP0_MAP3852               0x0001180080947860  RSL
L2C_COP0_MAP3853               0x0001180080947868  RSL
L2C_COP0_MAP3854               0x0001180080947870  RSL
L2C_COP0_MAP3855               0x0001180080947878  RSL
L2C_COP0_MAP3856               0x0001180080947880  RSL
L2C_COP0_MAP3857               0x0001180080947888  RSL
L2C_COP0_MAP3858               0x0001180080947890  RSL
L2C_COP0_MAP3859               0x0001180080947898  RSL
L2C_COP0_MAP3860               0x00011800809478A0  RSL
L2C_COP0_MAP3861               0x00011800809478A8  RSL
L2C_COP0_MAP3862               0x00011800809478B0  RSL
L2C_COP0_MAP3863               0x00011800809478B8  RSL
L2C_COP0_MAP3864               0x00011800809478C0  RSL
L2C_COP0_MAP3865               0x00011800809478C8  RSL
L2C_COP0_MAP3866               0x00011800809478D0  RSL
L2C_COP0_MAP3867               0x00011800809478D8  RSL
L2C_COP0_MAP3868               0x00011800809478E0  RSL
L2C_COP0_MAP3869               0x00011800809478E8  RSL
L2C_COP0_MAP3870               0x00011800809478F0  RSL
L2C_COP0_MAP3871               0x00011800809478F8  RSL
L2C_COP0_MAP3872               0x0001180080947900  RSL
L2C_COP0_MAP3873               0x0001180080947908  RSL
L2C_COP0_MAP3874               0x0001180080947910  RSL
L2C_COP0_MAP3875               0x0001180080947918  RSL
L2C_COP0_MAP3876               0x0001180080947920  RSL
L2C_COP0_MAP3877               0x0001180080947928  RSL
L2C_COP0_MAP3878               0x0001180080947930  RSL
L2C_COP0_MAP3879               0x0001180080947938  RSL
L2C_COP0_MAP3880               0x0001180080947940  RSL
L2C_COP0_MAP3881               0x0001180080947948  RSL
L2C_COP0_MAP3882               0x0001180080947950  RSL
L2C_COP0_MAP3883               0x0001180080947958  RSL
L2C_COP0_MAP3884               0x0001180080947960  RSL
L2C_COP0_MAP3885               0x0001180080947968  RSL
L2C_COP0_MAP3886               0x0001180080947970  RSL
L2C_COP0_MAP3887               0x0001180080947978  RSL
L2C_COP0_MAP3888               0x0001180080947980  RSL
L2C_COP0_MAP3889               0x0001180080947988  RSL
L2C_COP0_MAP3890               0x0001180080947990  RSL
L2C_COP0_MAP3891               0x0001180080947998  RSL
L2C_COP0_MAP3892               0x00011800809479A0  RSL
L2C_COP0_MAP3893               0x00011800809479A8  RSL
L2C_COP0_MAP3894               0x00011800809479B0  RSL
L2C_COP0_MAP3895               0x00011800809479B8  RSL
L2C_COP0_MAP3896               0x00011800809479C0  RSL
L2C_COP0_MAP3897               0x00011800809479C8  RSL
L2C_COP0_MAP3898               0x00011800809479D0  RSL
L2C_COP0_MAP3899               0x00011800809479D8  RSL
L2C_COP0_MAP3900               0x00011800809479E0  RSL
L2C_COP0_MAP3901               0x00011800809479E8  RSL
L2C_COP0_MAP3902               0x00011800809479F0  RSL
L2C_COP0_MAP3903               0x00011800809479F8  RSL
L2C_COP0_MAP3904               0x0001180080947A00  RSL
L2C_COP0_MAP3905               0x0001180080947A08  RSL
L2C_COP0_MAP3906               0x0001180080947A10  RSL
L2C_COP0_MAP3907               0x0001180080947A18  RSL
L2C_COP0_MAP3908               0x0001180080947A20  RSL
L2C_COP0_MAP3909               0x0001180080947A28  RSL
L2C_COP0_MAP3910               0x0001180080947A30  RSL
L2C_COP0_MAP3911               0x0001180080947A38  RSL
L2C_COP0_MAP3912               0x0001180080947A40  RSL
L2C_COP0_MAP3913               0x0001180080947A48  RSL
L2C_COP0_MAP3914               0x0001180080947A50  RSL
L2C_COP0_MAP3915               0x0001180080947A58  RSL
L2C_COP0_MAP3916               0x0001180080947A60  RSL
L2C_COP0_MAP3917               0x0001180080947A68  RSL
L2C_COP0_MAP3918               0x0001180080947A70  RSL
L2C_COP0_MAP3919               0x0001180080947A78  RSL
L2C_COP0_MAP3920               0x0001180080947A80  RSL
L2C_COP0_MAP3921               0x0001180080947A88  RSL
L2C_COP0_MAP3922               0x0001180080947A90  RSL
L2C_COP0_MAP3923               0x0001180080947A98  RSL
L2C_COP0_MAP3924               0x0001180080947AA0  RSL
L2C_COP0_MAP3925               0x0001180080947AA8  RSL
L2C_COP0_MAP3926               0x0001180080947AB0  RSL
L2C_COP0_MAP3927               0x0001180080947AB8  RSL
L2C_COP0_MAP3928               0x0001180080947AC0  RSL
L2C_COP0_MAP3929               0x0001180080947AC8  RSL
L2C_COP0_MAP3930               0x0001180080947AD0  RSL
L2C_COP0_MAP3931               0x0001180080947AD8  RSL
L2C_COP0_MAP3932               0x0001180080947AE0  RSL
L2C_COP0_MAP3933               0x0001180080947AE8  RSL
L2C_COP0_MAP3934               0x0001180080947AF0  RSL
L2C_COP0_MAP3935               0x0001180080947AF8  RSL
L2C_COP0_MAP3936               0x0001180080947B00  RSL
L2C_COP0_MAP3937               0x0001180080947B08  RSL
L2C_COP0_MAP3938               0x0001180080947B10  RSL
L2C_COP0_MAP3939               0x0001180080947B18  RSL
L2C_COP0_MAP3940               0x0001180080947B20  RSL
L2C_COP0_MAP3941               0x0001180080947B28  RSL
L2C_COP0_MAP3942               0x0001180080947B30  RSL
L2C_COP0_MAP3943               0x0001180080947B38  RSL
L2C_COP0_MAP3944               0x0001180080947B40  RSL
L2C_COP0_MAP3945               0x0001180080947B48  RSL
L2C_COP0_MAP3946               0x0001180080947B50  RSL
L2C_COP0_MAP3947               0x0001180080947B58  RSL
L2C_COP0_MAP3948               0x0001180080947B60  RSL
L2C_COP0_MAP3949               0x0001180080947B68  RSL
L2C_COP0_MAP3950               0x0001180080947B70  RSL
L2C_COP0_MAP3951               0x0001180080947B78  RSL
L2C_COP0_MAP3952               0x0001180080947B80  RSL
L2C_COP0_MAP3953               0x0001180080947B88  RSL
L2C_COP0_MAP3954               0x0001180080947B90  RSL
L2C_COP0_MAP3955               0x0001180080947B98  RSL
L2C_COP0_MAP3956               0x0001180080947BA0  RSL
L2C_COP0_MAP3957               0x0001180080947BA8  RSL
L2C_COP0_MAP3958               0x0001180080947BB0  RSL
L2C_COP0_MAP3959               0x0001180080947BB8  RSL
L2C_COP0_MAP3960               0x0001180080947BC0  RSL
L2C_COP0_MAP3961               0x0001180080947BC8  RSL
L2C_COP0_MAP3962               0x0001180080947BD0  RSL
L2C_COP0_MAP3963               0x0001180080947BD8  RSL
L2C_COP0_MAP3964               0x0001180080947BE0  RSL
L2C_COP0_MAP3965               0x0001180080947BE8  RSL
L2C_COP0_MAP3966               0x0001180080947BF0  RSL
L2C_COP0_MAP3967               0x0001180080947BF8  RSL
L2C_COP0_MAP3968               0x0001180080947C00  RSL
L2C_COP0_MAP3969               0x0001180080947C08  RSL
L2C_COP0_MAP3970               0x0001180080947C10  RSL
L2C_COP0_MAP3971               0x0001180080947C18  RSL
L2C_COP0_MAP3972               0x0001180080947C20  RSL
L2C_COP0_MAP3973               0x0001180080947C28  RSL
L2C_COP0_MAP3974               0x0001180080947C30  RSL
L2C_COP0_MAP3975               0x0001180080947C38  RSL
L2C_COP0_MAP3976               0x0001180080947C40  RSL
L2C_COP0_MAP3977               0x0001180080947C48  RSL
L2C_COP0_MAP3978               0x0001180080947C50  RSL
L2C_COP0_MAP3979               0x0001180080947C58  RSL
L2C_COP0_MAP3980               0x0001180080947C60  RSL
L2C_COP0_MAP3981               0x0001180080947C68  RSL
L2C_COP0_MAP3982               0x0001180080947C70  RSL
L2C_COP0_MAP3983               0x0001180080947C78  RSL
L2C_COP0_MAP3984               0x0001180080947C80  RSL
L2C_COP0_MAP3985               0x0001180080947C88  RSL
L2C_COP0_MAP3986               0x0001180080947C90  RSL
L2C_COP0_MAP3987               0x0001180080947C98  RSL
L2C_COP0_MAP3988               0x0001180080947CA0  RSL
L2C_COP0_MAP3989               0x0001180080947CA8  RSL
L2C_COP0_MAP3990               0x0001180080947CB0  RSL
L2C_COP0_MAP3991               0x0001180080947CB8  RSL
L2C_COP0_MAP3992               0x0001180080947CC0  RSL
L2C_COP0_MAP3993               0x0001180080947CC8  RSL
L2C_COP0_MAP3994               0x0001180080947CD0  RSL
L2C_COP0_MAP3995               0x0001180080947CD8  RSL
L2C_COP0_MAP3996               0x0001180080947CE0  RSL
L2C_COP0_MAP3997               0x0001180080947CE8  RSL
L2C_COP0_MAP3998               0x0001180080947CF0  RSL
L2C_COP0_MAP3999               0x0001180080947CF8  RSL
L2C_COP0_MAP4000               0x0001180080947D00  RSL
L2C_COP0_MAP4001               0x0001180080947D08  RSL
L2C_COP0_MAP4002               0x0001180080947D10  RSL
L2C_COP0_MAP4003               0x0001180080947D18  RSL
L2C_COP0_MAP4004               0x0001180080947D20  RSL
L2C_COP0_MAP4005               0x0001180080947D28  RSL
L2C_COP0_MAP4006               0x0001180080947D30  RSL
L2C_COP0_MAP4007               0x0001180080947D38  RSL
L2C_COP0_MAP4008               0x0001180080947D40  RSL
L2C_COP0_MAP4009               0x0001180080947D48  RSL
L2C_COP0_MAP4010               0x0001180080947D50  RSL
L2C_COP0_MAP4011               0x0001180080947D58  RSL
L2C_COP0_MAP4012               0x0001180080947D60  RSL
L2C_COP0_MAP4013               0x0001180080947D68  RSL
L2C_COP0_MAP4014               0x0001180080947D70  RSL
L2C_COP0_MAP4015               0x0001180080947D78  RSL
L2C_COP0_MAP4016               0x0001180080947D80  RSL
L2C_COP0_MAP4017               0x0001180080947D88  RSL
L2C_COP0_MAP4018               0x0001180080947D90  RSL
L2C_COP0_MAP4019               0x0001180080947D98  RSL
L2C_COP0_MAP4020               0x0001180080947DA0  RSL
L2C_COP0_MAP4021               0x0001180080947DA8  RSL
L2C_COP0_MAP4022               0x0001180080947DB0  RSL
L2C_COP0_MAP4023               0x0001180080947DB8  RSL
L2C_COP0_MAP4024               0x0001180080947DC0  RSL
L2C_COP0_MAP4025               0x0001180080947DC8  RSL
L2C_COP0_MAP4026               0x0001180080947DD0  RSL
L2C_COP0_MAP4027               0x0001180080947DD8  RSL
L2C_COP0_MAP4028               0x0001180080947DE0  RSL
L2C_COP0_MAP4029               0x0001180080947DE8  RSL
L2C_COP0_MAP4030               0x0001180080947DF0  RSL
L2C_COP0_MAP4031               0x0001180080947DF8  RSL
L2C_COP0_MAP4032               0x0001180080947E00  RSL
L2C_COP0_MAP4033               0x0001180080947E08  RSL
L2C_COP0_MAP4034               0x0001180080947E10  RSL
L2C_COP0_MAP4035               0x0001180080947E18  RSL
L2C_COP0_MAP4036               0x0001180080947E20  RSL
L2C_COP0_MAP4037               0x0001180080947E28  RSL
L2C_COP0_MAP4038               0x0001180080947E30  RSL
L2C_COP0_MAP4039               0x0001180080947E38  RSL
L2C_COP0_MAP4040               0x0001180080947E40  RSL
L2C_COP0_MAP4041               0x0001180080947E48  RSL
L2C_COP0_MAP4042               0x0001180080947E50  RSL
L2C_COP0_MAP4043               0x0001180080947E58  RSL
L2C_COP0_MAP4044               0x0001180080947E60  RSL
L2C_COP0_MAP4045               0x0001180080947E68  RSL
L2C_COP0_MAP4046               0x0001180080947E70  RSL
L2C_COP0_MAP4047               0x0001180080947E78  RSL
L2C_COP0_MAP4048               0x0001180080947E80  RSL
L2C_COP0_MAP4049               0x0001180080947E88  RSL
L2C_COP0_MAP4050               0x0001180080947E90  RSL
L2C_COP0_MAP4051               0x0001180080947E98  RSL
L2C_COP0_MAP4052               0x0001180080947EA0  RSL
L2C_COP0_MAP4053               0x0001180080947EA8  RSL
L2C_COP0_MAP4054               0x0001180080947EB0  RSL
L2C_COP0_MAP4055               0x0001180080947EB8  RSL
L2C_COP0_MAP4056               0x0001180080947EC0  RSL
L2C_COP0_MAP4057               0x0001180080947EC8  RSL
L2C_COP0_MAP4058               0x0001180080947ED0  RSL
L2C_COP0_MAP4059               0x0001180080947ED8  RSL
L2C_COP0_MAP4060               0x0001180080947EE0  RSL
L2C_COP0_MAP4061               0x0001180080947EE8  RSL
L2C_COP0_MAP4062               0x0001180080947EF0  RSL
L2C_COP0_MAP4063               0x0001180080947EF8  RSL
L2C_COP0_MAP4064               0x0001180080947F00  RSL
L2C_COP0_MAP4065               0x0001180080947F08  RSL
L2C_COP0_MAP4066               0x0001180080947F10  RSL
L2C_COP0_MAP4067               0x0001180080947F18  RSL
L2C_COP0_MAP4068               0x0001180080947F20  RSL
L2C_COP0_MAP4069               0x0001180080947F28  RSL
L2C_COP0_MAP4070               0x0001180080947F30  RSL
L2C_COP0_MAP4071               0x0001180080947F38  RSL
L2C_COP0_MAP4072               0x0001180080947F40  RSL
L2C_COP0_MAP4073               0x0001180080947F48  RSL
L2C_COP0_MAP4074               0x0001180080947F50  RSL
L2C_COP0_MAP4075               0x0001180080947F58  RSL
L2C_COP0_MAP4076               0x0001180080947F60  RSL
L2C_COP0_MAP4077               0x0001180080947F68  RSL
L2C_COP0_MAP4078               0x0001180080947F70  RSL
L2C_COP0_MAP4079               0x0001180080947F78  RSL
L2C_COP0_MAP4080               0x0001180080947F80  RSL
L2C_COP0_MAP4081               0x0001180080947F88  RSL
L2C_COP0_MAP4082               0x0001180080947F90  RSL
L2C_COP0_MAP4083               0x0001180080947F98  RSL
L2C_COP0_MAP4084               0x0001180080947FA0  RSL
L2C_COP0_MAP4085               0x0001180080947FA8  RSL
L2C_COP0_MAP4086               0x0001180080947FB0  RSL
L2C_COP0_MAP4087               0x0001180080947FB8  RSL
L2C_COP0_MAP4088               0x0001180080947FC0  RSL
L2C_COP0_MAP4089               0x0001180080947FC8  RSL
L2C_COP0_MAP4090               0x0001180080947FD0  RSL
L2C_COP0_MAP4091               0x0001180080947FD8  RSL
L2C_COP0_MAP4092               0x0001180080947FE0  RSL
L2C_COP0_MAP4093               0x0001180080947FE8  RSL
L2C_COP0_MAP4094               0x0001180080947FF0  RSL
L2C_COP0_MAP4095               0x0001180080947FF8  RSL
L2C_COP0_MAP4096               0x0001180080948000  RSL
L2C_COP0_MAP4097               0x0001180080948008  RSL
L2C_COP0_MAP4098               0x0001180080948010  RSL
L2C_COP0_MAP4099               0x0001180080948018  RSL
L2C_COP0_MAP4100               0x0001180080948020  RSL
L2C_COP0_MAP4101               0x0001180080948028  RSL
L2C_COP0_MAP4102               0x0001180080948030  RSL
L2C_COP0_MAP4103               0x0001180080948038  RSL
L2C_COP0_MAP4104               0x0001180080948040  RSL
L2C_COP0_MAP4105               0x0001180080948048  RSL
L2C_COP0_MAP4106               0x0001180080948050  RSL
L2C_COP0_MAP4107               0x0001180080948058  RSL
L2C_COP0_MAP4108               0x0001180080948060  RSL
L2C_COP0_MAP4109               0x0001180080948068  RSL
L2C_COP0_MAP4110               0x0001180080948070  RSL
L2C_COP0_MAP4111               0x0001180080948078  RSL
L2C_COP0_MAP4112               0x0001180080948080  RSL
L2C_COP0_MAP4113               0x0001180080948088  RSL
L2C_COP0_MAP4114               0x0001180080948090  RSL
L2C_COP0_MAP4115               0x0001180080948098  RSL
L2C_COP0_MAP4116               0x00011800809480A0  RSL
L2C_COP0_MAP4117               0x00011800809480A8  RSL
L2C_COP0_MAP4118               0x00011800809480B0  RSL
L2C_COP0_MAP4119               0x00011800809480B8  RSL
L2C_COP0_MAP4120               0x00011800809480C0  RSL
L2C_COP0_MAP4121               0x00011800809480C8  RSL
L2C_COP0_MAP4122               0x00011800809480D0  RSL
L2C_COP0_MAP4123               0x00011800809480D8  RSL
L2C_COP0_MAP4124               0x00011800809480E0  RSL
L2C_COP0_MAP4125               0x00011800809480E8  RSL
L2C_COP0_MAP4126               0x00011800809480F0  RSL
L2C_COP0_MAP4127               0x00011800809480F8  RSL
L2C_COP0_MAP4128               0x0001180080948100  RSL
L2C_COP0_MAP4129               0x0001180080948108  RSL
L2C_COP0_MAP4130               0x0001180080948110  RSL
L2C_COP0_MAP4131               0x0001180080948118  RSL
L2C_COP0_MAP4132               0x0001180080948120  RSL
L2C_COP0_MAP4133               0x0001180080948128  RSL
L2C_COP0_MAP4134               0x0001180080948130  RSL
L2C_COP0_MAP4135               0x0001180080948138  RSL
L2C_COP0_MAP4136               0x0001180080948140  RSL
L2C_COP0_MAP4137               0x0001180080948148  RSL
L2C_COP0_MAP4138               0x0001180080948150  RSL
L2C_COP0_MAP4139               0x0001180080948158  RSL
L2C_COP0_MAP4140               0x0001180080948160  RSL
L2C_COP0_MAP4141               0x0001180080948168  RSL
L2C_COP0_MAP4142               0x0001180080948170  RSL
L2C_COP0_MAP4143               0x0001180080948178  RSL
L2C_COP0_MAP4144               0x0001180080948180  RSL
L2C_COP0_MAP4145               0x0001180080948188  RSL
L2C_COP0_MAP4146               0x0001180080948190  RSL
L2C_COP0_MAP4147               0x0001180080948198  RSL
L2C_COP0_MAP4148               0x00011800809481A0  RSL
L2C_COP0_MAP4149               0x00011800809481A8  RSL
L2C_COP0_MAP4150               0x00011800809481B0  RSL
L2C_COP0_MAP4151               0x00011800809481B8  RSL
L2C_COP0_MAP4152               0x00011800809481C0  RSL
L2C_COP0_MAP4153               0x00011800809481C8  RSL
L2C_COP0_MAP4154               0x00011800809481D0  RSL
L2C_COP0_MAP4155               0x00011800809481D8  RSL
L2C_COP0_MAP4156               0x00011800809481E0  RSL
L2C_COP0_MAP4157               0x00011800809481E8  RSL
L2C_COP0_MAP4158               0x00011800809481F0  RSL
L2C_COP0_MAP4159               0x00011800809481F8  RSL
L2C_COP0_MAP4160               0x0001180080948200  RSL
L2C_COP0_MAP4161               0x0001180080948208  RSL
L2C_COP0_MAP4162               0x0001180080948210  RSL
L2C_COP0_MAP4163               0x0001180080948218  RSL
L2C_COP0_MAP4164               0x0001180080948220  RSL
L2C_COP0_MAP4165               0x0001180080948228  RSL
L2C_COP0_MAP4166               0x0001180080948230  RSL
L2C_COP0_MAP4167               0x0001180080948238  RSL
L2C_COP0_MAP4168               0x0001180080948240  RSL
L2C_COP0_MAP4169               0x0001180080948248  RSL
L2C_COP0_MAP4170               0x0001180080948250  RSL
L2C_COP0_MAP4171               0x0001180080948258  RSL
L2C_COP0_MAP4172               0x0001180080948260  RSL
L2C_COP0_MAP4173               0x0001180080948268  RSL
L2C_COP0_MAP4174               0x0001180080948270  RSL
L2C_COP0_MAP4175               0x0001180080948278  RSL
L2C_COP0_MAP4176               0x0001180080948280  RSL
L2C_COP0_MAP4177               0x0001180080948288  RSL
L2C_COP0_MAP4178               0x0001180080948290  RSL
L2C_COP0_MAP4179               0x0001180080948298  RSL
L2C_COP0_MAP4180               0x00011800809482A0  RSL
L2C_COP0_MAP4181               0x00011800809482A8  RSL
L2C_COP0_MAP4182               0x00011800809482B0  RSL
L2C_COP0_MAP4183               0x00011800809482B8  RSL
L2C_COP0_MAP4184               0x00011800809482C0  RSL
L2C_COP0_MAP4185               0x00011800809482C8  RSL
L2C_COP0_MAP4186               0x00011800809482D0  RSL
L2C_COP0_MAP4187               0x00011800809482D8  RSL
L2C_COP0_MAP4188               0x00011800809482E0  RSL
L2C_COP0_MAP4189               0x00011800809482E8  RSL
L2C_COP0_MAP4190               0x00011800809482F0  RSL
L2C_COP0_MAP4191               0x00011800809482F8  RSL
L2C_COP0_MAP4192               0x0001180080948300  RSL
L2C_COP0_MAP4193               0x0001180080948308  RSL
L2C_COP0_MAP4194               0x0001180080948310  RSL
L2C_COP0_MAP4195               0x0001180080948318  RSL
L2C_COP0_MAP4196               0x0001180080948320  RSL
L2C_COP0_MAP4197               0x0001180080948328  RSL
L2C_COP0_MAP4198               0x0001180080948330  RSL
L2C_COP0_MAP4199               0x0001180080948338  RSL
L2C_COP0_MAP4200               0x0001180080948340  RSL
L2C_COP0_MAP4201               0x0001180080948348  RSL
L2C_COP0_MAP4202               0x0001180080948350  RSL
L2C_COP0_MAP4203               0x0001180080948358  RSL
L2C_COP0_MAP4204               0x0001180080948360  RSL
L2C_COP0_MAP4205               0x0001180080948368  RSL
L2C_COP0_MAP4206               0x0001180080948370  RSL
L2C_COP0_MAP4207               0x0001180080948378  RSL
L2C_COP0_MAP4208               0x0001180080948380  RSL
L2C_COP0_MAP4209               0x0001180080948388  RSL
L2C_COP0_MAP4210               0x0001180080948390  RSL
L2C_COP0_MAP4211               0x0001180080948398  RSL
L2C_COP0_MAP4212               0x00011800809483A0  RSL
L2C_COP0_MAP4213               0x00011800809483A8  RSL
L2C_COP0_MAP4214               0x00011800809483B0  RSL
L2C_COP0_MAP4215               0x00011800809483B8  RSL
L2C_COP0_MAP4216               0x00011800809483C0  RSL
L2C_COP0_MAP4217               0x00011800809483C8  RSL
L2C_COP0_MAP4218               0x00011800809483D0  RSL
L2C_COP0_MAP4219               0x00011800809483D8  RSL
L2C_COP0_MAP4220               0x00011800809483E0  RSL
L2C_COP0_MAP4221               0x00011800809483E8  RSL
L2C_COP0_MAP4222               0x00011800809483F0  RSL
L2C_COP0_MAP4223               0x00011800809483F8  RSL
L2C_COP0_MAP4224               0x0001180080948400  RSL
L2C_COP0_MAP4225               0x0001180080948408  RSL
L2C_COP0_MAP4226               0x0001180080948410  RSL
L2C_COP0_MAP4227               0x0001180080948418  RSL
L2C_COP0_MAP4228               0x0001180080948420  RSL
L2C_COP0_MAP4229               0x0001180080948428  RSL
L2C_COP0_MAP4230               0x0001180080948430  RSL
L2C_COP0_MAP4231               0x0001180080948438  RSL
L2C_COP0_MAP4232               0x0001180080948440  RSL
L2C_COP0_MAP4233               0x0001180080948448  RSL
L2C_COP0_MAP4234               0x0001180080948450  RSL
L2C_COP0_MAP4235               0x0001180080948458  RSL
L2C_COP0_MAP4236               0x0001180080948460  RSL
L2C_COP0_MAP4237               0x0001180080948468  RSL
L2C_COP0_MAP4238               0x0001180080948470  RSL
L2C_COP0_MAP4239               0x0001180080948478  RSL
L2C_COP0_MAP4240               0x0001180080948480  RSL
L2C_COP0_MAP4241               0x0001180080948488  RSL
L2C_COP0_MAP4242               0x0001180080948490  RSL
L2C_COP0_MAP4243               0x0001180080948498  RSL
L2C_COP0_MAP4244               0x00011800809484A0  RSL
L2C_COP0_MAP4245               0x00011800809484A8  RSL
L2C_COP0_MAP4246               0x00011800809484B0  RSL
L2C_COP0_MAP4247               0x00011800809484B8  RSL
L2C_COP0_MAP4248               0x00011800809484C0  RSL
L2C_COP0_MAP4249               0x00011800809484C8  RSL
L2C_COP0_MAP4250               0x00011800809484D0  RSL
L2C_COP0_MAP4251               0x00011800809484D8  RSL
L2C_COP0_MAP4252               0x00011800809484E0  RSL
L2C_COP0_MAP4253               0x00011800809484E8  RSL
L2C_COP0_MAP4254               0x00011800809484F0  RSL
L2C_COP0_MAP4255               0x00011800809484F8  RSL
L2C_COP0_MAP4256               0x0001180080948500  RSL
L2C_COP0_MAP4257               0x0001180080948508  RSL
L2C_COP0_MAP4258               0x0001180080948510  RSL
L2C_COP0_MAP4259               0x0001180080948518  RSL
L2C_COP0_MAP4260               0x0001180080948520  RSL
L2C_COP0_MAP4261               0x0001180080948528  RSL
L2C_COP0_MAP4262               0x0001180080948530  RSL
L2C_COP0_MAP4263               0x0001180080948538  RSL
L2C_COP0_MAP4264               0x0001180080948540  RSL
L2C_COP0_MAP4265               0x0001180080948548  RSL
L2C_COP0_MAP4266               0x0001180080948550  RSL
L2C_COP0_MAP4267               0x0001180080948558  RSL
L2C_COP0_MAP4268               0x0001180080948560  RSL
L2C_COP0_MAP4269               0x0001180080948568  RSL
L2C_COP0_MAP4270               0x0001180080948570  RSL
L2C_COP0_MAP4271               0x0001180080948578  RSL
L2C_COP0_MAP4272               0x0001180080948580  RSL
L2C_COP0_MAP4273               0x0001180080948588  RSL
L2C_COP0_MAP4274               0x0001180080948590  RSL
L2C_COP0_MAP4275               0x0001180080948598  RSL
L2C_COP0_MAP4276               0x00011800809485A0  RSL
L2C_COP0_MAP4277               0x00011800809485A8  RSL
L2C_COP0_MAP4278               0x00011800809485B0  RSL
L2C_COP0_MAP4279               0x00011800809485B8  RSL
L2C_COP0_MAP4280               0x00011800809485C0  RSL
L2C_COP0_MAP4281               0x00011800809485C8  RSL
L2C_COP0_MAP4282               0x00011800809485D0  RSL
L2C_COP0_MAP4283               0x00011800809485D8  RSL
L2C_COP0_MAP4284               0x00011800809485E0  RSL
L2C_COP0_MAP4285               0x00011800809485E8  RSL
L2C_COP0_MAP4286               0x00011800809485F0  RSL
L2C_COP0_MAP4287               0x00011800809485F8  RSL
L2C_COP0_MAP4288               0x0001180080948600  RSL
L2C_COP0_MAP4289               0x0001180080948608  RSL
L2C_COP0_MAP4290               0x0001180080948610  RSL
L2C_COP0_MAP4291               0x0001180080948618  RSL
L2C_COP0_MAP4292               0x0001180080948620  RSL
L2C_COP0_MAP4293               0x0001180080948628  RSL
L2C_COP0_MAP4294               0x0001180080948630  RSL
L2C_COP0_MAP4295               0x0001180080948638  RSL
L2C_COP0_MAP4296               0x0001180080948640  RSL
L2C_COP0_MAP4297               0x0001180080948648  RSL
L2C_COP0_MAP4298               0x0001180080948650  RSL
L2C_COP0_MAP4299               0x0001180080948658  RSL
L2C_COP0_MAP4300               0x0001180080948660  RSL
L2C_COP0_MAP4301               0x0001180080948668  RSL
L2C_COP0_MAP4302               0x0001180080948670  RSL
L2C_COP0_MAP4303               0x0001180080948678  RSL
L2C_COP0_MAP4304               0x0001180080948680  RSL
L2C_COP0_MAP4305               0x0001180080948688  RSL
L2C_COP0_MAP4306               0x0001180080948690  RSL
L2C_COP0_MAP4307               0x0001180080948698  RSL
L2C_COP0_MAP4308               0x00011800809486A0  RSL
L2C_COP0_MAP4309               0x00011800809486A8  RSL
L2C_COP0_MAP4310               0x00011800809486B0  RSL
L2C_COP0_MAP4311               0x00011800809486B8  RSL
L2C_COP0_MAP4312               0x00011800809486C0  RSL
L2C_COP0_MAP4313               0x00011800809486C8  RSL
L2C_COP0_MAP4314               0x00011800809486D0  RSL
L2C_COP0_MAP4315               0x00011800809486D8  RSL
L2C_COP0_MAP4316               0x00011800809486E0  RSL
L2C_COP0_MAP4317               0x00011800809486E8  RSL
L2C_COP0_MAP4318               0x00011800809486F0  RSL
L2C_COP0_MAP4319               0x00011800809486F8  RSL
L2C_COP0_MAP4320               0x0001180080948700  RSL
L2C_COP0_MAP4321               0x0001180080948708  RSL
L2C_COP0_MAP4322               0x0001180080948710  RSL
L2C_COP0_MAP4323               0x0001180080948718  RSL
L2C_COP0_MAP4324               0x0001180080948720  RSL
L2C_COP0_MAP4325               0x0001180080948728  RSL
L2C_COP0_MAP4326               0x0001180080948730  RSL
L2C_COP0_MAP4327               0x0001180080948738  RSL
L2C_COP0_MAP4328               0x0001180080948740  RSL
L2C_COP0_MAP4329               0x0001180080948748  RSL
L2C_COP0_MAP4330               0x0001180080948750  RSL
L2C_COP0_MAP4331               0x0001180080948758  RSL
L2C_COP0_MAP4332               0x0001180080948760  RSL
L2C_COP0_MAP4333               0x0001180080948768  RSL
L2C_COP0_MAP4334               0x0001180080948770  RSL
L2C_COP0_MAP4335               0x0001180080948778  RSL
L2C_COP0_MAP4336               0x0001180080948780  RSL
L2C_COP0_MAP4337               0x0001180080948788  RSL
L2C_COP0_MAP4338               0x0001180080948790  RSL
L2C_COP0_MAP4339               0x0001180080948798  RSL
L2C_COP0_MAP4340               0x00011800809487A0  RSL
L2C_COP0_MAP4341               0x00011800809487A8  RSL
L2C_COP0_MAP4342               0x00011800809487B0  RSL
L2C_COP0_MAP4343               0x00011800809487B8  RSL
L2C_COP0_MAP4344               0x00011800809487C0  RSL
L2C_COP0_MAP4345               0x00011800809487C8  RSL
L2C_COP0_MAP4346               0x00011800809487D0  RSL
L2C_COP0_MAP4347               0x00011800809487D8  RSL
L2C_COP0_MAP4348               0x00011800809487E0  RSL
L2C_COP0_MAP4349               0x00011800809487E8  RSL
L2C_COP0_MAP4350               0x00011800809487F0  RSL
L2C_COP0_MAP4351               0x00011800809487F8  RSL
L2C_COP0_MAP4352               0x0001180080948800  RSL
L2C_COP0_MAP4353               0x0001180080948808  RSL
L2C_COP0_MAP4354               0x0001180080948810  RSL
L2C_COP0_MAP4355               0x0001180080948818  RSL
L2C_COP0_MAP4356               0x0001180080948820  RSL
L2C_COP0_MAP4357               0x0001180080948828  RSL
L2C_COP0_MAP4358               0x0001180080948830  RSL
L2C_COP0_MAP4359               0x0001180080948838  RSL
L2C_COP0_MAP4360               0x0001180080948840  RSL
L2C_COP0_MAP4361               0x0001180080948848  RSL
L2C_COP0_MAP4362               0x0001180080948850  RSL
L2C_COP0_MAP4363               0x0001180080948858  RSL
L2C_COP0_MAP4364               0x0001180080948860  RSL
L2C_COP0_MAP4365               0x0001180080948868  RSL
L2C_COP0_MAP4366               0x0001180080948870  RSL
L2C_COP0_MAP4367               0x0001180080948878  RSL
L2C_COP0_MAP4368               0x0001180080948880  RSL
L2C_COP0_MAP4369               0x0001180080948888  RSL
L2C_COP0_MAP4370               0x0001180080948890  RSL
L2C_COP0_MAP4371               0x0001180080948898  RSL
L2C_COP0_MAP4372               0x00011800809488A0  RSL
L2C_COP0_MAP4373               0x00011800809488A8  RSL
L2C_COP0_MAP4374               0x00011800809488B0  RSL
L2C_COP0_MAP4375               0x00011800809488B8  RSL
L2C_COP0_MAP4376               0x00011800809488C0  RSL
L2C_COP0_MAP4377               0x00011800809488C8  RSL
L2C_COP0_MAP4378               0x00011800809488D0  RSL
L2C_COP0_MAP4379               0x00011800809488D8  RSL
L2C_COP0_MAP4380               0x00011800809488E0  RSL
L2C_COP0_MAP4381               0x00011800809488E8  RSL
L2C_COP0_MAP4382               0x00011800809488F0  RSL
L2C_COP0_MAP4383               0x00011800809488F8  RSL
L2C_COP0_MAP4384               0x0001180080948900  RSL
L2C_COP0_MAP4385               0x0001180080948908  RSL
L2C_COP0_MAP4386               0x0001180080948910  RSL
L2C_COP0_MAP4387               0x0001180080948918  RSL
L2C_COP0_MAP4388               0x0001180080948920  RSL
L2C_COP0_MAP4389               0x0001180080948928  RSL
L2C_COP0_MAP4390               0x0001180080948930  RSL
L2C_COP0_MAP4391               0x0001180080948938  RSL
L2C_COP0_MAP4392               0x0001180080948940  RSL
L2C_COP0_MAP4393               0x0001180080948948  RSL
L2C_COP0_MAP4394               0x0001180080948950  RSL
L2C_COP0_MAP4395               0x0001180080948958  RSL
L2C_COP0_MAP4396               0x0001180080948960  RSL
L2C_COP0_MAP4397               0x0001180080948968  RSL
L2C_COP0_MAP4398               0x0001180080948970  RSL
L2C_COP0_MAP4399               0x0001180080948978  RSL
L2C_COP0_MAP4400               0x0001180080948980  RSL
L2C_COP0_MAP4401               0x0001180080948988  RSL
L2C_COP0_MAP4402               0x0001180080948990  RSL
L2C_COP0_MAP4403               0x0001180080948998  RSL
L2C_COP0_MAP4404               0x00011800809489A0  RSL
L2C_COP0_MAP4405               0x00011800809489A8  RSL
L2C_COP0_MAP4406               0x00011800809489B0  RSL
L2C_COP0_MAP4407               0x00011800809489B8  RSL
L2C_COP0_MAP4408               0x00011800809489C0  RSL
L2C_COP0_MAP4409               0x00011800809489C8  RSL
L2C_COP0_MAP4410               0x00011800809489D0  RSL
L2C_COP0_MAP4411               0x00011800809489D8  RSL
L2C_COP0_MAP4412               0x00011800809489E0  RSL
L2C_COP0_MAP4413               0x00011800809489E8  RSL
L2C_COP0_MAP4414               0x00011800809489F0  RSL
L2C_COP0_MAP4415               0x00011800809489F8  RSL
L2C_COP0_MAP4416               0x0001180080948A00  RSL
L2C_COP0_MAP4417               0x0001180080948A08  RSL
L2C_COP0_MAP4418               0x0001180080948A10  RSL
L2C_COP0_MAP4419               0x0001180080948A18  RSL
L2C_COP0_MAP4420               0x0001180080948A20  RSL
L2C_COP0_MAP4421               0x0001180080948A28  RSL
L2C_COP0_MAP4422               0x0001180080948A30  RSL
L2C_COP0_MAP4423               0x0001180080948A38  RSL
L2C_COP0_MAP4424               0x0001180080948A40  RSL
L2C_COP0_MAP4425               0x0001180080948A48  RSL
L2C_COP0_MAP4426               0x0001180080948A50  RSL
L2C_COP0_MAP4427               0x0001180080948A58  RSL
L2C_COP0_MAP4428               0x0001180080948A60  RSL
L2C_COP0_MAP4429               0x0001180080948A68  RSL
L2C_COP0_MAP4430               0x0001180080948A70  RSL
L2C_COP0_MAP4431               0x0001180080948A78  RSL
L2C_COP0_MAP4432               0x0001180080948A80  RSL
L2C_COP0_MAP4433               0x0001180080948A88  RSL
L2C_COP0_MAP4434               0x0001180080948A90  RSL
L2C_COP0_MAP4435               0x0001180080948A98  RSL
L2C_COP0_MAP4436               0x0001180080948AA0  RSL
L2C_COP0_MAP4437               0x0001180080948AA8  RSL
L2C_COP0_MAP4438               0x0001180080948AB0  RSL
L2C_COP0_MAP4439               0x0001180080948AB8  RSL
L2C_COP0_MAP4440               0x0001180080948AC0  RSL
L2C_COP0_MAP4441               0x0001180080948AC8  RSL
L2C_COP0_MAP4442               0x0001180080948AD0  RSL
L2C_COP0_MAP4443               0x0001180080948AD8  RSL
L2C_COP0_MAP4444               0x0001180080948AE0  RSL
L2C_COP0_MAP4445               0x0001180080948AE8  RSL
L2C_COP0_MAP4446               0x0001180080948AF0  RSL
L2C_COP0_MAP4447               0x0001180080948AF8  RSL
L2C_COP0_MAP4448               0x0001180080948B00  RSL
L2C_COP0_MAP4449               0x0001180080948B08  RSL
L2C_COP0_MAP4450               0x0001180080948B10  RSL
L2C_COP0_MAP4451               0x0001180080948B18  RSL
L2C_COP0_MAP4452               0x0001180080948B20  RSL
L2C_COP0_MAP4453               0x0001180080948B28  RSL
L2C_COP0_MAP4454               0x0001180080948B30  RSL
L2C_COP0_MAP4455               0x0001180080948B38  RSL
L2C_COP0_MAP4456               0x0001180080948B40  RSL
L2C_COP0_MAP4457               0x0001180080948B48  RSL
L2C_COP0_MAP4458               0x0001180080948B50  RSL
L2C_COP0_MAP4459               0x0001180080948B58  RSL
L2C_COP0_MAP4460               0x0001180080948B60  RSL
L2C_COP0_MAP4461               0x0001180080948B68  RSL
L2C_COP0_MAP4462               0x0001180080948B70  RSL
L2C_COP0_MAP4463               0x0001180080948B78  RSL
L2C_COP0_MAP4464               0x0001180080948B80  RSL
L2C_COP0_MAP4465               0x0001180080948B88  RSL
L2C_COP0_MAP4466               0x0001180080948B90  RSL
L2C_COP0_MAP4467               0x0001180080948B98  RSL
L2C_COP0_MAP4468               0x0001180080948BA0  RSL
L2C_COP0_MAP4469               0x0001180080948BA8  RSL
L2C_COP0_MAP4470               0x0001180080948BB0  RSL
L2C_COP0_MAP4471               0x0001180080948BB8  RSL
L2C_COP0_MAP4472               0x0001180080948BC0  RSL
L2C_COP0_MAP4473               0x0001180080948BC8  RSL
L2C_COP0_MAP4474               0x0001180080948BD0  RSL
L2C_COP0_MAP4475               0x0001180080948BD8  RSL
L2C_COP0_MAP4476               0x0001180080948BE0  RSL
L2C_COP0_MAP4477               0x0001180080948BE8  RSL
L2C_COP0_MAP4478               0x0001180080948BF0  RSL
L2C_COP0_MAP4479               0x0001180080948BF8  RSL
L2C_COP0_MAP4480               0x0001180080948C00  RSL
L2C_COP0_MAP4481               0x0001180080948C08  RSL
L2C_COP0_MAP4482               0x0001180080948C10  RSL
L2C_COP0_MAP4483               0x0001180080948C18  RSL
L2C_COP0_MAP4484               0x0001180080948C20  RSL
L2C_COP0_MAP4485               0x0001180080948C28  RSL
L2C_COP0_MAP4486               0x0001180080948C30  RSL
L2C_COP0_MAP4487               0x0001180080948C38  RSL
L2C_COP0_MAP4488               0x0001180080948C40  RSL
L2C_COP0_MAP4489               0x0001180080948C48  RSL
L2C_COP0_MAP4490               0x0001180080948C50  RSL
L2C_COP0_MAP4491               0x0001180080948C58  RSL
L2C_COP0_MAP4492               0x0001180080948C60  RSL
L2C_COP0_MAP4493               0x0001180080948C68  RSL
L2C_COP0_MAP4494               0x0001180080948C70  RSL
L2C_COP0_MAP4495               0x0001180080948C78  RSL
L2C_COP0_MAP4496               0x0001180080948C80  RSL
L2C_COP0_MAP4497               0x0001180080948C88  RSL
L2C_COP0_MAP4498               0x0001180080948C90  RSL
L2C_COP0_MAP4499               0x0001180080948C98  RSL
L2C_COP0_MAP4500               0x0001180080948CA0  RSL
L2C_COP0_MAP4501               0x0001180080948CA8  RSL
L2C_COP0_MAP4502               0x0001180080948CB0  RSL
L2C_COP0_MAP4503               0x0001180080948CB8  RSL
L2C_COP0_MAP4504               0x0001180080948CC0  RSL
L2C_COP0_MAP4505               0x0001180080948CC8  RSL
L2C_COP0_MAP4506               0x0001180080948CD0  RSL
L2C_COP0_MAP4507               0x0001180080948CD8  RSL
L2C_COP0_MAP4508               0x0001180080948CE0  RSL
L2C_COP0_MAP4509               0x0001180080948CE8  RSL
L2C_COP0_MAP4510               0x0001180080948CF0  RSL
L2C_COP0_MAP4511               0x0001180080948CF8  RSL
L2C_COP0_MAP4512               0x0001180080948D00  RSL
L2C_COP0_MAP4513               0x0001180080948D08  RSL
L2C_COP0_MAP4514               0x0001180080948D10  RSL
L2C_COP0_MAP4515               0x0001180080948D18  RSL
L2C_COP0_MAP4516               0x0001180080948D20  RSL
L2C_COP0_MAP4517               0x0001180080948D28  RSL
L2C_COP0_MAP4518               0x0001180080948D30  RSL
L2C_COP0_MAP4519               0x0001180080948D38  RSL
L2C_COP0_MAP4520               0x0001180080948D40  RSL
L2C_COP0_MAP4521               0x0001180080948D48  RSL
L2C_COP0_MAP4522               0x0001180080948D50  RSL
L2C_COP0_MAP4523               0x0001180080948D58  RSL
L2C_COP0_MAP4524               0x0001180080948D60  RSL
L2C_COP0_MAP4525               0x0001180080948D68  RSL
L2C_COP0_MAP4526               0x0001180080948D70  RSL
L2C_COP0_MAP4527               0x0001180080948D78  RSL
L2C_COP0_MAP4528               0x0001180080948D80  RSL
L2C_COP0_MAP4529               0x0001180080948D88  RSL
L2C_COP0_MAP4530               0x0001180080948D90  RSL
L2C_COP0_MAP4531               0x0001180080948D98  RSL
L2C_COP0_MAP4532               0x0001180080948DA0  RSL
L2C_COP0_MAP4533               0x0001180080948DA8  RSL
L2C_COP0_MAP4534               0x0001180080948DB0  RSL
L2C_COP0_MAP4535               0x0001180080948DB8  RSL
L2C_COP0_MAP4536               0x0001180080948DC0  RSL
L2C_COP0_MAP4537               0x0001180080948DC8  RSL
L2C_COP0_MAP4538               0x0001180080948DD0  RSL
L2C_COP0_MAP4539               0x0001180080948DD8  RSL
L2C_COP0_MAP4540               0x0001180080948DE0  RSL
L2C_COP0_MAP4541               0x0001180080948DE8  RSL
L2C_COP0_MAP4542               0x0001180080948DF0  RSL
L2C_COP0_MAP4543               0x0001180080948DF8  RSL
L2C_COP0_MAP4544               0x0001180080948E00  RSL
L2C_COP0_MAP4545               0x0001180080948E08  RSL
L2C_COP0_MAP4546               0x0001180080948E10  RSL
L2C_COP0_MAP4547               0x0001180080948E18  RSL
L2C_COP0_MAP4548               0x0001180080948E20  RSL
L2C_COP0_MAP4549               0x0001180080948E28  RSL
L2C_COP0_MAP4550               0x0001180080948E30  RSL
L2C_COP0_MAP4551               0x0001180080948E38  RSL
L2C_COP0_MAP4552               0x0001180080948E40  RSL
L2C_COP0_MAP4553               0x0001180080948E48  RSL
L2C_COP0_MAP4554               0x0001180080948E50  RSL
L2C_COP0_MAP4555               0x0001180080948E58  RSL
L2C_COP0_MAP4556               0x0001180080948E60  RSL
L2C_COP0_MAP4557               0x0001180080948E68  RSL
L2C_COP0_MAP4558               0x0001180080948E70  RSL
L2C_COP0_MAP4559               0x0001180080948E78  RSL
L2C_COP0_MAP4560               0x0001180080948E80  RSL
L2C_COP0_MAP4561               0x0001180080948E88  RSL
L2C_COP0_MAP4562               0x0001180080948E90  RSL
L2C_COP0_MAP4563               0x0001180080948E98  RSL
L2C_COP0_MAP4564               0x0001180080948EA0  RSL
L2C_COP0_MAP4565               0x0001180080948EA8  RSL
L2C_COP0_MAP4566               0x0001180080948EB0  RSL
L2C_COP0_MAP4567               0x0001180080948EB8  RSL
L2C_COP0_MAP4568               0x0001180080948EC0  RSL
L2C_COP0_MAP4569               0x0001180080948EC8  RSL
L2C_COP0_MAP4570               0x0001180080948ED0  RSL
L2C_COP0_MAP4571               0x0001180080948ED8  RSL
L2C_COP0_MAP4572               0x0001180080948EE0  RSL
L2C_COP0_MAP4573               0x0001180080948EE8  RSL
L2C_COP0_MAP4574               0x0001180080948EF0  RSL
L2C_COP0_MAP4575               0x0001180080948EF8  RSL
L2C_COP0_MAP4576               0x0001180080948F00  RSL
L2C_COP0_MAP4577               0x0001180080948F08  RSL
L2C_COP0_MAP4578               0x0001180080948F10  RSL
L2C_COP0_MAP4579               0x0001180080948F18  RSL
L2C_COP0_MAP4580               0x0001180080948F20  RSL
L2C_COP0_MAP4581               0x0001180080948F28  RSL
L2C_COP0_MAP4582               0x0001180080948F30  RSL
L2C_COP0_MAP4583               0x0001180080948F38  RSL
L2C_COP0_MAP4584               0x0001180080948F40  RSL
L2C_COP0_MAP4585               0x0001180080948F48  RSL
L2C_COP0_MAP4586               0x0001180080948F50  RSL
L2C_COP0_MAP4587               0x0001180080948F58  RSL
L2C_COP0_MAP4588               0x0001180080948F60  RSL
L2C_COP0_MAP4589               0x0001180080948F68  RSL
L2C_COP0_MAP4590               0x0001180080948F70  RSL
L2C_COP0_MAP4591               0x0001180080948F78  RSL
L2C_COP0_MAP4592               0x0001180080948F80  RSL
L2C_COP0_MAP4593               0x0001180080948F88  RSL
L2C_COP0_MAP4594               0x0001180080948F90  RSL
L2C_COP0_MAP4595               0x0001180080948F98  RSL
L2C_COP0_MAP4596               0x0001180080948FA0  RSL
L2C_COP0_MAP4597               0x0001180080948FA8  RSL
L2C_COP0_MAP4598               0x0001180080948FB0  RSL
L2C_COP0_MAP4599               0x0001180080948FB8  RSL
L2C_COP0_MAP4600               0x0001180080948FC0  RSL
L2C_COP0_MAP4601               0x0001180080948FC8  RSL
L2C_COP0_MAP4602               0x0001180080948FD0  RSL
L2C_COP0_MAP4603               0x0001180080948FD8  RSL
L2C_COP0_MAP4604               0x0001180080948FE0  RSL
L2C_COP0_MAP4605               0x0001180080948FE8  RSL
L2C_COP0_MAP4606               0x0001180080948FF0  RSL
L2C_COP0_MAP4607               0x0001180080948FF8  RSL
L2C_COP0_MAP4608               0x0001180080949000  RSL
L2C_COP0_MAP4609               0x0001180080949008  RSL
L2C_COP0_MAP4610               0x0001180080949010  RSL
L2C_COP0_MAP4611               0x0001180080949018  RSL
L2C_COP0_MAP4612               0x0001180080949020  RSL
L2C_COP0_MAP4613               0x0001180080949028  RSL
L2C_COP0_MAP4614               0x0001180080949030  RSL
L2C_COP0_MAP4615               0x0001180080949038  RSL
L2C_COP0_MAP4616               0x0001180080949040  RSL
L2C_COP0_MAP4617               0x0001180080949048  RSL
L2C_COP0_MAP4618               0x0001180080949050  RSL
L2C_COP0_MAP4619               0x0001180080949058  RSL
L2C_COP0_MAP4620               0x0001180080949060  RSL
L2C_COP0_MAP4621               0x0001180080949068  RSL
L2C_COP0_MAP4622               0x0001180080949070  RSL
L2C_COP0_MAP4623               0x0001180080949078  RSL
L2C_COP0_MAP4624               0x0001180080949080  RSL
L2C_COP0_MAP4625               0x0001180080949088  RSL
L2C_COP0_MAP4626               0x0001180080949090  RSL
L2C_COP0_MAP4627               0x0001180080949098  RSL
L2C_COP0_MAP4628               0x00011800809490A0  RSL
L2C_COP0_MAP4629               0x00011800809490A8  RSL
L2C_COP0_MAP4630               0x00011800809490B0  RSL
L2C_COP0_MAP4631               0x00011800809490B8  RSL
L2C_COP0_MAP4632               0x00011800809490C0  RSL
L2C_COP0_MAP4633               0x00011800809490C8  RSL
L2C_COP0_MAP4634               0x00011800809490D0  RSL
L2C_COP0_MAP4635               0x00011800809490D8  RSL
L2C_COP0_MAP4636               0x00011800809490E0  RSL
L2C_COP0_MAP4637               0x00011800809490E8  RSL
L2C_COP0_MAP4638               0x00011800809490F0  RSL
L2C_COP0_MAP4639               0x00011800809490F8  RSL
L2C_COP0_MAP4640               0x0001180080949100  RSL
L2C_COP0_MAP4641               0x0001180080949108  RSL
L2C_COP0_MAP4642               0x0001180080949110  RSL
L2C_COP0_MAP4643               0x0001180080949118  RSL
L2C_COP0_MAP4644               0x0001180080949120  RSL
L2C_COP0_MAP4645               0x0001180080949128  RSL
L2C_COP0_MAP4646               0x0001180080949130  RSL
L2C_COP0_MAP4647               0x0001180080949138  RSL
L2C_COP0_MAP4648               0x0001180080949140  RSL
L2C_COP0_MAP4649               0x0001180080949148  RSL
L2C_COP0_MAP4650               0x0001180080949150  RSL
L2C_COP0_MAP4651               0x0001180080949158  RSL
L2C_COP0_MAP4652               0x0001180080949160  RSL
L2C_COP0_MAP4653               0x0001180080949168  RSL
L2C_COP0_MAP4654               0x0001180080949170  RSL
L2C_COP0_MAP4655               0x0001180080949178  RSL
L2C_COP0_MAP4656               0x0001180080949180  RSL
L2C_COP0_MAP4657               0x0001180080949188  RSL
L2C_COP0_MAP4658               0x0001180080949190  RSL
L2C_COP0_MAP4659               0x0001180080949198  RSL
L2C_COP0_MAP4660               0x00011800809491A0  RSL
L2C_COP0_MAP4661               0x00011800809491A8  RSL
L2C_COP0_MAP4662               0x00011800809491B0  RSL
L2C_COP0_MAP4663               0x00011800809491B8  RSL
L2C_COP0_MAP4664               0x00011800809491C0  RSL
L2C_COP0_MAP4665               0x00011800809491C8  RSL
L2C_COP0_MAP4666               0x00011800809491D0  RSL
L2C_COP0_MAP4667               0x00011800809491D8  RSL
L2C_COP0_MAP4668               0x00011800809491E0  RSL
L2C_COP0_MAP4669               0x00011800809491E8  RSL
L2C_COP0_MAP4670               0x00011800809491F0  RSL
L2C_COP0_MAP4671               0x00011800809491F8  RSL
L2C_COP0_MAP4672               0x0001180080949200  RSL
L2C_COP0_MAP4673               0x0001180080949208  RSL
L2C_COP0_MAP4674               0x0001180080949210  RSL
L2C_COP0_MAP4675               0x0001180080949218  RSL
L2C_COP0_MAP4676               0x0001180080949220  RSL
L2C_COP0_MAP4677               0x0001180080949228  RSL
L2C_COP0_MAP4678               0x0001180080949230  RSL
L2C_COP0_MAP4679               0x0001180080949238  RSL
L2C_COP0_MAP4680               0x0001180080949240  RSL
L2C_COP0_MAP4681               0x0001180080949248  RSL
L2C_COP0_MAP4682               0x0001180080949250  RSL
L2C_COP0_MAP4683               0x0001180080949258  RSL
L2C_COP0_MAP4684               0x0001180080949260  RSL
L2C_COP0_MAP4685               0x0001180080949268  RSL
L2C_COP0_MAP4686               0x0001180080949270  RSL
L2C_COP0_MAP4687               0x0001180080949278  RSL
L2C_COP0_MAP4688               0x0001180080949280  RSL
L2C_COP0_MAP4689               0x0001180080949288  RSL
L2C_COP0_MAP4690               0x0001180080949290  RSL
L2C_COP0_MAP4691               0x0001180080949298  RSL
L2C_COP0_MAP4692               0x00011800809492A0  RSL
L2C_COP0_MAP4693               0x00011800809492A8  RSL
L2C_COP0_MAP4694               0x00011800809492B0  RSL
L2C_COP0_MAP4695               0x00011800809492B8  RSL
L2C_COP0_MAP4696               0x00011800809492C0  RSL
L2C_COP0_MAP4697               0x00011800809492C8  RSL
L2C_COP0_MAP4698               0x00011800809492D0  RSL
L2C_COP0_MAP4699               0x00011800809492D8  RSL
L2C_COP0_MAP4700               0x00011800809492E0  RSL
L2C_COP0_MAP4701               0x00011800809492E8  RSL
L2C_COP0_MAP4702               0x00011800809492F0  RSL
L2C_COP0_MAP4703               0x00011800809492F8  RSL
L2C_COP0_MAP4704               0x0001180080949300  RSL
L2C_COP0_MAP4705               0x0001180080949308  RSL
L2C_COP0_MAP4706               0x0001180080949310  RSL
L2C_COP0_MAP4707               0x0001180080949318  RSL
L2C_COP0_MAP4708               0x0001180080949320  RSL
L2C_COP0_MAP4709               0x0001180080949328  RSL
L2C_COP0_MAP4710               0x0001180080949330  RSL
L2C_COP0_MAP4711               0x0001180080949338  RSL
L2C_COP0_MAP4712               0x0001180080949340  RSL
L2C_COP0_MAP4713               0x0001180080949348  RSL
L2C_COP0_MAP4714               0x0001180080949350  RSL
L2C_COP0_MAP4715               0x0001180080949358  RSL
L2C_COP0_MAP4716               0x0001180080949360  RSL
L2C_COP0_MAP4717               0x0001180080949368  RSL
L2C_COP0_MAP4718               0x0001180080949370  RSL
L2C_COP0_MAP4719               0x0001180080949378  RSL
L2C_COP0_MAP4720               0x0001180080949380  RSL
L2C_COP0_MAP4721               0x0001180080949388  RSL
L2C_COP0_MAP4722               0x0001180080949390  RSL
L2C_COP0_MAP4723               0x0001180080949398  RSL
L2C_COP0_MAP4724               0x00011800809493A0  RSL
L2C_COP0_MAP4725               0x00011800809493A8  RSL
L2C_COP0_MAP4726               0x00011800809493B0  RSL
L2C_COP0_MAP4727               0x00011800809493B8  RSL
L2C_COP0_MAP4728               0x00011800809493C0  RSL
L2C_COP0_MAP4729               0x00011800809493C8  RSL
L2C_COP0_MAP4730               0x00011800809493D0  RSL
L2C_COP0_MAP4731               0x00011800809493D8  RSL
L2C_COP0_MAP4732               0x00011800809493E0  RSL
L2C_COP0_MAP4733               0x00011800809493E8  RSL
L2C_COP0_MAP4734               0x00011800809493F0  RSL
L2C_COP0_MAP4735               0x00011800809493F8  RSL
L2C_COP0_MAP4736               0x0001180080949400  RSL
L2C_COP0_MAP4737               0x0001180080949408  RSL
L2C_COP0_MAP4738               0x0001180080949410  RSL
L2C_COP0_MAP4739               0x0001180080949418  RSL
L2C_COP0_MAP4740               0x0001180080949420  RSL
L2C_COP0_MAP4741               0x0001180080949428  RSL
L2C_COP0_MAP4742               0x0001180080949430  RSL
L2C_COP0_MAP4743               0x0001180080949438  RSL
L2C_COP0_MAP4744               0x0001180080949440  RSL
L2C_COP0_MAP4745               0x0001180080949448  RSL
L2C_COP0_MAP4746               0x0001180080949450  RSL
L2C_COP0_MAP4747               0x0001180080949458  RSL
L2C_COP0_MAP4748               0x0001180080949460  RSL
L2C_COP0_MAP4749               0x0001180080949468  RSL
L2C_COP0_MAP4750               0x0001180080949470  RSL
L2C_COP0_MAP4751               0x0001180080949478  RSL
L2C_COP0_MAP4752               0x0001180080949480  RSL
L2C_COP0_MAP4753               0x0001180080949488  RSL
L2C_COP0_MAP4754               0x0001180080949490  RSL
L2C_COP0_MAP4755               0x0001180080949498  RSL
L2C_COP0_MAP4756               0x00011800809494A0  RSL
L2C_COP0_MAP4757               0x00011800809494A8  RSL
L2C_COP0_MAP4758               0x00011800809494B0  RSL
L2C_COP0_MAP4759               0x00011800809494B8  RSL
L2C_COP0_MAP4760               0x00011800809494C0  RSL
L2C_COP0_MAP4761               0x00011800809494C8  RSL
L2C_COP0_MAP4762               0x00011800809494D0  RSL
L2C_COP0_MAP4763               0x00011800809494D8  RSL
L2C_COP0_MAP4764               0x00011800809494E0  RSL
L2C_COP0_MAP4765               0x00011800809494E8  RSL
L2C_COP0_MAP4766               0x00011800809494F0  RSL
L2C_COP0_MAP4767               0x00011800809494F8  RSL
L2C_COP0_MAP4768               0x0001180080949500  RSL
L2C_COP0_MAP4769               0x0001180080949508  RSL
L2C_COP0_MAP4770               0x0001180080949510  RSL
L2C_COP0_MAP4771               0x0001180080949518  RSL
L2C_COP0_MAP4772               0x0001180080949520  RSL
L2C_COP0_MAP4773               0x0001180080949528  RSL
L2C_COP0_MAP4774               0x0001180080949530  RSL
L2C_COP0_MAP4775               0x0001180080949538  RSL
L2C_COP0_MAP4776               0x0001180080949540  RSL
L2C_COP0_MAP4777               0x0001180080949548  RSL
L2C_COP0_MAP4778               0x0001180080949550  RSL
L2C_COP0_MAP4779               0x0001180080949558  RSL
L2C_COP0_MAP4780               0x0001180080949560  RSL
L2C_COP0_MAP4781               0x0001180080949568  RSL
L2C_COP0_MAP4782               0x0001180080949570  RSL
L2C_COP0_MAP4783               0x0001180080949578  RSL
L2C_COP0_MAP4784               0x0001180080949580  RSL
L2C_COP0_MAP4785               0x0001180080949588  RSL
L2C_COP0_MAP4786               0x0001180080949590  RSL
L2C_COP0_MAP4787               0x0001180080949598  RSL
L2C_COP0_MAP4788               0x00011800809495A0  RSL
L2C_COP0_MAP4789               0x00011800809495A8  RSL
L2C_COP0_MAP4790               0x00011800809495B0  RSL
L2C_COP0_MAP4791               0x00011800809495B8  RSL
L2C_COP0_MAP4792               0x00011800809495C0  RSL
L2C_COP0_MAP4793               0x00011800809495C8  RSL
L2C_COP0_MAP4794               0x00011800809495D0  RSL
L2C_COP0_MAP4795               0x00011800809495D8  RSL
L2C_COP0_MAP4796               0x00011800809495E0  RSL
L2C_COP0_MAP4797               0x00011800809495E8  RSL
L2C_COP0_MAP4798               0x00011800809495F0  RSL
L2C_COP0_MAP4799               0x00011800809495F8  RSL
L2C_COP0_MAP4800               0x0001180080949600  RSL
L2C_COP0_MAP4801               0x0001180080949608  RSL
L2C_COP0_MAP4802               0x0001180080949610  RSL
L2C_COP0_MAP4803               0x0001180080949618  RSL
L2C_COP0_MAP4804               0x0001180080949620  RSL
L2C_COP0_MAP4805               0x0001180080949628  RSL
L2C_COP0_MAP4806               0x0001180080949630  RSL
L2C_COP0_MAP4807               0x0001180080949638  RSL
L2C_COP0_MAP4808               0x0001180080949640  RSL
L2C_COP0_MAP4809               0x0001180080949648  RSL
L2C_COP0_MAP4810               0x0001180080949650  RSL
L2C_COP0_MAP4811               0x0001180080949658  RSL
L2C_COP0_MAP4812               0x0001180080949660  RSL
L2C_COP0_MAP4813               0x0001180080949668  RSL
L2C_COP0_MAP4814               0x0001180080949670  RSL
L2C_COP0_MAP4815               0x0001180080949678  RSL
L2C_COP0_MAP4816               0x0001180080949680  RSL
L2C_COP0_MAP4817               0x0001180080949688  RSL
L2C_COP0_MAP4818               0x0001180080949690  RSL
L2C_COP0_MAP4819               0x0001180080949698  RSL
L2C_COP0_MAP4820               0x00011800809496A0  RSL
L2C_COP0_MAP4821               0x00011800809496A8  RSL
L2C_COP0_MAP4822               0x00011800809496B0  RSL
L2C_COP0_MAP4823               0x00011800809496B8  RSL
L2C_COP0_MAP4824               0x00011800809496C0  RSL
L2C_COP0_MAP4825               0x00011800809496C8  RSL
L2C_COP0_MAP4826               0x00011800809496D0  RSL
L2C_COP0_MAP4827               0x00011800809496D8  RSL
L2C_COP0_MAP4828               0x00011800809496E0  RSL
L2C_COP0_MAP4829               0x00011800809496E8  RSL
L2C_COP0_MAP4830               0x00011800809496F0  RSL
L2C_COP0_MAP4831               0x00011800809496F8  RSL
L2C_COP0_MAP4832               0x0001180080949700  RSL
L2C_COP0_MAP4833               0x0001180080949708  RSL
L2C_COP0_MAP4834               0x0001180080949710  RSL
L2C_COP0_MAP4835               0x0001180080949718  RSL
L2C_COP0_MAP4836               0x0001180080949720  RSL
L2C_COP0_MAP4837               0x0001180080949728  RSL
L2C_COP0_MAP4838               0x0001180080949730  RSL
L2C_COP0_MAP4839               0x0001180080949738  RSL
L2C_COP0_MAP4840               0x0001180080949740  RSL
L2C_COP0_MAP4841               0x0001180080949748  RSL
L2C_COP0_MAP4842               0x0001180080949750  RSL
L2C_COP0_MAP4843               0x0001180080949758  RSL
L2C_COP0_MAP4844               0x0001180080949760  RSL
L2C_COP0_MAP4845               0x0001180080949768  RSL
L2C_COP0_MAP4846               0x0001180080949770  RSL
L2C_COP0_MAP4847               0x0001180080949778  RSL
L2C_COP0_MAP4848               0x0001180080949780  RSL
L2C_COP0_MAP4849               0x0001180080949788  RSL
L2C_COP0_MAP4850               0x0001180080949790  RSL
L2C_COP0_MAP4851               0x0001180080949798  RSL
L2C_COP0_MAP4852               0x00011800809497A0  RSL
L2C_COP0_MAP4853               0x00011800809497A8  RSL
L2C_COP0_MAP4854               0x00011800809497B0  RSL
L2C_COP0_MAP4855               0x00011800809497B8  RSL
L2C_COP0_MAP4856               0x00011800809497C0  RSL
L2C_COP0_MAP4857               0x00011800809497C8  RSL
L2C_COP0_MAP4858               0x00011800809497D0  RSL
L2C_COP0_MAP4859               0x00011800809497D8  RSL
L2C_COP0_MAP4860               0x00011800809497E0  RSL
L2C_COP0_MAP4861               0x00011800809497E8  RSL
L2C_COP0_MAP4862               0x00011800809497F0  RSL
L2C_COP0_MAP4863               0x00011800809497F8  RSL
L2C_COP0_MAP4864               0x0001180080949800  RSL
L2C_COP0_MAP4865               0x0001180080949808  RSL
L2C_COP0_MAP4866               0x0001180080949810  RSL
L2C_COP0_MAP4867               0x0001180080949818  RSL
L2C_COP0_MAP4868               0x0001180080949820  RSL
L2C_COP0_MAP4869               0x0001180080949828  RSL
L2C_COP0_MAP4870               0x0001180080949830  RSL
L2C_COP0_MAP4871               0x0001180080949838  RSL
L2C_COP0_MAP4872               0x0001180080949840  RSL
L2C_COP0_MAP4873               0x0001180080949848  RSL
L2C_COP0_MAP4874               0x0001180080949850  RSL
L2C_COP0_MAP4875               0x0001180080949858  RSL
L2C_COP0_MAP4876               0x0001180080949860  RSL
L2C_COP0_MAP4877               0x0001180080949868  RSL
L2C_COP0_MAP4878               0x0001180080949870  RSL
L2C_COP0_MAP4879               0x0001180080949878  RSL
L2C_COP0_MAP4880               0x0001180080949880  RSL
L2C_COP0_MAP4881               0x0001180080949888  RSL
L2C_COP0_MAP4882               0x0001180080949890  RSL
L2C_COP0_MAP4883               0x0001180080949898  RSL
L2C_COP0_MAP4884               0x00011800809498A0  RSL
L2C_COP0_MAP4885               0x00011800809498A8  RSL
L2C_COP0_MAP4886               0x00011800809498B0  RSL
L2C_COP0_MAP4887               0x00011800809498B8  RSL
L2C_COP0_MAP4888               0x00011800809498C0  RSL
L2C_COP0_MAP4889               0x00011800809498C8  RSL
L2C_COP0_MAP4890               0x00011800809498D0  RSL
L2C_COP0_MAP4891               0x00011800809498D8  RSL
L2C_COP0_MAP4892               0x00011800809498E0  RSL
L2C_COP0_MAP4893               0x00011800809498E8  RSL
L2C_COP0_MAP4894               0x00011800809498F0  RSL
L2C_COP0_MAP4895               0x00011800809498F8  RSL
L2C_COP0_MAP4896               0x0001180080949900  RSL
L2C_COP0_MAP4897               0x0001180080949908  RSL
L2C_COP0_MAP4898               0x0001180080949910  RSL
L2C_COP0_MAP4899               0x0001180080949918  RSL
L2C_COP0_MAP4900               0x0001180080949920  RSL
L2C_COP0_MAP4901               0x0001180080949928  RSL
L2C_COP0_MAP4902               0x0001180080949930  RSL
L2C_COP0_MAP4903               0x0001180080949938  RSL
L2C_COP0_MAP4904               0x0001180080949940  RSL
L2C_COP0_MAP4905               0x0001180080949948  RSL
L2C_COP0_MAP4906               0x0001180080949950  RSL
L2C_COP0_MAP4907               0x0001180080949958  RSL
L2C_COP0_MAP4908               0x0001180080949960  RSL
L2C_COP0_MAP4909               0x0001180080949968  RSL
L2C_COP0_MAP4910               0x0001180080949970  RSL
L2C_COP0_MAP4911               0x0001180080949978  RSL
L2C_COP0_MAP4912               0x0001180080949980  RSL
L2C_COP0_MAP4913               0x0001180080949988  RSL
L2C_COP0_MAP4914               0x0001180080949990  RSL
L2C_COP0_MAP4915               0x0001180080949998  RSL
L2C_COP0_MAP4916               0x00011800809499A0  RSL
L2C_COP0_MAP4917               0x00011800809499A8  RSL
L2C_COP0_MAP4918               0x00011800809499B0  RSL
L2C_COP0_MAP4919               0x00011800809499B8  RSL
L2C_COP0_MAP4920               0x00011800809499C0  RSL
L2C_COP0_MAP4921               0x00011800809499C8  RSL
L2C_COP0_MAP4922               0x00011800809499D0  RSL
L2C_COP0_MAP4923               0x00011800809499D8  RSL
L2C_COP0_MAP4924               0x00011800809499E0  RSL
L2C_COP0_MAP4925               0x00011800809499E8  RSL
L2C_COP0_MAP4926               0x00011800809499F0  RSL
L2C_COP0_MAP4927               0x00011800809499F8  RSL
L2C_COP0_MAP4928               0x0001180080949A00  RSL
L2C_COP0_MAP4929               0x0001180080949A08  RSL
L2C_COP0_MAP4930               0x0001180080949A10  RSL
L2C_COP0_MAP4931               0x0001180080949A18  RSL
L2C_COP0_MAP4932               0x0001180080949A20  RSL
L2C_COP0_MAP4933               0x0001180080949A28  RSL
L2C_COP0_MAP4934               0x0001180080949A30  RSL
L2C_COP0_MAP4935               0x0001180080949A38  RSL
L2C_COP0_MAP4936               0x0001180080949A40  RSL
L2C_COP0_MAP4937               0x0001180080949A48  RSL
L2C_COP0_MAP4938               0x0001180080949A50  RSL
L2C_COP0_MAP4939               0x0001180080949A58  RSL
L2C_COP0_MAP4940               0x0001180080949A60  RSL
L2C_COP0_MAP4941               0x0001180080949A68  RSL
L2C_COP0_MAP4942               0x0001180080949A70  RSL
L2C_COP0_MAP4943               0x0001180080949A78  RSL
L2C_COP0_MAP4944               0x0001180080949A80  RSL
L2C_COP0_MAP4945               0x0001180080949A88  RSL
L2C_COP0_MAP4946               0x0001180080949A90  RSL
L2C_COP0_MAP4947               0x0001180080949A98  RSL
L2C_COP0_MAP4948               0x0001180080949AA0  RSL
L2C_COP0_MAP4949               0x0001180080949AA8  RSL
L2C_COP0_MAP4950               0x0001180080949AB0  RSL
L2C_COP0_MAP4951               0x0001180080949AB8  RSL
L2C_COP0_MAP4952               0x0001180080949AC0  RSL
L2C_COP0_MAP4953               0x0001180080949AC8  RSL
L2C_COP0_MAP4954               0x0001180080949AD0  RSL
L2C_COP0_MAP4955               0x0001180080949AD8  RSL
L2C_COP0_MAP4956               0x0001180080949AE0  RSL
L2C_COP0_MAP4957               0x0001180080949AE8  RSL
L2C_COP0_MAP4958               0x0001180080949AF0  RSL
L2C_COP0_MAP4959               0x0001180080949AF8  RSL
L2C_COP0_MAP4960               0x0001180080949B00  RSL
L2C_COP0_MAP4961               0x0001180080949B08  RSL
L2C_COP0_MAP4962               0x0001180080949B10  RSL
L2C_COP0_MAP4963               0x0001180080949B18  RSL
L2C_COP0_MAP4964               0x0001180080949B20  RSL
L2C_COP0_MAP4965               0x0001180080949B28  RSL
L2C_COP0_MAP4966               0x0001180080949B30  RSL
L2C_COP0_MAP4967               0x0001180080949B38  RSL
L2C_COP0_MAP4968               0x0001180080949B40  RSL
L2C_COP0_MAP4969               0x0001180080949B48  RSL
L2C_COP0_MAP4970               0x0001180080949B50  RSL
L2C_COP0_MAP4971               0x0001180080949B58  RSL
L2C_COP0_MAP4972               0x0001180080949B60  RSL
L2C_COP0_MAP4973               0x0001180080949B68  RSL
L2C_COP0_MAP4974               0x0001180080949B70  RSL
L2C_COP0_MAP4975               0x0001180080949B78  RSL
L2C_COP0_MAP4976               0x0001180080949B80  RSL
L2C_COP0_MAP4977               0x0001180080949B88  RSL
L2C_COP0_MAP4978               0x0001180080949B90  RSL
L2C_COP0_MAP4979               0x0001180080949B98  RSL
L2C_COP0_MAP4980               0x0001180080949BA0  RSL
L2C_COP0_MAP4981               0x0001180080949BA8  RSL
L2C_COP0_MAP4982               0x0001180080949BB0  RSL
L2C_COP0_MAP4983               0x0001180080949BB8  RSL
L2C_COP0_MAP4984               0x0001180080949BC0  RSL
L2C_COP0_MAP4985               0x0001180080949BC8  RSL
L2C_COP0_MAP4986               0x0001180080949BD0  RSL
L2C_COP0_MAP4987               0x0001180080949BD8  RSL
L2C_COP0_MAP4988               0x0001180080949BE0  RSL
L2C_COP0_MAP4989               0x0001180080949BE8  RSL
L2C_COP0_MAP4990               0x0001180080949BF0  RSL
L2C_COP0_MAP4991               0x0001180080949BF8  RSL
L2C_COP0_MAP4992               0x0001180080949C00  RSL
L2C_COP0_MAP4993               0x0001180080949C08  RSL
L2C_COP0_MAP4994               0x0001180080949C10  RSL
L2C_COP0_MAP4995               0x0001180080949C18  RSL
L2C_COP0_MAP4996               0x0001180080949C20  RSL
L2C_COP0_MAP4997               0x0001180080949C28  RSL
L2C_COP0_MAP4998               0x0001180080949C30  RSL
L2C_COP0_MAP4999               0x0001180080949C38  RSL
L2C_COP0_MAP5000               0x0001180080949C40  RSL
L2C_COP0_MAP5001               0x0001180080949C48  RSL
L2C_COP0_MAP5002               0x0001180080949C50  RSL
L2C_COP0_MAP5003               0x0001180080949C58  RSL
L2C_COP0_MAP5004               0x0001180080949C60  RSL
L2C_COP0_MAP5005               0x0001180080949C68  RSL
L2C_COP0_MAP5006               0x0001180080949C70  RSL
L2C_COP0_MAP5007               0x0001180080949C78  RSL
L2C_COP0_MAP5008               0x0001180080949C80  RSL
L2C_COP0_MAP5009               0x0001180080949C88  RSL
L2C_COP0_MAP5010               0x0001180080949C90  RSL
L2C_COP0_MAP5011               0x0001180080949C98  RSL
L2C_COP0_MAP5012               0x0001180080949CA0  RSL
L2C_COP0_MAP5013               0x0001180080949CA8  RSL
L2C_COP0_MAP5014               0x0001180080949CB0  RSL
L2C_COP0_MAP5015               0x0001180080949CB8  RSL
L2C_COP0_MAP5016               0x0001180080949CC0  RSL
L2C_COP0_MAP5017               0x0001180080949CC8  RSL
L2C_COP0_MAP5018               0x0001180080949CD0  RSL
L2C_COP0_MAP5019               0x0001180080949CD8  RSL
L2C_COP0_MAP5020               0x0001180080949CE0  RSL
L2C_COP0_MAP5021               0x0001180080949CE8  RSL
L2C_COP0_MAP5022               0x0001180080949CF0  RSL
L2C_COP0_MAP5023               0x0001180080949CF8  RSL
L2C_COP0_MAP5024               0x0001180080949D00  RSL
L2C_COP0_MAP5025               0x0001180080949D08  RSL
L2C_COP0_MAP5026               0x0001180080949D10  RSL
L2C_COP0_MAP5027               0x0001180080949D18  RSL
L2C_COP0_MAP5028               0x0001180080949D20  RSL
L2C_COP0_MAP5029               0x0001180080949D28  RSL
L2C_COP0_MAP5030               0x0001180080949D30  RSL
L2C_COP0_MAP5031               0x0001180080949D38  RSL
L2C_COP0_MAP5032               0x0001180080949D40  RSL
L2C_COP0_MAP5033               0x0001180080949D48  RSL
L2C_COP0_MAP5034               0x0001180080949D50  RSL
L2C_COP0_MAP5035               0x0001180080949D58  RSL
L2C_COP0_MAP5036               0x0001180080949D60  RSL
L2C_COP0_MAP5037               0x0001180080949D68  RSL
L2C_COP0_MAP5038               0x0001180080949D70  RSL
L2C_COP0_MAP5039               0x0001180080949D78  RSL
L2C_COP0_MAP5040               0x0001180080949D80  RSL
L2C_COP0_MAP5041               0x0001180080949D88  RSL
L2C_COP0_MAP5042               0x0001180080949D90  RSL
L2C_COP0_MAP5043               0x0001180080949D98  RSL
L2C_COP0_MAP5044               0x0001180080949DA0  RSL
L2C_COP0_MAP5045               0x0001180080949DA8  RSL
L2C_COP0_MAP5046               0x0001180080949DB0  RSL
L2C_COP0_MAP5047               0x0001180080949DB8  RSL
L2C_COP0_MAP5048               0x0001180080949DC0  RSL
L2C_COP0_MAP5049               0x0001180080949DC8  RSL
L2C_COP0_MAP5050               0x0001180080949DD0  RSL
L2C_COP0_MAP5051               0x0001180080949DD8  RSL
L2C_COP0_MAP5052               0x0001180080949DE0  RSL
L2C_COP0_MAP5053               0x0001180080949DE8  RSL
L2C_COP0_MAP5054               0x0001180080949DF0  RSL
L2C_COP0_MAP5055               0x0001180080949DF8  RSL
L2C_COP0_MAP5056               0x0001180080949E00  RSL
L2C_COP0_MAP5057               0x0001180080949E08  RSL
L2C_COP0_MAP5058               0x0001180080949E10  RSL
L2C_COP0_MAP5059               0x0001180080949E18  RSL
L2C_COP0_MAP5060               0x0001180080949E20  RSL
L2C_COP0_MAP5061               0x0001180080949E28  RSL
L2C_COP0_MAP5062               0x0001180080949E30  RSL
L2C_COP0_MAP5063               0x0001180080949E38  RSL
L2C_COP0_MAP5064               0x0001180080949E40  RSL
L2C_COP0_MAP5065               0x0001180080949E48  RSL
L2C_COP0_MAP5066               0x0001180080949E50  RSL
L2C_COP0_MAP5067               0x0001180080949E58  RSL
L2C_COP0_MAP5068               0x0001180080949E60  RSL
L2C_COP0_MAP5069               0x0001180080949E68  RSL
L2C_COP0_MAP5070               0x0001180080949E70  RSL
L2C_COP0_MAP5071               0x0001180080949E78  RSL
L2C_COP0_MAP5072               0x0001180080949E80  RSL
L2C_COP0_MAP5073               0x0001180080949E88  RSL
L2C_COP0_MAP5074               0x0001180080949E90  RSL
L2C_COP0_MAP5075               0x0001180080949E98  RSL
L2C_COP0_MAP5076               0x0001180080949EA0  RSL
L2C_COP0_MAP5077               0x0001180080949EA8  RSL
L2C_COP0_MAP5078               0x0001180080949EB0  RSL
L2C_COP0_MAP5079               0x0001180080949EB8  RSL
L2C_COP0_MAP5080               0x0001180080949EC0  RSL
L2C_COP0_MAP5081               0x0001180080949EC8  RSL
L2C_COP0_MAP5082               0x0001180080949ED0  RSL
L2C_COP0_MAP5083               0x0001180080949ED8  RSL
L2C_COP0_MAP5084               0x0001180080949EE0  RSL
L2C_COP0_MAP5085               0x0001180080949EE8  RSL
L2C_COP0_MAP5086               0x0001180080949EF0  RSL
L2C_COP0_MAP5087               0x0001180080949EF8  RSL
L2C_COP0_MAP5088               0x0001180080949F00  RSL
L2C_COP0_MAP5089               0x0001180080949F08  RSL
L2C_COP0_MAP5090               0x0001180080949F10  RSL
L2C_COP0_MAP5091               0x0001180080949F18  RSL
L2C_COP0_MAP5092               0x0001180080949F20  RSL
L2C_COP0_MAP5093               0x0001180080949F28  RSL
L2C_COP0_MAP5094               0x0001180080949F30  RSL
L2C_COP0_MAP5095               0x0001180080949F38  RSL
L2C_COP0_MAP5096               0x0001180080949F40  RSL
L2C_COP0_MAP5097               0x0001180080949F48  RSL
L2C_COP0_MAP5098               0x0001180080949F50  RSL
L2C_COP0_MAP5099               0x0001180080949F58  RSL
L2C_COP0_MAP5100               0x0001180080949F60  RSL
L2C_COP0_MAP5101               0x0001180080949F68  RSL
L2C_COP0_MAP5102               0x0001180080949F70  RSL
L2C_COP0_MAP5103               0x0001180080949F78  RSL
L2C_COP0_MAP5104               0x0001180080949F80  RSL
L2C_COP0_MAP5105               0x0001180080949F88  RSL
L2C_COP0_MAP5106               0x0001180080949F90  RSL
L2C_COP0_MAP5107               0x0001180080949F98  RSL
L2C_COP0_MAP5108               0x0001180080949FA0  RSL
L2C_COP0_MAP5109               0x0001180080949FA8  RSL
L2C_COP0_MAP5110               0x0001180080949FB0  RSL
L2C_COP0_MAP5111               0x0001180080949FB8  RSL
L2C_COP0_MAP5112               0x0001180080949FC0  RSL
L2C_COP0_MAP5113               0x0001180080949FC8  RSL
L2C_COP0_MAP5114               0x0001180080949FD0  RSL
L2C_COP0_MAP5115               0x0001180080949FD8  RSL
L2C_COP0_MAP5116               0x0001180080949FE0  RSL
L2C_COP0_MAP5117               0x0001180080949FE8  RSL
L2C_COP0_MAP5118               0x0001180080949FF0  RSL
L2C_COP0_MAP5119               0x0001180080949FF8  RSL
L2C_COP0_MAP5120               0x000118008094A000  RSL
L2C_COP0_MAP5121               0x000118008094A008  RSL
L2C_COP0_MAP5122               0x000118008094A010  RSL
L2C_COP0_MAP5123               0x000118008094A018  RSL
L2C_COP0_MAP5124               0x000118008094A020  RSL
L2C_COP0_MAP5125               0x000118008094A028  RSL
L2C_COP0_MAP5126               0x000118008094A030  RSL
L2C_COP0_MAP5127               0x000118008094A038  RSL
L2C_COP0_MAP5128               0x000118008094A040  RSL
L2C_COP0_MAP5129               0x000118008094A048  RSL
L2C_COP0_MAP5130               0x000118008094A050  RSL
L2C_COP0_MAP5131               0x000118008094A058  RSL
L2C_COP0_MAP5132               0x000118008094A060  RSL
L2C_COP0_MAP5133               0x000118008094A068  RSL
L2C_COP0_MAP5134               0x000118008094A070  RSL
L2C_COP0_MAP5135               0x000118008094A078  RSL
L2C_COP0_MAP5136               0x000118008094A080  RSL
L2C_COP0_MAP5137               0x000118008094A088  RSL
L2C_COP0_MAP5138               0x000118008094A090  RSL
L2C_COP0_MAP5139               0x000118008094A098  RSL
L2C_COP0_MAP5140               0x000118008094A0A0  RSL
L2C_COP0_MAP5141               0x000118008094A0A8  RSL
L2C_COP0_MAP5142               0x000118008094A0B0  RSL
L2C_COP0_MAP5143               0x000118008094A0B8  RSL
L2C_COP0_MAP5144               0x000118008094A0C0  RSL
L2C_COP0_MAP5145               0x000118008094A0C8  RSL
L2C_COP0_MAP5146               0x000118008094A0D0  RSL
L2C_COP0_MAP5147               0x000118008094A0D8  RSL
L2C_COP0_MAP5148               0x000118008094A0E0  RSL
L2C_COP0_MAP5149               0x000118008094A0E8  RSL
L2C_COP0_MAP5150               0x000118008094A0F0  RSL
L2C_COP0_MAP5151               0x000118008094A0F8  RSL
L2C_COP0_MAP5152               0x000118008094A100  RSL
L2C_COP0_MAP5153               0x000118008094A108  RSL
L2C_COP0_MAP5154               0x000118008094A110  RSL
L2C_COP0_MAP5155               0x000118008094A118  RSL
L2C_COP0_MAP5156               0x000118008094A120  RSL
L2C_COP0_MAP5157               0x000118008094A128  RSL
L2C_COP0_MAP5158               0x000118008094A130  RSL
L2C_COP0_MAP5159               0x000118008094A138  RSL
L2C_COP0_MAP5160               0x000118008094A140  RSL
L2C_COP0_MAP5161               0x000118008094A148  RSL
L2C_COP0_MAP5162               0x000118008094A150  RSL
L2C_COP0_MAP5163               0x000118008094A158  RSL
L2C_COP0_MAP5164               0x000118008094A160  RSL
L2C_COP0_MAP5165               0x000118008094A168  RSL
L2C_COP0_MAP5166               0x000118008094A170  RSL
L2C_COP0_MAP5167               0x000118008094A178  RSL
L2C_COP0_MAP5168               0x000118008094A180  RSL
L2C_COP0_MAP5169               0x000118008094A188  RSL
L2C_COP0_MAP5170               0x000118008094A190  RSL
L2C_COP0_MAP5171               0x000118008094A198  RSL
L2C_COP0_MAP5172               0x000118008094A1A0  RSL
L2C_COP0_MAP5173               0x000118008094A1A8  RSL
L2C_COP0_MAP5174               0x000118008094A1B0  RSL
L2C_COP0_MAP5175               0x000118008094A1B8  RSL
L2C_COP0_MAP5176               0x000118008094A1C0  RSL
L2C_COP0_MAP5177               0x000118008094A1C8  RSL
L2C_COP0_MAP5178               0x000118008094A1D0  RSL
L2C_COP0_MAP5179               0x000118008094A1D8  RSL
L2C_COP0_MAP5180               0x000118008094A1E0  RSL
L2C_COP0_MAP5181               0x000118008094A1E8  RSL
L2C_COP0_MAP5182               0x000118008094A1F0  RSL
L2C_COP0_MAP5183               0x000118008094A1F8  RSL
L2C_COP0_MAP5184               0x000118008094A200  RSL
L2C_COP0_MAP5185               0x000118008094A208  RSL
L2C_COP0_MAP5186               0x000118008094A210  RSL
L2C_COP0_MAP5187               0x000118008094A218  RSL
L2C_COP0_MAP5188               0x000118008094A220  RSL
L2C_COP0_MAP5189               0x000118008094A228  RSL
L2C_COP0_MAP5190               0x000118008094A230  RSL
L2C_COP0_MAP5191               0x000118008094A238  RSL
L2C_COP0_MAP5192               0x000118008094A240  RSL
L2C_COP0_MAP5193               0x000118008094A248  RSL
L2C_COP0_MAP5194               0x000118008094A250  RSL
L2C_COP0_MAP5195               0x000118008094A258  RSL
L2C_COP0_MAP5196               0x000118008094A260  RSL
L2C_COP0_MAP5197               0x000118008094A268  RSL
L2C_COP0_MAP5198               0x000118008094A270  RSL
L2C_COP0_MAP5199               0x000118008094A278  RSL
L2C_COP0_MAP5200               0x000118008094A280  RSL
L2C_COP0_MAP5201               0x000118008094A288  RSL
L2C_COP0_MAP5202               0x000118008094A290  RSL
L2C_COP0_MAP5203               0x000118008094A298  RSL
L2C_COP0_MAP5204               0x000118008094A2A0  RSL
L2C_COP0_MAP5205               0x000118008094A2A8  RSL
L2C_COP0_MAP5206               0x000118008094A2B0  RSL
L2C_COP0_MAP5207               0x000118008094A2B8  RSL
L2C_COP0_MAP5208               0x000118008094A2C0  RSL
L2C_COP0_MAP5209               0x000118008094A2C8  RSL
L2C_COP0_MAP5210               0x000118008094A2D0  RSL
L2C_COP0_MAP5211               0x000118008094A2D8  RSL
L2C_COP0_MAP5212               0x000118008094A2E0  RSL
L2C_COP0_MAP5213               0x000118008094A2E8  RSL
L2C_COP0_MAP5214               0x000118008094A2F0  RSL
L2C_COP0_MAP5215               0x000118008094A2F8  RSL
L2C_COP0_MAP5216               0x000118008094A300  RSL
L2C_COP0_MAP5217               0x000118008094A308  RSL
L2C_COP0_MAP5218               0x000118008094A310  RSL
L2C_COP0_MAP5219               0x000118008094A318  RSL
L2C_COP0_MAP5220               0x000118008094A320  RSL
L2C_COP0_MAP5221               0x000118008094A328  RSL
L2C_COP0_MAP5222               0x000118008094A330  RSL
L2C_COP0_MAP5223               0x000118008094A338  RSL
L2C_COP0_MAP5224               0x000118008094A340  RSL
L2C_COP0_MAP5225               0x000118008094A348  RSL
L2C_COP0_MAP5226               0x000118008094A350  RSL
L2C_COP0_MAP5227               0x000118008094A358  RSL
L2C_COP0_MAP5228               0x000118008094A360  RSL
L2C_COP0_MAP5229               0x000118008094A368  RSL
L2C_COP0_MAP5230               0x000118008094A370  RSL
L2C_COP0_MAP5231               0x000118008094A378  RSL
L2C_COP0_MAP5232               0x000118008094A380  RSL
L2C_COP0_MAP5233               0x000118008094A388  RSL
L2C_COP0_MAP5234               0x000118008094A390  RSL
L2C_COP0_MAP5235               0x000118008094A398  RSL
L2C_COP0_MAP5236               0x000118008094A3A0  RSL
L2C_COP0_MAP5237               0x000118008094A3A8  RSL
L2C_COP0_MAP5238               0x000118008094A3B0  RSL
L2C_COP0_MAP5239               0x000118008094A3B8  RSL
L2C_COP0_MAP5240               0x000118008094A3C0  RSL
L2C_COP0_MAP5241               0x000118008094A3C8  RSL
L2C_COP0_MAP5242               0x000118008094A3D0  RSL
L2C_COP0_MAP5243               0x000118008094A3D8  RSL
L2C_COP0_MAP5244               0x000118008094A3E0  RSL
L2C_COP0_MAP5245               0x000118008094A3E8  RSL
L2C_COP0_MAP5246               0x000118008094A3F0  RSL
L2C_COP0_MAP5247               0x000118008094A3F8  RSL
L2C_COP0_MAP5248               0x000118008094A400  RSL
L2C_COP0_MAP5249               0x000118008094A408  RSL
L2C_COP0_MAP5250               0x000118008094A410  RSL
L2C_COP0_MAP5251               0x000118008094A418  RSL
L2C_COP0_MAP5252               0x000118008094A420  RSL
L2C_COP0_MAP5253               0x000118008094A428  RSL
L2C_COP0_MAP5254               0x000118008094A430  RSL
L2C_COP0_MAP5255               0x000118008094A438  RSL
L2C_COP0_MAP5256               0x000118008094A440  RSL
L2C_COP0_MAP5257               0x000118008094A448  RSL
L2C_COP0_MAP5258               0x000118008094A450  RSL
L2C_COP0_MAP5259               0x000118008094A458  RSL
L2C_COP0_MAP5260               0x000118008094A460  RSL
L2C_COP0_MAP5261               0x000118008094A468  RSL
L2C_COP0_MAP5262               0x000118008094A470  RSL
L2C_COP0_MAP5263               0x000118008094A478  RSL
L2C_COP0_MAP5264               0x000118008094A480  RSL
L2C_COP0_MAP5265               0x000118008094A488  RSL
L2C_COP0_MAP5266               0x000118008094A490  RSL
L2C_COP0_MAP5267               0x000118008094A498  RSL
L2C_COP0_MAP5268               0x000118008094A4A0  RSL
L2C_COP0_MAP5269               0x000118008094A4A8  RSL
L2C_COP0_MAP5270               0x000118008094A4B0  RSL
L2C_COP0_MAP5271               0x000118008094A4B8  RSL
L2C_COP0_MAP5272               0x000118008094A4C0  RSL
L2C_COP0_MAP5273               0x000118008094A4C8  RSL
L2C_COP0_MAP5274               0x000118008094A4D0  RSL
L2C_COP0_MAP5275               0x000118008094A4D8  RSL
L2C_COP0_MAP5276               0x000118008094A4E0  RSL
L2C_COP0_MAP5277               0x000118008094A4E8  RSL
L2C_COP0_MAP5278               0x000118008094A4F0  RSL
L2C_COP0_MAP5279               0x000118008094A4F8  RSL
L2C_COP0_MAP5280               0x000118008094A500  RSL
L2C_COP0_MAP5281               0x000118008094A508  RSL
L2C_COP0_MAP5282               0x000118008094A510  RSL
L2C_COP0_MAP5283               0x000118008094A518  RSL
L2C_COP0_MAP5284               0x000118008094A520  RSL
L2C_COP0_MAP5285               0x000118008094A528  RSL
L2C_COP0_MAP5286               0x000118008094A530  RSL
L2C_COP0_MAP5287               0x000118008094A538  RSL
L2C_COP0_MAP5288               0x000118008094A540  RSL
L2C_COP0_MAP5289               0x000118008094A548  RSL
L2C_COP0_MAP5290               0x000118008094A550  RSL
L2C_COP0_MAP5291               0x000118008094A558  RSL
L2C_COP0_MAP5292               0x000118008094A560  RSL
L2C_COP0_MAP5293               0x000118008094A568  RSL
L2C_COP0_MAP5294               0x000118008094A570  RSL
L2C_COP0_MAP5295               0x000118008094A578  RSL
L2C_COP0_MAP5296               0x000118008094A580  RSL
L2C_COP0_MAP5297               0x000118008094A588  RSL
L2C_COP0_MAP5298               0x000118008094A590  RSL
L2C_COP0_MAP5299               0x000118008094A598  RSL
L2C_COP0_MAP5300               0x000118008094A5A0  RSL
L2C_COP0_MAP5301               0x000118008094A5A8  RSL
L2C_COP0_MAP5302               0x000118008094A5B0  RSL
L2C_COP0_MAP5303               0x000118008094A5B8  RSL
L2C_COP0_MAP5304               0x000118008094A5C0  RSL
L2C_COP0_MAP5305               0x000118008094A5C8  RSL
L2C_COP0_MAP5306               0x000118008094A5D0  RSL
L2C_COP0_MAP5307               0x000118008094A5D8  RSL
L2C_COP0_MAP5308               0x000118008094A5E0  RSL
L2C_COP0_MAP5309               0x000118008094A5E8  RSL
L2C_COP0_MAP5310               0x000118008094A5F0  RSL
L2C_COP0_MAP5311               0x000118008094A5F8  RSL
L2C_COP0_MAP5312               0x000118008094A600  RSL
L2C_COP0_MAP5313               0x000118008094A608  RSL
L2C_COP0_MAP5314               0x000118008094A610  RSL
L2C_COP0_MAP5315               0x000118008094A618  RSL
L2C_COP0_MAP5316               0x000118008094A620  RSL
L2C_COP0_MAP5317               0x000118008094A628  RSL
L2C_COP0_MAP5318               0x000118008094A630  RSL
L2C_COP0_MAP5319               0x000118008094A638  RSL
L2C_COP0_MAP5320               0x000118008094A640  RSL
L2C_COP0_MAP5321               0x000118008094A648  RSL
L2C_COP0_MAP5322               0x000118008094A650  RSL
L2C_COP0_MAP5323               0x000118008094A658  RSL
L2C_COP0_MAP5324               0x000118008094A660  RSL
L2C_COP0_MAP5325               0x000118008094A668  RSL
L2C_COP0_MAP5326               0x000118008094A670  RSL
L2C_COP0_MAP5327               0x000118008094A678  RSL
L2C_COP0_MAP5328               0x000118008094A680  RSL
L2C_COP0_MAP5329               0x000118008094A688  RSL
L2C_COP0_MAP5330               0x000118008094A690  RSL
L2C_COP0_MAP5331               0x000118008094A698  RSL
L2C_COP0_MAP5332               0x000118008094A6A0  RSL
L2C_COP0_MAP5333               0x000118008094A6A8  RSL
L2C_COP0_MAP5334               0x000118008094A6B0  RSL
L2C_COP0_MAP5335               0x000118008094A6B8  RSL
L2C_COP0_MAP5336               0x000118008094A6C0  RSL
L2C_COP0_MAP5337               0x000118008094A6C8  RSL
L2C_COP0_MAP5338               0x000118008094A6D0  RSL
L2C_COP0_MAP5339               0x000118008094A6D8  RSL
L2C_COP0_MAP5340               0x000118008094A6E0  RSL
L2C_COP0_MAP5341               0x000118008094A6E8  RSL
L2C_COP0_MAP5342               0x000118008094A6F0  RSL
L2C_COP0_MAP5343               0x000118008094A6F8  RSL
L2C_COP0_MAP5344               0x000118008094A700  RSL
L2C_COP0_MAP5345               0x000118008094A708  RSL
L2C_COP0_MAP5346               0x000118008094A710  RSL
L2C_COP0_MAP5347               0x000118008094A718  RSL
L2C_COP0_MAP5348               0x000118008094A720  RSL
L2C_COP0_MAP5349               0x000118008094A728  RSL
L2C_COP0_MAP5350               0x000118008094A730  RSL
L2C_COP0_MAP5351               0x000118008094A738  RSL
L2C_COP0_MAP5352               0x000118008094A740  RSL
L2C_COP0_MAP5353               0x000118008094A748  RSL
L2C_COP0_MAP5354               0x000118008094A750  RSL
L2C_COP0_MAP5355               0x000118008094A758  RSL
L2C_COP0_MAP5356               0x000118008094A760  RSL
L2C_COP0_MAP5357               0x000118008094A768  RSL
L2C_COP0_MAP5358               0x000118008094A770  RSL
L2C_COP0_MAP5359               0x000118008094A778  RSL
L2C_COP0_MAP5360               0x000118008094A780  RSL
L2C_COP0_MAP5361               0x000118008094A788  RSL
L2C_COP0_MAP5362               0x000118008094A790  RSL
L2C_COP0_MAP5363               0x000118008094A798  RSL
L2C_COP0_MAP5364               0x000118008094A7A0  RSL
L2C_COP0_MAP5365               0x000118008094A7A8  RSL
L2C_COP0_MAP5366               0x000118008094A7B0  RSL
L2C_COP0_MAP5367               0x000118008094A7B8  RSL
L2C_COP0_MAP5368               0x000118008094A7C0  RSL
L2C_COP0_MAP5369               0x000118008094A7C8  RSL
L2C_COP0_MAP5370               0x000118008094A7D0  RSL
L2C_COP0_MAP5371               0x000118008094A7D8  RSL
L2C_COP0_MAP5372               0x000118008094A7E0  RSL
L2C_COP0_MAP5373               0x000118008094A7E8  RSL
L2C_COP0_MAP5374               0x000118008094A7F0  RSL
L2C_COP0_MAP5375               0x000118008094A7F8  RSL
L2C_COP0_MAP5376               0x000118008094A800  RSL
L2C_COP0_MAP5377               0x000118008094A808  RSL
L2C_COP0_MAP5378               0x000118008094A810  RSL
L2C_COP0_MAP5379               0x000118008094A818  RSL
L2C_COP0_MAP5380               0x000118008094A820  RSL
L2C_COP0_MAP5381               0x000118008094A828  RSL
L2C_COP0_MAP5382               0x000118008094A830  RSL
L2C_COP0_MAP5383               0x000118008094A838  RSL
L2C_COP0_MAP5384               0x000118008094A840  RSL
L2C_COP0_MAP5385               0x000118008094A848  RSL
L2C_COP0_MAP5386               0x000118008094A850  RSL
L2C_COP0_MAP5387               0x000118008094A858  RSL
L2C_COP0_MAP5388               0x000118008094A860  RSL
L2C_COP0_MAP5389               0x000118008094A868  RSL
L2C_COP0_MAP5390               0x000118008094A870  RSL
L2C_COP0_MAP5391               0x000118008094A878  RSL
L2C_COP0_MAP5392               0x000118008094A880  RSL
L2C_COP0_MAP5393               0x000118008094A888  RSL
L2C_COP0_MAP5394               0x000118008094A890  RSL
L2C_COP0_MAP5395               0x000118008094A898  RSL
L2C_COP0_MAP5396               0x000118008094A8A0  RSL
L2C_COP0_MAP5397               0x000118008094A8A8  RSL
L2C_COP0_MAP5398               0x000118008094A8B0  RSL
L2C_COP0_MAP5399               0x000118008094A8B8  RSL
L2C_COP0_MAP5400               0x000118008094A8C0  RSL
L2C_COP0_MAP5401               0x000118008094A8C8  RSL
L2C_COP0_MAP5402               0x000118008094A8D0  RSL
L2C_COP0_MAP5403               0x000118008094A8D8  RSL
L2C_COP0_MAP5404               0x000118008094A8E0  RSL
L2C_COP0_MAP5405               0x000118008094A8E8  RSL
L2C_COP0_MAP5406               0x000118008094A8F0  RSL
L2C_COP0_MAP5407               0x000118008094A8F8  RSL
L2C_COP0_MAP5408               0x000118008094A900  RSL
L2C_COP0_MAP5409               0x000118008094A908  RSL
L2C_COP0_MAP5410               0x000118008094A910  RSL
L2C_COP0_MAP5411               0x000118008094A918  RSL
L2C_COP0_MAP5412               0x000118008094A920  RSL
L2C_COP0_MAP5413               0x000118008094A928  RSL
L2C_COP0_MAP5414               0x000118008094A930  RSL
L2C_COP0_MAP5415               0x000118008094A938  RSL
L2C_COP0_MAP5416               0x000118008094A940  RSL
L2C_COP0_MAP5417               0x000118008094A948  RSL
L2C_COP0_MAP5418               0x000118008094A950  RSL
L2C_COP0_MAP5419               0x000118008094A958  RSL
L2C_COP0_MAP5420               0x000118008094A960  RSL
L2C_COP0_MAP5421               0x000118008094A968  RSL
L2C_COP0_MAP5422               0x000118008094A970  RSL
L2C_COP0_MAP5423               0x000118008094A978  RSL
L2C_COP0_MAP5424               0x000118008094A980  RSL
L2C_COP0_MAP5425               0x000118008094A988  RSL
L2C_COP0_MAP5426               0x000118008094A990  RSL
L2C_COP0_MAP5427               0x000118008094A998  RSL
L2C_COP0_MAP5428               0x000118008094A9A0  RSL
L2C_COP0_MAP5429               0x000118008094A9A8  RSL
L2C_COP0_MAP5430               0x000118008094A9B0  RSL
L2C_COP0_MAP5431               0x000118008094A9B8  RSL
L2C_COP0_MAP5432               0x000118008094A9C0  RSL
L2C_COP0_MAP5433               0x000118008094A9C8  RSL
L2C_COP0_MAP5434               0x000118008094A9D0  RSL
L2C_COP0_MAP5435               0x000118008094A9D8  RSL
L2C_COP0_MAP5436               0x000118008094A9E0  RSL
L2C_COP0_MAP5437               0x000118008094A9E8  RSL
L2C_COP0_MAP5438               0x000118008094A9F0  RSL
L2C_COP0_MAP5439               0x000118008094A9F8  RSL
L2C_COP0_MAP5440               0x000118008094AA00  RSL
L2C_COP0_MAP5441               0x000118008094AA08  RSL
L2C_COP0_MAP5442               0x000118008094AA10  RSL
L2C_COP0_MAP5443               0x000118008094AA18  RSL
L2C_COP0_MAP5444               0x000118008094AA20  RSL
L2C_COP0_MAP5445               0x000118008094AA28  RSL
L2C_COP0_MAP5446               0x000118008094AA30  RSL
L2C_COP0_MAP5447               0x000118008094AA38  RSL
L2C_COP0_MAP5448               0x000118008094AA40  RSL
L2C_COP0_MAP5449               0x000118008094AA48  RSL
L2C_COP0_MAP5450               0x000118008094AA50  RSL
L2C_COP0_MAP5451               0x000118008094AA58  RSL
L2C_COP0_MAP5452               0x000118008094AA60  RSL
L2C_COP0_MAP5453               0x000118008094AA68  RSL
L2C_COP0_MAP5454               0x000118008094AA70  RSL
L2C_COP0_MAP5455               0x000118008094AA78  RSL
L2C_COP0_MAP5456               0x000118008094AA80  RSL
L2C_COP0_MAP5457               0x000118008094AA88  RSL
L2C_COP0_MAP5458               0x000118008094AA90  RSL
L2C_COP0_MAP5459               0x000118008094AA98  RSL
L2C_COP0_MAP5460               0x000118008094AAA0  RSL
L2C_COP0_MAP5461               0x000118008094AAA8  RSL
L2C_COP0_MAP5462               0x000118008094AAB0  RSL
L2C_COP0_MAP5463               0x000118008094AAB8  RSL
L2C_COP0_MAP5464               0x000118008094AAC0  RSL
L2C_COP0_MAP5465               0x000118008094AAC8  RSL
L2C_COP0_MAP5466               0x000118008094AAD0  RSL
L2C_COP0_MAP5467               0x000118008094AAD8  RSL
L2C_COP0_MAP5468               0x000118008094AAE0  RSL
L2C_COP0_MAP5469               0x000118008094AAE8  RSL
L2C_COP0_MAP5470               0x000118008094AAF0  RSL
L2C_COP0_MAP5471               0x000118008094AAF8  RSL
L2C_COP0_MAP5472               0x000118008094AB00  RSL
L2C_COP0_MAP5473               0x000118008094AB08  RSL
L2C_COP0_MAP5474               0x000118008094AB10  RSL
L2C_COP0_MAP5475               0x000118008094AB18  RSL
L2C_COP0_MAP5476               0x000118008094AB20  RSL
L2C_COP0_MAP5477               0x000118008094AB28  RSL
L2C_COP0_MAP5478               0x000118008094AB30  RSL
L2C_COP0_MAP5479               0x000118008094AB38  RSL
L2C_COP0_MAP5480               0x000118008094AB40  RSL
L2C_COP0_MAP5481               0x000118008094AB48  RSL
L2C_COP0_MAP5482               0x000118008094AB50  RSL
L2C_COP0_MAP5483               0x000118008094AB58  RSL
L2C_COP0_MAP5484               0x000118008094AB60  RSL
L2C_COP0_MAP5485               0x000118008094AB68  RSL
L2C_COP0_MAP5486               0x000118008094AB70  RSL
L2C_COP0_MAP5487               0x000118008094AB78  RSL
L2C_COP0_MAP5488               0x000118008094AB80  RSL
L2C_COP0_MAP5489               0x000118008094AB88  RSL
L2C_COP0_MAP5490               0x000118008094AB90  RSL
L2C_COP0_MAP5491               0x000118008094AB98  RSL
L2C_COP0_MAP5492               0x000118008094ABA0  RSL
L2C_COP0_MAP5493               0x000118008094ABA8  RSL
L2C_COP0_MAP5494               0x000118008094ABB0  RSL
L2C_COP0_MAP5495               0x000118008094ABB8  RSL
L2C_COP0_MAP5496               0x000118008094ABC0  RSL
L2C_COP0_MAP5497               0x000118008094ABC8  RSL
L2C_COP0_MAP5498               0x000118008094ABD0  RSL
L2C_COP0_MAP5499               0x000118008094ABD8  RSL
L2C_COP0_MAP5500               0x000118008094ABE0  RSL
L2C_COP0_MAP5501               0x000118008094ABE8  RSL
L2C_COP0_MAP5502               0x000118008094ABF0  RSL
L2C_COP0_MAP5503               0x000118008094ABF8  RSL
L2C_COP0_MAP5504               0x000118008094AC00  RSL
L2C_COP0_MAP5505               0x000118008094AC08  RSL
L2C_COP0_MAP5506               0x000118008094AC10  RSL
L2C_COP0_MAP5507               0x000118008094AC18  RSL
L2C_COP0_MAP5508               0x000118008094AC20  RSL
L2C_COP0_MAP5509               0x000118008094AC28  RSL
L2C_COP0_MAP5510               0x000118008094AC30  RSL
L2C_COP0_MAP5511               0x000118008094AC38  RSL
L2C_COP0_MAP5512               0x000118008094AC40  RSL
L2C_COP0_MAP5513               0x000118008094AC48  RSL
L2C_COP0_MAP5514               0x000118008094AC50  RSL
L2C_COP0_MAP5515               0x000118008094AC58  RSL
L2C_COP0_MAP5516               0x000118008094AC60  RSL
L2C_COP0_MAP5517               0x000118008094AC68  RSL
L2C_COP0_MAP5518               0x000118008094AC70  RSL
L2C_COP0_MAP5519               0x000118008094AC78  RSL
L2C_COP0_MAP5520               0x000118008094AC80  RSL
L2C_COP0_MAP5521               0x000118008094AC88  RSL
L2C_COP0_MAP5522               0x000118008094AC90  RSL
L2C_COP0_MAP5523               0x000118008094AC98  RSL
L2C_COP0_MAP5524               0x000118008094ACA0  RSL
L2C_COP0_MAP5525               0x000118008094ACA8  RSL
L2C_COP0_MAP5526               0x000118008094ACB0  RSL
L2C_COP0_MAP5527               0x000118008094ACB8  RSL
L2C_COP0_MAP5528               0x000118008094ACC0  RSL
L2C_COP0_MAP5529               0x000118008094ACC8  RSL
L2C_COP0_MAP5530               0x000118008094ACD0  RSL
L2C_COP0_MAP5531               0x000118008094ACD8  RSL
L2C_COP0_MAP5532               0x000118008094ACE0  RSL
L2C_COP0_MAP5533               0x000118008094ACE8  RSL
L2C_COP0_MAP5534               0x000118008094ACF0  RSL
L2C_COP0_MAP5535               0x000118008094ACF8  RSL
L2C_COP0_MAP5536               0x000118008094AD00  RSL
L2C_COP0_MAP5537               0x000118008094AD08  RSL
L2C_COP0_MAP5538               0x000118008094AD10  RSL
L2C_COP0_MAP5539               0x000118008094AD18  RSL
L2C_COP0_MAP5540               0x000118008094AD20  RSL
L2C_COP0_MAP5541               0x000118008094AD28  RSL
L2C_COP0_MAP5542               0x000118008094AD30  RSL
L2C_COP0_MAP5543               0x000118008094AD38  RSL
L2C_COP0_MAP5544               0x000118008094AD40  RSL
L2C_COP0_MAP5545               0x000118008094AD48  RSL
L2C_COP0_MAP5546               0x000118008094AD50  RSL
L2C_COP0_MAP5547               0x000118008094AD58  RSL
L2C_COP0_MAP5548               0x000118008094AD60  RSL
L2C_COP0_MAP5549               0x000118008094AD68  RSL
L2C_COP0_MAP5550               0x000118008094AD70  RSL
L2C_COP0_MAP5551               0x000118008094AD78  RSL
L2C_COP0_MAP5552               0x000118008094AD80  RSL
L2C_COP0_MAP5553               0x000118008094AD88  RSL
L2C_COP0_MAP5554               0x000118008094AD90  RSL
L2C_COP0_MAP5555               0x000118008094AD98  RSL
L2C_COP0_MAP5556               0x000118008094ADA0  RSL
L2C_COP0_MAP5557               0x000118008094ADA8  RSL
L2C_COP0_MAP5558               0x000118008094ADB0  RSL
L2C_COP0_MAP5559               0x000118008094ADB8  RSL
L2C_COP0_MAP5560               0x000118008094ADC0  RSL
L2C_COP0_MAP5561               0x000118008094ADC8  RSL
L2C_COP0_MAP5562               0x000118008094ADD0  RSL
L2C_COP0_MAP5563               0x000118008094ADD8  RSL
L2C_COP0_MAP5564               0x000118008094ADE0  RSL
L2C_COP0_MAP5565               0x000118008094ADE8  RSL
L2C_COP0_MAP5566               0x000118008094ADF0  RSL
L2C_COP0_MAP5567               0x000118008094ADF8  RSL
L2C_COP0_MAP5568               0x000118008094AE00  RSL
L2C_COP0_MAP5569               0x000118008094AE08  RSL
L2C_COP0_MAP5570               0x000118008094AE10  RSL
L2C_COP0_MAP5571               0x000118008094AE18  RSL
L2C_COP0_MAP5572               0x000118008094AE20  RSL
L2C_COP0_MAP5573               0x000118008094AE28  RSL
L2C_COP0_MAP5574               0x000118008094AE30  RSL
L2C_COP0_MAP5575               0x000118008094AE38  RSL
L2C_COP0_MAP5576               0x000118008094AE40  RSL
L2C_COP0_MAP5577               0x000118008094AE48  RSL
L2C_COP0_MAP5578               0x000118008094AE50  RSL
L2C_COP0_MAP5579               0x000118008094AE58  RSL
L2C_COP0_MAP5580               0x000118008094AE60  RSL
L2C_COP0_MAP5581               0x000118008094AE68  RSL
L2C_COP0_MAP5582               0x000118008094AE70  RSL
L2C_COP0_MAP5583               0x000118008094AE78  RSL
L2C_COP0_MAP5584               0x000118008094AE80  RSL
L2C_COP0_MAP5585               0x000118008094AE88  RSL
L2C_COP0_MAP5586               0x000118008094AE90  RSL
L2C_COP0_MAP5587               0x000118008094AE98  RSL
L2C_COP0_MAP5588               0x000118008094AEA0  RSL
L2C_COP0_MAP5589               0x000118008094AEA8  RSL
L2C_COP0_MAP5590               0x000118008094AEB0  RSL
L2C_COP0_MAP5591               0x000118008094AEB8  RSL
L2C_COP0_MAP5592               0x000118008094AEC0  RSL
L2C_COP0_MAP5593               0x000118008094AEC8  RSL
L2C_COP0_MAP5594               0x000118008094AED0  RSL
L2C_COP0_MAP5595               0x000118008094AED8  RSL
L2C_COP0_MAP5596               0x000118008094AEE0  RSL
L2C_COP0_MAP5597               0x000118008094AEE8  RSL
L2C_COP0_MAP5598               0x000118008094AEF0  RSL
L2C_COP0_MAP5599               0x000118008094AEF8  RSL
L2C_COP0_MAP5600               0x000118008094AF00  RSL
L2C_COP0_MAP5601               0x000118008094AF08  RSL
L2C_COP0_MAP5602               0x000118008094AF10  RSL
L2C_COP0_MAP5603               0x000118008094AF18  RSL
L2C_COP0_MAP5604               0x000118008094AF20  RSL
L2C_COP0_MAP5605               0x000118008094AF28  RSL
L2C_COP0_MAP5606               0x000118008094AF30  RSL
L2C_COP0_MAP5607               0x000118008094AF38  RSL
L2C_COP0_MAP5608               0x000118008094AF40  RSL
L2C_COP0_MAP5609               0x000118008094AF48  RSL
L2C_COP0_MAP5610               0x000118008094AF50  RSL
L2C_COP0_MAP5611               0x000118008094AF58  RSL
L2C_COP0_MAP5612               0x000118008094AF60  RSL
L2C_COP0_MAP5613               0x000118008094AF68  RSL
L2C_COP0_MAP5614               0x000118008094AF70  RSL
L2C_COP0_MAP5615               0x000118008094AF78  RSL
L2C_COP0_MAP5616               0x000118008094AF80  RSL
L2C_COP0_MAP5617               0x000118008094AF88  RSL
L2C_COP0_MAP5618               0x000118008094AF90  RSL
L2C_COP0_MAP5619               0x000118008094AF98  RSL
L2C_COP0_MAP5620               0x000118008094AFA0  RSL
L2C_COP0_MAP5621               0x000118008094AFA8  RSL
L2C_COP0_MAP5622               0x000118008094AFB0  RSL
L2C_COP0_MAP5623               0x000118008094AFB8  RSL
L2C_COP0_MAP5624               0x000118008094AFC0  RSL
L2C_COP0_MAP5625               0x000118008094AFC8  RSL
L2C_COP0_MAP5626               0x000118008094AFD0  RSL
L2C_COP0_MAP5627               0x000118008094AFD8  RSL
L2C_COP0_MAP5628               0x000118008094AFE0  RSL
L2C_COP0_MAP5629               0x000118008094AFE8  RSL
L2C_COP0_MAP5630               0x000118008094AFF0  RSL
L2C_COP0_MAP5631               0x000118008094AFF8  RSL
L2C_COP0_MAP5632               0x000118008094B000  RSL
L2C_COP0_MAP5633               0x000118008094B008  RSL
L2C_COP0_MAP5634               0x000118008094B010  RSL
L2C_COP0_MAP5635               0x000118008094B018  RSL
L2C_COP0_MAP5636               0x000118008094B020  RSL
L2C_COP0_MAP5637               0x000118008094B028  RSL
L2C_COP0_MAP5638               0x000118008094B030  RSL
L2C_COP0_MAP5639               0x000118008094B038  RSL
L2C_COP0_MAP5640               0x000118008094B040  RSL
L2C_COP0_MAP5641               0x000118008094B048  RSL
L2C_COP0_MAP5642               0x000118008094B050  RSL
L2C_COP0_MAP5643               0x000118008094B058  RSL
L2C_COP0_MAP5644               0x000118008094B060  RSL
L2C_COP0_MAP5645               0x000118008094B068  RSL
L2C_COP0_MAP5646               0x000118008094B070  RSL
L2C_COP0_MAP5647               0x000118008094B078  RSL
L2C_COP0_MAP5648               0x000118008094B080  RSL
L2C_COP0_MAP5649               0x000118008094B088  RSL
L2C_COP0_MAP5650               0x000118008094B090  RSL
L2C_COP0_MAP5651               0x000118008094B098  RSL
L2C_COP0_MAP5652               0x000118008094B0A0  RSL
L2C_COP0_MAP5653               0x000118008094B0A8  RSL
L2C_COP0_MAP5654               0x000118008094B0B0  RSL
L2C_COP0_MAP5655               0x000118008094B0B8  RSL
L2C_COP0_MAP5656               0x000118008094B0C0  RSL
L2C_COP0_MAP5657               0x000118008094B0C8  RSL
L2C_COP0_MAP5658               0x000118008094B0D0  RSL
L2C_COP0_MAP5659               0x000118008094B0D8  RSL
L2C_COP0_MAP5660               0x000118008094B0E0  RSL
L2C_COP0_MAP5661               0x000118008094B0E8  RSL
L2C_COP0_MAP5662               0x000118008094B0F0  RSL
L2C_COP0_MAP5663               0x000118008094B0F8  RSL
L2C_COP0_MAP5664               0x000118008094B100  RSL
L2C_COP0_MAP5665               0x000118008094B108  RSL
L2C_COP0_MAP5666               0x000118008094B110  RSL
L2C_COP0_MAP5667               0x000118008094B118  RSL
L2C_COP0_MAP5668               0x000118008094B120  RSL
L2C_COP0_MAP5669               0x000118008094B128  RSL
L2C_COP0_MAP5670               0x000118008094B130  RSL
L2C_COP0_MAP5671               0x000118008094B138  RSL
L2C_COP0_MAP5672               0x000118008094B140  RSL
L2C_COP0_MAP5673               0x000118008094B148  RSL
L2C_COP0_MAP5674               0x000118008094B150  RSL
L2C_COP0_MAP5675               0x000118008094B158  RSL
L2C_COP0_MAP5676               0x000118008094B160  RSL
L2C_COP0_MAP5677               0x000118008094B168  RSL
L2C_COP0_MAP5678               0x000118008094B170  RSL
L2C_COP0_MAP5679               0x000118008094B178  RSL
L2C_COP0_MAP5680               0x000118008094B180  RSL
L2C_COP0_MAP5681               0x000118008094B188  RSL
L2C_COP0_MAP5682               0x000118008094B190  RSL
L2C_COP0_MAP5683               0x000118008094B198  RSL
L2C_COP0_MAP5684               0x000118008094B1A0  RSL
L2C_COP0_MAP5685               0x000118008094B1A8  RSL
L2C_COP0_MAP5686               0x000118008094B1B0  RSL
L2C_COP0_MAP5687               0x000118008094B1B8  RSL
L2C_COP0_MAP5688               0x000118008094B1C0  RSL
L2C_COP0_MAP5689               0x000118008094B1C8  RSL
L2C_COP0_MAP5690               0x000118008094B1D0  RSL
L2C_COP0_MAP5691               0x000118008094B1D8  RSL
L2C_COP0_MAP5692               0x000118008094B1E0  RSL
L2C_COP0_MAP5693               0x000118008094B1E8  RSL
L2C_COP0_MAP5694               0x000118008094B1F0  RSL
L2C_COP0_MAP5695               0x000118008094B1F8  RSL
L2C_COP0_MAP5696               0x000118008094B200  RSL
L2C_COP0_MAP5697               0x000118008094B208  RSL
L2C_COP0_MAP5698               0x000118008094B210  RSL
L2C_COP0_MAP5699               0x000118008094B218  RSL
L2C_COP0_MAP5700               0x000118008094B220  RSL
L2C_COP0_MAP5701               0x000118008094B228  RSL
L2C_COP0_MAP5702               0x000118008094B230  RSL
L2C_COP0_MAP5703               0x000118008094B238  RSL
L2C_COP0_MAP5704               0x000118008094B240  RSL
L2C_COP0_MAP5705               0x000118008094B248  RSL
L2C_COP0_MAP5706               0x000118008094B250  RSL
L2C_COP0_MAP5707               0x000118008094B258  RSL
L2C_COP0_MAP5708               0x000118008094B260  RSL
L2C_COP0_MAP5709               0x000118008094B268  RSL
L2C_COP0_MAP5710               0x000118008094B270  RSL
L2C_COP0_MAP5711               0x000118008094B278  RSL
L2C_COP0_MAP5712               0x000118008094B280  RSL
L2C_COP0_MAP5713               0x000118008094B288  RSL
L2C_COP0_MAP5714               0x000118008094B290  RSL
L2C_COP0_MAP5715               0x000118008094B298  RSL
L2C_COP0_MAP5716               0x000118008094B2A0  RSL
L2C_COP0_MAP5717               0x000118008094B2A8  RSL
L2C_COP0_MAP5718               0x000118008094B2B0  RSL
L2C_COP0_MAP5719               0x000118008094B2B8  RSL
L2C_COP0_MAP5720               0x000118008094B2C0  RSL
L2C_COP0_MAP5721               0x000118008094B2C8  RSL
L2C_COP0_MAP5722               0x000118008094B2D0  RSL
L2C_COP0_MAP5723               0x000118008094B2D8  RSL
L2C_COP0_MAP5724               0x000118008094B2E0  RSL
L2C_COP0_MAP5725               0x000118008094B2E8  RSL
L2C_COP0_MAP5726               0x000118008094B2F0  RSL
L2C_COP0_MAP5727               0x000118008094B2F8  RSL
L2C_COP0_MAP5728               0x000118008094B300  RSL
L2C_COP0_MAP5729               0x000118008094B308  RSL
L2C_COP0_MAP5730               0x000118008094B310  RSL
L2C_COP0_MAP5731               0x000118008094B318  RSL
L2C_COP0_MAP5732               0x000118008094B320  RSL
L2C_COP0_MAP5733               0x000118008094B328  RSL
L2C_COP0_MAP5734               0x000118008094B330  RSL
L2C_COP0_MAP5735               0x000118008094B338  RSL
L2C_COP0_MAP5736               0x000118008094B340  RSL
L2C_COP0_MAP5737               0x000118008094B348  RSL
L2C_COP0_MAP5738               0x000118008094B350  RSL
L2C_COP0_MAP5739               0x000118008094B358  RSL
L2C_COP0_MAP5740               0x000118008094B360  RSL
L2C_COP0_MAP5741               0x000118008094B368  RSL
L2C_COP0_MAP5742               0x000118008094B370  RSL
L2C_COP0_MAP5743               0x000118008094B378  RSL
L2C_COP0_MAP5744               0x000118008094B380  RSL
L2C_COP0_MAP5745               0x000118008094B388  RSL
L2C_COP0_MAP5746               0x000118008094B390  RSL
L2C_COP0_MAP5747               0x000118008094B398  RSL
L2C_COP0_MAP5748               0x000118008094B3A0  RSL
L2C_COP0_MAP5749               0x000118008094B3A8  RSL
L2C_COP0_MAP5750               0x000118008094B3B0  RSL
L2C_COP0_MAP5751               0x000118008094B3B8  RSL
L2C_COP0_MAP5752               0x000118008094B3C0  RSL
L2C_COP0_MAP5753               0x000118008094B3C8  RSL
L2C_COP0_MAP5754               0x000118008094B3D0  RSL
L2C_COP0_MAP5755               0x000118008094B3D8  RSL
L2C_COP0_MAP5756               0x000118008094B3E0  RSL
L2C_COP0_MAP5757               0x000118008094B3E8  RSL
L2C_COP0_MAP5758               0x000118008094B3F0  RSL
L2C_COP0_MAP5759               0x000118008094B3F8  RSL
L2C_COP0_MAP5760               0x000118008094B400  RSL
L2C_COP0_MAP5761               0x000118008094B408  RSL
L2C_COP0_MAP5762               0x000118008094B410  RSL
L2C_COP0_MAP5763               0x000118008094B418  RSL
L2C_COP0_MAP5764               0x000118008094B420  RSL
L2C_COP0_MAP5765               0x000118008094B428  RSL
L2C_COP0_MAP5766               0x000118008094B430  RSL
L2C_COP0_MAP5767               0x000118008094B438  RSL
L2C_COP0_MAP5768               0x000118008094B440  RSL
L2C_COP0_MAP5769               0x000118008094B448  RSL
L2C_COP0_MAP5770               0x000118008094B450  RSL
L2C_COP0_MAP5771               0x000118008094B458  RSL
L2C_COP0_MAP5772               0x000118008094B460  RSL
L2C_COP0_MAP5773               0x000118008094B468  RSL
L2C_COP0_MAP5774               0x000118008094B470  RSL
L2C_COP0_MAP5775               0x000118008094B478  RSL
L2C_COP0_MAP5776               0x000118008094B480  RSL
L2C_COP0_MAP5777               0x000118008094B488  RSL
L2C_COP0_MAP5778               0x000118008094B490  RSL
L2C_COP0_MAP5779               0x000118008094B498  RSL
L2C_COP0_MAP5780               0x000118008094B4A0  RSL
L2C_COP0_MAP5781               0x000118008094B4A8  RSL
L2C_COP0_MAP5782               0x000118008094B4B0  RSL
L2C_COP0_MAP5783               0x000118008094B4B8  RSL
L2C_COP0_MAP5784               0x000118008094B4C0  RSL
L2C_COP0_MAP5785               0x000118008094B4C8  RSL
L2C_COP0_MAP5786               0x000118008094B4D0  RSL
L2C_COP0_MAP5787               0x000118008094B4D8  RSL
L2C_COP0_MAP5788               0x000118008094B4E0  RSL
L2C_COP0_MAP5789               0x000118008094B4E8  RSL
L2C_COP0_MAP5790               0x000118008094B4F0  RSL
L2C_COP0_MAP5791               0x000118008094B4F8  RSL
L2C_COP0_MAP5792               0x000118008094B500  RSL
L2C_COP0_MAP5793               0x000118008094B508  RSL
L2C_COP0_MAP5794               0x000118008094B510  RSL
L2C_COP0_MAP5795               0x000118008094B518  RSL
L2C_COP0_MAP5796               0x000118008094B520  RSL
L2C_COP0_MAP5797               0x000118008094B528  RSL
L2C_COP0_MAP5798               0x000118008094B530  RSL
L2C_COP0_MAP5799               0x000118008094B538  RSL
L2C_COP0_MAP5800               0x000118008094B540  RSL
L2C_COP0_MAP5801               0x000118008094B548  RSL
L2C_COP0_MAP5802               0x000118008094B550  RSL
L2C_COP0_MAP5803               0x000118008094B558  RSL
L2C_COP0_MAP5804               0x000118008094B560  RSL
L2C_COP0_MAP5805               0x000118008094B568  RSL
L2C_COP0_MAP5806               0x000118008094B570  RSL
L2C_COP0_MAP5807               0x000118008094B578  RSL
L2C_COP0_MAP5808               0x000118008094B580  RSL
L2C_COP0_MAP5809               0x000118008094B588  RSL
L2C_COP0_MAP5810               0x000118008094B590  RSL
L2C_COP0_MAP5811               0x000118008094B598  RSL
L2C_COP0_MAP5812               0x000118008094B5A0  RSL
L2C_COP0_MAP5813               0x000118008094B5A8  RSL
L2C_COP0_MAP5814               0x000118008094B5B0  RSL
L2C_COP0_MAP5815               0x000118008094B5B8  RSL
L2C_COP0_MAP5816               0x000118008094B5C0  RSL
L2C_COP0_MAP5817               0x000118008094B5C8  RSL
L2C_COP0_MAP5818               0x000118008094B5D0  RSL
L2C_COP0_MAP5819               0x000118008094B5D8  RSL
L2C_COP0_MAP5820               0x000118008094B5E0  RSL
L2C_COP0_MAP5821               0x000118008094B5E8  RSL
L2C_COP0_MAP5822               0x000118008094B5F0  RSL
L2C_COP0_MAP5823               0x000118008094B5F8  RSL
L2C_COP0_MAP5824               0x000118008094B600  RSL
L2C_COP0_MAP5825               0x000118008094B608  RSL
L2C_COP0_MAP5826               0x000118008094B610  RSL
L2C_COP0_MAP5827               0x000118008094B618  RSL
L2C_COP0_MAP5828               0x000118008094B620  RSL
L2C_COP0_MAP5829               0x000118008094B628  RSL
L2C_COP0_MAP5830               0x000118008094B630  RSL
L2C_COP0_MAP5831               0x000118008094B638  RSL
L2C_COP0_MAP5832               0x000118008094B640  RSL
L2C_COP0_MAP5833               0x000118008094B648  RSL
L2C_COP0_MAP5834               0x000118008094B650  RSL
L2C_COP0_MAP5835               0x000118008094B658  RSL
L2C_COP0_MAP5836               0x000118008094B660  RSL
L2C_COP0_MAP5837               0x000118008094B668  RSL
L2C_COP0_MAP5838               0x000118008094B670  RSL
L2C_COP0_MAP5839               0x000118008094B678  RSL
L2C_COP0_MAP5840               0x000118008094B680  RSL
L2C_COP0_MAP5841               0x000118008094B688  RSL
L2C_COP0_MAP5842               0x000118008094B690  RSL
L2C_COP0_MAP5843               0x000118008094B698  RSL
L2C_COP0_MAP5844               0x000118008094B6A0  RSL
L2C_COP0_MAP5845               0x000118008094B6A8  RSL
L2C_COP0_MAP5846               0x000118008094B6B0  RSL
L2C_COP0_MAP5847               0x000118008094B6B8  RSL
L2C_COP0_MAP5848               0x000118008094B6C0  RSL
L2C_COP0_MAP5849               0x000118008094B6C8  RSL
L2C_COP0_MAP5850               0x000118008094B6D0  RSL
L2C_COP0_MAP5851               0x000118008094B6D8  RSL
L2C_COP0_MAP5852               0x000118008094B6E0  RSL
L2C_COP0_MAP5853               0x000118008094B6E8  RSL
L2C_COP0_MAP5854               0x000118008094B6F0  RSL
L2C_COP0_MAP5855               0x000118008094B6F8  RSL
L2C_COP0_MAP5856               0x000118008094B700  RSL
L2C_COP0_MAP5857               0x000118008094B708  RSL
L2C_COP0_MAP5858               0x000118008094B710  RSL
L2C_COP0_MAP5859               0x000118008094B718  RSL
L2C_COP0_MAP5860               0x000118008094B720  RSL
L2C_COP0_MAP5861               0x000118008094B728  RSL
L2C_COP0_MAP5862               0x000118008094B730  RSL
L2C_COP0_MAP5863               0x000118008094B738  RSL
L2C_COP0_MAP5864               0x000118008094B740  RSL
L2C_COP0_MAP5865               0x000118008094B748  RSL
L2C_COP0_MAP5866               0x000118008094B750  RSL
L2C_COP0_MAP5867               0x000118008094B758  RSL
L2C_COP0_MAP5868               0x000118008094B760  RSL
L2C_COP0_MAP5869               0x000118008094B768  RSL
L2C_COP0_MAP5870               0x000118008094B770  RSL
L2C_COP0_MAP5871               0x000118008094B778  RSL
L2C_COP0_MAP5872               0x000118008094B780  RSL
L2C_COP0_MAP5873               0x000118008094B788  RSL
L2C_COP0_MAP5874               0x000118008094B790  RSL
L2C_COP0_MAP5875               0x000118008094B798  RSL
L2C_COP0_MAP5876               0x000118008094B7A0  RSL
L2C_COP0_MAP5877               0x000118008094B7A8  RSL
L2C_COP0_MAP5878               0x000118008094B7B0  RSL
L2C_COP0_MAP5879               0x000118008094B7B8  RSL
L2C_COP0_MAP5880               0x000118008094B7C0  RSL
L2C_COP0_MAP5881               0x000118008094B7C8  RSL
L2C_COP0_MAP5882               0x000118008094B7D0  RSL
L2C_COP0_MAP5883               0x000118008094B7D8  RSL
L2C_COP0_MAP5884               0x000118008094B7E0  RSL
L2C_COP0_MAP5885               0x000118008094B7E8  RSL
L2C_COP0_MAP5886               0x000118008094B7F0  RSL
L2C_COP0_MAP5887               0x000118008094B7F8  RSL
L2C_COP0_MAP5888               0x000118008094B800  RSL
L2C_COP0_MAP5889               0x000118008094B808  RSL
L2C_COP0_MAP5890               0x000118008094B810  RSL
L2C_COP0_MAP5891               0x000118008094B818  RSL
L2C_COP0_MAP5892               0x000118008094B820  RSL
L2C_COP0_MAP5893               0x000118008094B828  RSL
L2C_COP0_MAP5894               0x000118008094B830  RSL
L2C_COP0_MAP5895               0x000118008094B838  RSL
L2C_COP0_MAP5896               0x000118008094B840  RSL
L2C_COP0_MAP5897               0x000118008094B848  RSL
L2C_COP0_MAP5898               0x000118008094B850  RSL
L2C_COP0_MAP5899               0x000118008094B858  RSL
L2C_COP0_MAP5900               0x000118008094B860  RSL
L2C_COP0_MAP5901               0x000118008094B868  RSL
L2C_COP0_MAP5902               0x000118008094B870  RSL
L2C_COP0_MAP5903               0x000118008094B878  RSL
L2C_COP0_MAP5904               0x000118008094B880  RSL
L2C_COP0_MAP5905               0x000118008094B888  RSL
L2C_COP0_MAP5906               0x000118008094B890  RSL
L2C_COP0_MAP5907               0x000118008094B898  RSL
L2C_COP0_MAP5908               0x000118008094B8A0  RSL
L2C_COP0_MAP5909               0x000118008094B8A8  RSL
L2C_COP0_MAP5910               0x000118008094B8B0  RSL
L2C_COP0_MAP5911               0x000118008094B8B8  RSL
L2C_COP0_MAP5912               0x000118008094B8C0  RSL
L2C_COP0_MAP5913               0x000118008094B8C8  RSL
L2C_COP0_MAP5914               0x000118008094B8D0  RSL
L2C_COP0_MAP5915               0x000118008094B8D8  RSL
L2C_COP0_MAP5916               0x000118008094B8E0  RSL
L2C_COP0_MAP5917               0x000118008094B8E8  RSL
L2C_COP0_MAP5918               0x000118008094B8F0  RSL
L2C_COP0_MAP5919               0x000118008094B8F8  RSL
L2C_COP0_MAP5920               0x000118008094B900  RSL
L2C_COP0_MAP5921               0x000118008094B908  RSL
L2C_COP0_MAP5922               0x000118008094B910  RSL
L2C_COP0_MAP5923               0x000118008094B918  RSL
L2C_COP0_MAP5924               0x000118008094B920  RSL
L2C_COP0_MAP5925               0x000118008094B928  RSL
L2C_COP0_MAP5926               0x000118008094B930  RSL
L2C_COP0_MAP5927               0x000118008094B938  RSL
L2C_COP0_MAP5928               0x000118008094B940  RSL
L2C_COP0_MAP5929               0x000118008094B948  RSL
L2C_COP0_MAP5930               0x000118008094B950  RSL
L2C_COP0_MAP5931               0x000118008094B958  RSL
L2C_COP0_MAP5932               0x000118008094B960  RSL
L2C_COP0_MAP5933               0x000118008094B968  RSL
L2C_COP0_MAP5934               0x000118008094B970  RSL
L2C_COP0_MAP5935               0x000118008094B978  RSL
L2C_COP0_MAP5936               0x000118008094B980  RSL
L2C_COP0_MAP5937               0x000118008094B988  RSL
L2C_COP0_MAP5938               0x000118008094B990  RSL
L2C_COP0_MAP5939               0x000118008094B998  RSL
L2C_COP0_MAP5940               0x000118008094B9A0  RSL
L2C_COP0_MAP5941               0x000118008094B9A8  RSL
L2C_COP0_MAP5942               0x000118008094B9B0  RSL
L2C_COP0_MAP5943               0x000118008094B9B8  RSL
L2C_COP0_MAP5944               0x000118008094B9C0  RSL
L2C_COP0_MAP5945               0x000118008094B9C8  RSL
L2C_COP0_MAP5946               0x000118008094B9D0  RSL
L2C_COP0_MAP5947               0x000118008094B9D8  RSL
L2C_COP0_MAP5948               0x000118008094B9E0  RSL
L2C_COP0_MAP5949               0x000118008094B9E8  RSL
L2C_COP0_MAP5950               0x000118008094B9F0  RSL
L2C_COP0_MAP5951               0x000118008094B9F8  RSL
L2C_COP0_MAP5952               0x000118008094BA00  RSL
L2C_COP0_MAP5953               0x000118008094BA08  RSL
L2C_COP0_MAP5954               0x000118008094BA10  RSL
L2C_COP0_MAP5955               0x000118008094BA18  RSL
L2C_COP0_MAP5956               0x000118008094BA20  RSL
L2C_COP0_MAP5957               0x000118008094BA28  RSL
L2C_COP0_MAP5958               0x000118008094BA30  RSL
L2C_COP0_MAP5959               0x000118008094BA38  RSL
L2C_COP0_MAP5960               0x000118008094BA40  RSL
L2C_COP0_MAP5961               0x000118008094BA48  RSL
L2C_COP0_MAP5962               0x000118008094BA50  RSL
L2C_COP0_MAP5963               0x000118008094BA58  RSL
L2C_COP0_MAP5964               0x000118008094BA60  RSL
L2C_COP0_MAP5965               0x000118008094BA68  RSL
L2C_COP0_MAP5966               0x000118008094BA70  RSL
L2C_COP0_MAP5967               0x000118008094BA78  RSL
L2C_COP0_MAP5968               0x000118008094BA80  RSL
L2C_COP0_MAP5969               0x000118008094BA88  RSL
L2C_COP0_MAP5970               0x000118008094BA90  RSL
L2C_COP0_MAP5971               0x000118008094BA98  RSL
L2C_COP0_MAP5972               0x000118008094BAA0  RSL
L2C_COP0_MAP5973               0x000118008094BAA8  RSL
L2C_COP0_MAP5974               0x000118008094BAB0  RSL
L2C_COP0_MAP5975               0x000118008094BAB8  RSL
L2C_COP0_MAP5976               0x000118008094BAC0  RSL
L2C_COP0_MAP5977               0x000118008094BAC8  RSL
L2C_COP0_MAP5978               0x000118008094BAD0  RSL
L2C_COP0_MAP5979               0x000118008094BAD8  RSL
L2C_COP0_MAP5980               0x000118008094BAE0  RSL
L2C_COP0_MAP5981               0x000118008094BAE8  RSL
L2C_COP0_MAP5982               0x000118008094BAF0  RSL
L2C_COP0_MAP5983               0x000118008094BAF8  RSL
L2C_COP0_MAP5984               0x000118008094BB00  RSL
L2C_COP0_MAP5985               0x000118008094BB08  RSL
L2C_COP0_MAP5986               0x000118008094BB10  RSL
L2C_COP0_MAP5987               0x000118008094BB18  RSL
L2C_COP0_MAP5988               0x000118008094BB20  RSL
L2C_COP0_MAP5989               0x000118008094BB28  RSL
L2C_COP0_MAP5990               0x000118008094BB30  RSL
L2C_COP0_MAP5991               0x000118008094BB38  RSL
L2C_COP0_MAP5992               0x000118008094BB40  RSL
L2C_COP0_MAP5993               0x000118008094BB48  RSL
L2C_COP0_MAP5994               0x000118008094BB50  RSL
L2C_COP0_MAP5995               0x000118008094BB58  RSL
L2C_COP0_MAP5996               0x000118008094BB60  RSL
L2C_COP0_MAP5997               0x000118008094BB68  RSL
L2C_COP0_MAP5998               0x000118008094BB70  RSL
L2C_COP0_MAP5999               0x000118008094BB78  RSL
L2C_COP0_MAP6000               0x000118008094BB80  RSL
L2C_COP0_MAP6001               0x000118008094BB88  RSL
L2C_COP0_MAP6002               0x000118008094BB90  RSL
L2C_COP0_MAP6003               0x000118008094BB98  RSL
L2C_COP0_MAP6004               0x000118008094BBA0  RSL
L2C_COP0_MAP6005               0x000118008094BBA8  RSL
L2C_COP0_MAP6006               0x000118008094BBB0  RSL
L2C_COP0_MAP6007               0x000118008094BBB8  RSL
L2C_COP0_MAP6008               0x000118008094BBC0  RSL
L2C_COP0_MAP6009               0x000118008094BBC8  RSL
L2C_COP0_MAP6010               0x000118008094BBD0  RSL
L2C_COP0_MAP6011               0x000118008094BBD8  RSL
L2C_COP0_MAP6012               0x000118008094BBE0  RSL
L2C_COP0_MAP6013               0x000118008094BBE8  RSL
L2C_COP0_MAP6014               0x000118008094BBF0  RSL
L2C_COP0_MAP6015               0x000118008094BBF8  RSL
L2C_COP0_MAP6016               0x000118008094BC00  RSL
L2C_COP0_MAP6017               0x000118008094BC08  RSL
L2C_COP0_MAP6018               0x000118008094BC10  RSL
L2C_COP0_MAP6019               0x000118008094BC18  RSL
L2C_COP0_MAP6020               0x000118008094BC20  RSL
L2C_COP0_MAP6021               0x000118008094BC28  RSL
L2C_COP0_MAP6022               0x000118008094BC30  RSL
L2C_COP0_MAP6023               0x000118008094BC38  RSL
L2C_COP0_MAP6024               0x000118008094BC40  RSL
L2C_COP0_MAP6025               0x000118008094BC48  RSL
L2C_COP0_MAP6026               0x000118008094BC50  RSL
L2C_COP0_MAP6027               0x000118008094BC58  RSL
L2C_COP0_MAP6028               0x000118008094BC60  RSL
L2C_COP0_MAP6029               0x000118008094BC68  RSL
L2C_COP0_MAP6030               0x000118008094BC70  RSL
L2C_COP0_MAP6031               0x000118008094BC78  RSL
L2C_COP0_MAP6032               0x000118008094BC80  RSL
L2C_COP0_MAP6033               0x000118008094BC88  RSL
L2C_COP0_MAP6034               0x000118008094BC90  RSL
L2C_COP0_MAP6035               0x000118008094BC98  RSL
L2C_COP0_MAP6036               0x000118008094BCA0  RSL
L2C_COP0_MAP6037               0x000118008094BCA8  RSL
L2C_COP0_MAP6038               0x000118008094BCB0  RSL
L2C_COP0_MAP6039               0x000118008094BCB8  RSL
L2C_COP0_MAP6040               0x000118008094BCC0  RSL
L2C_COP0_MAP6041               0x000118008094BCC8  RSL
L2C_COP0_MAP6042               0x000118008094BCD0  RSL
L2C_COP0_MAP6043               0x000118008094BCD8  RSL
L2C_COP0_MAP6044               0x000118008094BCE0  RSL
L2C_COP0_MAP6045               0x000118008094BCE8  RSL
L2C_COP0_MAP6046               0x000118008094BCF0  RSL
L2C_COP0_MAP6047               0x000118008094BCF8  RSL
L2C_COP0_MAP6048               0x000118008094BD00  RSL
L2C_COP0_MAP6049               0x000118008094BD08  RSL
L2C_COP0_MAP6050               0x000118008094BD10  RSL
L2C_COP0_MAP6051               0x000118008094BD18  RSL
L2C_COP0_MAP6052               0x000118008094BD20  RSL
L2C_COP0_MAP6053               0x000118008094BD28  RSL
L2C_COP0_MAP6054               0x000118008094BD30  RSL
L2C_COP0_MAP6055               0x000118008094BD38  RSL
L2C_COP0_MAP6056               0x000118008094BD40  RSL
L2C_COP0_MAP6057               0x000118008094BD48  RSL
L2C_COP0_MAP6058               0x000118008094BD50  RSL
L2C_COP0_MAP6059               0x000118008094BD58  RSL
L2C_COP0_MAP6060               0x000118008094BD60  RSL
L2C_COP0_MAP6061               0x000118008094BD68  RSL
L2C_COP0_MAP6062               0x000118008094BD70  RSL
L2C_COP0_MAP6063               0x000118008094BD78  RSL
L2C_COP0_MAP6064               0x000118008094BD80  RSL
L2C_COP0_MAP6065               0x000118008094BD88  RSL
L2C_COP0_MAP6066               0x000118008094BD90  RSL
L2C_COP0_MAP6067               0x000118008094BD98  RSL
L2C_COP0_MAP6068               0x000118008094BDA0  RSL
L2C_COP0_MAP6069               0x000118008094BDA8  RSL
L2C_COP0_MAP6070               0x000118008094BDB0  RSL
L2C_COP0_MAP6071               0x000118008094BDB8  RSL
L2C_COP0_MAP6072               0x000118008094BDC0  RSL
L2C_COP0_MAP6073               0x000118008094BDC8  RSL
L2C_COP0_MAP6074               0x000118008094BDD0  RSL
L2C_COP0_MAP6075               0x000118008094BDD8  RSL
L2C_COP0_MAP6076               0x000118008094BDE0  RSL
L2C_COP0_MAP6077               0x000118008094BDE8  RSL
L2C_COP0_MAP6078               0x000118008094BDF0  RSL
L2C_COP0_MAP6079               0x000118008094BDF8  RSL
L2C_COP0_MAP6080               0x000118008094BE00  RSL
L2C_COP0_MAP6081               0x000118008094BE08  RSL
L2C_COP0_MAP6082               0x000118008094BE10  RSL
L2C_COP0_MAP6083               0x000118008094BE18  RSL
L2C_COP0_MAP6084               0x000118008094BE20  RSL
L2C_COP0_MAP6085               0x000118008094BE28  RSL
L2C_COP0_MAP6086               0x000118008094BE30  RSL
L2C_COP0_MAP6087               0x000118008094BE38  RSL
L2C_COP0_MAP6088               0x000118008094BE40  RSL
L2C_COP0_MAP6089               0x000118008094BE48  RSL
L2C_COP0_MAP6090               0x000118008094BE50  RSL
L2C_COP0_MAP6091               0x000118008094BE58  RSL
L2C_COP0_MAP6092               0x000118008094BE60  RSL
L2C_COP0_MAP6093               0x000118008094BE68  RSL
L2C_COP0_MAP6094               0x000118008094BE70  RSL
L2C_COP0_MAP6095               0x000118008094BE78  RSL
L2C_COP0_MAP6096               0x000118008094BE80  RSL
L2C_COP0_MAP6097               0x000118008094BE88  RSL
L2C_COP0_MAP6098               0x000118008094BE90  RSL
L2C_COP0_MAP6099               0x000118008094BE98  RSL
L2C_COP0_MAP6100               0x000118008094BEA0  RSL
L2C_COP0_MAP6101               0x000118008094BEA8  RSL
L2C_COP0_MAP6102               0x000118008094BEB0  RSL
L2C_COP0_MAP6103               0x000118008094BEB8  RSL
L2C_COP0_MAP6104               0x000118008094BEC0  RSL
L2C_COP0_MAP6105               0x000118008094BEC8  RSL
L2C_COP0_MAP6106               0x000118008094BED0  RSL
L2C_COP0_MAP6107               0x000118008094BED8  RSL
L2C_COP0_MAP6108               0x000118008094BEE0  RSL
L2C_COP0_MAP6109               0x000118008094BEE8  RSL
L2C_COP0_MAP6110               0x000118008094BEF0  RSL
L2C_COP0_MAP6111               0x000118008094BEF8  RSL
L2C_COP0_MAP6112               0x000118008094BF00  RSL
L2C_COP0_MAP6113               0x000118008094BF08  RSL
L2C_COP0_MAP6114               0x000118008094BF10  RSL
L2C_COP0_MAP6115               0x000118008094BF18  RSL
L2C_COP0_MAP6116               0x000118008094BF20  RSL
L2C_COP0_MAP6117               0x000118008094BF28  RSL
L2C_COP0_MAP6118               0x000118008094BF30  RSL
L2C_COP0_MAP6119               0x000118008094BF38  RSL
L2C_COP0_MAP6120               0x000118008094BF40  RSL
L2C_COP0_MAP6121               0x000118008094BF48  RSL
L2C_COP0_MAP6122               0x000118008094BF50  RSL
L2C_COP0_MAP6123               0x000118008094BF58  RSL
L2C_COP0_MAP6124               0x000118008094BF60  RSL
L2C_COP0_MAP6125               0x000118008094BF68  RSL
L2C_COP0_MAP6126               0x000118008094BF70  RSL
L2C_COP0_MAP6127               0x000118008094BF78  RSL
L2C_COP0_MAP6128               0x000118008094BF80  RSL
L2C_COP0_MAP6129               0x000118008094BF88  RSL
L2C_COP0_MAP6130               0x000118008094BF90  RSL
L2C_COP0_MAP6131               0x000118008094BF98  RSL
L2C_COP0_MAP6132               0x000118008094BFA0  RSL
L2C_COP0_MAP6133               0x000118008094BFA8  RSL
L2C_COP0_MAP6134               0x000118008094BFB0  RSL
L2C_COP0_MAP6135               0x000118008094BFB8  RSL
L2C_COP0_MAP6136               0x000118008094BFC0  RSL
L2C_COP0_MAP6137               0x000118008094BFC8  RSL
L2C_COP0_MAP6138               0x000118008094BFD0  RSL
L2C_COP0_MAP6139               0x000118008094BFD8  RSL
L2C_COP0_MAP6140               0x000118008094BFE0  RSL
L2C_COP0_MAP6141               0x000118008094BFE8  RSL
L2C_COP0_MAP6142               0x000118008094BFF0  RSL
L2C_COP0_MAP6143               0x000118008094BFF8  RSL
L2C_COP0_MAP6144               0x000118008094C000  RSL
L2C_COP0_MAP6145               0x000118008094C008  RSL
L2C_COP0_MAP6146               0x000118008094C010  RSL
L2C_COP0_MAP6147               0x000118008094C018  RSL
L2C_COP0_MAP6148               0x000118008094C020  RSL
L2C_COP0_MAP6149               0x000118008094C028  RSL
L2C_COP0_MAP6150               0x000118008094C030  RSL
L2C_COP0_MAP6151               0x000118008094C038  RSL
L2C_COP0_MAP6152               0x000118008094C040  RSL
L2C_COP0_MAP6153               0x000118008094C048  RSL
L2C_COP0_MAP6154               0x000118008094C050  RSL
L2C_COP0_MAP6155               0x000118008094C058  RSL
L2C_COP0_MAP6156               0x000118008094C060  RSL
L2C_COP0_MAP6157               0x000118008094C068  RSL
L2C_COP0_MAP6158               0x000118008094C070  RSL
L2C_COP0_MAP6159               0x000118008094C078  RSL
L2C_COP0_MAP6160               0x000118008094C080  RSL
L2C_COP0_MAP6161               0x000118008094C088  RSL
L2C_COP0_MAP6162               0x000118008094C090  RSL
L2C_COP0_MAP6163               0x000118008094C098  RSL
L2C_COP0_MAP6164               0x000118008094C0A0  RSL
L2C_COP0_MAP6165               0x000118008094C0A8  RSL
L2C_COP0_MAP6166               0x000118008094C0B0  RSL
L2C_COP0_MAP6167               0x000118008094C0B8  RSL
L2C_COP0_MAP6168               0x000118008094C0C0  RSL
L2C_COP0_MAP6169               0x000118008094C0C8  RSL
L2C_COP0_MAP6170               0x000118008094C0D0  RSL
L2C_COP0_MAP6171               0x000118008094C0D8  RSL
L2C_COP0_MAP6172               0x000118008094C0E0  RSL
L2C_COP0_MAP6173               0x000118008094C0E8  RSL
L2C_COP0_MAP6174               0x000118008094C0F0  RSL
L2C_COP0_MAP6175               0x000118008094C0F8  RSL
L2C_COP0_MAP6176               0x000118008094C100  RSL
L2C_COP0_MAP6177               0x000118008094C108  RSL
L2C_COP0_MAP6178               0x000118008094C110  RSL
L2C_COP0_MAP6179               0x000118008094C118  RSL
L2C_COP0_MAP6180               0x000118008094C120  RSL
L2C_COP0_MAP6181               0x000118008094C128  RSL
L2C_COP0_MAP6182               0x000118008094C130  RSL
L2C_COP0_MAP6183               0x000118008094C138  RSL
L2C_COP0_MAP6184               0x000118008094C140  RSL
L2C_COP0_MAP6185               0x000118008094C148  RSL
L2C_COP0_MAP6186               0x000118008094C150  RSL
L2C_COP0_MAP6187               0x000118008094C158  RSL
L2C_COP0_MAP6188               0x000118008094C160  RSL
L2C_COP0_MAP6189               0x000118008094C168  RSL
L2C_COP0_MAP6190               0x000118008094C170  RSL
L2C_COP0_MAP6191               0x000118008094C178  RSL
L2C_COP0_MAP6192               0x000118008094C180  RSL
L2C_COP0_MAP6193               0x000118008094C188  RSL
L2C_COP0_MAP6194               0x000118008094C190  RSL
L2C_COP0_MAP6195               0x000118008094C198  RSL
L2C_COP0_MAP6196               0x000118008094C1A0  RSL
L2C_COP0_MAP6197               0x000118008094C1A8  RSL
L2C_COP0_MAP6198               0x000118008094C1B0  RSL
L2C_COP0_MAP6199               0x000118008094C1B8  RSL
L2C_COP0_MAP6200               0x000118008094C1C0  RSL
L2C_COP0_MAP6201               0x000118008094C1C8  RSL
L2C_COP0_MAP6202               0x000118008094C1D0  RSL
L2C_COP0_MAP6203               0x000118008094C1D8  RSL
L2C_COP0_MAP6204               0x000118008094C1E0  RSL
L2C_COP0_MAP6205               0x000118008094C1E8  RSL
L2C_COP0_MAP6206               0x000118008094C1F0  RSL
L2C_COP0_MAP6207               0x000118008094C1F8  RSL
L2C_COP0_MAP6208               0x000118008094C200  RSL
L2C_COP0_MAP6209               0x000118008094C208  RSL
L2C_COP0_MAP6210               0x000118008094C210  RSL
L2C_COP0_MAP6211               0x000118008094C218  RSL
L2C_COP0_MAP6212               0x000118008094C220  RSL
L2C_COP0_MAP6213               0x000118008094C228  RSL
L2C_COP0_MAP6214               0x000118008094C230  RSL
L2C_COP0_MAP6215               0x000118008094C238  RSL
L2C_COP0_MAP6216               0x000118008094C240  RSL
L2C_COP0_MAP6217               0x000118008094C248  RSL
L2C_COP0_MAP6218               0x000118008094C250  RSL
L2C_COP0_MAP6219               0x000118008094C258  RSL
L2C_COP0_MAP6220               0x000118008094C260  RSL
L2C_COP0_MAP6221               0x000118008094C268  RSL
L2C_COP0_MAP6222               0x000118008094C270  RSL
L2C_COP0_MAP6223               0x000118008094C278  RSL
L2C_COP0_MAP6224               0x000118008094C280  RSL
L2C_COP0_MAP6225               0x000118008094C288  RSL
L2C_COP0_MAP6226               0x000118008094C290  RSL
L2C_COP0_MAP6227               0x000118008094C298  RSL
L2C_COP0_MAP6228               0x000118008094C2A0  RSL
L2C_COP0_MAP6229               0x000118008094C2A8  RSL
L2C_COP0_MAP6230               0x000118008094C2B0  RSL
L2C_COP0_MAP6231               0x000118008094C2B8  RSL
L2C_COP0_MAP6232               0x000118008094C2C0  RSL
L2C_COP0_MAP6233               0x000118008094C2C8  RSL
L2C_COP0_MAP6234               0x000118008094C2D0  RSL
L2C_COP0_MAP6235               0x000118008094C2D8  RSL
L2C_COP0_MAP6236               0x000118008094C2E0  RSL
L2C_COP0_MAP6237               0x000118008094C2E8  RSL
L2C_COP0_MAP6238               0x000118008094C2F0  RSL
L2C_COP0_MAP6239               0x000118008094C2F8  RSL
L2C_COP0_MAP6240               0x000118008094C300  RSL
L2C_COP0_MAP6241               0x000118008094C308  RSL
L2C_COP0_MAP6242               0x000118008094C310  RSL
L2C_COP0_MAP6243               0x000118008094C318  RSL
L2C_COP0_MAP6244               0x000118008094C320  RSL
L2C_COP0_MAP6245               0x000118008094C328  RSL
L2C_COP0_MAP6246               0x000118008094C330  RSL
L2C_COP0_MAP6247               0x000118008094C338  RSL
L2C_COP0_MAP6248               0x000118008094C340  RSL
L2C_COP0_MAP6249               0x000118008094C348  RSL
L2C_COP0_MAP6250               0x000118008094C350  RSL
L2C_COP0_MAP6251               0x000118008094C358  RSL
L2C_COP0_MAP6252               0x000118008094C360  RSL
L2C_COP0_MAP6253               0x000118008094C368  RSL
L2C_COP0_MAP6254               0x000118008094C370  RSL
L2C_COP0_MAP6255               0x000118008094C378  RSL
L2C_COP0_MAP6256               0x000118008094C380  RSL
L2C_COP0_MAP6257               0x000118008094C388  RSL
L2C_COP0_MAP6258               0x000118008094C390  RSL
L2C_COP0_MAP6259               0x000118008094C398  RSL
L2C_COP0_MAP6260               0x000118008094C3A0  RSL
L2C_COP0_MAP6261               0x000118008094C3A8  RSL
L2C_COP0_MAP6262               0x000118008094C3B0  RSL
L2C_COP0_MAP6263               0x000118008094C3B8  RSL
L2C_COP0_MAP6264               0x000118008094C3C0  RSL
L2C_COP0_MAP6265               0x000118008094C3C8  RSL
L2C_COP0_MAP6266               0x000118008094C3D0  RSL
L2C_COP0_MAP6267               0x000118008094C3D8  RSL
L2C_COP0_MAP6268               0x000118008094C3E0  RSL
L2C_COP0_MAP6269               0x000118008094C3E8  RSL
L2C_COP0_MAP6270               0x000118008094C3F0  RSL
L2C_COP0_MAP6271               0x000118008094C3F8  RSL
L2C_COP0_MAP6272               0x000118008094C400  RSL
L2C_COP0_MAP6273               0x000118008094C408  RSL
L2C_COP0_MAP6274               0x000118008094C410  RSL
L2C_COP0_MAP6275               0x000118008094C418  RSL
L2C_COP0_MAP6276               0x000118008094C420  RSL
L2C_COP0_MAP6277               0x000118008094C428  RSL
L2C_COP0_MAP6278               0x000118008094C430  RSL
L2C_COP0_MAP6279               0x000118008094C438  RSL
L2C_COP0_MAP6280               0x000118008094C440  RSL
L2C_COP0_MAP6281               0x000118008094C448  RSL
L2C_COP0_MAP6282               0x000118008094C450  RSL
L2C_COP0_MAP6283               0x000118008094C458  RSL
L2C_COP0_MAP6284               0x000118008094C460  RSL
L2C_COP0_MAP6285               0x000118008094C468  RSL
L2C_COP0_MAP6286               0x000118008094C470  RSL
L2C_COP0_MAP6287               0x000118008094C478  RSL
L2C_COP0_MAP6288               0x000118008094C480  RSL
L2C_COP0_MAP6289               0x000118008094C488  RSL
L2C_COP0_MAP6290               0x000118008094C490  RSL
L2C_COP0_MAP6291               0x000118008094C498  RSL
L2C_COP0_MAP6292               0x000118008094C4A0  RSL
L2C_COP0_MAP6293               0x000118008094C4A8  RSL
L2C_COP0_MAP6294               0x000118008094C4B0  RSL
L2C_COP0_MAP6295               0x000118008094C4B8  RSL
L2C_COP0_MAP6296               0x000118008094C4C0  RSL
L2C_COP0_MAP6297               0x000118008094C4C8  RSL
L2C_COP0_MAP6298               0x000118008094C4D0  RSL
L2C_COP0_MAP6299               0x000118008094C4D8  RSL
L2C_COP0_MAP6300               0x000118008094C4E0  RSL
L2C_COP0_MAP6301               0x000118008094C4E8  RSL
L2C_COP0_MAP6302               0x000118008094C4F0  RSL
L2C_COP0_MAP6303               0x000118008094C4F8  RSL
L2C_COP0_MAP6304               0x000118008094C500  RSL
L2C_COP0_MAP6305               0x000118008094C508  RSL
L2C_COP0_MAP6306               0x000118008094C510  RSL
L2C_COP0_MAP6307               0x000118008094C518  RSL
L2C_COP0_MAP6308               0x000118008094C520  RSL
L2C_COP0_MAP6309               0x000118008094C528  RSL
L2C_COP0_MAP6310               0x000118008094C530  RSL
L2C_COP0_MAP6311               0x000118008094C538  RSL
L2C_COP0_MAP6312               0x000118008094C540  RSL
L2C_COP0_MAP6313               0x000118008094C548  RSL
L2C_COP0_MAP6314               0x000118008094C550  RSL
L2C_COP0_MAP6315               0x000118008094C558  RSL
L2C_COP0_MAP6316               0x000118008094C560  RSL
L2C_COP0_MAP6317               0x000118008094C568  RSL
L2C_COP0_MAP6318               0x000118008094C570  RSL
L2C_COP0_MAP6319               0x000118008094C578  RSL
L2C_COP0_MAP6320               0x000118008094C580  RSL
L2C_COP0_MAP6321               0x000118008094C588  RSL
L2C_COP0_MAP6322               0x000118008094C590  RSL
L2C_COP0_MAP6323               0x000118008094C598  RSL
L2C_COP0_MAP6324               0x000118008094C5A0  RSL
L2C_COP0_MAP6325               0x000118008094C5A8  RSL
L2C_COP0_MAP6326               0x000118008094C5B0  RSL
L2C_COP0_MAP6327               0x000118008094C5B8  RSL
L2C_COP0_MAP6328               0x000118008094C5C0  RSL
L2C_COP0_MAP6329               0x000118008094C5C8  RSL
L2C_COP0_MAP6330               0x000118008094C5D0  RSL
L2C_COP0_MAP6331               0x000118008094C5D8  RSL
L2C_COP0_MAP6332               0x000118008094C5E0  RSL
L2C_COP0_MAP6333               0x000118008094C5E8  RSL
L2C_COP0_MAP6334               0x000118008094C5F0  RSL
L2C_COP0_MAP6335               0x000118008094C5F8  RSL
L2C_COP0_MAP6336               0x000118008094C600  RSL
L2C_COP0_MAP6337               0x000118008094C608  RSL
L2C_COP0_MAP6338               0x000118008094C610  RSL
L2C_COP0_MAP6339               0x000118008094C618  RSL
L2C_COP0_MAP6340               0x000118008094C620  RSL
L2C_COP0_MAP6341               0x000118008094C628  RSL
L2C_COP0_MAP6342               0x000118008094C630  RSL
L2C_COP0_MAP6343               0x000118008094C638  RSL
L2C_COP0_MAP6344               0x000118008094C640  RSL
L2C_COP0_MAP6345               0x000118008094C648  RSL
L2C_COP0_MAP6346               0x000118008094C650  RSL
L2C_COP0_MAP6347               0x000118008094C658  RSL
L2C_COP0_MAP6348               0x000118008094C660  RSL
L2C_COP0_MAP6349               0x000118008094C668  RSL
L2C_COP0_MAP6350               0x000118008094C670  RSL
L2C_COP0_MAP6351               0x000118008094C678  RSL
L2C_COP0_MAP6352               0x000118008094C680  RSL
L2C_COP0_MAP6353               0x000118008094C688  RSL
L2C_COP0_MAP6354               0x000118008094C690  RSL
L2C_COP0_MAP6355               0x000118008094C698  RSL
L2C_COP0_MAP6356               0x000118008094C6A0  RSL
L2C_COP0_MAP6357               0x000118008094C6A8  RSL
L2C_COP0_MAP6358               0x000118008094C6B0  RSL
L2C_COP0_MAP6359               0x000118008094C6B8  RSL
L2C_COP0_MAP6360               0x000118008094C6C0  RSL
L2C_COP0_MAP6361               0x000118008094C6C8  RSL
L2C_COP0_MAP6362               0x000118008094C6D0  RSL
L2C_COP0_MAP6363               0x000118008094C6D8  RSL
L2C_COP0_MAP6364               0x000118008094C6E0  RSL
L2C_COP0_MAP6365               0x000118008094C6E8  RSL
L2C_COP0_MAP6366               0x000118008094C6F0  RSL
L2C_COP0_MAP6367               0x000118008094C6F8  RSL
L2C_COP0_MAP6368               0x000118008094C700  RSL
L2C_COP0_MAP6369               0x000118008094C708  RSL
L2C_COP0_MAP6370               0x000118008094C710  RSL
L2C_COP0_MAP6371               0x000118008094C718  RSL
L2C_COP0_MAP6372               0x000118008094C720  RSL
L2C_COP0_MAP6373               0x000118008094C728  RSL
L2C_COP0_MAP6374               0x000118008094C730  RSL
L2C_COP0_MAP6375               0x000118008094C738  RSL
L2C_COP0_MAP6376               0x000118008094C740  RSL
L2C_COP0_MAP6377               0x000118008094C748  RSL
L2C_COP0_MAP6378               0x000118008094C750  RSL
L2C_COP0_MAP6379               0x000118008094C758  RSL
L2C_COP0_MAP6380               0x000118008094C760  RSL
L2C_COP0_MAP6381               0x000118008094C768  RSL
L2C_COP0_MAP6382               0x000118008094C770  RSL
L2C_COP0_MAP6383               0x000118008094C778  RSL
L2C_COP0_MAP6384               0x000118008094C780  RSL
L2C_COP0_MAP6385               0x000118008094C788  RSL
L2C_COP0_MAP6386               0x000118008094C790  RSL
L2C_COP0_MAP6387               0x000118008094C798  RSL
L2C_COP0_MAP6388               0x000118008094C7A0  RSL
L2C_COP0_MAP6389               0x000118008094C7A8  RSL
L2C_COP0_MAP6390               0x000118008094C7B0  RSL
L2C_COP0_MAP6391               0x000118008094C7B8  RSL
L2C_COP0_MAP6392               0x000118008094C7C0  RSL
L2C_COP0_MAP6393               0x000118008094C7C8  RSL
L2C_COP0_MAP6394               0x000118008094C7D0  RSL
L2C_COP0_MAP6395               0x000118008094C7D8  RSL
L2C_COP0_MAP6396               0x000118008094C7E0  RSL
L2C_COP0_MAP6397               0x000118008094C7E8  RSL
L2C_COP0_MAP6398               0x000118008094C7F0  RSL
L2C_COP0_MAP6399               0x000118008094C7F8  RSL
L2C_COP0_MAP6400               0x000118008094C800  RSL
L2C_COP0_MAP6401               0x000118008094C808  RSL
L2C_COP0_MAP6402               0x000118008094C810  RSL
L2C_COP0_MAP6403               0x000118008094C818  RSL
L2C_COP0_MAP6404               0x000118008094C820  RSL
L2C_COP0_MAP6405               0x000118008094C828  RSL
L2C_COP0_MAP6406               0x000118008094C830  RSL
L2C_COP0_MAP6407               0x000118008094C838  RSL
L2C_COP0_MAP6408               0x000118008094C840  RSL
L2C_COP0_MAP6409               0x000118008094C848  RSL
L2C_COP0_MAP6410               0x000118008094C850  RSL
L2C_COP0_MAP6411               0x000118008094C858  RSL
L2C_COP0_MAP6412               0x000118008094C860  RSL
L2C_COP0_MAP6413               0x000118008094C868  RSL
L2C_COP0_MAP6414               0x000118008094C870  RSL
L2C_COP0_MAP6415               0x000118008094C878  RSL
L2C_COP0_MAP6416               0x000118008094C880  RSL
L2C_COP0_MAP6417               0x000118008094C888  RSL
L2C_COP0_MAP6418               0x000118008094C890  RSL
L2C_COP0_MAP6419               0x000118008094C898  RSL
L2C_COP0_MAP6420               0x000118008094C8A0  RSL
L2C_COP0_MAP6421               0x000118008094C8A8  RSL
L2C_COP0_MAP6422               0x000118008094C8B0  RSL
L2C_COP0_MAP6423               0x000118008094C8B8  RSL
L2C_COP0_MAP6424               0x000118008094C8C0  RSL
L2C_COP0_MAP6425               0x000118008094C8C8  RSL
L2C_COP0_MAP6426               0x000118008094C8D0  RSL
L2C_COP0_MAP6427               0x000118008094C8D8  RSL
L2C_COP0_MAP6428               0x000118008094C8E0  RSL
L2C_COP0_MAP6429               0x000118008094C8E8  RSL
L2C_COP0_MAP6430               0x000118008094C8F0  RSL
L2C_COP0_MAP6431               0x000118008094C8F8  RSL
L2C_COP0_MAP6432               0x000118008094C900  RSL
L2C_COP0_MAP6433               0x000118008094C908  RSL
L2C_COP0_MAP6434               0x000118008094C910  RSL
L2C_COP0_MAP6435               0x000118008094C918  RSL
L2C_COP0_MAP6436               0x000118008094C920  RSL
L2C_COP0_MAP6437               0x000118008094C928  RSL
L2C_COP0_MAP6438               0x000118008094C930  RSL
L2C_COP0_MAP6439               0x000118008094C938  RSL
L2C_COP0_MAP6440               0x000118008094C940  RSL
L2C_COP0_MAP6441               0x000118008094C948  RSL
L2C_COP0_MAP6442               0x000118008094C950  RSL
L2C_COP0_MAP6443               0x000118008094C958  RSL
L2C_COP0_MAP6444               0x000118008094C960  RSL
L2C_COP0_MAP6445               0x000118008094C968  RSL
L2C_COP0_MAP6446               0x000118008094C970  RSL
L2C_COP0_MAP6447               0x000118008094C978  RSL
L2C_COP0_MAP6448               0x000118008094C980  RSL
L2C_COP0_MAP6449               0x000118008094C988  RSL
L2C_COP0_MAP6450               0x000118008094C990  RSL
L2C_COP0_MAP6451               0x000118008094C998  RSL
L2C_COP0_MAP6452               0x000118008094C9A0  RSL
L2C_COP0_MAP6453               0x000118008094C9A8  RSL
L2C_COP0_MAP6454               0x000118008094C9B0  RSL
L2C_COP0_MAP6455               0x000118008094C9B8  RSL
L2C_COP0_MAP6456               0x000118008094C9C0  RSL
L2C_COP0_MAP6457               0x000118008094C9C8  RSL
L2C_COP0_MAP6458               0x000118008094C9D0  RSL
L2C_COP0_MAP6459               0x000118008094C9D8  RSL
L2C_COP0_MAP6460               0x000118008094C9E0  RSL
L2C_COP0_MAP6461               0x000118008094C9E8  RSL
L2C_COP0_MAP6462               0x000118008094C9F0  RSL
L2C_COP0_MAP6463               0x000118008094C9F8  RSL
L2C_COP0_MAP6464               0x000118008094CA00  RSL
L2C_COP0_MAP6465               0x000118008094CA08  RSL
L2C_COP0_MAP6466               0x000118008094CA10  RSL
L2C_COP0_MAP6467               0x000118008094CA18  RSL
L2C_COP0_MAP6468               0x000118008094CA20  RSL
L2C_COP0_MAP6469               0x000118008094CA28  RSL
L2C_COP0_MAP6470               0x000118008094CA30  RSL
L2C_COP0_MAP6471               0x000118008094CA38  RSL
L2C_COP0_MAP6472               0x000118008094CA40  RSL
L2C_COP0_MAP6473               0x000118008094CA48  RSL
L2C_COP0_MAP6474               0x000118008094CA50  RSL
L2C_COP0_MAP6475               0x000118008094CA58  RSL
L2C_COP0_MAP6476               0x000118008094CA60  RSL
L2C_COP0_MAP6477               0x000118008094CA68  RSL
L2C_COP0_MAP6478               0x000118008094CA70  RSL
L2C_COP0_MAP6479               0x000118008094CA78  RSL
L2C_COP0_MAP6480               0x000118008094CA80  RSL
L2C_COP0_MAP6481               0x000118008094CA88  RSL
L2C_COP0_MAP6482               0x000118008094CA90  RSL
L2C_COP0_MAP6483               0x000118008094CA98  RSL
L2C_COP0_MAP6484               0x000118008094CAA0  RSL
L2C_COP0_MAP6485               0x000118008094CAA8  RSL
L2C_COP0_MAP6486               0x000118008094CAB0  RSL
L2C_COP0_MAP6487               0x000118008094CAB8  RSL
L2C_COP0_MAP6488               0x000118008094CAC0  RSL
L2C_COP0_MAP6489               0x000118008094CAC8  RSL
L2C_COP0_MAP6490               0x000118008094CAD0  RSL
L2C_COP0_MAP6491               0x000118008094CAD8  RSL
L2C_COP0_MAP6492               0x000118008094CAE0  RSL
L2C_COP0_MAP6493               0x000118008094CAE8  RSL
L2C_COP0_MAP6494               0x000118008094CAF0  RSL
L2C_COP0_MAP6495               0x000118008094CAF8  RSL
L2C_COP0_MAP6496               0x000118008094CB00  RSL
L2C_COP0_MAP6497               0x000118008094CB08  RSL
L2C_COP0_MAP6498               0x000118008094CB10  RSL
L2C_COP0_MAP6499               0x000118008094CB18  RSL
L2C_COP0_MAP6500               0x000118008094CB20  RSL
L2C_COP0_MAP6501               0x000118008094CB28  RSL
L2C_COP0_MAP6502               0x000118008094CB30  RSL
L2C_COP0_MAP6503               0x000118008094CB38  RSL
L2C_COP0_MAP6504               0x000118008094CB40  RSL
L2C_COP0_MAP6505               0x000118008094CB48  RSL
L2C_COP0_MAP6506               0x000118008094CB50  RSL
L2C_COP0_MAP6507               0x000118008094CB58  RSL
L2C_COP0_MAP6508               0x000118008094CB60  RSL
L2C_COP0_MAP6509               0x000118008094CB68  RSL
L2C_COP0_MAP6510               0x000118008094CB70  RSL
L2C_COP0_MAP6511               0x000118008094CB78  RSL
L2C_COP0_MAP6512               0x000118008094CB80  RSL
L2C_COP0_MAP6513               0x000118008094CB88  RSL
L2C_COP0_MAP6514               0x000118008094CB90  RSL
L2C_COP0_MAP6515               0x000118008094CB98  RSL
L2C_COP0_MAP6516               0x000118008094CBA0  RSL
L2C_COP0_MAP6517               0x000118008094CBA8  RSL
L2C_COP0_MAP6518               0x000118008094CBB0  RSL
L2C_COP0_MAP6519               0x000118008094CBB8  RSL
L2C_COP0_MAP6520               0x000118008094CBC0  RSL
L2C_COP0_MAP6521               0x000118008094CBC8  RSL
L2C_COP0_MAP6522               0x000118008094CBD0  RSL
L2C_COP0_MAP6523               0x000118008094CBD8  RSL
L2C_COP0_MAP6524               0x000118008094CBE0  RSL
L2C_COP0_MAP6525               0x000118008094CBE8  RSL
L2C_COP0_MAP6526               0x000118008094CBF0  RSL
L2C_COP0_MAP6527               0x000118008094CBF8  RSL
L2C_COP0_MAP6528               0x000118008094CC00  RSL
L2C_COP0_MAP6529               0x000118008094CC08  RSL
L2C_COP0_MAP6530               0x000118008094CC10  RSL
L2C_COP0_MAP6531               0x000118008094CC18  RSL
L2C_COP0_MAP6532               0x000118008094CC20  RSL
L2C_COP0_MAP6533               0x000118008094CC28  RSL
L2C_COP0_MAP6534               0x000118008094CC30  RSL
L2C_COP0_MAP6535               0x000118008094CC38  RSL
L2C_COP0_MAP6536               0x000118008094CC40  RSL
L2C_COP0_MAP6537               0x000118008094CC48  RSL
L2C_COP0_MAP6538               0x000118008094CC50  RSL
L2C_COP0_MAP6539               0x000118008094CC58  RSL
L2C_COP0_MAP6540               0x000118008094CC60  RSL
L2C_COP0_MAP6541               0x000118008094CC68  RSL
L2C_COP0_MAP6542               0x000118008094CC70  RSL
L2C_COP0_MAP6543               0x000118008094CC78  RSL
L2C_COP0_MAP6544               0x000118008094CC80  RSL
L2C_COP0_MAP6545               0x000118008094CC88  RSL
L2C_COP0_MAP6546               0x000118008094CC90  RSL
L2C_COP0_MAP6547               0x000118008094CC98  RSL
L2C_COP0_MAP6548               0x000118008094CCA0  RSL
L2C_COP0_MAP6549               0x000118008094CCA8  RSL
L2C_COP0_MAP6550               0x000118008094CCB0  RSL
L2C_COP0_MAP6551               0x000118008094CCB8  RSL
L2C_COP0_MAP6552               0x000118008094CCC0  RSL
L2C_COP0_MAP6553               0x000118008094CCC8  RSL
L2C_COP0_MAP6554               0x000118008094CCD0  RSL
L2C_COP0_MAP6555               0x000118008094CCD8  RSL
L2C_COP0_MAP6556               0x000118008094CCE0  RSL
L2C_COP0_MAP6557               0x000118008094CCE8  RSL
L2C_COP0_MAP6558               0x000118008094CCF0  RSL
L2C_COP0_MAP6559               0x000118008094CCF8  RSL
L2C_COP0_MAP6560               0x000118008094CD00  RSL
L2C_COP0_MAP6561               0x000118008094CD08  RSL
L2C_COP0_MAP6562               0x000118008094CD10  RSL
L2C_COP0_MAP6563               0x000118008094CD18  RSL
L2C_COP0_MAP6564               0x000118008094CD20  RSL
L2C_COP0_MAP6565               0x000118008094CD28  RSL
L2C_COP0_MAP6566               0x000118008094CD30  RSL
L2C_COP0_MAP6567               0x000118008094CD38  RSL
L2C_COP0_MAP6568               0x000118008094CD40  RSL
L2C_COP0_MAP6569               0x000118008094CD48  RSL
L2C_COP0_MAP6570               0x000118008094CD50  RSL
L2C_COP0_MAP6571               0x000118008094CD58  RSL
L2C_COP0_MAP6572               0x000118008094CD60  RSL
L2C_COP0_MAP6573               0x000118008094CD68  RSL
L2C_COP0_MAP6574               0x000118008094CD70  RSL
L2C_COP0_MAP6575               0x000118008094CD78  RSL
L2C_COP0_MAP6576               0x000118008094CD80  RSL
L2C_COP0_MAP6577               0x000118008094CD88  RSL
L2C_COP0_MAP6578               0x000118008094CD90  RSL
L2C_COP0_MAP6579               0x000118008094CD98  RSL
L2C_COP0_MAP6580               0x000118008094CDA0  RSL
L2C_COP0_MAP6581               0x000118008094CDA8  RSL
L2C_COP0_MAP6582               0x000118008094CDB0  RSL
L2C_COP0_MAP6583               0x000118008094CDB8  RSL
L2C_COP0_MAP6584               0x000118008094CDC0  RSL
L2C_COP0_MAP6585               0x000118008094CDC8  RSL
L2C_COP0_MAP6586               0x000118008094CDD0  RSL
L2C_COP0_MAP6587               0x000118008094CDD8  RSL
L2C_COP0_MAP6588               0x000118008094CDE0  RSL
L2C_COP0_MAP6589               0x000118008094CDE8  RSL
L2C_COP0_MAP6590               0x000118008094CDF0  RSL
L2C_COP0_MAP6591               0x000118008094CDF8  RSL
L2C_COP0_MAP6592               0x000118008094CE00  RSL
L2C_COP0_MAP6593               0x000118008094CE08  RSL
L2C_COP0_MAP6594               0x000118008094CE10  RSL
L2C_COP0_MAP6595               0x000118008094CE18  RSL
L2C_COP0_MAP6596               0x000118008094CE20  RSL
L2C_COP0_MAP6597               0x000118008094CE28  RSL
L2C_COP0_MAP6598               0x000118008094CE30  RSL
L2C_COP0_MAP6599               0x000118008094CE38  RSL
L2C_COP0_MAP6600               0x000118008094CE40  RSL
L2C_COP0_MAP6601               0x000118008094CE48  RSL
L2C_COP0_MAP6602               0x000118008094CE50  RSL
L2C_COP0_MAP6603               0x000118008094CE58  RSL
L2C_COP0_MAP6604               0x000118008094CE60  RSL
L2C_COP0_MAP6605               0x000118008094CE68  RSL
L2C_COP0_MAP6606               0x000118008094CE70  RSL
L2C_COP0_MAP6607               0x000118008094CE78  RSL
L2C_COP0_MAP6608               0x000118008094CE80  RSL
L2C_COP0_MAP6609               0x000118008094CE88  RSL
L2C_COP0_MAP6610               0x000118008094CE90  RSL
L2C_COP0_MAP6611               0x000118008094CE98  RSL
L2C_COP0_MAP6612               0x000118008094CEA0  RSL
L2C_COP0_MAP6613               0x000118008094CEA8  RSL
L2C_COP0_MAP6614               0x000118008094CEB0  RSL
L2C_COP0_MAP6615               0x000118008094CEB8  RSL
L2C_COP0_MAP6616               0x000118008094CEC0  RSL
L2C_COP0_MAP6617               0x000118008094CEC8  RSL
L2C_COP0_MAP6618               0x000118008094CED0  RSL
L2C_COP0_MAP6619               0x000118008094CED8  RSL
L2C_COP0_MAP6620               0x000118008094CEE0  RSL
L2C_COP0_MAP6621               0x000118008094CEE8  RSL
L2C_COP0_MAP6622               0x000118008094CEF0  RSL
L2C_COP0_MAP6623               0x000118008094CEF8  RSL
L2C_COP0_MAP6624               0x000118008094CF00  RSL
L2C_COP0_MAP6625               0x000118008094CF08  RSL
L2C_COP0_MAP6626               0x000118008094CF10  RSL
L2C_COP0_MAP6627               0x000118008094CF18  RSL
L2C_COP0_MAP6628               0x000118008094CF20  RSL
L2C_COP0_MAP6629               0x000118008094CF28  RSL
L2C_COP0_MAP6630               0x000118008094CF30  RSL
L2C_COP0_MAP6631               0x000118008094CF38  RSL
L2C_COP0_MAP6632               0x000118008094CF40  RSL
L2C_COP0_MAP6633               0x000118008094CF48  RSL
L2C_COP0_MAP6634               0x000118008094CF50  RSL
L2C_COP0_MAP6635               0x000118008094CF58  RSL
L2C_COP0_MAP6636               0x000118008094CF60  RSL
L2C_COP0_MAP6637               0x000118008094CF68  RSL
L2C_COP0_MAP6638               0x000118008094CF70  RSL
L2C_COP0_MAP6639               0x000118008094CF78  RSL
L2C_COP0_MAP6640               0x000118008094CF80  RSL
L2C_COP0_MAP6641               0x000118008094CF88  RSL
L2C_COP0_MAP6642               0x000118008094CF90  RSL
L2C_COP0_MAP6643               0x000118008094CF98  RSL
L2C_COP0_MAP6644               0x000118008094CFA0  RSL
L2C_COP0_MAP6645               0x000118008094CFA8  RSL
L2C_COP0_MAP6646               0x000118008094CFB0  RSL
L2C_COP0_MAP6647               0x000118008094CFB8  RSL
L2C_COP0_MAP6648               0x000118008094CFC0  RSL
L2C_COP0_MAP6649               0x000118008094CFC8  RSL
L2C_COP0_MAP6650               0x000118008094CFD0  RSL
L2C_COP0_MAP6651               0x000118008094CFD8  RSL
L2C_COP0_MAP6652               0x000118008094CFE0  RSL
L2C_COP0_MAP6653               0x000118008094CFE8  RSL
L2C_COP0_MAP6654               0x000118008094CFF0  RSL
L2C_COP0_MAP6655               0x000118008094CFF8  RSL
L2C_COP0_MAP6656               0x000118008094D000  RSL
L2C_COP0_MAP6657               0x000118008094D008  RSL
L2C_COP0_MAP6658               0x000118008094D010  RSL
L2C_COP0_MAP6659               0x000118008094D018  RSL
L2C_COP0_MAP6660               0x000118008094D020  RSL
L2C_COP0_MAP6661               0x000118008094D028  RSL
L2C_COP0_MAP6662               0x000118008094D030  RSL
L2C_COP0_MAP6663               0x000118008094D038  RSL
L2C_COP0_MAP6664               0x000118008094D040  RSL
L2C_COP0_MAP6665               0x000118008094D048  RSL
L2C_COP0_MAP6666               0x000118008094D050  RSL
L2C_COP0_MAP6667               0x000118008094D058  RSL
L2C_COP0_MAP6668               0x000118008094D060  RSL
L2C_COP0_MAP6669               0x000118008094D068  RSL
L2C_COP0_MAP6670               0x000118008094D070  RSL
L2C_COP0_MAP6671               0x000118008094D078  RSL
L2C_COP0_MAP6672               0x000118008094D080  RSL
L2C_COP0_MAP6673               0x000118008094D088  RSL
L2C_COP0_MAP6674               0x000118008094D090  RSL
L2C_COP0_MAP6675               0x000118008094D098  RSL
L2C_COP0_MAP6676               0x000118008094D0A0  RSL
L2C_COP0_MAP6677               0x000118008094D0A8  RSL
L2C_COP0_MAP6678               0x000118008094D0B0  RSL
L2C_COP0_MAP6679               0x000118008094D0B8  RSL
L2C_COP0_MAP6680               0x000118008094D0C0  RSL
L2C_COP0_MAP6681               0x000118008094D0C8  RSL
L2C_COP0_MAP6682               0x000118008094D0D0  RSL
L2C_COP0_MAP6683               0x000118008094D0D8  RSL
L2C_COP0_MAP6684               0x000118008094D0E0  RSL
L2C_COP0_MAP6685               0x000118008094D0E8  RSL
L2C_COP0_MAP6686               0x000118008094D0F0  RSL
L2C_COP0_MAP6687               0x000118008094D0F8  RSL
L2C_COP0_MAP6688               0x000118008094D100  RSL
L2C_COP0_MAP6689               0x000118008094D108  RSL
L2C_COP0_MAP6690               0x000118008094D110  RSL
L2C_COP0_MAP6691               0x000118008094D118  RSL
L2C_COP0_MAP6692               0x000118008094D120  RSL
L2C_COP0_MAP6693               0x000118008094D128  RSL
L2C_COP0_MAP6694               0x000118008094D130  RSL
L2C_COP0_MAP6695               0x000118008094D138  RSL
L2C_COP0_MAP6696               0x000118008094D140  RSL
L2C_COP0_MAP6697               0x000118008094D148  RSL
L2C_COP0_MAP6698               0x000118008094D150  RSL
L2C_COP0_MAP6699               0x000118008094D158  RSL
L2C_COP0_MAP6700               0x000118008094D160  RSL
L2C_COP0_MAP6701               0x000118008094D168  RSL
L2C_COP0_MAP6702               0x000118008094D170  RSL
L2C_COP0_MAP6703               0x000118008094D178  RSL
L2C_COP0_MAP6704               0x000118008094D180  RSL
L2C_COP0_MAP6705               0x000118008094D188  RSL
L2C_COP0_MAP6706               0x000118008094D190  RSL
L2C_COP0_MAP6707               0x000118008094D198  RSL
L2C_COP0_MAP6708               0x000118008094D1A0  RSL
L2C_COP0_MAP6709               0x000118008094D1A8  RSL
L2C_COP0_MAP6710               0x000118008094D1B0  RSL
L2C_COP0_MAP6711               0x000118008094D1B8  RSL
L2C_COP0_MAP6712               0x000118008094D1C0  RSL
L2C_COP0_MAP6713               0x000118008094D1C8  RSL
L2C_COP0_MAP6714               0x000118008094D1D0  RSL
L2C_COP0_MAP6715               0x000118008094D1D8  RSL
L2C_COP0_MAP6716               0x000118008094D1E0  RSL
L2C_COP0_MAP6717               0x000118008094D1E8  RSL
L2C_COP0_MAP6718               0x000118008094D1F0  RSL
L2C_COP0_MAP6719               0x000118008094D1F8  RSL
L2C_COP0_MAP6720               0x000118008094D200  RSL
L2C_COP0_MAP6721               0x000118008094D208  RSL
L2C_COP0_MAP6722               0x000118008094D210  RSL
L2C_COP0_MAP6723               0x000118008094D218  RSL
L2C_COP0_MAP6724               0x000118008094D220  RSL
L2C_COP0_MAP6725               0x000118008094D228  RSL
L2C_COP0_MAP6726               0x000118008094D230  RSL
L2C_COP0_MAP6727               0x000118008094D238  RSL
L2C_COP0_MAP6728               0x000118008094D240  RSL
L2C_COP0_MAP6729               0x000118008094D248  RSL
L2C_COP0_MAP6730               0x000118008094D250  RSL
L2C_COP0_MAP6731               0x000118008094D258  RSL
L2C_COP0_MAP6732               0x000118008094D260  RSL
L2C_COP0_MAP6733               0x000118008094D268  RSL
L2C_COP0_MAP6734               0x000118008094D270  RSL
L2C_COP0_MAP6735               0x000118008094D278  RSL
L2C_COP0_MAP6736               0x000118008094D280  RSL
L2C_COP0_MAP6737               0x000118008094D288  RSL
L2C_COP0_MAP6738               0x000118008094D290  RSL
L2C_COP0_MAP6739               0x000118008094D298  RSL
L2C_COP0_MAP6740               0x000118008094D2A0  RSL
L2C_COP0_MAP6741               0x000118008094D2A8  RSL
L2C_COP0_MAP6742               0x000118008094D2B0  RSL
L2C_COP0_MAP6743               0x000118008094D2B8  RSL
L2C_COP0_MAP6744               0x000118008094D2C0  RSL
L2C_COP0_MAP6745               0x000118008094D2C8  RSL
L2C_COP0_MAP6746               0x000118008094D2D0  RSL
L2C_COP0_MAP6747               0x000118008094D2D8  RSL
L2C_COP0_MAP6748               0x000118008094D2E0  RSL
L2C_COP0_MAP6749               0x000118008094D2E8  RSL
L2C_COP0_MAP6750               0x000118008094D2F0  RSL
L2C_COP0_MAP6751               0x000118008094D2F8  RSL
L2C_COP0_MAP6752               0x000118008094D300  RSL
L2C_COP0_MAP6753               0x000118008094D308  RSL
L2C_COP0_MAP6754               0x000118008094D310  RSL
L2C_COP0_MAP6755               0x000118008094D318  RSL
L2C_COP0_MAP6756               0x000118008094D320  RSL
L2C_COP0_MAP6757               0x000118008094D328  RSL
L2C_COP0_MAP6758               0x000118008094D330  RSL
L2C_COP0_MAP6759               0x000118008094D338  RSL
L2C_COP0_MAP6760               0x000118008094D340  RSL
L2C_COP0_MAP6761               0x000118008094D348  RSL
L2C_COP0_MAP6762               0x000118008094D350  RSL
L2C_COP0_MAP6763               0x000118008094D358  RSL
L2C_COP0_MAP6764               0x000118008094D360  RSL
L2C_COP0_MAP6765               0x000118008094D368  RSL
L2C_COP0_MAP6766               0x000118008094D370  RSL
L2C_COP0_MAP6767               0x000118008094D378  RSL
L2C_COP0_MAP6768               0x000118008094D380  RSL
L2C_COP0_MAP6769               0x000118008094D388  RSL
L2C_COP0_MAP6770               0x000118008094D390  RSL
L2C_COP0_MAP6771               0x000118008094D398  RSL
L2C_COP0_MAP6772               0x000118008094D3A0  RSL
L2C_COP0_MAP6773               0x000118008094D3A8  RSL
L2C_COP0_MAP6774               0x000118008094D3B0  RSL
L2C_COP0_MAP6775               0x000118008094D3B8  RSL
L2C_COP0_MAP6776               0x000118008094D3C0  RSL
L2C_COP0_MAP6777               0x000118008094D3C8  RSL
L2C_COP0_MAP6778               0x000118008094D3D0  RSL
L2C_COP0_MAP6779               0x000118008094D3D8  RSL
L2C_COP0_MAP6780               0x000118008094D3E0  RSL
L2C_COP0_MAP6781               0x000118008094D3E8  RSL
L2C_COP0_MAP6782               0x000118008094D3F0  RSL
L2C_COP0_MAP6783               0x000118008094D3F8  RSL
L2C_COP0_MAP6784               0x000118008094D400  RSL
L2C_COP0_MAP6785               0x000118008094D408  RSL
L2C_COP0_MAP6786               0x000118008094D410  RSL
L2C_COP0_MAP6787               0x000118008094D418  RSL
L2C_COP0_MAP6788               0x000118008094D420  RSL
L2C_COP0_MAP6789               0x000118008094D428  RSL
L2C_COP0_MAP6790               0x000118008094D430  RSL
L2C_COP0_MAP6791               0x000118008094D438  RSL
L2C_COP0_MAP6792               0x000118008094D440  RSL
L2C_COP0_MAP6793               0x000118008094D448  RSL
L2C_COP0_MAP6794               0x000118008094D450  RSL
L2C_COP0_MAP6795               0x000118008094D458  RSL
L2C_COP0_MAP6796               0x000118008094D460  RSL
L2C_COP0_MAP6797               0x000118008094D468  RSL
L2C_COP0_MAP6798               0x000118008094D470  RSL
L2C_COP0_MAP6799               0x000118008094D478  RSL
L2C_COP0_MAP6800               0x000118008094D480  RSL
L2C_COP0_MAP6801               0x000118008094D488  RSL
L2C_COP0_MAP6802               0x000118008094D490  RSL
L2C_COP0_MAP6803               0x000118008094D498  RSL
L2C_COP0_MAP6804               0x000118008094D4A0  RSL
L2C_COP0_MAP6805               0x000118008094D4A8  RSL
L2C_COP0_MAP6806               0x000118008094D4B0  RSL
L2C_COP0_MAP6807               0x000118008094D4B8  RSL
L2C_COP0_MAP6808               0x000118008094D4C0  RSL
L2C_COP0_MAP6809               0x000118008094D4C8  RSL
L2C_COP0_MAP6810               0x000118008094D4D0  RSL
L2C_COP0_MAP6811               0x000118008094D4D8  RSL
L2C_COP0_MAP6812               0x000118008094D4E0  RSL
L2C_COP0_MAP6813               0x000118008094D4E8  RSL
L2C_COP0_MAP6814               0x000118008094D4F0  RSL
L2C_COP0_MAP6815               0x000118008094D4F8  RSL
L2C_COP0_MAP6816               0x000118008094D500  RSL
L2C_COP0_MAP6817               0x000118008094D508  RSL
L2C_COP0_MAP6818               0x000118008094D510  RSL
L2C_COP0_MAP6819               0x000118008094D518  RSL
L2C_COP0_MAP6820               0x000118008094D520  RSL
L2C_COP0_MAP6821               0x000118008094D528  RSL
L2C_COP0_MAP6822               0x000118008094D530  RSL
L2C_COP0_MAP6823               0x000118008094D538  RSL
L2C_COP0_MAP6824               0x000118008094D540  RSL
L2C_COP0_MAP6825               0x000118008094D548  RSL
L2C_COP0_MAP6826               0x000118008094D550  RSL
L2C_COP0_MAP6827               0x000118008094D558  RSL
L2C_COP0_MAP6828               0x000118008094D560  RSL
L2C_COP0_MAP6829               0x000118008094D568  RSL
L2C_COP0_MAP6830               0x000118008094D570  RSL
L2C_COP0_MAP6831               0x000118008094D578  RSL
L2C_COP0_MAP6832               0x000118008094D580  RSL
L2C_COP0_MAP6833               0x000118008094D588  RSL
L2C_COP0_MAP6834               0x000118008094D590  RSL
L2C_COP0_MAP6835               0x000118008094D598  RSL
L2C_COP0_MAP6836               0x000118008094D5A0  RSL
L2C_COP0_MAP6837               0x000118008094D5A8  RSL
L2C_COP0_MAP6838               0x000118008094D5B0  RSL
L2C_COP0_MAP6839               0x000118008094D5B8  RSL
L2C_COP0_MAP6840               0x000118008094D5C0  RSL
L2C_COP0_MAP6841               0x000118008094D5C8  RSL
L2C_COP0_MAP6842               0x000118008094D5D0  RSL
L2C_COP0_MAP6843               0x000118008094D5D8  RSL
L2C_COP0_MAP6844               0x000118008094D5E0  RSL
L2C_COP0_MAP6845               0x000118008094D5E8  RSL
L2C_COP0_MAP6846               0x000118008094D5F0  RSL
L2C_COP0_MAP6847               0x000118008094D5F8  RSL
L2C_COP0_MAP6848               0x000118008094D600  RSL
L2C_COP0_MAP6849               0x000118008094D608  RSL
L2C_COP0_MAP6850               0x000118008094D610  RSL
L2C_COP0_MAP6851               0x000118008094D618  RSL
L2C_COP0_MAP6852               0x000118008094D620  RSL
L2C_COP0_MAP6853               0x000118008094D628  RSL
L2C_COP0_MAP6854               0x000118008094D630  RSL
L2C_COP0_MAP6855               0x000118008094D638  RSL
L2C_COP0_MAP6856               0x000118008094D640  RSL
L2C_COP0_MAP6857               0x000118008094D648  RSL
L2C_COP0_MAP6858               0x000118008094D650  RSL
L2C_COP0_MAP6859               0x000118008094D658  RSL
L2C_COP0_MAP6860               0x000118008094D660  RSL
L2C_COP0_MAP6861               0x000118008094D668  RSL
L2C_COP0_MAP6862               0x000118008094D670  RSL
L2C_COP0_MAP6863               0x000118008094D678  RSL
L2C_COP0_MAP6864               0x000118008094D680  RSL
L2C_COP0_MAP6865               0x000118008094D688  RSL
L2C_COP0_MAP6866               0x000118008094D690  RSL
L2C_COP0_MAP6867               0x000118008094D698  RSL
L2C_COP0_MAP6868               0x000118008094D6A0  RSL
L2C_COP0_MAP6869               0x000118008094D6A8  RSL
L2C_COP0_MAP6870               0x000118008094D6B0  RSL
L2C_COP0_MAP6871               0x000118008094D6B8  RSL
L2C_COP0_MAP6872               0x000118008094D6C0  RSL
L2C_COP0_MAP6873               0x000118008094D6C8  RSL
L2C_COP0_MAP6874               0x000118008094D6D0  RSL
L2C_COP0_MAP6875               0x000118008094D6D8  RSL
L2C_COP0_MAP6876               0x000118008094D6E0  RSL
L2C_COP0_MAP6877               0x000118008094D6E8  RSL
L2C_COP0_MAP6878               0x000118008094D6F0  RSL
L2C_COP0_MAP6879               0x000118008094D6F8  RSL
L2C_COP0_MAP6880               0x000118008094D700  RSL
L2C_COP0_MAP6881               0x000118008094D708  RSL
L2C_COP0_MAP6882               0x000118008094D710  RSL
L2C_COP0_MAP6883               0x000118008094D718  RSL
L2C_COP0_MAP6884               0x000118008094D720  RSL
L2C_COP0_MAP6885               0x000118008094D728  RSL
L2C_COP0_MAP6886               0x000118008094D730  RSL
L2C_COP0_MAP6887               0x000118008094D738  RSL
L2C_COP0_MAP6888               0x000118008094D740  RSL
L2C_COP0_MAP6889               0x000118008094D748  RSL
L2C_COP0_MAP6890               0x000118008094D750  RSL
L2C_COP0_MAP6891               0x000118008094D758  RSL
L2C_COP0_MAP6892               0x000118008094D760  RSL
L2C_COP0_MAP6893               0x000118008094D768  RSL
L2C_COP0_MAP6894               0x000118008094D770  RSL
L2C_COP0_MAP6895               0x000118008094D778  RSL
L2C_COP0_MAP6896               0x000118008094D780  RSL
L2C_COP0_MAP6897               0x000118008094D788  RSL
L2C_COP0_MAP6898               0x000118008094D790  RSL
L2C_COP0_MAP6899               0x000118008094D798  RSL
L2C_COP0_MAP6900               0x000118008094D7A0  RSL
L2C_COP0_MAP6901               0x000118008094D7A8  RSL
L2C_COP0_MAP6902               0x000118008094D7B0  RSL
L2C_COP0_MAP6903               0x000118008094D7B8  RSL
L2C_COP0_MAP6904               0x000118008094D7C0  RSL
L2C_COP0_MAP6905               0x000118008094D7C8  RSL
L2C_COP0_MAP6906               0x000118008094D7D0  RSL
L2C_COP0_MAP6907               0x000118008094D7D8  RSL
L2C_COP0_MAP6908               0x000118008094D7E0  RSL
L2C_COP0_MAP6909               0x000118008094D7E8  RSL
L2C_COP0_MAP6910               0x000118008094D7F0  RSL
L2C_COP0_MAP6911               0x000118008094D7F8  RSL
L2C_COP0_MAP6912               0x000118008094D800  RSL
L2C_COP0_MAP6913               0x000118008094D808  RSL
L2C_COP0_MAP6914               0x000118008094D810  RSL
L2C_COP0_MAP6915               0x000118008094D818  RSL
L2C_COP0_MAP6916               0x000118008094D820  RSL
L2C_COP0_MAP6917               0x000118008094D828  RSL
L2C_COP0_MAP6918               0x000118008094D830  RSL
L2C_COP0_MAP6919               0x000118008094D838  RSL
L2C_COP0_MAP6920               0x000118008094D840  RSL
L2C_COP0_MAP6921               0x000118008094D848  RSL
L2C_COP0_MAP6922               0x000118008094D850  RSL
L2C_COP0_MAP6923               0x000118008094D858  RSL
L2C_COP0_MAP6924               0x000118008094D860  RSL
L2C_COP0_MAP6925               0x000118008094D868  RSL
L2C_COP0_MAP6926               0x000118008094D870  RSL
L2C_COP0_MAP6927               0x000118008094D878  RSL
L2C_COP0_MAP6928               0x000118008094D880  RSL
L2C_COP0_MAP6929               0x000118008094D888  RSL
L2C_COP0_MAP6930               0x000118008094D890  RSL
L2C_COP0_MAP6931               0x000118008094D898  RSL
L2C_COP0_MAP6932               0x000118008094D8A0  RSL
L2C_COP0_MAP6933               0x000118008094D8A8  RSL
L2C_COP0_MAP6934               0x000118008094D8B0  RSL
L2C_COP0_MAP6935               0x000118008094D8B8  RSL
L2C_COP0_MAP6936               0x000118008094D8C0  RSL
L2C_COP0_MAP6937               0x000118008094D8C8  RSL
L2C_COP0_MAP6938               0x000118008094D8D0  RSL
L2C_COP0_MAP6939               0x000118008094D8D8  RSL
L2C_COP0_MAP6940               0x000118008094D8E0  RSL
L2C_COP0_MAP6941               0x000118008094D8E8  RSL
L2C_COP0_MAP6942               0x000118008094D8F0  RSL
L2C_COP0_MAP6943               0x000118008094D8F8  RSL
L2C_COP0_MAP6944               0x000118008094D900  RSL
L2C_COP0_MAP6945               0x000118008094D908  RSL
L2C_COP0_MAP6946               0x000118008094D910  RSL
L2C_COP0_MAP6947               0x000118008094D918  RSL
L2C_COP0_MAP6948               0x000118008094D920  RSL
L2C_COP0_MAP6949               0x000118008094D928  RSL
L2C_COP0_MAP6950               0x000118008094D930  RSL
L2C_COP0_MAP6951               0x000118008094D938  RSL
L2C_COP0_MAP6952               0x000118008094D940  RSL
L2C_COP0_MAP6953               0x000118008094D948  RSL
L2C_COP0_MAP6954               0x000118008094D950  RSL
L2C_COP0_MAP6955               0x000118008094D958  RSL
L2C_COP0_MAP6956               0x000118008094D960  RSL
L2C_COP0_MAP6957               0x000118008094D968  RSL
L2C_COP0_MAP6958               0x000118008094D970  RSL
L2C_COP0_MAP6959               0x000118008094D978  RSL
L2C_COP0_MAP6960               0x000118008094D980  RSL
L2C_COP0_MAP6961               0x000118008094D988  RSL
L2C_COP0_MAP6962               0x000118008094D990  RSL
L2C_COP0_MAP6963               0x000118008094D998  RSL
L2C_COP0_MAP6964               0x000118008094D9A0  RSL
L2C_COP0_MAP6965               0x000118008094D9A8  RSL
L2C_COP0_MAP6966               0x000118008094D9B0  RSL
L2C_COP0_MAP6967               0x000118008094D9B8  RSL
L2C_COP0_MAP6968               0x000118008094D9C0  RSL
L2C_COP0_MAP6969               0x000118008094D9C8  RSL
L2C_COP0_MAP6970               0x000118008094D9D0  RSL
L2C_COP0_MAP6971               0x000118008094D9D8  RSL
L2C_COP0_MAP6972               0x000118008094D9E0  RSL
L2C_COP0_MAP6973               0x000118008094D9E8  RSL
L2C_COP0_MAP6974               0x000118008094D9F0  RSL
L2C_COP0_MAP6975               0x000118008094D9F8  RSL
L2C_COP0_MAP6976               0x000118008094DA00  RSL
L2C_COP0_MAP6977               0x000118008094DA08  RSL
L2C_COP0_MAP6978               0x000118008094DA10  RSL
L2C_COP0_MAP6979               0x000118008094DA18  RSL
L2C_COP0_MAP6980               0x000118008094DA20  RSL
L2C_COP0_MAP6981               0x000118008094DA28  RSL
L2C_COP0_MAP6982               0x000118008094DA30  RSL
L2C_COP0_MAP6983               0x000118008094DA38  RSL
L2C_COP0_MAP6984               0x000118008094DA40  RSL
L2C_COP0_MAP6985               0x000118008094DA48  RSL
L2C_COP0_MAP6986               0x000118008094DA50  RSL
L2C_COP0_MAP6987               0x000118008094DA58  RSL
L2C_COP0_MAP6988               0x000118008094DA60  RSL
L2C_COP0_MAP6989               0x000118008094DA68  RSL
L2C_COP0_MAP6990               0x000118008094DA70  RSL
L2C_COP0_MAP6991               0x000118008094DA78  RSL
L2C_COP0_MAP6992               0x000118008094DA80  RSL
L2C_COP0_MAP6993               0x000118008094DA88  RSL
L2C_COP0_MAP6994               0x000118008094DA90  RSL
L2C_COP0_MAP6995               0x000118008094DA98  RSL
L2C_COP0_MAP6996               0x000118008094DAA0  RSL
L2C_COP0_MAP6997               0x000118008094DAA8  RSL
L2C_COP0_MAP6998               0x000118008094DAB0  RSL
L2C_COP0_MAP6999               0x000118008094DAB8  RSL
L2C_COP0_MAP7000               0x000118008094DAC0  RSL
L2C_COP0_MAP7001               0x000118008094DAC8  RSL
L2C_COP0_MAP7002               0x000118008094DAD0  RSL
L2C_COP0_MAP7003               0x000118008094DAD8  RSL
L2C_COP0_MAP7004               0x000118008094DAE0  RSL
L2C_COP0_MAP7005               0x000118008094DAE8  RSL
L2C_COP0_MAP7006               0x000118008094DAF0  RSL
L2C_COP0_MAP7007               0x000118008094DAF8  RSL
L2C_COP0_MAP7008               0x000118008094DB00  RSL
L2C_COP0_MAP7009               0x000118008094DB08  RSL
L2C_COP0_MAP7010               0x000118008094DB10  RSL
L2C_COP0_MAP7011               0x000118008094DB18  RSL
L2C_COP0_MAP7012               0x000118008094DB20  RSL
L2C_COP0_MAP7013               0x000118008094DB28  RSL
L2C_COP0_MAP7014               0x000118008094DB30  RSL
L2C_COP0_MAP7015               0x000118008094DB38  RSL
L2C_COP0_MAP7016               0x000118008094DB40  RSL
L2C_COP0_MAP7017               0x000118008094DB48  RSL
L2C_COP0_MAP7018               0x000118008094DB50  RSL
L2C_COP0_MAP7019               0x000118008094DB58  RSL
L2C_COP0_MAP7020               0x000118008094DB60  RSL
L2C_COP0_MAP7021               0x000118008094DB68  RSL
L2C_COP0_MAP7022               0x000118008094DB70  RSL
L2C_COP0_MAP7023               0x000118008094DB78  RSL
L2C_COP0_MAP7024               0x000118008094DB80  RSL
L2C_COP0_MAP7025               0x000118008094DB88  RSL
L2C_COP0_MAP7026               0x000118008094DB90  RSL
L2C_COP0_MAP7027               0x000118008094DB98  RSL
L2C_COP0_MAP7028               0x000118008094DBA0  RSL
L2C_COP0_MAP7029               0x000118008094DBA8  RSL
L2C_COP0_MAP7030               0x000118008094DBB0  RSL
L2C_COP0_MAP7031               0x000118008094DBB8  RSL
L2C_COP0_MAP7032               0x000118008094DBC0  RSL
L2C_COP0_MAP7033               0x000118008094DBC8  RSL
L2C_COP0_MAP7034               0x000118008094DBD0  RSL
L2C_COP0_MAP7035               0x000118008094DBD8  RSL
L2C_COP0_MAP7036               0x000118008094DBE0  RSL
L2C_COP0_MAP7037               0x000118008094DBE8  RSL
L2C_COP0_MAP7038               0x000118008094DBF0  RSL
L2C_COP0_MAP7039               0x000118008094DBF8  RSL
L2C_COP0_MAP7040               0x000118008094DC00  RSL
L2C_COP0_MAP7041               0x000118008094DC08  RSL
L2C_COP0_MAP7042               0x000118008094DC10  RSL
L2C_COP0_MAP7043               0x000118008094DC18  RSL
L2C_COP0_MAP7044               0x000118008094DC20  RSL
L2C_COP0_MAP7045               0x000118008094DC28  RSL
L2C_COP0_MAP7046               0x000118008094DC30  RSL
L2C_COP0_MAP7047               0x000118008094DC38  RSL
L2C_COP0_MAP7048               0x000118008094DC40  RSL
L2C_COP0_MAP7049               0x000118008094DC48  RSL
L2C_COP0_MAP7050               0x000118008094DC50  RSL
L2C_COP0_MAP7051               0x000118008094DC58  RSL
L2C_COP0_MAP7052               0x000118008094DC60  RSL
L2C_COP0_MAP7053               0x000118008094DC68  RSL
L2C_COP0_MAP7054               0x000118008094DC70  RSL
L2C_COP0_MAP7055               0x000118008094DC78  RSL
L2C_COP0_MAP7056               0x000118008094DC80  RSL
L2C_COP0_MAP7057               0x000118008094DC88  RSL
L2C_COP0_MAP7058               0x000118008094DC90  RSL
L2C_COP0_MAP7059               0x000118008094DC98  RSL
L2C_COP0_MAP7060               0x000118008094DCA0  RSL
L2C_COP0_MAP7061               0x000118008094DCA8  RSL
L2C_COP0_MAP7062               0x000118008094DCB0  RSL
L2C_COP0_MAP7063               0x000118008094DCB8  RSL
L2C_COP0_MAP7064               0x000118008094DCC0  RSL
L2C_COP0_MAP7065               0x000118008094DCC8  RSL
L2C_COP0_MAP7066               0x000118008094DCD0  RSL
L2C_COP0_MAP7067               0x000118008094DCD8  RSL
L2C_COP0_MAP7068               0x000118008094DCE0  RSL
L2C_COP0_MAP7069               0x000118008094DCE8  RSL
L2C_COP0_MAP7070               0x000118008094DCF0  RSL
L2C_COP0_MAP7071               0x000118008094DCF8  RSL
L2C_COP0_MAP7072               0x000118008094DD00  RSL
L2C_COP0_MAP7073               0x000118008094DD08  RSL
L2C_COP0_MAP7074               0x000118008094DD10  RSL
L2C_COP0_MAP7075               0x000118008094DD18  RSL
L2C_COP0_MAP7076               0x000118008094DD20  RSL
L2C_COP0_MAP7077               0x000118008094DD28  RSL
L2C_COP0_MAP7078               0x000118008094DD30  RSL
L2C_COP0_MAP7079               0x000118008094DD38  RSL
L2C_COP0_MAP7080               0x000118008094DD40  RSL
L2C_COP0_MAP7081               0x000118008094DD48  RSL
L2C_COP0_MAP7082               0x000118008094DD50  RSL
L2C_COP0_MAP7083               0x000118008094DD58  RSL
L2C_COP0_MAP7084               0x000118008094DD60  RSL
L2C_COP0_MAP7085               0x000118008094DD68  RSL
L2C_COP0_MAP7086               0x000118008094DD70  RSL
L2C_COP0_MAP7087               0x000118008094DD78  RSL
L2C_COP0_MAP7088               0x000118008094DD80  RSL
L2C_COP0_MAP7089               0x000118008094DD88  RSL
L2C_COP0_MAP7090               0x000118008094DD90  RSL
L2C_COP0_MAP7091               0x000118008094DD98  RSL
L2C_COP0_MAP7092               0x000118008094DDA0  RSL
L2C_COP0_MAP7093               0x000118008094DDA8  RSL
L2C_COP0_MAP7094               0x000118008094DDB0  RSL
L2C_COP0_MAP7095               0x000118008094DDB8  RSL
L2C_COP0_MAP7096               0x000118008094DDC0  RSL
L2C_COP0_MAP7097               0x000118008094DDC8  RSL
L2C_COP0_MAP7098               0x000118008094DDD0  RSL
L2C_COP0_MAP7099               0x000118008094DDD8  RSL
L2C_COP0_MAP7100               0x000118008094DDE0  RSL
L2C_COP0_MAP7101               0x000118008094DDE8  RSL
L2C_COP0_MAP7102               0x000118008094DDF0  RSL
L2C_COP0_MAP7103               0x000118008094DDF8  RSL
L2C_COP0_MAP7104               0x000118008094DE00  RSL
L2C_COP0_MAP7105               0x000118008094DE08  RSL
L2C_COP0_MAP7106               0x000118008094DE10  RSL
L2C_COP0_MAP7107               0x000118008094DE18  RSL
L2C_COP0_MAP7108               0x000118008094DE20  RSL
L2C_COP0_MAP7109               0x000118008094DE28  RSL
L2C_COP0_MAP7110               0x000118008094DE30  RSL
L2C_COP0_MAP7111               0x000118008094DE38  RSL
L2C_COP0_MAP7112               0x000118008094DE40  RSL
L2C_COP0_MAP7113               0x000118008094DE48  RSL
L2C_COP0_MAP7114               0x000118008094DE50  RSL
L2C_COP0_MAP7115               0x000118008094DE58  RSL
L2C_COP0_MAP7116               0x000118008094DE60  RSL
L2C_COP0_MAP7117               0x000118008094DE68  RSL
L2C_COP0_MAP7118               0x000118008094DE70  RSL
L2C_COP0_MAP7119               0x000118008094DE78  RSL
L2C_COP0_MAP7120               0x000118008094DE80  RSL
L2C_COP0_MAP7121               0x000118008094DE88  RSL
L2C_COP0_MAP7122               0x000118008094DE90  RSL
L2C_COP0_MAP7123               0x000118008094DE98  RSL
L2C_COP0_MAP7124               0x000118008094DEA0  RSL
L2C_COP0_MAP7125               0x000118008094DEA8  RSL
L2C_COP0_MAP7126               0x000118008094DEB0  RSL
L2C_COP0_MAP7127               0x000118008094DEB8  RSL
L2C_COP0_MAP7128               0x000118008094DEC0  RSL
L2C_COP0_MAP7129               0x000118008094DEC8  RSL
L2C_COP0_MAP7130               0x000118008094DED0  RSL
L2C_COP0_MAP7131               0x000118008094DED8  RSL
L2C_COP0_MAP7132               0x000118008094DEE0  RSL
L2C_COP0_MAP7133               0x000118008094DEE8  RSL
L2C_COP0_MAP7134               0x000118008094DEF0  RSL
L2C_COP0_MAP7135               0x000118008094DEF8  RSL
L2C_COP0_MAP7136               0x000118008094DF00  RSL
L2C_COP0_MAP7137               0x000118008094DF08  RSL
L2C_COP0_MAP7138               0x000118008094DF10  RSL
L2C_COP0_MAP7139               0x000118008094DF18  RSL
L2C_COP0_MAP7140               0x000118008094DF20  RSL
L2C_COP0_MAP7141               0x000118008094DF28  RSL
L2C_COP0_MAP7142               0x000118008094DF30  RSL
L2C_COP0_MAP7143               0x000118008094DF38  RSL
L2C_COP0_MAP7144               0x000118008094DF40  RSL
L2C_COP0_MAP7145               0x000118008094DF48  RSL
L2C_COP0_MAP7146               0x000118008094DF50  RSL
L2C_COP0_MAP7147               0x000118008094DF58  RSL
L2C_COP0_MAP7148               0x000118008094DF60  RSL
L2C_COP0_MAP7149               0x000118008094DF68  RSL
L2C_COP0_MAP7150               0x000118008094DF70  RSL
L2C_COP0_MAP7151               0x000118008094DF78  RSL
L2C_COP0_MAP7152               0x000118008094DF80  RSL
L2C_COP0_MAP7153               0x000118008094DF88  RSL
L2C_COP0_MAP7154               0x000118008094DF90  RSL
L2C_COP0_MAP7155               0x000118008094DF98  RSL
L2C_COP0_MAP7156               0x000118008094DFA0  RSL
L2C_COP0_MAP7157               0x000118008094DFA8  RSL
L2C_COP0_MAP7158               0x000118008094DFB0  RSL
L2C_COP0_MAP7159               0x000118008094DFB8  RSL
L2C_COP0_MAP7160               0x000118008094DFC0  RSL
L2C_COP0_MAP7161               0x000118008094DFC8  RSL
L2C_COP0_MAP7162               0x000118008094DFD0  RSL
L2C_COP0_MAP7163               0x000118008094DFD8  RSL
L2C_COP0_MAP7164               0x000118008094DFE0  RSL
L2C_COP0_MAP7165               0x000118008094DFE8  RSL
L2C_COP0_MAP7166               0x000118008094DFF0  RSL
L2C_COP0_MAP7167               0x000118008094DFF8  RSL
L2C_COP0_MAP7168               0x000118008094E000  RSL
L2C_COP0_MAP7169               0x000118008094E008  RSL
L2C_COP0_MAP7170               0x000118008094E010  RSL
L2C_COP0_MAP7171               0x000118008094E018  RSL
L2C_COP0_MAP7172               0x000118008094E020  RSL
L2C_COP0_MAP7173               0x000118008094E028  RSL
L2C_COP0_MAP7174               0x000118008094E030  RSL
L2C_COP0_MAP7175               0x000118008094E038  RSL
L2C_COP0_MAP7176               0x000118008094E040  RSL
L2C_COP0_MAP7177               0x000118008094E048  RSL
L2C_COP0_MAP7178               0x000118008094E050  RSL
L2C_COP0_MAP7179               0x000118008094E058  RSL
L2C_COP0_MAP7180               0x000118008094E060  RSL
L2C_COP0_MAP7181               0x000118008094E068  RSL
L2C_COP0_MAP7182               0x000118008094E070  RSL
L2C_COP0_MAP7183               0x000118008094E078  RSL
L2C_COP0_MAP7184               0x000118008094E080  RSL
L2C_COP0_MAP7185               0x000118008094E088  RSL
L2C_COP0_MAP7186               0x000118008094E090  RSL
L2C_COP0_MAP7187               0x000118008094E098  RSL
L2C_COP0_MAP7188               0x000118008094E0A0  RSL
L2C_COP0_MAP7189               0x000118008094E0A8  RSL
L2C_COP0_MAP7190               0x000118008094E0B0  RSL
L2C_COP0_MAP7191               0x000118008094E0B8  RSL
L2C_COP0_MAP7192               0x000118008094E0C0  RSL
L2C_COP0_MAP7193               0x000118008094E0C8  RSL
L2C_COP0_MAP7194               0x000118008094E0D0  RSL
L2C_COP0_MAP7195               0x000118008094E0D8  RSL
L2C_COP0_MAP7196               0x000118008094E0E0  RSL
L2C_COP0_MAP7197               0x000118008094E0E8  RSL
L2C_COP0_MAP7198               0x000118008094E0F0  RSL
L2C_COP0_MAP7199               0x000118008094E0F8  RSL
L2C_COP0_MAP7200               0x000118008094E100  RSL
L2C_COP0_MAP7201               0x000118008094E108  RSL
L2C_COP0_MAP7202               0x000118008094E110  RSL
L2C_COP0_MAP7203               0x000118008094E118  RSL
L2C_COP0_MAP7204               0x000118008094E120  RSL
L2C_COP0_MAP7205               0x000118008094E128  RSL
L2C_COP0_MAP7206               0x000118008094E130  RSL
L2C_COP0_MAP7207               0x000118008094E138  RSL
L2C_COP0_MAP7208               0x000118008094E140  RSL
L2C_COP0_MAP7209               0x000118008094E148  RSL
L2C_COP0_MAP7210               0x000118008094E150  RSL
L2C_COP0_MAP7211               0x000118008094E158  RSL
L2C_COP0_MAP7212               0x000118008094E160  RSL
L2C_COP0_MAP7213               0x000118008094E168  RSL
L2C_COP0_MAP7214               0x000118008094E170  RSL
L2C_COP0_MAP7215               0x000118008094E178  RSL
L2C_COP0_MAP7216               0x000118008094E180  RSL
L2C_COP0_MAP7217               0x000118008094E188  RSL
L2C_COP0_MAP7218               0x000118008094E190  RSL
L2C_COP0_MAP7219               0x000118008094E198  RSL
L2C_COP0_MAP7220               0x000118008094E1A0  RSL
L2C_COP0_MAP7221               0x000118008094E1A8  RSL
L2C_COP0_MAP7222               0x000118008094E1B0  RSL
L2C_COP0_MAP7223               0x000118008094E1B8  RSL
L2C_COP0_MAP7224               0x000118008094E1C0  RSL
L2C_COP0_MAP7225               0x000118008094E1C8  RSL
L2C_COP0_MAP7226               0x000118008094E1D0  RSL
L2C_COP0_MAP7227               0x000118008094E1D8  RSL
L2C_COP0_MAP7228               0x000118008094E1E0  RSL
L2C_COP0_MAP7229               0x000118008094E1E8  RSL
L2C_COP0_MAP7230               0x000118008094E1F0  RSL
L2C_COP0_MAP7231               0x000118008094E1F8  RSL
L2C_COP0_MAP7232               0x000118008094E200  RSL
L2C_COP0_MAP7233               0x000118008094E208  RSL
L2C_COP0_MAP7234               0x000118008094E210  RSL
L2C_COP0_MAP7235               0x000118008094E218  RSL
L2C_COP0_MAP7236               0x000118008094E220  RSL
L2C_COP0_MAP7237               0x000118008094E228  RSL
L2C_COP0_MAP7238               0x000118008094E230  RSL
L2C_COP0_MAP7239               0x000118008094E238  RSL
L2C_COP0_MAP7240               0x000118008094E240  RSL
L2C_COP0_MAP7241               0x000118008094E248  RSL
L2C_COP0_MAP7242               0x000118008094E250  RSL
L2C_COP0_MAP7243               0x000118008094E258  RSL
L2C_COP0_MAP7244               0x000118008094E260  RSL
L2C_COP0_MAP7245               0x000118008094E268  RSL
L2C_COP0_MAP7246               0x000118008094E270  RSL
L2C_COP0_MAP7247               0x000118008094E278  RSL
L2C_COP0_MAP7248               0x000118008094E280  RSL
L2C_COP0_MAP7249               0x000118008094E288  RSL
L2C_COP0_MAP7250               0x000118008094E290  RSL
L2C_COP0_MAP7251               0x000118008094E298  RSL
L2C_COP0_MAP7252               0x000118008094E2A0  RSL
L2C_COP0_MAP7253               0x000118008094E2A8  RSL
L2C_COP0_MAP7254               0x000118008094E2B0  RSL
L2C_COP0_MAP7255               0x000118008094E2B8  RSL
L2C_COP0_MAP7256               0x000118008094E2C0  RSL
L2C_COP0_MAP7257               0x000118008094E2C8  RSL
L2C_COP0_MAP7258               0x000118008094E2D0  RSL
L2C_COP0_MAP7259               0x000118008094E2D8  RSL
L2C_COP0_MAP7260               0x000118008094E2E0  RSL
L2C_COP0_MAP7261               0x000118008094E2E8  RSL
L2C_COP0_MAP7262               0x000118008094E2F0  RSL
L2C_COP0_MAP7263               0x000118008094E2F8  RSL
L2C_COP0_MAP7264               0x000118008094E300  RSL
L2C_COP0_MAP7265               0x000118008094E308  RSL
L2C_COP0_MAP7266               0x000118008094E310  RSL
L2C_COP0_MAP7267               0x000118008094E318  RSL
L2C_COP0_MAP7268               0x000118008094E320  RSL
L2C_COP0_MAP7269               0x000118008094E328  RSL
L2C_COP0_MAP7270               0x000118008094E330  RSL
L2C_COP0_MAP7271               0x000118008094E338  RSL
L2C_COP0_MAP7272               0x000118008094E340  RSL
L2C_COP0_MAP7273               0x000118008094E348  RSL
L2C_COP0_MAP7274               0x000118008094E350  RSL
L2C_COP0_MAP7275               0x000118008094E358  RSL
L2C_COP0_MAP7276               0x000118008094E360  RSL
L2C_COP0_MAP7277               0x000118008094E368  RSL
L2C_COP0_MAP7278               0x000118008094E370  RSL
L2C_COP0_MAP7279               0x000118008094E378  RSL
L2C_COP0_MAP7280               0x000118008094E380  RSL
L2C_COP0_MAP7281               0x000118008094E388  RSL
L2C_COP0_MAP7282               0x000118008094E390  RSL
L2C_COP0_MAP7283               0x000118008094E398  RSL
L2C_COP0_MAP7284               0x000118008094E3A0  RSL
L2C_COP0_MAP7285               0x000118008094E3A8  RSL
L2C_COP0_MAP7286               0x000118008094E3B0  RSL
L2C_COP0_MAP7287               0x000118008094E3B8  RSL
L2C_COP0_MAP7288               0x000118008094E3C0  RSL
L2C_COP0_MAP7289               0x000118008094E3C8  RSL
L2C_COP0_MAP7290               0x000118008094E3D0  RSL
L2C_COP0_MAP7291               0x000118008094E3D8  RSL
L2C_COP0_MAP7292               0x000118008094E3E0  RSL
L2C_COP0_MAP7293               0x000118008094E3E8  RSL
L2C_COP0_MAP7294               0x000118008094E3F0  RSL
L2C_COP0_MAP7295               0x000118008094E3F8  RSL
L2C_COP0_MAP7296               0x000118008094E400  RSL
L2C_COP0_MAP7297               0x000118008094E408  RSL
L2C_COP0_MAP7298               0x000118008094E410  RSL
L2C_COP0_MAP7299               0x000118008094E418  RSL
L2C_COP0_MAP7300               0x000118008094E420  RSL
L2C_COP0_MAP7301               0x000118008094E428  RSL
L2C_COP0_MAP7302               0x000118008094E430  RSL
L2C_COP0_MAP7303               0x000118008094E438  RSL
L2C_COP0_MAP7304               0x000118008094E440  RSL
L2C_COP0_MAP7305               0x000118008094E448  RSL
L2C_COP0_MAP7306               0x000118008094E450  RSL
L2C_COP0_MAP7307               0x000118008094E458  RSL
L2C_COP0_MAP7308               0x000118008094E460  RSL
L2C_COP0_MAP7309               0x000118008094E468  RSL
L2C_COP0_MAP7310               0x000118008094E470  RSL
L2C_COP0_MAP7311               0x000118008094E478  RSL
L2C_COP0_MAP7312               0x000118008094E480  RSL
L2C_COP0_MAP7313               0x000118008094E488  RSL
L2C_COP0_MAP7314               0x000118008094E490  RSL
L2C_COP0_MAP7315               0x000118008094E498  RSL
L2C_COP0_MAP7316               0x000118008094E4A0  RSL
L2C_COP0_MAP7317               0x000118008094E4A8  RSL
L2C_COP0_MAP7318               0x000118008094E4B0  RSL
L2C_COP0_MAP7319               0x000118008094E4B8  RSL
L2C_COP0_MAP7320               0x000118008094E4C0  RSL
L2C_COP0_MAP7321               0x000118008094E4C8  RSL
L2C_COP0_MAP7322               0x000118008094E4D0  RSL
L2C_COP0_MAP7323               0x000118008094E4D8  RSL
L2C_COP0_MAP7324               0x000118008094E4E0  RSL
L2C_COP0_MAP7325               0x000118008094E4E8  RSL
L2C_COP0_MAP7326               0x000118008094E4F0  RSL
L2C_COP0_MAP7327               0x000118008094E4F8  RSL
L2C_COP0_MAP7328               0x000118008094E500  RSL
L2C_COP0_MAP7329               0x000118008094E508  RSL
L2C_COP0_MAP7330               0x000118008094E510  RSL
L2C_COP0_MAP7331               0x000118008094E518  RSL
L2C_COP0_MAP7332               0x000118008094E520  RSL
L2C_COP0_MAP7333               0x000118008094E528  RSL
L2C_COP0_MAP7334               0x000118008094E530  RSL
L2C_COP0_MAP7335               0x000118008094E538  RSL
L2C_COP0_MAP7336               0x000118008094E540  RSL
L2C_COP0_MAP7337               0x000118008094E548  RSL
L2C_COP0_MAP7338               0x000118008094E550  RSL
L2C_COP0_MAP7339               0x000118008094E558  RSL
L2C_COP0_MAP7340               0x000118008094E560  RSL
L2C_COP0_MAP7341               0x000118008094E568  RSL
L2C_COP0_MAP7342               0x000118008094E570  RSL
L2C_COP0_MAP7343               0x000118008094E578  RSL
L2C_COP0_MAP7344               0x000118008094E580  RSL
L2C_COP0_MAP7345               0x000118008094E588  RSL
L2C_COP0_MAP7346               0x000118008094E590  RSL
L2C_COP0_MAP7347               0x000118008094E598  RSL
L2C_COP0_MAP7348               0x000118008094E5A0  RSL
L2C_COP0_MAP7349               0x000118008094E5A8  RSL
L2C_COP0_MAP7350               0x000118008094E5B0  RSL
L2C_COP0_MAP7351               0x000118008094E5B8  RSL
L2C_COP0_MAP7352               0x000118008094E5C0  RSL
L2C_COP0_MAP7353               0x000118008094E5C8  RSL
L2C_COP0_MAP7354               0x000118008094E5D0  RSL
L2C_COP0_MAP7355               0x000118008094E5D8  RSL
L2C_COP0_MAP7356               0x000118008094E5E0  RSL
L2C_COP0_MAP7357               0x000118008094E5E8  RSL
L2C_COP0_MAP7358               0x000118008094E5F0  RSL
L2C_COP0_MAP7359               0x000118008094E5F8  RSL
L2C_COP0_MAP7360               0x000118008094E600  RSL
L2C_COP0_MAP7361               0x000118008094E608  RSL
L2C_COP0_MAP7362               0x000118008094E610  RSL
L2C_COP0_MAP7363               0x000118008094E618  RSL
L2C_COP0_MAP7364               0x000118008094E620  RSL
L2C_COP0_MAP7365               0x000118008094E628  RSL
L2C_COP0_MAP7366               0x000118008094E630  RSL
L2C_COP0_MAP7367               0x000118008094E638  RSL
L2C_COP0_MAP7368               0x000118008094E640  RSL
L2C_COP0_MAP7369               0x000118008094E648  RSL
L2C_COP0_MAP7370               0x000118008094E650  RSL
L2C_COP0_MAP7371               0x000118008094E658  RSL
L2C_COP0_MAP7372               0x000118008094E660  RSL
L2C_COP0_MAP7373               0x000118008094E668  RSL
L2C_COP0_MAP7374               0x000118008094E670  RSL
L2C_COP0_MAP7375               0x000118008094E678  RSL
L2C_COP0_MAP7376               0x000118008094E680  RSL
L2C_COP0_MAP7377               0x000118008094E688  RSL
L2C_COP0_MAP7378               0x000118008094E690  RSL
L2C_COP0_MAP7379               0x000118008094E698  RSL
L2C_COP0_MAP7380               0x000118008094E6A0  RSL
L2C_COP0_MAP7381               0x000118008094E6A8  RSL
L2C_COP0_MAP7382               0x000118008094E6B0  RSL
L2C_COP0_MAP7383               0x000118008094E6B8  RSL
L2C_COP0_MAP7384               0x000118008094E6C0  RSL
L2C_COP0_MAP7385               0x000118008094E6C8  RSL
L2C_COP0_MAP7386               0x000118008094E6D0  RSL
L2C_COP0_MAP7387               0x000118008094E6D8  RSL
L2C_COP0_MAP7388               0x000118008094E6E0  RSL
L2C_COP0_MAP7389               0x000118008094E6E8  RSL
L2C_COP0_MAP7390               0x000118008094E6F0  RSL
L2C_COP0_MAP7391               0x000118008094E6F8  RSL
L2C_COP0_MAP7392               0x000118008094E700  RSL
L2C_COP0_MAP7393               0x000118008094E708  RSL
L2C_COP0_MAP7394               0x000118008094E710  RSL
L2C_COP0_MAP7395               0x000118008094E718  RSL
L2C_COP0_MAP7396               0x000118008094E720  RSL
L2C_COP0_MAP7397               0x000118008094E728  RSL
L2C_COP0_MAP7398               0x000118008094E730  RSL
L2C_COP0_MAP7399               0x000118008094E738  RSL
L2C_COP0_MAP7400               0x000118008094E740  RSL
L2C_COP0_MAP7401               0x000118008094E748  RSL
L2C_COP0_MAP7402               0x000118008094E750  RSL
L2C_COP0_MAP7403               0x000118008094E758  RSL
L2C_COP0_MAP7404               0x000118008094E760  RSL
L2C_COP0_MAP7405               0x000118008094E768  RSL
L2C_COP0_MAP7406               0x000118008094E770  RSL
L2C_COP0_MAP7407               0x000118008094E778  RSL
L2C_COP0_MAP7408               0x000118008094E780  RSL
L2C_COP0_MAP7409               0x000118008094E788  RSL
L2C_COP0_MAP7410               0x000118008094E790  RSL
L2C_COP0_MAP7411               0x000118008094E798  RSL
L2C_COP0_MAP7412               0x000118008094E7A0  RSL
L2C_COP0_MAP7413               0x000118008094E7A8  RSL
L2C_COP0_MAP7414               0x000118008094E7B0  RSL
L2C_COP0_MAP7415               0x000118008094E7B8  RSL
L2C_COP0_MAP7416               0x000118008094E7C0  RSL
L2C_COP0_MAP7417               0x000118008094E7C8  RSL
L2C_COP0_MAP7418               0x000118008094E7D0  RSL
L2C_COP0_MAP7419               0x000118008094E7D8  RSL
L2C_COP0_MAP7420               0x000118008094E7E0  RSL
L2C_COP0_MAP7421               0x000118008094E7E8  RSL
L2C_COP0_MAP7422               0x000118008094E7F0  RSL
L2C_COP0_MAP7423               0x000118008094E7F8  RSL
L2C_COP0_MAP7424               0x000118008094E800  RSL
L2C_COP0_MAP7425               0x000118008094E808  RSL
L2C_COP0_MAP7426               0x000118008094E810  RSL
L2C_COP0_MAP7427               0x000118008094E818  RSL
L2C_COP0_MAP7428               0x000118008094E820  RSL
L2C_COP0_MAP7429               0x000118008094E828  RSL
L2C_COP0_MAP7430               0x000118008094E830  RSL
L2C_COP0_MAP7431               0x000118008094E838  RSL
L2C_COP0_MAP7432               0x000118008094E840  RSL
L2C_COP0_MAP7433               0x000118008094E848  RSL
L2C_COP0_MAP7434               0x000118008094E850  RSL
L2C_COP0_MAP7435               0x000118008094E858  RSL
L2C_COP0_MAP7436               0x000118008094E860  RSL
L2C_COP0_MAP7437               0x000118008094E868  RSL
L2C_COP0_MAP7438               0x000118008094E870  RSL
L2C_COP0_MAP7439               0x000118008094E878  RSL
L2C_COP0_MAP7440               0x000118008094E880  RSL
L2C_COP0_MAP7441               0x000118008094E888  RSL
L2C_COP0_MAP7442               0x000118008094E890  RSL
L2C_COP0_MAP7443               0x000118008094E898  RSL
L2C_COP0_MAP7444               0x000118008094E8A0  RSL
L2C_COP0_MAP7445               0x000118008094E8A8  RSL
L2C_COP0_MAP7446               0x000118008094E8B0  RSL
L2C_COP0_MAP7447               0x000118008094E8B8  RSL
L2C_COP0_MAP7448               0x000118008094E8C0  RSL
L2C_COP0_MAP7449               0x000118008094E8C8  RSL
L2C_COP0_MAP7450               0x000118008094E8D0  RSL
L2C_COP0_MAP7451               0x000118008094E8D8  RSL
L2C_COP0_MAP7452               0x000118008094E8E0  RSL
L2C_COP0_MAP7453               0x000118008094E8E8  RSL
L2C_COP0_MAP7454               0x000118008094E8F0  RSL
L2C_COP0_MAP7455               0x000118008094E8F8  RSL
L2C_COP0_MAP7456               0x000118008094E900  RSL
L2C_COP0_MAP7457               0x000118008094E908  RSL
L2C_COP0_MAP7458               0x000118008094E910  RSL
L2C_COP0_MAP7459               0x000118008094E918  RSL
L2C_COP0_MAP7460               0x000118008094E920  RSL
L2C_COP0_MAP7461               0x000118008094E928  RSL
L2C_COP0_MAP7462               0x000118008094E930  RSL
L2C_COP0_MAP7463               0x000118008094E938  RSL
L2C_COP0_MAP7464               0x000118008094E940  RSL
L2C_COP0_MAP7465               0x000118008094E948  RSL
L2C_COP0_MAP7466               0x000118008094E950  RSL
L2C_COP0_MAP7467               0x000118008094E958  RSL
L2C_COP0_MAP7468               0x000118008094E960  RSL
L2C_COP0_MAP7469               0x000118008094E968  RSL
L2C_COP0_MAP7470               0x000118008094E970  RSL
L2C_COP0_MAP7471               0x000118008094E978  RSL
L2C_COP0_MAP7472               0x000118008094E980  RSL
L2C_COP0_MAP7473               0x000118008094E988  RSL
L2C_COP0_MAP7474               0x000118008094E990  RSL
L2C_COP0_MAP7475               0x000118008094E998  RSL
L2C_COP0_MAP7476               0x000118008094E9A0  RSL
L2C_COP0_MAP7477               0x000118008094E9A8  RSL
L2C_COP0_MAP7478               0x000118008094E9B0  RSL
L2C_COP0_MAP7479               0x000118008094E9B8  RSL
L2C_COP0_MAP7480               0x000118008094E9C0  RSL
L2C_COP0_MAP7481               0x000118008094E9C8  RSL
L2C_COP0_MAP7482               0x000118008094E9D0  RSL
L2C_COP0_MAP7483               0x000118008094E9D8  RSL
L2C_COP0_MAP7484               0x000118008094E9E0  RSL
L2C_COP0_MAP7485               0x000118008094E9E8  RSL
L2C_COP0_MAP7486               0x000118008094E9F0  RSL
L2C_COP0_MAP7487               0x000118008094E9F8  RSL
L2C_COP0_MAP7488               0x000118008094EA00  RSL
L2C_COP0_MAP7489               0x000118008094EA08  RSL
L2C_COP0_MAP7490               0x000118008094EA10  RSL
L2C_COP0_MAP7491               0x000118008094EA18  RSL
L2C_COP0_MAP7492               0x000118008094EA20  RSL
L2C_COP0_MAP7493               0x000118008094EA28  RSL
L2C_COP0_MAP7494               0x000118008094EA30  RSL
L2C_COP0_MAP7495               0x000118008094EA38  RSL
L2C_COP0_MAP7496               0x000118008094EA40  RSL
L2C_COP0_MAP7497               0x000118008094EA48  RSL
L2C_COP0_MAP7498               0x000118008094EA50  RSL
L2C_COP0_MAP7499               0x000118008094EA58  RSL
L2C_COP0_MAP7500               0x000118008094EA60  RSL
L2C_COP0_MAP7501               0x000118008094EA68  RSL
L2C_COP0_MAP7502               0x000118008094EA70  RSL
L2C_COP0_MAP7503               0x000118008094EA78  RSL
L2C_COP0_MAP7504               0x000118008094EA80  RSL
L2C_COP0_MAP7505               0x000118008094EA88  RSL
L2C_COP0_MAP7506               0x000118008094EA90  RSL
L2C_COP0_MAP7507               0x000118008094EA98  RSL
L2C_COP0_MAP7508               0x000118008094EAA0  RSL
L2C_COP0_MAP7509               0x000118008094EAA8  RSL
L2C_COP0_MAP7510               0x000118008094EAB0  RSL
L2C_COP0_MAP7511               0x000118008094EAB8  RSL
L2C_COP0_MAP7512               0x000118008094EAC0  RSL
L2C_COP0_MAP7513               0x000118008094EAC8  RSL
L2C_COP0_MAP7514               0x000118008094EAD0  RSL
L2C_COP0_MAP7515               0x000118008094EAD8  RSL
L2C_COP0_MAP7516               0x000118008094EAE0  RSL
L2C_COP0_MAP7517               0x000118008094EAE8  RSL
L2C_COP0_MAP7518               0x000118008094EAF0  RSL
L2C_COP0_MAP7519               0x000118008094EAF8  RSL
L2C_COP0_MAP7520               0x000118008094EB00  RSL
L2C_COP0_MAP7521               0x000118008094EB08  RSL
L2C_COP0_MAP7522               0x000118008094EB10  RSL
L2C_COP0_MAP7523               0x000118008094EB18  RSL
L2C_COP0_MAP7524               0x000118008094EB20  RSL
L2C_COP0_MAP7525               0x000118008094EB28  RSL
L2C_COP0_MAP7526               0x000118008094EB30  RSL
L2C_COP0_MAP7527               0x000118008094EB38  RSL
L2C_COP0_MAP7528               0x000118008094EB40  RSL
L2C_COP0_MAP7529               0x000118008094EB48  RSL
L2C_COP0_MAP7530               0x000118008094EB50  RSL
L2C_COP0_MAP7531               0x000118008094EB58  RSL
L2C_COP0_MAP7532               0x000118008094EB60  RSL
L2C_COP0_MAP7533               0x000118008094EB68  RSL
L2C_COP0_MAP7534               0x000118008094EB70  RSL
L2C_COP0_MAP7535               0x000118008094EB78  RSL
L2C_COP0_MAP7536               0x000118008094EB80  RSL
L2C_COP0_MAP7537               0x000118008094EB88  RSL
L2C_COP0_MAP7538               0x000118008094EB90  RSL
L2C_COP0_MAP7539               0x000118008094EB98  RSL
L2C_COP0_MAP7540               0x000118008094EBA0  RSL
L2C_COP0_MAP7541               0x000118008094EBA8  RSL
L2C_COP0_MAP7542               0x000118008094EBB0  RSL
L2C_COP0_MAP7543               0x000118008094EBB8  RSL
L2C_COP0_MAP7544               0x000118008094EBC0  RSL
L2C_COP0_MAP7545               0x000118008094EBC8  RSL
L2C_COP0_MAP7546               0x000118008094EBD0  RSL
L2C_COP0_MAP7547               0x000118008094EBD8  RSL
L2C_COP0_MAP7548               0x000118008094EBE0  RSL
L2C_COP0_MAP7549               0x000118008094EBE8  RSL
L2C_COP0_MAP7550               0x000118008094EBF0  RSL
L2C_COP0_MAP7551               0x000118008094EBF8  RSL
L2C_COP0_MAP7552               0x000118008094EC00  RSL
L2C_COP0_MAP7553               0x000118008094EC08  RSL
L2C_COP0_MAP7554               0x000118008094EC10  RSL
L2C_COP0_MAP7555               0x000118008094EC18  RSL
L2C_COP0_MAP7556               0x000118008094EC20  RSL
L2C_COP0_MAP7557               0x000118008094EC28  RSL
L2C_COP0_MAP7558               0x000118008094EC30  RSL
L2C_COP0_MAP7559               0x000118008094EC38  RSL
L2C_COP0_MAP7560               0x000118008094EC40  RSL
L2C_COP0_MAP7561               0x000118008094EC48  RSL
L2C_COP0_MAP7562               0x000118008094EC50  RSL
L2C_COP0_MAP7563               0x000118008094EC58  RSL
L2C_COP0_MAP7564               0x000118008094EC60  RSL
L2C_COP0_MAP7565               0x000118008094EC68  RSL
L2C_COP0_MAP7566               0x000118008094EC70  RSL
L2C_COP0_MAP7567               0x000118008094EC78  RSL
L2C_COP0_MAP7568               0x000118008094EC80  RSL
L2C_COP0_MAP7569               0x000118008094EC88  RSL
L2C_COP0_MAP7570               0x000118008094EC90  RSL
L2C_COP0_MAP7571               0x000118008094EC98  RSL
L2C_COP0_MAP7572               0x000118008094ECA0  RSL
L2C_COP0_MAP7573               0x000118008094ECA8  RSL
L2C_COP0_MAP7574               0x000118008094ECB0  RSL
L2C_COP0_MAP7575               0x000118008094ECB8  RSL
L2C_COP0_MAP7576               0x000118008094ECC0  RSL
L2C_COP0_MAP7577               0x000118008094ECC8  RSL
L2C_COP0_MAP7578               0x000118008094ECD0  RSL
L2C_COP0_MAP7579               0x000118008094ECD8  RSL
L2C_COP0_MAP7580               0x000118008094ECE0  RSL
L2C_COP0_MAP7581               0x000118008094ECE8  RSL
L2C_COP0_MAP7582               0x000118008094ECF0  RSL
L2C_COP0_MAP7583               0x000118008094ECF8  RSL
L2C_COP0_MAP7584               0x000118008094ED00  RSL
L2C_COP0_MAP7585               0x000118008094ED08  RSL
L2C_COP0_MAP7586               0x000118008094ED10  RSL
L2C_COP0_MAP7587               0x000118008094ED18  RSL
L2C_COP0_MAP7588               0x000118008094ED20  RSL
L2C_COP0_MAP7589               0x000118008094ED28  RSL
L2C_COP0_MAP7590               0x000118008094ED30  RSL
L2C_COP0_MAP7591               0x000118008094ED38  RSL
L2C_COP0_MAP7592               0x000118008094ED40  RSL
L2C_COP0_MAP7593               0x000118008094ED48  RSL
L2C_COP0_MAP7594               0x000118008094ED50  RSL
L2C_COP0_MAP7595               0x000118008094ED58  RSL
L2C_COP0_MAP7596               0x000118008094ED60  RSL
L2C_COP0_MAP7597               0x000118008094ED68  RSL
L2C_COP0_MAP7598               0x000118008094ED70  RSL
L2C_COP0_MAP7599               0x000118008094ED78  RSL
L2C_COP0_MAP7600               0x000118008094ED80  RSL
L2C_COP0_MAP7601               0x000118008094ED88  RSL
L2C_COP0_MAP7602               0x000118008094ED90  RSL
L2C_COP0_MAP7603               0x000118008094ED98  RSL
L2C_COP0_MAP7604               0x000118008094EDA0  RSL
L2C_COP0_MAP7605               0x000118008094EDA8  RSL
L2C_COP0_MAP7606               0x000118008094EDB0  RSL
L2C_COP0_MAP7607               0x000118008094EDB8  RSL
L2C_COP0_MAP7608               0x000118008094EDC0  RSL
L2C_COP0_MAP7609               0x000118008094EDC8  RSL
L2C_COP0_MAP7610               0x000118008094EDD0  RSL
L2C_COP0_MAP7611               0x000118008094EDD8  RSL
L2C_COP0_MAP7612               0x000118008094EDE0  RSL
L2C_COP0_MAP7613               0x000118008094EDE8  RSL
L2C_COP0_MAP7614               0x000118008094EDF0  RSL
L2C_COP0_MAP7615               0x000118008094EDF8  RSL
L2C_COP0_MAP7616               0x000118008094EE00  RSL
L2C_COP0_MAP7617               0x000118008094EE08  RSL
L2C_COP0_MAP7618               0x000118008094EE10  RSL
L2C_COP0_MAP7619               0x000118008094EE18  RSL
L2C_COP0_MAP7620               0x000118008094EE20  RSL
L2C_COP0_MAP7621               0x000118008094EE28  RSL
L2C_COP0_MAP7622               0x000118008094EE30  RSL
L2C_COP0_MAP7623               0x000118008094EE38  RSL
L2C_COP0_MAP7624               0x000118008094EE40  RSL
L2C_COP0_MAP7625               0x000118008094EE48  RSL
L2C_COP0_MAP7626               0x000118008094EE50  RSL
L2C_COP0_MAP7627               0x000118008094EE58  RSL
L2C_COP0_MAP7628               0x000118008094EE60  RSL
L2C_COP0_MAP7629               0x000118008094EE68  RSL
L2C_COP0_MAP7630               0x000118008094EE70  RSL
L2C_COP0_MAP7631               0x000118008094EE78  RSL
L2C_COP0_MAP7632               0x000118008094EE80  RSL
L2C_COP0_MAP7633               0x000118008094EE88  RSL
L2C_COP0_MAP7634               0x000118008094EE90  RSL
L2C_COP0_MAP7635               0x000118008094EE98  RSL
L2C_COP0_MAP7636               0x000118008094EEA0  RSL
L2C_COP0_MAP7637               0x000118008094EEA8  RSL
L2C_COP0_MAP7638               0x000118008094EEB0  RSL
L2C_COP0_MAP7639               0x000118008094EEB8  RSL
L2C_COP0_MAP7640               0x000118008094EEC0  RSL
L2C_COP0_MAP7641               0x000118008094EEC8  RSL
L2C_COP0_MAP7642               0x000118008094EED0  RSL
L2C_COP0_MAP7643               0x000118008094EED8  RSL
L2C_COP0_MAP7644               0x000118008094EEE0  RSL
L2C_COP0_MAP7645               0x000118008094EEE8  RSL
L2C_COP0_MAP7646               0x000118008094EEF0  RSL
L2C_COP0_MAP7647               0x000118008094EEF8  RSL
L2C_COP0_MAP7648               0x000118008094EF00  RSL
L2C_COP0_MAP7649               0x000118008094EF08  RSL
L2C_COP0_MAP7650               0x000118008094EF10  RSL
L2C_COP0_MAP7651               0x000118008094EF18  RSL
L2C_COP0_MAP7652               0x000118008094EF20  RSL
L2C_COP0_MAP7653               0x000118008094EF28  RSL
L2C_COP0_MAP7654               0x000118008094EF30  RSL
L2C_COP0_MAP7655               0x000118008094EF38  RSL
L2C_COP0_MAP7656               0x000118008094EF40  RSL
L2C_COP0_MAP7657               0x000118008094EF48  RSL
L2C_COP0_MAP7658               0x000118008094EF50  RSL
L2C_COP0_MAP7659               0x000118008094EF58  RSL
L2C_COP0_MAP7660               0x000118008094EF60  RSL
L2C_COP0_MAP7661               0x000118008094EF68  RSL
L2C_COP0_MAP7662               0x000118008094EF70  RSL
L2C_COP0_MAP7663               0x000118008094EF78  RSL
L2C_COP0_MAP7664               0x000118008094EF80  RSL
L2C_COP0_MAP7665               0x000118008094EF88  RSL
L2C_COP0_MAP7666               0x000118008094EF90  RSL
L2C_COP0_MAP7667               0x000118008094EF98  RSL
L2C_COP0_MAP7668               0x000118008094EFA0  RSL
L2C_COP0_MAP7669               0x000118008094EFA8  RSL
L2C_COP0_MAP7670               0x000118008094EFB0  RSL
L2C_COP0_MAP7671               0x000118008094EFB8  RSL
L2C_COP0_MAP7672               0x000118008094EFC0  RSL
L2C_COP0_MAP7673               0x000118008094EFC8  RSL
L2C_COP0_MAP7674               0x000118008094EFD0  RSL
L2C_COP0_MAP7675               0x000118008094EFD8  RSL
L2C_COP0_MAP7676               0x000118008094EFE0  RSL
L2C_COP0_MAP7677               0x000118008094EFE8  RSL
L2C_COP0_MAP7678               0x000118008094EFF0  RSL
L2C_COP0_MAP7679               0x000118008094EFF8  RSL
L2C_COP0_MAP7680               0x000118008094F000  RSL
L2C_COP0_MAP7681               0x000118008094F008  RSL
L2C_COP0_MAP7682               0x000118008094F010  RSL
L2C_COP0_MAP7683               0x000118008094F018  RSL
L2C_COP0_MAP7684               0x000118008094F020  RSL
L2C_COP0_MAP7685               0x000118008094F028  RSL
L2C_COP0_MAP7686               0x000118008094F030  RSL
L2C_COP0_MAP7687               0x000118008094F038  RSL
L2C_COP0_MAP7688               0x000118008094F040  RSL
L2C_COP0_MAP7689               0x000118008094F048  RSL
L2C_COP0_MAP7690               0x000118008094F050  RSL
L2C_COP0_MAP7691               0x000118008094F058  RSL
L2C_COP0_MAP7692               0x000118008094F060  RSL
L2C_COP0_MAP7693               0x000118008094F068  RSL
L2C_COP0_MAP7694               0x000118008094F070  RSL
L2C_COP0_MAP7695               0x000118008094F078  RSL
L2C_COP0_MAP7696               0x000118008094F080  RSL
L2C_COP0_MAP7697               0x000118008094F088  RSL
L2C_COP0_MAP7698               0x000118008094F090  RSL
L2C_COP0_MAP7699               0x000118008094F098  RSL
L2C_COP0_MAP7700               0x000118008094F0A0  RSL
L2C_COP0_MAP7701               0x000118008094F0A8  RSL
L2C_COP0_MAP7702               0x000118008094F0B0  RSL
L2C_COP0_MAP7703               0x000118008094F0B8  RSL
L2C_COP0_MAP7704               0x000118008094F0C0  RSL
L2C_COP0_MAP7705               0x000118008094F0C8  RSL
L2C_COP0_MAP7706               0x000118008094F0D0  RSL
L2C_COP0_MAP7707               0x000118008094F0D8  RSL
L2C_COP0_MAP7708               0x000118008094F0E0  RSL
L2C_COP0_MAP7709               0x000118008094F0E8  RSL
L2C_COP0_MAP7710               0x000118008094F0F0  RSL
L2C_COP0_MAP7711               0x000118008094F0F8  RSL
L2C_COP0_MAP7712               0x000118008094F100  RSL
L2C_COP0_MAP7713               0x000118008094F108  RSL
L2C_COP0_MAP7714               0x000118008094F110  RSL
L2C_COP0_MAP7715               0x000118008094F118  RSL
L2C_COP0_MAP7716               0x000118008094F120  RSL
L2C_COP0_MAP7717               0x000118008094F128  RSL
L2C_COP0_MAP7718               0x000118008094F130  RSL
L2C_COP0_MAP7719               0x000118008094F138  RSL
L2C_COP0_MAP7720               0x000118008094F140  RSL
L2C_COP0_MAP7721               0x000118008094F148  RSL
L2C_COP0_MAP7722               0x000118008094F150  RSL
L2C_COP0_MAP7723               0x000118008094F158  RSL
L2C_COP0_MAP7724               0x000118008094F160  RSL
L2C_COP0_MAP7725               0x000118008094F168  RSL
L2C_COP0_MAP7726               0x000118008094F170  RSL
L2C_COP0_MAP7727               0x000118008094F178  RSL
L2C_COP0_MAP7728               0x000118008094F180  RSL
L2C_COP0_MAP7729               0x000118008094F188  RSL
L2C_COP0_MAP7730               0x000118008094F190  RSL
L2C_COP0_MAP7731               0x000118008094F198  RSL
L2C_COP0_MAP7732               0x000118008094F1A0  RSL
L2C_COP0_MAP7733               0x000118008094F1A8  RSL
L2C_COP0_MAP7734               0x000118008094F1B0  RSL
L2C_COP0_MAP7735               0x000118008094F1B8  RSL
L2C_COP0_MAP7736               0x000118008094F1C0  RSL
L2C_COP0_MAP7737               0x000118008094F1C8  RSL
L2C_COP0_MAP7738               0x000118008094F1D0  RSL
L2C_COP0_MAP7739               0x000118008094F1D8  RSL
L2C_COP0_MAP7740               0x000118008094F1E0  RSL
L2C_COP0_MAP7741               0x000118008094F1E8  RSL
L2C_COP0_MAP7742               0x000118008094F1F0  RSL
L2C_COP0_MAP7743               0x000118008094F1F8  RSL
L2C_COP0_MAP7744               0x000118008094F200  RSL
L2C_COP0_MAP7745               0x000118008094F208  RSL
L2C_COP0_MAP7746               0x000118008094F210  RSL
L2C_COP0_MAP7747               0x000118008094F218  RSL
L2C_COP0_MAP7748               0x000118008094F220  RSL
L2C_COP0_MAP7749               0x000118008094F228  RSL
L2C_COP0_MAP7750               0x000118008094F230  RSL
L2C_COP0_MAP7751               0x000118008094F238  RSL
L2C_COP0_MAP7752               0x000118008094F240  RSL
L2C_COP0_MAP7753               0x000118008094F248  RSL
L2C_COP0_MAP7754               0x000118008094F250  RSL
L2C_COP0_MAP7755               0x000118008094F258  RSL
L2C_COP0_MAP7756               0x000118008094F260  RSL
L2C_COP0_MAP7757               0x000118008094F268  RSL
L2C_COP0_MAP7758               0x000118008094F270  RSL
L2C_COP0_MAP7759               0x000118008094F278  RSL
L2C_COP0_MAP7760               0x000118008094F280  RSL
L2C_COP0_MAP7761               0x000118008094F288  RSL
L2C_COP0_MAP7762               0x000118008094F290  RSL
L2C_COP0_MAP7763               0x000118008094F298  RSL
L2C_COP0_MAP7764               0x000118008094F2A0  RSL
L2C_COP0_MAP7765               0x000118008094F2A8  RSL
L2C_COP0_MAP7766               0x000118008094F2B0  RSL
L2C_COP0_MAP7767               0x000118008094F2B8  RSL
L2C_COP0_MAP7768               0x000118008094F2C0  RSL
L2C_COP0_MAP7769               0x000118008094F2C8  RSL
L2C_COP0_MAP7770               0x000118008094F2D0  RSL
L2C_COP0_MAP7771               0x000118008094F2D8  RSL
L2C_COP0_MAP7772               0x000118008094F2E0  RSL
L2C_COP0_MAP7773               0x000118008094F2E8  RSL
L2C_COP0_MAP7774               0x000118008094F2F0  RSL
L2C_COP0_MAP7775               0x000118008094F2F8  RSL
L2C_COP0_MAP7776               0x000118008094F300  RSL
L2C_COP0_MAP7777               0x000118008094F308  RSL
L2C_COP0_MAP7778               0x000118008094F310  RSL
L2C_COP0_MAP7779               0x000118008094F318  RSL
L2C_COP0_MAP7780               0x000118008094F320  RSL
L2C_COP0_MAP7781               0x000118008094F328  RSL
L2C_COP0_MAP7782               0x000118008094F330  RSL
L2C_COP0_MAP7783               0x000118008094F338  RSL
L2C_COP0_MAP7784               0x000118008094F340  RSL
L2C_COP0_MAP7785               0x000118008094F348  RSL
L2C_COP0_MAP7786               0x000118008094F350  RSL
L2C_COP0_MAP7787               0x000118008094F358  RSL
L2C_COP0_MAP7788               0x000118008094F360  RSL
L2C_COP0_MAP7789               0x000118008094F368  RSL
L2C_COP0_MAP7790               0x000118008094F370  RSL
L2C_COP0_MAP7791               0x000118008094F378  RSL
L2C_COP0_MAP7792               0x000118008094F380  RSL
L2C_COP0_MAP7793               0x000118008094F388  RSL
L2C_COP0_MAP7794               0x000118008094F390  RSL
L2C_COP0_MAP7795               0x000118008094F398  RSL
L2C_COP0_MAP7796               0x000118008094F3A0  RSL
L2C_COP0_MAP7797               0x000118008094F3A8  RSL
L2C_COP0_MAP7798               0x000118008094F3B0  RSL
L2C_COP0_MAP7799               0x000118008094F3B8  RSL
L2C_COP0_MAP7800               0x000118008094F3C0  RSL
L2C_COP0_MAP7801               0x000118008094F3C8  RSL
L2C_COP0_MAP7802               0x000118008094F3D0  RSL
L2C_COP0_MAP7803               0x000118008094F3D8  RSL
L2C_COP0_MAP7804               0x000118008094F3E0  RSL
L2C_COP0_MAP7805               0x000118008094F3E8  RSL
L2C_COP0_MAP7806               0x000118008094F3F0  RSL
L2C_COP0_MAP7807               0x000118008094F3F8  RSL
L2C_COP0_MAP7808               0x000118008094F400  RSL
L2C_COP0_MAP7809               0x000118008094F408  RSL
L2C_COP0_MAP7810               0x000118008094F410  RSL
L2C_COP0_MAP7811               0x000118008094F418  RSL
L2C_COP0_MAP7812               0x000118008094F420  RSL
L2C_COP0_MAP7813               0x000118008094F428  RSL
L2C_COP0_MAP7814               0x000118008094F430  RSL
L2C_COP0_MAP7815               0x000118008094F438  RSL
L2C_COP0_MAP7816               0x000118008094F440  RSL
L2C_COP0_MAP7817               0x000118008094F448  RSL
L2C_COP0_MAP7818               0x000118008094F450  RSL
L2C_COP0_MAP7819               0x000118008094F458  RSL
L2C_COP0_MAP7820               0x000118008094F460  RSL
L2C_COP0_MAP7821               0x000118008094F468  RSL
L2C_COP0_MAP7822               0x000118008094F470  RSL
L2C_COP0_MAP7823               0x000118008094F478  RSL
L2C_COP0_MAP7824               0x000118008094F480  RSL
L2C_COP0_MAP7825               0x000118008094F488  RSL
L2C_COP0_MAP7826               0x000118008094F490  RSL
L2C_COP0_MAP7827               0x000118008094F498  RSL
L2C_COP0_MAP7828               0x000118008094F4A0  RSL
L2C_COP0_MAP7829               0x000118008094F4A8  RSL
L2C_COP0_MAP7830               0x000118008094F4B0  RSL
L2C_COP0_MAP7831               0x000118008094F4B8  RSL
L2C_COP0_MAP7832               0x000118008094F4C0  RSL
L2C_COP0_MAP7833               0x000118008094F4C8  RSL
L2C_COP0_MAP7834               0x000118008094F4D0  RSL
L2C_COP0_MAP7835               0x000118008094F4D8  RSL
L2C_COP0_MAP7836               0x000118008094F4E0  RSL
L2C_COP0_MAP7837               0x000118008094F4E8  RSL
L2C_COP0_MAP7838               0x000118008094F4F0  RSL
L2C_COP0_MAP7839               0x000118008094F4F8  RSL
L2C_COP0_MAP7840               0x000118008094F500  RSL
L2C_COP0_MAP7841               0x000118008094F508  RSL
L2C_COP0_MAP7842               0x000118008094F510  RSL
L2C_COP0_MAP7843               0x000118008094F518  RSL
L2C_COP0_MAP7844               0x000118008094F520  RSL
L2C_COP0_MAP7845               0x000118008094F528  RSL
L2C_COP0_MAP7846               0x000118008094F530  RSL
L2C_COP0_MAP7847               0x000118008094F538  RSL
L2C_COP0_MAP7848               0x000118008094F540  RSL
L2C_COP0_MAP7849               0x000118008094F548  RSL
L2C_COP0_MAP7850               0x000118008094F550  RSL
L2C_COP0_MAP7851               0x000118008094F558  RSL
L2C_COP0_MAP7852               0x000118008094F560  RSL
L2C_COP0_MAP7853               0x000118008094F568  RSL
L2C_COP0_MAP7854               0x000118008094F570  RSL
L2C_COP0_MAP7855               0x000118008094F578  RSL
L2C_COP0_MAP7856               0x000118008094F580  RSL
L2C_COP0_MAP7857               0x000118008094F588  RSL
L2C_COP0_MAP7858               0x000118008094F590  RSL
L2C_COP0_MAP7859               0x000118008094F598  RSL
L2C_COP0_MAP7860               0x000118008094F5A0  RSL
L2C_COP0_MAP7861               0x000118008094F5A8  RSL
L2C_COP0_MAP7862               0x000118008094F5B0  RSL
L2C_COP0_MAP7863               0x000118008094F5B8  RSL
L2C_COP0_MAP7864               0x000118008094F5C0  RSL
L2C_COP0_MAP7865               0x000118008094F5C8  RSL
L2C_COP0_MAP7866               0x000118008094F5D0  RSL
L2C_COP0_MAP7867               0x000118008094F5D8  RSL
L2C_COP0_MAP7868               0x000118008094F5E0  RSL
L2C_COP0_MAP7869               0x000118008094F5E8  RSL
L2C_COP0_MAP7870               0x000118008094F5F0  RSL
L2C_COP0_MAP7871               0x000118008094F5F8  RSL
L2C_COP0_MAP7872               0x000118008094F600  RSL
L2C_COP0_MAP7873               0x000118008094F608  RSL
L2C_COP0_MAP7874               0x000118008094F610  RSL
L2C_COP0_MAP7875               0x000118008094F618  RSL
L2C_COP0_MAP7876               0x000118008094F620  RSL
L2C_COP0_MAP7877               0x000118008094F628  RSL
L2C_COP0_MAP7878               0x000118008094F630  RSL
L2C_COP0_MAP7879               0x000118008094F638  RSL
L2C_COP0_MAP7880               0x000118008094F640  RSL
L2C_COP0_MAP7881               0x000118008094F648  RSL
L2C_COP0_MAP7882               0x000118008094F650  RSL
L2C_COP0_MAP7883               0x000118008094F658  RSL
L2C_COP0_MAP7884               0x000118008094F660  RSL
L2C_COP0_MAP7885               0x000118008094F668  RSL
L2C_COP0_MAP7886               0x000118008094F670  RSL
L2C_COP0_MAP7887               0x000118008094F678  RSL
L2C_COP0_MAP7888               0x000118008094F680  RSL
L2C_COP0_MAP7889               0x000118008094F688  RSL
L2C_COP0_MAP7890               0x000118008094F690  RSL
L2C_COP0_MAP7891               0x000118008094F698  RSL
L2C_COP0_MAP7892               0x000118008094F6A0  RSL
L2C_COP0_MAP7893               0x000118008094F6A8  RSL
L2C_COP0_MAP7894               0x000118008094F6B0  RSL
L2C_COP0_MAP7895               0x000118008094F6B8  RSL
L2C_COP0_MAP7896               0x000118008094F6C0  RSL
L2C_COP0_MAP7897               0x000118008094F6C8  RSL
L2C_COP0_MAP7898               0x000118008094F6D0  RSL
L2C_COP0_MAP7899               0x000118008094F6D8  RSL
L2C_COP0_MAP7900               0x000118008094F6E0  RSL
L2C_COP0_MAP7901               0x000118008094F6E8  RSL
L2C_COP0_MAP7902               0x000118008094F6F0  RSL
L2C_COP0_MAP7903               0x000118008094F6F8  RSL
L2C_COP0_MAP7904               0x000118008094F700  RSL
L2C_COP0_MAP7905               0x000118008094F708  RSL
L2C_COP0_MAP7906               0x000118008094F710  RSL
L2C_COP0_MAP7907               0x000118008094F718  RSL
L2C_COP0_MAP7908               0x000118008094F720  RSL
L2C_COP0_MAP7909               0x000118008094F728  RSL
L2C_COP0_MAP7910               0x000118008094F730  RSL
L2C_COP0_MAP7911               0x000118008094F738  RSL
L2C_COP0_MAP7912               0x000118008094F740  RSL
L2C_COP0_MAP7913               0x000118008094F748  RSL
L2C_COP0_MAP7914               0x000118008094F750  RSL
L2C_COP0_MAP7915               0x000118008094F758  RSL
L2C_COP0_MAP7916               0x000118008094F760  RSL
L2C_COP0_MAP7917               0x000118008094F768  RSL
L2C_COP0_MAP7918               0x000118008094F770  RSL
L2C_COP0_MAP7919               0x000118008094F778  RSL
L2C_COP0_MAP7920               0x000118008094F780  RSL
L2C_COP0_MAP7921               0x000118008094F788  RSL
L2C_COP0_MAP7922               0x000118008094F790  RSL
L2C_COP0_MAP7923               0x000118008094F798  RSL
L2C_COP0_MAP7924               0x000118008094F7A0  RSL
L2C_COP0_MAP7925               0x000118008094F7A8  RSL
L2C_COP0_MAP7926               0x000118008094F7B0  RSL
L2C_COP0_MAP7927               0x000118008094F7B8  RSL
L2C_COP0_MAP7928               0x000118008094F7C0  RSL
L2C_COP0_MAP7929               0x000118008094F7C8  RSL
L2C_COP0_MAP7930               0x000118008094F7D0  RSL
L2C_COP0_MAP7931               0x000118008094F7D8  RSL
L2C_COP0_MAP7932               0x000118008094F7E0  RSL
L2C_COP0_MAP7933               0x000118008094F7E8  RSL
L2C_COP0_MAP7934               0x000118008094F7F0  RSL
L2C_COP0_MAP7935               0x000118008094F7F8  RSL
L2C_COP0_MAP7936               0x000118008094F800  RSL
L2C_COP0_MAP7937               0x000118008094F808  RSL
L2C_COP0_MAP7938               0x000118008094F810  RSL
L2C_COP0_MAP7939               0x000118008094F818  RSL
L2C_COP0_MAP7940               0x000118008094F820  RSL
L2C_COP0_MAP7941               0x000118008094F828  RSL
L2C_COP0_MAP7942               0x000118008094F830  RSL
L2C_COP0_MAP7943               0x000118008094F838  RSL
L2C_COP0_MAP7944               0x000118008094F840  RSL
L2C_COP0_MAP7945               0x000118008094F848  RSL
L2C_COP0_MAP7946               0x000118008094F850  RSL
L2C_COP0_MAP7947               0x000118008094F858  RSL
L2C_COP0_MAP7948               0x000118008094F860  RSL
L2C_COP0_MAP7949               0x000118008094F868  RSL
L2C_COP0_MAP7950               0x000118008094F870  RSL
L2C_COP0_MAP7951               0x000118008094F878  RSL
L2C_COP0_MAP7952               0x000118008094F880  RSL
L2C_COP0_MAP7953               0x000118008094F888  RSL
L2C_COP0_MAP7954               0x000118008094F890  RSL
L2C_COP0_MAP7955               0x000118008094F898  RSL
L2C_COP0_MAP7956               0x000118008094F8A0  RSL
L2C_COP0_MAP7957               0x000118008094F8A8  RSL
L2C_COP0_MAP7958               0x000118008094F8B0  RSL
L2C_COP0_MAP7959               0x000118008094F8B8  RSL
L2C_COP0_MAP7960               0x000118008094F8C0  RSL
L2C_COP0_MAP7961               0x000118008094F8C8  RSL
L2C_COP0_MAP7962               0x000118008094F8D0  RSL
L2C_COP0_MAP7963               0x000118008094F8D8  RSL
L2C_COP0_MAP7964               0x000118008094F8E0  RSL
L2C_COP0_MAP7965               0x000118008094F8E8  RSL
L2C_COP0_MAP7966               0x000118008094F8F0  RSL
L2C_COP0_MAP7967               0x000118008094F8F8  RSL
L2C_COP0_MAP7968               0x000118008094F900  RSL
L2C_COP0_MAP7969               0x000118008094F908  RSL
L2C_COP0_MAP7970               0x000118008094F910  RSL
L2C_COP0_MAP7971               0x000118008094F918  RSL
L2C_COP0_MAP7972               0x000118008094F920  RSL
L2C_COP0_MAP7973               0x000118008094F928  RSL
L2C_COP0_MAP7974               0x000118008094F930  RSL
L2C_COP0_MAP7975               0x000118008094F938  RSL
L2C_COP0_MAP7976               0x000118008094F940  RSL
L2C_COP0_MAP7977               0x000118008094F948  RSL
L2C_COP0_MAP7978               0x000118008094F950  RSL
L2C_COP0_MAP7979               0x000118008094F958  RSL
L2C_COP0_MAP7980               0x000118008094F960  RSL
L2C_COP0_MAP7981               0x000118008094F968  RSL
L2C_COP0_MAP7982               0x000118008094F970  RSL
L2C_COP0_MAP7983               0x000118008094F978  RSL
L2C_COP0_MAP7984               0x000118008094F980  RSL
L2C_COP0_MAP7985               0x000118008094F988  RSL
L2C_COP0_MAP7986               0x000118008094F990  RSL
L2C_COP0_MAP7987               0x000118008094F998  RSL
L2C_COP0_MAP7988               0x000118008094F9A0  RSL
L2C_COP0_MAP7989               0x000118008094F9A8  RSL
L2C_COP0_MAP7990               0x000118008094F9B0  RSL
L2C_COP0_MAP7991               0x000118008094F9B8  RSL
L2C_COP0_MAP7992               0x000118008094F9C0  RSL
L2C_COP0_MAP7993               0x000118008094F9C8  RSL
L2C_COP0_MAP7994               0x000118008094F9D0  RSL
L2C_COP0_MAP7995               0x000118008094F9D8  RSL
L2C_COP0_MAP7996               0x000118008094F9E0  RSL
L2C_COP0_MAP7997               0x000118008094F9E8  RSL
L2C_COP0_MAP7998               0x000118008094F9F0  RSL
L2C_COP0_MAP7999               0x000118008094F9F8  RSL
L2C_COP0_MAP8000               0x000118008094FA00  RSL
L2C_COP0_MAP8001               0x000118008094FA08  RSL
L2C_COP0_MAP8002               0x000118008094FA10  RSL
L2C_COP0_MAP8003               0x000118008094FA18  RSL
L2C_COP0_MAP8004               0x000118008094FA20  RSL
L2C_COP0_MAP8005               0x000118008094FA28  RSL
L2C_COP0_MAP8006               0x000118008094FA30  RSL
L2C_COP0_MAP8007               0x000118008094FA38  RSL
L2C_COP0_MAP8008               0x000118008094FA40  RSL
L2C_COP0_MAP8009               0x000118008094FA48  RSL
L2C_COP0_MAP8010               0x000118008094FA50  RSL
L2C_COP0_MAP8011               0x000118008094FA58  RSL
L2C_COP0_MAP8012               0x000118008094FA60  RSL
L2C_COP0_MAP8013               0x000118008094FA68  RSL
L2C_COP0_MAP8014               0x000118008094FA70  RSL
L2C_COP0_MAP8015               0x000118008094FA78  RSL
L2C_COP0_MAP8016               0x000118008094FA80  RSL
L2C_COP0_MAP8017               0x000118008094FA88  RSL
L2C_COP0_MAP8018               0x000118008094FA90  RSL
L2C_COP0_MAP8019               0x000118008094FA98  RSL
L2C_COP0_MAP8020               0x000118008094FAA0  RSL
L2C_COP0_MAP8021               0x000118008094FAA8  RSL
L2C_COP0_MAP8022               0x000118008094FAB0  RSL
L2C_COP0_MAP8023               0x000118008094FAB8  RSL
L2C_COP0_MAP8024               0x000118008094FAC0  RSL
L2C_COP0_MAP8025               0x000118008094FAC8  RSL
L2C_COP0_MAP8026               0x000118008094FAD0  RSL
L2C_COP0_MAP8027               0x000118008094FAD8  RSL
L2C_COP0_MAP8028               0x000118008094FAE0  RSL
L2C_COP0_MAP8029               0x000118008094FAE8  RSL
L2C_COP0_MAP8030               0x000118008094FAF0  RSL
L2C_COP0_MAP8031               0x000118008094FAF8  RSL
L2C_COP0_MAP8032               0x000118008094FB00  RSL
L2C_COP0_MAP8033               0x000118008094FB08  RSL
L2C_COP0_MAP8034               0x000118008094FB10  RSL
L2C_COP0_MAP8035               0x000118008094FB18  RSL
L2C_COP0_MAP8036               0x000118008094FB20  RSL
L2C_COP0_MAP8037               0x000118008094FB28  RSL
L2C_COP0_MAP8038               0x000118008094FB30  RSL
L2C_COP0_MAP8039               0x000118008094FB38  RSL
L2C_COP0_MAP8040               0x000118008094FB40  RSL
L2C_COP0_MAP8041               0x000118008094FB48  RSL
L2C_COP0_MAP8042               0x000118008094FB50  RSL
L2C_COP0_MAP8043               0x000118008094FB58  RSL
L2C_COP0_MAP8044               0x000118008094FB60  RSL
L2C_COP0_MAP8045               0x000118008094FB68  RSL
L2C_COP0_MAP8046               0x000118008094FB70  RSL
L2C_COP0_MAP8047               0x000118008094FB78  RSL
L2C_COP0_MAP8048               0x000118008094FB80  RSL
L2C_COP0_MAP8049               0x000118008094FB88  RSL
L2C_COP0_MAP8050               0x000118008094FB90  RSL
L2C_COP0_MAP8051               0x000118008094FB98  RSL
L2C_COP0_MAP8052               0x000118008094FBA0  RSL
L2C_COP0_MAP8053               0x000118008094FBA8  RSL
L2C_COP0_MAP8054               0x000118008094FBB0  RSL
L2C_COP0_MAP8055               0x000118008094FBB8  RSL
L2C_COP0_MAP8056               0x000118008094FBC0  RSL
L2C_COP0_MAP8057               0x000118008094FBC8  RSL
L2C_COP0_MAP8058               0x000118008094FBD0  RSL
L2C_COP0_MAP8059               0x000118008094FBD8  RSL
L2C_COP0_MAP8060               0x000118008094FBE0  RSL
L2C_COP0_MAP8061               0x000118008094FBE8  RSL
L2C_COP0_MAP8062               0x000118008094FBF0  RSL
L2C_COP0_MAP8063               0x000118008094FBF8  RSL
L2C_COP0_MAP8064               0x000118008094FC00  RSL
L2C_COP0_MAP8065               0x000118008094FC08  RSL
L2C_COP0_MAP8066               0x000118008094FC10  RSL
L2C_COP0_MAP8067               0x000118008094FC18  RSL
L2C_COP0_MAP8068               0x000118008094FC20  RSL
L2C_COP0_MAP8069               0x000118008094FC28  RSL
L2C_COP0_MAP8070               0x000118008094FC30  RSL
L2C_COP0_MAP8071               0x000118008094FC38  RSL
L2C_COP0_MAP8072               0x000118008094FC40  RSL
L2C_COP0_MAP8073               0x000118008094FC48  RSL
L2C_COP0_MAP8074               0x000118008094FC50  RSL
L2C_COP0_MAP8075               0x000118008094FC58  RSL
L2C_COP0_MAP8076               0x000118008094FC60  RSL
L2C_COP0_MAP8077               0x000118008094FC68  RSL
L2C_COP0_MAP8078               0x000118008094FC70  RSL
L2C_COP0_MAP8079               0x000118008094FC78  RSL
L2C_COP0_MAP8080               0x000118008094FC80  RSL
L2C_COP0_MAP8081               0x000118008094FC88  RSL
L2C_COP0_MAP8082               0x000118008094FC90  RSL
L2C_COP0_MAP8083               0x000118008094FC98  RSL
L2C_COP0_MAP8084               0x000118008094FCA0  RSL
L2C_COP0_MAP8085               0x000118008094FCA8  RSL
L2C_COP0_MAP8086               0x000118008094FCB0  RSL
L2C_COP0_MAP8087               0x000118008094FCB8  RSL
L2C_COP0_MAP8088               0x000118008094FCC0  RSL
L2C_COP0_MAP8089               0x000118008094FCC8  RSL
L2C_COP0_MAP8090               0x000118008094FCD0  RSL
L2C_COP0_MAP8091               0x000118008094FCD8  RSL
L2C_COP0_MAP8092               0x000118008094FCE0  RSL
L2C_COP0_MAP8093               0x000118008094FCE8  RSL
L2C_COP0_MAP8094               0x000118008094FCF0  RSL
L2C_COP0_MAP8095               0x000118008094FCF8  RSL
L2C_COP0_MAP8096               0x000118008094FD00  RSL
L2C_COP0_MAP8097               0x000118008094FD08  RSL
L2C_COP0_MAP8098               0x000118008094FD10  RSL
L2C_COP0_MAP8099               0x000118008094FD18  RSL
L2C_COP0_MAP8100               0x000118008094FD20  RSL
L2C_COP0_MAP8101               0x000118008094FD28  RSL
L2C_COP0_MAP8102               0x000118008094FD30  RSL
L2C_COP0_MAP8103               0x000118008094FD38  RSL
L2C_COP0_MAP8104               0x000118008094FD40  RSL
L2C_COP0_MAP8105               0x000118008094FD48  RSL
L2C_COP0_MAP8106               0x000118008094FD50  RSL
L2C_COP0_MAP8107               0x000118008094FD58  RSL
L2C_COP0_MAP8108               0x000118008094FD60  RSL
L2C_COP0_MAP8109               0x000118008094FD68  RSL
L2C_COP0_MAP8110               0x000118008094FD70  RSL
L2C_COP0_MAP8111               0x000118008094FD78  RSL
L2C_COP0_MAP8112               0x000118008094FD80  RSL
L2C_COP0_MAP8113               0x000118008094FD88  RSL
L2C_COP0_MAP8114               0x000118008094FD90  RSL
L2C_COP0_MAP8115               0x000118008094FD98  RSL
L2C_COP0_MAP8116               0x000118008094FDA0  RSL
L2C_COP0_MAP8117               0x000118008094FDA8  RSL
L2C_COP0_MAP8118               0x000118008094FDB0  RSL
L2C_COP0_MAP8119               0x000118008094FDB8  RSL
L2C_COP0_MAP8120               0x000118008094FDC0  RSL
L2C_COP0_MAP8121               0x000118008094FDC8  RSL
L2C_COP0_MAP8122               0x000118008094FDD0  RSL
L2C_COP0_MAP8123               0x000118008094FDD8  RSL
L2C_COP0_MAP8124               0x000118008094FDE0  RSL
L2C_COP0_MAP8125               0x000118008094FDE8  RSL
L2C_COP0_MAP8126               0x000118008094FDF0  RSL
L2C_COP0_MAP8127               0x000118008094FDF8  RSL
L2C_COP0_MAP8128               0x000118008094FE00  RSL
L2C_COP0_MAP8129               0x000118008094FE08  RSL
L2C_COP0_MAP8130               0x000118008094FE10  RSL
L2C_COP0_MAP8131               0x000118008094FE18  RSL
L2C_COP0_MAP8132               0x000118008094FE20  RSL
L2C_COP0_MAP8133               0x000118008094FE28  RSL
L2C_COP0_MAP8134               0x000118008094FE30  RSL
L2C_COP0_MAP8135               0x000118008094FE38  RSL
L2C_COP0_MAP8136               0x000118008094FE40  RSL
L2C_COP0_MAP8137               0x000118008094FE48  RSL
L2C_COP0_MAP8138               0x000118008094FE50  RSL
L2C_COP0_MAP8139               0x000118008094FE58  RSL
L2C_COP0_MAP8140               0x000118008094FE60  RSL
L2C_COP0_MAP8141               0x000118008094FE68  RSL
L2C_COP0_MAP8142               0x000118008094FE70  RSL
L2C_COP0_MAP8143               0x000118008094FE78  RSL
L2C_COP0_MAP8144               0x000118008094FE80  RSL
L2C_COP0_MAP8145               0x000118008094FE88  RSL
L2C_COP0_MAP8146               0x000118008094FE90  RSL
L2C_COP0_MAP8147               0x000118008094FE98  RSL
L2C_COP0_MAP8148               0x000118008094FEA0  RSL
L2C_COP0_MAP8149               0x000118008094FEA8  RSL
L2C_COP0_MAP8150               0x000118008094FEB0  RSL
L2C_COP0_MAP8151               0x000118008094FEB8  RSL
L2C_COP0_MAP8152               0x000118008094FEC0  RSL
L2C_COP0_MAP8153               0x000118008094FEC8  RSL
L2C_COP0_MAP8154               0x000118008094FED0  RSL
L2C_COP0_MAP8155               0x000118008094FED8  RSL
L2C_COP0_MAP8156               0x000118008094FEE0  RSL
L2C_COP0_MAP8157               0x000118008094FEE8  RSL
L2C_COP0_MAP8158               0x000118008094FEF0  RSL
L2C_COP0_MAP8159               0x000118008094FEF8  RSL
L2C_COP0_MAP8160               0x000118008094FF00  RSL
L2C_COP0_MAP8161               0x000118008094FF08  RSL
L2C_COP0_MAP8162               0x000118008094FF10  RSL
L2C_COP0_MAP8163               0x000118008094FF18  RSL
L2C_COP0_MAP8164               0x000118008094FF20  RSL
L2C_COP0_MAP8165               0x000118008094FF28  RSL
L2C_COP0_MAP8166               0x000118008094FF30  RSL
L2C_COP0_MAP8167               0x000118008094FF38  RSL
L2C_COP0_MAP8168               0x000118008094FF40  RSL
L2C_COP0_MAP8169               0x000118008094FF48  RSL
L2C_COP0_MAP8170               0x000118008094FF50  RSL
L2C_COP0_MAP8171               0x000118008094FF58  RSL
L2C_COP0_MAP8172               0x000118008094FF60  RSL
L2C_COP0_MAP8173               0x000118008094FF68  RSL
L2C_COP0_MAP8174               0x000118008094FF70  RSL
L2C_COP0_MAP8175               0x000118008094FF78  RSL
L2C_COP0_MAP8176               0x000118008094FF80  RSL
L2C_COP0_MAP8177               0x000118008094FF88  RSL
L2C_COP0_MAP8178               0x000118008094FF90  RSL
L2C_COP0_MAP8179               0x000118008094FF98  RSL
L2C_COP0_MAP8180               0x000118008094FFA0  RSL
L2C_COP0_MAP8181               0x000118008094FFA8  RSL
L2C_COP0_MAP8182               0x000118008094FFB0  RSL
L2C_COP0_MAP8183               0x000118008094FFB8  RSL
L2C_COP0_MAP8184               0x000118008094FFC0  RSL
L2C_COP0_MAP8185               0x000118008094FFC8  RSL
L2C_COP0_MAP8186               0x000118008094FFD0  RSL
L2C_COP0_MAP8187               0x000118008094FFD8  RSL
L2C_COP0_MAP8188               0x000118008094FFE0  RSL
L2C_COP0_MAP8189               0x000118008094FFE8  RSL
L2C_COP0_MAP8190               0x000118008094FFF0  RSL
L2C_COP0_MAP8191               0x000118008094FFF8  RSL
L2C_COP0_MAP16128              0x000118008095F800  RSL
L2C_COP0_MAP16129              0x000118008095F808  RSL
L2C_COP0_MAP16130              0x000118008095F810  RSL
L2C_COP0_MAP16131              0x000118008095F818  RSL
L2C_COP0_MAP16132              0x000118008095F820  RSL
L2C_COP0_MAP16133              0x000118008095F828  RSL
L2C_COP0_MAP16134              0x000118008095F830  RSL
L2C_COP0_MAP16135              0x000118008095F838  RSL
L2C_COP0_MAP16136              0x000118008095F840  RSL
L2C_COP0_MAP16137              0x000118008095F848  RSL
L2C_COP0_MAP16138              0x000118008095F850  RSL
L2C_COP0_MAP16139              0x000118008095F858  RSL
L2C_COP0_MAP16140              0x000118008095F860  RSL
L2C_COP0_MAP16141              0x000118008095F868  RSL
L2C_COP0_MAP16142              0x000118008095F870  RSL
L2C_COP0_MAP16143              0x000118008095F878  RSL
L2C_COP0_MAP16144              0x000118008095F880  RSL
L2C_COP0_MAP16145              0x000118008095F888  RSL
L2C_COP0_MAP16146              0x000118008095F890  RSL
L2C_COP0_MAP16147              0x000118008095F898  RSL
L2C_COP0_MAP16148              0x000118008095F8A0  RSL
L2C_COP0_MAP16149              0x000118008095F8A8  RSL
L2C_COP0_MAP16150              0x000118008095F8B0  RSL
L2C_COP0_MAP16151              0x000118008095F8B8  RSL
L2C_COP0_MAP16152              0x000118008095F8C0  RSL
L2C_COP0_MAP16153              0x000118008095F8C8  RSL
L2C_COP0_MAP16154              0x000118008095F8D0  RSL
L2C_COP0_MAP16155              0x000118008095F8D8  RSL
L2C_COP0_MAP16156              0x000118008095F8E0  RSL
L2C_COP0_MAP16157              0x000118008095F8E8  RSL
L2C_COP0_MAP16158              0x000118008095F8F0  RSL
L2C_COP0_MAP16159              0x000118008095F8F8  RSL
L2C_COP0_MAP16160              0x000118008095F900  RSL
L2C_COP0_MAP16161              0x000118008095F908  RSL
L2C_COP0_MAP16162              0x000118008095F910  RSL
L2C_COP0_MAP16163              0x000118008095F918  RSL
L2C_COP0_MAP16164              0x000118008095F920  RSL
L2C_COP0_MAP16165              0x000118008095F928  RSL
L2C_COP0_MAP16166              0x000118008095F930  RSL
L2C_COP0_MAP16167              0x000118008095F938  RSL
L2C_COP0_MAP16168              0x000118008095F940  RSL
L2C_COP0_MAP16169              0x000118008095F948  RSL
L2C_COP0_MAP16170              0x000118008095F950  RSL
L2C_COP0_MAP16171              0x000118008095F958  RSL
L2C_COP0_MAP16172              0x000118008095F960  RSL
L2C_COP0_MAP16173              0x000118008095F968  RSL
L2C_COP0_MAP16174              0x000118008095F970  RSL
L2C_COP0_MAP16175              0x000118008095F978  RSL
L2C_COP0_MAP16176              0x000118008095F980  RSL
L2C_COP0_MAP16177              0x000118008095F988  RSL
L2C_COP0_MAP16178              0x000118008095F990  RSL
L2C_COP0_MAP16179              0x000118008095F998  RSL
L2C_COP0_MAP16180              0x000118008095F9A0  RSL
L2C_COP0_MAP16181              0x000118008095F9A8  RSL
L2C_COP0_MAP16182              0x000118008095F9B0  RSL
L2C_COP0_MAP16183              0x000118008095F9B8  RSL
L2C_COP0_MAP16184              0x000118008095F9C0  RSL
L2C_COP0_MAP16185              0x000118008095F9C8  RSL
L2C_COP0_MAP16186              0x000118008095F9D0  RSL
L2C_COP0_MAP16187              0x000118008095F9D8  RSL
L2C_COP0_MAP16188              0x000118008095F9E0  RSL
L2C_COP0_MAP16189              0x000118008095F9E8  RSL
L2C_COP0_MAP16190              0x000118008095F9F0  RSL
L2C_COP0_MAP16191              0x000118008095F9F8  RSL
L2C_COP0_MAP16192              0x000118008095FA00  RSL
L2C_COP0_MAP16193              0x000118008095FA08  RSL
L2C_COP0_MAP16194              0x000118008095FA10  RSL
L2C_COP0_MAP16195              0x000118008095FA18  RSL
L2C_COP0_MAP16196              0x000118008095FA20  RSL
L2C_COP0_MAP16197              0x000118008095FA28  RSL
L2C_COP0_MAP16198              0x000118008095FA30  RSL
L2C_COP0_MAP16199              0x000118008095FA38  RSL
L2C_COP0_MAP16200              0x000118008095FA40  RSL
L2C_COP0_MAP16201              0x000118008095FA48  RSL
L2C_COP0_MAP16202              0x000118008095FA50  RSL
L2C_COP0_MAP16203              0x000118008095FA58  RSL
L2C_COP0_MAP16204              0x000118008095FA60  RSL
L2C_COP0_MAP16205              0x000118008095FA68  RSL
L2C_COP0_MAP16206              0x000118008095FA70  RSL
L2C_COP0_MAP16207              0x000118008095FA78  RSL
L2C_COP0_MAP16208              0x000118008095FA80  RSL
L2C_COP0_MAP16209              0x000118008095FA88  RSL
L2C_COP0_MAP16210              0x000118008095FA90  RSL
L2C_COP0_MAP16211              0x000118008095FA98  RSL
L2C_COP0_MAP16212              0x000118008095FAA0  RSL
L2C_COP0_MAP16213              0x000118008095FAA8  RSL
L2C_COP0_MAP16214              0x000118008095FAB0  RSL
L2C_COP0_MAP16215              0x000118008095FAB8  RSL
L2C_COP0_MAP16216              0x000118008095FAC0  RSL
L2C_COP0_MAP16217              0x000118008095FAC8  RSL
L2C_COP0_MAP16218              0x000118008095FAD0  RSL
L2C_COP0_MAP16219              0x000118008095FAD8  RSL
L2C_COP0_MAP16220              0x000118008095FAE0  RSL
L2C_COP0_MAP16221              0x000118008095FAE8  RSL
L2C_COP0_MAP16222              0x000118008095FAF0  RSL
L2C_COP0_MAP16223              0x000118008095FAF8  RSL
L2C_COP0_MAP16224              0x000118008095FB00  RSL
L2C_COP0_MAP16225              0x000118008095FB08  RSL
L2C_COP0_MAP16226              0x000118008095FB10  RSL
L2C_COP0_MAP16227              0x000118008095FB18  RSL
L2C_COP0_MAP16228              0x000118008095FB20  RSL
L2C_COP0_MAP16229              0x000118008095FB28  RSL
L2C_COP0_MAP16230              0x000118008095FB30  RSL
L2C_COP0_MAP16231              0x000118008095FB38  RSL
L2C_COP0_MAP16232              0x000118008095FB40  RSL
L2C_COP0_MAP16233              0x000118008095FB48  RSL
L2C_COP0_MAP16234              0x000118008095FB50  RSL
L2C_COP0_MAP16235              0x000118008095FB58  RSL
L2C_COP0_MAP16236              0x000118008095FB60  RSL
L2C_COP0_MAP16237              0x000118008095FB68  RSL
L2C_COP0_MAP16238              0x000118008095FB70  RSL
L2C_COP0_MAP16239              0x000118008095FB78  RSL
L2C_COP0_MAP16240              0x000118008095FB80  RSL
L2C_COP0_MAP16241              0x000118008095FB88  RSL
L2C_COP0_MAP16242              0x000118008095FB90  RSL
L2C_COP0_MAP16243              0x000118008095FB98  RSL
L2C_COP0_MAP16244              0x000118008095FBA0  RSL
L2C_COP0_MAP16245              0x000118008095FBA8  RSL
L2C_COP0_MAP16246              0x000118008095FBB0  RSL
L2C_COP0_MAP16247              0x000118008095FBB8  RSL
L2C_COP0_MAP16248              0x000118008095FBC0  RSL
L2C_COP0_MAP16249              0x000118008095FBC8  RSL
L2C_COP0_MAP16250              0x000118008095FBD0  RSL
L2C_COP0_MAP16251              0x000118008095FBD8  RSL
L2C_COP0_MAP16252              0x000118008095FBE0  RSL
L2C_COP0_MAP16253              0x000118008095FBE8  RSL
L2C_COP0_MAP16254              0x000118008095FBF0  RSL
L2C_COP0_MAP16255              0x000118008095FBF8  RSL
L2C_COP0_MAP16256              0x000118008095FC00  RSL
L2C_COP0_MAP16257              0x000118008095FC08  RSL
L2C_COP0_MAP16258              0x000118008095FC10  RSL
L2C_COP0_MAP16259              0x000118008095FC18  RSL
L2C_COP0_MAP16260              0x000118008095FC20  RSL
L2C_COP0_MAP16261              0x000118008095FC28  RSL
L2C_COP0_MAP16262              0x000118008095FC30  RSL
L2C_COP0_MAP16263              0x000118008095FC38  RSL
L2C_COP0_MAP16264              0x000118008095FC40  RSL
L2C_COP0_MAP16265              0x000118008095FC48  RSL
L2C_COP0_MAP16266              0x000118008095FC50  RSL
L2C_COP0_MAP16267              0x000118008095FC58  RSL
L2C_COP0_MAP16268              0x000118008095FC60  RSL
L2C_COP0_MAP16269              0x000118008095FC68  RSL
L2C_COP0_MAP16270              0x000118008095FC70  RSL
L2C_COP0_MAP16271              0x000118008095FC78  RSL
L2C_COP0_MAP16272              0x000118008095FC80  RSL
L2C_COP0_MAP16273              0x000118008095FC88  RSL
L2C_COP0_MAP16274              0x000118008095FC90  RSL
L2C_COP0_MAP16275              0x000118008095FC98  RSL
L2C_COP0_MAP16276              0x000118008095FCA0  RSL
L2C_COP0_MAP16277              0x000118008095FCA8  RSL
L2C_COP0_MAP16278              0x000118008095FCB0  RSL
L2C_COP0_MAP16279              0x000118008095FCB8  RSL
L2C_COP0_MAP16280              0x000118008095FCC0  RSL
L2C_COP0_MAP16281              0x000118008095FCC8  RSL
L2C_COP0_MAP16282              0x000118008095FCD0  RSL
L2C_COP0_MAP16283              0x000118008095FCD8  RSL
L2C_COP0_MAP16284              0x000118008095FCE0  RSL
L2C_COP0_MAP16285              0x000118008095FCE8  RSL
L2C_COP0_MAP16286              0x000118008095FCF0  RSL
L2C_COP0_MAP16287              0x000118008095FCF8  RSL
L2C_COP0_MAP16288              0x000118008095FD00  RSL
L2C_COP0_MAP16289              0x000118008095FD08  RSL
L2C_COP0_MAP16290              0x000118008095FD10  RSL
L2C_COP0_MAP16291              0x000118008095FD18  RSL
L2C_COP0_MAP16292              0x000118008095FD20  RSL
L2C_COP0_MAP16293              0x000118008095FD28  RSL
L2C_COP0_MAP16294              0x000118008095FD30  RSL
L2C_COP0_MAP16295              0x000118008095FD38  RSL
L2C_COP0_MAP16296              0x000118008095FD40  RSL
L2C_COP0_MAP16297              0x000118008095FD48  RSL
L2C_COP0_MAP16298              0x000118008095FD50  RSL
L2C_COP0_MAP16299              0x000118008095FD58  RSL
L2C_COP0_MAP16300              0x000118008095FD60  RSL
L2C_COP0_MAP16301              0x000118008095FD68  RSL
L2C_COP0_MAP16302              0x000118008095FD70  RSL
L2C_COP0_MAP16303              0x000118008095FD78  RSL
L2C_COP0_MAP16304              0x000118008095FD80  RSL
L2C_COP0_MAP16305              0x000118008095FD88  RSL
L2C_COP0_MAP16306              0x000118008095FD90  RSL
L2C_COP0_MAP16307              0x000118008095FD98  RSL
L2C_COP0_MAP16308              0x000118008095FDA0  RSL
L2C_COP0_MAP16309              0x000118008095FDA8  RSL
L2C_COP0_MAP16310              0x000118008095FDB0  RSL
L2C_COP0_MAP16311              0x000118008095FDB8  RSL
L2C_COP0_MAP16312              0x000118008095FDC0  RSL
L2C_COP0_MAP16313              0x000118008095FDC8  RSL
L2C_COP0_MAP16314              0x000118008095FDD0  RSL
L2C_COP0_MAP16315              0x000118008095FDD8  RSL
L2C_COP0_MAP16316              0x000118008095FDE0  RSL
L2C_COP0_MAP16317              0x000118008095FDE8  RSL
L2C_COP0_MAP16318              0x000118008095FDF0  RSL
L2C_COP0_MAP16319              0x000118008095FDF8  RSL
L2C_COP0_MAP16320              0x000118008095FE00  RSL
L2C_COP0_MAP16321              0x000118008095FE08  RSL
L2C_COP0_MAP16322              0x000118008095FE10  RSL
L2C_COP0_MAP16323              0x000118008095FE18  RSL
L2C_COP0_MAP16324              0x000118008095FE20  RSL
L2C_COP0_MAP16325              0x000118008095FE28  RSL
L2C_COP0_MAP16326              0x000118008095FE30  RSL
L2C_COP0_MAP16327              0x000118008095FE38  RSL
L2C_COP0_MAP16328              0x000118008095FE40  RSL
L2C_COP0_MAP16329              0x000118008095FE48  RSL
L2C_COP0_MAP16330              0x000118008095FE50  RSL
L2C_COP0_MAP16331              0x000118008095FE58  RSL
L2C_COP0_MAP16332              0x000118008095FE60  RSL
L2C_COP0_MAP16333              0x000118008095FE68  RSL
L2C_COP0_MAP16334              0x000118008095FE70  RSL
L2C_COP0_MAP16335              0x000118008095FE78  RSL
L2C_COP0_MAP16336              0x000118008095FE80  RSL
L2C_COP0_MAP16337              0x000118008095FE88  RSL
L2C_COP0_MAP16338              0x000118008095FE90  RSL
L2C_COP0_MAP16339              0x000118008095FE98  RSL
L2C_COP0_MAP16340              0x000118008095FEA0  RSL
L2C_COP0_MAP16341              0x000118008095FEA8  RSL
L2C_COP0_MAP16342              0x000118008095FEB0  RSL
L2C_COP0_MAP16343              0x000118008095FEB8  RSL
L2C_COP0_MAP16344              0x000118008095FEC0  RSL
L2C_COP0_MAP16345              0x000118008095FEC8  RSL
L2C_COP0_MAP16346              0x000118008095FED0  RSL
L2C_COP0_MAP16347              0x000118008095FED8  RSL
L2C_COP0_MAP16348              0x000118008095FEE0  RSL
L2C_COP0_MAP16349              0x000118008095FEE8  RSL
L2C_COP0_MAP16350              0x000118008095FEF0  RSL
L2C_COP0_MAP16351              0x000118008095FEF8  RSL
L2C_COP0_MAP16352              0x000118008095FF00  RSL
L2C_COP0_MAP16353              0x000118008095FF08  RSL
L2C_COP0_MAP16354              0x000118008095FF10  RSL
L2C_COP0_MAP16355              0x000118008095FF18  RSL
L2C_COP0_MAP16356              0x000118008095FF20  RSL
L2C_COP0_MAP16357              0x000118008095FF28  RSL
L2C_COP0_MAP16358              0x000118008095FF30  RSL
L2C_COP0_MAP16359              0x000118008095FF38  RSL
L2C_COP0_MAP16360              0x000118008095FF40  RSL
L2C_COP0_MAP16361              0x000118008095FF48  RSL
L2C_COP0_MAP16362              0x000118008095FF50  RSL
L2C_COP0_MAP16363              0x000118008095FF58  RSL
L2C_COP0_MAP16364              0x000118008095FF60  RSL
L2C_COP0_MAP16365              0x000118008095FF68  RSL
L2C_COP0_MAP16366              0x000118008095FF70  RSL
L2C_COP0_MAP16367              0x000118008095FF78  RSL
L2C_COP0_MAP16368              0x000118008095FF80  RSL
L2C_COP0_MAP16369              0x000118008095FF88  RSL
L2C_COP0_MAP16370              0x000118008095FF90  RSL
L2C_COP0_MAP16371              0x000118008095FF98  RSL
L2C_COP0_MAP16372              0x000118008095FFA0  RSL
L2C_COP0_MAP16373              0x000118008095FFA8  RSL
L2C_COP0_MAP16374              0x000118008095FFB0  RSL
L2C_COP0_MAP16375              0x000118008095FFB8  RSL
L2C_COP0_MAP16376              0x000118008095FFC0  RSL
L2C_COP0_MAP16377              0x000118008095FFC8  RSL
L2C_COP0_MAP16378              0x000118008095FFD0  RSL
L2C_COP0_MAP16379              0x000118008095FFD8  RSL
L2C_COP0_MAP16380              0x000118008095FFE0  RSL
L2C_COP0_MAP16381              0x000118008095FFE8  RSL
L2C_COP0_MAP16382              0x000118008095FFF0  RSL
L2C_COP0_MAP16383              0x000118008095FFF8  RSL
L2C_CTL                        0x0001180080800000  RSL
L2C_DUT_MAP0                   0x0001180080E00000  RSL
L2C_DUT_MAP1                   0x0001180080E00008  RSL
L2C_DUT_MAP2                   0x0001180080E00010  RSL
L2C_DUT_MAP3                   0x0001180080E00018  RSL
L2C_DUT_MAP4                   0x0001180080E00020  RSL
L2C_DUT_MAP5                   0x0001180080E00028  RSL
L2C_DUT_MAP6                   0x0001180080E00030  RSL
L2C_DUT_MAP7                   0x0001180080E00038  RSL
L2C_DUT_MAP8                   0x0001180080E00040  RSL
L2C_DUT_MAP9                   0x0001180080E00048  RSL
L2C_DUT_MAP10                  0x0001180080E00050  RSL
L2C_DUT_MAP11                  0x0001180080E00058  RSL
L2C_DUT_MAP12                  0x0001180080E00060  RSL
L2C_DUT_MAP13                  0x0001180080E00068  RSL
L2C_DUT_MAP14                  0x0001180080E00070  RSL
L2C_DUT_MAP15                  0x0001180080E00078  RSL
L2C_DUT_MAP16                  0x0001180080E00080  RSL
L2C_DUT_MAP17                  0x0001180080E00088  RSL
L2C_DUT_MAP18                  0x0001180080E00090  RSL
L2C_DUT_MAP19                  0x0001180080E00098  RSL
L2C_DUT_MAP20                  0x0001180080E000A0  RSL
L2C_DUT_MAP21                  0x0001180080E000A8  RSL
L2C_DUT_MAP22                  0x0001180080E000B0  RSL
L2C_DUT_MAP23                  0x0001180080E000B8  RSL
L2C_DUT_MAP24                  0x0001180080E000C0  RSL
L2C_DUT_MAP25                  0x0001180080E000C8  RSL
L2C_DUT_MAP26                  0x0001180080E000D0  RSL
L2C_DUT_MAP27                  0x0001180080E000D8  RSL
L2C_DUT_MAP28                  0x0001180080E000E0  RSL
L2C_DUT_MAP29                  0x0001180080E000E8  RSL
L2C_DUT_MAP30                  0x0001180080E000F0  RSL
L2C_DUT_MAP31                  0x0001180080E000F8  RSL
L2C_DUT_MAP32                  0x0001180080E00100  RSL
L2C_DUT_MAP33                  0x0001180080E00108  RSL
L2C_DUT_MAP34                  0x0001180080E00110  RSL
L2C_DUT_MAP35                  0x0001180080E00118  RSL
L2C_DUT_MAP36                  0x0001180080E00120  RSL
L2C_DUT_MAP37                  0x0001180080E00128  RSL
L2C_DUT_MAP38                  0x0001180080E00130  RSL
L2C_DUT_MAP39                  0x0001180080E00138  RSL
L2C_DUT_MAP40                  0x0001180080E00140  RSL
L2C_DUT_MAP41                  0x0001180080E00148  RSL
L2C_DUT_MAP42                  0x0001180080E00150  RSL
L2C_DUT_MAP43                  0x0001180080E00158  RSL
L2C_DUT_MAP44                  0x0001180080E00160  RSL
L2C_DUT_MAP45                  0x0001180080E00168  RSL
L2C_DUT_MAP46                  0x0001180080E00170  RSL
L2C_DUT_MAP47                  0x0001180080E00178  RSL
L2C_DUT_MAP48                  0x0001180080E00180  RSL
L2C_DUT_MAP49                  0x0001180080E00188  RSL
L2C_DUT_MAP50                  0x0001180080E00190  RSL
L2C_DUT_MAP51                  0x0001180080E00198  RSL
L2C_DUT_MAP52                  0x0001180080E001A0  RSL
L2C_DUT_MAP53                  0x0001180080E001A8  RSL
L2C_DUT_MAP54                  0x0001180080E001B0  RSL
L2C_DUT_MAP55                  0x0001180080E001B8  RSL
L2C_DUT_MAP56                  0x0001180080E001C0  RSL
L2C_DUT_MAP57                  0x0001180080E001C8  RSL
L2C_DUT_MAP58                  0x0001180080E001D0  RSL
L2C_DUT_MAP59                  0x0001180080E001D8  RSL
L2C_DUT_MAP60                  0x0001180080E001E0  RSL
L2C_DUT_MAP61                  0x0001180080E001E8  RSL
L2C_DUT_MAP62                  0x0001180080E001F0  RSL
L2C_DUT_MAP63                  0x0001180080E001F8  RSL
L2C_DUT_MAP64                  0x0001180080E00200  RSL
L2C_DUT_MAP65                  0x0001180080E00208  RSL
L2C_DUT_MAP66                  0x0001180080E00210  RSL
L2C_DUT_MAP67                  0x0001180080E00218  RSL
L2C_DUT_MAP68                  0x0001180080E00220  RSL
L2C_DUT_MAP69                  0x0001180080E00228  RSL
L2C_DUT_MAP70                  0x0001180080E00230  RSL
L2C_DUT_MAP71                  0x0001180080E00238  RSL
L2C_DUT_MAP72                  0x0001180080E00240  RSL
L2C_DUT_MAP73                  0x0001180080E00248  RSL
L2C_DUT_MAP74                  0x0001180080E00250  RSL
L2C_DUT_MAP75                  0x0001180080E00258  RSL
L2C_DUT_MAP76                  0x0001180080E00260  RSL
L2C_DUT_MAP77                  0x0001180080E00268  RSL
L2C_DUT_MAP78                  0x0001180080E00270  RSL
L2C_DUT_MAP79                  0x0001180080E00278  RSL
L2C_DUT_MAP80                  0x0001180080E00280  RSL
L2C_DUT_MAP81                  0x0001180080E00288  RSL
L2C_DUT_MAP82                  0x0001180080E00290  RSL
L2C_DUT_MAP83                  0x0001180080E00298  RSL
L2C_DUT_MAP84                  0x0001180080E002A0  RSL
L2C_DUT_MAP85                  0x0001180080E002A8  RSL
L2C_DUT_MAP86                  0x0001180080E002B0  RSL
L2C_DUT_MAP87                  0x0001180080E002B8  RSL
L2C_DUT_MAP88                  0x0001180080E002C0  RSL
L2C_DUT_MAP89                  0x0001180080E002C8  RSL
L2C_DUT_MAP90                  0x0001180080E002D0  RSL
L2C_DUT_MAP91                  0x0001180080E002D8  RSL
L2C_DUT_MAP92                  0x0001180080E002E0  RSL
L2C_DUT_MAP93                  0x0001180080E002E8  RSL
L2C_DUT_MAP94                  0x0001180080E002F0  RSL
L2C_DUT_MAP95                  0x0001180080E002F8  RSL
L2C_DUT_MAP96                  0x0001180080E00300  RSL
L2C_DUT_MAP97                  0x0001180080E00308  RSL
L2C_DUT_MAP98                  0x0001180080E00310  RSL
L2C_DUT_MAP99                  0x0001180080E00318  RSL
L2C_DUT_MAP100                 0x0001180080E00320  RSL
L2C_DUT_MAP101                 0x0001180080E00328  RSL
L2C_DUT_MAP102                 0x0001180080E00330  RSL
L2C_DUT_MAP103                 0x0001180080E00338  RSL
L2C_DUT_MAP104                 0x0001180080E00340  RSL
L2C_DUT_MAP105                 0x0001180080E00348  RSL
L2C_DUT_MAP106                 0x0001180080E00350  RSL
L2C_DUT_MAP107                 0x0001180080E00358  RSL
L2C_DUT_MAP108                 0x0001180080E00360  RSL
L2C_DUT_MAP109                 0x0001180080E00368  RSL
L2C_DUT_MAP110                 0x0001180080E00370  RSL
L2C_DUT_MAP111                 0x0001180080E00378  RSL
L2C_DUT_MAP112                 0x0001180080E00380  RSL
L2C_DUT_MAP113                 0x0001180080E00388  RSL
L2C_DUT_MAP114                 0x0001180080E00390  RSL
L2C_DUT_MAP115                 0x0001180080E00398  RSL
L2C_DUT_MAP116                 0x0001180080E003A0  RSL
L2C_DUT_MAP117                 0x0001180080E003A8  RSL
L2C_DUT_MAP118                 0x0001180080E003B0  RSL
L2C_DUT_MAP119                 0x0001180080E003B8  RSL
L2C_DUT_MAP120                 0x0001180080E003C0  RSL
L2C_DUT_MAP121                 0x0001180080E003C8  RSL
L2C_DUT_MAP122                 0x0001180080E003D0  RSL
L2C_DUT_MAP123                 0x0001180080E003D8  RSL
L2C_DUT_MAP124                 0x0001180080E003E0  RSL
L2C_DUT_MAP125                 0x0001180080E003E8  RSL
L2C_DUT_MAP126                 0x0001180080E003F0  RSL
L2C_DUT_MAP127                 0x0001180080E003F8  RSL
L2C_DUT_MAP128                 0x0001180080E00400  RSL
L2C_DUT_MAP129                 0x0001180080E00408  RSL
L2C_DUT_MAP130                 0x0001180080E00410  RSL
L2C_DUT_MAP131                 0x0001180080E00418  RSL
L2C_DUT_MAP132                 0x0001180080E00420  RSL
L2C_DUT_MAP133                 0x0001180080E00428  RSL
L2C_DUT_MAP134                 0x0001180080E00430  RSL
L2C_DUT_MAP135                 0x0001180080E00438  RSL
L2C_DUT_MAP136                 0x0001180080E00440  RSL
L2C_DUT_MAP137                 0x0001180080E00448  RSL
L2C_DUT_MAP138                 0x0001180080E00450  RSL
L2C_DUT_MAP139                 0x0001180080E00458  RSL
L2C_DUT_MAP140                 0x0001180080E00460  RSL
L2C_DUT_MAP141                 0x0001180080E00468  RSL
L2C_DUT_MAP142                 0x0001180080E00470  RSL
L2C_DUT_MAP143                 0x0001180080E00478  RSL
L2C_DUT_MAP144                 0x0001180080E00480  RSL
L2C_DUT_MAP145                 0x0001180080E00488  RSL
L2C_DUT_MAP146                 0x0001180080E00490  RSL
L2C_DUT_MAP147                 0x0001180080E00498  RSL
L2C_DUT_MAP148                 0x0001180080E004A0  RSL
L2C_DUT_MAP149                 0x0001180080E004A8  RSL
L2C_DUT_MAP150                 0x0001180080E004B0  RSL
L2C_DUT_MAP151                 0x0001180080E004B8  RSL
L2C_DUT_MAP152                 0x0001180080E004C0  RSL
L2C_DUT_MAP153                 0x0001180080E004C8  RSL
L2C_DUT_MAP154                 0x0001180080E004D0  RSL
L2C_DUT_MAP155                 0x0001180080E004D8  RSL
L2C_DUT_MAP156                 0x0001180080E004E0  RSL
L2C_DUT_MAP157                 0x0001180080E004E8  RSL
L2C_DUT_MAP158                 0x0001180080E004F0  RSL
L2C_DUT_MAP159                 0x0001180080E004F8  RSL
L2C_DUT_MAP160                 0x0001180080E00500  RSL
L2C_DUT_MAP161                 0x0001180080E00508  RSL
L2C_DUT_MAP162                 0x0001180080E00510  RSL
L2C_DUT_MAP163                 0x0001180080E00518  RSL
L2C_DUT_MAP164                 0x0001180080E00520  RSL
L2C_DUT_MAP165                 0x0001180080E00528  RSL
L2C_DUT_MAP166                 0x0001180080E00530  RSL
L2C_DUT_MAP167                 0x0001180080E00538  RSL
L2C_DUT_MAP168                 0x0001180080E00540  RSL
L2C_DUT_MAP169                 0x0001180080E00548  RSL
L2C_DUT_MAP170                 0x0001180080E00550  RSL
L2C_DUT_MAP171                 0x0001180080E00558  RSL
L2C_DUT_MAP172                 0x0001180080E00560  RSL
L2C_DUT_MAP173                 0x0001180080E00568  RSL
L2C_DUT_MAP174                 0x0001180080E00570  RSL
L2C_DUT_MAP175                 0x0001180080E00578  RSL
L2C_DUT_MAP176                 0x0001180080E00580  RSL
L2C_DUT_MAP177                 0x0001180080E00588  RSL
L2C_DUT_MAP178                 0x0001180080E00590  RSL
L2C_DUT_MAP179                 0x0001180080E00598  RSL
L2C_DUT_MAP180                 0x0001180080E005A0  RSL
L2C_DUT_MAP181                 0x0001180080E005A8  RSL
L2C_DUT_MAP182                 0x0001180080E005B0  RSL
L2C_DUT_MAP183                 0x0001180080E005B8  RSL
L2C_DUT_MAP184                 0x0001180080E005C0  RSL
L2C_DUT_MAP185                 0x0001180080E005C8  RSL
L2C_DUT_MAP186                 0x0001180080E005D0  RSL
L2C_DUT_MAP187                 0x0001180080E005D8  RSL
L2C_DUT_MAP188                 0x0001180080E005E0  RSL
L2C_DUT_MAP189                 0x0001180080E005E8  RSL
L2C_DUT_MAP190                 0x0001180080E005F0  RSL
L2C_DUT_MAP191                 0x0001180080E005F8  RSL
L2C_DUT_MAP192                 0x0001180080E00600  RSL
L2C_DUT_MAP193                 0x0001180080E00608  RSL
L2C_DUT_MAP194                 0x0001180080E00610  RSL
L2C_DUT_MAP195                 0x0001180080E00618  RSL
L2C_DUT_MAP196                 0x0001180080E00620  RSL
L2C_DUT_MAP197                 0x0001180080E00628  RSL
L2C_DUT_MAP198                 0x0001180080E00630  RSL
L2C_DUT_MAP199                 0x0001180080E00638  RSL
L2C_DUT_MAP200                 0x0001180080E00640  RSL
L2C_DUT_MAP201                 0x0001180080E00648  RSL
L2C_DUT_MAP202                 0x0001180080E00650  RSL
L2C_DUT_MAP203                 0x0001180080E00658  RSL
L2C_DUT_MAP204                 0x0001180080E00660  RSL
L2C_DUT_MAP205                 0x0001180080E00668  RSL
L2C_DUT_MAP206                 0x0001180080E00670  RSL
L2C_DUT_MAP207                 0x0001180080E00678  RSL
L2C_DUT_MAP208                 0x0001180080E00680  RSL
L2C_DUT_MAP209                 0x0001180080E00688  RSL
L2C_DUT_MAP210                 0x0001180080E00690  RSL
L2C_DUT_MAP211                 0x0001180080E00698  RSL
L2C_DUT_MAP212                 0x0001180080E006A0  RSL
L2C_DUT_MAP213                 0x0001180080E006A8  RSL
L2C_DUT_MAP214                 0x0001180080E006B0  RSL
L2C_DUT_MAP215                 0x0001180080E006B8  RSL
L2C_DUT_MAP216                 0x0001180080E006C0  RSL
L2C_DUT_MAP217                 0x0001180080E006C8  RSL
L2C_DUT_MAP218                 0x0001180080E006D0  RSL
L2C_DUT_MAP219                 0x0001180080E006D8  RSL
L2C_DUT_MAP220                 0x0001180080E006E0  RSL
L2C_DUT_MAP221                 0x0001180080E006E8  RSL
L2C_DUT_MAP222                 0x0001180080E006F0  RSL
L2C_DUT_MAP223                 0x0001180080E006F8  RSL
L2C_DUT_MAP224                 0x0001180080E00700  RSL
L2C_DUT_MAP225                 0x0001180080E00708  RSL
L2C_DUT_MAP226                 0x0001180080E00710  RSL
L2C_DUT_MAP227                 0x0001180080E00718  RSL
L2C_DUT_MAP228                 0x0001180080E00720  RSL
L2C_DUT_MAP229                 0x0001180080E00728  RSL
L2C_DUT_MAP230                 0x0001180080E00730  RSL
L2C_DUT_MAP231                 0x0001180080E00738  RSL
L2C_DUT_MAP232                 0x0001180080E00740  RSL
L2C_DUT_MAP233                 0x0001180080E00748  RSL
L2C_DUT_MAP234                 0x0001180080E00750  RSL
L2C_DUT_MAP235                 0x0001180080E00758  RSL
L2C_DUT_MAP236                 0x0001180080E00760  RSL
L2C_DUT_MAP237                 0x0001180080E00768  RSL
L2C_DUT_MAP238                 0x0001180080E00770  RSL
L2C_DUT_MAP239                 0x0001180080E00778  RSL
L2C_DUT_MAP240                 0x0001180080E00780  RSL
L2C_DUT_MAP241                 0x0001180080E00788  RSL
L2C_DUT_MAP242                 0x0001180080E00790  RSL
L2C_DUT_MAP243                 0x0001180080E00798  RSL
L2C_DUT_MAP244                 0x0001180080E007A0  RSL
L2C_DUT_MAP245                 0x0001180080E007A8  RSL
L2C_DUT_MAP246                 0x0001180080E007B0  RSL
L2C_DUT_MAP247                 0x0001180080E007B8  RSL
L2C_DUT_MAP248                 0x0001180080E007C0  RSL
L2C_DUT_MAP249                 0x0001180080E007C8  RSL
L2C_DUT_MAP250                 0x0001180080E007D0  RSL
L2C_DUT_MAP251                 0x0001180080E007D8  RSL
L2C_DUT_MAP252                 0x0001180080E007E0  RSL
L2C_DUT_MAP253                 0x0001180080E007E8  RSL
L2C_DUT_MAP254                 0x0001180080E007F0  RSL
L2C_DUT_MAP255                 0x0001180080E007F8  RSL
L2C_DUT_MAP256                 0x0001180080E00800  RSL
L2C_DUT_MAP257                 0x0001180080E00808  RSL
L2C_DUT_MAP258                 0x0001180080E00810  RSL
L2C_DUT_MAP259                 0x0001180080E00818  RSL
L2C_DUT_MAP260                 0x0001180080E00820  RSL
L2C_DUT_MAP261                 0x0001180080E00828  RSL
L2C_DUT_MAP262                 0x0001180080E00830  RSL
L2C_DUT_MAP263                 0x0001180080E00838  RSL
L2C_DUT_MAP264                 0x0001180080E00840  RSL
L2C_DUT_MAP265                 0x0001180080E00848  RSL
L2C_DUT_MAP266                 0x0001180080E00850  RSL
L2C_DUT_MAP267                 0x0001180080E00858  RSL
L2C_DUT_MAP268                 0x0001180080E00860  RSL
L2C_DUT_MAP269                 0x0001180080E00868  RSL
L2C_DUT_MAP270                 0x0001180080E00870  RSL
L2C_DUT_MAP271                 0x0001180080E00878  RSL
L2C_DUT_MAP272                 0x0001180080E00880  RSL
L2C_DUT_MAP273                 0x0001180080E00888  RSL
L2C_DUT_MAP274                 0x0001180080E00890  RSL
L2C_DUT_MAP275                 0x0001180080E00898  RSL
L2C_DUT_MAP276                 0x0001180080E008A0  RSL
L2C_DUT_MAP277                 0x0001180080E008A8  RSL
L2C_DUT_MAP278                 0x0001180080E008B0  RSL
L2C_DUT_MAP279                 0x0001180080E008B8  RSL
L2C_DUT_MAP280                 0x0001180080E008C0  RSL
L2C_DUT_MAP281                 0x0001180080E008C8  RSL
L2C_DUT_MAP282                 0x0001180080E008D0  RSL
L2C_DUT_MAP283                 0x0001180080E008D8  RSL
L2C_DUT_MAP284                 0x0001180080E008E0  RSL
L2C_DUT_MAP285                 0x0001180080E008E8  RSL
L2C_DUT_MAP286                 0x0001180080E008F0  RSL
L2C_DUT_MAP287                 0x0001180080E008F8  RSL
L2C_DUT_MAP288                 0x0001180080E00900  RSL
L2C_DUT_MAP289                 0x0001180080E00908  RSL
L2C_DUT_MAP290                 0x0001180080E00910  RSL
L2C_DUT_MAP291                 0x0001180080E00918  RSL
L2C_DUT_MAP292                 0x0001180080E00920  RSL
L2C_DUT_MAP293                 0x0001180080E00928  RSL
L2C_DUT_MAP294                 0x0001180080E00930  RSL
L2C_DUT_MAP295                 0x0001180080E00938  RSL
L2C_DUT_MAP296                 0x0001180080E00940  RSL
L2C_DUT_MAP297                 0x0001180080E00948  RSL
L2C_DUT_MAP298                 0x0001180080E00950  RSL
L2C_DUT_MAP299                 0x0001180080E00958  RSL
L2C_DUT_MAP300                 0x0001180080E00960  RSL
L2C_DUT_MAP301                 0x0001180080E00968  RSL
L2C_DUT_MAP302                 0x0001180080E00970  RSL
L2C_DUT_MAP303                 0x0001180080E00978  RSL
L2C_DUT_MAP304                 0x0001180080E00980  RSL
L2C_DUT_MAP305                 0x0001180080E00988  RSL
L2C_DUT_MAP306                 0x0001180080E00990  RSL
L2C_DUT_MAP307                 0x0001180080E00998  RSL
L2C_DUT_MAP308                 0x0001180080E009A0  RSL
L2C_DUT_MAP309                 0x0001180080E009A8  RSL
L2C_DUT_MAP310                 0x0001180080E009B0  RSL
L2C_DUT_MAP311                 0x0001180080E009B8  RSL
L2C_DUT_MAP312                 0x0001180080E009C0  RSL
L2C_DUT_MAP313                 0x0001180080E009C8  RSL
L2C_DUT_MAP314                 0x0001180080E009D0  RSL
L2C_DUT_MAP315                 0x0001180080E009D8  RSL
L2C_DUT_MAP316                 0x0001180080E009E0  RSL
L2C_DUT_MAP317                 0x0001180080E009E8  RSL
L2C_DUT_MAP318                 0x0001180080E009F0  RSL
L2C_DUT_MAP319                 0x0001180080E009F8  RSL
L2C_DUT_MAP320                 0x0001180080E00A00  RSL
L2C_DUT_MAP321                 0x0001180080E00A08  RSL
L2C_DUT_MAP322                 0x0001180080E00A10  RSL
L2C_DUT_MAP323                 0x0001180080E00A18  RSL
L2C_DUT_MAP324                 0x0001180080E00A20  RSL
L2C_DUT_MAP325                 0x0001180080E00A28  RSL
L2C_DUT_MAP326                 0x0001180080E00A30  RSL
L2C_DUT_MAP327                 0x0001180080E00A38  RSL
L2C_DUT_MAP328                 0x0001180080E00A40  RSL
L2C_DUT_MAP329                 0x0001180080E00A48  RSL
L2C_DUT_MAP330                 0x0001180080E00A50  RSL
L2C_DUT_MAP331                 0x0001180080E00A58  RSL
L2C_DUT_MAP332                 0x0001180080E00A60  RSL
L2C_DUT_MAP333                 0x0001180080E00A68  RSL
L2C_DUT_MAP334                 0x0001180080E00A70  RSL
L2C_DUT_MAP335                 0x0001180080E00A78  RSL
L2C_DUT_MAP336                 0x0001180080E00A80  RSL
L2C_DUT_MAP337                 0x0001180080E00A88  RSL
L2C_DUT_MAP338                 0x0001180080E00A90  RSL
L2C_DUT_MAP339                 0x0001180080E00A98  RSL
L2C_DUT_MAP340                 0x0001180080E00AA0  RSL
L2C_DUT_MAP341                 0x0001180080E00AA8  RSL
L2C_DUT_MAP342                 0x0001180080E00AB0  RSL
L2C_DUT_MAP343                 0x0001180080E00AB8  RSL
L2C_DUT_MAP344                 0x0001180080E00AC0  RSL
L2C_DUT_MAP345                 0x0001180080E00AC8  RSL
L2C_DUT_MAP346                 0x0001180080E00AD0  RSL
L2C_DUT_MAP347                 0x0001180080E00AD8  RSL
L2C_DUT_MAP348                 0x0001180080E00AE0  RSL
L2C_DUT_MAP349                 0x0001180080E00AE8  RSL
L2C_DUT_MAP350                 0x0001180080E00AF0  RSL
L2C_DUT_MAP351                 0x0001180080E00AF8  RSL
L2C_DUT_MAP352                 0x0001180080E00B00  RSL
L2C_DUT_MAP353                 0x0001180080E00B08  RSL
L2C_DUT_MAP354                 0x0001180080E00B10  RSL
L2C_DUT_MAP355                 0x0001180080E00B18  RSL
L2C_DUT_MAP356                 0x0001180080E00B20  RSL
L2C_DUT_MAP357                 0x0001180080E00B28  RSL
L2C_DUT_MAP358                 0x0001180080E00B30  RSL
L2C_DUT_MAP359                 0x0001180080E00B38  RSL
L2C_DUT_MAP360                 0x0001180080E00B40  RSL
L2C_DUT_MAP361                 0x0001180080E00B48  RSL
L2C_DUT_MAP362                 0x0001180080E00B50  RSL
L2C_DUT_MAP363                 0x0001180080E00B58  RSL
L2C_DUT_MAP364                 0x0001180080E00B60  RSL
L2C_DUT_MAP365                 0x0001180080E00B68  RSL
L2C_DUT_MAP366                 0x0001180080E00B70  RSL
L2C_DUT_MAP367                 0x0001180080E00B78  RSL
L2C_DUT_MAP368                 0x0001180080E00B80  RSL
L2C_DUT_MAP369                 0x0001180080E00B88  RSL
L2C_DUT_MAP370                 0x0001180080E00B90  RSL
L2C_DUT_MAP371                 0x0001180080E00B98  RSL
L2C_DUT_MAP372                 0x0001180080E00BA0  RSL
L2C_DUT_MAP373                 0x0001180080E00BA8  RSL
L2C_DUT_MAP374                 0x0001180080E00BB0  RSL
L2C_DUT_MAP375                 0x0001180080E00BB8  RSL
L2C_DUT_MAP376                 0x0001180080E00BC0  RSL
L2C_DUT_MAP377                 0x0001180080E00BC8  RSL
L2C_DUT_MAP378                 0x0001180080E00BD0  RSL
L2C_DUT_MAP379                 0x0001180080E00BD8  RSL
L2C_DUT_MAP380                 0x0001180080E00BE0  RSL
L2C_DUT_MAP381                 0x0001180080E00BE8  RSL
L2C_DUT_MAP382                 0x0001180080E00BF0  RSL
L2C_DUT_MAP383                 0x0001180080E00BF8  RSL
L2C_DUT_MAP384                 0x0001180080E00C00  RSL
L2C_DUT_MAP385                 0x0001180080E00C08  RSL
L2C_DUT_MAP386                 0x0001180080E00C10  RSL
L2C_DUT_MAP387                 0x0001180080E00C18  RSL
L2C_DUT_MAP388                 0x0001180080E00C20  RSL
L2C_DUT_MAP389                 0x0001180080E00C28  RSL
L2C_DUT_MAP390                 0x0001180080E00C30  RSL
L2C_DUT_MAP391                 0x0001180080E00C38  RSL
L2C_DUT_MAP392                 0x0001180080E00C40  RSL
L2C_DUT_MAP393                 0x0001180080E00C48  RSL
L2C_DUT_MAP394                 0x0001180080E00C50  RSL
L2C_DUT_MAP395                 0x0001180080E00C58  RSL
L2C_DUT_MAP396                 0x0001180080E00C60  RSL
L2C_DUT_MAP397                 0x0001180080E00C68  RSL
L2C_DUT_MAP398                 0x0001180080E00C70  RSL
L2C_DUT_MAP399                 0x0001180080E00C78  RSL
L2C_DUT_MAP400                 0x0001180080E00C80  RSL
L2C_DUT_MAP401                 0x0001180080E00C88  RSL
L2C_DUT_MAP402                 0x0001180080E00C90  RSL
L2C_DUT_MAP403                 0x0001180080E00C98  RSL
L2C_DUT_MAP404                 0x0001180080E00CA0  RSL
L2C_DUT_MAP405                 0x0001180080E00CA8  RSL
L2C_DUT_MAP406                 0x0001180080E00CB0  RSL
L2C_DUT_MAP407                 0x0001180080E00CB8  RSL
L2C_DUT_MAP408                 0x0001180080E00CC0  RSL
L2C_DUT_MAP409                 0x0001180080E00CC8  RSL
L2C_DUT_MAP410                 0x0001180080E00CD0  RSL
L2C_DUT_MAP411                 0x0001180080E00CD8  RSL
L2C_DUT_MAP412                 0x0001180080E00CE0  RSL
L2C_DUT_MAP413                 0x0001180080E00CE8  RSL
L2C_DUT_MAP414                 0x0001180080E00CF0  RSL
L2C_DUT_MAP415                 0x0001180080E00CF8  RSL
L2C_DUT_MAP416                 0x0001180080E00D00  RSL
L2C_DUT_MAP417                 0x0001180080E00D08  RSL
L2C_DUT_MAP418                 0x0001180080E00D10  RSL
L2C_DUT_MAP419                 0x0001180080E00D18  RSL
L2C_DUT_MAP420                 0x0001180080E00D20  RSL
L2C_DUT_MAP421                 0x0001180080E00D28  RSL
L2C_DUT_MAP422                 0x0001180080E00D30  RSL
L2C_DUT_MAP423                 0x0001180080E00D38  RSL
L2C_DUT_MAP424                 0x0001180080E00D40  RSL
L2C_DUT_MAP425                 0x0001180080E00D48  RSL
L2C_DUT_MAP426                 0x0001180080E00D50  RSL
L2C_DUT_MAP427                 0x0001180080E00D58  RSL
L2C_DUT_MAP428                 0x0001180080E00D60  RSL
L2C_DUT_MAP429                 0x0001180080E00D68  RSL
L2C_DUT_MAP430                 0x0001180080E00D70  RSL
L2C_DUT_MAP431                 0x0001180080E00D78  RSL
L2C_DUT_MAP432                 0x0001180080E00D80  RSL
L2C_DUT_MAP433                 0x0001180080E00D88  RSL
L2C_DUT_MAP434                 0x0001180080E00D90  RSL
L2C_DUT_MAP435                 0x0001180080E00D98  RSL
L2C_DUT_MAP436                 0x0001180080E00DA0  RSL
L2C_DUT_MAP437                 0x0001180080E00DA8  RSL
L2C_DUT_MAP438                 0x0001180080E00DB0  RSL
L2C_DUT_MAP439                 0x0001180080E00DB8  RSL
L2C_DUT_MAP440                 0x0001180080E00DC0  RSL
L2C_DUT_MAP441                 0x0001180080E00DC8  RSL
L2C_DUT_MAP442                 0x0001180080E00DD0  RSL
L2C_DUT_MAP443                 0x0001180080E00DD8  RSL
L2C_DUT_MAP444                 0x0001180080E00DE0  RSL
L2C_DUT_MAP445                 0x0001180080E00DE8  RSL
L2C_DUT_MAP446                 0x0001180080E00DF0  RSL
L2C_DUT_MAP447                 0x0001180080E00DF8  RSL
L2C_DUT_MAP448                 0x0001180080E00E00  RSL
L2C_DUT_MAP449                 0x0001180080E00E08  RSL
L2C_DUT_MAP450                 0x0001180080E00E10  RSL
L2C_DUT_MAP451                 0x0001180080E00E18  RSL
L2C_DUT_MAP452                 0x0001180080E00E20  RSL
L2C_DUT_MAP453                 0x0001180080E00E28  RSL
L2C_DUT_MAP454                 0x0001180080E00E30  RSL
L2C_DUT_MAP455                 0x0001180080E00E38  RSL
L2C_DUT_MAP456                 0x0001180080E00E40  RSL
L2C_DUT_MAP457                 0x0001180080E00E48  RSL
L2C_DUT_MAP458                 0x0001180080E00E50  RSL
L2C_DUT_MAP459                 0x0001180080E00E58  RSL
L2C_DUT_MAP460                 0x0001180080E00E60  RSL
L2C_DUT_MAP461                 0x0001180080E00E68  RSL
L2C_DUT_MAP462                 0x0001180080E00E70  RSL
L2C_DUT_MAP463                 0x0001180080E00E78  RSL
L2C_DUT_MAP464                 0x0001180080E00E80  RSL
L2C_DUT_MAP465                 0x0001180080E00E88  RSL
L2C_DUT_MAP466                 0x0001180080E00E90  RSL
L2C_DUT_MAP467                 0x0001180080E00E98  RSL
L2C_DUT_MAP468                 0x0001180080E00EA0  RSL
L2C_DUT_MAP469                 0x0001180080E00EA8  RSL
L2C_DUT_MAP470                 0x0001180080E00EB0  RSL
L2C_DUT_MAP471                 0x0001180080E00EB8  RSL
L2C_DUT_MAP472                 0x0001180080E00EC0  RSL
L2C_DUT_MAP473                 0x0001180080E00EC8  RSL
L2C_DUT_MAP474                 0x0001180080E00ED0  RSL
L2C_DUT_MAP475                 0x0001180080E00ED8  RSL
L2C_DUT_MAP476                 0x0001180080E00EE0  RSL
L2C_DUT_MAP477                 0x0001180080E00EE8  RSL
L2C_DUT_MAP478                 0x0001180080E00EF0  RSL
L2C_DUT_MAP479                 0x0001180080E00EF8  RSL
L2C_DUT_MAP480                 0x0001180080E00F00  RSL
L2C_DUT_MAP481                 0x0001180080E00F08  RSL
L2C_DUT_MAP482                 0x0001180080E00F10  RSL
L2C_DUT_MAP483                 0x0001180080E00F18  RSL
L2C_DUT_MAP484                 0x0001180080E00F20  RSL
L2C_DUT_MAP485                 0x0001180080E00F28  RSL
L2C_DUT_MAP486                 0x0001180080E00F30  RSL
L2C_DUT_MAP487                 0x0001180080E00F38  RSL
L2C_DUT_MAP488                 0x0001180080E00F40  RSL
L2C_DUT_MAP489                 0x0001180080E00F48  RSL
L2C_DUT_MAP490                 0x0001180080E00F50  RSL
L2C_DUT_MAP491                 0x0001180080E00F58  RSL
L2C_DUT_MAP492                 0x0001180080E00F60  RSL
L2C_DUT_MAP493                 0x0001180080E00F68  RSL
L2C_DUT_MAP494                 0x0001180080E00F70  RSL
L2C_DUT_MAP495                 0x0001180080E00F78  RSL
L2C_DUT_MAP496                 0x0001180080E00F80  RSL
L2C_DUT_MAP497                 0x0001180080E00F88  RSL
L2C_DUT_MAP498                 0x0001180080E00F90  RSL
L2C_DUT_MAP499                 0x0001180080E00F98  RSL
L2C_DUT_MAP500                 0x0001180080E00FA0  RSL
L2C_DUT_MAP501                 0x0001180080E00FA8  RSL
L2C_DUT_MAP502                 0x0001180080E00FB0  RSL
L2C_DUT_MAP503                 0x0001180080E00FB8  RSL
L2C_DUT_MAP504                 0x0001180080E00FC0  RSL
L2C_DUT_MAP505                 0x0001180080E00FC8  RSL
L2C_DUT_MAP506                 0x0001180080E00FD0  RSL
L2C_DUT_MAP507                 0x0001180080E00FD8  RSL
L2C_DUT_MAP508                 0x0001180080E00FE0  RSL
L2C_DUT_MAP509                 0x0001180080E00FE8  RSL
L2C_DUT_MAP510                 0x0001180080E00FF0  RSL
L2C_DUT_MAP511                 0x0001180080E00FF8  RSL
L2C_DUT_MAP512                 0x0001180080E01000  RSL
L2C_DUT_MAP513                 0x0001180080E01008  RSL
L2C_DUT_MAP514                 0x0001180080E01010  RSL
L2C_DUT_MAP515                 0x0001180080E01018  RSL
L2C_DUT_MAP516                 0x0001180080E01020  RSL
L2C_DUT_MAP517                 0x0001180080E01028  RSL
L2C_DUT_MAP518                 0x0001180080E01030  RSL
L2C_DUT_MAP519                 0x0001180080E01038  RSL
L2C_DUT_MAP520                 0x0001180080E01040  RSL
L2C_DUT_MAP521                 0x0001180080E01048  RSL
L2C_DUT_MAP522                 0x0001180080E01050  RSL
L2C_DUT_MAP523                 0x0001180080E01058  RSL
L2C_DUT_MAP524                 0x0001180080E01060  RSL
L2C_DUT_MAP525                 0x0001180080E01068  RSL
L2C_DUT_MAP526                 0x0001180080E01070  RSL
L2C_DUT_MAP527                 0x0001180080E01078  RSL
L2C_DUT_MAP528                 0x0001180080E01080  RSL
L2C_DUT_MAP529                 0x0001180080E01088  RSL
L2C_DUT_MAP530                 0x0001180080E01090  RSL
L2C_DUT_MAP531                 0x0001180080E01098  RSL
L2C_DUT_MAP532                 0x0001180080E010A0  RSL
L2C_DUT_MAP533                 0x0001180080E010A8  RSL
L2C_DUT_MAP534                 0x0001180080E010B0  RSL
L2C_DUT_MAP535                 0x0001180080E010B8  RSL
L2C_DUT_MAP536                 0x0001180080E010C0  RSL
L2C_DUT_MAP537                 0x0001180080E010C8  RSL
L2C_DUT_MAP538                 0x0001180080E010D0  RSL
L2C_DUT_MAP539                 0x0001180080E010D8  RSL
L2C_DUT_MAP540                 0x0001180080E010E0  RSL
L2C_DUT_MAP541                 0x0001180080E010E8  RSL
L2C_DUT_MAP542                 0x0001180080E010F0  RSL
L2C_DUT_MAP543                 0x0001180080E010F8  RSL
L2C_DUT_MAP544                 0x0001180080E01100  RSL
L2C_DUT_MAP545                 0x0001180080E01108  RSL
L2C_DUT_MAP546                 0x0001180080E01110  RSL
L2C_DUT_MAP547                 0x0001180080E01118  RSL
L2C_DUT_MAP548                 0x0001180080E01120  RSL
L2C_DUT_MAP549                 0x0001180080E01128  RSL
L2C_DUT_MAP550                 0x0001180080E01130  RSL
L2C_DUT_MAP551                 0x0001180080E01138  RSL
L2C_DUT_MAP552                 0x0001180080E01140  RSL
L2C_DUT_MAP553                 0x0001180080E01148  RSL
L2C_DUT_MAP554                 0x0001180080E01150  RSL
L2C_DUT_MAP555                 0x0001180080E01158  RSL
L2C_DUT_MAP556                 0x0001180080E01160  RSL
L2C_DUT_MAP557                 0x0001180080E01168  RSL
L2C_DUT_MAP558                 0x0001180080E01170  RSL
L2C_DUT_MAP559                 0x0001180080E01178  RSL
L2C_DUT_MAP560                 0x0001180080E01180  RSL
L2C_DUT_MAP561                 0x0001180080E01188  RSL
L2C_DUT_MAP562                 0x0001180080E01190  RSL
L2C_DUT_MAP563                 0x0001180080E01198  RSL
L2C_DUT_MAP564                 0x0001180080E011A0  RSL
L2C_DUT_MAP565                 0x0001180080E011A8  RSL
L2C_DUT_MAP566                 0x0001180080E011B0  RSL
L2C_DUT_MAP567                 0x0001180080E011B8  RSL
L2C_DUT_MAP568                 0x0001180080E011C0  RSL
L2C_DUT_MAP569                 0x0001180080E011C8  RSL
L2C_DUT_MAP570                 0x0001180080E011D0  RSL
L2C_DUT_MAP571                 0x0001180080E011D8  RSL
L2C_DUT_MAP572                 0x0001180080E011E0  RSL
L2C_DUT_MAP573                 0x0001180080E011E8  RSL
L2C_DUT_MAP574                 0x0001180080E011F0  RSL
L2C_DUT_MAP575                 0x0001180080E011F8  RSL
L2C_DUT_MAP576                 0x0001180080E01200  RSL
L2C_DUT_MAP577                 0x0001180080E01208  RSL
L2C_DUT_MAP578                 0x0001180080E01210  RSL
L2C_DUT_MAP579                 0x0001180080E01218  RSL
L2C_DUT_MAP580                 0x0001180080E01220  RSL
L2C_DUT_MAP581                 0x0001180080E01228  RSL
L2C_DUT_MAP582                 0x0001180080E01230  RSL
L2C_DUT_MAP583                 0x0001180080E01238  RSL
L2C_DUT_MAP584                 0x0001180080E01240  RSL
L2C_DUT_MAP585                 0x0001180080E01248  RSL
L2C_DUT_MAP586                 0x0001180080E01250  RSL
L2C_DUT_MAP587                 0x0001180080E01258  RSL
L2C_DUT_MAP588                 0x0001180080E01260  RSL
L2C_DUT_MAP589                 0x0001180080E01268  RSL
L2C_DUT_MAP590                 0x0001180080E01270  RSL
L2C_DUT_MAP591                 0x0001180080E01278  RSL
L2C_DUT_MAP592                 0x0001180080E01280  RSL
L2C_DUT_MAP593                 0x0001180080E01288  RSL
L2C_DUT_MAP594                 0x0001180080E01290  RSL
L2C_DUT_MAP595                 0x0001180080E01298  RSL
L2C_DUT_MAP596                 0x0001180080E012A0  RSL
L2C_DUT_MAP597                 0x0001180080E012A8  RSL
L2C_DUT_MAP598                 0x0001180080E012B0  RSL
L2C_DUT_MAP599                 0x0001180080E012B8  RSL
L2C_DUT_MAP600                 0x0001180080E012C0  RSL
L2C_DUT_MAP601                 0x0001180080E012C8  RSL
L2C_DUT_MAP602                 0x0001180080E012D0  RSL
L2C_DUT_MAP603                 0x0001180080E012D8  RSL
L2C_DUT_MAP604                 0x0001180080E012E0  RSL
L2C_DUT_MAP605                 0x0001180080E012E8  RSL
L2C_DUT_MAP606                 0x0001180080E012F0  RSL
L2C_DUT_MAP607                 0x0001180080E012F8  RSL
L2C_DUT_MAP608                 0x0001180080E01300  RSL
L2C_DUT_MAP609                 0x0001180080E01308  RSL
L2C_DUT_MAP610                 0x0001180080E01310  RSL
L2C_DUT_MAP611                 0x0001180080E01318  RSL
L2C_DUT_MAP612                 0x0001180080E01320  RSL
L2C_DUT_MAP613                 0x0001180080E01328  RSL
L2C_DUT_MAP614                 0x0001180080E01330  RSL
L2C_DUT_MAP615                 0x0001180080E01338  RSL
L2C_DUT_MAP616                 0x0001180080E01340  RSL
L2C_DUT_MAP617                 0x0001180080E01348  RSL
L2C_DUT_MAP618                 0x0001180080E01350  RSL
L2C_DUT_MAP619                 0x0001180080E01358  RSL
L2C_DUT_MAP620                 0x0001180080E01360  RSL
L2C_DUT_MAP621                 0x0001180080E01368  RSL
L2C_DUT_MAP622                 0x0001180080E01370  RSL
L2C_DUT_MAP623                 0x0001180080E01378  RSL
L2C_DUT_MAP624                 0x0001180080E01380  RSL
L2C_DUT_MAP625                 0x0001180080E01388  RSL
L2C_DUT_MAP626                 0x0001180080E01390  RSL
L2C_DUT_MAP627                 0x0001180080E01398  RSL
L2C_DUT_MAP628                 0x0001180080E013A0  RSL
L2C_DUT_MAP629                 0x0001180080E013A8  RSL
L2C_DUT_MAP630                 0x0001180080E013B0  RSL
L2C_DUT_MAP631                 0x0001180080E013B8  RSL
L2C_DUT_MAP632                 0x0001180080E013C0  RSL
L2C_DUT_MAP633                 0x0001180080E013C8  RSL
L2C_DUT_MAP634                 0x0001180080E013D0  RSL
L2C_DUT_MAP635                 0x0001180080E013D8  RSL
L2C_DUT_MAP636                 0x0001180080E013E0  RSL
L2C_DUT_MAP637                 0x0001180080E013E8  RSL
L2C_DUT_MAP638                 0x0001180080E013F0  RSL
L2C_DUT_MAP639                 0x0001180080E013F8  RSL
L2C_DUT_MAP640                 0x0001180080E01400  RSL
L2C_DUT_MAP641                 0x0001180080E01408  RSL
L2C_DUT_MAP642                 0x0001180080E01410  RSL
L2C_DUT_MAP643                 0x0001180080E01418  RSL
L2C_DUT_MAP644                 0x0001180080E01420  RSL
L2C_DUT_MAP645                 0x0001180080E01428  RSL
L2C_DUT_MAP646                 0x0001180080E01430  RSL
L2C_DUT_MAP647                 0x0001180080E01438  RSL
L2C_DUT_MAP648                 0x0001180080E01440  RSL
L2C_DUT_MAP649                 0x0001180080E01448  RSL
L2C_DUT_MAP650                 0x0001180080E01450  RSL
L2C_DUT_MAP651                 0x0001180080E01458  RSL
L2C_DUT_MAP652                 0x0001180080E01460  RSL
L2C_DUT_MAP653                 0x0001180080E01468  RSL
L2C_DUT_MAP654                 0x0001180080E01470  RSL
L2C_DUT_MAP655                 0x0001180080E01478  RSL
L2C_DUT_MAP656                 0x0001180080E01480  RSL
L2C_DUT_MAP657                 0x0001180080E01488  RSL
L2C_DUT_MAP658                 0x0001180080E01490  RSL
L2C_DUT_MAP659                 0x0001180080E01498  RSL
L2C_DUT_MAP660                 0x0001180080E014A0  RSL
L2C_DUT_MAP661                 0x0001180080E014A8  RSL
L2C_DUT_MAP662                 0x0001180080E014B0  RSL
L2C_DUT_MAP663                 0x0001180080E014B8  RSL
L2C_DUT_MAP664                 0x0001180080E014C0  RSL
L2C_DUT_MAP665                 0x0001180080E014C8  RSL
L2C_DUT_MAP666                 0x0001180080E014D0  RSL
L2C_DUT_MAP667                 0x0001180080E014D8  RSL
L2C_DUT_MAP668                 0x0001180080E014E0  RSL
L2C_DUT_MAP669                 0x0001180080E014E8  RSL
L2C_DUT_MAP670                 0x0001180080E014F0  RSL
L2C_DUT_MAP671                 0x0001180080E014F8  RSL
L2C_DUT_MAP672                 0x0001180080E01500  RSL
L2C_DUT_MAP673                 0x0001180080E01508  RSL
L2C_DUT_MAP674                 0x0001180080E01510  RSL
L2C_DUT_MAP675                 0x0001180080E01518  RSL
L2C_DUT_MAP676                 0x0001180080E01520  RSL
L2C_DUT_MAP677                 0x0001180080E01528  RSL
L2C_DUT_MAP678                 0x0001180080E01530  RSL
L2C_DUT_MAP679                 0x0001180080E01538  RSL
L2C_DUT_MAP680                 0x0001180080E01540  RSL
L2C_DUT_MAP681                 0x0001180080E01548  RSL
L2C_DUT_MAP682                 0x0001180080E01550  RSL
L2C_DUT_MAP683                 0x0001180080E01558  RSL
L2C_DUT_MAP684                 0x0001180080E01560  RSL
L2C_DUT_MAP685                 0x0001180080E01568  RSL
L2C_DUT_MAP686                 0x0001180080E01570  RSL
L2C_DUT_MAP687                 0x0001180080E01578  RSL
L2C_DUT_MAP688                 0x0001180080E01580  RSL
L2C_DUT_MAP689                 0x0001180080E01588  RSL
L2C_DUT_MAP690                 0x0001180080E01590  RSL
L2C_DUT_MAP691                 0x0001180080E01598  RSL
L2C_DUT_MAP692                 0x0001180080E015A0  RSL
L2C_DUT_MAP693                 0x0001180080E015A8  RSL
L2C_DUT_MAP694                 0x0001180080E015B0  RSL
L2C_DUT_MAP695                 0x0001180080E015B8  RSL
L2C_DUT_MAP696                 0x0001180080E015C0  RSL
L2C_DUT_MAP697                 0x0001180080E015C8  RSL
L2C_DUT_MAP698                 0x0001180080E015D0  RSL
L2C_DUT_MAP699                 0x0001180080E015D8  RSL
L2C_DUT_MAP700                 0x0001180080E015E0  RSL
L2C_DUT_MAP701                 0x0001180080E015E8  RSL
L2C_DUT_MAP702                 0x0001180080E015F0  RSL
L2C_DUT_MAP703                 0x0001180080E015F8  RSL
L2C_DUT_MAP704                 0x0001180080E01600  RSL
L2C_DUT_MAP705                 0x0001180080E01608  RSL
L2C_DUT_MAP706                 0x0001180080E01610  RSL
L2C_DUT_MAP707                 0x0001180080E01618  RSL
L2C_DUT_MAP708                 0x0001180080E01620  RSL
L2C_DUT_MAP709                 0x0001180080E01628  RSL
L2C_DUT_MAP710                 0x0001180080E01630  RSL
L2C_DUT_MAP711                 0x0001180080E01638  RSL
L2C_DUT_MAP712                 0x0001180080E01640  RSL
L2C_DUT_MAP713                 0x0001180080E01648  RSL
L2C_DUT_MAP714                 0x0001180080E01650  RSL
L2C_DUT_MAP715                 0x0001180080E01658  RSL
L2C_DUT_MAP716                 0x0001180080E01660  RSL
L2C_DUT_MAP717                 0x0001180080E01668  RSL
L2C_DUT_MAP718                 0x0001180080E01670  RSL
L2C_DUT_MAP719                 0x0001180080E01678  RSL
L2C_DUT_MAP720                 0x0001180080E01680  RSL
L2C_DUT_MAP721                 0x0001180080E01688  RSL
L2C_DUT_MAP722                 0x0001180080E01690  RSL
L2C_DUT_MAP723                 0x0001180080E01698  RSL
L2C_DUT_MAP724                 0x0001180080E016A0  RSL
L2C_DUT_MAP725                 0x0001180080E016A8  RSL
L2C_DUT_MAP726                 0x0001180080E016B0  RSL
L2C_DUT_MAP727                 0x0001180080E016B8  RSL
L2C_DUT_MAP728                 0x0001180080E016C0  RSL
L2C_DUT_MAP729                 0x0001180080E016C8  RSL
L2C_DUT_MAP730                 0x0001180080E016D0  RSL
L2C_DUT_MAP731                 0x0001180080E016D8  RSL
L2C_DUT_MAP732                 0x0001180080E016E0  RSL
L2C_DUT_MAP733                 0x0001180080E016E8  RSL
L2C_DUT_MAP734                 0x0001180080E016F0  RSL
L2C_DUT_MAP735                 0x0001180080E016F8  RSL
L2C_DUT_MAP736                 0x0001180080E01700  RSL
L2C_DUT_MAP737                 0x0001180080E01708  RSL
L2C_DUT_MAP738                 0x0001180080E01710  RSL
L2C_DUT_MAP739                 0x0001180080E01718  RSL
L2C_DUT_MAP740                 0x0001180080E01720  RSL
L2C_DUT_MAP741                 0x0001180080E01728  RSL
L2C_DUT_MAP742                 0x0001180080E01730  RSL
L2C_DUT_MAP743                 0x0001180080E01738  RSL
L2C_DUT_MAP744                 0x0001180080E01740  RSL
L2C_DUT_MAP745                 0x0001180080E01748  RSL
L2C_DUT_MAP746                 0x0001180080E01750  RSL
L2C_DUT_MAP747                 0x0001180080E01758  RSL
L2C_DUT_MAP748                 0x0001180080E01760  RSL
L2C_DUT_MAP749                 0x0001180080E01768  RSL
L2C_DUT_MAP750                 0x0001180080E01770  RSL
L2C_DUT_MAP751                 0x0001180080E01778  RSL
L2C_DUT_MAP752                 0x0001180080E01780  RSL
L2C_DUT_MAP753                 0x0001180080E01788  RSL
L2C_DUT_MAP754                 0x0001180080E01790  RSL
L2C_DUT_MAP755                 0x0001180080E01798  RSL
L2C_DUT_MAP756                 0x0001180080E017A0  RSL
L2C_DUT_MAP757                 0x0001180080E017A8  RSL
L2C_DUT_MAP758                 0x0001180080E017B0  RSL
L2C_DUT_MAP759                 0x0001180080E017B8  RSL
L2C_DUT_MAP760                 0x0001180080E017C0  RSL
L2C_DUT_MAP761                 0x0001180080E017C8  RSL
L2C_DUT_MAP762                 0x0001180080E017D0  RSL
L2C_DUT_MAP763                 0x0001180080E017D8  RSL
L2C_DUT_MAP764                 0x0001180080E017E0  RSL
L2C_DUT_MAP765                 0x0001180080E017E8  RSL
L2C_DUT_MAP766                 0x0001180080E017F0  RSL
L2C_DUT_MAP767                 0x0001180080E017F8  RSL
L2C_DUT_MAP768                 0x0001180080E01800  RSL
L2C_DUT_MAP769                 0x0001180080E01808  RSL
L2C_DUT_MAP770                 0x0001180080E01810  RSL
L2C_DUT_MAP771                 0x0001180080E01818  RSL
L2C_DUT_MAP772                 0x0001180080E01820  RSL
L2C_DUT_MAP773                 0x0001180080E01828  RSL
L2C_DUT_MAP774                 0x0001180080E01830  RSL
L2C_DUT_MAP775                 0x0001180080E01838  RSL
L2C_DUT_MAP776                 0x0001180080E01840  RSL
L2C_DUT_MAP777                 0x0001180080E01848  RSL
L2C_DUT_MAP778                 0x0001180080E01850  RSL
L2C_DUT_MAP779                 0x0001180080E01858  RSL
L2C_DUT_MAP780                 0x0001180080E01860  RSL
L2C_DUT_MAP781                 0x0001180080E01868  RSL
L2C_DUT_MAP782                 0x0001180080E01870  RSL
L2C_DUT_MAP783                 0x0001180080E01878  RSL
L2C_DUT_MAP784                 0x0001180080E01880  RSL
L2C_DUT_MAP785                 0x0001180080E01888  RSL
L2C_DUT_MAP786                 0x0001180080E01890  RSL
L2C_DUT_MAP787                 0x0001180080E01898  RSL
L2C_DUT_MAP788                 0x0001180080E018A0  RSL
L2C_DUT_MAP789                 0x0001180080E018A8  RSL
L2C_DUT_MAP790                 0x0001180080E018B0  RSL
L2C_DUT_MAP791                 0x0001180080E018B8  RSL
L2C_DUT_MAP792                 0x0001180080E018C0  RSL
L2C_DUT_MAP793                 0x0001180080E018C8  RSL
L2C_DUT_MAP794                 0x0001180080E018D0  RSL
L2C_DUT_MAP795                 0x0001180080E018D8  RSL
L2C_DUT_MAP796                 0x0001180080E018E0  RSL
L2C_DUT_MAP797                 0x0001180080E018E8  RSL
L2C_DUT_MAP798                 0x0001180080E018F0  RSL
L2C_DUT_MAP799                 0x0001180080E018F8  RSL
L2C_DUT_MAP800                 0x0001180080E01900  RSL
L2C_DUT_MAP801                 0x0001180080E01908  RSL
L2C_DUT_MAP802                 0x0001180080E01910  RSL
L2C_DUT_MAP803                 0x0001180080E01918  RSL
L2C_DUT_MAP804                 0x0001180080E01920  RSL
L2C_DUT_MAP805                 0x0001180080E01928  RSL
L2C_DUT_MAP806                 0x0001180080E01930  RSL
L2C_DUT_MAP807                 0x0001180080E01938  RSL
L2C_DUT_MAP808                 0x0001180080E01940  RSL
L2C_DUT_MAP809                 0x0001180080E01948  RSL
L2C_DUT_MAP810                 0x0001180080E01950  RSL
L2C_DUT_MAP811                 0x0001180080E01958  RSL
L2C_DUT_MAP812                 0x0001180080E01960  RSL
L2C_DUT_MAP813                 0x0001180080E01968  RSL
L2C_DUT_MAP814                 0x0001180080E01970  RSL
L2C_DUT_MAP815                 0x0001180080E01978  RSL
L2C_DUT_MAP816                 0x0001180080E01980  RSL
L2C_DUT_MAP817                 0x0001180080E01988  RSL
L2C_DUT_MAP818                 0x0001180080E01990  RSL
L2C_DUT_MAP819                 0x0001180080E01998  RSL
L2C_DUT_MAP820                 0x0001180080E019A0  RSL
L2C_DUT_MAP821                 0x0001180080E019A8  RSL
L2C_DUT_MAP822                 0x0001180080E019B0  RSL
L2C_DUT_MAP823                 0x0001180080E019B8  RSL
L2C_DUT_MAP824                 0x0001180080E019C0  RSL
L2C_DUT_MAP825                 0x0001180080E019C8  RSL
L2C_DUT_MAP826                 0x0001180080E019D0  RSL
L2C_DUT_MAP827                 0x0001180080E019D8  RSL
L2C_DUT_MAP828                 0x0001180080E019E0  RSL
L2C_DUT_MAP829                 0x0001180080E019E8  RSL
L2C_DUT_MAP830                 0x0001180080E019F0  RSL
L2C_DUT_MAP831                 0x0001180080E019F8  RSL
L2C_DUT_MAP832                 0x0001180080E01A00  RSL
L2C_DUT_MAP833                 0x0001180080E01A08  RSL
L2C_DUT_MAP834                 0x0001180080E01A10  RSL
L2C_DUT_MAP835                 0x0001180080E01A18  RSL
L2C_DUT_MAP836                 0x0001180080E01A20  RSL
L2C_DUT_MAP837                 0x0001180080E01A28  RSL
L2C_DUT_MAP838                 0x0001180080E01A30  RSL
L2C_DUT_MAP839                 0x0001180080E01A38  RSL
L2C_DUT_MAP840                 0x0001180080E01A40  RSL
L2C_DUT_MAP841                 0x0001180080E01A48  RSL
L2C_DUT_MAP842                 0x0001180080E01A50  RSL
L2C_DUT_MAP843                 0x0001180080E01A58  RSL
L2C_DUT_MAP844                 0x0001180080E01A60  RSL
L2C_DUT_MAP845                 0x0001180080E01A68  RSL
L2C_DUT_MAP846                 0x0001180080E01A70  RSL
L2C_DUT_MAP847                 0x0001180080E01A78  RSL
L2C_DUT_MAP848                 0x0001180080E01A80  RSL
L2C_DUT_MAP849                 0x0001180080E01A88  RSL
L2C_DUT_MAP850                 0x0001180080E01A90  RSL
L2C_DUT_MAP851                 0x0001180080E01A98  RSL
L2C_DUT_MAP852                 0x0001180080E01AA0  RSL
L2C_DUT_MAP853                 0x0001180080E01AA8  RSL
L2C_DUT_MAP854                 0x0001180080E01AB0  RSL
L2C_DUT_MAP855                 0x0001180080E01AB8  RSL
L2C_DUT_MAP856                 0x0001180080E01AC0  RSL
L2C_DUT_MAP857                 0x0001180080E01AC8  RSL
L2C_DUT_MAP858                 0x0001180080E01AD0  RSL
L2C_DUT_MAP859                 0x0001180080E01AD8  RSL
L2C_DUT_MAP860                 0x0001180080E01AE0  RSL
L2C_DUT_MAP861                 0x0001180080E01AE8  RSL
L2C_DUT_MAP862                 0x0001180080E01AF0  RSL
L2C_DUT_MAP863                 0x0001180080E01AF8  RSL
L2C_DUT_MAP864                 0x0001180080E01B00  RSL
L2C_DUT_MAP865                 0x0001180080E01B08  RSL
L2C_DUT_MAP866                 0x0001180080E01B10  RSL
L2C_DUT_MAP867                 0x0001180080E01B18  RSL
L2C_DUT_MAP868                 0x0001180080E01B20  RSL
L2C_DUT_MAP869                 0x0001180080E01B28  RSL
L2C_DUT_MAP870                 0x0001180080E01B30  RSL
L2C_DUT_MAP871                 0x0001180080E01B38  RSL
L2C_DUT_MAP872                 0x0001180080E01B40  RSL
L2C_DUT_MAP873                 0x0001180080E01B48  RSL
L2C_DUT_MAP874                 0x0001180080E01B50  RSL
L2C_DUT_MAP875                 0x0001180080E01B58  RSL
L2C_DUT_MAP876                 0x0001180080E01B60  RSL
L2C_DUT_MAP877                 0x0001180080E01B68  RSL
L2C_DUT_MAP878                 0x0001180080E01B70  RSL
L2C_DUT_MAP879                 0x0001180080E01B78  RSL
L2C_DUT_MAP880                 0x0001180080E01B80  RSL
L2C_DUT_MAP881                 0x0001180080E01B88  RSL
L2C_DUT_MAP882                 0x0001180080E01B90  RSL
L2C_DUT_MAP883                 0x0001180080E01B98  RSL
L2C_DUT_MAP884                 0x0001180080E01BA0  RSL
L2C_DUT_MAP885                 0x0001180080E01BA8  RSL
L2C_DUT_MAP886                 0x0001180080E01BB0  RSL
L2C_DUT_MAP887                 0x0001180080E01BB8  RSL
L2C_DUT_MAP888                 0x0001180080E01BC0  RSL
L2C_DUT_MAP889                 0x0001180080E01BC8  RSL
L2C_DUT_MAP890                 0x0001180080E01BD0  RSL
L2C_DUT_MAP891                 0x0001180080E01BD8  RSL
L2C_DUT_MAP892                 0x0001180080E01BE0  RSL
L2C_DUT_MAP893                 0x0001180080E01BE8  RSL
L2C_DUT_MAP894                 0x0001180080E01BF0  RSL
L2C_DUT_MAP895                 0x0001180080E01BF8  RSL
L2C_DUT_MAP896                 0x0001180080E01C00  RSL
L2C_DUT_MAP897                 0x0001180080E01C08  RSL
L2C_DUT_MAP898                 0x0001180080E01C10  RSL
L2C_DUT_MAP899                 0x0001180080E01C18  RSL
L2C_DUT_MAP900                 0x0001180080E01C20  RSL
L2C_DUT_MAP901                 0x0001180080E01C28  RSL
L2C_DUT_MAP902                 0x0001180080E01C30  RSL
L2C_DUT_MAP903                 0x0001180080E01C38  RSL
L2C_DUT_MAP904                 0x0001180080E01C40  RSL
L2C_DUT_MAP905                 0x0001180080E01C48  RSL
L2C_DUT_MAP906                 0x0001180080E01C50  RSL
L2C_DUT_MAP907                 0x0001180080E01C58  RSL
L2C_DUT_MAP908                 0x0001180080E01C60  RSL
L2C_DUT_MAP909                 0x0001180080E01C68  RSL
L2C_DUT_MAP910                 0x0001180080E01C70  RSL
L2C_DUT_MAP911                 0x0001180080E01C78  RSL
L2C_DUT_MAP912                 0x0001180080E01C80  RSL
L2C_DUT_MAP913                 0x0001180080E01C88  RSL
L2C_DUT_MAP914                 0x0001180080E01C90  RSL
L2C_DUT_MAP915                 0x0001180080E01C98  RSL
L2C_DUT_MAP916                 0x0001180080E01CA0  RSL
L2C_DUT_MAP917                 0x0001180080E01CA8  RSL
L2C_DUT_MAP918                 0x0001180080E01CB0  RSL
L2C_DUT_MAP919                 0x0001180080E01CB8  RSL
L2C_DUT_MAP920                 0x0001180080E01CC0  RSL
L2C_DUT_MAP921                 0x0001180080E01CC8  RSL
L2C_DUT_MAP922                 0x0001180080E01CD0  RSL
L2C_DUT_MAP923                 0x0001180080E01CD8  RSL
L2C_DUT_MAP924                 0x0001180080E01CE0  RSL
L2C_DUT_MAP925                 0x0001180080E01CE8  RSL
L2C_DUT_MAP926                 0x0001180080E01CF0  RSL
L2C_DUT_MAP927                 0x0001180080E01CF8  RSL
L2C_DUT_MAP928                 0x0001180080E01D00  RSL
L2C_DUT_MAP929                 0x0001180080E01D08  RSL
L2C_DUT_MAP930                 0x0001180080E01D10  RSL
L2C_DUT_MAP931                 0x0001180080E01D18  RSL
L2C_DUT_MAP932                 0x0001180080E01D20  RSL
L2C_DUT_MAP933                 0x0001180080E01D28  RSL
L2C_DUT_MAP934                 0x0001180080E01D30  RSL
L2C_DUT_MAP935                 0x0001180080E01D38  RSL
L2C_DUT_MAP936                 0x0001180080E01D40  RSL
L2C_DUT_MAP937                 0x0001180080E01D48  RSL
L2C_DUT_MAP938                 0x0001180080E01D50  RSL
L2C_DUT_MAP939                 0x0001180080E01D58  RSL
L2C_DUT_MAP940                 0x0001180080E01D60  RSL
L2C_DUT_MAP941                 0x0001180080E01D68  RSL
L2C_DUT_MAP942                 0x0001180080E01D70  RSL
L2C_DUT_MAP943                 0x0001180080E01D78  RSL
L2C_DUT_MAP944                 0x0001180080E01D80  RSL
L2C_DUT_MAP945                 0x0001180080E01D88  RSL
L2C_DUT_MAP946                 0x0001180080E01D90  RSL
L2C_DUT_MAP947                 0x0001180080E01D98  RSL
L2C_DUT_MAP948                 0x0001180080E01DA0  RSL
L2C_DUT_MAP949                 0x0001180080E01DA8  RSL
L2C_DUT_MAP950                 0x0001180080E01DB0  RSL
L2C_DUT_MAP951                 0x0001180080E01DB8  RSL
L2C_DUT_MAP952                 0x0001180080E01DC0  RSL
L2C_DUT_MAP953                 0x0001180080E01DC8  RSL
L2C_DUT_MAP954                 0x0001180080E01DD0  RSL
L2C_DUT_MAP955                 0x0001180080E01DD8  RSL
L2C_DUT_MAP956                 0x0001180080E01DE0  RSL
L2C_DUT_MAP957                 0x0001180080E01DE8  RSL
L2C_DUT_MAP958                 0x0001180080E01DF0  RSL
L2C_DUT_MAP959                 0x0001180080E01DF8  RSL
L2C_DUT_MAP960                 0x0001180080E01E00  RSL
L2C_DUT_MAP961                 0x0001180080E01E08  RSL
L2C_DUT_MAP962                 0x0001180080E01E10  RSL
L2C_DUT_MAP963                 0x0001180080E01E18  RSL
L2C_DUT_MAP964                 0x0001180080E01E20  RSL
L2C_DUT_MAP965                 0x0001180080E01E28  RSL
L2C_DUT_MAP966                 0x0001180080E01E30  RSL
L2C_DUT_MAP967                 0x0001180080E01E38  RSL
L2C_DUT_MAP968                 0x0001180080E01E40  RSL
L2C_DUT_MAP969                 0x0001180080E01E48  RSL
L2C_DUT_MAP970                 0x0001180080E01E50  RSL
L2C_DUT_MAP971                 0x0001180080E01E58  RSL
L2C_DUT_MAP972                 0x0001180080E01E60  RSL
L2C_DUT_MAP973                 0x0001180080E01E68  RSL
L2C_DUT_MAP974                 0x0001180080E01E70  RSL
L2C_DUT_MAP975                 0x0001180080E01E78  RSL
L2C_DUT_MAP976                 0x0001180080E01E80  RSL
L2C_DUT_MAP977                 0x0001180080E01E88  RSL
L2C_DUT_MAP978                 0x0001180080E01E90  RSL
L2C_DUT_MAP979                 0x0001180080E01E98  RSL
L2C_DUT_MAP980                 0x0001180080E01EA0  RSL
L2C_DUT_MAP981                 0x0001180080E01EA8  RSL
L2C_DUT_MAP982                 0x0001180080E01EB0  RSL
L2C_DUT_MAP983                 0x0001180080E01EB8  RSL
L2C_DUT_MAP984                 0x0001180080E01EC0  RSL
L2C_DUT_MAP985                 0x0001180080E01EC8  RSL
L2C_DUT_MAP986                 0x0001180080E01ED0  RSL
L2C_DUT_MAP987                 0x0001180080E01ED8  RSL
L2C_DUT_MAP988                 0x0001180080E01EE0  RSL
L2C_DUT_MAP989                 0x0001180080E01EE8  RSL
L2C_DUT_MAP990                 0x0001180080E01EF0  RSL
L2C_DUT_MAP991                 0x0001180080E01EF8  RSL
L2C_DUT_MAP992                 0x0001180080E01F00  RSL
L2C_DUT_MAP993                 0x0001180080E01F08  RSL
L2C_DUT_MAP994                 0x0001180080E01F10  RSL
L2C_DUT_MAP995                 0x0001180080E01F18  RSL
L2C_DUT_MAP996                 0x0001180080E01F20  RSL
L2C_DUT_MAP997                 0x0001180080E01F28  RSL
L2C_DUT_MAP998                 0x0001180080E01F30  RSL
L2C_DUT_MAP999                 0x0001180080E01F38  RSL
L2C_DUT_MAP1000                0x0001180080E01F40  RSL
L2C_DUT_MAP1001                0x0001180080E01F48  RSL
L2C_DUT_MAP1002                0x0001180080E01F50  RSL
L2C_DUT_MAP1003                0x0001180080E01F58  RSL
L2C_DUT_MAP1004                0x0001180080E01F60  RSL
L2C_DUT_MAP1005                0x0001180080E01F68  RSL
L2C_DUT_MAP1006                0x0001180080E01F70  RSL
L2C_DUT_MAP1007                0x0001180080E01F78  RSL
L2C_DUT_MAP1008                0x0001180080E01F80  RSL
L2C_DUT_MAP1009                0x0001180080E01F88  RSL
L2C_DUT_MAP1010                0x0001180080E01F90  RSL
L2C_DUT_MAP1011                0x0001180080E01F98  RSL
L2C_DUT_MAP1012                0x0001180080E01FA0  RSL
L2C_DUT_MAP1013                0x0001180080E01FA8  RSL
L2C_DUT_MAP1014                0x0001180080E01FB0  RSL
L2C_DUT_MAP1015                0x0001180080E01FB8  RSL
L2C_DUT_MAP1016                0x0001180080E01FC0  RSL
L2C_DUT_MAP1017                0x0001180080E01FC8  RSL
L2C_DUT_MAP1018                0x0001180080E01FD0  RSL
L2C_DUT_MAP1019                0x0001180080E01FD8  RSL
L2C_DUT_MAP1020                0x0001180080E01FE0  RSL
L2C_DUT_MAP1021                0x0001180080E01FE8  RSL
L2C_DUT_MAP1022                0x0001180080E01FF0  RSL
L2C_DUT_MAP1023                0x0001180080E01FF8  RSL
L2C_DUT_MAP1024                0x0001180080E02000  RSL
L2C_DUT_MAP1025                0x0001180080E02008  RSL
L2C_DUT_MAP1026                0x0001180080E02010  RSL
L2C_DUT_MAP1027                0x0001180080E02018  RSL
L2C_DUT_MAP1028                0x0001180080E02020  RSL
L2C_DUT_MAP1029                0x0001180080E02028  RSL
L2C_DUT_MAP1030                0x0001180080E02030  RSL
L2C_DUT_MAP1031                0x0001180080E02038  RSL
L2C_DUT_MAP1032                0x0001180080E02040  RSL
L2C_DUT_MAP1033                0x0001180080E02048  RSL
L2C_DUT_MAP1034                0x0001180080E02050  RSL
L2C_DUT_MAP1035                0x0001180080E02058  RSL
L2C_DUT_MAP1036                0x0001180080E02060  RSL
L2C_DUT_MAP1037                0x0001180080E02068  RSL
L2C_DUT_MAP1038                0x0001180080E02070  RSL
L2C_DUT_MAP1039                0x0001180080E02078  RSL
L2C_DUT_MAP1040                0x0001180080E02080  RSL
L2C_DUT_MAP1041                0x0001180080E02088  RSL
L2C_DUT_MAP1042                0x0001180080E02090  RSL
L2C_DUT_MAP1043                0x0001180080E02098  RSL
L2C_DUT_MAP1044                0x0001180080E020A0  RSL
L2C_DUT_MAP1045                0x0001180080E020A8  RSL
L2C_DUT_MAP1046                0x0001180080E020B0  RSL
L2C_DUT_MAP1047                0x0001180080E020B8  RSL
L2C_DUT_MAP1048                0x0001180080E020C0  RSL
L2C_DUT_MAP1049                0x0001180080E020C8  RSL
L2C_DUT_MAP1050                0x0001180080E020D0  RSL
L2C_DUT_MAP1051                0x0001180080E020D8  RSL
L2C_DUT_MAP1052                0x0001180080E020E0  RSL
L2C_DUT_MAP1053                0x0001180080E020E8  RSL
L2C_DUT_MAP1054                0x0001180080E020F0  RSL
L2C_DUT_MAP1055                0x0001180080E020F8  RSL
L2C_DUT_MAP1056                0x0001180080E02100  RSL
L2C_DUT_MAP1057                0x0001180080E02108  RSL
L2C_DUT_MAP1058                0x0001180080E02110  RSL
L2C_DUT_MAP1059                0x0001180080E02118  RSL
L2C_DUT_MAP1060                0x0001180080E02120  RSL
L2C_DUT_MAP1061                0x0001180080E02128  RSL
L2C_DUT_MAP1062                0x0001180080E02130  RSL
L2C_DUT_MAP1063                0x0001180080E02138  RSL
L2C_DUT_MAP1064                0x0001180080E02140  RSL
L2C_DUT_MAP1065                0x0001180080E02148  RSL
L2C_DUT_MAP1066                0x0001180080E02150  RSL
L2C_DUT_MAP1067                0x0001180080E02158  RSL
L2C_DUT_MAP1068                0x0001180080E02160  RSL
L2C_DUT_MAP1069                0x0001180080E02168  RSL
L2C_DUT_MAP1070                0x0001180080E02170  RSL
L2C_DUT_MAP1071                0x0001180080E02178  RSL
L2C_DUT_MAP1072                0x0001180080E02180  RSL
L2C_DUT_MAP1073                0x0001180080E02188  RSL
L2C_DUT_MAP1074                0x0001180080E02190  RSL
L2C_DUT_MAP1075                0x0001180080E02198  RSL
L2C_DUT_MAP1076                0x0001180080E021A0  RSL
L2C_DUT_MAP1077                0x0001180080E021A8  RSL
L2C_DUT_MAP1078                0x0001180080E021B0  RSL
L2C_DUT_MAP1079                0x0001180080E021B8  RSL
L2C_DUT_MAP1080                0x0001180080E021C0  RSL
L2C_DUT_MAP1081                0x0001180080E021C8  RSL
L2C_DUT_MAP1082                0x0001180080E021D0  RSL
L2C_DUT_MAP1083                0x0001180080E021D8  RSL
L2C_DUT_MAP1084                0x0001180080E021E0  RSL
L2C_DUT_MAP1085                0x0001180080E021E8  RSL
L2C_DUT_MAP1086                0x0001180080E021F0  RSL
L2C_DUT_MAP1087                0x0001180080E021F8  RSL
L2C_DUT_MAP1088                0x0001180080E02200  RSL
L2C_DUT_MAP1089                0x0001180080E02208  RSL
L2C_DUT_MAP1090                0x0001180080E02210  RSL
L2C_DUT_MAP1091                0x0001180080E02218  RSL
L2C_DUT_MAP1092                0x0001180080E02220  RSL
L2C_DUT_MAP1093                0x0001180080E02228  RSL
L2C_DUT_MAP1094                0x0001180080E02230  RSL
L2C_DUT_MAP1095                0x0001180080E02238  RSL
L2C_DUT_MAP1096                0x0001180080E02240  RSL
L2C_DUT_MAP1097                0x0001180080E02248  RSL
L2C_DUT_MAP1098                0x0001180080E02250  RSL
L2C_DUT_MAP1099                0x0001180080E02258  RSL
L2C_DUT_MAP1100                0x0001180080E02260  RSL
L2C_DUT_MAP1101                0x0001180080E02268  RSL
L2C_DUT_MAP1102                0x0001180080E02270  RSL
L2C_DUT_MAP1103                0x0001180080E02278  RSL
L2C_DUT_MAP1104                0x0001180080E02280  RSL
L2C_DUT_MAP1105                0x0001180080E02288  RSL
L2C_DUT_MAP1106                0x0001180080E02290  RSL
L2C_DUT_MAP1107                0x0001180080E02298  RSL
L2C_DUT_MAP1108                0x0001180080E022A0  RSL
L2C_DUT_MAP1109                0x0001180080E022A8  RSL
L2C_DUT_MAP1110                0x0001180080E022B0  RSL
L2C_DUT_MAP1111                0x0001180080E022B8  RSL
L2C_DUT_MAP1112                0x0001180080E022C0  RSL
L2C_DUT_MAP1113                0x0001180080E022C8  RSL
L2C_DUT_MAP1114                0x0001180080E022D0  RSL
L2C_DUT_MAP1115                0x0001180080E022D8  RSL
L2C_DUT_MAP1116                0x0001180080E022E0  RSL
L2C_DUT_MAP1117                0x0001180080E022E8  RSL
L2C_DUT_MAP1118                0x0001180080E022F0  RSL
L2C_DUT_MAP1119                0x0001180080E022F8  RSL
L2C_DUT_MAP1120                0x0001180080E02300  RSL
L2C_DUT_MAP1121                0x0001180080E02308  RSL
L2C_DUT_MAP1122                0x0001180080E02310  RSL
L2C_DUT_MAP1123                0x0001180080E02318  RSL
L2C_DUT_MAP1124                0x0001180080E02320  RSL
L2C_DUT_MAP1125                0x0001180080E02328  RSL
L2C_DUT_MAP1126                0x0001180080E02330  RSL
L2C_DUT_MAP1127                0x0001180080E02338  RSL
L2C_DUT_MAP1128                0x0001180080E02340  RSL
L2C_DUT_MAP1129                0x0001180080E02348  RSL
L2C_DUT_MAP1130                0x0001180080E02350  RSL
L2C_DUT_MAP1131                0x0001180080E02358  RSL
L2C_DUT_MAP1132                0x0001180080E02360  RSL
L2C_DUT_MAP1133                0x0001180080E02368  RSL
L2C_DUT_MAP1134                0x0001180080E02370  RSL
L2C_DUT_MAP1135                0x0001180080E02378  RSL
L2C_DUT_MAP1136                0x0001180080E02380  RSL
L2C_DUT_MAP1137                0x0001180080E02388  RSL
L2C_DUT_MAP1138                0x0001180080E02390  RSL
L2C_DUT_MAP1139                0x0001180080E02398  RSL
L2C_DUT_MAP1140                0x0001180080E023A0  RSL
L2C_DUT_MAP1141                0x0001180080E023A8  RSL
L2C_DUT_MAP1142                0x0001180080E023B0  RSL
L2C_DUT_MAP1143                0x0001180080E023B8  RSL
L2C_DUT_MAP1144                0x0001180080E023C0  RSL
L2C_DUT_MAP1145                0x0001180080E023C8  RSL
L2C_DUT_MAP1146                0x0001180080E023D0  RSL
L2C_DUT_MAP1147                0x0001180080E023D8  RSL
L2C_DUT_MAP1148                0x0001180080E023E0  RSL
L2C_DUT_MAP1149                0x0001180080E023E8  RSL
L2C_DUT_MAP1150                0x0001180080E023F0  RSL
L2C_DUT_MAP1151                0x0001180080E023F8  RSL
L2C_DUT_MAP1152                0x0001180080E02400  RSL
L2C_DUT_MAP1153                0x0001180080E02408  RSL
L2C_DUT_MAP1154                0x0001180080E02410  RSL
L2C_DUT_MAP1155                0x0001180080E02418  RSL
L2C_DUT_MAP1156                0x0001180080E02420  RSL
L2C_DUT_MAP1157                0x0001180080E02428  RSL
L2C_DUT_MAP1158                0x0001180080E02430  RSL
L2C_DUT_MAP1159                0x0001180080E02438  RSL
L2C_DUT_MAP1160                0x0001180080E02440  RSL
L2C_DUT_MAP1161                0x0001180080E02448  RSL
L2C_DUT_MAP1162                0x0001180080E02450  RSL
L2C_DUT_MAP1163                0x0001180080E02458  RSL
L2C_DUT_MAP1164                0x0001180080E02460  RSL
L2C_DUT_MAP1165                0x0001180080E02468  RSL
L2C_DUT_MAP1166                0x0001180080E02470  RSL
L2C_DUT_MAP1167                0x0001180080E02478  RSL
L2C_DUT_MAP1168                0x0001180080E02480  RSL
L2C_DUT_MAP1169                0x0001180080E02488  RSL
L2C_DUT_MAP1170                0x0001180080E02490  RSL
L2C_DUT_MAP1171                0x0001180080E02498  RSL
L2C_DUT_MAP1172                0x0001180080E024A0  RSL
L2C_DUT_MAP1173                0x0001180080E024A8  RSL
L2C_DUT_MAP1174                0x0001180080E024B0  RSL
L2C_DUT_MAP1175                0x0001180080E024B8  RSL
L2C_DUT_MAP1176                0x0001180080E024C0  RSL
L2C_DUT_MAP1177                0x0001180080E024C8  RSL
L2C_DUT_MAP1178                0x0001180080E024D0  RSL
L2C_DUT_MAP1179                0x0001180080E024D8  RSL
L2C_DUT_MAP1180                0x0001180080E024E0  RSL
L2C_DUT_MAP1181                0x0001180080E024E8  RSL
L2C_DUT_MAP1182                0x0001180080E024F0  RSL
L2C_DUT_MAP1183                0x0001180080E024F8  RSL
L2C_DUT_MAP1184                0x0001180080E02500  RSL
L2C_DUT_MAP1185                0x0001180080E02508  RSL
L2C_DUT_MAP1186                0x0001180080E02510  RSL
L2C_DUT_MAP1187                0x0001180080E02518  RSL
L2C_DUT_MAP1188                0x0001180080E02520  RSL
L2C_DUT_MAP1189                0x0001180080E02528  RSL
L2C_DUT_MAP1190                0x0001180080E02530  RSL
L2C_DUT_MAP1191                0x0001180080E02538  RSL
L2C_DUT_MAP1192                0x0001180080E02540  RSL
L2C_DUT_MAP1193                0x0001180080E02548  RSL
L2C_DUT_MAP1194                0x0001180080E02550  RSL
L2C_DUT_MAP1195                0x0001180080E02558  RSL
L2C_DUT_MAP1196                0x0001180080E02560  RSL
L2C_DUT_MAP1197                0x0001180080E02568  RSL
L2C_DUT_MAP1198                0x0001180080E02570  RSL
L2C_DUT_MAP1199                0x0001180080E02578  RSL
L2C_DUT_MAP1200                0x0001180080E02580  RSL
L2C_DUT_MAP1201                0x0001180080E02588  RSL
L2C_DUT_MAP1202                0x0001180080E02590  RSL
L2C_DUT_MAP1203                0x0001180080E02598  RSL
L2C_DUT_MAP1204                0x0001180080E025A0  RSL
L2C_DUT_MAP1205                0x0001180080E025A8  RSL
L2C_DUT_MAP1206                0x0001180080E025B0  RSL
L2C_DUT_MAP1207                0x0001180080E025B8  RSL
L2C_DUT_MAP1208                0x0001180080E025C0  RSL
L2C_DUT_MAP1209                0x0001180080E025C8  RSL
L2C_DUT_MAP1210                0x0001180080E025D0  RSL
L2C_DUT_MAP1211                0x0001180080E025D8  RSL
L2C_DUT_MAP1212                0x0001180080E025E0  RSL
L2C_DUT_MAP1213                0x0001180080E025E8  RSL
L2C_DUT_MAP1214                0x0001180080E025F0  RSL
L2C_DUT_MAP1215                0x0001180080E025F8  RSL
L2C_DUT_MAP1216                0x0001180080E02600  RSL
L2C_DUT_MAP1217                0x0001180080E02608  RSL
L2C_DUT_MAP1218                0x0001180080E02610  RSL
L2C_DUT_MAP1219                0x0001180080E02618  RSL
L2C_DUT_MAP1220                0x0001180080E02620  RSL
L2C_DUT_MAP1221                0x0001180080E02628  RSL
L2C_DUT_MAP1222                0x0001180080E02630  RSL
L2C_DUT_MAP1223                0x0001180080E02638  RSL
L2C_DUT_MAP1224                0x0001180080E02640  RSL
L2C_DUT_MAP1225                0x0001180080E02648  RSL
L2C_DUT_MAP1226                0x0001180080E02650  RSL
L2C_DUT_MAP1227                0x0001180080E02658  RSL
L2C_DUT_MAP1228                0x0001180080E02660  RSL
L2C_DUT_MAP1229                0x0001180080E02668  RSL
L2C_DUT_MAP1230                0x0001180080E02670  RSL
L2C_DUT_MAP1231                0x0001180080E02678  RSL
L2C_DUT_MAP1232                0x0001180080E02680  RSL
L2C_DUT_MAP1233                0x0001180080E02688  RSL
L2C_DUT_MAP1234                0x0001180080E02690  RSL
L2C_DUT_MAP1235                0x0001180080E02698  RSL
L2C_DUT_MAP1236                0x0001180080E026A0  RSL
L2C_DUT_MAP1237                0x0001180080E026A8  RSL
L2C_DUT_MAP1238                0x0001180080E026B0  RSL
L2C_DUT_MAP1239                0x0001180080E026B8  RSL
L2C_DUT_MAP1240                0x0001180080E026C0  RSL
L2C_DUT_MAP1241                0x0001180080E026C8  RSL
L2C_DUT_MAP1242                0x0001180080E026D0  RSL
L2C_DUT_MAP1243                0x0001180080E026D8  RSL
L2C_DUT_MAP1244                0x0001180080E026E0  RSL
L2C_DUT_MAP1245                0x0001180080E026E8  RSL
L2C_DUT_MAP1246                0x0001180080E026F0  RSL
L2C_DUT_MAP1247                0x0001180080E026F8  RSL
L2C_DUT_MAP1248                0x0001180080E02700  RSL
L2C_DUT_MAP1249                0x0001180080E02708  RSL
L2C_DUT_MAP1250                0x0001180080E02710  RSL
L2C_DUT_MAP1251                0x0001180080E02718  RSL
L2C_DUT_MAP1252                0x0001180080E02720  RSL
L2C_DUT_MAP1253                0x0001180080E02728  RSL
L2C_DUT_MAP1254                0x0001180080E02730  RSL
L2C_DUT_MAP1255                0x0001180080E02738  RSL
L2C_DUT_MAP1256                0x0001180080E02740  RSL
L2C_DUT_MAP1257                0x0001180080E02748  RSL
L2C_DUT_MAP1258                0x0001180080E02750  RSL
L2C_DUT_MAP1259                0x0001180080E02758  RSL
L2C_DUT_MAP1260                0x0001180080E02760  RSL
L2C_DUT_MAP1261                0x0001180080E02768  RSL
L2C_DUT_MAP1262                0x0001180080E02770  RSL
L2C_DUT_MAP1263                0x0001180080E02778  RSL
L2C_DUT_MAP1264                0x0001180080E02780  RSL
L2C_DUT_MAP1265                0x0001180080E02788  RSL
L2C_DUT_MAP1266                0x0001180080E02790  RSL
L2C_DUT_MAP1267                0x0001180080E02798  RSL
L2C_DUT_MAP1268                0x0001180080E027A0  RSL
L2C_DUT_MAP1269                0x0001180080E027A8  RSL
L2C_DUT_MAP1270                0x0001180080E027B0  RSL
L2C_DUT_MAP1271                0x0001180080E027B8  RSL
L2C_DUT_MAP1272                0x0001180080E027C0  RSL
L2C_DUT_MAP1273                0x0001180080E027C8  RSL
L2C_DUT_MAP1274                0x0001180080E027D0  RSL
L2C_DUT_MAP1275                0x0001180080E027D8  RSL
L2C_DUT_MAP1276                0x0001180080E027E0  RSL
L2C_DUT_MAP1277                0x0001180080E027E8  RSL
L2C_DUT_MAP1278                0x0001180080E027F0  RSL
L2C_DUT_MAP1279                0x0001180080E027F8  RSL
L2C_DUT_MAP1280                0x0001180080E02800  RSL
L2C_DUT_MAP1281                0x0001180080E02808  RSL
L2C_DUT_MAP1282                0x0001180080E02810  RSL
L2C_DUT_MAP1283                0x0001180080E02818  RSL
L2C_DUT_MAP1284                0x0001180080E02820  RSL
L2C_DUT_MAP1285                0x0001180080E02828  RSL
L2C_DUT_MAP1286                0x0001180080E02830  RSL
L2C_DUT_MAP1287                0x0001180080E02838  RSL
L2C_DUT_MAP1288                0x0001180080E02840  RSL
L2C_DUT_MAP1289                0x0001180080E02848  RSL
L2C_DUT_MAP1290                0x0001180080E02850  RSL
L2C_DUT_MAP1291                0x0001180080E02858  RSL
L2C_DUT_MAP1292                0x0001180080E02860  RSL
L2C_DUT_MAP1293                0x0001180080E02868  RSL
L2C_DUT_MAP1294                0x0001180080E02870  RSL
L2C_DUT_MAP1295                0x0001180080E02878  RSL
L2C_DUT_MAP1296                0x0001180080E02880  RSL
L2C_DUT_MAP1297                0x0001180080E02888  RSL
L2C_DUT_MAP1298                0x0001180080E02890  RSL
L2C_DUT_MAP1299                0x0001180080E02898  RSL
L2C_DUT_MAP1300                0x0001180080E028A0  RSL
L2C_DUT_MAP1301                0x0001180080E028A8  RSL
L2C_DUT_MAP1302                0x0001180080E028B0  RSL
L2C_DUT_MAP1303                0x0001180080E028B8  RSL
L2C_DUT_MAP1304                0x0001180080E028C0  RSL
L2C_DUT_MAP1305                0x0001180080E028C8  RSL
L2C_DUT_MAP1306                0x0001180080E028D0  RSL
L2C_DUT_MAP1307                0x0001180080E028D8  RSL
L2C_DUT_MAP1308                0x0001180080E028E0  RSL
L2C_DUT_MAP1309                0x0001180080E028E8  RSL
L2C_DUT_MAP1310                0x0001180080E028F0  RSL
L2C_DUT_MAP1311                0x0001180080E028F8  RSL
L2C_DUT_MAP1312                0x0001180080E02900  RSL
L2C_DUT_MAP1313                0x0001180080E02908  RSL
L2C_DUT_MAP1314                0x0001180080E02910  RSL
L2C_DUT_MAP1315                0x0001180080E02918  RSL
L2C_DUT_MAP1316                0x0001180080E02920  RSL
L2C_DUT_MAP1317                0x0001180080E02928  RSL
L2C_DUT_MAP1318                0x0001180080E02930  RSL
L2C_DUT_MAP1319                0x0001180080E02938  RSL
L2C_DUT_MAP1320                0x0001180080E02940  RSL
L2C_DUT_MAP1321                0x0001180080E02948  RSL
L2C_DUT_MAP1322                0x0001180080E02950  RSL
L2C_DUT_MAP1323                0x0001180080E02958  RSL
L2C_DUT_MAP1324                0x0001180080E02960  RSL
L2C_DUT_MAP1325                0x0001180080E02968  RSL
L2C_DUT_MAP1326                0x0001180080E02970  RSL
L2C_DUT_MAP1327                0x0001180080E02978  RSL
L2C_DUT_MAP1328                0x0001180080E02980  RSL
L2C_DUT_MAP1329                0x0001180080E02988  RSL
L2C_DUT_MAP1330                0x0001180080E02990  RSL
L2C_DUT_MAP1331                0x0001180080E02998  RSL
L2C_DUT_MAP1332                0x0001180080E029A0  RSL
L2C_DUT_MAP1333                0x0001180080E029A8  RSL
L2C_DUT_MAP1334                0x0001180080E029B0  RSL
L2C_DUT_MAP1335                0x0001180080E029B8  RSL
L2C_DUT_MAP1336                0x0001180080E029C0  RSL
L2C_DUT_MAP1337                0x0001180080E029C8  RSL
L2C_DUT_MAP1338                0x0001180080E029D0  RSL
L2C_DUT_MAP1339                0x0001180080E029D8  RSL
L2C_DUT_MAP1340                0x0001180080E029E0  RSL
L2C_DUT_MAP1341                0x0001180080E029E8  RSL
L2C_DUT_MAP1342                0x0001180080E029F0  RSL
L2C_DUT_MAP1343                0x0001180080E029F8  RSL
L2C_DUT_MAP1344                0x0001180080E02A00  RSL
L2C_DUT_MAP1345                0x0001180080E02A08  RSL
L2C_DUT_MAP1346                0x0001180080E02A10  RSL
L2C_DUT_MAP1347                0x0001180080E02A18  RSL
L2C_DUT_MAP1348                0x0001180080E02A20  RSL
L2C_DUT_MAP1349                0x0001180080E02A28  RSL
L2C_DUT_MAP1350                0x0001180080E02A30  RSL
L2C_DUT_MAP1351                0x0001180080E02A38  RSL
L2C_DUT_MAP1352                0x0001180080E02A40  RSL
L2C_DUT_MAP1353                0x0001180080E02A48  RSL
L2C_DUT_MAP1354                0x0001180080E02A50  RSL
L2C_DUT_MAP1355                0x0001180080E02A58  RSL
L2C_DUT_MAP1356                0x0001180080E02A60  RSL
L2C_DUT_MAP1357                0x0001180080E02A68  RSL
L2C_DUT_MAP1358                0x0001180080E02A70  RSL
L2C_DUT_MAP1359                0x0001180080E02A78  RSL
L2C_DUT_MAP1360                0x0001180080E02A80  RSL
L2C_DUT_MAP1361                0x0001180080E02A88  RSL
L2C_DUT_MAP1362                0x0001180080E02A90  RSL
L2C_DUT_MAP1363                0x0001180080E02A98  RSL
L2C_DUT_MAP1364                0x0001180080E02AA0  RSL
L2C_DUT_MAP1365                0x0001180080E02AA8  RSL
L2C_DUT_MAP1366                0x0001180080E02AB0  RSL
L2C_DUT_MAP1367                0x0001180080E02AB8  RSL
L2C_DUT_MAP1368                0x0001180080E02AC0  RSL
L2C_DUT_MAP1369                0x0001180080E02AC8  RSL
L2C_DUT_MAP1370                0x0001180080E02AD0  RSL
L2C_DUT_MAP1371                0x0001180080E02AD8  RSL
L2C_DUT_MAP1372                0x0001180080E02AE0  RSL
L2C_DUT_MAP1373                0x0001180080E02AE8  RSL
L2C_DUT_MAP1374                0x0001180080E02AF0  RSL
L2C_DUT_MAP1375                0x0001180080E02AF8  RSL
L2C_DUT_MAP1376                0x0001180080E02B00  RSL
L2C_DUT_MAP1377                0x0001180080E02B08  RSL
L2C_DUT_MAP1378                0x0001180080E02B10  RSL
L2C_DUT_MAP1379                0x0001180080E02B18  RSL
L2C_DUT_MAP1380                0x0001180080E02B20  RSL
L2C_DUT_MAP1381                0x0001180080E02B28  RSL
L2C_DUT_MAP1382                0x0001180080E02B30  RSL
L2C_DUT_MAP1383                0x0001180080E02B38  RSL
L2C_DUT_MAP1384                0x0001180080E02B40  RSL
L2C_DUT_MAP1385                0x0001180080E02B48  RSL
L2C_DUT_MAP1386                0x0001180080E02B50  RSL
L2C_DUT_MAP1387                0x0001180080E02B58  RSL
L2C_DUT_MAP1388                0x0001180080E02B60  RSL
L2C_DUT_MAP1389                0x0001180080E02B68  RSL
L2C_DUT_MAP1390                0x0001180080E02B70  RSL
L2C_DUT_MAP1391                0x0001180080E02B78  RSL
L2C_DUT_MAP1392                0x0001180080E02B80  RSL
L2C_DUT_MAP1393                0x0001180080E02B88  RSL
L2C_DUT_MAP1394                0x0001180080E02B90  RSL
L2C_DUT_MAP1395                0x0001180080E02B98  RSL
L2C_DUT_MAP1396                0x0001180080E02BA0  RSL
L2C_DUT_MAP1397                0x0001180080E02BA8  RSL
L2C_DUT_MAP1398                0x0001180080E02BB0  RSL
L2C_DUT_MAP1399                0x0001180080E02BB8  RSL
L2C_DUT_MAP1400                0x0001180080E02BC0  RSL
L2C_DUT_MAP1401                0x0001180080E02BC8  RSL
L2C_DUT_MAP1402                0x0001180080E02BD0  RSL
L2C_DUT_MAP1403                0x0001180080E02BD8  RSL
L2C_DUT_MAP1404                0x0001180080E02BE0  RSL
L2C_DUT_MAP1405                0x0001180080E02BE8  RSL
L2C_DUT_MAP1406                0x0001180080E02BF0  RSL
L2C_DUT_MAP1407                0x0001180080E02BF8  RSL
L2C_DUT_MAP1408                0x0001180080E02C00  RSL
L2C_DUT_MAP1409                0x0001180080E02C08  RSL
L2C_DUT_MAP1410                0x0001180080E02C10  RSL
L2C_DUT_MAP1411                0x0001180080E02C18  RSL
L2C_DUT_MAP1412                0x0001180080E02C20  RSL
L2C_DUT_MAP1413                0x0001180080E02C28  RSL
L2C_DUT_MAP1414                0x0001180080E02C30  RSL
L2C_DUT_MAP1415                0x0001180080E02C38  RSL
L2C_DUT_MAP1416                0x0001180080E02C40  RSL
L2C_DUT_MAP1417                0x0001180080E02C48  RSL
L2C_DUT_MAP1418                0x0001180080E02C50  RSL
L2C_DUT_MAP1419                0x0001180080E02C58  RSL
L2C_DUT_MAP1420                0x0001180080E02C60  RSL
L2C_DUT_MAP1421                0x0001180080E02C68  RSL
L2C_DUT_MAP1422                0x0001180080E02C70  RSL
L2C_DUT_MAP1423                0x0001180080E02C78  RSL
L2C_DUT_MAP1424                0x0001180080E02C80  RSL
L2C_DUT_MAP1425                0x0001180080E02C88  RSL
L2C_DUT_MAP1426                0x0001180080E02C90  RSL
L2C_DUT_MAP1427                0x0001180080E02C98  RSL
L2C_DUT_MAP1428                0x0001180080E02CA0  RSL
L2C_DUT_MAP1429                0x0001180080E02CA8  RSL
L2C_DUT_MAP1430                0x0001180080E02CB0  RSL
L2C_DUT_MAP1431                0x0001180080E02CB8  RSL
L2C_DUT_MAP1432                0x0001180080E02CC0  RSL
L2C_DUT_MAP1433                0x0001180080E02CC8  RSL
L2C_DUT_MAP1434                0x0001180080E02CD0  RSL
L2C_DUT_MAP1435                0x0001180080E02CD8  RSL
L2C_DUT_MAP1436                0x0001180080E02CE0  RSL
L2C_DUT_MAP1437                0x0001180080E02CE8  RSL
L2C_DUT_MAP1438                0x0001180080E02CF0  RSL
L2C_DUT_MAP1439                0x0001180080E02CF8  RSL
L2C_DUT_MAP1440                0x0001180080E02D00  RSL
L2C_DUT_MAP1441                0x0001180080E02D08  RSL
L2C_DUT_MAP1442                0x0001180080E02D10  RSL
L2C_DUT_MAP1443                0x0001180080E02D18  RSL
L2C_DUT_MAP1444                0x0001180080E02D20  RSL
L2C_DUT_MAP1445                0x0001180080E02D28  RSL
L2C_DUT_MAP1446                0x0001180080E02D30  RSL
L2C_DUT_MAP1447                0x0001180080E02D38  RSL
L2C_DUT_MAP1448                0x0001180080E02D40  RSL
L2C_DUT_MAP1449                0x0001180080E02D48  RSL
L2C_DUT_MAP1450                0x0001180080E02D50  RSL
L2C_DUT_MAP1451                0x0001180080E02D58  RSL
L2C_DUT_MAP1452                0x0001180080E02D60  RSL
L2C_DUT_MAP1453                0x0001180080E02D68  RSL
L2C_DUT_MAP1454                0x0001180080E02D70  RSL
L2C_DUT_MAP1455                0x0001180080E02D78  RSL
L2C_DUT_MAP1456                0x0001180080E02D80  RSL
L2C_DUT_MAP1457                0x0001180080E02D88  RSL
L2C_DUT_MAP1458                0x0001180080E02D90  RSL
L2C_DUT_MAP1459                0x0001180080E02D98  RSL
L2C_DUT_MAP1460                0x0001180080E02DA0  RSL
L2C_DUT_MAP1461                0x0001180080E02DA8  RSL
L2C_DUT_MAP1462                0x0001180080E02DB0  RSL
L2C_DUT_MAP1463                0x0001180080E02DB8  RSL
L2C_DUT_MAP1464                0x0001180080E02DC0  RSL
L2C_DUT_MAP1465                0x0001180080E02DC8  RSL
L2C_DUT_MAP1466                0x0001180080E02DD0  RSL
L2C_DUT_MAP1467                0x0001180080E02DD8  RSL
L2C_DUT_MAP1468                0x0001180080E02DE0  RSL
L2C_DUT_MAP1469                0x0001180080E02DE8  RSL
L2C_DUT_MAP1470                0x0001180080E02DF0  RSL
L2C_DUT_MAP1471                0x0001180080E02DF8  RSL
L2C_DUT_MAP1472                0x0001180080E02E00  RSL
L2C_DUT_MAP1473                0x0001180080E02E08  RSL
L2C_DUT_MAP1474                0x0001180080E02E10  RSL
L2C_DUT_MAP1475                0x0001180080E02E18  RSL
L2C_DUT_MAP1476                0x0001180080E02E20  RSL
L2C_DUT_MAP1477                0x0001180080E02E28  RSL
L2C_DUT_MAP1478                0x0001180080E02E30  RSL
L2C_DUT_MAP1479                0x0001180080E02E38  RSL
L2C_DUT_MAP1480                0x0001180080E02E40  RSL
L2C_DUT_MAP1481                0x0001180080E02E48  RSL
L2C_DUT_MAP1482                0x0001180080E02E50  RSL
L2C_DUT_MAP1483                0x0001180080E02E58  RSL
L2C_DUT_MAP1484                0x0001180080E02E60  RSL
L2C_DUT_MAP1485                0x0001180080E02E68  RSL
L2C_DUT_MAP1486                0x0001180080E02E70  RSL
L2C_DUT_MAP1487                0x0001180080E02E78  RSL
L2C_DUT_MAP1488                0x0001180080E02E80  RSL
L2C_DUT_MAP1489                0x0001180080E02E88  RSL
L2C_DUT_MAP1490                0x0001180080E02E90  RSL
L2C_DUT_MAP1491                0x0001180080E02E98  RSL
L2C_DUT_MAP1492                0x0001180080E02EA0  RSL
L2C_DUT_MAP1493                0x0001180080E02EA8  RSL
L2C_DUT_MAP1494                0x0001180080E02EB0  RSL
L2C_DUT_MAP1495                0x0001180080E02EB8  RSL
L2C_DUT_MAP1496                0x0001180080E02EC0  RSL
L2C_DUT_MAP1497                0x0001180080E02EC8  RSL
L2C_DUT_MAP1498                0x0001180080E02ED0  RSL
L2C_DUT_MAP1499                0x0001180080E02ED8  RSL
L2C_DUT_MAP1500                0x0001180080E02EE0  RSL
L2C_DUT_MAP1501                0x0001180080E02EE8  RSL
L2C_DUT_MAP1502                0x0001180080E02EF0  RSL
L2C_DUT_MAP1503                0x0001180080E02EF8  RSL
L2C_DUT_MAP1504                0x0001180080E02F00  RSL
L2C_DUT_MAP1505                0x0001180080E02F08  RSL
L2C_DUT_MAP1506                0x0001180080E02F10  RSL
L2C_DUT_MAP1507                0x0001180080E02F18  RSL
L2C_DUT_MAP1508                0x0001180080E02F20  RSL
L2C_DUT_MAP1509                0x0001180080E02F28  RSL
L2C_DUT_MAP1510                0x0001180080E02F30  RSL
L2C_DUT_MAP1511                0x0001180080E02F38  RSL
L2C_DUT_MAP1512                0x0001180080E02F40  RSL
L2C_DUT_MAP1513                0x0001180080E02F48  RSL
L2C_DUT_MAP1514                0x0001180080E02F50  RSL
L2C_DUT_MAP1515                0x0001180080E02F58  RSL
L2C_DUT_MAP1516                0x0001180080E02F60  RSL
L2C_DUT_MAP1517                0x0001180080E02F68  RSL
L2C_DUT_MAP1518                0x0001180080E02F70  RSL
L2C_DUT_MAP1519                0x0001180080E02F78  RSL
L2C_DUT_MAP1520                0x0001180080E02F80  RSL
L2C_DUT_MAP1521                0x0001180080E02F88  RSL
L2C_DUT_MAP1522                0x0001180080E02F90  RSL
L2C_DUT_MAP1523                0x0001180080E02F98  RSL
L2C_DUT_MAP1524                0x0001180080E02FA0  RSL
L2C_DUT_MAP1525                0x0001180080E02FA8  RSL
L2C_DUT_MAP1526                0x0001180080E02FB0  RSL
L2C_DUT_MAP1527                0x0001180080E02FB8  RSL
L2C_DUT_MAP1528                0x0001180080E02FC0  RSL
L2C_DUT_MAP1529                0x0001180080E02FC8  RSL
L2C_DUT_MAP1530                0x0001180080E02FD0  RSL
L2C_DUT_MAP1531                0x0001180080E02FD8  RSL
L2C_DUT_MAP1532                0x0001180080E02FE0  RSL
L2C_DUT_MAP1533                0x0001180080E02FE8  RSL
L2C_DUT_MAP1534                0x0001180080E02FF0  RSL
L2C_DUT_MAP1535                0x0001180080E02FF8  RSL
L2C_DUT_MAP1536                0x0001180080E03000  RSL
L2C_DUT_MAP1537                0x0001180080E03008  RSL
L2C_DUT_MAP1538                0x0001180080E03010  RSL
L2C_DUT_MAP1539                0x0001180080E03018  RSL
L2C_DUT_MAP1540                0x0001180080E03020  RSL
L2C_DUT_MAP1541                0x0001180080E03028  RSL
L2C_DUT_MAP1542                0x0001180080E03030  RSL
L2C_DUT_MAP1543                0x0001180080E03038  RSL
L2C_DUT_MAP1544                0x0001180080E03040  RSL
L2C_DUT_MAP1545                0x0001180080E03048  RSL
L2C_DUT_MAP1546                0x0001180080E03050  RSL
L2C_DUT_MAP1547                0x0001180080E03058  RSL
L2C_DUT_MAP1548                0x0001180080E03060  RSL
L2C_DUT_MAP1549                0x0001180080E03068  RSL
L2C_DUT_MAP1550                0x0001180080E03070  RSL
L2C_DUT_MAP1551                0x0001180080E03078  RSL
L2C_DUT_MAP1552                0x0001180080E03080  RSL
L2C_DUT_MAP1553                0x0001180080E03088  RSL
L2C_DUT_MAP1554                0x0001180080E03090  RSL
L2C_DUT_MAP1555                0x0001180080E03098  RSL
L2C_DUT_MAP1556                0x0001180080E030A0  RSL
L2C_DUT_MAP1557                0x0001180080E030A8  RSL
L2C_DUT_MAP1558                0x0001180080E030B0  RSL
L2C_DUT_MAP1559                0x0001180080E030B8  RSL
L2C_DUT_MAP1560                0x0001180080E030C0  RSL
L2C_DUT_MAP1561                0x0001180080E030C8  RSL
L2C_DUT_MAP1562                0x0001180080E030D0  RSL
L2C_DUT_MAP1563                0x0001180080E030D8  RSL
L2C_DUT_MAP1564                0x0001180080E030E0  RSL
L2C_DUT_MAP1565                0x0001180080E030E8  RSL
L2C_DUT_MAP1566                0x0001180080E030F0  RSL
L2C_DUT_MAP1567                0x0001180080E030F8  RSL
L2C_DUT_MAP1568                0x0001180080E03100  RSL
L2C_DUT_MAP1569                0x0001180080E03108  RSL
L2C_DUT_MAP1570                0x0001180080E03110  RSL
L2C_DUT_MAP1571                0x0001180080E03118  RSL
L2C_DUT_MAP1572                0x0001180080E03120  RSL
L2C_DUT_MAP1573                0x0001180080E03128  RSL
L2C_DUT_MAP1574                0x0001180080E03130  RSL
L2C_DUT_MAP1575                0x0001180080E03138  RSL
L2C_DUT_MAP1576                0x0001180080E03140  RSL
L2C_DUT_MAP1577                0x0001180080E03148  RSL
L2C_DUT_MAP1578                0x0001180080E03150  RSL
L2C_DUT_MAP1579                0x0001180080E03158  RSL
L2C_DUT_MAP1580                0x0001180080E03160  RSL
L2C_DUT_MAP1581                0x0001180080E03168  RSL
L2C_DUT_MAP1582                0x0001180080E03170  RSL
L2C_DUT_MAP1583                0x0001180080E03178  RSL
L2C_DUT_MAP1584                0x0001180080E03180  RSL
L2C_DUT_MAP1585                0x0001180080E03188  RSL
L2C_DUT_MAP1586                0x0001180080E03190  RSL
L2C_DUT_MAP1587                0x0001180080E03198  RSL
L2C_DUT_MAP1588                0x0001180080E031A0  RSL
L2C_DUT_MAP1589                0x0001180080E031A8  RSL
L2C_DUT_MAP1590                0x0001180080E031B0  RSL
L2C_DUT_MAP1591                0x0001180080E031B8  RSL
L2C_DUT_MAP1592                0x0001180080E031C0  RSL
L2C_DUT_MAP1593                0x0001180080E031C8  RSL
L2C_DUT_MAP1594                0x0001180080E031D0  RSL
L2C_DUT_MAP1595                0x0001180080E031D8  RSL
L2C_DUT_MAP1596                0x0001180080E031E0  RSL
L2C_DUT_MAP1597                0x0001180080E031E8  RSL
L2C_DUT_MAP1598                0x0001180080E031F0  RSL
L2C_DUT_MAP1599                0x0001180080E031F8  RSL
L2C_DUT_MAP1600                0x0001180080E03200  RSL
L2C_DUT_MAP1601                0x0001180080E03208  RSL
L2C_DUT_MAP1602                0x0001180080E03210  RSL
L2C_DUT_MAP1603                0x0001180080E03218  RSL
L2C_DUT_MAP1604                0x0001180080E03220  RSL
L2C_DUT_MAP1605                0x0001180080E03228  RSL
L2C_DUT_MAP1606                0x0001180080E03230  RSL
L2C_DUT_MAP1607                0x0001180080E03238  RSL
L2C_DUT_MAP1608                0x0001180080E03240  RSL
L2C_DUT_MAP1609                0x0001180080E03248  RSL
L2C_DUT_MAP1610                0x0001180080E03250  RSL
L2C_DUT_MAP1611                0x0001180080E03258  RSL
L2C_DUT_MAP1612                0x0001180080E03260  RSL
L2C_DUT_MAP1613                0x0001180080E03268  RSL
L2C_DUT_MAP1614                0x0001180080E03270  RSL
L2C_DUT_MAP1615                0x0001180080E03278  RSL
L2C_DUT_MAP1616                0x0001180080E03280  RSL
L2C_DUT_MAP1617                0x0001180080E03288  RSL
L2C_DUT_MAP1618                0x0001180080E03290  RSL
L2C_DUT_MAP1619                0x0001180080E03298  RSL
L2C_DUT_MAP1620                0x0001180080E032A0  RSL
L2C_DUT_MAP1621                0x0001180080E032A8  RSL
L2C_DUT_MAP1622                0x0001180080E032B0  RSL
L2C_DUT_MAP1623                0x0001180080E032B8  RSL
L2C_DUT_MAP1624                0x0001180080E032C0  RSL
L2C_DUT_MAP1625                0x0001180080E032C8  RSL
L2C_DUT_MAP1626                0x0001180080E032D0  RSL
L2C_DUT_MAP1627                0x0001180080E032D8  RSL
L2C_DUT_MAP1628                0x0001180080E032E0  RSL
L2C_DUT_MAP1629                0x0001180080E032E8  RSL
L2C_DUT_MAP1630                0x0001180080E032F0  RSL
L2C_DUT_MAP1631                0x0001180080E032F8  RSL
L2C_DUT_MAP1632                0x0001180080E03300  RSL
L2C_DUT_MAP1633                0x0001180080E03308  RSL
L2C_DUT_MAP1634                0x0001180080E03310  RSL
L2C_DUT_MAP1635                0x0001180080E03318  RSL
L2C_DUT_MAP1636                0x0001180080E03320  RSL
L2C_DUT_MAP1637                0x0001180080E03328  RSL
L2C_DUT_MAP1638                0x0001180080E03330  RSL
L2C_DUT_MAP1639                0x0001180080E03338  RSL
L2C_DUT_MAP1640                0x0001180080E03340  RSL
L2C_DUT_MAP1641                0x0001180080E03348  RSL
L2C_DUT_MAP1642                0x0001180080E03350  RSL
L2C_DUT_MAP1643                0x0001180080E03358  RSL
L2C_DUT_MAP1644                0x0001180080E03360  RSL
L2C_DUT_MAP1645                0x0001180080E03368  RSL
L2C_DUT_MAP1646                0x0001180080E03370  RSL
L2C_DUT_MAP1647                0x0001180080E03378  RSL
L2C_DUT_MAP1648                0x0001180080E03380  RSL
L2C_DUT_MAP1649                0x0001180080E03388  RSL
L2C_DUT_MAP1650                0x0001180080E03390  RSL
L2C_DUT_MAP1651                0x0001180080E03398  RSL
L2C_DUT_MAP1652                0x0001180080E033A0  RSL
L2C_DUT_MAP1653                0x0001180080E033A8  RSL
L2C_DUT_MAP1654                0x0001180080E033B0  RSL
L2C_DUT_MAP1655                0x0001180080E033B8  RSL
L2C_DUT_MAP1656                0x0001180080E033C0  RSL
L2C_DUT_MAP1657                0x0001180080E033C8  RSL
L2C_DUT_MAP1658                0x0001180080E033D0  RSL
L2C_DUT_MAP1659                0x0001180080E033D8  RSL
L2C_DUT_MAP1660                0x0001180080E033E0  RSL
L2C_DUT_MAP1661                0x0001180080E033E8  RSL
L2C_DUT_MAP1662                0x0001180080E033F0  RSL
L2C_DUT_MAP1663                0x0001180080E033F8  RSL
L2C_DUT_MAP1664                0x0001180080E03400  RSL
L2C_DUT_MAP1665                0x0001180080E03408  RSL
L2C_DUT_MAP1666                0x0001180080E03410  RSL
L2C_DUT_MAP1667                0x0001180080E03418  RSL
L2C_DUT_MAP1668                0x0001180080E03420  RSL
L2C_DUT_MAP1669                0x0001180080E03428  RSL
L2C_DUT_MAP1670                0x0001180080E03430  RSL
L2C_DUT_MAP1671                0x0001180080E03438  RSL
L2C_DUT_MAP1672                0x0001180080E03440  RSL
L2C_DUT_MAP1673                0x0001180080E03448  RSL
L2C_DUT_MAP1674                0x0001180080E03450  RSL
L2C_DUT_MAP1675                0x0001180080E03458  RSL
L2C_DUT_MAP1676                0x0001180080E03460  RSL
L2C_DUT_MAP1677                0x0001180080E03468  RSL
L2C_DUT_MAP1678                0x0001180080E03470  RSL
L2C_DUT_MAP1679                0x0001180080E03478  RSL
L2C_DUT_MAP1680                0x0001180080E03480  RSL
L2C_DUT_MAP1681                0x0001180080E03488  RSL
L2C_DUT_MAP1682                0x0001180080E03490  RSL
L2C_DUT_MAP1683                0x0001180080E03498  RSL
L2C_DUT_MAP1684                0x0001180080E034A0  RSL
L2C_DUT_MAP1685                0x0001180080E034A8  RSL
L2C_DUT_MAP1686                0x0001180080E034B0  RSL
L2C_DUT_MAP1687                0x0001180080E034B8  RSL
L2C_DUT_MAP1688                0x0001180080E034C0  RSL
L2C_DUT_MAP1689                0x0001180080E034C8  RSL
L2C_DUT_MAP1690                0x0001180080E034D0  RSL
L2C_DUT_MAP1691                0x0001180080E034D8  RSL
L2C_DUT_MAP1692                0x0001180080E034E0  RSL
L2C_DUT_MAP1693                0x0001180080E034E8  RSL
L2C_DUT_MAP1694                0x0001180080E034F0  RSL
L2C_DUT_MAP1695                0x0001180080E034F8  RSL
L2C_DUT_MAP1696                0x0001180080E03500  RSL
L2C_DUT_MAP1697                0x0001180080E03508  RSL
L2C_DUT_MAP1698                0x0001180080E03510  RSL
L2C_DUT_MAP1699                0x0001180080E03518  RSL
L2C_DUT_MAP1700                0x0001180080E03520  RSL
L2C_DUT_MAP1701                0x0001180080E03528  RSL
L2C_DUT_MAP1702                0x0001180080E03530  RSL
L2C_DUT_MAP1703                0x0001180080E03538  RSL
L2C_DUT_MAP1704                0x0001180080E03540  RSL
L2C_DUT_MAP1705                0x0001180080E03548  RSL
L2C_DUT_MAP1706                0x0001180080E03550  RSL
L2C_DUT_MAP1707                0x0001180080E03558  RSL
L2C_DUT_MAP1708                0x0001180080E03560  RSL
L2C_DUT_MAP1709                0x0001180080E03568  RSL
L2C_DUT_MAP1710                0x0001180080E03570  RSL
L2C_DUT_MAP1711                0x0001180080E03578  RSL
L2C_DUT_MAP1712                0x0001180080E03580  RSL
L2C_DUT_MAP1713                0x0001180080E03588  RSL
L2C_DUT_MAP1714                0x0001180080E03590  RSL
L2C_DUT_MAP1715                0x0001180080E03598  RSL
L2C_DUT_MAP1716                0x0001180080E035A0  RSL
L2C_DUT_MAP1717                0x0001180080E035A8  RSL
L2C_DUT_MAP1718                0x0001180080E035B0  RSL
L2C_DUT_MAP1719                0x0001180080E035B8  RSL
L2C_DUT_MAP1720                0x0001180080E035C0  RSL
L2C_DUT_MAP1721                0x0001180080E035C8  RSL
L2C_DUT_MAP1722                0x0001180080E035D0  RSL
L2C_DUT_MAP1723                0x0001180080E035D8  RSL
L2C_DUT_MAP1724                0x0001180080E035E0  RSL
L2C_DUT_MAP1725                0x0001180080E035E8  RSL
L2C_DUT_MAP1726                0x0001180080E035F0  RSL
L2C_DUT_MAP1727                0x0001180080E035F8  RSL
L2C_DUT_MAP1728                0x0001180080E03600  RSL
L2C_DUT_MAP1729                0x0001180080E03608  RSL
L2C_DUT_MAP1730                0x0001180080E03610  RSL
L2C_DUT_MAP1731                0x0001180080E03618  RSL
L2C_DUT_MAP1732                0x0001180080E03620  RSL
L2C_DUT_MAP1733                0x0001180080E03628  RSL
L2C_DUT_MAP1734                0x0001180080E03630  RSL
L2C_DUT_MAP1735                0x0001180080E03638  RSL
L2C_DUT_MAP1736                0x0001180080E03640  RSL
L2C_DUT_MAP1737                0x0001180080E03648  RSL
L2C_DUT_MAP1738                0x0001180080E03650  RSL
L2C_DUT_MAP1739                0x0001180080E03658  RSL
L2C_DUT_MAP1740                0x0001180080E03660  RSL
L2C_DUT_MAP1741                0x0001180080E03668  RSL
L2C_DUT_MAP1742                0x0001180080E03670  RSL
L2C_DUT_MAP1743                0x0001180080E03678  RSL
L2C_DUT_MAP1744                0x0001180080E03680  RSL
L2C_DUT_MAP1745                0x0001180080E03688  RSL
L2C_DUT_MAP1746                0x0001180080E03690  RSL
L2C_DUT_MAP1747                0x0001180080E03698  RSL
L2C_DUT_MAP1748                0x0001180080E036A0  RSL
L2C_DUT_MAP1749                0x0001180080E036A8  RSL
L2C_DUT_MAP1750                0x0001180080E036B0  RSL
L2C_DUT_MAP1751                0x0001180080E036B8  RSL
L2C_DUT_MAP1752                0x0001180080E036C0  RSL
L2C_DUT_MAP1753                0x0001180080E036C8  RSL
L2C_DUT_MAP1754                0x0001180080E036D0  RSL
L2C_DUT_MAP1755                0x0001180080E036D8  RSL
L2C_DUT_MAP1756                0x0001180080E036E0  RSL
L2C_DUT_MAP1757                0x0001180080E036E8  RSL
L2C_DUT_MAP1758                0x0001180080E036F0  RSL
L2C_DUT_MAP1759                0x0001180080E036F8  RSL
L2C_DUT_MAP1760                0x0001180080E03700  RSL
L2C_DUT_MAP1761                0x0001180080E03708  RSL
L2C_DUT_MAP1762                0x0001180080E03710  RSL
L2C_DUT_MAP1763                0x0001180080E03718  RSL
L2C_DUT_MAP1764                0x0001180080E03720  RSL
L2C_DUT_MAP1765                0x0001180080E03728  RSL
L2C_DUT_MAP1766                0x0001180080E03730  RSL
L2C_DUT_MAP1767                0x0001180080E03738  RSL
L2C_DUT_MAP1768                0x0001180080E03740  RSL
L2C_DUT_MAP1769                0x0001180080E03748  RSL
L2C_DUT_MAP1770                0x0001180080E03750  RSL
L2C_DUT_MAP1771                0x0001180080E03758  RSL
L2C_DUT_MAP1772                0x0001180080E03760  RSL
L2C_DUT_MAP1773                0x0001180080E03768  RSL
L2C_DUT_MAP1774                0x0001180080E03770  RSL
L2C_DUT_MAP1775                0x0001180080E03778  RSL
L2C_DUT_MAP1776                0x0001180080E03780  RSL
L2C_DUT_MAP1777                0x0001180080E03788  RSL
L2C_DUT_MAP1778                0x0001180080E03790  RSL
L2C_DUT_MAP1779                0x0001180080E03798  RSL
L2C_DUT_MAP1780                0x0001180080E037A0  RSL
L2C_DUT_MAP1781                0x0001180080E037A8  RSL
L2C_DUT_MAP1782                0x0001180080E037B0  RSL
L2C_DUT_MAP1783                0x0001180080E037B8  RSL
L2C_DUT_MAP1784                0x0001180080E037C0  RSL
L2C_DUT_MAP1785                0x0001180080E037C8  RSL
L2C_DUT_MAP1786                0x0001180080E037D0  RSL
L2C_DUT_MAP1787                0x0001180080E037D8  RSL
L2C_DUT_MAP1788                0x0001180080E037E0  RSL
L2C_DUT_MAP1789                0x0001180080E037E8  RSL
L2C_DUT_MAP1790                0x0001180080E037F0  RSL
L2C_DUT_MAP1791                0x0001180080E037F8  RSL
L2C_DUT_MAP1792                0x0001180080E03800  RSL
L2C_DUT_MAP1793                0x0001180080E03808  RSL
L2C_DUT_MAP1794                0x0001180080E03810  RSL
L2C_DUT_MAP1795                0x0001180080E03818  RSL
L2C_DUT_MAP1796                0x0001180080E03820  RSL
L2C_DUT_MAP1797                0x0001180080E03828  RSL
L2C_DUT_MAP1798                0x0001180080E03830  RSL
L2C_DUT_MAP1799                0x0001180080E03838  RSL
L2C_DUT_MAP1800                0x0001180080E03840  RSL
L2C_DUT_MAP1801                0x0001180080E03848  RSL
L2C_DUT_MAP1802                0x0001180080E03850  RSL
L2C_DUT_MAP1803                0x0001180080E03858  RSL
L2C_DUT_MAP1804                0x0001180080E03860  RSL
L2C_DUT_MAP1805                0x0001180080E03868  RSL
L2C_DUT_MAP1806                0x0001180080E03870  RSL
L2C_DUT_MAP1807                0x0001180080E03878  RSL
L2C_DUT_MAP1808                0x0001180080E03880  RSL
L2C_DUT_MAP1809                0x0001180080E03888  RSL
L2C_DUT_MAP1810                0x0001180080E03890  RSL
L2C_DUT_MAP1811                0x0001180080E03898  RSL
L2C_DUT_MAP1812                0x0001180080E038A0  RSL
L2C_DUT_MAP1813                0x0001180080E038A8  RSL
L2C_DUT_MAP1814                0x0001180080E038B0  RSL
L2C_DUT_MAP1815                0x0001180080E038B8  RSL
L2C_DUT_MAP1816                0x0001180080E038C0  RSL
L2C_DUT_MAP1817                0x0001180080E038C8  RSL
L2C_DUT_MAP1818                0x0001180080E038D0  RSL
L2C_DUT_MAP1819                0x0001180080E038D8  RSL
L2C_DUT_MAP1820                0x0001180080E038E0  RSL
L2C_DUT_MAP1821                0x0001180080E038E8  RSL
L2C_DUT_MAP1822                0x0001180080E038F0  RSL
L2C_DUT_MAP1823                0x0001180080E038F8  RSL
L2C_DUT_MAP1824                0x0001180080E03900  RSL
L2C_DUT_MAP1825                0x0001180080E03908  RSL
L2C_DUT_MAP1826                0x0001180080E03910  RSL
L2C_DUT_MAP1827                0x0001180080E03918  RSL
L2C_DUT_MAP1828                0x0001180080E03920  RSL
L2C_DUT_MAP1829                0x0001180080E03928  RSL
L2C_DUT_MAP1830                0x0001180080E03930  RSL
L2C_DUT_MAP1831                0x0001180080E03938  RSL
L2C_DUT_MAP1832                0x0001180080E03940  RSL
L2C_DUT_MAP1833                0x0001180080E03948  RSL
L2C_DUT_MAP1834                0x0001180080E03950  RSL
L2C_DUT_MAP1835                0x0001180080E03958  RSL
L2C_DUT_MAP1836                0x0001180080E03960  RSL
L2C_DUT_MAP1837                0x0001180080E03968  RSL
L2C_DUT_MAP1838                0x0001180080E03970  RSL
L2C_DUT_MAP1839                0x0001180080E03978  RSL
L2C_DUT_MAP1840                0x0001180080E03980  RSL
L2C_DUT_MAP1841                0x0001180080E03988  RSL
L2C_DUT_MAP1842                0x0001180080E03990  RSL
L2C_DUT_MAP1843                0x0001180080E03998  RSL
L2C_DUT_MAP1844                0x0001180080E039A0  RSL
L2C_DUT_MAP1845                0x0001180080E039A8  RSL
L2C_DUT_MAP1846                0x0001180080E039B0  RSL
L2C_DUT_MAP1847                0x0001180080E039B8  RSL
L2C_DUT_MAP1848                0x0001180080E039C0  RSL
L2C_DUT_MAP1849                0x0001180080E039C8  RSL
L2C_DUT_MAP1850                0x0001180080E039D0  RSL
L2C_DUT_MAP1851                0x0001180080E039D8  RSL
L2C_DUT_MAP1852                0x0001180080E039E0  RSL
L2C_DUT_MAP1853                0x0001180080E039E8  RSL
L2C_DUT_MAP1854                0x0001180080E039F0  RSL
L2C_DUT_MAP1855                0x0001180080E039F8  RSL
L2C_DUT_MAP1856                0x0001180080E03A00  RSL
L2C_DUT_MAP1857                0x0001180080E03A08  RSL
L2C_DUT_MAP1858                0x0001180080E03A10  RSL
L2C_DUT_MAP1859                0x0001180080E03A18  RSL
L2C_DUT_MAP1860                0x0001180080E03A20  RSL
L2C_DUT_MAP1861                0x0001180080E03A28  RSL
L2C_DUT_MAP1862                0x0001180080E03A30  RSL
L2C_DUT_MAP1863                0x0001180080E03A38  RSL
L2C_DUT_MAP1864                0x0001180080E03A40  RSL
L2C_DUT_MAP1865                0x0001180080E03A48  RSL
L2C_DUT_MAP1866                0x0001180080E03A50  RSL
L2C_DUT_MAP1867                0x0001180080E03A58  RSL
L2C_DUT_MAP1868                0x0001180080E03A60  RSL
L2C_DUT_MAP1869                0x0001180080E03A68  RSL
L2C_DUT_MAP1870                0x0001180080E03A70  RSL
L2C_DUT_MAP1871                0x0001180080E03A78  RSL
L2C_DUT_MAP1872                0x0001180080E03A80  RSL
L2C_DUT_MAP1873                0x0001180080E03A88  RSL
L2C_DUT_MAP1874                0x0001180080E03A90  RSL
L2C_DUT_MAP1875                0x0001180080E03A98  RSL
L2C_DUT_MAP1876                0x0001180080E03AA0  RSL
L2C_DUT_MAP1877                0x0001180080E03AA8  RSL
L2C_DUT_MAP1878                0x0001180080E03AB0  RSL
L2C_DUT_MAP1879                0x0001180080E03AB8  RSL
L2C_DUT_MAP1880                0x0001180080E03AC0  RSL
L2C_DUT_MAP1881                0x0001180080E03AC8  RSL
L2C_DUT_MAP1882                0x0001180080E03AD0  RSL
L2C_DUT_MAP1883                0x0001180080E03AD8  RSL
L2C_DUT_MAP1884                0x0001180080E03AE0  RSL
L2C_DUT_MAP1885                0x0001180080E03AE8  RSL
L2C_DUT_MAP1886                0x0001180080E03AF0  RSL
L2C_DUT_MAP1887                0x0001180080E03AF8  RSL
L2C_DUT_MAP1888                0x0001180080E03B00  RSL
L2C_DUT_MAP1889                0x0001180080E03B08  RSL
L2C_DUT_MAP1890                0x0001180080E03B10  RSL
L2C_DUT_MAP1891                0x0001180080E03B18  RSL
L2C_DUT_MAP1892                0x0001180080E03B20  RSL
L2C_DUT_MAP1893                0x0001180080E03B28  RSL
L2C_DUT_MAP1894                0x0001180080E03B30  RSL
L2C_DUT_MAP1895                0x0001180080E03B38  RSL
L2C_DUT_MAP1896                0x0001180080E03B40  RSL
L2C_DUT_MAP1897                0x0001180080E03B48  RSL
L2C_DUT_MAP1898                0x0001180080E03B50  RSL
L2C_DUT_MAP1899                0x0001180080E03B58  RSL
L2C_DUT_MAP1900                0x0001180080E03B60  RSL
L2C_DUT_MAP1901                0x0001180080E03B68  RSL
L2C_DUT_MAP1902                0x0001180080E03B70  RSL
L2C_DUT_MAP1903                0x0001180080E03B78  RSL
L2C_DUT_MAP1904                0x0001180080E03B80  RSL
L2C_DUT_MAP1905                0x0001180080E03B88  RSL
L2C_DUT_MAP1906                0x0001180080E03B90  RSL
L2C_DUT_MAP1907                0x0001180080E03B98  RSL
L2C_DUT_MAP1908                0x0001180080E03BA0  RSL
L2C_DUT_MAP1909                0x0001180080E03BA8  RSL
L2C_DUT_MAP1910                0x0001180080E03BB0  RSL
L2C_DUT_MAP1911                0x0001180080E03BB8  RSL
L2C_DUT_MAP1912                0x0001180080E03BC0  RSL
L2C_DUT_MAP1913                0x0001180080E03BC8  RSL
L2C_DUT_MAP1914                0x0001180080E03BD0  RSL
L2C_DUT_MAP1915                0x0001180080E03BD8  RSL
L2C_DUT_MAP1916                0x0001180080E03BE0  RSL
L2C_DUT_MAP1917                0x0001180080E03BE8  RSL
L2C_DUT_MAP1918                0x0001180080E03BF0  RSL
L2C_DUT_MAP1919                0x0001180080E03BF8  RSL
L2C_DUT_MAP1920                0x0001180080E03C00  RSL
L2C_DUT_MAP1921                0x0001180080E03C08  RSL
L2C_DUT_MAP1922                0x0001180080E03C10  RSL
L2C_DUT_MAP1923                0x0001180080E03C18  RSL
L2C_DUT_MAP1924                0x0001180080E03C20  RSL
L2C_DUT_MAP1925                0x0001180080E03C28  RSL
L2C_DUT_MAP1926                0x0001180080E03C30  RSL
L2C_DUT_MAP1927                0x0001180080E03C38  RSL
L2C_DUT_MAP1928                0x0001180080E03C40  RSL
L2C_DUT_MAP1929                0x0001180080E03C48  RSL
L2C_DUT_MAP1930                0x0001180080E03C50  RSL
L2C_DUT_MAP1931                0x0001180080E03C58  RSL
L2C_DUT_MAP1932                0x0001180080E03C60  RSL
L2C_DUT_MAP1933                0x0001180080E03C68  RSL
L2C_DUT_MAP1934                0x0001180080E03C70  RSL
L2C_DUT_MAP1935                0x0001180080E03C78  RSL
L2C_DUT_MAP1936                0x0001180080E03C80  RSL
L2C_DUT_MAP1937                0x0001180080E03C88  RSL
L2C_DUT_MAP1938                0x0001180080E03C90  RSL
L2C_DUT_MAP1939                0x0001180080E03C98  RSL
L2C_DUT_MAP1940                0x0001180080E03CA0  RSL
L2C_DUT_MAP1941                0x0001180080E03CA8  RSL
L2C_DUT_MAP1942                0x0001180080E03CB0  RSL
L2C_DUT_MAP1943                0x0001180080E03CB8  RSL
L2C_DUT_MAP1944                0x0001180080E03CC0  RSL
L2C_DUT_MAP1945                0x0001180080E03CC8  RSL
L2C_DUT_MAP1946                0x0001180080E03CD0  RSL
L2C_DUT_MAP1947                0x0001180080E03CD8  RSL
L2C_DUT_MAP1948                0x0001180080E03CE0  RSL
L2C_DUT_MAP1949                0x0001180080E03CE8  RSL
L2C_DUT_MAP1950                0x0001180080E03CF0  RSL
L2C_DUT_MAP1951                0x0001180080E03CF8  RSL
L2C_DUT_MAP1952                0x0001180080E03D00  RSL
L2C_DUT_MAP1953                0x0001180080E03D08  RSL
L2C_DUT_MAP1954                0x0001180080E03D10  RSL
L2C_DUT_MAP1955                0x0001180080E03D18  RSL
L2C_DUT_MAP1956                0x0001180080E03D20  RSL
L2C_DUT_MAP1957                0x0001180080E03D28  RSL
L2C_DUT_MAP1958                0x0001180080E03D30  RSL
L2C_DUT_MAP1959                0x0001180080E03D38  RSL
L2C_DUT_MAP1960                0x0001180080E03D40  RSL
L2C_DUT_MAP1961                0x0001180080E03D48  RSL
L2C_DUT_MAP1962                0x0001180080E03D50  RSL
L2C_DUT_MAP1963                0x0001180080E03D58  RSL
L2C_DUT_MAP1964                0x0001180080E03D60  RSL
L2C_DUT_MAP1965                0x0001180080E03D68  RSL
L2C_DUT_MAP1966                0x0001180080E03D70  RSL
L2C_DUT_MAP1967                0x0001180080E03D78  RSL
L2C_DUT_MAP1968                0x0001180080E03D80  RSL
L2C_DUT_MAP1969                0x0001180080E03D88  RSL
L2C_DUT_MAP1970                0x0001180080E03D90  RSL
L2C_DUT_MAP1971                0x0001180080E03D98  RSL
L2C_DUT_MAP1972                0x0001180080E03DA0  RSL
L2C_DUT_MAP1973                0x0001180080E03DA8  RSL
L2C_DUT_MAP1974                0x0001180080E03DB0  RSL
L2C_DUT_MAP1975                0x0001180080E03DB8  RSL
L2C_DUT_MAP1976                0x0001180080E03DC0  RSL
L2C_DUT_MAP1977                0x0001180080E03DC8  RSL
L2C_DUT_MAP1978                0x0001180080E03DD0  RSL
L2C_DUT_MAP1979                0x0001180080E03DD8  RSL
L2C_DUT_MAP1980                0x0001180080E03DE0  RSL
L2C_DUT_MAP1981                0x0001180080E03DE8  RSL
L2C_DUT_MAP1982                0x0001180080E03DF0  RSL
L2C_DUT_MAP1983                0x0001180080E03DF8  RSL
L2C_DUT_MAP1984                0x0001180080E03E00  RSL
L2C_DUT_MAP1985                0x0001180080E03E08  RSL
L2C_DUT_MAP1986                0x0001180080E03E10  RSL
L2C_DUT_MAP1987                0x0001180080E03E18  RSL
L2C_DUT_MAP1988                0x0001180080E03E20  RSL
L2C_DUT_MAP1989                0x0001180080E03E28  RSL
L2C_DUT_MAP1990                0x0001180080E03E30  RSL
L2C_DUT_MAP1991                0x0001180080E03E38  RSL
L2C_DUT_MAP1992                0x0001180080E03E40  RSL
L2C_DUT_MAP1993                0x0001180080E03E48  RSL
L2C_DUT_MAP1994                0x0001180080E03E50  RSL
L2C_DUT_MAP1995                0x0001180080E03E58  RSL
L2C_DUT_MAP1996                0x0001180080E03E60  RSL
L2C_DUT_MAP1997                0x0001180080E03E68  RSL
L2C_DUT_MAP1998                0x0001180080E03E70  RSL
L2C_DUT_MAP1999                0x0001180080E03E78  RSL
L2C_DUT_MAP2000                0x0001180080E03E80  RSL
L2C_DUT_MAP2001                0x0001180080E03E88  RSL
L2C_DUT_MAP2002                0x0001180080E03E90  RSL
L2C_DUT_MAP2003                0x0001180080E03E98  RSL
L2C_DUT_MAP2004                0x0001180080E03EA0  RSL
L2C_DUT_MAP2005                0x0001180080E03EA8  RSL
L2C_DUT_MAP2006                0x0001180080E03EB0  RSL
L2C_DUT_MAP2007                0x0001180080E03EB8  RSL
L2C_DUT_MAP2008                0x0001180080E03EC0  RSL
L2C_DUT_MAP2009                0x0001180080E03EC8  RSL
L2C_DUT_MAP2010                0x0001180080E03ED0  RSL
L2C_DUT_MAP2011                0x0001180080E03ED8  RSL
L2C_DUT_MAP2012                0x0001180080E03EE0  RSL
L2C_DUT_MAP2013                0x0001180080E03EE8  RSL
L2C_DUT_MAP2014                0x0001180080E03EF0  RSL
L2C_DUT_MAP2015                0x0001180080E03EF8  RSL
L2C_DUT_MAP2016                0x0001180080E03F00  RSL
L2C_DUT_MAP2017                0x0001180080E03F08  RSL
L2C_DUT_MAP2018                0x0001180080E03F10  RSL
L2C_DUT_MAP2019                0x0001180080E03F18  RSL
L2C_DUT_MAP2020                0x0001180080E03F20  RSL
L2C_DUT_MAP2021                0x0001180080E03F28  RSL
L2C_DUT_MAP2022                0x0001180080E03F30  RSL
L2C_DUT_MAP2023                0x0001180080E03F38  RSL
L2C_DUT_MAP2024                0x0001180080E03F40  RSL
L2C_DUT_MAP2025                0x0001180080E03F48  RSL
L2C_DUT_MAP2026                0x0001180080E03F50  RSL
L2C_DUT_MAP2027                0x0001180080E03F58  RSL
L2C_DUT_MAP2028                0x0001180080E03F60  RSL
L2C_DUT_MAP2029                0x0001180080E03F68  RSL
L2C_DUT_MAP2030                0x0001180080E03F70  RSL
L2C_DUT_MAP2031                0x0001180080E03F78  RSL
L2C_DUT_MAP2032                0x0001180080E03F80  RSL
L2C_DUT_MAP2033                0x0001180080E03F88  RSL
L2C_DUT_MAP2034                0x0001180080E03F90  RSL
L2C_DUT_MAP2035                0x0001180080E03F98  RSL
L2C_DUT_MAP2036                0x0001180080E03FA0  RSL
L2C_DUT_MAP2037                0x0001180080E03FA8  RSL
L2C_DUT_MAP2038                0x0001180080E03FB0  RSL
L2C_DUT_MAP2039                0x0001180080E03FB8  RSL
L2C_DUT_MAP2040                0x0001180080E03FC0  RSL
L2C_DUT_MAP2041                0x0001180080E03FC8  RSL
L2C_DUT_MAP2042                0x0001180080E03FD0  RSL
L2C_DUT_MAP2043                0x0001180080E03FD8  RSL
L2C_DUT_MAP2044                0x0001180080E03FE0  RSL
L2C_DUT_MAP2045                0x0001180080E03FE8  RSL
L2C_DUT_MAP2046                0x0001180080E03FF0  RSL
L2C_DUT_MAP2047                0x0001180080E03FF8  RSL
L2C_DUT_MAP2048                0x0001180080E04000  RSL
L2C_DUT_MAP2049                0x0001180080E04008  RSL
L2C_DUT_MAP2050                0x0001180080E04010  RSL
L2C_DUT_MAP2051                0x0001180080E04018  RSL
L2C_DUT_MAP2052                0x0001180080E04020  RSL
L2C_DUT_MAP2053                0x0001180080E04028  RSL
L2C_DUT_MAP2054                0x0001180080E04030  RSL
L2C_DUT_MAP2055                0x0001180080E04038  RSL
L2C_DUT_MAP2056                0x0001180080E04040  RSL
L2C_DUT_MAP2057                0x0001180080E04048  RSL
L2C_DUT_MAP2058                0x0001180080E04050  RSL
L2C_DUT_MAP2059                0x0001180080E04058  RSL
L2C_DUT_MAP2060                0x0001180080E04060  RSL
L2C_DUT_MAP2061                0x0001180080E04068  RSL
L2C_DUT_MAP2062                0x0001180080E04070  RSL
L2C_DUT_MAP2063                0x0001180080E04078  RSL
L2C_DUT_MAP2064                0x0001180080E04080  RSL
L2C_DUT_MAP2065                0x0001180080E04088  RSL
L2C_DUT_MAP2066                0x0001180080E04090  RSL
L2C_DUT_MAP2067                0x0001180080E04098  RSL
L2C_DUT_MAP2068                0x0001180080E040A0  RSL
L2C_DUT_MAP2069                0x0001180080E040A8  RSL
L2C_DUT_MAP2070                0x0001180080E040B0  RSL
L2C_DUT_MAP2071                0x0001180080E040B8  RSL
L2C_DUT_MAP2072                0x0001180080E040C0  RSL
L2C_DUT_MAP2073                0x0001180080E040C8  RSL
L2C_DUT_MAP2074                0x0001180080E040D0  RSL
L2C_DUT_MAP2075                0x0001180080E040D8  RSL
L2C_DUT_MAP2076                0x0001180080E040E0  RSL
L2C_DUT_MAP2077                0x0001180080E040E8  RSL
L2C_DUT_MAP2078                0x0001180080E040F0  RSL
L2C_DUT_MAP2079                0x0001180080E040F8  RSL
L2C_DUT_MAP2080                0x0001180080E04100  RSL
L2C_DUT_MAP2081                0x0001180080E04108  RSL
L2C_DUT_MAP2082                0x0001180080E04110  RSL
L2C_DUT_MAP2083                0x0001180080E04118  RSL
L2C_DUT_MAP2084                0x0001180080E04120  RSL
L2C_DUT_MAP2085                0x0001180080E04128  RSL
L2C_DUT_MAP2086                0x0001180080E04130  RSL
L2C_DUT_MAP2087                0x0001180080E04138  RSL
L2C_DUT_MAP2088                0x0001180080E04140  RSL
L2C_DUT_MAP2089                0x0001180080E04148  RSL
L2C_DUT_MAP2090                0x0001180080E04150  RSL
L2C_DUT_MAP2091                0x0001180080E04158  RSL
L2C_DUT_MAP2092                0x0001180080E04160  RSL
L2C_DUT_MAP2093                0x0001180080E04168  RSL
L2C_DUT_MAP2094                0x0001180080E04170  RSL
L2C_DUT_MAP2095                0x0001180080E04178  RSL
L2C_DUT_MAP2096                0x0001180080E04180  RSL
L2C_DUT_MAP2097                0x0001180080E04188  RSL
L2C_DUT_MAP2098                0x0001180080E04190  RSL
L2C_DUT_MAP2099                0x0001180080E04198  RSL
L2C_DUT_MAP2100                0x0001180080E041A0  RSL
L2C_DUT_MAP2101                0x0001180080E041A8  RSL
L2C_DUT_MAP2102                0x0001180080E041B0  RSL
L2C_DUT_MAP2103                0x0001180080E041B8  RSL
L2C_DUT_MAP2104                0x0001180080E041C0  RSL
L2C_DUT_MAP2105                0x0001180080E041C8  RSL
L2C_DUT_MAP2106                0x0001180080E041D0  RSL
L2C_DUT_MAP2107                0x0001180080E041D8  RSL
L2C_DUT_MAP2108                0x0001180080E041E0  RSL
L2C_DUT_MAP2109                0x0001180080E041E8  RSL
L2C_DUT_MAP2110                0x0001180080E041F0  RSL
L2C_DUT_MAP2111                0x0001180080E041F8  RSL
L2C_DUT_MAP2112                0x0001180080E04200  RSL
L2C_DUT_MAP2113                0x0001180080E04208  RSL
L2C_DUT_MAP2114                0x0001180080E04210  RSL
L2C_DUT_MAP2115                0x0001180080E04218  RSL
L2C_DUT_MAP2116                0x0001180080E04220  RSL
L2C_DUT_MAP2117                0x0001180080E04228  RSL
L2C_DUT_MAP2118                0x0001180080E04230  RSL
L2C_DUT_MAP2119                0x0001180080E04238  RSL
L2C_DUT_MAP2120                0x0001180080E04240  RSL
L2C_DUT_MAP2121                0x0001180080E04248  RSL
L2C_DUT_MAP2122                0x0001180080E04250  RSL
L2C_DUT_MAP2123                0x0001180080E04258  RSL
L2C_DUT_MAP2124                0x0001180080E04260  RSL
L2C_DUT_MAP2125                0x0001180080E04268  RSL
L2C_DUT_MAP2126                0x0001180080E04270  RSL
L2C_DUT_MAP2127                0x0001180080E04278  RSL
L2C_DUT_MAP2128                0x0001180080E04280  RSL
L2C_DUT_MAP2129                0x0001180080E04288  RSL
L2C_DUT_MAP2130                0x0001180080E04290  RSL
L2C_DUT_MAP2131                0x0001180080E04298  RSL
L2C_DUT_MAP2132                0x0001180080E042A0  RSL
L2C_DUT_MAP2133                0x0001180080E042A8  RSL
L2C_DUT_MAP2134                0x0001180080E042B0  RSL
L2C_DUT_MAP2135                0x0001180080E042B8  RSL
L2C_DUT_MAP2136                0x0001180080E042C0  RSL
L2C_DUT_MAP2137                0x0001180080E042C8  RSL
L2C_DUT_MAP2138                0x0001180080E042D0  RSL
L2C_DUT_MAP2139                0x0001180080E042D8  RSL
L2C_DUT_MAP2140                0x0001180080E042E0  RSL
L2C_DUT_MAP2141                0x0001180080E042E8  RSL
L2C_DUT_MAP2142                0x0001180080E042F0  RSL
L2C_DUT_MAP2143                0x0001180080E042F8  RSL
L2C_DUT_MAP2144                0x0001180080E04300  RSL
L2C_DUT_MAP2145                0x0001180080E04308  RSL
L2C_DUT_MAP2146                0x0001180080E04310  RSL
L2C_DUT_MAP2147                0x0001180080E04318  RSL
L2C_DUT_MAP2148                0x0001180080E04320  RSL
L2C_DUT_MAP2149                0x0001180080E04328  RSL
L2C_DUT_MAP2150                0x0001180080E04330  RSL
L2C_DUT_MAP2151                0x0001180080E04338  RSL
L2C_DUT_MAP2152                0x0001180080E04340  RSL
L2C_DUT_MAP2153                0x0001180080E04348  RSL
L2C_DUT_MAP2154                0x0001180080E04350  RSL
L2C_DUT_MAP2155                0x0001180080E04358  RSL
L2C_DUT_MAP2156                0x0001180080E04360  RSL
L2C_DUT_MAP2157                0x0001180080E04368  RSL
L2C_DUT_MAP2158                0x0001180080E04370  RSL
L2C_DUT_MAP2159                0x0001180080E04378  RSL
L2C_DUT_MAP2160                0x0001180080E04380  RSL
L2C_DUT_MAP2161                0x0001180080E04388  RSL
L2C_DUT_MAP2162                0x0001180080E04390  RSL
L2C_DUT_MAP2163                0x0001180080E04398  RSL
L2C_DUT_MAP2164                0x0001180080E043A0  RSL
L2C_DUT_MAP2165                0x0001180080E043A8  RSL
L2C_DUT_MAP2166                0x0001180080E043B0  RSL
L2C_DUT_MAP2167                0x0001180080E043B8  RSL
L2C_DUT_MAP2168                0x0001180080E043C0  RSL
L2C_DUT_MAP2169                0x0001180080E043C8  RSL
L2C_DUT_MAP2170                0x0001180080E043D0  RSL
L2C_DUT_MAP2171                0x0001180080E043D8  RSL
L2C_DUT_MAP2172                0x0001180080E043E0  RSL
L2C_DUT_MAP2173                0x0001180080E043E8  RSL
L2C_DUT_MAP2174                0x0001180080E043F0  RSL
L2C_DUT_MAP2175                0x0001180080E043F8  RSL
L2C_DUT_MAP2176                0x0001180080E04400  RSL
L2C_DUT_MAP2177                0x0001180080E04408  RSL
L2C_DUT_MAP2178                0x0001180080E04410  RSL
L2C_DUT_MAP2179                0x0001180080E04418  RSL
L2C_DUT_MAP2180                0x0001180080E04420  RSL
L2C_DUT_MAP2181                0x0001180080E04428  RSL
L2C_DUT_MAP2182                0x0001180080E04430  RSL
L2C_DUT_MAP2183                0x0001180080E04438  RSL
L2C_DUT_MAP2184                0x0001180080E04440  RSL
L2C_DUT_MAP2185                0x0001180080E04448  RSL
L2C_DUT_MAP2186                0x0001180080E04450  RSL
L2C_DUT_MAP2187                0x0001180080E04458  RSL
L2C_DUT_MAP2188                0x0001180080E04460  RSL
L2C_DUT_MAP2189                0x0001180080E04468  RSL
L2C_DUT_MAP2190                0x0001180080E04470  RSL
L2C_DUT_MAP2191                0x0001180080E04478  RSL
L2C_DUT_MAP2192                0x0001180080E04480  RSL
L2C_DUT_MAP2193                0x0001180080E04488  RSL
L2C_DUT_MAP2194                0x0001180080E04490  RSL
L2C_DUT_MAP2195                0x0001180080E04498  RSL
L2C_DUT_MAP2196                0x0001180080E044A0  RSL
L2C_DUT_MAP2197                0x0001180080E044A8  RSL
L2C_DUT_MAP2198                0x0001180080E044B0  RSL
L2C_DUT_MAP2199                0x0001180080E044B8  RSL
L2C_DUT_MAP2200                0x0001180080E044C0  RSL
L2C_DUT_MAP2201                0x0001180080E044C8  RSL
L2C_DUT_MAP2202                0x0001180080E044D0  RSL
L2C_DUT_MAP2203                0x0001180080E044D8  RSL
L2C_DUT_MAP2204                0x0001180080E044E0  RSL
L2C_DUT_MAP2205                0x0001180080E044E8  RSL
L2C_DUT_MAP2206                0x0001180080E044F0  RSL
L2C_DUT_MAP2207                0x0001180080E044F8  RSL
L2C_DUT_MAP2208                0x0001180080E04500  RSL
L2C_DUT_MAP2209                0x0001180080E04508  RSL
L2C_DUT_MAP2210                0x0001180080E04510  RSL
L2C_DUT_MAP2211                0x0001180080E04518  RSL
L2C_DUT_MAP2212                0x0001180080E04520  RSL
L2C_DUT_MAP2213                0x0001180080E04528  RSL
L2C_DUT_MAP2214                0x0001180080E04530  RSL
L2C_DUT_MAP2215                0x0001180080E04538  RSL
L2C_DUT_MAP2216                0x0001180080E04540  RSL
L2C_DUT_MAP2217                0x0001180080E04548  RSL
L2C_DUT_MAP2218                0x0001180080E04550  RSL
L2C_DUT_MAP2219                0x0001180080E04558  RSL
L2C_DUT_MAP2220                0x0001180080E04560  RSL
L2C_DUT_MAP2221                0x0001180080E04568  RSL
L2C_DUT_MAP2222                0x0001180080E04570  RSL
L2C_DUT_MAP2223                0x0001180080E04578  RSL
L2C_DUT_MAP2224                0x0001180080E04580  RSL
L2C_DUT_MAP2225                0x0001180080E04588  RSL
L2C_DUT_MAP2226                0x0001180080E04590  RSL
L2C_DUT_MAP2227                0x0001180080E04598  RSL
L2C_DUT_MAP2228                0x0001180080E045A0  RSL
L2C_DUT_MAP2229                0x0001180080E045A8  RSL
L2C_DUT_MAP2230                0x0001180080E045B0  RSL
L2C_DUT_MAP2231                0x0001180080E045B8  RSL
L2C_DUT_MAP2232                0x0001180080E045C0  RSL
L2C_DUT_MAP2233                0x0001180080E045C8  RSL
L2C_DUT_MAP2234                0x0001180080E045D0  RSL
L2C_DUT_MAP2235                0x0001180080E045D8  RSL
L2C_DUT_MAP2236                0x0001180080E045E0  RSL
L2C_DUT_MAP2237                0x0001180080E045E8  RSL
L2C_DUT_MAP2238                0x0001180080E045F0  RSL
L2C_DUT_MAP2239                0x0001180080E045F8  RSL
L2C_DUT_MAP2240                0x0001180080E04600  RSL
L2C_DUT_MAP2241                0x0001180080E04608  RSL
L2C_DUT_MAP2242                0x0001180080E04610  RSL
L2C_DUT_MAP2243                0x0001180080E04618  RSL
L2C_DUT_MAP2244                0x0001180080E04620  RSL
L2C_DUT_MAP2245                0x0001180080E04628  RSL
L2C_DUT_MAP2246                0x0001180080E04630  RSL
L2C_DUT_MAP2247                0x0001180080E04638  RSL
L2C_DUT_MAP2248                0x0001180080E04640  RSL
L2C_DUT_MAP2249                0x0001180080E04648  RSL
L2C_DUT_MAP2250                0x0001180080E04650  RSL
L2C_DUT_MAP2251                0x0001180080E04658  RSL
L2C_DUT_MAP2252                0x0001180080E04660  RSL
L2C_DUT_MAP2253                0x0001180080E04668  RSL
L2C_DUT_MAP2254                0x0001180080E04670  RSL
L2C_DUT_MAP2255                0x0001180080E04678  RSL
L2C_DUT_MAP2256                0x0001180080E04680  RSL
L2C_DUT_MAP2257                0x0001180080E04688  RSL
L2C_DUT_MAP2258                0x0001180080E04690  RSL
L2C_DUT_MAP2259                0x0001180080E04698  RSL
L2C_DUT_MAP2260                0x0001180080E046A0  RSL
L2C_DUT_MAP2261                0x0001180080E046A8  RSL
L2C_DUT_MAP2262                0x0001180080E046B0  RSL
L2C_DUT_MAP2263                0x0001180080E046B8  RSL
L2C_DUT_MAP2264                0x0001180080E046C0  RSL
L2C_DUT_MAP2265                0x0001180080E046C8  RSL
L2C_DUT_MAP2266                0x0001180080E046D0  RSL
L2C_DUT_MAP2267                0x0001180080E046D8  RSL
L2C_DUT_MAP2268                0x0001180080E046E0  RSL
L2C_DUT_MAP2269                0x0001180080E046E8  RSL
L2C_DUT_MAP2270                0x0001180080E046F0  RSL
L2C_DUT_MAP2271                0x0001180080E046F8  RSL
L2C_DUT_MAP2272                0x0001180080E04700  RSL
L2C_DUT_MAP2273                0x0001180080E04708  RSL
L2C_DUT_MAP2274                0x0001180080E04710  RSL
L2C_DUT_MAP2275                0x0001180080E04718  RSL
L2C_DUT_MAP2276                0x0001180080E04720  RSL
L2C_DUT_MAP2277                0x0001180080E04728  RSL
L2C_DUT_MAP2278                0x0001180080E04730  RSL
L2C_DUT_MAP2279                0x0001180080E04738  RSL
L2C_DUT_MAP2280                0x0001180080E04740  RSL
L2C_DUT_MAP2281                0x0001180080E04748  RSL
L2C_DUT_MAP2282                0x0001180080E04750  RSL
L2C_DUT_MAP2283                0x0001180080E04758  RSL
L2C_DUT_MAP2284                0x0001180080E04760  RSL
L2C_DUT_MAP2285                0x0001180080E04768  RSL
L2C_DUT_MAP2286                0x0001180080E04770  RSL
L2C_DUT_MAP2287                0x0001180080E04778  RSL
L2C_DUT_MAP2288                0x0001180080E04780  RSL
L2C_DUT_MAP2289                0x0001180080E04788  RSL
L2C_DUT_MAP2290                0x0001180080E04790  RSL
L2C_DUT_MAP2291                0x0001180080E04798  RSL
L2C_DUT_MAP2292                0x0001180080E047A0  RSL
L2C_DUT_MAP2293                0x0001180080E047A8  RSL
L2C_DUT_MAP2294                0x0001180080E047B0  RSL
L2C_DUT_MAP2295                0x0001180080E047B8  RSL
L2C_DUT_MAP2296                0x0001180080E047C0  RSL
L2C_DUT_MAP2297                0x0001180080E047C8  RSL
L2C_DUT_MAP2298                0x0001180080E047D0  RSL
L2C_DUT_MAP2299                0x0001180080E047D8  RSL
L2C_DUT_MAP2300                0x0001180080E047E0  RSL
L2C_DUT_MAP2301                0x0001180080E047E8  RSL
L2C_DUT_MAP2302                0x0001180080E047F0  RSL
L2C_DUT_MAP2303                0x0001180080E047F8  RSL
L2C_DUT_MAP2304                0x0001180080E04800  RSL
L2C_DUT_MAP2305                0x0001180080E04808  RSL
L2C_DUT_MAP2306                0x0001180080E04810  RSL
L2C_DUT_MAP2307                0x0001180080E04818  RSL
L2C_DUT_MAP2308                0x0001180080E04820  RSL
L2C_DUT_MAP2309                0x0001180080E04828  RSL
L2C_DUT_MAP2310                0x0001180080E04830  RSL
L2C_DUT_MAP2311                0x0001180080E04838  RSL
L2C_DUT_MAP2312                0x0001180080E04840  RSL
L2C_DUT_MAP2313                0x0001180080E04848  RSL
L2C_DUT_MAP2314                0x0001180080E04850  RSL
L2C_DUT_MAP2315                0x0001180080E04858  RSL
L2C_DUT_MAP2316                0x0001180080E04860  RSL
L2C_DUT_MAP2317                0x0001180080E04868  RSL
L2C_DUT_MAP2318                0x0001180080E04870  RSL
L2C_DUT_MAP2319                0x0001180080E04878  RSL
L2C_DUT_MAP2320                0x0001180080E04880  RSL
L2C_DUT_MAP2321                0x0001180080E04888  RSL
L2C_DUT_MAP2322                0x0001180080E04890  RSL
L2C_DUT_MAP2323                0x0001180080E04898  RSL
L2C_DUT_MAP2324                0x0001180080E048A0  RSL
L2C_DUT_MAP2325                0x0001180080E048A8  RSL
L2C_DUT_MAP2326                0x0001180080E048B0  RSL
L2C_DUT_MAP2327                0x0001180080E048B8  RSL
L2C_DUT_MAP2328                0x0001180080E048C0  RSL
L2C_DUT_MAP2329                0x0001180080E048C8  RSL
L2C_DUT_MAP2330                0x0001180080E048D0  RSL
L2C_DUT_MAP2331                0x0001180080E048D8  RSL
L2C_DUT_MAP2332                0x0001180080E048E0  RSL
L2C_DUT_MAP2333                0x0001180080E048E8  RSL
L2C_DUT_MAP2334                0x0001180080E048F0  RSL
L2C_DUT_MAP2335                0x0001180080E048F8  RSL
L2C_DUT_MAP2336                0x0001180080E04900  RSL
L2C_DUT_MAP2337                0x0001180080E04908  RSL
L2C_DUT_MAP2338                0x0001180080E04910  RSL
L2C_DUT_MAP2339                0x0001180080E04918  RSL
L2C_DUT_MAP2340                0x0001180080E04920  RSL
L2C_DUT_MAP2341                0x0001180080E04928  RSL
L2C_DUT_MAP2342                0x0001180080E04930  RSL
L2C_DUT_MAP2343                0x0001180080E04938  RSL
L2C_DUT_MAP2344                0x0001180080E04940  RSL
L2C_DUT_MAP2345                0x0001180080E04948  RSL
L2C_DUT_MAP2346                0x0001180080E04950  RSL
L2C_DUT_MAP2347                0x0001180080E04958  RSL
L2C_DUT_MAP2348                0x0001180080E04960  RSL
L2C_DUT_MAP2349                0x0001180080E04968  RSL
L2C_DUT_MAP2350                0x0001180080E04970  RSL
L2C_DUT_MAP2351                0x0001180080E04978  RSL
L2C_DUT_MAP2352                0x0001180080E04980  RSL
L2C_DUT_MAP2353                0x0001180080E04988  RSL
L2C_DUT_MAP2354                0x0001180080E04990  RSL
L2C_DUT_MAP2355                0x0001180080E04998  RSL
L2C_DUT_MAP2356                0x0001180080E049A0  RSL
L2C_DUT_MAP2357                0x0001180080E049A8  RSL
L2C_DUT_MAP2358                0x0001180080E049B0  RSL
L2C_DUT_MAP2359                0x0001180080E049B8  RSL
L2C_DUT_MAP2360                0x0001180080E049C0  RSL
L2C_DUT_MAP2361                0x0001180080E049C8  RSL
L2C_DUT_MAP2362                0x0001180080E049D0  RSL
L2C_DUT_MAP2363                0x0001180080E049D8  RSL
L2C_DUT_MAP2364                0x0001180080E049E0  RSL
L2C_DUT_MAP2365                0x0001180080E049E8  RSL
L2C_DUT_MAP2366                0x0001180080E049F0  RSL
L2C_DUT_MAP2367                0x0001180080E049F8  RSL
L2C_DUT_MAP2368                0x0001180080E04A00  RSL
L2C_DUT_MAP2369                0x0001180080E04A08  RSL
L2C_DUT_MAP2370                0x0001180080E04A10  RSL
L2C_DUT_MAP2371                0x0001180080E04A18  RSL
L2C_DUT_MAP2372                0x0001180080E04A20  RSL
L2C_DUT_MAP2373                0x0001180080E04A28  RSL
L2C_DUT_MAP2374                0x0001180080E04A30  RSL
L2C_DUT_MAP2375                0x0001180080E04A38  RSL
L2C_DUT_MAP2376                0x0001180080E04A40  RSL
L2C_DUT_MAP2377                0x0001180080E04A48  RSL
L2C_DUT_MAP2378                0x0001180080E04A50  RSL
L2C_DUT_MAP2379                0x0001180080E04A58  RSL
L2C_DUT_MAP2380                0x0001180080E04A60  RSL
L2C_DUT_MAP2381                0x0001180080E04A68  RSL
L2C_DUT_MAP2382                0x0001180080E04A70  RSL
L2C_DUT_MAP2383                0x0001180080E04A78  RSL
L2C_DUT_MAP2384                0x0001180080E04A80  RSL
L2C_DUT_MAP2385                0x0001180080E04A88  RSL
L2C_DUT_MAP2386                0x0001180080E04A90  RSL
L2C_DUT_MAP2387                0x0001180080E04A98  RSL
L2C_DUT_MAP2388                0x0001180080E04AA0  RSL
L2C_DUT_MAP2389                0x0001180080E04AA8  RSL
L2C_DUT_MAP2390                0x0001180080E04AB0  RSL
L2C_DUT_MAP2391                0x0001180080E04AB8  RSL
L2C_DUT_MAP2392                0x0001180080E04AC0  RSL
L2C_DUT_MAP2393                0x0001180080E04AC8  RSL
L2C_DUT_MAP2394                0x0001180080E04AD0  RSL
L2C_DUT_MAP2395                0x0001180080E04AD8  RSL
L2C_DUT_MAP2396                0x0001180080E04AE0  RSL
L2C_DUT_MAP2397                0x0001180080E04AE8  RSL
L2C_DUT_MAP2398                0x0001180080E04AF0  RSL
L2C_DUT_MAP2399                0x0001180080E04AF8  RSL
L2C_DUT_MAP2400                0x0001180080E04B00  RSL
L2C_DUT_MAP2401                0x0001180080E04B08  RSL
L2C_DUT_MAP2402                0x0001180080E04B10  RSL
L2C_DUT_MAP2403                0x0001180080E04B18  RSL
L2C_DUT_MAP2404                0x0001180080E04B20  RSL
L2C_DUT_MAP2405                0x0001180080E04B28  RSL
L2C_DUT_MAP2406                0x0001180080E04B30  RSL
L2C_DUT_MAP2407                0x0001180080E04B38  RSL
L2C_DUT_MAP2408                0x0001180080E04B40  RSL
L2C_DUT_MAP2409                0x0001180080E04B48  RSL
L2C_DUT_MAP2410                0x0001180080E04B50  RSL
L2C_DUT_MAP2411                0x0001180080E04B58  RSL
L2C_DUT_MAP2412                0x0001180080E04B60  RSL
L2C_DUT_MAP2413                0x0001180080E04B68  RSL
L2C_DUT_MAP2414                0x0001180080E04B70  RSL
L2C_DUT_MAP2415                0x0001180080E04B78  RSL
L2C_DUT_MAP2416                0x0001180080E04B80  RSL
L2C_DUT_MAP2417                0x0001180080E04B88  RSL
L2C_DUT_MAP2418                0x0001180080E04B90  RSL
L2C_DUT_MAP2419                0x0001180080E04B98  RSL
L2C_DUT_MAP2420                0x0001180080E04BA0  RSL
L2C_DUT_MAP2421                0x0001180080E04BA8  RSL
L2C_DUT_MAP2422                0x0001180080E04BB0  RSL
L2C_DUT_MAP2423                0x0001180080E04BB8  RSL
L2C_DUT_MAP2424                0x0001180080E04BC0  RSL
L2C_DUT_MAP2425                0x0001180080E04BC8  RSL
L2C_DUT_MAP2426                0x0001180080E04BD0  RSL
L2C_DUT_MAP2427                0x0001180080E04BD8  RSL
L2C_DUT_MAP2428                0x0001180080E04BE0  RSL
L2C_DUT_MAP2429                0x0001180080E04BE8  RSL
L2C_DUT_MAP2430                0x0001180080E04BF0  RSL
L2C_DUT_MAP2431                0x0001180080E04BF8  RSL
L2C_DUT_MAP2432                0x0001180080E04C00  RSL
L2C_DUT_MAP2433                0x0001180080E04C08  RSL
L2C_DUT_MAP2434                0x0001180080E04C10  RSL
L2C_DUT_MAP2435                0x0001180080E04C18  RSL
L2C_DUT_MAP2436                0x0001180080E04C20  RSL
L2C_DUT_MAP2437                0x0001180080E04C28  RSL
L2C_DUT_MAP2438                0x0001180080E04C30  RSL
L2C_DUT_MAP2439                0x0001180080E04C38  RSL
L2C_DUT_MAP2440                0x0001180080E04C40  RSL
L2C_DUT_MAP2441                0x0001180080E04C48  RSL
L2C_DUT_MAP2442                0x0001180080E04C50  RSL
L2C_DUT_MAP2443                0x0001180080E04C58  RSL
L2C_DUT_MAP2444                0x0001180080E04C60  RSL
L2C_DUT_MAP2445                0x0001180080E04C68  RSL
L2C_DUT_MAP2446                0x0001180080E04C70  RSL
L2C_DUT_MAP2447                0x0001180080E04C78  RSL
L2C_DUT_MAP2448                0x0001180080E04C80  RSL
L2C_DUT_MAP2449                0x0001180080E04C88  RSL
L2C_DUT_MAP2450                0x0001180080E04C90  RSL
L2C_DUT_MAP2451                0x0001180080E04C98  RSL
L2C_DUT_MAP2452                0x0001180080E04CA0  RSL
L2C_DUT_MAP2453                0x0001180080E04CA8  RSL
L2C_DUT_MAP2454                0x0001180080E04CB0  RSL
L2C_DUT_MAP2455                0x0001180080E04CB8  RSL
L2C_DUT_MAP2456                0x0001180080E04CC0  RSL
L2C_DUT_MAP2457                0x0001180080E04CC8  RSL
L2C_DUT_MAP2458                0x0001180080E04CD0  RSL
L2C_DUT_MAP2459                0x0001180080E04CD8  RSL
L2C_DUT_MAP2460                0x0001180080E04CE0  RSL
L2C_DUT_MAP2461                0x0001180080E04CE8  RSL
L2C_DUT_MAP2462                0x0001180080E04CF0  RSL
L2C_DUT_MAP2463                0x0001180080E04CF8  RSL
L2C_DUT_MAP2464                0x0001180080E04D00  RSL
L2C_DUT_MAP2465                0x0001180080E04D08  RSL
L2C_DUT_MAP2466                0x0001180080E04D10  RSL
L2C_DUT_MAP2467                0x0001180080E04D18  RSL
L2C_DUT_MAP2468                0x0001180080E04D20  RSL
L2C_DUT_MAP2469                0x0001180080E04D28  RSL
L2C_DUT_MAP2470                0x0001180080E04D30  RSL
L2C_DUT_MAP2471                0x0001180080E04D38  RSL
L2C_DUT_MAP2472                0x0001180080E04D40  RSL
L2C_DUT_MAP2473                0x0001180080E04D48  RSL
L2C_DUT_MAP2474                0x0001180080E04D50  RSL
L2C_DUT_MAP2475                0x0001180080E04D58  RSL
L2C_DUT_MAP2476                0x0001180080E04D60  RSL
L2C_DUT_MAP2477                0x0001180080E04D68  RSL
L2C_DUT_MAP2478                0x0001180080E04D70  RSL
L2C_DUT_MAP2479                0x0001180080E04D78  RSL
L2C_DUT_MAP2480                0x0001180080E04D80  RSL
L2C_DUT_MAP2481                0x0001180080E04D88  RSL
L2C_DUT_MAP2482                0x0001180080E04D90  RSL
L2C_DUT_MAP2483                0x0001180080E04D98  RSL
L2C_DUT_MAP2484                0x0001180080E04DA0  RSL
L2C_DUT_MAP2485                0x0001180080E04DA8  RSL
L2C_DUT_MAP2486                0x0001180080E04DB0  RSL
L2C_DUT_MAP2487                0x0001180080E04DB8  RSL
L2C_DUT_MAP2488                0x0001180080E04DC0  RSL
L2C_DUT_MAP2489                0x0001180080E04DC8  RSL
L2C_DUT_MAP2490                0x0001180080E04DD0  RSL
L2C_DUT_MAP2491                0x0001180080E04DD8  RSL
L2C_DUT_MAP2492                0x0001180080E04DE0  RSL
L2C_DUT_MAP2493                0x0001180080E04DE8  RSL
L2C_DUT_MAP2494                0x0001180080E04DF0  RSL
L2C_DUT_MAP2495                0x0001180080E04DF8  RSL
L2C_DUT_MAP2496                0x0001180080E04E00  RSL
L2C_DUT_MAP2497                0x0001180080E04E08  RSL
L2C_DUT_MAP2498                0x0001180080E04E10  RSL
L2C_DUT_MAP2499                0x0001180080E04E18  RSL
L2C_DUT_MAP2500                0x0001180080E04E20  RSL
L2C_DUT_MAP2501                0x0001180080E04E28  RSL
L2C_DUT_MAP2502                0x0001180080E04E30  RSL
L2C_DUT_MAP2503                0x0001180080E04E38  RSL
L2C_DUT_MAP2504                0x0001180080E04E40  RSL
L2C_DUT_MAP2505                0x0001180080E04E48  RSL
L2C_DUT_MAP2506                0x0001180080E04E50  RSL
L2C_DUT_MAP2507                0x0001180080E04E58  RSL
L2C_DUT_MAP2508                0x0001180080E04E60  RSL
L2C_DUT_MAP2509                0x0001180080E04E68  RSL
L2C_DUT_MAP2510                0x0001180080E04E70  RSL
L2C_DUT_MAP2511                0x0001180080E04E78  RSL
L2C_DUT_MAP2512                0x0001180080E04E80  RSL
L2C_DUT_MAP2513                0x0001180080E04E88  RSL
L2C_DUT_MAP2514                0x0001180080E04E90  RSL
L2C_DUT_MAP2515                0x0001180080E04E98  RSL
L2C_DUT_MAP2516                0x0001180080E04EA0  RSL
L2C_DUT_MAP2517                0x0001180080E04EA8  RSL
L2C_DUT_MAP2518                0x0001180080E04EB0  RSL
L2C_DUT_MAP2519                0x0001180080E04EB8  RSL
L2C_DUT_MAP2520                0x0001180080E04EC0  RSL
L2C_DUT_MAP2521                0x0001180080E04EC8  RSL
L2C_DUT_MAP2522                0x0001180080E04ED0  RSL
L2C_DUT_MAP2523                0x0001180080E04ED8  RSL
L2C_DUT_MAP2524                0x0001180080E04EE0  RSL
L2C_DUT_MAP2525                0x0001180080E04EE8  RSL
L2C_DUT_MAP2526                0x0001180080E04EF0  RSL
L2C_DUT_MAP2527                0x0001180080E04EF8  RSL
L2C_DUT_MAP2528                0x0001180080E04F00  RSL
L2C_DUT_MAP2529                0x0001180080E04F08  RSL
L2C_DUT_MAP2530                0x0001180080E04F10  RSL
L2C_DUT_MAP2531                0x0001180080E04F18  RSL
L2C_DUT_MAP2532                0x0001180080E04F20  RSL
L2C_DUT_MAP2533                0x0001180080E04F28  RSL
L2C_DUT_MAP2534                0x0001180080E04F30  RSL
L2C_DUT_MAP2535                0x0001180080E04F38  RSL
L2C_DUT_MAP2536                0x0001180080E04F40  RSL
L2C_DUT_MAP2537                0x0001180080E04F48  RSL
L2C_DUT_MAP2538                0x0001180080E04F50  RSL
L2C_DUT_MAP2539                0x0001180080E04F58  RSL
L2C_DUT_MAP2540                0x0001180080E04F60  RSL
L2C_DUT_MAP2541                0x0001180080E04F68  RSL
L2C_DUT_MAP2542                0x0001180080E04F70  RSL
L2C_DUT_MAP2543                0x0001180080E04F78  RSL
L2C_DUT_MAP2544                0x0001180080E04F80  RSL
L2C_DUT_MAP2545                0x0001180080E04F88  RSL
L2C_DUT_MAP2546                0x0001180080E04F90  RSL
L2C_DUT_MAP2547                0x0001180080E04F98  RSL
L2C_DUT_MAP2548                0x0001180080E04FA0  RSL
L2C_DUT_MAP2549                0x0001180080E04FA8  RSL
L2C_DUT_MAP2550                0x0001180080E04FB0  RSL
L2C_DUT_MAP2551                0x0001180080E04FB8  RSL
L2C_DUT_MAP2552                0x0001180080E04FC0  RSL
L2C_DUT_MAP2553                0x0001180080E04FC8  RSL
L2C_DUT_MAP2554                0x0001180080E04FD0  RSL
L2C_DUT_MAP2555                0x0001180080E04FD8  RSL
L2C_DUT_MAP2556                0x0001180080E04FE0  RSL
L2C_DUT_MAP2557                0x0001180080E04FE8  RSL
L2C_DUT_MAP2558                0x0001180080E04FF0  RSL
L2C_DUT_MAP2559                0x0001180080E04FF8  RSL
L2C_DUT_MAP2560                0x0001180080E05000  RSL
L2C_DUT_MAP2561                0x0001180080E05008  RSL
L2C_DUT_MAP2562                0x0001180080E05010  RSL
L2C_DUT_MAP2563                0x0001180080E05018  RSL
L2C_DUT_MAP2564                0x0001180080E05020  RSL
L2C_DUT_MAP2565                0x0001180080E05028  RSL
L2C_DUT_MAP2566                0x0001180080E05030  RSL
L2C_DUT_MAP2567                0x0001180080E05038  RSL
L2C_DUT_MAP2568                0x0001180080E05040  RSL
L2C_DUT_MAP2569                0x0001180080E05048  RSL
L2C_DUT_MAP2570                0x0001180080E05050  RSL
L2C_DUT_MAP2571                0x0001180080E05058  RSL
L2C_DUT_MAP2572                0x0001180080E05060  RSL
L2C_DUT_MAP2573                0x0001180080E05068  RSL
L2C_DUT_MAP2574                0x0001180080E05070  RSL
L2C_DUT_MAP2575                0x0001180080E05078  RSL
L2C_DUT_MAP2576                0x0001180080E05080  RSL
L2C_DUT_MAP2577                0x0001180080E05088  RSL
L2C_DUT_MAP2578                0x0001180080E05090  RSL
L2C_DUT_MAP2579                0x0001180080E05098  RSL
L2C_DUT_MAP2580                0x0001180080E050A0  RSL
L2C_DUT_MAP2581                0x0001180080E050A8  RSL
L2C_DUT_MAP2582                0x0001180080E050B0  RSL
L2C_DUT_MAP2583                0x0001180080E050B8  RSL
L2C_DUT_MAP2584                0x0001180080E050C0  RSL
L2C_DUT_MAP2585                0x0001180080E050C8  RSL
L2C_DUT_MAP2586                0x0001180080E050D0  RSL
L2C_DUT_MAP2587                0x0001180080E050D8  RSL
L2C_DUT_MAP2588                0x0001180080E050E0  RSL
L2C_DUT_MAP2589                0x0001180080E050E8  RSL
L2C_DUT_MAP2590                0x0001180080E050F0  RSL
L2C_DUT_MAP2591                0x0001180080E050F8  RSL
L2C_DUT_MAP2592                0x0001180080E05100  RSL
L2C_DUT_MAP2593                0x0001180080E05108  RSL
L2C_DUT_MAP2594                0x0001180080E05110  RSL
L2C_DUT_MAP2595                0x0001180080E05118  RSL
L2C_DUT_MAP2596                0x0001180080E05120  RSL
L2C_DUT_MAP2597                0x0001180080E05128  RSL
L2C_DUT_MAP2598                0x0001180080E05130  RSL
L2C_DUT_MAP2599                0x0001180080E05138  RSL
L2C_DUT_MAP2600                0x0001180080E05140  RSL
L2C_DUT_MAP2601                0x0001180080E05148  RSL
L2C_DUT_MAP2602                0x0001180080E05150  RSL
L2C_DUT_MAP2603                0x0001180080E05158  RSL
L2C_DUT_MAP2604                0x0001180080E05160  RSL
L2C_DUT_MAP2605                0x0001180080E05168  RSL
L2C_DUT_MAP2606                0x0001180080E05170  RSL
L2C_DUT_MAP2607                0x0001180080E05178  RSL
L2C_DUT_MAP2608                0x0001180080E05180  RSL
L2C_DUT_MAP2609                0x0001180080E05188  RSL
L2C_DUT_MAP2610                0x0001180080E05190  RSL
L2C_DUT_MAP2611                0x0001180080E05198  RSL
L2C_DUT_MAP2612                0x0001180080E051A0  RSL
L2C_DUT_MAP2613                0x0001180080E051A8  RSL
L2C_DUT_MAP2614                0x0001180080E051B0  RSL
L2C_DUT_MAP2615                0x0001180080E051B8  RSL
L2C_DUT_MAP2616                0x0001180080E051C0  RSL
L2C_DUT_MAP2617                0x0001180080E051C8  RSL
L2C_DUT_MAP2618                0x0001180080E051D0  RSL
L2C_DUT_MAP2619                0x0001180080E051D8  RSL
L2C_DUT_MAP2620                0x0001180080E051E0  RSL
L2C_DUT_MAP2621                0x0001180080E051E8  RSL
L2C_DUT_MAP2622                0x0001180080E051F0  RSL
L2C_DUT_MAP2623                0x0001180080E051F8  RSL
L2C_DUT_MAP2624                0x0001180080E05200  RSL
L2C_DUT_MAP2625                0x0001180080E05208  RSL
L2C_DUT_MAP2626                0x0001180080E05210  RSL
L2C_DUT_MAP2627                0x0001180080E05218  RSL
L2C_DUT_MAP2628                0x0001180080E05220  RSL
L2C_DUT_MAP2629                0x0001180080E05228  RSL
L2C_DUT_MAP2630                0x0001180080E05230  RSL
L2C_DUT_MAP2631                0x0001180080E05238  RSL
L2C_DUT_MAP2632                0x0001180080E05240  RSL
L2C_DUT_MAP2633                0x0001180080E05248  RSL
L2C_DUT_MAP2634                0x0001180080E05250  RSL
L2C_DUT_MAP2635                0x0001180080E05258  RSL
L2C_DUT_MAP2636                0x0001180080E05260  RSL
L2C_DUT_MAP2637                0x0001180080E05268  RSL
L2C_DUT_MAP2638                0x0001180080E05270  RSL
L2C_DUT_MAP2639                0x0001180080E05278  RSL
L2C_DUT_MAP2640                0x0001180080E05280  RSL
L2C_DUT_MAP2641                0x0001180080E05288  RSL
L2C_DUT_MAP2642                0x0001180080E05290  RSL
L2C_DUT_MAP2643                0x0001180080E05298  RSL
L2C_DUT_MAP2644                0x0001180080E052A0  RSL
L2C_DUT_MAP2645                0x0001180080E052A8  RSL
L2C_DUT_MAP2646                0x0001180080E052B0  RSL
L2C_DUT_MAP2647                0x0001180080E052B8  RSL
L2C_DUT_MAP2648                0x0001180080E052C0  RSL
L2C_DUT_MAP2649                0x0001180080E052C8  RSL
L2C_DUT_MAP2650                0x0001180080E052D0  RSL
L2C_DUT_MAP2651                0x0001180080E052D8  RSL
L2C_DUT_MAP2652                0x0001180080E052E0  RSL
L2C_DUT_MAP2653                0x0001180080E052E8  RSL
L2C_DUT_MAP2654                0x0001180080E052F0  RSL
L2C_DUT_MAP2655                0x0001180080E052F8  RSL
L2C_DUT_MAP2656                0x0001180080E05300  RSL
L2C_DUT_MAP2657                0x0001180080E05308  RSL
L2C_DUT_MAP2658                0x0001180080E05310  RSL
L2C_DUT_MAP2659                0x0001180080E05318  RSL
L2C_DUT_MAP2660                0x0001180080E05320  RSL
L2C_DUT_MAP2661                0x0001180080E05328  RSL
L2C_DUT_MAP2662                0x0001180080E05330  RSL
L2C_DUT_MAP2663                0x0001180080E05338  RSL
L2C_DUT_MAP2664                0x0001180080E05340  RSL
L2C_DUT_MAP2665                0x0001180080E05348  RSL
L2C_DUT_MAP2666                0x0001180080E05350  RSL
L2C_DUT_MAP2667                0x0001180080E05358  RSL
L2C_DUT_MAP2668                0x0001180080E05360  RSL
L2C_DUT_MAP2669                0x0001180080E05368  RSL
L2C_DUT_MAP2670                0x0001180080E05370  RSL
L2C_DUT_MAP2671                0x0001180080E05378  RSL
L2C_DUT_MAP2672                0x0001180080E05380  RSL
L2C_DUT_MAP2673                0x0001180080E05388  RSL
L2C_DUT_MAP2674                0x0001180080E05390  RSL
L2C_DUT_MAP2675                0x0001180080E05398  RSL
L2C_DUT_MAP2676                0x0001180080E053A0  RSL
L2C_DUT_MAP2677                0x0001180080E053A8  RSL
L2C_DUT_MAP2678                0x0001180080E053B0  RSL
L2C_DUT_MAP2679                0x0001180080E053B8  RSL
L2C_DUT_MAP2680                0x0001180080E053C0  RSL
L2C_DUT_MAP2681                0x0001180080E053C8  RSL
L2C_DUT_MAP2682                0x0001180080E053D0  RSL
L2C_DUT_MAP2683                0x0001180080E053D8  RSL
L2C_DUT_MAP2684                0x0001180080E053E0  RSL
L2C_DUT_MAP2685                0x0001180080E053E8  RSL
L2C_DUT_MAP2686                0x0001180080E053F0  RSL
L2C_DUT_MAP2687                0x0001180080E053F8  RSL
L2C_DUT_MAP2688                0x0001180080E05400  RSL
L2C_DUT_MAP2689                0x0001180080E05408  RSL
L2C_DUT_MAP2690                0x0001180080E05410  RSL
L2C_DUT_MAP2691                0x0001180080E05418  RSL
L2C_DUT_MAP2692                0x0001180080E05420  RSL
L2C_DUT_MAP2693                0x0001180080E05428  RSL
L2C_DUT_MAP2694                0x0001180080E05430  RSL
L2C_DUT_MAP2695                0x0001180080E05438  RSL
L2C_DUT_MAP2696                0x0001180080E05440  RSL
L2C_DUT_MAP2697                0x0001180080E05448  RSL
L2C_DUT_MAP2698                0x0001180080E05450  RSL
L2C_DUT_MAP2699                0x0001180080E05458  RSL
L2C_DUT_MAP2700                0x0001180080E05460  RSL
L2C_DUT_MAP2701                0x0001180080E05468  RSL
L2C_DUT_MAP2702                0x0001180080E05470  RSL
L2C_DUT_MAP2703                0x0001180080E05478  RSL
L2C_DUT_MAP2704                0x0001180080E05480  RSL
L2C_DUT_MAP2705                0x0001180080E05488  RSL
L2C_DUT_MAP2706                0x0001180080E05490  RSL
L2C_DUT_MAP2707                0x0001180080E05498  RSL
L2C_DUT_MAP2708                0x0001180080E054A0  RSL
L2C_DUT_MAP2709                0x0001180080E054A8  RSL
L2C_DUT_MAP2710                0x0001180080E054B0  RSL
L2C_DUT_MAP2711                0x0001180080E054B8  RSL
L2C_DUT_MAP2712                0x0001180080E054C0  RSL
L2C_DUT_MAP2713                0x0001180080E054C8  RSL
L2C_DUT_MAP2714                0x0001180080E054D0  RSL
L2C_DUT_MAP2715                0x0001180080E054D8  RSL
L2C_DUT_MAP2716                0x0001180080E054E0  RSL
L2C_DUT_MAP2717                0x0001180080E054E8  RSL
L2C_DUT_MAP2718                0x0001180080E054F0  RSL
L2C_DUT_MAP2719                0x0001180080E054F8  RSL
L2C_DUT_MAP2720                0x0001180080E05500  RSL
L2C_DUT_MAP2721                0x0001180080E05508  RSL
L2C_DUT_MAP2722                0x0001180080E05510  RSL
L2C_DUT_MAP2723                0x0001180080E05518  RSL
L2C_DUT_MAP2724                0x0001180080E05520  RSL
L2C_DUT_MAP2725                0x0001180080E05528  RSL
L2C_DUT_MAP2726                0x0001180080E05530  RSL
L2C_DUT_MAP2727                0x0001180080E05538  RSL
L2C_DUT_MAP2728                0x0001180080E05540  RSL
L2C_DUT_MAP2729                0x0001180080E05548  RSL
L2C_DUT_MAP2730                0x0001180080E05550  RSL
L2C_DUT_MAP2731                0x0001180080E05558  RSL
L2C_DUT_MAP2732                0x0001180080E05560  RSL
L2C_DUT_MAP2733                0x0001180080E05568  RSL
L2C_DUT_MAP2734                0x0001180080E05570  RSL
L2C_DUT_MAP2735                0x0001180080E05578  RSL
L2C_DUT_MAP2736                0x0001180080E05580  RSL
L2C_DUT_MAP2737                0x0001180080E05588  RSL
L2C_DUT_MAP2738                0x0001180080E05590  RSL
L2C_DUT_MAP2739                0x0001180080E05598  RSL
L2C_DUT_MAP2740                0x0001180080E055A0  RSL
L2C_DUT_MAP2741                0x0001180080E055A8  RSL
L2C_DUT_MAP2742                0x0001180080E055B0  RSL
L2C_DUT_MAP2743                0x0001180080E055B8  RSL
L2C_DUT_MAP2744                0x0001180080E055C0  RSL
L2C_DUT_MAP2745                0x0001180080E055C8  RSL
L2C_DUT_MAP2746                0x0001180080E055D0  RSL
L2C_DUT_MAP2747                0x0001180080E055D8  RSL
L2C_DUT_MAP2748                0x0001180080E055E0  RSL
L2C_DUT_MAP2749                0x0001180080E055E8  RSL
L2C_DUT_MAP2750                0x0001180080E055F0  RSL
L2C_DUT_MAP2751                0x0001180080E055F8  RSL
L2C_DUT_MAP2752                0x0001180080E05600  RSL
L2C_DUT_MAP2753                0x0001180080E05608  RSL
L2C_DUT_MAP2754                0x0001180080E05610  RSL
L2C_DUT_MAP2755                0x0001180080E05618  RSL
L2C_DUT_MAP2756                0x0001180080E05620  RSL
L2C_DUT_MAP2757                0x0001180080E05628  RSL
L2C_DUT_MAP2758                0x0001180080E05630  RSL
L2C_DUT_MAP2759                0x0001180080E05638  RSL
L2C_DUT_MAP2760                0x0001180080E05640  RSL
L2C_DUT_MAP2761                0x0001180080E05648  RSL
L2C_DUT_MAP2762                0x0001180080E05650  RSL
L2C_DUT_MAP2763                0x0001180080E05658  RSL
L2C_DUT_MAP2764                0x0001180080E05660  RSL
L2C_DUT_MAP2765                0x0001180080E05668  RSL
L2C_DUT_MAP2766                0x0001180080E05670  RSL
L2C_DUT_MAP2767                0x0001180080E05678  RSL
L2C_DUT_MAP2768                0x0001180080E05680  RSL
L2C_DUT_MAP2769                0x0001180080E05688  RSL
L2C_DUT_MAP2770                0x0001180080E05690  RSL
L2C_DUT_MAP2771                0x0001180080E05698  RSL
L2C_DUT_MAP2772                0x0001180080E056A0  RSL
L2C_DUT_MAP2773                0x0001180080E056A8  RSL
L2C_DUT_MAP2774                0x0001180080E056B0  RSL
L2C_DUT_MAP2775                0x0001180080E056B8  RSL
L2C_DUT_MAP2776                0x0001180080E056C0  RSL
L2C_DUT_MAP2777                0x0001180080E056C8  RSL
L2C_DUT_MAP2778                0x0001180080E056D0  RSL
L2C_DUT_MAP2779                0x0001180080E056D8  RSL
L2C_DUT_MAP2780                0x0001180080E056E0  RSL
L2C_DUT_MAP2781                0x0001180080E056E8  RSL
L2C_DUT_MAP2782                0x0001180080E056F0  RSL
L2C_DUT_MAP2783                0x0001180080E056F8  RSL
L2C_DUT_MAP2784                0x0001180080E05700  RSL
L2C_DUT_MAP2785                0x0001180080E05708  RSL
L2C_DUT_MAP2786                0x0001180080E05710  RSL
L2C_DUT_MAP2787                0x0001180080E05718  RSL
L2C_DUT_MAP2788                0x0001180080E05720  RSL
L2C_DUT_MAP2789                0x0001180080E05728  RSL
L2C_DUT_MAP2790                0x0001180080E05730  RSL
L2C_DUT_MAP2791                0x0001180080E05738  RSL
L2C_DUT_MAP2792                0x0001180080E05740  RSL
L2C_DUT_MAP2793                0x0001180080E05748  RSL
L2C_DUT_MAP2794                0x0001180080E05750  RSL
L2C_DUT_MAP2795                0x0001180080E05758  RSL
L2C_DUT_MAP2796                0x0001180080E05760  RSL
L2C_DUT_MAP2797                0x0001180080E05768  RSL
L2C_DUT_MAP2798                0x0001180080E05770  RSL
L2C_DUT_MAP2799                0x0001180080E05778  RSL
L2C_DUT_MAP2800                0x0001180080E05780  RSL
L2C_DUT_MAP2801                0x0001180080E05788  RSL
L2C_DUT_MAP2802                0x0001180080E05790  RSL
L2C_DUT_MAP2803                0x0001180080E05798  RSL
L2C_DUT_MAP2804                0x0001180080E057A0  RSL
L2C_DUT_MAP2805                0x0001180080E057A8  RSL
L2C_DUT_MAP2806                0x0001180080E057B0  RSL
L2C_DUT_MAP2807                0x0001180080E057B8  RSL
L2C_DUT_MAP2808                0x0001180080E057C0  RSL
L2C_DUT_MAP2809                0x0001180080E057C8  RSL
L2C_DUT_MAP2810                0x0001180080E057D0  RSL
L2C_DUT_MAP2811                0x0001180080E057D8  RSL
L2C_DUT_MAP2812                0x0001180080E057E0  RSL
L2C_DUT_MAP2813                0x0001180080E057E8  RSL
L2C_DUT_MAP2814                0x0001180080E057F0  RSL
L2C_DUT_MAP2815                0x0001180080E057F8  RSL
L2C_DUT_MAP2816                0x0001180080E05800  RSL
L2C_DUT_MAP2817                0x0001180080E05808  RSL
L2C_DUT_MAP2818                0x0001180080E05810  RSL
L2C_DUT_MAP2819                0x0001180080E05818  RSL
L2C_DUT_MAP2820                0x0001180080E05820  RSL
L2C_DUT_MAP2821                0x0001180080E05828  RSL
L2C_DUT_MAP2822                0x0001180080E05830  RSL
L2C_DUT_MAP2823                0x0001180080E05838  RSL
L2C_DUT_MAP2824                0x0001180080E05840  RSL
L2C_DUT_MAP2825                0x0001180080E05848  RSL
L2C_DUT_MAP2826                0x0001180080E05850  RSL
L2C_DUT_MAP2827                0x0001180080E05858  RSL
L2C_DUT_MAP2828                0x0001180080E05860  RSL
L2C_DUT_MAP2829                0x0001180080E05868  RSL
L2C_DUT_MAP2830                0x0001180080E05870  RSL
L2C_DUT_MAP2831                0x0001180080E05878  RSL
L2C_DUT_MAP2832                0x0001180080E05880  RSL
L2C_DUT_MAP2833                0x0001180080E05888  RSL
L2C_DUT_MAP2834                0x0001180080E05890  RSL
L2C_DUT_MAP2835                0x0001180080E05898  RSL
L2C_DUT_MAP2836                0x0001180080E058A0  RSL
L2C_DUT_MAP2837                0x0001180080E058A8  RSL
L2C_DUT_MAP2838                0x0001180080E058B0  RSL
L2C_DUT_MAP2839                0x0001180080E058B8  RSL
L2C_DUT_MAP2840                0x0001180080E058C0  RSL
L2C_DUT_MAP2841                0x0001180080E058C8  RSL
L2C_DUT_MAP2842                0x0001180080E058D0  RSL
L2C_DUT_MAP2843                0x0001180080E058D8  RSL
L2C_DUT_MAP2844                0x0001180080E058E0  RSL
L2C_DUT_MAP2845                0x0001180080E058E8  RSL
L2C_DUT_MAP2846                0x0001180080E058F0  RSL
L2C_DUT_MAP2847                0x0001180080E058F8  RSL
L2C_DUT_MAP2848                0x0001180080E05900  RSL
L2C_DUT_MAP2849                0x0001180080E05908  RSL
L2C_DUT_MAP2850                0x0001180080E05910  RSL
L2C_DUT_MAP2851                0x0001180080E05918  RSL
L2C_DUT_MAP2852                0x0001180080E05920  RSL
L2C_DUT_MAP2853                0x0001180080E05928  RSL
L2C_DUT_MAP2854                0x0001180080E05930  RSL
L2C_DUT_MAP2855                0x0001180080E05938  RSL
L2C_DUT_MAP2856                0x0001180080E05940  RSL
L2C_DUT_MAP2857                0x0001180080E05948  RSL
L2C_DUT_MAP2858                0x0001180080E05950  RSL
L2C_DUT_MAP2859                0x0001180080E05958  RSL
L2C_DUT_MAP2860                0x0001180080E05960  RSL
L2C_DUT_MAP2861                0x0001180080E05968  RSL
L2C_DUT_MAP2862                0x0001180080E05970  RSL
L2C_DUT_MAP2863                0x0001180080E05978  RSL
L2C_DUT_MAP2864                0x0001180080E05980  RSL
L2C_DUT_MAP2865                0x0001180080E05988  RSL
L2C_DUT_MAP2866                0x0001180080E05990  RSL
L2C_DUT_MAP2867                0x0001180080E05998  RSL
L2C_DUT_MAP2868                0x0001180080E059A0  RSL
L2C_DUT_MAP2869                0x0001180080E059A8  RSL
L2C_DUT_MAP2870                0x0001180080E059B0  RSL
L2C_DUT_MAP2871                0x0001180080E059B8  RSL
L2C_DUT_MAP2872                0x0001180080E059C0  RSL
L2C_DUT_MAP2873                0x0001180080E059C8  RSL
L2C_DUT_MAP2874                0x0001180080E059D0  RSL
L2C_DUT_MAP2875                0x0001180080E059D8  RSL
L2C_DUT_MAP2876                0x0001180080E059E0  RSL
L2C_DUT_MAP2877                0x0001180080E059E8  RSL
L2C_DUT_MAP2878                0x0001180080E059F0  RSL
L2C_DUT_MAP2879                0x0001180080E059F8  RSL
L2C_DUT_MAP2880                0x0001180080E05A00  RSL
L2C_DUT_MAP2881                0x0001180080E05A08  RSL
L2C_DUT_MAP2882                0x0001180080E05A10  RSL
L2C_DUT_MAP2883                0x0001180080E05A18  RSL
L2C_DUT_MAP2884                0x0001180080E05A20  RSL
L2C_DUT_MAP2885                0x0001180080E05A28  RSL
L2C_DUT_MAP2886                0x0001180080E05A30  RSL
L2C_DUT_MAP2887                0x0001180080E05A38  RSL
L2C_DUT_MAP2888                0x0001180080E05A40  RSL
L2C_DUT_MAP2889                0x0001180080E05A48  RSL
L2C_DUT_MAP2890                0x0001180080E05A50  RSL
L2C_DUT_MAP2891                0x0001180080E05A58  RSL
L2C_DUT_MAP2892                0x0001180080E05A60  RSL
L2C_DUT_MAP2893                0x0001180080E05A68  RSL
L2C_DUT_MAP2894                0x0001180080E05A70  RSL
L2C_DUT_MAP2895                0x0001180080E05A78  RSL
L2C_DUT_MAP2896                0x0001180080E05A80  RSL
L2C_DUT_MAP2897                0x0001180080E05A88  RSL
L2C_DUT_MAP2898                0x0001180080E05A90  RSL
L2C_DUT_MAP2899                0x0001180080E05A98  RSL
L2C_DUT_MAP2900                0x0001180080E05AA0  RSL
L2C_DUT_MAP2901                0x0001180080E05AA8  RSL
L2C_DUT_MAP2902                0x0001180080E05AB0  RSL
L2C_DUT_MAP2903                0x0001180080E05AB8  RSL
L2C_DUT_MAP2904                0x0001180080E05AC0  RSL
L2C_DUT_MAP2905                0x0001180080E05AC8  RSL
L2C_DUT_MAP2906                0x0001180080E05AD0  RSL
L2C_DUT_MAP2907                0x0001180080E05AD8  RSL
L2C_DUT_MAP2908                0x0001180080E05AE0  RSL
L2C_DUT_MAP2909                0x0001180080E05AE8  RSL
L2C_DUT_MAP2910                0x0001180080E05AF0  RSL
L2C_DUT_MAP2911                0x0001180080E05AF8  RSL
L2C_DUT_MAP2912                0x0001180080E05B00  RSL
L2C_DUT_MAP2913                0x0001180080E05B08  RSL
L2C_DUT_MAP2914                0x0001180080E05B10  RSL
L2C_DUT_MAP2915                0x0001180080E05B18  RSL
L2C_DUT_MAP2916                0x0001180080E05B20  RSL
L2C_DUT_MAP2917                0x0001180080E05B28  RSL
L2C_DUT_MAP2918                0x0001180080E05B30  RSL
L2C_DUT_MAP2919                0x0001180080E05B38  RSL
L2C_DUT_MAP2920                0x0001180080E05B40  RSL
L2C_DUT_MAP2921                0x0001180080E05B48  RSL
L2C_DUT_MAP2922                0x0001180080E05B50  RSL
L2C_DUT_MAP2923                0x0001180080E05B58  RSL
L2C_DUT_MAP2924                0x0001180080E05B60  RSL
L2C_DUT_MAP2925                0x0001180080E05B68  RSL
L2C_DUT_MAP2926                0x0001180080E05B70  RSL
L2C_DUT_MAP2927                0x0001180080E05B78  RSL
L2C_DUT_MAP2928                0x0001180080E05B80  RSL
L2C_DUT_MAP2929                0x0001180080E05B88  RSL
L2C_DUT_MAP2930                0x0001180080E05B90  RSL
L2C_DUT_MAP2931                0x0001180080E05B98  RSL
L2C_DUT_MAP2932                0x0001180080E05BA0  RSL
L2C_DUT_MAP2933                0x0001180080E05BA8  RSL
L2C_DUT_MAP2934                0x0001180080E05BB0  RSL
L2C_DUT_MAP2935                0x0001180080E05BB8  RSL
L2C_DUT_MAP2936                0x0001180080E05BC0  RSL
L2C_DUT_MAP2937                0x0001180080E05BC8  RSL
L2C_DUT_MAP2938                0x0001180080E05BD0  RSL
L2C_DUT_MAP2939                0x0001180080E05BD8  RSL
L2C_DUT_MAP2940                0x0001180080E05BE0  RSL
L2C_DUT_MAP2941                0x0001180080E05BE8  RSL
L2C_DUT_MAP2942                0x0001180080E05BF0  RSL
L2C_DUT_MAP2943                0x0001180080E05BF8  RSL
L2C_DUT_MAP2944                0x0001180080E05C00  RSL
L2C_DUT_MAP2945                0x0001180080E05C08  RSL
L2C_DUT_MAP2946                0x0001180080E05C10  RSL
L2C_DUT_MAP2947                0x0001180080E05C18  RSL
L2C_DUT_MAP2948                0x0001180080E05C20  RSL
L2C_DUT_MAP2949                0x0001180080E05C28  RSL
L2C_DUT_MAP2950                0x0001180080E05C30  RSL
L2C_DUT_MAP2951                0x0001180080E05C38  RSL
L2C_DUT_MAP2952                0x0001180080E05C40  RSL
L2C_DUT_MAP2953                0x0001180080E05C48  RSL
L2C_DUT_MAP2954                0x0001180080E05C50  RSL
L2C_DUT_MAP2955                0x0001180080E05C58  RSL
L2C_DUT_MAP2956                0x0001180080E05C60  RSL
L2C_DUT_MAP2957                0x0001180080E05C68  RSL
L2C_DUT_MAP2958                0x0001180080E05C70  RSL
L2C_DUT_MAP2959                0x0001180080E05C78  RSL
L2C_DUT_MAP2960                0x0001180080E05C80  RSL
L2C_DUT_MAP2961                0x0001180080E05C88  RSL
L2C_DUT_MAP2962                0x0001180080E05C90  RSL
L2C_DUT_MAP2963                0x0001180080E05C98  RSL
L2C_DUT_MAP2964                0x0001180080E05CA0  RSL
L2C_DUT_MAP2965                0x0001180080E05CA8  RSL
L2C_DUT_MAP2966                0x0001180080E05CB0  RSL
L2C_DUT_MAP2967                0x0001180080E05CB8  RSL
L2C_DUT_MAP2968                0x0001180080E05CC0  RSL
L2C_DUT_MAP2969                0x0001180080E05CC8  RSL
L2C_DUT_MAP2970                0x0001180080E05CD0  RSL
L2C_DUT_MAP2971                0x0001180080E05CD8  RSL
L2C_DUT_MAP2972                0x0001180080E05CE0  RSL
L2C_DUT_MAP2973                0x0001180080E05CE8  RSL
L2C_DUT_MAP2974                0x0001180080E05CF0  RSL
L2C_DUT_MAP2975                0x0001180080E05CF8  RSL
L2C_DUT_MAP2976                0x0001180080E05D00  RSL
L2C_DUT_MAP2977                0x0001180080E05D08  RSL
L2C_DUT_MAP2978                0x0001180080E05D10  RSL
L2C_DUT_MAP2979                0x0001180080E05D18  RSL
L2C_DUT_MAP2980                0x0001180080E05D20  RSL
L2C_DUT_MAP2981                0x0001180080E05D28  RSL
L2C_DUT_MAP2982                0x0001180080E05D30  RSL
L2C_DUT_MAP2983                0x0001180080E05D38  RSL
L2C_DUT_MAP2984                0x0001180080E05D40  RSL
L2C_DUT_MAP2985                0x0001180080E05D48  RSL
L2C_DUT_MAP2986                0x0001180080E05D50  RSL
L2C_DUT_MAP2987                0x0001180080E05D58  RSL
L2C_DUT_MAP2988                0x0001180080E05D60  RSL
L2C_DUT_MAP2989                0x0001180080E05D68  RSL
L2C_DUT_MAP2990                0x0001180080E05D70  RSL
L2C_DUT_MAP2991                0x0001180080E05D78  RSL
L2C_DUT_MAP2992                0x0001180080E05D80  RSL
L2C_DUT_MAP2993                0x0001180080E05D88  RSL
L2C_DUT_MAP2994                0x0001180080E05D90  RSL
L2C_DUT_MAP2995                0x0001180080E05D98  RSL
L2C_DUT_MAP2996                0x0001180080E05DA0  RSL
L2C_DUT_MAP2997                0x0001180080E05DA8  RSL
L2C_DUT_MAP2998                0x0001180080E05DB0  RSL
L2C_DUT_MAP2999                0x0001180080E05DB8  RSL
L2C_DUT_MAP3000                0x0001180080E05DC0  RSL
L2C_DUT_MAP3001                0x0001180080E05DC8  RSL
L2C_DUT_MAP3002                0x0001180080E05DD0  RSL
L2C_DUT_MAP3003                0x0001180080E05DD8  RSL
L2C_DUT_MAP3004                0x0001180080E05DE0  RSL
L2C_DUT_MAP3005                0x0001180080E05DE8  RSL
L2C_DUT_MAP3006                0x0001180080E05DF0  RSL
L2C_DUT_MAP3007                0x0001180080E05DF8  RSL
L2C_DUT_MAP3008                0x0001180080E05E00  RSL
L2C_DUT_MAP3009                0x0001180080E05E08  RSL
L2C_DUT_MAP3010                0x0001180080E05E10  RSL
L2C_DUT_MAP3011                0x0001180080E05E18  RSL
L2C_DUT_MAP3012                0x0001180080E05E20  RSL
L2C_DUT_MAP3013                0x0001180080E05E28  RSL
L2C_DUT_MAP3014                0x0001180080E05E30  RSL
L2C_DUT_MAP3015                0x0001180080E05E38  RSL
L2C_DUT_MAP3016                0x0001180080E05E40  RSL
L2C_DUT_MAP3017                0x0001180080E05E48  RSL
L2C_DUT_MAP3018                0x0001180080E05E50  RSL
L2C_DUT_MAP3019                0x0001180080E05E58  RSL
L2C_DUT_MAP3020                0x0001180080E05E60  RSL
L2C_DUT_MAP3021                0x0001180080E05E68  RSL
L2C_DUT_MAP3022                0x0001180080E05E70  RSL
L2C_DUT_MAP3023                0x0001180080E05E78  RSL
L2C_DUT_MAP3024                0x0001180080E05E80  RSL
L2C_DUT_MAP3025                0x0001180080E05E88  RSL
L2C_DUT_MAP3026                0x0001180080E05E90  RSL
L2C_DUT_MAP3027                0x0001180080E05E98  RSL
L2C_DUT_MAP3028                0x0001180080E05EA0  RSL
L2C_DUT_MAP3029                0x0001180080E05EA8  RSL
L2C_DUT_MAP3030                0x0001180080E05EB0  RSL
L2C_DUT_MAP3031                0x0001180080E05EB8  RSL
L2C_DUT_MAP3032                0x0001180080E05EC0  RSL
L2C_DUT_MAP3033                0x0001180080E05EC8  RSL
L2C_DUT_MAP3034                0x0001180080E05ED0  RSL
L2C_DUT_MAP3035                0x0001180080E05ED8  RSL
L2C_DUT_MAP3036                0x0001180080E05EE0  RSL
L2C_DUT_MAP3037                0x0001180080E05EE8  RSL
L2C_DUT_MAP3038                0x0001180080E05EF0  RSL
L2C_DUT_MAP3039                0x0001180080E05EF8  RSL
L2C_DUT_MAP3040                0x0001180080E05F00  RSL
L2C_DUT_MAP3041                0x0001180080E05F08  RSL
L2C_DUT_MAP3042                0x0001180080E05F10  RSL
L2C_DUT_MAP3043                0x0001180080E05F18  RSL
L2C_DUT_MAP3044                0x0001180080E05F20  RSL
L2C_DUT_MAP3045                0x0001180080E05F28  RSL
L2C_DUT_MAP3046                0x0001180080E05F30  RSL
L2C_DUT_MAP3047                0x0001180080E05F38  RSL
L2C_DUT_MAP3048                0x0001180080E05F40  RSL
L2C_DUT_MAP3049                0x0001180080E05F48  RSL
L2C_DUT_MAP3050                0x0001180080E05F50  RSL
L2C_DUT_MAP3051                0x0001180080E05F58  RSL
L2C_DUT_MAP3052                0x0001180080E05F60  RSL
L2C_DUT_MAP3053                0x0001180080E05F68  RSL
L2C_DUT_MAP3054                0x0001180080E05F70  RSL
L2C_DUT_MAP3055                0x0001180080E05F78  RSL
L2C_DUT_MAP3056                0x0001180080E05F80  RSL
L2C_DUT_MAP3057                0x0001180080E05F88  RSL
L2C_DUT_MAP3058                0x0001180080E05F90  RSL
L2C_DUT_MAP3059                0x0001180080E05F98  RSL
L2C_DUT_MAP3060                0x0001180080E05FA0  RSL
L2C_DUT_MAP3061                0x0001180080E05FA8  RSL
L2C_DUT_MAP3062                0x0001180080E05FB0  RSL
L2C_DUT_MAP3063                0x0001180080E05FB8  RSL
L2C_DUT_MAP3064                0x0001180080E05FC0  RSL
L2C_DUT_MAP3065                0x0001180080E05FC8  RSL
L2C_DUT_MAP3066                0x0001180080E05FD0  RSL
L2C_DUT_MAP3067                0x0001180080E05FD8  RSL
L2C_DUT_MAP3068                0x0001180080E05FE0  RSL
L2C_DUT_MAP3069                0x0001180080E05FE8  RSL
L2C_DUT_MAP3070                0x0001180080E05FF0  RSL
L2C_DUT_MAP3071                0x0001180080E05FF8  RSL
L2C_DUT_MAP3072                0x0001180080E06000  RSL
L2C_DUT_MAP3073                0x0001180080E06008  RSL
L2C_DUT_MAP3074                0x0001180080E06010  RSL
L2C_DUT_MAP3075                0x0001180080E06018  RSL
L2C_DUT_MAP3076                0x0001180080E06020  RSL
L2C_DUT_MAP3077                0x0001180080E06028  RSL
L2C_DUT_MAP3078                0x0001180080E06030  RSL
L2C_DUT_MAP3079                0x0001180080E06038  RSL
L2C_DUT_MAP3080                0x0001180080E06040  RSL
L2C_DUT_MAP3081                0x0001180080E06048  RSL
L2C_DUT_MAP3082                0x0001180080E06050  RSL
L2C_DUT_MAP3083                0x0001180080E06058  RSL
L2C_DUT_MAP3084                0x0001180080E06060  RSL
L2C_DUT_MAP3085                0x0001180080E06068  RSL
L2C_DUT_MAP3086                0x0001180080E06070  RSL
L2C_DUT_MAP3087                0x0001180080E06078  RSL
L2C_DUT_MAP3088                0x0001180080E06080  RSL
L2C_DUT_MAP3089                0x0001180080E06088  RSL
L2C_DUT_MAP3090                0x0001180080E06090  RSL
L2C_DUT_MAP3091                0x0001180080E06098  RSL
L2C_DUT_MAP3092                0x0001180080E060A0  RSL
L2C_DUT_MAP3093                0x0001180080E060A8  RSL
L2C_DUT_MAP3094                0x0001180080E060B0  RSL
L2C_DUT_MAP3095                0x0001180080E060B8  RSL
L2C_DUT_MAP3096                0x0001180080E060C0  RSL
L2C_DUT_MAP3097                0x0001180080E060C8  RSL
L2C_DUT_MAP3098                0x0001180080E060D0  RSL
L2C_DUT_MAP3099                0x0001180080E060D8  RSL
L2C_DUT_MAP3100                0x0001180080E060E0  RSL
L2C_DUT_MAP3101                0x0001180080E060E8  RSL
L2C_DUT_MAP3102                0x0001180080E060F0  RSL
L2C_DUT_MAP3103                0x0001180080E060F8  RSL
L2C_DUT_MAP3104                0x0001180080E06100  RSL
L2C_DUT_MAP3105                0x0001180080E06108  RSL
L2C_DUT_MAP3106                0x0001180080E06110  RSL
L2C_DUT_MAP3107                0x0001180080E06118  RSL
L2C_DUT_MAP3108                0x0001180080E06120  RSL
L2C_DUT_MAP3109                0x0001180080E06128  RSL
L2C_DUT_MAP3110                0x0001180080E06130  RSL
L2C_DUT_MAP3111                0x0001180080E06138  RSL
L2C_DUT_MAP3112                0x0001180080E06140  RSL
L2C_DUT_MAP3113                0x0001180080E06148  RSL
L2C_DUT_MAP3114                0x0001180080E06150  RSL
L2C_DUT_MAP3115                0x0001180080E06158  RSL
L2C_DUT_MAP3116                0x0001180080E06160  RSL
L2C_DUT_MAP3117                0x0001180080E06168  RSL
L2C_DUT_MAP3118                0x0001180080E06170  RSL
L2C_DUT_MAP3119                0x0001180080E06178  RSL
L2C_DUT_MAP3120                0x0001180080E06180  RSL
L2C_DUT_MAP3121                0x0001180080E06188  RSL
L2C_DUT_MAP3122                0x0001180080E06190  RSL
L2C_DUT_MAP3123                0x0001180080E06198  RSL
L2C_DUT_MAP3124                0x0001180080E061A0  RSL
L2C_DUT_MAP3125                0x0001180080E061A8  RSL
L2C_DUT_MAP3126                0x0001180080E061B0  RSL
L2C_DUT_MAP3127                0x0001180080E061B8  RSL
L2C_DUT_MAP3128                0x0001180080E061C0  RSL
L2C_DUT_MAP3129                0x0001180080E061C8  RSL
L2C_DUT_MAP3130                0x0001180080E061D0  RSL
L2C_DUT_MAP3131                0x0001180080E061D8  RSL
L2C_DUT_MAP3132                0x0001180080E061E0  RSL
L2C_DUT_MAP3133                0x0001180080E061E8  RSL
L2C_DUT_MAP3134                0x0001180080E061F0  RSL
L2C_DUT_MAP3135                0x0001180080E061F8  RSL
L2C_DUT_MAP3136                0x0001180080E06200  RSL
L2C_DUT_MAP3137                0x0001180080E06208  RSL
L2C_DUT_MAP3138                0x0001180080E06210  RSL
L2C_DUT_MAP3139                0x0001180080E06218  RSL
L2C_DUT_MAP3140                0x0001180080E06220  RSL
L2C_DUT_MAP3141                0x0001180080E06228  RSL
L2C_DUT_MAP3142                0x0001180080E06230  RSL
L2C_DUT_MAP3143                0x0001180080E06238  RSL
L2C_DUT_MAP3144                0x0001180080E06240  RSL
L2C_DUT_MAP3145                0x0001180080E06248  RSL
L2C_DUT_MAP3146                0x0001180080E06250  RSL
L2C_DUT_MAP3147                0x0001180080E06258  RSL
L2C_DUT_MAP3148                0x0001180080E06260  RSL
L2C_DUT_MAP3149                0x0001180080E06268  RSL
L2C_DUT_MAP3150                0x0001180080E06270  RSL
L2C_DUT_MAP3151                0x0001180080E06278  RSL
L2C_DUT_MAP3152                0x0001180080E06280  RSL
L2C_DUT_MAP3153                0x0001180080E06288  RSL
L2C_DUT_MAP3154                0x0001180080E06290  RSL
L2C_DUT_MAP3155                0x0001180080E06298  RSL
L2C_DUT_MAP3156                0x0001180080E062A0  RSL
L2C_DUT_MAP3157                0x0001180080E062A8  RSL
L2C_DUT_MAP3158                0x0001180080E062B0  RSL
L2C_DUT_MAP3159                0x0001180080E062B8  RSL
L2C_DUT_MAP3160                0x0001180080E062C0  RSL
L2C_DUT_MAP3161                0x0001180080E062C8  RSL
L2C_DUT_MAP3162                0x0001180080E062D0  RSL
L2C_DUT_MAP3163                0x0001180080E062D8  RSL
L2C_DUT_MAP3164                0x0001180080E062E0  RSL
L2C_DUT_MAP3165                0x0001180080E062E8  RSL
L2C_DUT_MAP3166                0x0001180080E062F0  RSL
L2C_DUT_MAP3167                0x0001180080E062F8  RSL
L2C_DUT_MAP3168                0x0001180080E06300  RSL
L2C_DUT_MAP3169                0x0001180080E06308  RSL
L2C_DUT_MAP3170                0x0001180080E06310  RSL
L2C_DUT_MAP3171                0x0001180080E06318  RSL
L2C_DUT_MAP3172                0x0001180080E06320  RSL
L2C_DUT_MAP3173                0x0001180080E06328  RSL
L2C_DUT_MAP3174                0x0001180080E06330  RSL
L2C_DUT_MAP3175                0x0001180080E06338  RSL
L2C_DUT_MAP3176                0x0001180080E06340  RSL
L2C_DUT_MAP3177                0x0001180080E06348  RSL
L2C_DUT_MAP3178                0x0001180080E06350  RSL
L2C_DUT_MAP3179                0x0001180080E06358  RSL
L2C_DUT_MAP3180                0x0001180080E06360  RSL
L2C_DUT_MAP3181                0x0001180080E06368  RSL
L2C_DUT_MAP3182                0x0001180080E06370  RSL
L2C_DUT_MAP3183                0x0001180080E06378  RSL
L2C_DUT_MAP3184                0x0001180080E06380  RSL
L2C_DUT_MAP3185                0x0001180080E06388  RSL
L2C_DUT_MAP3186                0x0001180080E06390  RSL
L2C_DUT_MAP3187                0x0001180080E06398  RSL
L2C_DUT_MAP3188                0x0001180080E063A0  RSL
L2C_DUT_MAP3189                0x0001180080E063A8  RSL
L2C_DUT_MAP3190                0x0001180080E063B0  RSL
L2C_DUT_MAP3191                0x0001180080E063B8  RSL
L2C_DUT_MAP3192                0x0001180080E063C0  RSL
L2C_DUT_MAP3193                0x0001180080E063C8  RSL
L2C_DUT_MAP3194                0x0001180080E063D0  RSL
L2C_DUT_MAP3195                0x0001180080E063D8  RSL
L2C_DUT_MAP3196                0x0001180080E063E0  RSL
L2C_DUT_MAP3197                0x0001180080E063E8  RSL
L2C_DUT_MAP3198                0x0001180080E063F0  RSL
L2C_DUT_MAP3199                0x0001180080E063F8  RSL
L2C_DUT_MAP3200                0x0001180080E06400  RSL
L2C_DUT_MAP3201                0x0001180080E06408  RSL
L2C_DUT_MAP3202                0x0001180080E06410  RSL
L2C_DUT_MAP3203                0x0001180080E06418  RSL
L2C_DUT_MAP3204                0x0001180080E06420  RSL
L2C_DUT_MAP3205                0x0001180080E06428  RSL
L2C_DUT_MAP3206                0x0001180080E06430  RSL
L2C_DUT_MAP3207                0x0001180080E06438  RSL
L2C_DUT_MAP3208                0x0001180080E06440  RSL
L2C_DUT_MAP3209                0x0001180080E06448  RSL
L2C_DUT_MAP3210                0x0001180080E06450  RSL
L2C_DUT_MAP3211                0x0001180080E06458  RSL
L2C_DUT_MAP3212                0x0001180080E06460  RSL
L2C_DUT_MAP3213                0x0001180080E06468  RSL
L2C_DUT_MAP3214                0x0001180080E06470  RSL
L2C_DUT_MAP3215                0x0001180080E06478  RSL
L2C_DUT_MAP3216                0x0001180080E06480  RSL
L2C_DUT_MAP3217                0x0001180080E06488  RSL
L2C_DUT_MAP3218                0x0001180080E06490  RSL
L2C_DUT_MAP3219                0x0001180080E06498  RSL
L2C_DUT_MAP3220                0x0001180080E064A0  RSL
L2C_DUT_MAP3221                0x0001180080E064A8  RSL
L2C_DUT_MAP3222                0x0001180080E064B0  RSL
L2C_DUT_MAP3223                0x0001180080E064B8  RSL
L2C_DUT_MAP3224                0x0001180080E064C0  RSL
L2C_DUT_MAP3225                0x0001180080E064C8  RSL
L2C_DUT_MAP3226                0x0001180080E064D0  RSL
L2C_DUT_MAP3227                0x0001180080E064D8  RSL
L2C_DUT_MAP3228                0x0001180080E064E0  RSL
L2C_DUT_MAP3229                0x0001180080E064E8  RSL
L2C_DUT_MAP3230                0x0001180080E064F0  RSL
L2C_DUT_MAP3231                0x0001180080E064F8  RSL
L2C_DUT_MAP3232                0x0001180080E06500  RSL
L2C_DUT_MAP3233                0x0001180080E06508  RSL
L2C_DUT_MAP3234                0x0001180080E06510  RSL
L2C_DUT_MAP3235                0x0001180080E06518  RSL
L2C_DUT_MAP3236                0x0001180080E06520  RSL
L2C_DUT_MAP3237                0x0001180080E06528  RSL
L2C_DUT_MAP3238                0x0001180080E06530  RSL
L2C_DUT_MAP3239                0x0001180080E06538  RSL
L2C_DUT_MAP3240                0x0001180080E06540  RSL
L2C_DUT_MAP3241                0x0001180080E06548  RSL
L2C_DUT_MAP3242                0x0001180080E06550  RSL
L2C_DUT_MAP3243                0x0001180080E06558  RSL
L2C_DUT_MAP3244                0x0001180080E06560  RSL
L2C_DUT_MAP3245                0x0001180080E06568  RSL
L2C_DUT_MAP3246                0x0001180080E06570  RSL
L2C_DUT_MAP3247                0x0001180080E06578  RSL
L2C_DUT_MAP3248                0x0001180080E06580  RSL
L2C_DUT_MAP3249                0x0001180080E06588  RSL
L2C_DUT_MAP3250                0x0001180080E06590  RSL
L2C_DUT_MAP3251                0x0001180080E06598  RSL
L2C_DUT_MAP3252                0x0001180080E065A0  RSL
L2C_DUT_MAP3253                0x0001180080E065A8  RSL
L2C_DUT_MAP3254                0x0001180080E065B0  RSL
L2C_DUT_MAP3255                0x0001180080E065B8  RSL
L2C_DUT_MAP3256                0x0001180080E065C0  RSL
L2C_DUT_MAP3257                0x0001180080E065C8  RSL
L2C_DUT_MAP3258                0x0001180080E065D0  RSL
L2C_DUT_MAP3259                0x0001180080E065D8  RSL
L2C_DUT_MAP3260                0x0001180080E065E0  RSL
L2C_DUT_MAP3261                0x0001180080E065E8  RSL
L2C_DUT_MAP3262                0x0001180080E065F0  RSL
L2C_DUT_MAP3263                0x0001180080E065F8  RSL
L2C_DUT_MAP3264                0x0001180080E06600  RSL
L2C_DUT_MAP3265                0x0001180080E06608  RSL
L2C_DUT_MAP3266                0x0001180080E06610  RSL
L2C_DUT_MAP3267                0x0001180080E06618  RSL
L2C_DUT_MAP3268                0x0001180080E06620  RSL
L2C_DUT_MAP3269                0x0001180080E06628  RSL
L2C_DUT_MAP3270                0x0001180080E06630  RSL
L2C_DUT_MAP3271                0x0001180080E06638  RSL
L2C_DUT_MAP3272                0x0001180080E06640  RSL
L2C_DUT_MAP3273                0x0001180080E06648  RSL
L2C_DUT_MAP3274                0x0001180080E06650  RSL
L2C_DUT_MAP3275                0x0001180080E06658  RSL
L2C_DUT_MAP3276                0x0001180080E06660  RSL
L2C_DUT_MAP3277                0x0001180080E06668  RSL
L2C_DUT_MAP3278                0x0001180080E06670  RSL
L2C_DUT_MAP3279                0x0001180080E06678  RSL
L2C_DUT_MAP3280                0x0001180080E06680  RSL
L2C_DUT_MAP3281                0x0001180080E06688  RSL
L2C_DUT_MAP3282                0x0001180080E06690  RSL
L2C_DUT_MAP3283                0x0001180080E06698  RSL
L2C_DUT_MAP3284                0x0001180080E066A0  RSL
L2C_DUT_MAP3285                0x0001180080E066A8  RSL
L2C_DUT_MAP3286                0x0001180080E066B0  RSL
L2C_DUT_MAP3287                0x0001180080E066B8  RSL
L2C_DUT_MAP3288                0x0001180080E066C0  RSL
L2C_DUT_MAP3289                0x0001180080E066C8  RSL
L2C_DUT_MAP3290                0x0001180080E066D0  RSL
L2C_DUT_MAP3291                0x0001180080E066D8  RSL
L2C_DUT_MAP3292                0x0001180080E066E0  RSL
L2C_DUT_MAP3293                0x0001180080E066E8  RSL
L2C_DUT_MAP3294                0x0001180080E066F0  RSL
L2C_DUT_MAP3295                0x0001180080E066F8  RSL
L2C_DUT_MAP3296                0x0001180080E06700  RSL
L2C_DUT_MAP3297                0x0001180080E06708  RSL
L2C_DUT_MAP3298                0x0001180080E06710  RSL
L2C_DUT_MAP3299                0x0001180080E06718  RSL
L2C_DUT_MAP3300                0x0001180080E06720  RSL
L2C_DUT_MAP3301                0x0001180080E06728  RSL
L2C_DUT_MAP3302                0x0001180080E06730  RSL
L2C_DUT_MAP3303                0x0001180080E06738  RSL
L2C_DUT_MAP3304                0x0001180080E06740  RSL
L2C_DUT_MAP3305                0x0001180080E06748  RSL
L2C_DUT_MAP3306                0x0001180080E06750  RSL
L2C_DUT_MAP3307                0x0001180080E06758  RSL
L2C_DUT_MAP3308                0x0001180080E06760  RSL
L2C_DUT_MAP3309                0x0001180080E06768  RSL
L2C_DUT_MAP3310                0x0001180080E06770  RSL
L2C_DUT_MAP3311                0x0001180080E06778  RSL
L2C_DUT_MAP3312                0x0001180080E06780  RSL
L2C_DUT_MAP3313                0x0001180080E06788  RSL
L2C_DUT_MAP3314                0x0001180080E06790  RSL
L2C_DUT_MAP3315                0x0001180080E06798  RSL
L2C_DUT_MAP3316                0x0001180080E067A0  RSL
L2C_DUT_MAP3317                0x0001180080E067A8  RSL
L2C_DUT_MAP3318                0x0001180080E067B0  RSL
L2C_DUT_MAP3319                0x0001180080E067B8  RSL
L2C_DUT_MAP3320                0x0001180080E067C0  RSL
L2C_DUT_MAP3321                0x0001180080E067C8  RSL
L2C_DUT_MAP3322                0x0001180080E067D0  RSL
L2C_DUT_MAP3323                0x0001180080E067D8  RSL
L2C_DUT_MAP3324                0x0001180080E067E0  RSL
L2C_DUT_MAP3325                0x0001180080E067E8  RSL
L2C_DUT_MAP3326                0x0001180080E067F0  RSL
L2C_DUT_MAP3327                0x0001180080E067F8  RSL
L2C_DUT_MAP3328                0x0001180080E06800  RSL
L2C_DUT_MAP3329                0x0001180080E06808  RSL
L2C_DUT_MAP3330                0x0001180080E06810  RSL
L2C_DUT_MAP3331                0x0001180080E06818  RSL
L2C_DUT_MAP3332                0x0001180080E06820  RSL
L2C_DUT_MAP3333                0x0001180080E06828  RSL
L2C_DUT_MAP3334                0x0001180080E06830  RSL
L2C_DUT_MAP3335                0x0001180080E06838  RSL
L2C_DUT_MAP3336                0x0001180080E06840  RSL
L2C_DUT_MAP3337                0x0001180080E06848  RSL
L2C_DUT_MAP3338                0x0001180080E06850  RSL
L2C_DUT_MAP3339                0x0001180080E06858  RSL
L2C_DUT_MAP3340                0x0001180080E06860  RSL
L2C_DUT_MAP3341                0x0001180080E06868  RSL
L2C_DUT_MAP3342                0x0001180080E06870  RSL
L2C_DUT_MAP3343                0x0001180080E06878  RSL
L2C_DUT_MAP3344                0x0001180080E06880  RSL
L2C_DUT_MAP3345                0x0001180080E06888  RSL
L2C_DUT_MAP3346                0x0001180080E06890  RSL
L2C_DUT_MAP3347                0x0001180080E06898  RSL
L2C_DUT_MAP3348                0x0001180080E068A0  RSL
L2C_DUT_MAP3349                0x0001180080E068A8  RSL
L2C_DUT_MAP3350                0x0001180080E068B0  RSL
L2C_DUT_MAP3351                0x0001180080E068B8  RSL
L2C_DUT_MAP3352                0x0001180080E068C0  RSL
L2C_DUT_MAP3353                0x0001180080E068C8  RSL
L2C_DUT_MAP3354                0x0001180080E068D0  RSL
L2C_DUT_MAP3355                0x0001180080E068D8  RSL
L2C_DUT_MAP3356                0x0001180080E068E0  RSL
L2C_DUT_MAP3357                0x0001180080E068E8  RSL
L2C_DUT_MAP3358                0x0001180080E068F0  RSL
L2C_DUT_MAP3359                0x0001180080E068F8  RSL
L2C_DUT_MAP3360                0x0001180080E06900  RSL
L2C_DUT_MAP3361                0x0001180080E06908  RSL
L2C_DUT_MAP3362                0x0001180080E06910  RSL
L2C_DUT_MAP3363                0x0001180080E06918  RSL
L2C_DUT_MAP3364                0x0001180080E06920  RSL
L2C_DUT_MAP3365                0x0001180080E06928  RSL
L2C_DUT_MAP3366                0x0001180080E06930  RSL
L2C_DUT_MAP3367                0x0001180080E06938  RSL
L2C_DUT_MAP3368                0x0001180080E06940  RSL
L2C_DUT_MAP3369                0x0001180080E06948  RSL
L2C_DUT_MAP3370                0x0001180080E06950  RSL
L2C_DUT_MAP3371                0x0001180080E06958  RSL
L2C_DUT_MAP3372                0x0001180080E06960  RSL
L2C_DUT_MAP3373                0x0001180080E06968  RSL
L2C_DUT_MAP3374                0x0001180080E06970  RSL
L2C_DUT_MAP3375                0x0001180080E06978  RSL
L2C_DUT_MAP3376                0x0001180080E06980  RSL
L2C_DUT_MAP3377                0x0001180080E06988  RSL
L2C_DUT_MAP3378                0x0001180080E06990  RSL
L2C_DUT_MAP3379                0x0001180080E06998  RSL
L2C_DUT_MAP3380                0x0001180080E069A0  RSL
L2C_DUT_MAP3381                0x0001180080E069A8  RSL
L2C_DUT_MAP3382                0x0001180080E069B0  RSL
L2C_DUT_MAP3383                0x0001180080E069B8  RSL
L2C_DUT_MAP3384                0x0001180080E069C0  RSL
L2C_DUT_MAP3385                0x0001180080E069C8  RSL
L2C_DUT_MAP3386                0x0001180080E069D0  RSL
L2C_DUT_MAP3387                0x0001180080E069D8  RSL
L2C_DUT_MAP3388                0x0001180080E069E0  RSL
L2C_DUT_MAP3389                0x0001180080E069E8  RSL
L2C_DUT_MAP3390                0x0001180080E069F0  RSL
L2C_DUT_MAP3391                0x0001180080E069F8  RSL
L2C_DUT_MAP3392                0x0001180080E06A00  RSL
L2C_DUT_MAP3393                0x0001180080E06A08  RSL
L2C_DUT_MAP3394                0x0001180080E06A10  RSL
L2C_DUT_MAP3395                0x0001180080E06A18  RSL
L2C_DUT_MAP3396                0x0001180080E06A20  RSL
L2C_DUT_MAP3397                0x0001180080E06A28  RSL
L2C_DUT_MAP3398                0x0001180080E06A30  RSL
L2C_DUT_MAP3399                0x0001180080E06A38  RSL
L2C_DUT_MAP3400                0x0001180080E06A40  RSL
L2C_DUT_MAP3401                0x0001180080E06A48  RSL
L2C_DUT_MAP3402                0x0001180080E06A50  RSL
L2C_DUT_MAP3403                0x0001180080E06A58  RSL
L2C_DUT_MAP3404                0x0001180080E06A60  RSL
L2C_DUT_MAP3405                0x0001180080E06A68  RSL
L2C_DUT_MAP3406                0x0001180080E06A70  RSL
L2C_DUT_MAP3407                0x0001180080E06A78  RSL
L2C_DUT_MAP3408                0x0001180080E06A80  RSL
L2C_DUT_MAP3409                0x0001180080E06A88  RSL
L2C_DUT_MAP3410                0x0001180080E06A90  RSL
L2C_DUT_MAP3411                0x0001180080E06A98  RSL
L2C_DUT_MAP3412                0x0001180080E06AA0  RSL
L2C_DUT_MAP3413                0x0001180080E06AA8  RSL
L2C_DUT_MAP3414                0x0001180080E06AB0  RSL
L2C_DUT_MAP3415                0x0001180080E06AB8  RSL
L2C_DUT_MAP3416                0x0001180080E06AC0  RSL
L2C_DUT_MAP3417                0x0001180080E06AC8  RSL
L2C_DUT_MAP3418                0x0001180080E06AD0  RSL
L2C_DUT_MAP3419                0x0001180080E06AD8  RSL
L2C_DUT_MAP3420                0x0001180080E06AE0  RSL
L2C_DUT_MAP3421                0x0001180080E06AE8  RSL
L2C_DUT_MAP3422                0x0001180080E06AF0  RSL
L2C_DUT_MAP3423                0x0001180080E06AF8  RSL
L2C_DUT_MAP3424                0x0001180080E06B00  RSL
L2C_DUT_MAP3425                0x0001180080E06B08  RSL
L2C_DUT_MAP3426                0x0001180080E06B10  RSL
L2C_DUT_MAP3427                0x0001180080E06B18  RSL
L2C_DUT_MAP3428                0x0001180080E06B20  RSL
L2C_DUT_MAP3429                0x0001180080E06B28  RSL
L2C_DUT_MAP3430                0x0001180080E06B30  RSL
L2C_DUT_MAP3431                0x0001180080E06B38  RSL
L2C_DUT_MAP3432                0x0001180080E06B40  RSL
L2C_DUT_MAP3433                0x0001180080E06B48  RSL
L2C_DUT_MAP3434                0x0001180080E06B50  RSL
L2C_DUT_MAP3435                0x0001180080E06B58  RSL
L2C_DUT_MAP3436                0x0001180080E06B60  RSL
L2C_DUT_MAP3437                0x0001180080E06B68  RSL
L2C_DUT_MAP3438                0x0001180080E06B70  RSL
L2C_DUT_MAP3439                0x0001180080E06B78  RSL
L2C_DUT_MAP3440                0x0001180080E06B80  RSL
L2C_DUT_MAP3441                0x0001180080E06B88  RSL
L2C_DUT_MAP3442                0x0001180080E06B90  RSL
L2C_DUT_MAP3443                0x0001180080E06B98  RSL
L2C_DUT_MAP3444                0x0001180080E06BA0  RSL
L2C_DUT_MAP3445                0x0001180080E06BA8  RSL
L2C_DUT_MAP3446                0x0001180080E06BB0  RSL
L2C_DUT_MAP3447                0x0001180080E06BB8  RSL
L2C_DUT_MAP3448                0x0001180080E06BC0  RSL
L2C_DUT_MAP3449                0x0001180080E06BC8  RSL
L2C_DUT_MAP3450                0x0001180080E06BD0  RSL
L2C_DUT_MAP3451                0x0001180080E06BD8  RSL
L2C_DUT_MAP3452                0x0001180080E06BE0  RSL
L2C_DUT_MAP3453                0x0001180080E06BE8  RSL
L2C_DUT_MAP3454                0x0001180080E06BF0  RSL
L2C_DUT_MAP3455                0x0001180080E06BF8  RSL
L2C_DUT_MAP3456                0x0001180080E06C00  RSL
L2C_DUT_MAP3457                0x0001180080E06C08  RSL
L2C_DUT_MAP3458                0x0001180080E06C10  RSL
L2C_DUT_MAP3459                0x0001180080E06C18  RSL
L2C_DUT_MAP3460                0x0001180080E06C20  RSL
L2C_DUT_MAP3461                0x0001180080E06C28  RSL
L2C_DUT_MAP3462                0x0001180080E06C30  RSL
L2C_DUT_MAP3463                0x0001180080E06C38  RSL
L2C_DUT_MAP3464                0x0001180080E06C40  RSL
L2C_DUT_MAP3465                0x0001180080E06C48  RSL
L2C_DUT_MAP3466                0x0001180080E06C50  RSL
L2C_DUT_MAP3467                0x0001180080E06C58  RSL
L2C_DUT_MAP3468                0x0001180080E06C60  RSL
L2C_DUT_MAP3469                0x0001180080E06C68  RSL
L2C_DUT_MAP3470                0x0001180080E06C70  RSL
L2C_DUT_MAP3471                0x0001180080E06C78  RSL
L2C_DUT_MAP3472                0x0001180080E06C80  RSL
L2C_DUT_MAP3473                0x0001180080E06C88  RSL
L2C_DUT_MAP3474                0x0001180080E06C90  RSL
L2C_DUT_MAP3475                0x0001180080E06C98  RSL
L2C_DUT_MAP3476                0x0001180080E06CA0  RSL
L2C_DUT_MAP3477                0x0001180080E06CA8  RSL
L2C_DUT_MAP3478                0x0001180080E06CB0  RSL
L2C_DUT_MAP3479                0x0001180080E06CB8  RSL
L2C_DUT_MAP3480                0x0001180080E06CC0  RSL
L2C_DUT_MAP3481                0x0001180080E06CC8  RSL
L2C_DUT_MAP3482                0x0001180080E06CD0  RSL
L2C_DUT_MAP3483                0x0001180080E06CD8  RSL
L2C_DUT_MAP3484                0x0001180080E06CE0  RSL
L2C_DUT_MAP3485                0x0001180080E06CE8  RSL
L2C_DUT_MAP3486                0x0001180080E06CF0  RSL
L2C_DUT_MAP3487                0x0001180080E06CF8  RSL
L2C_DUT_MAP3488                0x0001180080E06D00  RSL
L2C_DUT_MAP3489                0x0001180080E06D08  RSL
L2C_DUT_MAP3490                0x0001180080E06D10  RSL
L2C_DUT_MAP3491                0x0001180080E06D18  RSL
L2C_DUT_MAP3492                0x0001180080E06D20  RSL
L2C_DUT_MAP3493                0x0001180080E06D28  RSL
L2C_DUT_MAP3494                0x0001180080E06D30  RSL
L2C_DUT_MAP3495                0x0001180080E06D38  RSL
L2C_DUT_MAP3496                0x0001180080E06D40  RSL
L2C_DUT_MAP3497                0x0001180080E06D48  RSL
L2C_DUT_MAP3498                0x0001180080E06D50  RSL
L2C_DUT_MAP3499                0x0001180080E06D58  RSL
L2C_DUT_MAP3500                0x0001180080E06D60  RSL
L2C_DUT_MAP3501                0x0001180080E06D68  RSL
L2C_DUT_MAP3502                0x0001180080E06D70  RSL
L2C_DUT_MAP3503                0x0001180080E06D78  RSL
L2C_DUT_MAP3504                0x0001180080E06D80  RSL
L2C_DUT_MAP3505                0x0001180080E06D88  RSL
L2C_DUT_MAP3506                0x0001180080E06D90  RSL
L2C_DUT_MAP3507                0x0001180080E06D98  RSL
L2C_DUT_MAP3508                0x0001180080E06DA0  RSL
L2C_DUT_MAP3509                0x0001180080E06DA8  RSL
L2C_DUT_MAP3510                0x0001180080E06DB0  RSL
L2C_DUT_MAP3511                0x0001180080E06DB8  RSL
L2C_DUT_MAP3512                0x0001180080E06DC0  RSL
L2C_DUT_MAP3513                0x0001180080E06DC8  RSL
L2C_DUT_MAP3514                0x0001180080E06DD0  RSL
L2C_DUT_MAP3515                0x0001180080E06DD8  RSL
L2C_DUT_MAP3516                0x0001180080E06DE0  RSL
L2C_DUT_MAP3517                0x0001180080E06DE8  RSL
L2C_DUT_MAP3518                0x0001180080E06DF0  RSL
L2C_DUT_MAP3519                0x0001180080E06DF8  RSL
L2C_DUT_MAP3520                0x0001180080E06E00  RSL
L2C_DUT_MAP3521                0x0001180080E06E08  RSL
L2C_DUT_MAP3522                0x0001180080E06E10  RSL
L2C_DUT_MAP3523                0x0001180080E06E18  RSL
L2C_DUT_MAP3524                0x0001180080E06E20  RSL
L2C_DUT_MAP3525                0x0001180080E06E28  RSL
L2C_DUT_MAP3526                0x0001180080E06E30  RSL
L2C_DUT_MAP3527                0x0001180080E06E38  RSL
L2C_DUT_MAP3528                0x0001180080E06E40  RSL
L2C_DUT_MAP3529                0x0001180080E06E48  RSL
L2C_DUT_MAP3530                0x0001180080E06E50  RSL
L2C_DUT_MAP3531                0x0001180080E06E58  RSL
L2C_DUT_MAP3532                0x0001180080E06E60  RSL
L2C_DUT_MAP3533                0x0001180080E06E68  RSL
L2C_DUT_MAP3534                0x0001180080E06E70  RSL
L2C_DUT_MAP3535                0x0001180080E06E78  RSL
L2C_DUT_MAP3536                0x0001180080E06E80  RSL
L2C_DUT_MAP3537                0x0001180080E06E88  RSL
L2C_DUT_MAP3538                0x0001180080E06E90  RSL
L2C_DUT_MAP3539                0x0001180080E06E98  RSL
L2C_DUT_MAP3540                0x0001180080E06EA0  RSL
L2C_DUT_MAP3541                0x0001180080E06EA8  RSL
L2C_DUT_MAP3542                0x0001180080E06EB0  RSL
L2C_DUT_MAP3543                0x0001180080E06EB8  RSL
L2C_DUT_MAP3544                0x0001180080E06EC0  RSL
L2C_DUT_MAP3545                0x0001180080E06EC8  RSL
L2C_DUT_MAP3546                0x0001180080E06ED0  RSL
L2C_DUT_MAP3547                0x0001180080E06ED8  RSL
L2C_DUT_MAP3548                0x0001180080E06EE0  RSL
L2C_DUT_MAP3549                0x0001180080E06EE8  RSL
L2C_DUT_MAP3550                0x0001180080E06EF0  RSL
L2C_DUT_MAP3551                0x0001180080E06EF8  RSL
L2C_DUT_MAP3552                0x0001180080E06F00  RSL
L2C_DUT_MAP3553                0x0001180080E06F08  RSL
L2C_DUT_MAP3554                0x0001180080E06F10  RSL
L2C_DUT_MAP3555                0x0001180080E06F18  RSL
L2C_DUT_MAP3556                0x0001180080E06F20  RSL
L2C_DUT_MAP3557                0x0001180080E06F28  RSL
L2C_DUT_MAP3558                0x0001180080E06F30  RSL
L2C_DUT_MAP3559                0x0001180080E06F38  RSL
L2C_DUT_MAP3560                0x0001180080E06F40  RSL
L2C_DUT_MAP3561                0x0001180080E06F48  RSL
L2C_DUT_MAP3562                0x0001180080E06F50  RSL
L2C_DUT_MAP3563                0x0001180080E06F58  RSL
L2C_DUT_MAP3564                0x0001180080E06F60  RSL
L2C_DUT_MAP3565                0x0001180080E06F68  RSL
L2C_DUT_MAP3566                0x0001180080E06F70  RSL
L2C_DUT_MAP3567                0x0001180080E06F78  RSL
L2C_DUT_MAP3568                0x0001180080E06F80  RSL
L2C_DUT_MAP3569                0x0001180080E06F88  RSL
L2C_DUT_MAP3570                0x0001180080E06F90  RSL
L2C_DUT_MAP3571                0x0001180080E06F98  RSL
L2C_DUT_MAP3572                0x0001180080E06FA0  RSL
L2C_DUT_MAP3573                0x0001180080E06FA8  RSL
L2C_DUT_MAP3574                0x0001180080E06FB0  RSL
L2C_DUT_MAP3575                0x0001180080E06FB8  RSL
L2C_DUT_MAP3576                0x0001180080E06FC0  RSL
L2C_DUT_MAP3577                0x0001180080E06FC8  RSL
L2C_DUT_MAP3578                0x0001180080E06FD0  RSL
L2C_DUT_MAP3579                0x0001180080E06FD8  RSL
L2C_DUT_MAP3580                0x0001180080E06FE0  RSL
L2C_DUT_MAP3581                0x0001180080E06FE8  RSL
L2C_DUT_MAP3582                0x0001180080E06FF0  RSL
L2C_DUT_MAP3583                0x0001180080E06FF8  RSL
L2C_DUT_MAP3584                0x0001180080E07000  RSL
L2C_DUT_MAP3585                0x0001180080E07008  RSL
L2C_DUT_MAP3586                0x0001180080E07010  RSL
L2C_DUT_MAP3587                0x0001180080E07018  RSL
L2C_DUT_MAP3588                0x0001180080E07020  RSL
L2C_DUT_MAP3589                0x0001180080E07028  RSL
L2C_DUT_MAP3590                0x0001180080E07030  RSL
L2C_DUT_MAP3591                0x0001180080E07038  RSL
L2C_DUT_MAP3592                0x0001180080E07040  RSL
L2C_DUT_MAP3593                0x0001180080E07048  RSL
L2C_DUT_MAP3594                0x0001180080E07050  RSL
L2C_DUT_MAP3595                0x0001180080E07058  RSL
L2C_DUT_MAP3596                0x0001180080E07060  RSL
L2C_DUT_MAP3597                0x0001180080E07068  RSL
L2C_DUT_MAP3598                0x0001180080E07070  RSL
L2C_DUT_MAP3599                0x0001180080E07078  RSL
L2C_DUT_MAP3600                0x0001180080E07080  RSL
L2C_DUT_MAP3601                0x0001180080E07088  RSL
L2C_DUT_MAP3602                0x0001180080E07090  RSL
L2C_DUT_MAP3603                0x0001180080E07098  RSL
L2C_DUT_MAP3604                0x0001180080E070A0  RSL
L2C_DUT_MAP3605                0x0001180080E070A8  RSL
L2C_DUT_MAP3606                0x0001180080E070B0  RSL
L2C_DUT_MAP3607                0x0001180080E070B8  RSL
L2C_DUT_MAP3608                0x0001180080E070C0  RSL
L2C_DUT_MAP3609                0x0001180080E070C8  RSL
L2C_DUT_MAP3610                0x0001180080E070D0  RSL
L2C_DUT_MAP3611                0x0001180080E070D8  RSL
L2C_DUT_MAP3612                0x0001180080E070E0  RSL
L2C_DUT_MAP3613                0x0001180080E070E8  RSL
L2C_DUT_MAP3614                0x0001180080E070F0  RSL
L2C_DUT_MAP3615                0x0001180080E070F8  RSL
L2C_DUT_MAP3616                0x0001180080E07100  RSL
L2C_DUT_MAP3617                0x0001180080E07108  RSL
L2C_DUT_MAP3618                0x0001180080E07110  RSL
L2C_DUT_MAP3619                0x0001180080E07118  RSL
L2C_DUT_MAP3620                0x0001180080E07120  RSL
L2C_DUT_MAP3621                0x0001180080E07128  RSL
L2C_DUT_MAP3622                0x0001180080E07130  RSL
L2C_DUT_MAP3623                0x0001180080E07138  RSL
L2C_DUT_MAP3624                0x0001180080E07140  RSL
L2C_DUT_MAP3625                0x0001180080E07148  RSL
L2C_DUT_MAP3626                0x0001180080E07150  RSL
L2C_DUT_MAP3627                0x0001180080E07158  RSL
L2C_DUT_MAP3628                0x0001180080E07160  RSL
L2C_DUT_MAP3629                0x0001180080E07168  RSL
L2C_DUT_MAP3630                0x0001180080E07170  RSL
L2C_DUT_MAP3631                0x0001180080E07178  RSL
L2C_DUT_MAP3632                0x0001180080E07180  RSL
L2C_DUT_MAP3633                0x0001180080E07188  RSL
L2C_DUT_MAP3634                0x0001180080E07190  RSL
L2C_DUT_MAP3635                0x0001180080E07198  RSL
L2C_DUT_MAP3636                0x0001180080E071A0  RSL
L2C_DUT_MAP3637                0x0001180080E071A8  RSL
L2C_DUT_MAP3638                0x0001180080E071B0  RSL
L2C_DUT_MAP3639                0x0001180080E071B8  RSL
L2C_DUT_MAP3640                0x0001180080E071C0  RSL
L2C_DUT_MAP3641                0x0001180080E071C8  RSL
L2C_DUT_MAP3642                0x0001180080E071D0  RSL
L2C_DUT_MAP3643                0x0001180080E071D8  RSL
L2C_DUT_MAP3644                0x0001180080E071E0  RSL
L2C_DUT_MAP3645                0x0001180080E071E8  RSL
L2C_DUT_MAP3646                0x0001180080E071F0  RSL
L2C_DUT_MAP3647                0x0001180080E071F8  RSL
L2C_DUT_MAP3648                0x0001180080E07200  RSL
L2C_DUT_MAP3649                0x0001180080E07208  RSL
L2C_DUT_MAP3650                0x0001180080E07210  RSL
L2C_DUT_MAP3651                0x0001180080E07218  RSL
L2C_DUT_MAP3652                0x0001180080E07220  RSL
L2C_DUT_MAP3653                0x0001180080E07228  RSL
L2C_DUT_MAP3654                0x0001180080E07230  RSL
L2C_DUT_MAP3655                0x0001180080E07238  RSL
L2C_DUT_MAP3656                0x0001180080E07240  RSL
L2C_DUT_MAP3657                0x0001180080E07248  RSL
L2C_DUT_MAP3658                0x0001180080E07250  RSL
L2C_DUT_MAP3659                0x0001180080E07258  RSL
L2C_DUT_MAP3660                0x0001180080E07260  RSL
L2C_DUT_MAP3661                0x0001180080E07268  RSL
L2C_DUT_MAP3662                0x0001180080E07270  RSL
L2C_DUT_MAP3663                0x0001180080E07278  RSL
L2C_DUT_MAP3664                0x0001180080E07280  RSL
L2C_DUT_MAP3665                0x0001180080E07288  RSL
L2C_DUT_MAP3666                0x0001180080E07290  RSL
L2C_DUT_MAP3667                0x0001180080E07298  RSL
L2C_DUT_MAP3668                0x0001180080E072A0  RSL
L2C_DUT_MAP3669                0x0001180080E072A8  RSL
L2C_DUT_MAP3670                0x0001180080E072B0  RSL
L2C_DUT_MAP3671                0x0001180080E072B8  RSL
L2C_DUT_MAP3672                0x0001180080E072C0  RSL
L2C_DUT_MAP3673                0x0001180080E072C8  RSL
L2C_DUT_MAP3674                0x0001180080E072D0  RSL
L2C_DUT_MAP3675                0x0001180080E072D8  RSL
L2C_DUT_MAP3676                0x0001180080E072E0  RSL
L2C_DUT_MAP3677                0x0001180080E072E8  RSL
L2C_DUT_MAP3678                0x0001180080E072F0  RSL
L2C_DUT_MAP3679                0x0001180080E072F8  RSL
L2C_DUT_MAP3680                0x0001180080E07300  RSL
L2C_DUT_MAP3681                0x0001180080E07308  RSL
L2C_DUT_MAP3682                0x0001180080E07310  RSL
L2C_DUT_MAP3683                0x0001180080E07318  RSL
L2C_DUT_MAP3684                0x0001180080E07320  RSL
L2C_DUT_MAP3685                0x0001180080E07328  RSL
L2C_DUT_MAP3686                0x0001180080E07330  RSL
L2C_DUT_MAP3687                0x0001180080E07338  RSL
L2C_DUT_MAP3688                0x0001180080E07340  RSL
L2C_DUT_MAP3689                0x0001180080E07348  RSL
L2C_DUT_MAP3690                0x0001180080E07350  RSL
L2C_DUT_MAP3691                0x0001180080E07358  RSL
L2C_DUT_MAP3692                0x0001180080E07360  RSL
L2C_DUT_MAP3693                0x0001180080E07368  RSL
L2C_DUT_MAP3694                0x0001180080E07370  RSL
L2C_DUT_MAP3695                0x0001180080E07378  RSL
L2C_DUT_MAP3696                0x0001180080E07380  RSL
L2C_DUT_MAP3697                0x0001180080E07388  RSL
L2C_DUT_MAP3698                0x0001180080E07390  RSL
L2C_DUT_MAP3699                0x0001180080E07398  RSL
L2C_DUT_MAP3700                0x0001180080E073A0  RSL
L2C_DUT_MAP3701                0x0001180080E073A8  RSL
L2C_DUT_MAP3702                0x0001180080E073B0  RSL
L2C_DUT_MAP3703                0x0001180080E073B8  RSL
L2C_DUT_MAP3704                0x0001180080E073C0  RSL
L2C_DUT_MAP3705                0x0001180080E073C8  RSL
L2C_DUT_MAP3706                0x0001180080E073D0  RSL
L2C_DUT_MAP3707                0x0001180080E073D8  RSL
L2C_DUT_MAP3708                0x0001180080E073E0  RSL
L2C_DUT_MAP3709                0x0001180080E073E8  RSL
L2C_DUT_MAP3710                0x0001180080E073F0  RSL
L2C_DUT_MAP3711                0x0001180080E073F8  RSL
L2C_DUT_MAP3712                0x0001180080E07400  RSL
L2C_DUT_MAP3713                0x0001180080E07408  RSL
L2C_DUT_MAP3714                0x0001180080E07410  RSL
L2C_DUT_MAP3715                0x0001180080E07418  RSL
L2C_DUT_MAP3716                0x0001180080E07420  RSL
L2C_DUT_MAP3717                0x0001180080E07428  RSL
L2C_DUT_MAP3718                0x0001180080E07430  RSL
L2C_DUT_MAP3719                0x0001180080E07438  RSL
L2C_DUT_MAP3720                0x0001180080E07440  RSL
L2C_DUT_MAP3721                0x0001180080E07448  RSL
L2C_DUT_MAP3722                0x0001180080E07450  RSL
L2C_DUT_MAP3723                0x0001180080E07458  RSL
L2C_DUT_MAP3724                0x0001180080E07460  RSL
L2C_DUT_MAP3725                0x0001180080E07468  RSL
L2C_DUT_MAP3726                0x0001180080E07470  RSL
L2C_DUT_MAP3727                0x0001180080E07478  RSL
L2C_DUT_MAP3728                0x0001180080E07480  RSL
L2C_DUT_MAP3729                0x0001180080E07488  RSL
L2C_DUT_MAP3730                0x0001180080E07490  RSL
L2C_DUT_MAP3731                0x0001180080E07498  RSL
L2C_DUT_MAP3732                0x0001180080E074A0  RSL
L2C_DUT_MAP3733                0x0001180080E074A8  RSL
L2C_DUT_MAP3734                0x0001180080E074B0  RSL
L2C_DUT_MAP3735                0x0001180080E074B8  RSL
L2C_DUT_MAP3736                0x0001180080E074C0  RSL
L2C_DUT_MAP3737                0x0001180080E074C8  RSL
L2C_DUT_MAP3738                0x0001180080E074D0  RSL
L2C_DUT_MAP3739                0x0001180080E074D8  RSL
L2C_DUT_MAP3740                0x0001180080E074E0  RSL
L2C_DUT_MAP3741                0x0001180080E074E8  RSL
L2C_DUT_MAP3742                0x0001180080E074F0  RSL
L2C_DUT_MAP3743                0x0001180080E074F8  RSL
L2C_DUT_MAP3744                0x0001180080E07500  RSL
L2C_DUT_MAP3745                0x0001180080E07508  RSL
L2C_DUT_MAP3746                0x0001180080E07510  RSL
L2C_DUT_MAP3747                0x0001180080E07518  RSL
L2C_DUT_MAP3748                0x0001180080E07520  RSL
L2C_DUT_MAP3749                0x0001180080E07528  RSL
L2C_DUT_MAP3750                0x0001180080E07530  RSL
L2C_DUT_MAP3751                0x0001180080E07538  RSL
L2C_DUT_MAP3752                0x0001180080E07540  RSL
L2C_DUT_MAP3753                0x0001180080E07548  RSL
L2C_DUT_MAP3754                0x0001180080E07550  RSL
L2C_DUT_MAP3755                0x0001180080E07558  RSL
L2C_DUT_MAP3756                0x0001180080E07560  RSL
L2C_DUT_MAP3757                0x0001180080E07568  RSL
L2C_DUT_MAP3758                0x0001180080E07570  RSL
L2C_DUT_MAP3759                0x0001180080E07578  RSL
L2C_DUT_MAP3760                0x0001180080E07580  RSL
L2C_DUT_MAP3761                0x0001180080E07588  RSL
L2C_DUT_MAP3762                0x0001180080E07590  RSL
L2C_DUT_MAP3763                0x0001180080E07598  RSL
L2C_DUT_MAP3764                0x0001180080E075A0  RSL
L2C_DUT_MAP3765                0x0001180080E075A8  RSL
L2C_DUT_MAP3766                0x0001180080E075B0  RSL
L2C_DUT_MAP3767                0x0001180080E075B8  RSL
L2C_DUT_MAP3768                0x0001180080E075C0  RSL
L2C_DUT_MAP3769                0x0001180080E075C8  RSL
L2C_DUT_MAP3770                0x0001180080E075D0  RSL
L2C_DUT_MAP3771                0x0001180080E075D8  RSL
L2C_DUT_MAP3772                0x0001180080E075E0  RSL
L2C_DUT_MAP3773                0x0001180080E075E8  RSL
L2C_DUT_MAP3774                0x0001180080E075F0  RSL
L2C_DUT_MAP3775                0x0001180080E075F8  RSL
L2C_DUT_MAP3776                0x0001180080E07600  RSL
L2C_DUT_MAP3777                0x0001180080E07608  RSL
L2C_DUT_MAP3778                0x0001180080E07610  RSL
L2C_DUT_MAP3779                0x0001180080E07618  RSL
L2C_DUT_MAP3780                0x0001180080E07620  RSL
L2C_DUT_MAP3781                0x0001180080E07628  RSL
L2C_DUT_MAP3782                0x0001180080E07630  RSL
L2C_DUT_MAP3783                0x0001180080E07638  RSL
L2C_DUT_MAP3784                0x0001180080E07640  RSL
L2C_DUT_MAP3785                0x0001180080E07648  RSL
L2C_DUT_MAP3786                0x0001180080E07650  RSL
L2C_DUT_MAP3787                0x0001180080E07658  RSL
L2C_DUT_MAP3788                0x0001180080E07660  RSL
L2C_DUT_MAP3789                0x0001180080E07668  RSL
L2C_DUT_MAP3790                0x0001180080E07670  RSL
L2C_DUT_MAP3791                0x0001180080E07678  RSL
L2C_DUT_MAP3792                0x0001180080E07680  RSL
L2C_DUT_MAP3793                0x0001180080E07688  RSL
L2C_DUT_MAP3794                0x0001180080E07690  RSL
L2C_DUT_MAP3795                0x0001180080E07698  RSL
L2C_DUT_MAP3796                0x0001180080E076A0  RSL
L2C_DUT_MAP3797                0x0001180080E076A8  RSL
L2C_DUT_MAP3798                0x0001180080E076B0  RSL
L2C_DUT_MAP3799                0x0001180080E076B8  RSL
L2C_DUT_MAP3800                0x0001180080E076C0  RSL
L2C_DUT_MAP3801                0x0001180080E076C8  RSL
L2C_DUT_MAP3802                0x0001180080E076D0  RSL
L2C_DUT_MAP3803                0x0001180080E076D8  RSL
L2C_DUT_MAP3804                0x0001180080E076E0  RSL
L2C_DUT_MAP3805                0x0001180080E076E8  RSL
L2C_DUT_MAP3806                0x0001180080E076F0  RSL
L2C_DUT_MAP3807                0x0001180080E076F8  RSL
L2C_DUT_MAP3808                0x0001180080E07700  RSL
L2C_DUT_MAP3809                0x0001180080E07708  RSL
L2C_DUT_MAP3810                0x0001180080E07710  RSL
L2C_DUT_MAP3811                0x0001180080E07718  RSL
L2C_DUT_MAP3812                0x0001180080E07720  RSL
L2C_DUT_MAP3813                0x0001180080E07728  RSL
L2C_DUT_MAP3814                0x0001180080E07730  RSL
L2C_DUT_MAP3815                0x0001180080E07738  RSL
L2C_DUT_MAP3816                0x0001180080E07740  RSL
L2C_DUT_MAP3817                0x0001180080E07748  RSL
L2C_DUT_MAP3818                0x0001180080E07750  RSL
L2C_DUT_MAP3819                0x0001180080E07758  RSL
L2C_DUT_MAP3820                0x0001180080E07760  RSL
L2C_DUT_MAP3821                0x0001180080E07768  RSL
L2C_DUT_MAP3822                0x0001180080E07770  RSL
L2C_DUT_MAP3823                0x0001180080E07778  RSL
L2C_DUT_MAP3824                0x0001180080E07780  RSL
L2C_DUT_MAP3825                0x0001180080E07788  RSL
L2C_DUT_MAP3826                0x0001180080E07790  RSL
L2C_DUT_MAP3827                0x0001180080E07798  RSL
L2C_DUT_MAP3828                0x0001180080E077A0  RSL
L2C_DUT_MAP3829                0x0001180080E077A8  RSL
L2C_DUT_MAP3830                0x0001180080E077B0  RSL
L2C_DUT_MAP3831                0x0001180080E077B8  RSL
L2C_DUT_MAP3832                0x0001180080E077C0  RSL
L2C_DUT_MAP3833                0x0001180080E077C8  RSL
L2C_DUT_MAP3834                0x0001180080E077D0  RSL
L2C_DUT_MAP3835                0x0001180080E077D8  RSL
L2C_DUT_MAP3836                0x0001180080E077E0  RSL
L2C_DUT_MAP3837                0x0001180080E077E8  RSL
L2C_DUT_MAP3838                0x0001180080E077F0  RSL
L2C_DUT_MAP3839                0x0001180080E077F8  RSL
L2C_DUT_MAP3840                0x0001180080E07800  RSL
L2C_DUT_MAP3841                0x0001180080E07808  RSL
L2C_DUT_MAP3842                0x0001180080E07810  RSL
L2C_DUT_MAP3843                0x0001180080E07818  RSL
L2C_DUT_MAP3844                0x0001180080E07820  RSL
L2C_DUT_MAP3845                0x0001180080E07828  RSL
L2C_DUT_MAP3846                0x0001180080E07830  RSL
L2C_DUT_MAP3847                0x0001180080E07838  RSL
L2C_DUT_MAP3848                0x0001180080E07840  RSL
L2C_DUT_MAP3849                0x0001180080E07848  RSL
L2C_DUT_MAP3850                0x0001180080E07850  RSL
L2C_DUT_MAP3851                0x0001180080E07858  RSL
L2C_DUT_MAP3852                0x0001180080E07860  RSL
L2C_DUT_MAP3853                0x0001180080E07868  RSL
L2C_DUT_MAP3854                0x0001180080E07870  RSL
L2C_DUT_MAP3855                0x0001180080E07878  RSL
L2C_DUT_MAP3856                0x0001180080E07880  RSL
L2C_DUT_MAP3857                0x0001180080E07888  RSL
L2C_DUT_MAP3858                0x0001180080E07890  RSL
L2C_DUT_MAP3859                0x0001180080E07898  RSL
L2C_DUT_MAP3860                0x0001180080E078A0  RSL
L2C_DUT_MAP3861                0x0001180080E078A8  RSL
L2C_DUT_MAP3862                0x0001180080E078B0  RSL
L2C_DUT_MAP3863                0x0001180080E078B8  RSL
L2C_DUT_MAP3864                0x0001180080E078C0  RSL
L2C_DUT_MAP3865                0x0001180080E078C8  RSL
L2C_DUT_MAP3866                0x0001180080E078D0  RSL
L2C_DUT_MAP3867                0x0001180080E078D8  RSL
L2C_DUT_MAP3868                0x0001180080E078E0  RSL
L2C_DUT_MAP3869                0x0001180080E078E8  RSL
L2C_DUT_MAP3870                0x0001180080E078F0  RSL
L2C_DUT_MAP3871                0x0001180080E078F8  RSL
L2C_DUT_MAP3872                0x0001180080E07900  RSL
L2C_DUT_MAP3873                0x0001180080E07908  RSL
L2C_DUT_MAP3874                0x0001180080E07910  RSL
L2C_DUT_MAP3875                0x0001180080E07918  RSL
L2C_DUT_MAP3876                0x0001180080E07920  RSL
L2C_DUT_MAP3877                0x0001180080E07928  RSL
L2C_DUT_MAP3878                0x0001180080E07930  RSL
L2C_DUT_MAP3879                0x0001180080E07938  RSL
L2C_DUT_MAP3880                0x0001180080E07940  RSL
L2C_DUT_MAP3881                0x0001180080E07948  RSL
L2C_DUT_MAP3882                0x0001180080E07950  RSL
L2C_DUT_MAP3883                0x0001180080E07958  RSL
L2C_DUT_MAP3884                0x0001180080E07960  RSL
L2C_DUT_MAP3885                0x0001180080E07968  RSL
L2C_DUT_MAP3886                0x0001180080E07970  RSL
L2C_DUT_MAP3887                0x0001180080E07978  RSL
L2C_DUT_MAP3888                0x0001180080E07980  RSL
L2C_DUT_MAP3889                0x0001180080E07988  RSL
L2C_DUT_MAP3890                0x0001180080E07990  RSL
L2C_DUT_MAP3891                0x0001180080E07998  RSL
L2C_DUT_MAP3892                0x0001180080E079A0  RSL
L2C_DUT_MAP3893                0x0001180080E079A8  RSL
L2C_DUT_MAP3894                0x0001180080E079B0  RSL
L2C_DUT_MAP3895                0x0001180080E079B8  RSL
L2C_DUT_MAP3896                0x0001180080E079C0  RSL
L2C_DUT_MAP3897                0x0001180080E079C8  RSL
L2C_DUT_MAP3898                0x0001180080E079D0  RSL
L2C_DUT_MAP3899                0x0001180080E079D8  RSL
L2C_DUT_MAP3900                0x0001180080E079E0  RSL
L2C_DUT_MAP3901                0x0001180080E079E8  RSL
L2C_DUT_MAP3902                0x0001180080E079F0  RSL
L2C_DUT_MAP3903                0x0001180080E079F8  RSL
L2C_DUT_MAP3904                0x0001180080E07A00  RSL
L2C_DUT_MAP3905                0x0001180080E07A08  RSL
L2C_DUT_MAP3906                0x0001180080E07A10  RSL
L2C_DUT_MAP3907                0x0001180080E07A18  RSL
L2C_DUT_MAP3908                0x0001180080E07A20  RSL
L2C_DUT_MAP3909                0x0001180080E07A28  RSL
L2C_DUT_MAP3910                0x0001180080E07A30  RSL
L2C_DUT_MAP3911                0x0001180080E07A38  RSL
L2C_DUT_MAP3912                0x0001180080E07A40  RSL
L2C_DUT_MAP3913                0x0001180080E07A48  RSL
L2C_DUT_MAP3914                0x0001180080E07A50  RSL
L2C_DUT_MAP3915                0x0001180080E07A58  RSL
L2C_DUT_MAP3916                0x0001180080E07A60  RSL
L2C_DUT_MAP3917                0x0001180080E07A68  RSL
L2C_DUT_MAP3918                0x0001180080E07A70  RSL
L2C_DUT_MAP3919                0x0001180080E07A78  RSL
L2C_DUT_MAP3920                0x0001180080E07A80  RSL
L2C_DUT_MAP3921                0x0001180080E07A88  RSL
L2C_DUT_MAP3922                0x0001180080E07A90  RSL
L2C_DUT_MAP3923                0x0001180080E07A98  RSL
L2C_DUT_MAP3924                0x0001180080E07AA0  RSL
L2C_DUT_MAP3925                0x0001180080E07AA8  RSL
L2C_DUT_MAP3926                0x0001180080E07AB0  RSL
L2C_DUT_MAP3927                0x0001180080E07AB8  RSL
L2C_DUT_MAP3928                0x0001180080E07AC0  RSL
L2C_DUT_MAP3929                0x0001180080E07AC8  RSL
L2C_DUT_MAP3930                0x0001180080E07AD0  RSL
L2C_DUT_MAP3931                0x0001180080E07AD8  RSL
L2C_DUT_MAP3932                0x0001180080E07AE0  RSL
L2C_DUT_MAP3933                0x0001180080E07AE8  RSL
L2C_DUT_MAP3934                0x0001180080E07AF0  RSL
L2C_DUT_MAP3935                0x0001180080E07AF8  RSL
L2C_DUT_MAP3936                0x0001180080E07B00  RSL
L2C_DUT_MAP3937                0x0001180080E07B08  RSL
L2C_DUT_MAP3938                0x0001180080E07B10  RSL
L2C_DUT_MAP3939                0x0001180080E07B18  RSL
L2C_DUT_MAP3940                0x0001180080E07B20  RSL
L2C_DUT_MAP3941                0x0001180080E07B28  RSL
L2C_DUT_MAP3942                0x0001180080E07B30  RSL
L2C_DUT_MAP3943                0x0001180080E07B38  RSL
L2C_DUT_MAP3944                0x0001180080E07B40  RSL
L2C_DUT_MAP3945                0x0001180080E07B48  RSL
L2C_DUT_MAP3946                0x0001180080E07B50  RSL
L2C_DUT_MAP3947                0x0001180080E07B58  RSL
L2C_DUT_MAP3948                0x0001180080E07B60  RSL
L2C_DUT_MAP3949                0x0001180080E07B68  RSL
L2C_DUT_MAP3950                0x0001180080E07B70  RSL
L2C_DUT_MAP3951                0x0001180080E07B78  RSL
L2C_DUT_MAP3952                0x0001180080E07B80  RSL
L2C_DUT_MAP3953                0x0001180080E07B88  RSL
L2C_DUT_MAP3954                0x0001180080E07B90  RSL
L2C_DUT_MAP3955                0x0001180080E07B98  RSL
L2C_DUT_MAP3956                0x0001180080E07BA0  RSL
L2C_DUT_MAP3957                0x0001180080E07BA8  RSL
L2C_DUT_MAP3958                0x0001180080E07BB0  RSL
L2C_DUT_MAP3959                0x0001180080E07BB8  RSL
L2C_DUT_MAP3960                0x0001180080E07BC0  RSL
L2C_DUT_MAP3961                0x0001180080E07BC8  RSL
L2C_DUT_MAP3962                0x0001180080E07BD0  RSL
L2C_DUT_MAP3963                0x0001180080E07BD8  RSL
L2C_DUT_MAP3964                0x0001180080E07BE0  RSL
L2C_DUT_MAP3965                0x0001180080E07BE8  RSL
L2C_DUT_MAP3966                0x0001180080E07BF0  RSL
L2C_DUT_MAP3967                0x0001180080E07BF8  RSL
L2C_DUT_MAP3968                0x0001180080E07C00  RSL
L2C_DUT_MAP3969                0x0001180080E07C08  RSL
L2C_DUT_MAP3970                0x0001180080E07C10  RSL
L2C_DUT_MAP3971                0x0001180080E07C18  RSL
L2C_DUT_MAP3972                0x0001180080E07C20  RSL
L2C_DUT_MAP3973                0x0001180080E07C28  RSL
L2C_DUT_MAP3974                0x0001180080E07C30  RSL
L2C_DUT_MAP3975                0x0001180080E07C38  RSL
L2C_DUT_MAP3976                0x0001180080E07C40  RSL
L2C_DUT_MAP3977                0x0001180080E07C48  RSL
L2C_DUT_MAP3978                0x0001180080E07C50  RSL
L2C_DUT_MAP3979                0x0001180080E07C58  RSL
L2C_DUT_MAP3980                0x0001180080E07C60  RSL
L2C_DUT_MAP3981                0x0001180080E07C68  RSL
L2C_DUT_MAP3982                0x0001180080E07C70  RSL
L2C_DUT_MAP3983                0x0001180080E07C78  RSL
L2C_DUT_MAP3984                0x0001180080E07C80  RSL
L2C_DUT_MAP3985                0x0001180080E07C88  RSL
L2C_DUT_MAP3986                0x0001180080E07C90  RSL
L2C_DUT_MAP3987                0x0001180080E07C98  RSL
L2C_DUT_MAP3988                0x0001180080E07CA0  RSL
L2C_DUT_MAP3989                0x0001180080E07CA8  RSL
L2C_DUT_MAP3990                0x0001180080E07CB0  RSL
L2C_DUT_MAP3991                0x0001180080E07CB8  RSL
L2C_DUT_MAP3992                0x0001180080E07CC0  RSL
L2C_DUT_MAP3993                0x0001180080E07CC8  RSL
L2C_DUT_MAP3994                0x0001180080E07CD0  RSL
L2C_DUT_MAP3995                0x0001180080E07CD8  RSL
L2C_DUT_MAP3996                0x0001180080E07CE0  RSL
L2C_DUT_MAP3997                0x0001180080E07CE8  RSL
L2C_DUT_MAP3998                0x0001180080E07CF0  RSL
L2C_DUT_MAP3999                0x0001180080E07CF8  RSL
L2C_DUT_MAP4000                0x0001180080E07D00  RSL
L2C_DUT_MAP4001                0x0001180080E07D08  RSL
L2C_DUT_MAP4002                0x0001180080E07D10  RSL
L2C_DUT_MAP4003                0x0001180080E07D18  RSL
L2C_DUT_MAP4004                0x0001180080E07D20  RSL
L2C_DUT_MAP4005                0x0001180080E07D28  RSL
L2C_DUT_MAP4006                0x0001180080E07D30  RSL
L2C_DUT_MAP4007                0x0001180080E07D38  RSL
L2C_DUT_MAP4008                0x0001180080E07D40  RSL
L2C_DUT_MAP4009                0x0001180080E07D48  RSL
L2C_DUT_MAP4010                0x0001180080E07D50  RSL
L2C_DUT_MAP4011                0x0001180080E07D58  RSL
L2C_DUT_MAP4012                0x0001180080E07D60  RSL
L2C_DUT_MAP4013                0x0001180080E07D68  RSL
L2C_DUT_MAP4014                0x0001180080E07D70  RSL
L2C_DUT_MAP4015                0x0001180080E07D78  RSL
L2C_DUT_MAP4016                0x0001180080E07D80  RSL
L2C_DUT_MAP4017                0x0001180080E07D88  RSL
L2C_DUT_MAP4018                0x0001180080E07D90  RSL
L2C_DUT_MAP4019                0x0001180080E07D98  RSL
L2C_DUT_MAP4020                0x0001180080E07DA0  RSL
L2C_DUT_MAP4021                0x0001180080E07DA8  RSL
L2C_DUT_MAP4022                0x0001180080E07DB0  RSL
L2C_DUT_MAP4023                0x0001180080E07DB8  RSL
L2C_DUT_MAP4024                0x0001180080E07DC0  RSL
L2C_DUT_MAP4025                0x0001180080E07DC8  RSL
L2C_DUT_MAP4026                0x0001180080E07DD0  RSL
L2C_DUT_MAP4027                0x0001180080E07DD8  RSL
L2C_DUT_MAP4028                0x0001180080E07DE0  RSL
L2C_DUT_MAP4029                0x0001180080E07DE8  RSL
L2C_DUT_MAP4030                0x0001180080E07DF0  RSL
L2C_DUT_MAP4031                0x0001180080E07DF8  RSL
L2C_DUT_MAP4032                0x0001180080E07E00  RSL
L2C_DUT_MAP4033                0x0001180080E07E08  RSL
L2C_DUT_MAP4034                0x0001180080E07E10  RSL
L2C_DUT_MAP4035                0x0001180080E07E18  RSL
L2C_DUT_MAP4036                0x0001180080E07E20  RSL
L2C_DUT_MAP4037                0x0001180080E07E28  RSL
L2C_DUT_MAP4038                0x0001180080E07E30  RSL
L2C_DUT_MAP4039                0x0001180080E07E38  RSL
L2C_DUT_MAP4040                0x0001180080E07E40  RSL
L2C_DUT_MAP4041                0x0001180080E07E48  RSL
L2C_DUT_MAP4042                0x0001180080E07E50  RSL
L2C_DUT_MAP4043                0x0001180080E07E58  RSL
L2C_DUT_MAP4044                0x0001180080E07E60  RSL
L2C_DUT_MAP4045                0x0001180080E07E68  RSL
L2C_DUT_MAP4046                0x0001180080E07E70  RSL
L2C_DUT_MAP4047                0x0001180080E07E78  RSL
L2C_DUT_MAP4048                0x0001180080E07E80  RSL
L2C_DUT_MAP4049                0x0001180080E07E88  RSL
L2C_DUT_MAP4050                0x0001180080E07E90  RSL
L2C_DUT_MAP4051                0x0001180080E07E98  RSL
L2C_DUT_MAP4052                0x0001180080E07EA0  RSL
L2C_DUT_MAP4053                0x0001180080E07EA8  RSL
L2C_DUT_MAP4054                0x0001180080E07EB0  RSL
L2C_DUT_MAP4055                0x0001180080E07EB8  RSL
L2C_DUT_MAP4056                0x0001180080E07EC0  RSL
L2C_DUT_MAP4057                0x0001180080E07EC8  RSL
L2C_DUT_MAP4058                0x0001180080E07ED0  RSL
L2C_DUT_MAP4059                0x0001180080E07ED8  RSL
L2C_DUT_MAP4060                0x0001180080E07EE0  RSL
L2C_DUT_MAP4061                0x0001180080E07EE8  RSL
L2C_DUT_MAP4062                0x0001180080E07EF0  RSL
L2C_DUT_MAP4063                0x0001180080E07EF8  RSL
L2C_DUT_MAP4064                0x0001180080E07F00  RSL
L2C_DUT_MAP4065                0x0001180080E07F08  RSL
L2C_DUT_MAP4066                0x0001180080E07F10  RSL
L2C_DUT_MAP4067                0x0001180080E07F18  RSL
L2C_DUT_MAP4068                0x0001180080E07F20  RSL
L2C_DUT_MAP4069                0x0001180080E07F28  RSL
L2C_DUT_MAP4070                0x0001180080E07F30  RSL
L2C_DUT_MAP4071                0x0001180080E07F38  RSL
L2C_DUT_MAP4072                0x0001180080E07F40  RSL
L2C_DUT_MAP4073                0x0001180080E07F48  RSL
L2C_DUT_MAP4074                0x0001180080E07F50  RSL
L2C_DUT_MAP4075                0x0001180080E07F58  RSL
L2C_DUT_MAP4076                0x0001180080E07F60  RSL
L2C_DUT_MAP4077                0x0001180080E07F68  RSL
L2C_DUT_MAP4078                0x0001180080E07F70  RSL
L2C_DUT_MAP4079                0x0001180080E07F78  RSL
L2C_DUT_MAP4080                0x0001180080E07F80  RSL
L2C_DUT_MAP4081                0x0001180080E07F88  RSL
L2C_DUT_MAP4082                0x0001180080E07F90  RSL
L2C_DUT_MAP4083                0x0001180080E07F98  RSL
L2C_DUT_MAP4084                0x0001180080E07FA0  RSL
L2C_DUT_MAP4085                0x0001180080E07FA8  RSL
L2C_DUT_MAP4086                0x0001180080E07FB0  RSL
L2C_DUT_MAP4087                0x0001180080E07FB8  RSL
L2C_DUT_MAP4088                0x0001180080E07FC0  RSL
L2C_DUT_MAP4089                0x0001180080E07FC8  RSL
L2C_DUT_MAP4090                0x0001180080E07FD0  RSL
L2C_DUT_MAP4091                0x0001180080E07FD8  RSL
L2C_DUT_MAP4092                0x0001180080E07FE0  RSL
L2C_DUT_MAP4093                0x0001180080E07FE8  RSL
L2C_DUT_MAP4094                0x0001180080E07FF0  RSL
L2C_DUT_MAP4095                0x0001180080E07FF8  RSL
L2C_DUT_MAP4096                0x0001180080E08000  RSL
L2C_DUT_MAP4097                0x0001180080E08008  RSL
L2C_DUT_MAP4098                0x0001180080E08010  RSL
L2C_DUT_MAP4099                0x0001180080E08018  RSL
L2C_DUT_MAP4100                0x0001180080E08020  RSL
L2C_DUT_MAP4101                0x0001180080E08028  RSL
L2C_DUT_MAP4102                0x0001180080E08030  RSL
L2C_DUT_MAP4103                0x0001180080E08038  RSL
L2C_DUT_MAP4104                0x0001180080E08040  RSL
L2C_DUT_MAP4105                0x0001180080E08048  RSL
L2C_DUT_MAP4106                0x0001180080E08050  RSL
L2C_DUT_MAP4107                0x0001180080E08058  RSL
L2C_DUT_MAP4108                0x0001180080E08060  RSL
L2C_DUT_MAP4109                0x0001180080E08068  RSL
L2C_DUT_MAP4110                0x0001180080E08070  RSL
L2C_DUT_MAP4111                0x0001180080E08078  RSL
L2C_DUT_MAP4112                0x0001180080E08080  RSL
L2C_DUT_MAP4113                0x0001180080E08088  RSL
L2C_DUT_MAP4114                0x0001180080E08090  RSL
L2C_DUT_MAP4115                0x0001180080E08098  RSL
L2C_DUT_MAP4116                0x0001180080E080A0  RSL
L2C_DUT_MAP4117                0x0001180080E080A8  RSL
L2C_DUT_MAP4118                0x0001180080E080B0  RSL
L2C_DUT_MAP4119                0x0001180080E080B8  RSL
L2C_DUT_MAP4120                0x0001180080E080C0  RSL
L2C_DUT_MAP4121                0x0001180080E080C8  RSL
L2C_DUT_MAP4122                0x0001180080E080D0  RSL
L2C_DUT_MAP4123                0x0001180080E080D8  RSL
L2C_DUT_MAP4124                0x0001180080E080E0  RSL
L2C_DUT_MAP4125                0x0001180080E080E8  RSL
L2C_DUT_MAP4126                0x0001180080E080F0  RSL
L2C_DUT_MAP4127                0x0001180080E080F8  RSL
L2C_DUT_MAP4128                0x0001180080E08100  RSL
L2C_DUT_MAP4129                0x0001180080E08108  RSL
L2C_DUT_MAP4130                0x0001180080E08110  RSL
L2C_DUT_MAP4131                0x0001180080E08118  RSL
L2C_DUT_MAP4132                0x0001180080E08120  RSL
L2C_DUT_MAP4133                0x0001180080E08128  RSL
L2C_DUT_MAP4134                0x0001180080E08130  RSL
L2C_DUT_MAP4135                0x0001180080E08138  RSL
L2C_DUT_MAP4136                0x0001180080E08140  RSL
L2C_DUT_MAP4137                0x0001180080E08148  RSL
L2C_DUT_MAP4138                0x0001180080E08150  RSL
L2C_DUT_MAP4139                0x0001180080E08158  RSL
L2C_DUT_MAP4140                0x0001180080E08160  RSL
L2C_DUT_MAP4141                0x0001180080E08168  RSL
L2C_DUT_MAP4142                0x0001180080E08170  RSL
L2C_DUT_MAP4143                0x0001180080E08178  RSL
L2C_DUT_MAP4144                0x0001180080E08180  RSL
L2C_DUT_MAP4145                0x0001180080E08188  RSL
L2C_DUT_MAP4146                0x0001180080E08190  RSL
L2C_DUT_MAP4147                0x0001180080E08198  RSL
L2C_DUT_MAP4148                0x0001180080E081A0  RSL
L2C_DUT_MAP4149                0x0001180080E081A8  RSL
L2C_DUT_MAP4150                0x0001180080E081B0  RSL
L2C_DUT_MAP4151                0x0001180080E081B8  RSL
L2C_DUT_MAP4152                0x0001180080E081C0  RSL
L2C_DUT_MAP4153                0x0001180080E081C8  RSL
L2C_DUT_MAP4154                0x0001180080E081D0  RSL
L2C_DUT_MAP4155                0x0001180080E081D8  RSL
L2C_DUT_MAP4156                0x0001180080E081E0  RSL
L2C_DUT_MAP4157                0x0001180080E081E8  RSL
L2C_DUT_MAP4158                0x0001180080E081F0  RSL
L2C_DUT_MAP4159                0x0001180080E081F8  RSL
L2C_DUT_MAP4160                0x0001180080E08200  RSL
L2C_DUT_MAP4161                0x0001180080E08208  RSL
L2C_DUT_MAP4162                0x0001180080E08210  RSL
L2C_DUT_MAP4163                0x0001180080E08218  RSL
L2C_DUT_MAP4164                0x0001180080E08220  RSL
L2C_DUT_MAP4165                0x0001180080E08228  RSL
L2C_DUT_MAP4166                0x0001180080E08230  RSL
L2C_DUT_MAP4167                0x0001180080E08238  RSL
L2C_DUT_MAP4168                0x0001180080E08240  RSL
L2C_DUT_MAP4169                0x0001180080E08248  RSL
L2C_DUT_MAP4170                0x0001180080E08250  RSL
L2C_DUT_MAP4171                0x0001180080E08258  RSL
L2C_DUT_MAP4172                0x0001180080E08260  RSL
L2C_DUT_MAP4173                0x0001180080E08268  RSL
L2C_DUT_MAP4174                0x0001180080E08270  RSL
L2C_DUT_MAP4175                0x0001180080E08278  RSL
L2C_DUT_MAP4176                0x0001180080E08280  RSL
L2C_DUT_MAP4177                0x0001180080E08288  RSL
L2C_DUT_MAP4178                0x0001180080E08290  RSL
L2C_DUT_MAP4179                0x0001180080E08298  RSL
L2C_DUT_MAP4180                0x0001180080E082A0  RSL
L2C_DUT_MAP4181                0x0001180080E082A8  RSL
L2C_DUT_MAP4182                0x0001180080E082B0  RSL
L2C_DUT_MAP4183                0x0001180080E082B8  RSL
L2C_DUT_MAP4184                0x0001180080E082C0  RSL
L2C_DUT_MAP4185                0x0001180080E082C8  RSL
L2C_DUT_MAP4186                0x0001180080E082D0  RSL
L2C_DUT_MAP4187                0x0001180080E082D8  RSL
L2C_DUT_MAP4188                0x0001180080E082E0  RSL
L2C_DUT_MAP4189                0x0001180080E082E8  RSL
L2C_DUT_MAP4190                0x0001180080E082F0  RSL
L2C_DUT_MAP4191                0x0001180080E082F8  RSL
L2C_DUT_MAP4192                0x0001180080E08300  RSL
L2C_DUT_MAP4193                0x0001180080E08308  RSL
L2C_DUT_MAP4194                0x0001180080E08310  RSL
L2C_DUT_MAP4195                0x0001180080E08318  RSL
L2C_DUT_MAP4196                0x0001180080E08320  RSL
L2C_DUT_MAP4197                0x0001180080E08328  RSL
L2C_DUT_MAP4198                0x0001180080E08330  RSL
L2C_DUT_MAP4199                0x0001180080E08338  RSL
L2C_DUT_MAP4200                0x0001180080E08340  RSL
L2C_DUT_MAP4201                0x0001180080E08348  RSL
L2C_DUT_MAP4202                0x0001180080E08350  RSL
L2C_DUT_MAP4203                0x0001180080E08358  RSL
L2C_DUT_MAP4204                0x0001180080E08360  RSL
L2C_DUT_MAP4205                0x0001180080E08368  RSL
L2C_DUT_MAP4206                0x0001180080E08370  RSL
L2C_DUT_MAP4207                0x0001180080E08378  RSL
L2C_DUT_MAP4208                0x0001180080E08380  RSL
L2C_DUT_MAP4209                0x0001180080E08388  RSL
L2C_DUT_MAP4210                0x0001180080E08390  RSL
L2C_DUT_MAP4211                0x0001180080E08398  RSL
L2C_DUT_MAP4212                0x0001180080E083A0  RSL
L2C_DUT_MAP4213                0x0001180080E083A8  RSL
L2C_DUT_MAP4214                0x0001180080E083B0  RSL
L2C_DUT_MAP4215                0x0001180080E083B8  RSL
L2C_DUT_MAP4216                0x0001180080E083C0  RSL
L2C_DUT_MAP4217                0x0001180080E083C8  RSL
L2C_DUT_MAP4218                0x0001180080E083D0  RSL
L2C_DUT_MAP4219                0x0001180080E083D8  RSL
L2C_DUT_MAP4220                0x0001180080E083E0  RSL
L2C_DUT_MAP4221                0x0001180080E083E8  RSL
L2C_DUT_MAP4222                0x0001180080E083F0  RSL
L2C_DUT_MAP4223                0x0001180080E083F8  RSL
L2C_DUT_MAP4224                0x0001180080E08400  RSL
L2C_DUT_MAP4225                0x0001180080E08408  RSL
L2C_DUT_MAP4226                0x0001180080E08410  RSL
L2C_DUT_MAP4227                0x0001180080E08418  RSL
L2C_DUT_MAP4228                0x0001180080E08420  RSL
L2C_DUT_MAP4229                0x0001180080E08428  RSL
L2C_DUT_MAP4230                0x0001180080E08430  RSL
L2C_DUT_MAP4231                0x0001180080E08438  RSL
L2C_DUT_MAP4232                0x0001180080E08440  RSL
L2C_DUT_MAP4233                0x0001180080E08448  RSL
L2C_DUT_MAP4234                0x0001180080E08450  RSL
L2C_DUT_MAP4235                0x0001180080E08458  RSL
L2C_DUT_MAP4236                0x0001180080E08460  RSL
L2C_DUT_MAP4237                0x0001180080E08468  RSL
L2C_DUT_MAP4238                0x0001180080E08470  RSL
L2C_DUT_MAP4239                0x0001180080E08478  RSL
L2C_DUT_MAP4240                0x0001180080E08480  RSL
L2C_DUT_MAP4241                0x0001180080E08488  RSL
L2C_DUT_MAP4242                0x0001180080E08490  RSL
L2C_DUT_MAP4243                0x0001180080E08498  RSL
L2C_DUT_MAP4244                0x0001180080E084A0  RSL
L2C_DUT_MAP4245                0x0001180080E084A8  RSL
L2C_DUT_MAP4246                0x0001180080E084B0  RSL
L2C_DUT_MAP4247                0x0001180080E084B8  RSL
L2C_DUT_MAP4248                0x0001180080E084C0  RSL
L2C_DUT_MAP4249                0x0001180080E084C8  RSL
L2C_DUT_MAP4250                0x0001180080E084D0  RSL
L2C_DUT_MAP4251                0x0001180080E084D8  RSL
L2C_DUT_MAP4252                0x0001180080E084E0  RSL
L2C_DUT_MAP4253                0x0001180080E084E8  RSL
L2C_DUT_MAP4254                0x0001180080E084F0  RSL
L2C_DUT_MAP4255                0x0001180080E084F8  RSL
L2C_DUT_MAP4256                0x0001180080E08500  RSL
L2C_DUT_MAP4257                0x0001180080E08508  RSL
L2C_DUT_MAP4258                0x0001180080E08510  RSL
L2C_DUT_MAP4259                0x0001180080E08518  RSL
L2C_DUT_MAP4260                0x0001180080E08520  RSL
L2C_DUT_MAP4261                0x0001180080E08528  RSL
L2C_DUT_MAP4262                0x0001180080E08530  RSL
L2C_DUT_MAP4263                0x0001180080E08538  RSL
L2C_DUT_MAP4264                0x0001180080E08540  RSL
L2C_DUT_MAP4265                0x0001180080E08548  RSL
L2C_DUT_MAP4266                0x0001180080E08550  RSL
L2C_DUT_MAP4267                0x0001180080E08558  RSL
L2C_DUT_MAP4268                0x0001180080E08560  RSL
L2C_DUT_MAP4269                0x0001180080E08568  RSL
L2C_DUT_MAP4270                0x0001180080E08570  RSL
L2C_DUT_MAP4271                0x0001180080E08578  RSL
L2C_DUT_MAP4272                0x0001180080E08580  RSL
L2C_DUT_MAP4273                0x0001180080E08588  RSL
L2C_DUT_MAP4274                0x0001180080E08590  RSL
L2C_DUT_MAP4275                0x0001180080E08598  RSL
L2C_DUT_MAP4276                0x0001180080E085A0  RSL
L2C_DUT_MAP4277                0x0001180080E085A8  RSL
L2C_DUT_MAP4278                0x0001180080E085B0  RSL
L2C_DUT_MAP4279                0x0001180080E085B8  RSL
L2C_DUT_MAP4280                0x0001180080E085C0  RSL
L2C_DUT_MAP4281                0x0001180080E085C8  RSL
L2C_DUT_MAP4282                0x0001180080E085D0  RSL
L2C_DUT_MAP4283                0x0001180080E085D8  RSL
L2C_DUT_MAP4284                0x0001180080E085E0  RSL
L2C_DUT_MAP4285                0x0001180080E085E8  RSL
L2C_DUT_MAP4286                0x0001180080E085F0  RSL
L2C_DUT_MAP4287                0x0001180080E085F8  RSL
L2C_DUT_MAP4288                0x0001180080E08600  RSL
L2C_DUT_MAP4289                0x0001180080E08608  RSL
L2C_DUT_MAP4290                0x0001180080E08610  RSL
L2C_DUT_MAP4291                0x0001180080E08618  RSL
L2C_DUT_MAP4292                0x0001180080E08620  RSL
L2C_DUT_MAP4293                0x0001180080E08628  RSL
L2C_DUT_MAP4294                0x0001180080E08630  RSL
L2C_DUT_MAP4295                0x0001180080E08638  RSL
L2C_DUT_MAP4296                0x0001180080E08640  RSL
L2C_DUT_MAP4297                0x0001180080E08648  RSL
L2C_DUT_MAP4298                0x0001180080E08650  RSL
L2C_DUT_MAP4299                0x0001180080E08658  RSL
L2C_DUT_MAP4300                0x0001180080E08660  RSL
L2C_DUT_MAP4301                0x0001180080E08668  RSL
L2C_DUT_MAP4302                0x0001180080E08670  RSL
L2C_DUT_MAP4303                0x0001180080E08678  RSL
L2C_DUT_MAP4304                0x0001180080E08680  RSL
L2C_DUT_MAP4305                0x0001180080E08688  RSL
L2C_DUT_MAP4306                0x0001180080E08690  RSL
L2C_DUT_MAP4307                0x0001180080E08698  RSL
L2C_DUT_MAP4308                0x0001180080E086A0  RSL
L2C_DUT_MAP4309                0x0001180080E086A8  RSL
L2C_DUT_MAP4310                0x0001180080E086B0  RSL
L2C_DUT_MAP4311                0x0001180080E086B8  RSL
L2C_DUT_MAP4312                0x0001180080E086C0  RSL
L2C_DUT_MAP4313                0x0001180080E086C8  RSL
L2C_DUT_MAP4314                0x0001180080E086D0  RSL
L2C_DUT_MAP4315                0x0001180080E086D8  RSL
L2C_DUT_MAP4316                0x0001180080E086E0  RSL
L2C_DUT_MAP4317                0x0001180080E086E8  RSL
L2C_DUT_MAP4318                0x0001180080E086F0  RSL
L2C_DUT_MAP4319                0x0001180080E086F8  RSL
L2C_DUT_MAP4320                0x0001180080E08700  RSL
L2C_DUT_MAP4321                0x0001180080E08708  RSL
L2C_DUT_MAP4322                0x0001180080E08710  RSL
L2C_DUT_MAP4323                0x0001180080E08718  RSL
L2C_DUT_MAP4324                0x0001180080E08720  RSL
L2C_DUT_MAP4325                0x0001180080E08728  RSL
L2C_DUT_MAP4326                0x0001180080E08730  RSL
L2C_DUT_MAP4327                0x0001180080E08738  RSL
L2C_DUT_MAP4328                0x0001180080E08740  RSL
L2C_DUT_MAP4329                0x0001180080E08748  RSL
L2C_DUT_MAP4330                0x0001180080E08750  RSL
L2C_DUT_MAP4331                0x0001180080E08758  RSL
L2C_DUT_MAP4332                0x0001180080E08760  RSL
L2C_DUT_MAP4333                0x0001180080E08768  RSL
L2C_DUT_MAP4334                0x0001180080E08770  RSL
L2C_DUT_MAP4335                0x0001180080E08778  RSL
L2C_DUT_MAP4336                0x0001180080E08780  RSL
L2C_DUT_MAP4337                0x0001180080E08788  RSL
L2C_DUT_MAP4338                0x0001180080E08790  RSL
L2C_DUT_MAP4339                0x0001180080E08798  RSL
L2C_DUT_MAP4340                0x0001180080E087A0  RSL
L2C_DUT_MAP4341                0x0001180080E087A8  RSL
L2C_DUT_MAP4342                0x0001180080E087B0  RSL
L2C_DUT_MAP4343                0x0001180080E087B8  RSL
L2C_DUT_MAP4344                0x0001180080E087C0  RSL
L2C_DUT_MAP4345                0x0001180080E087C8  RSL
L2C_DUT_MAP4346                0x0001180080E087D0  RSL
L2C_DUT_MAP4347                0x0001180080E087D8  RSL
L2C_DUT_MAP4348                0x0001180080E087E0  RSL
L2C_DUT_MAP4349                0x0001180080E087E8  RSL
L2C_DUT_MAP4350                0x0001180080E087F0  RSL
L2C_DUT_MAP4351                0x0001180080E087F8  RSL
L2C_DUT_MAP4352                0x0001180080E08800  RSL
L2C_DUT_MAP4353                0x0001180080E08808  RSL
L2C_DUT_MAP4354                0x0001180080E08810  RSL
L2C_DUT_MAP4355                0x0001180080E08818  RSL
L2C_DUT_MAP4356                0x0001180080E08820  RSL
L2C_DUT_MAP4357                0x0001180080E08828  RSL
L2C_DUT_MAP4358                0x0001180080E08830  RSL
L2C_DUT_MAP4359                0x0001180080E08838  RSL
L2C_DUT_MAP4360                0x0001180080E08840  RSL
L2C_DUT_MAP4361                0x0001180080E08848  RSL
L2C_DUT_MAP4362                0x0001180080E08850  RSL
L2C_DUT_MAP4363                0x0001180080E08858  RSL
L2C_DUT_MAP4364                0x0001180080E08860  RSL
L2C_DUT_MAP4365                0x0001180080E08868  RSL
L2C_DUT_MAP4366                0x0001180080E08870  RSL
L2C_DUT_MAP4367                0x0001180080E08878  RSL
L2C_DUT_MAP4368                0x0001180080E08880  RSL
L2C_DUT_MAP4369                0x0001180080E08888  RSL
L2C_DUT_MAP4370                0x0001180080E08890  RSL
L2C_DUT_MAP4371                0x0001180080E08898  RSL
L2C_DUT_MAP4372                0x0001180080E088A0  RSL
L2C_DUT_MAP4373                0x0001180080E088A8  RSL
L2C_DUT_MAP4374                0x0001180080E088B0  RSL
L2C_DUT_MAP4375                0x0001180080E088B8  RSL
L2C_DUT_MAP4376                0x0001180080E088C0  RSL
L2C_DUT_MAP4377                0x0001180080E088C8  RSL
L2C_DUT_MAP4378                0x0001180080E088D0  RSL
L2C_DUT_MAP4379                0x0001180080E088D8  RSL
L2C_DUT_MAP4380                0x0001180080E088E0  RSL
L2C_DUT_MAP4381                0x0001180080E088E8  RSL
L2C_DUT_MAP4382                0x0001180080E088F0  RSL
L2C_DUT_MAP4383                0x0001180080E088F8  RSL
L2C_DUT_MAP4384                0x0001180080E08900  RSL
L2C_DUT_MAP4385                0x0001180080E08908  RSL
L2C_DUT_MAP4386                0x0001180080E08910  RSL
L2C_DUT_MAP4387                0x0001180080E08918  RSL
L2C_DUT_MAP4388                0x0001180080E08920  RSL
L2C_DUT_MAP4389                0x0001180080E08928  RSL
L2C_DUT_MAP4390                0x0001180080E08930  RSL
L2C_DUT_MAP4391                0x0001180080E08938  RSL
L2C_DUT_MAP4392                0x0001180080E08940  RSL
L2C_DUT_MAP4393                0x0001180080E08948  RSL
L2C_DUT_MAP4394                0x0001180080E08950  RSL
L2C_DUT_MAP4395                0x0001180080E08958  RSL
L2C_DUT_MAP4396                0x0001180080E08960  RSL
L2C_DUT_MAP4397                0x0001180080E08968  RSL
L2C_DUT_MAP4398                0x0001180080E08970  RSL
L2C_DUT_MAP4399                0x0001180080E08978  RSL
L2C_DUT_MAP4400                0x0001180080E08980  RSL
L2C_DUT_MAP4401                0x0001180080E08988  RSL
L2C_DUT_MAP4402                0x0001180080E08990  RSL
L2C_DUT_MAP4403                0x0001180080E08998  RSL
L2C_DUT_MAP4404                0x0001180080E089A0  RSL
L2C_DUT_MAP4405                0x0001180080E089A8  RSL
L2C_DUT_MAP4406                0x0001180080E089B0  RSL
L2C_DUT_MAP4407                0x0001180080E089B8  RSL
L2C_DUT_MAP4408                0x0001180080E089C0  RSL
L2C_DUT_MAP4409                0x0001180080E089C8  RSL
L2C_DUT_MAP4410                0x0001180080E089D0  RSL
L2C_DUT_MAP4411                0x0001180080E089D8  RSL
L2C_DUT_MAP4412                0x0001180080E089E0  RSL
L2C_DUT_MAP4413                0x0001180080E089E8  RSL
L2C_DUT_MAP4414                0x0001180080E089F0  RSL
L2C_DUT_MAP4415                0x0001180080E089F8  RSL
L2C_DUT_MAP4416                0x0001180080E08A00  RSL
L2C_DUT_MAP4417                0x0001180080E08A08  RSL
L2C_DUT_MAP4418                0x0001180080E08A10  RSL
L2C_DUT_MAP4419                0x0001180080E08A18  RSL
L2C_DUT_MAP4420                0x0001180080E08A20  RSL
L2C_DUT_MAP4421                0x0001180080E08A28  RSL
L2C_DUT_MAP4422                0x0001180080E08A30  RSL
L2C_DUT_MAP4423                0x0001180080E08A38  RSL
L2C_DUT_MAP4424                0x0001180080E08A40  RSL
L2C_DUT_MAP4425                0x0001180080E08A48  RSL
L2C_DUT_MAP4426                0x0001180080E08A50  RSL
L2C_DUT_MAP4427                0x0001180080E08A58  RSL
L2C_DUT_MAP4428                0x0001180080E08A60  RSL
L2C_DUT_MAP4429                0x0001180080E08A68  RSL
L2C_DUT_MAP4430                0x0001180080E08A70  RSL
L2C_DUT_MAP4431                0x0001180080E08A78  RSL
L2C_DUT_MAP4432                0x0001180080E08A80  RSL
L2C_DUT_MAP4433                0x0001180080E08A88  RSL
L2C_DUT_MAP4434                0x0001180080E08A90  RSL
L2C_DUT_MAP4435                0x0001180080E08A98  RSL
L2C_DUT_MAP4436                0x0001180080E08AA0  RSL
L2C_DUT_MAP4437                0x0001180080E08AA8  RSL
L2C_DUT_MAP4438                0x0001180080E08AB0  RSL
L2C_DUT_MAP4439                0x0001180080E08AB8  RSL
L2C_DUT_MAP4440                0x0001180080E08AC0  RSL
L2C_DUT_MAP4441                0x0001180080E08AC8  RSL
L2C_DUT_MAP4442                0x0001180080E08AD0  RSL
L2C_DUT_MAP4443                0x0001180080E08AD8  RSL
L2C_DUT_MAP4444                0x0001180080E08AE0  RSL
L2C_DUT_MAP4445                0x0001180080E08AE8  RSL
L2C_DUT_MAP4446                0x0001180080E08AF0  RSL
L2C_DUT_MAP4447                0x0001180080E08AF8  RSL
L2C_DUT_MAP4448                0x0001180080E08B00  RSL
L2C_DUT_MAP4449                0x0001180080E08B08  RSL
L2C_DUT_MAP4450                0x0001180080E08B10  RSL
L2C_DUT_MAP4451                0x0001180080E08B18  RSL
L2C_DUT_MAP4452                0x0001180080E08B20  RSL
L2C_DUT_MAP4453                0x0001180080E08B28  RSL
L2C_DUT_MAP4454                0x0001180080E08B30  RSL
L2C_DUT_MAP4455                0x0001180080E08B38  RSL
L2C_DUT_MAP4456                0x0001180080E08B40  RSL
L2C_DUT_MAP4457                0x0001180080E08B48  RSL
L2C_DUT_MAP4458                0x0001180080E08B50  RSL
L2C_DUT_MAP4459                0x0001180080E08B58  RSL
L2C_DUT_MAP4460                0x0001180080E08B60  RSL
L2C_DUT_MAP4461                0x0001180080E08B68  RSL
L2C_DUT_MAP4462                0x0001180080E08B70  RSL
L2C_DUT_MAP4463                0x0001180080E08B78  RSL
L2C_DUT_MAP4464                0x0001180080E08B80  RSL
L2C_DUT_MAP4465                0x0001180080E08B88  RSL
L2C_DUT_MAP4466                0x0001180080E08B90  RSL
L2C_DUT_MAP4467                0x0001180080E08B98  RSL
L2C_DUT_MAP4468                0x0001180080E08BA0  RSL
L2C_DUT_MAP4469                0x0001180080E08BA8  RSL
L2C_DUT_MAP4470                0x0001180080E08BB0  RSL
L2C_DUT_MAP4471                0x0001180080E08BB8  RSL
L2C_DUT_MAP4472                0x0001180080E08BC0  RSL
L2C_DUT_MAP4473                0x0001180080E08BC8  RSL
L2C_DUT_MAP4474                0x0001180080E08BD0  RSL
L2C_DUT_MAP4475                0x0001180080E08BD8  RSL
L2C_DUT_MAP4476                0x0001180080E08BE0  RSL
L2C_DUT_MAP4477                0x0001180080E08BE8  RSL
L2C_DUT_MAP4478                0x0001180080E08BF0  RSL
L2C_DUT_MAP4479                0x0001180080E08BF8  RSL
L2C_DUT_MAP4480                0x0001180080E08C00  RSL
L2C_DUT_MAP4481                0x0001180080E08C08  RSL
L2C_DUT_MAP4482                0x0001180080E08C10  RSL
L2C_DUT_MAP4483                0x0001180080E08C18  RSL
L2C_DUT_MAP4484                0x0001180080E08C20  RSL
L2C_DUT_MAP4485                0x0001180080E08C28  RSL
L2C_DUT_MAP4486                0x0001180080E08C30  RSL
L2C_DUT_MAP4487                0x0001180080E08C38  RSL
L2C_DUT_MAP4488                0x0001180080E08C40  RSL
L2C_DUT_MAP4489                0x0001180080E08C48  RSL
L2C_DUT_MAP4490                0x0001180080E08C50  RSL
L2C_DUT_MAP4491                0x0001180080E08C58  RSL
L2C_DUT_MAP4492                0x0001180080E08C60  RSL
L2C_DUT_MAP4493                0x0001180080E08C68  RSL
L2C_DUT_MAP4494                0x0001180080E08C70  RSL
L2C_DUT_MAP4495                0x0001180080E08C78  RSL
L2C_DUT_MAP4496                0x0001180080E08C80  RSL
L2C_DUT_MAP4497                0x0001180080E08C88  RSL
L2C_DUT_MAP4498                0x0001180080E08C90  RSL
L2C_DUT_MAP4499                0x0001180080E08C98  RSL
L2C_DUT_MAP4500                0x0001180080E08CA0  RSL
L2C_DUT_MAP4501                0x0001180080E08CA8  RSL
L2C_DUT_MAP4502                0x0001180080E08CB0  RSL
L2C_DUT_MAP4503                0x0001180080E08CB8  RSL
L2C_DUT_MAP4504                0x0001180080E08CC0  RSL
L2C_DUT_MAP4505                0x0001180080E08CC8  RSL
L2C_DUT_MAP4506                0x0001180080E08CD0  RSL
L2C_DUT_MAP4507                0x0001180080E08CD8  RSL
L2C_DUT_MAP4508                0x0001180080E08CE0  RSL
L2C_DUT_MAP4509                0x0001180080E08CE8  RSL
L2C_DUT_MAP4510                0x0001180080E08CF0  RSL
L2C_DUT_MAP4511                0x0001180080E08CF8  RSL
L2C_DUT_MAP4512                0x0001180080E08D00  RSL
L2C_DUT_MAP4513                0x0001180080E08D08  RSL
L2C_DUT_MAP4514                0x0001180080E08D10  RSL
L2C_DUT_MAP4515                0x0001180080E08D18  RSL
L2C_DUT_MAP4516                0x0001180080E08D20  RSL
L2C_DUT_MAP4517                0x0001180080E08D28  RSL
L2C_DUT_MAP4518                0x0001180080E08D30  RSL
L2C_DUT_MAP4519                0x0001180080E08D38  RSL
L2C_DUT_MAP4520                0x0001180080E08D40  RSL
L2C_DUT_MAP4521                0x0001180080E08D48  RSL
L2C_DUT_MAP4522                0x0001180080E08D50  RSL
L2C_DUT_MAP4523                0x0001180080E08D58  RSL
L2C_DUT_MAP4524                0x0001180080E08D60  RSL
L2C_DUT_MAP4525                0x0001180080E08D68  RSL
L2C_DUT_MAP4526                0x0001180080E08D70  RSL
L2C_DUT_MAP4527                0x0001180080E08D78  RSL
L2C_DUT_MAP4528                0x0001180080E08D80  RSL
L2C_DUT_MAP4529                0x0001180080E08D88  RSL
L2C_DUT_MAP4530                0x0001180080E08D90  RSL
L2C_DUT_MAP4531                0x0001180080E08D98  RSL
L2C_DUT_MAP4532                0x0001180080E08DA0  RSL
L2C_DUT_MAP4533                0x0001180080E08DA8  RSL
L2C_DUT_MAP4534                0x0001180080E08DB0  RSL
L2C_DUT_MAP4535                0x0001180080E08DB8  RSL
L2C_DUT_MAP4536                0x0001180080E08DC0  RSL
L2C_DUT_MAP4537                0x0001180080E08DC8  RSL
L2C_DUT_MAP4538                0x0001180080E08DD0  RSL
L2C_DUT_MAP4539                0x0001180080E08DD8  RSL
L2C_DUT_MAP4540                0x0001180080E08DE0  RSL
L2C_DUT_MAP4541                0x0001180080E08DE8  RSL
L2C_DUT_MAP4542                0x0001180080E08DF0  RSL
L2C_DUT_MAP4543                0x0001180080E08DF8  RSL
L2C_DUT_MAP4544                0x0001180080E08E00  RSL
L2C_DUT_MAP4545                0x0001180080E08E08  RSL
L2C_DUT_MAP4546                0x0001180080E08E10  RSL
L2C_DUT_MAP4547                0x0001180080E08E18  RSL
L2C_DUT_MAP4548                0x0001180080E08E20  RSL
L2C_DUT_MAP4549                0x0001180080E08E28  RSL
L2C_DUT_MAP4550                0x0001180080E08E30  RSL
L2C_DUT_MAP4551                0x0001180080E08E38  RSL
L2C_DUT_MAP4552                0x0001180080E08E40  RSL
L2C_DUT_MAP4553                0x0001180080E08E48  RSL
L2C_DUT_MAP4554                0x0001180080E08E50  RSL
L2C_DUT_MAP4555                0x0001180080E08E58  RSL
L2C_DUT_MAP4556                0x0001180080E08E60  RSL
L2C_DUT_MAP4557                0x0001180080E08E68  RSL
L2C_DUT_MAP4558                0x0001180080E08E70  RSL
L2C_DUT_MAP4559                0x0001180080E08E78  RSL
L2C_DUT_MAP4560                0x0001180080E08E80  RSL
L2C_DUT_MAP4561                0x0001180080E08E88  RSL
L2C_DUT_MAP4562                0x0001180080E08E90  RSL
L2C_DUT_MAP4563                0x0001180080E08E98  RSL
L2C_DUT_MAP4564                0x0001180080E08EA0  RSL
L2C_DUT_MAP4565                0x0001180080E08EA8  RSL
L2C_DUT_MAP4566                0x0001180080E08EB0  RSL
L2C_DUT_MAP4567                0x0001180080E08EB8  RSL
L2C_DUT_MAP4568                0x0001180080E08EC0  RSL
L2C_DUT_MAP4569                0x0001180080E08EC8  RSL
L2C_DUT_MAP4570                0x0001180080E08ED0  RSL
L2C_DUT_MAP4571                0x0001180080E08ED8  RSL
L2C_DUT_MAP4572                0x0001180080E08EE0  RSL
L2C_DUT_MAP4573                0x0001180080E08EE8  RSL
L2C_DUT_MAP4574                0x0001180080E08EF0  RSL
L2C_DUT_MAP4575                0x0001180080E08EF8  RSL
L2C_DUT_MAP4576                0x0001180080E08F00  RSL
L2C_DUT_MAP4577                0x0001180080E08F08  RSL
L2C_DUT_MAP4578                0x0001180080E08F10  RSL
L2C_DUT_MAP4579                0x0001180080E08F18  RSL
L2C_DUT_MAP4580                0x0001180080E08F20  RSL
L2C_DUT_MAP4581                0x0001180080E08F28  RSL
L2C_DUT_MAP4582                0x0001180080E08F30  RSL
L2C_DUT_MAP4583                0x0001180080E08F38  RSL
L2C_DUT_MAP4584                0x0001180080E08F40  RSL
L2C_DUT_MAP4585                0x0001180080E08F48  RSL
L2C_DUT_MAP4586                0x0001180080E08F50  RSL
L2C_DUT_MAP4587                0x0001180080E08F58  RSL
L2C_DUT_MAP4588                0x0001180080E08F60  RSL
L2C_DUT_MAP4589                0x0001180080E08F68  RSL
L2C_DUT_MAP4590                0x0001180080E08F70  RSL
L2C_DUT_MAP4591                0x0001180080E08F78  RSL
L2C_DUT_MAP4592                0x0001180080E08F80  RSL
L2C_DUT_MAP4593                0x0001180080E08F88  RSL
L2C_DUT_MAP4594                0x0001180080E08F90  RSL
L2C_DUT_MAP4595                0x0001180080E08F98  RSL
L2C_DUT_MAP4596                0x0001180080E08FA0  RSL
L2C_DUT_MAP4597                0x0001180080E08FA8  RSL
L2C_DUT_MAP4598                0x0001180080E08FB0  RSL
L2C_DUT_MAP4599                0x0001180080E08FB8  RSL
L2C_DUT_MAP4600                0x0001180080E08FC0  RSL
L2C_DUT_MAP4601                0x0001180080E08FC8  RSL
L2C_DUT_MAP4602                0x0001180080E08FD0  RSL
L2C_DUT_MAP4603                0x0001180080E08FD8  RSL
L2C_DUT_MAP4604                0x0001180080E08FE0  RSL
L2C_DUT_MAP4605                0x0001180080E08FE8  RSL
L2C_DUT_MAP4606                0x0001180080E08FF0  RSL
L2C_DUT_MAP4607                0x0001180080E08FF8  RSL
L2C_DUT_MAP4608                0x0001180080E09000  RSL
L2C_DUT_MAP4609                0x0001180080E09008  RSL
L2C_DUT_MAP4610                0x0001180080E09010  RSL
L2C_DUT_MAP4611                0x0001180080E09018  RSL
L2C_DUT_MAP4612                0x0001180080E09020  RSL
L2C_DUT_MAP4613                0x0001180080E09028  RSL
L2C_DUT_MAP4614                0x0001180080E09030  RSL
L2C_DUT_MAP4615                0x0001180080E09038  RSL
L2C_DUT_MAP4616                0x0001180080E09040  RSL
L2C_DUT_MAP4617                0x0001180080E09048  RSL
L2C_DUT_MAP4618                0x0001180080E09050  RSL
L2C_DUT_MAP4619                0x0001180080E09058  RSL
L2C_DUT_MAP4620                0x0001180080E09060  RSL
L2C_DUT_MAP4621                0x0001180080E09068  RSL
L2C_DUT_MAP4622                0x0001180080E09070  RSL
L2C_DUT_MAP4623                0x0001180080E09078  RSL
L2C_DUT_MAP4624                0x0001180080E09080  RSL
L2C_DUT_MAP4625                0x0001180080E09088  RSL
L2C_DUT_MAP4626                0x0001180080E09090  RSL
L2C_DUT_MAP4627                0x0001180080E09098  RSL
L2C_DUT_MAP4628                0x0001180080E090A0  RSL
L2C_DUT_MAP4629                0x0001180080E090A8  RSL
L2C_DUT_MAP4630                0x0001180080E090B0  RSL
L2C_DUT_MAP4631                0x0001180080E090B8  RSL
L2C_DUT_MAP4632                0x0001180080E090C0  RSL
L2C_DUT_MAP4633                0x0001180080E090C8  RSL
L2C_DUT_MAP4634                0x0001180080E090D0  RSL
L2C_DUT_MAP4635                0x0001180080E090D8  RSL
L2C_DUT_MAP4636                0x0001180080E090E0  RSL
L2C_DUT_MAP4637                0x0001180080E090E8  RSL
L2C_DUT_MAP4638                0x0001180080E090F0  RSL
L2C_DUT_MAP4639                0x0001180080E090F8  RSL
L2C_DUT_MAP4640                0x0001180080E09100  RSL
L2C_DUT_MAP4641                0x0001180080E09108  RSL
L2C_DUT_MAP4642                0x0001180080E09110  RSL
L2C_DUT_MAP4643                0x0001180080E09118  RSL
L2C_DUT_MAP4644                0x0001180080E09120  RSL
L2C_DUT_MAP4645                0x0001180080E09128  RSL
L2C_DUT_MAP4646                0x0001180080E09130  RSL
L2C_DUT_MAP4647                0x0001180080E09138  RSL
L2C_DUT_MAP4648                0x0001180080E09140  RSL
L2C_DUT_MAP4649                0x0001180080E09148  RSL
L2C_DUT_MAP4650                0x0001180080E09150  RSL
L2C_DUT_MAP4651                0x0001180080E09158  RSL
L2C_DUT_MAP4652                0x0001180080E09160  RSL
L2C_DUT_MAP4653                0x0001180080E09168  RSL
L2C_DUT_MAP4654                0x0001180080E09170  RSL
L2C_DUT_MAP4655                0x0001180080E09178  RSL
L2C_DUT_MAP4656                0x0001180080E09180  RSL
L2C_DUT_MAP4657                0x0001180080E09188  RSL
L2C_DUT_MAP4658                0x0001180080E09190  RSL
L2C_DUT_MAP4659                0x0001180080E09198  RSL
L2C_DUT_MAP4660                0x0001180080E091A0  RSL
L2C_DUT_MAP4661                0x0001180080E091A8  RSL
L2C_DUT_MAP4662                0x0001180080E091B0  RSL
L2C_DUT_MAP4663                0x0001180080E091B8  RSL
L2C_DUT_MAP4664                0x0001180080E091C0  RSL
L2C_DUT_MAP4665                0x0001180080E091C8  RSL
L2C_DUT_MAP4666                0x0001180080E091D0  RSL
L2C_DUT_MAP4667                0x0001180080E091D8  RSL
L2C_DUT_MAP4668                0x0001180080E091E0  RSL
L2C_DUT_MAP4669                0x0001180080E091E8  RSL
L2C_DUT_MAP4670                0x0001180080E091F0  RSL
L2C_DUT_MAP4671                0x0001180080E091F8  RSL
L2C_DUT_MAP4672                0x0001180080E09200  RSL
L2C_DUT_MAP4673                0x0001180080E09208  RSL
L2C_DUT_MAP4674                0x0001180080E09210  RSL
L2C_DUT_MAP4675                0x0001180080E09218  RSL
L2C_DUT_MAP4676                0x0001180080E09220  RSL
L2C_DUT_MAP4677                0x0001180080E09228  RSL
L2C_DUT_MAP4678                0x0001180080E09230  RSL
L2C_DUT_MAP4679                0x0001180080E09238  RSL
L2C_DUT_MAP4680                0x0001180080E09240  RSL
L2C_DUT_MAP4681                0x0001180080E09248  RSL
L2C_DUT_MAP4682                0x0001180080E09250  RSL
L2C_DUT_MAP4683                0x0001180080E09258  RSL
L2C_DUT_MAP4684                0x0001180080E09260  RSL
L2C_DUT_MAP4685                0x0001180080E09268  RSL
L2C_DUT_MAP4686                0x0001180080E09270  RSL
L2C_DUT_MAP4687                0x0001180080E09278  RSL
L2C_DUT_MAP4688                0x0001180080E09280  RSL
L2C_DUT_MAP4689                0x0001180080E09288  RSL
L2C_DUT_MAP4690                0x0001180080E09290  RSL
L2C_DUT_MAP4691                0x0001180080E09298  RSL
L2C_DUT_MAP4692                0x0001180080E092A0  RSL
L2C_DUT_MAP4693                0x0001180080E092A8  RSL
L2C_DUT_MAP4694                0x0001180080E092B0  RSL
L2C_DUT_MAP4695                0x0001180080E092B8  RSL
L2C_DUT_MAP4696                0x0001180080E092C0  RSL
L2C_DUT_MAP4697                0x0001180080E092C8  RSL
L2C_DUT_MAP4698                0x0001180080E092D0  RSL
L2C_DUT_MAP4699                0x0001180080E092D8  RSL
L2C_DUT_MAP4700                0x0001180080E092E0  RSL
L2C_DUT_MAP4701                0x0001180080E092E8  RSL
L2C_DUT_MAP4702                0x0001180080E092F0  RSL
L2C_DUT_MAP4703                0x0001180080E092F8  RSL
L2C_DUT_MAP4704                0x0001180080E09300  RSL
L2C_DUT_MAP4705                0x0001180080E09308  RSL
L2C_DUT_MAP4706                0x0001180080E09310  RSL
L2C_DUT_MAP4707                0x0001180080E09318  RSL
L2C_DUT_MAP4708                0x0001180080E09320  RSL
L2C_DUT_MAP4709                0x0001180080E09328  RSL
L2C_DUT_MAP4710                0x0001180080E09330  RSL
L2C_DUT_MAP4711                0x0001180080E09338  RSL
L2C_DUT_MAP4712                0x0001180080E09340  RSL
L2C_DUT_MAP4713                0x0001180080E09348  RSL
L2C_DUT_MAP4714                0x0001180080E09350  RSL
L2C_DUT_MAP4715                0x0001180080E09358  RSL
L2C_DUT_MAP4716                0x0001180080E09360  RSL
L2C_DUT_MAP4717                0x0001180080E09368  RSL
L2C_DUT_MAP4718                0x0001180080E09370  RSL
L2C_DUT_MAP4719                0x0001180080E09378  RSL
L2C_DUT_MAP4720                0x0001180080E09380  RSL
L2C_DUT_MAP4721                0x0001180080E09388  RSL
L2C_DUT_MAP4722                0x0001180080E09390  RSL
L2C_DUT_MAP4723                0x0001180080E09398  RSL
L2C_DUT_MAP4724                0x0001180080E093A0  RSL
L2C_DUT_MAP4725                0x0001180080E093A8  RSL
L2C_DUT_MAP4726                0x0001180080E093B0  RSL
L2C_DUT_MAP4727                0x0001180080E093B8  RSL
L2C_DUT_MAP4728                0x0001180080E093C0  RSL
L2C_DUT_MAP4729                0x0001180080E093C8  RSL
L2C_DUT_MAP4730                0x0001180080E093D0  RSL
L2C_DUT_MAP4731                0x0001180080E093D8  RSL
L2C_DUT_MAP4732                0x0001180080E093E0  RSL
L2C_DUT_MAP4733                0x0001180080E093E8  RSL
L2C_DUT_MAP4734                0x0001180080E093F0  RSL
L2C_DUT_MAP4735                0x0001180080E093F8  RSL
L2C_DUT_MAP4736                0x0001180080E09400  RSL
L2C_DUT_MAP4737                0x0001180080E09408  RSL
L2C_DUT_MAP4738                0x0001180080E09410  RSL
L2C_DUT_MAP4739                0x0001180080E09418  RSL
L2C_DUT_MAP4740                0x0001180080E09420  RSL
L2C_DUT_MAP4741                0x0001180080E09428  RSL
L2C_DUT_MAP4742                0x0001180080E09430  RSL
L2C_DUT_MAP4743                0x0001180080E09438  RSL
L2C_DUT_MAP4744                0x0001180080E09440  RSL
L2C_DUT_MAP4745                0x0001180080E09448  RSL
L2C_DUT_MAP4746                0x0001180080E09450  RSL
L2C_DUT_MAP4747                0x0001180080E09458  RSL
L2C_DUT_MAP4748                0x0001180080E09460  RSL
L2C_DUT_MAP4749                0x0001180080E09468  RSL
L2C_DUT_MAP4750                0x0001180080E09470  RSL
L2C_DUT_MAP4751                0x0001180080E09478  RSL
L2C_DUT_MAP4752                0x0001180080E09480  RSL
L2C_DUT_MAP4753                0x0001180080E09488  RSL
L2C_DUT_MAP4754                0x0001180080E09490  RSL
L2C_DUT_MAP4755                0x0001180080E09498  RSL
L2C_DUT_MAP4756                0x0001180080E094A0  RSL
L2C_DUT_MAP4757                0x0001180080E094A8  RSL
L2C_DUT_MAP4758                0x0001180080E094B0  RSL
L2C_DUT_MAP4759                0x0001180080E094B8  RSL
L2C_DUT_MAP4760                0x0001180080E094C0  RSL
L2C_DUT_MAP4761                0x0001180080E094C8  RSL
L2C_DUT_MAP4762                0x0001180080E094D0  RSL
L2C_DUT_MAP4763                0x0001180080E094D8  RSL
L2C_DUT_MAP4764                0x0001180080E094E0  RSL
L2C_DUT_MAP4765                0x0001180080E094E8  RSL
L2C_DUT_MAP4766                0x0001180080E094F0  RSL
L2C_DUT_MAP4767                0x0001180080E094F8  RSL
L2C_DUT_MAP4768                0x0001180080E09500  RSL
L2C_DUT_MAP4769                0x0001180080E09508  RSL
L2C_DUT_MAP4770                0x0001180080E09510  RSL
L2C_DUT_MAP4771                0x0001180080E09518  RSL
L2C_DUT_MAP4772                0x0001180080E09520  RSL
L2C_DUT_MAP4773                0x0001180080E09528  RSL
L2C_DUT_MAP4774                0x0001180080E09530  RSL
L2C_DUT_MAP4775                0x0001180080E09538  RSL
L2C_DUT_MAP4776                0x0001180080E09540  RSL
L2C_DUT_MAP4777                0x0001180080E09548  RSL
L2C_DUT_MAP4778                0x0001180080E09550  RSL
L2C_DUT_MAP4779                0x0001180080E09558  RSL
L2C_DUT_MAP4780                0x0001180080E09560  RSL
L2C_DUT_MAP4781                0x0001180080E09568  RSL
L2C_DUT_MAP4782                0x0001180080E09570  RSL
L2C_DUT_MAP4783                0x0001180080E09578  RSL
L2C_DUT_MAP4784                0x0001180080E09580  RSL
L2C_DUT_MAP4785                0x0001180080E09588  RSL
L2C_DUT_MAP4786                0x0001180080E09590  RSL
L2C_DUT_MAP4787                0x0001180080E09598  RSL
L2C_DUT_MAP4788                0x0001180080E095A0  RSL
L2C_DUT_MAP4789                0x0001180080E095A8  RSL
L2C_DUT_MAP4790                0x0001180080E095B0  RSL
L2C_DUT_MAP4791                0x0001180080E095B8  RSL
L2C_DUT_MAP4792                0x0001180080E095C0  RSL
L2C_DUT_MAP4793                0x0001180080E095C8  RSL
L2C_DUT_MAP4794                0x0001180080E095D0  RSL
L2C_DUT_MAP4795                0x0001180080E095D8  RSL
L2C_DUT_MAP4796                0x0001180080E095E0  RSL
L2C_DUT_MAP4797                0x0001180080E095E8  RSL
L2C_DUT_MAP4798                0x0001180080E095F0  RSL
L2C_DUT_MAP4799                0x0001180080E095F8  RSL
L2C_DUT_MAP4800                0x0001180080E09600  RSL
L2C_DUT_MAP4801                0x0001180080E09608  RSL
L2C_DUT_MAP4802                0x0001180080E09610  RSL
L2C_DUT_MAP4803                0x0001180080E09618  RSL
L2C_DUT_MAP4804                0x0001180080E09620  RSL
L2C_DUT_MAP4805                0x0001180080E09628  RSL
L2C_DUT_MAP4806                0x0001180080E09630  RSL
L2C_DUT_MAP4807                0x0001180080E09638  RSL
L2C_DUT_MAP4808                0x0001180080E09640  RSL
L2C_DUT_MAP4809                0x0001180080E09648  RSL
L2C_DUT_MAP4810                0x0001180080E09650  RSL
L2C_DUT_MAP4811                0x0001180080E09658  RSL
L2C_DUT_MAP4812                0x0001180080E09660  RSL
L2C_DUT_MAP4813                0x0001180080E09668  RSL
L2C_DUT_MAP4814                0x0001180080E09670  RSL
L2C_DUT_MAP4815                0x0001180080E09678  RSL
L2C_DUT_MAP4816                0x0001180080E09680  RSL
L2C_DUT_MAP4817                0x0001180080E09688  RSL
L2C_DUT_MAP4818                0x0001180080E09690  RSL
L2C_DUT_MAP4819                0x0001180080E09698  RSL
L2C_DUT_MAP4820                0x0001180080E096A0  RSL
L2C_DUT_MAP4821                0x0001180080E096A8  RSL
L2C_DUT_MAP4822                0x0001180080E096B0  RSL
L2C_DUT_MAP4823                0x0001180080E096B8  RSL
L2C_DUT_MAP4824                0x0001180080E096C0  RSL
L2C_DUT_MAP4825                0x0001180080E096C8  RSL
L2C_DUT_MAP4826                0x0001180080E096D0  RSL
L2C_DUT_MAP4827                0x0001180080E096D8  RSL
L2C_DUT_MAP4828                0x0001180080E096E0  RSL
L2C_DUT_MAP4829                0x0001180080E096E8  RSL
L2C_DUT_MAP4830                0x0001180080E096F0  RSL
L2C_DUT_MAP4831                0x0001180080E096F8  RSL
L2C_DUT_MAP4832                0x0001180080E09700  RSL
L2C_DUT_MAP4833                0x0001180080E09708  RSL
L2C_DUT_MAP4834                0x0001180080E09710  RSL
L2C_DUT_MAP4835                0x0001180080E09718  RSL
L2C_DUT_MAP4836                0x0001180080E09720  RSL
L2C_DUT_MAP4837                0x0001180080E09728  RSL
L2C_DUT_MAP4838                0x0001180080E09730  RSL
L2C_DUT_MAP4839                0x0001180080E09738  RSL
L2C_DUT_MAP4840                0x0001180080E09740  RSL
L2C_DUT_MAP4841                0x0001180080E09748  RSL
L2C_DUT_MAP4842                0x0001180080E09750  RSL
L2C_DUT_MAP4843                0x0001180080E09758  RSL
L2C_DUT_MAP4844                0x0001180080E09760  RSL
L2C_DUT_MAP4845                0x0001180080E09768  RSL
L2C_DUT_MAP4846                0x0001180080E09770  RSL
L2C_DUT_MAP4847                0x0001180080E09778  RSL
L2C_DUT_MAP4848                0x0001180080E09780  RSL
L2C_DUT_MAP4849                0x0001180080E09788  RSL
L2C_DUT_MAP4850                0x0001180080E09790  RSL
L2C_DUT_MAP4851                0x0001180080E09798  RSL
L2C_DUT_MAP4852                0x0001180080E097A0  RSL
L2C_DUT_MAP4853                0x0001180080E097A8  RSL
L2C_DUT_MAP4854                0x0001180080E097B0  RSL
L2C_DUT_MAP4855                0x0001180080E097B8  RSL
L2C_DUT_MAP4856                0x0001180080E097C0  RSL
L2C_DUT_MAP4857                0x0001180080E097C8  RSL
L2C_DUT_MAP4858                0x0001180080E097D0  RSL
L2C_DUT_MAP4859                0x0001180080E097D8  RSL
L2C_DUT_MAP4860                0x0001180080E097E0  RSL
L2C_DUT_MAP4861                0x0001180080E097E8  RSL
L2C_DUT_MAP4862                0x0001180080E097F0  RSL
L2C_DUT_MAP4863                0x0001180080E097F8  RSL
L2C_DUT_MAP4864                0x0001180080E09800  RSL
L2C_DUT_MAP4865                0x0001180080E09808  RSL
L2C_DUT_MAP4866                0x0001180080E09810  RSL
L2C_DUT_MAP4867                0x0001180080E09818  RSL
L2C_DUT_MAP4868                0x0001180080E09820  RSL
L2C_DUT_MAP4869                0x0001180080E09828  RSL
L2C_DUT_MAP4870                0x0001180080E09830  RSL
L2C_DUT_MAP4871                0x0001180080E09838  RSL
L2C_DUT_MAP4872                0x0001180080E09840  RSL
L2C_DUT_MAP4873                0x0001180080E09848  RSL
L2C_DUT_MAP4874                0x0001180080E09850  RSL
L2C_DUT_MAP4875                0x0001180080E09858  RSL
L2C_DUT_MAP4876                0x0001180080E09860  RSL
L2C_DUT_MAP4877                0x0001180080E09868  RSL
L2C_DUT_MAP4878                0x0001180080E09870  RSL
L2C_DUT_MAP4879                0x0001180080E09878  RSL
L2C_DUT_MAP4880                0x0001180080E09880  RSL
L2C_DUT_MAP4881                0x0001180080E09888  RSL
L2C_DUT_MAP4882                0x0001180080E09890  RSL
L2C_DUT_MAP4883                0x0001180080E09898  RSL
L2C_DUT_MAP4884                0x0001180080E098A0  RSL
L2C_DUT_MAP4885                0x0001180080E098A8  RSL
L2C_DUT_MAP4886                0x0001180080E098B0  RSL
L2C_DUT_MAP4887                0x0001180080E098B8  RSL
L2C_DUT_MAP4888                0x0001180080E098C0  RSL
L2C_DUT_MAP4889                0x0001180080E098C8  RSL
L2C_DUT_MAP4890                0x0001180080E098D0  RSL
L2C_DUT_MAP4891                0x0001180080E098D8  RSL
L2C_DUT_MAP4892                0x0001180080E098E0  RSL
L2C_DUT_MAP4893                0x0001180080E098E8  RSL
L2C_DUT_MAP4894                0x0001180080E098F0  RSL
L2C_DUT_MAP4895                0x0001180080E098F8  RSL
L2C_DUT_MAP4896                0x0001180080E09900  RSL
L2C_DUT_MAP4897                0x0001180080E09908  RSL
L2C_DUT_MAP4898                0x0001180080E09910  RSL
L2C_DUT_MAP4899                0x0001180080E09918  RSL
L2C_DUT_MAP4900                0x0001180080E09920  RSL
L2C_DUT_MAP4901                0x0001180080E09928  RSL
L2C_DUT_MAP4902                0x0001180080E09930  RSL
L2C_DUT_MAP4903                0x0001180080E09938  RSL
L2C_DUT_MAP4904                0x0001180080E09940  RSL
L2C_DUT_MAP4905                0x0001180080E09948  RSL
L2C_DUT_MAP4906                0x0001180080E09950  RSL
L2C_DUT_MAP4907                0x0001180080E09958  RSL
L2C_DUT_MAP4908                0x0001180080E09960  RSL
L2C_DUT_MAP4909                0x0001180080E09968  RSL
L2C_DUT_MAP4910                0x0001180080E09970  RSL
L2C_DUT_MAP4911                0x0001180080E09978  RSL
L2C_DUT_MAP4912                0x0001180080E09980  RSL
L2C_DUT_MAP4913                0x0001180080E09988  RSL
L2C_DUT_MAP4914                0x0001180080E09990  RSL
L2C_DUT_MAP4915                0x0001180080E09998  RSL
L2C_DUT_MAP4916                0x0001180080E099A0  RSL
L2C_DUT_MAP4917                0x0001180080E099A8  RSL
L2C_DUT_MAP4918                0x0001180080E099B0  RSL
L2C_DUT_MAP4919                0x0001180080E099B8  RSL
L2C_DUT_MAP4920                0x0001180080E099C0  RSL
L2C_DUT_MAP4921                0x0001180080E099C8  RSL
L2C_DUT_MAP4922                0x0001180080E099D0  RSL
L2C_DUT_MAP4923                0x0001180080E099D8  RSL
L2C_DUT_MAP4924                0x0001180080E099E0  RSL
L2C_DUT_MAP4925                0x0001180080E099E8  RSL
L2C_DUT_MAP4926                0x0001180080E099F0  RSL
L2C_DUT_MAP4927                0x0001180080E099F8  RSL
L2C_DUT_MAP4928                0x0001180080E09A00  RSL
L2C_DUT_MAP4929                0x0001180080E09A08  RSL
L2C_DUT_MAP4930                0x0001180080E09A10  RSL
L2C_DUT_MAP4931                0x0001180080E09A18  RSL
L2C_DUT_MAP4932                0x0001180080E09A20  RSL
L2C_DUT_MAP4933                0x0001180080E09A28  RSL
L2C_DUT_MAP4934                0x0001180080E09A30  RSL
L2C_DUT_MAP4935                0x0001180080E09A38  RSL
L2C_DUT_MAP4936                0x0001180080E09A40  RSL
L2C_DUT_MAP4937                0x0001180080E09A48  RSL
L2C_DUT_MAP4938                0x0001180080E09A50  RSL
L2C_DUT_MAP4939                0x0001180080E09A58  RSL
L2C_DUT_MAP4940                0x0001180080E09A60  RSL
L2C_DUT_MAP4941                0x0001180080E09A68  RSL
L2C_DUT_MAP4942                0x0001180080E09A70  RSL
L2C_DUT_MAP4943                0x0001180080E09A78  RSL
L2C_DUT_MAP4944                0x0001180080E09A80  RSL
L2C_DUT_MAP4945                0x0001180080E09A88  RSL
L2C_DUT_MAP4946                0x0001180080E09A90  RSL
L2C_DUT_MAP4947                0x0001180080E09A98  RSL
L2C_DUT_MAP4948                0x0001180080E09AA0  RSL
L2C_DUT_MAP4949                0x0001180080E09AA8  RSL
L2C_DUT_MAP4950                0x0001180080E09AB0  RSL
L2C_DUT_MAP4951                0x0001180080E09AB8  RSL
L2C_DUT_MAP4952                0x0001180080E09AC0  RSL
L2C_DUT_MAP4953                0x0001180080E09AC8  RSL
L2C_DUT_MAP4954                0x0001180080E09AD0  RSL
L2C_DUT_MAP4955                0x0001180080E09AD8  RSL
L2C_DUT_MAP4956                0x0001180080E09AE0  RSL
L2C_DUT_MAP4957                0x0001180080E09AE8  RSL
L2C_DUT_MAP4958                0x0001180080E09AF0  RSL
L2C_DUT_MAP4959                0x0001180080E09AF8  RSL
L2C_DUT_MAP4960                0x0001180080E09B00  RSL
L2C_DUT_MAP4961                0x0001180080E09B08  RSL
L2C_DUT_MAP4962                0x0001180080E09B10  RSL
L2C_DUT_MAP4963                0x0001180080E09B18  RSL
L2C_DUT_MAP4964                0x0001180080E09B20  RSL
L2C_DUT_MAP4965                0x0001180080E09B28  RSL
L2C_DUT_MAP4966                0x0001180080E09B30  RSL
L2C_DUT_MAP4967                0x0001180080E09B38  RSL
L2C_DUT_MAP4968                0x0001180080E09B40  RSL
L2C_DUT_MAP4969                0x0001180080E09B48  RSL
L2C_DUT_MAP4970                0x0001180080E09B50  RSL
L2C_DUT_MAP4971                0x0001180080E09B58  RSL
L2C_DUT_MAP4972                0x0001180080E09B60  RSL
L2C_DUT_MAP4973                0x0001180080E09B68  RSL
L2C_DUT_MAP4974                0x0001180080E09B70  RSL
L2C_DUT_MAP4975                0x0001180080E09B78  RSL
L2C_DUT_MAP4976                0x0001180080E09B80  RSL
L2C_DUT_MAP4977                0x0001180080E09B88  RSL
L2C_DUT_MAP4978                0x0001180080E09B90  RSL
L2C_DUT_MAP4979                0x0001180080E09B98  RSL
L2C_DUT_MAP4980                0x0001180080E09BA0  RSL
L2C_DUT_MAP4981                0x0001180080E09BA8  RSL
L2C_DUT_MAP4982                0x0001180080E09BB0  RSL
L2C_DUT_MAP4983                0x0001180080E09BB8  RSL
L2C_DUT_MAP4984                0x0001180080E09BC0  RSL
L2C_DUT_MAP4985                0x0001180080E09BC8  RSL
L2C_DUT_MAP4986                0x0001180080E09BD0  RSL
L2C_DUT_MAP4987                0x0001180080E09BD8  RSL
L2C_DUT_MAP4988                0x0001180080E09BE0  RSL
L2C_DUT_MAP4989                0x0001180080E09BE8  RSL
L2C_DUT_MAP4990                0x0001180080E09BF0  RSL
L2C_DUT_MAP4991                0x0001180080E09BF8  RSL
L2C_DUT_MAP4992                0x0001180080E09C00  RSL
L2C_DUT_MAP4993                0x0001180080E09C08  RSL
L2C_DUT_MAP4994                0x0001180080E09C10  RSL
L2C_DUT_MAP4995                0x0001180080E09C18  RSL
L2C_DUT_MAP4996                0x0001180080E09C20  RSL
L2C_DUT_MAP4997                0x0001180080E09C28  RSL
L2C_DUT_MAP4998                0x0001180080E09C30  RSL
L2C_DUT_MAP4999                0x0001180080E09C38  RSL
L2C_DUT_MAP5000                0x0001180080E09C40  RSL
L2C_DUT_MAP5001                0x0001180080E09C48  RSL
L2C_DUT_MAP5002                0x0001180080E09C50  RSL
L2C_DUT_MAP5003                0x0001180080E09C58  RSL
L2C_DUT_MAP5004                0x0001180080E09C60  RSL
L2C_DUT_MAP5005                0x0001180080E09C68  RSL
L2C_DUT_MAP5006                0x0001180080E09C70  RSL
L2C_DUT_MAP5007                0x0001180080E09C78  RSL
L2C_DUT_MAP5008                0x0001180080E09C80  RSL
L2C_DUT_MAP5009                0x0001180080E09C88  RSL
L2C_DUT_MAP5010                0x0001180080E09C90  RSL
L2C_DUT_MAP5011                0x0001180080E09C98  RSL
L2C_DUT_MAP5012                0x0001180080E09CA0  RSL
L2C_DUT_MAP5013                0x0001180080E09CA8  RSL
L2C_DUT_MAP5014                0x0001180080E09CB0  RSL
L2C_DUT_MAP5015                0x0001180080E09CB8  RSL
L2C_DUT_MAP5016                0x0001180080E09CC0  RSL
L2C_DUT_MAP5017                0x0001180080E09CC8  RSL
L2C_DUT_MAP5018                0x0001180080E09CD0  RSL
L2C_DUT_MAP5019                0x0001180080E09CD8  RSL
L2C_DUT_MAP5020                0x0001180080E09CE0  RSL
L2C_DUT_MAP5021                0x0001180080E09CE8  RSL
L2C_DUT_MAP5022                0x0001180080E09CF0  RSL
L2C_DUT_MAP5023                0x0001180080E09CF8  RSL
L2C_DUT_MAP5024                0x0001180080E09D00  RSL
L2C_DUT_MAP5025                0x0001180080E09D08  RSL
L2C_DUT_MAP5026                0x0001180080E09D10  RSL
L2C_DUT_MAP5027                0x0001180080E09D18  RSL
L2C_DUT_MAP5028                0x0001180080E09D20  RSL
L2C_DUT_MAP5029                0x0001180080E09D28  RSL
L2C_DUT_MAP5030                0x0001180080E09D30  RSL
L2C_DUT_MAP5031                0x0001180080E09D38  RSL
L2C_DUT_MAP5032                0x0001180080E09D40  RSL
L2C_DUT_MAP5033                0x0001180080E09D48  RSL
L2C_DUT_MAP5034                0x0001180080E09D50  RSL
L2C_DUT_MAP5035                0x0001180080E09D58  RSL
L2C_DUT_MAP5036                0x0001180080E09D60  RSL
L2C_DUT_MAP5037                0x0001180080E09D68  RSL
L2C_DUT_MAP5038                0x0001180080E09D70  RSL
L2C_DUT_MAP5039                0x0001180080E09D78  RSL
L2C_DUT_MAP5040                0x0001180080E09D80  RSL
L2C_DUT_MAP5041                0x0001180080E09D88  RSL
L2C_DUT_MAP5042                0x0001180080E09D90  RSL
L2C_DUT_MAP5043                0x0001180080E09D98  RSL
L2C_DUT_MAP5044                0x0001180080E09DA0  RSL
L2C_DUT_MAP5045                0x0001180080E09DA8  RSL
L2C_DUT_MAP5046                0x0001180080E09DB0  RSL
L2C_DUT_MAP5047                0x0001180080E09DB8  RSL
L2C_DUT_MAP5048                0x0001180080E09DC0  RSL
L2C_DUT_MAP5049                0x0001180080E09DC8  RSL
L2C_DUT_MAP5050                0x0001180080E09DD0  RSL
L2C_DUT_MAP5051                0x0001180080E09DD8  RSL
L2C_DUT_MAP5052                0x0001180080E09DE0  RSL
L2C_DUT_MAP5053                0x0001180080E09DE8  RSL
L2C_DUT_MAP5054                0x0001180080E09DF0  RSL
L2C_DUT_MAP5055                0x0001180080E09DF8  RSL
L2C_DUT_MAP5056                0x0001180080E09E00  RSL
L2C_DUT_MAP5057                0x0001180080E09E08  RSL
L2C_DUT_MAP5058                0x0001180080E09E10  RSL
L2C_DUT_MAP5059                0x0001180080E09E18  RSL
L2C_DUT_MAP5060                0x0001180080E09E20  RSL
L2C_DUT_MAP5061                0x0001180080E09E28  RSL
L2C_DUT_MAP5062                0x0001180080E09E30  RSL
L2C_DUT_MAP5063                0x0001180080E09E38  RSL
L2C_DUT_MAP5064                0x0001180080E09E40  RSL
L2C_DUT_MAP5065                0x0001180080E09E48  RSL
L2C_DUT_MAP5066                0x0001180080E09E50  RSL
L2C_DUT_MAP5067                0x0001180080E09E58  RSL
L2C_DUT_MAP5068                0x0001180080E09E60  RSL
L2C_DUT_MAP5069                0x0001180080E09E68  RSL
L2C_DUT_MAP5070                0x0001180080E09E70  RSL
L2C_DUT_MAP5071                0x0001180080E09E78  RSL
L2C_DUT_MAP5072                0x0001180080E09E80  RSL
L2C_DUT_MAP5073                0x0001180080E09E88  RSL
L2C_DUT_MAP5074                0x0001180080E09E90  RSL
L2C_DUT_MAP5075                0x0001180080E09E98  RSL
L2C_DUT_MAP5076                0x0001180080E09EA0  RSL
L2C_DUT_MAP5077                0x0001180080E09EA8  RSL
L2C_DUT_MAP5078                0x0001180080E09EB0  RSL
L2C_DUT_MAP5079                0x0001180080E09EB8  RSL
L2C_DUT_MAP5080                0x0001180080E09EC0  RSL
L2C_DUT_MAP5081                0x0001180080E09EC8  RSL
L2C_DUT_MAP5082                0x0001180080E09ED0  RSL
L2C_DUT_MAP5083                0x0001180080E09ED8  RSL
L2C_DUT_MAP5084                0x0001180080E09EE0  RSL
L2C_DUT_MAP5085                0x0001180080E09EE8  RSL
L2C_DUT_MAP5086                0x0001180080E09EF0  RSL
L2C_DUT_MAP5087                0x0001180080E09EF8  RSL
L2C_DUT_MAP5088                0x0001180080E09F00  RSL
L2C_DUT_MAP5089                0x0001180080E09F08  RSL
L2C_DUT_MAP5090                0x0001180080E09F10  RSL
L2C_DUT_MAP5091                0x0001180080E09F18  RSL
L2C_DUT_MAP5092                0x0001180080E09F20  RSL
L2C_DUT_MAP5093                0x0001180080E09F28  RSL
L2C_DUT_MAP5094                0x0001180080E09F30  RSL
L2C_DUT_MAP5095                0x0001180080E09F38  RSL
L2C_DUT_MAP5096                0x0001180080E09F40  RSL
L2C_DUT_MAP5097                0x0001180080E09F48  RSL
L2C_DUT_MAP5098                0x0001180080E09F50  RSL
L2C_DUT_MAP5099                0x0001180080E09F58  RSL
L2C_DUT_MAP5100                0x0001180080E09F60  RSL
L2C_DUT_MAP5101                0x0001180080E09F68  RSL
L2C_DUT_MAP5102                0x0001180080E09F70  RSL
L2C_DUT_MAP5103                0x0001180080E09F78  RSL
L2C_DUT_MAP5104                0x0001180080E09F80  RSL
L2C_DUT_MAP5105                0x0001180080E09F88  RSL
L2C_DUT_MAP5106                0x0001180080E09F90  RSL
L2C_DUT_MAP5107                0x0001180080E09F98  RSL
L2C_DUT_MAP5108                0x0001180080E09FA0  RSL
L2C_DUT_MAP5109                0x0001180080E09FA8  RSL
L2C_DUT_MAP5110                0x0001180080E09FB0  RSL
L2C_DUT_MAP5111                0x0001180080E09FB8  RSL
L2C_DUT_MAP5112                0x0001180080E09FC0  RSL
L2C_DUT_MAP5113                0x0001180080E09FC8  RSL
L2C_DUT_MAP5114                0x0001180080E09FD0  RSL
L2C_DUT_MAP5115                0x0001180080E09FD8  RSL
L2C_DUT_MAP5116                0x0001180080E09FE0  RSL
L2C_DUT_MAP5117                0x0001180080E09FE8  RSL
L2C_DUT_MAP5118                0x0001180080E09FF0  RSL
L2C_DUT_MAP5119                0x0001180080E09FF8  RSL
L2C_DUT_MAP5120                0x0001180080E0A000  RSL
L2C_DUT_MAP5121                0x0001180080E0A008  RSL
L2C_DUT_MAP5122                0x0001180080E0A010  RSL
L2C_DUT_MAP5123                0x0001180080E0A018  RSL
L2C_DUT_MAP5124                0x0001180080E0A020  RSL
L2C_DUT_MAP5125                0x0001180080E0A028  RSL
L2C_DUT_MAP5126                0x0001180080E0A030  RSL
L2C_DUT_MAP5127                0x0001180080E0A038  RSL
L2C_DUT_MAP5128                0x0001180080E0A040  RSL
L2C_DUT_MAP5129                0x0001180080E0A048  RSL
L2C_DUT_MAP5130                0x0001180080E0A050  RSL
L2C_DUT_MAP5131                0x0001180080E0A058  RSL
L2C_DUT_MAP5132                0x0001180080E0A060  RSL
L2C_DUT_MAP5133                0x0001180080E0A068  RSL
L2C_DUT_MAP5134                0x0001180080E0A070  RSL
L2C_DUT_MAP5135                0x0001180080E0A078  RSL
L2C_DUT_MAP5136                0x0001180080E0A080  RSL
L2C_DUT_MAP5137                0x0001180080E0A088  RSL
L2C_DUT_MAP5138                0x0001180080E0A090  RSL
L2C_DUT_MAP5139                0x0001180080E0A098  RSL
L2C_DUT_MAP5140                0x0001180080E0A0A0  RSL
L2C_DUT_MAP5141                0x0001180080E0A0A8  RSL
L2C_DUT_MAP5142                0x0001180080E0A0B0  RSL
L2C_DUT_MAP5143                0x0001180080E0A0B8  RSL
L2C_DUT_MAP5144                0x0001180080E0A0C0  RSL
L2C_DUT_MAP5145                0x0001180080E0A0C8  RSL
L2C_DUT_MAP5146                0x0001180080E0A0D0  RSL
L2C_DUT_MAP5147                0x0001180080E0A0D8  RSL
L2C_DUT_MAP5148                0x0001180080E0A0E0  RSL
L2C_DUT_MAP5149                0x0001180080E0A0E8  RSL
L2C_DUT_MAP5150                0x0001180080E0A0F0  RSL
L2C_DUT_MAP5151                0x0001180080E0A0F8  RSL
L2C_DUT_MAP5152                0x0001180080E0A100  RSL
L2C_DUT_MAP5153                0x0001180080E0A108  RSL
L2C_DUT_MAP5154                0x0001180080E0A110  RSL
L2C_DUT_MAP5155                0x0001180080E0A118  RSL
L2C_DUT_MAP5156                0x0001180080E0A120  RSL
L2C_DUT_MAP5157                0x0001180080E0A128  RSL
L2C_DUT_MAP5158                0x0001180080E0A130  RSL
L2C_DUT_MAP5159                0x0001180080E0A138  RSL
L2C_DUT_MAP5160                0x0001180080E0A140  RSL
L2C_DUT_MAP5161                0x0001180080E0A148  RSL
L2C_DUT_MAP5162                0x0001180080E0A150  RSL
L2C_DUT_MAP5163                0x0001180080E0A158  RSL
L2C_DUT_MAP5164                0x0001180080E0A160  RSL
L2C_DUT_MAP5165                0x0001180080E0A168  RSL
L2C_DUT_MAP5166                0x0001180080E0A170  RSL
L2C_DUT_MAP5167                0x0001180080E0A178  RSL
L2C_DUT_MAP5168                0x0001180080E0A180  RSL
L2C_DUT_MAP5169                0x0001180080E0A188  RSL
L2C_DUT_MAP5170                0x0001180080E0A190  RSL
L2C_DUT_MAP5171                0x0001180080E0A198  RSL
L2C_DUT_MAP5172                0x0001180080E0A1A0  RSL
L2C_DUT_MAP5173                0x0001180080E0A1A8  RSL
L2C_DUT_MAP5174                0x0001180080E0A1B0  RSL
L2C_DUT_MAP5175                0x0001180080E0A1B8  RSL
L2C_DUT_MAP5176                0x0001180080E0A1C0  RSL
L2C_DUT_MAP5177                0x0001180080E0A1C8  RSL
L2C_DUT_MAP5178                0x0001180080E0A1D0  RSL
L2C_DUT_MAP5179                0x0001180080E0A1D8  RSL
L2C_DUT_MAP5180                0x0001180080E0A1E0  RSL
L2C_DUT_MAP5181                0x0001180080E0A1E8  RSL
L2C_DUT_MAP5182                0x0001180080E0A1F0  RSL
L2C_DUT_MAP5183                0x0001180080E0A1F8  RSL
L2C_DUT_MAP5184                0x0001180080E0A200  RSL
L2C_DUT_MAP5185                0x0001180080E0A208  RSL
L2C_DUT_MAP5186                0x0001180080E0A210  RSL
L2C_DUT_MAP5187                0x0001180080E0A218  RSL
L2C_DUT_MAP5188                0x0001180080E0A220  RSL
L2C_DUT_MAP5189                0x0001180080E0A228  RSL
L2C_DUT_MAP5190                0x0001180080E0A230  RSL
L2C_DUT_MAP5191                0x0001180080E0A238  RSL
L2C_DUT_MAP5192                0x0001180080E0A240  RSL
L2C_DUT_MAP5193                0x0001180080E0A248  RSL
L2C_DUT_MAP5194                0x0001180080E0A250  RSL
L2C_DUT_MAP5195                0x0001180080E0A258  RSL
L2C_DUT_MAP5196                0x0001180080E0A260  RSL
L2C_DUT_MAP5197                0x0001180080E0A268  RSL
L2C_DUT_MAP5198                0x0001180080E0A270  RSL
L2C_DUT_MAP5199                0x0001180080E0A278  RSL
L2C_DUT_MAP5200                0x0001180080E0A280  RSL
L2C_DUT_MAP5201                0x0001180080E0A288  RSL
L2C_DUT_MAP5202                0x0001180080E0A290  RSL
L2C_DUT_MAP5203                0x0001180080E0A298  RSL
L2C_DUT_MAP5204                0x0001180080E0A2A0  RSL
L2C_DUT_MAP5205                0x0001180080E0A2A8  RSL
L2C_DUT_MAP5206                0x0001180080E0A2B0  RSL
L2C_DUT_MAP5207                0x0001180080E0A2B8  RSL
L2C_DUT_MAP5208                0x0001180080E0A2C0  RSL
L2C_DUT_MAP5209                0x0001180080E0A2C8  RSL
L2C_DUT_MAP5210                0x0001180080E0A2D0  RSL
L2C_DUT_MAP5211                0x0001180080E0A2D8  RSL
L2C_DUT_MAP5212                0x0001180080E0A2E0  RSL
L2C_DUT_MAP5213                0x0001180080E0A2E8  RSL
L2C_DUT_MAP5214                0x0001180080E0A2F0  RSL
L2C_DUT_MAP5215                0x0001180080E0A2F8  RSL
L2C_DUT_MAP5216                0x0001180080E0A300  RSL
L2C_DUT_MAP5217                0x0001180080E0A308  RSL
L2C_DUT_MAP5218                0x0001180080E0A310  RSL
L2C_DUT_MAP5219                0x0001180080E0A318  RSL
L2C_DUT_MAP5220                0x0001180080E0A320  RSL
L2C_DUT_MAP5221                0x0001180080E0A328  RSL
L2C_DUT_MAP5222                0x0001180080E0A330  RSL
L2C_DUT_MAP5223                0x0001180080E0A338  RSL
L2C_DUT_MAP5224                0x0001180080E0A340  RSL
L2C_DUT_MAP5225                0x0001180080E0A348  RSL
L2C_DUT_MAP5226                0x0001180080E0A350  RSL
L2C_DUT_MAP5227                0x0001180080E0A358  RSL
L2C_DUT_MAP5228                0x0001180080E0A360  RSL
L2C_DUT_MAP5229                0x0001180080E0A368  RSL
L2C_DUT_MAP5230                0x0001180080E0A370  RSL
L2C_DUT_MAP5231                0x0001180080E0A378  RSL
L2C_DUT_MAP5232                0x0001180080E0A380  RSL
L2C_DUT_MAP5233                0x0001180080E0A388  RSL
L2C_DUT_MAP5234                0x0001180080E0A390  RSL
L2C_DUT_MAP5235                0x0001180080E0A398  RSL
L2C_DUT_MAP5236                0x0001180080E0A3A0  RSL
L2C_DUT_MAP5237                0x0001180080E0A3A8  RSL
L2C_DUT_MAP5238                0x0001180080E0A3B0  RSL
L2C_DUT_MAP5239                0x0001180080E0A3B8  RSL
L2C_DUT_MAP5240                0x0001180080E0A3C0  RSL
L2C_DUT_MAP5241                0x0001180080E0A3C8  RSL
L2C_DUT_MAP5242                0x0001180080E0A3D0  RSL
L2C_DUT_MAP5243                0x0001180080E0A3D8  RSL
L2C_DUT_MAP5244                0x0001180080E0A3E0  RSL
L2C_DUT_MAP5245                0x0001180080E0A3E8  RSL
L2C_DUT_MAP5246                0x0001180080E0A3F0  RSL
L2C_DUT_MAP5247                0x0001180080E0A3F8  RSL
L2C_DUT_MAP5248                0x0001180080E0A400  RSL
L2C_DUT_MAP5249                0x0001180080E0A408  RSL
L2C_DUT_MAP5250                0x0001180080E0A410  RSL
L2C_DUT_MAP5251                0x0001180080E0A418  RSL
L2C_DUT_MAP5252                0x0001180080E0A420  RSL
L2C_DUT_MAP5253                0x0001180080E0A428  RSL
L2C_DUT_MAP5254                0x0001180080E0A430  RSL
L2C_DUT_MAP5255                0x0001180080E0A438  RSL
L2C_DUT_MAP5256                0x0001180080E0A440  RSL
L2C_DUT_MAP5257                0x0001180080E0A448  RSL
L2C_DUT_MAP5258                0x0001180080E0A450  RSL
L2C_DUT_MAP5259                0x0001180080E0A458  RSL
L2C_DUT_MAP5260                0x0001180080E0A460  RSL
L2C_DUT_MAP5261                0x0001180080E0A468  RSL
L2C_DUT_MAP5262                0x0001180080E0A470  RSL
L2C_DUT_MAP5263                0x0001180080E0A478  RSL
L2C_DUT_MAP5264                0x0001180080E0A480  RSL
L2C_DUT_MAP5265                0x0001180080E0A488  RSL
L2C_DUT_MAP5266                0x0001180080E0A490  RSL
L2C_DUT_MAP5267                0x0001180080E0A498  RSL
L2C_DUT_MAP5268                0x0001180080E0A4A0  RSL
L2C_DUT_MAP5269                0x0001180080E0A4A8  RSL
L2C_DUT_MAP5270                0x0001180080E0A4B0  RSL
L2C_DUT_MAP5271                0x0001180080E0A4B8  RSL
L2C_DUT_MAP5272                0x0001180080E0A4C0  RSL
L2C_DUT_MAP5273                0x0001180080E0A4C8  RSL
L2C_DUT_MAP5274                0x0001180080E0A4D0  RSL
L2C_DUT_MAP5275                0x0001180080E0A4D8  RSL
L2C_DUT_MAP5276                0x0001180080E0A4E0  RSL
L2C_DUT_MAP5277                0x0001180080E0A4E8  RSL
L2C_DUT_MAP5278                0x0001180080E0A4F0  RSL
L2C_DUT_MAP5279                0x0001180080E0A4F8  RSL
L2C_DUT_MAP5280                0x0001180080E0A500  RSL
L2C_DUT_MAP5281                0x0001180080E0A508  RSL
L2C_DUT_MAP5282                0x0001180080E0A510  RSL
L2C_DUT_MAP5283                0x0001180080E0A518  RSL
L2C_DUT_MAP5284                0x0001180080E0A520  RSL
L2C_DUT_MAP5285                0x0001180080E0A528  RSL
L2C_DUT_MAP5286                0x0001180080E0A530  RSL
L2C_DUT_MAP5287                0x0001180080E0A538  RSL
L2C_DUT_MAP5288                0x0001180080E0A540  RSL
L2C_DUT_MAP5289                0x0001180080E0A548  RSL
L2C_DUT_MAP5290                0x0001180080E0A550  RSL
L2C_DUT_MAP5291                0x0001180080E0A558  RSL
L2C_DUT_MAP5292                0x0001180080E0A560  RSL
L2C_DUT_MAP5293                0x0001180080E0A568  RSL
L2C_DUT_MAP5294                0x0001180080E0A570  RSL
L2C_DUT_MAP5295                0x0001180080E0A578  RSL
L2C_DUT_MAP5296                0x0001180080E0A580  RSL
L2C_DUT_MAP5297                0x0001180080E0A588  RSL
L2C_DUT_MAP5298                0x0001180080E0A590  RSL
L2C_DUT_MAP5299                0x0001180080E0A598  RSL
L2C_DUT_MAP5300                0x0001180080E0A5A0  RSL
L2C_DUT_MAP5301                0x0001180080E0A5A8  RSL
L2C_DUT_MAP5302                0x0001180080E0A5B0  RSL
L2C_DUT_MAP5303                0x0001180080E0A5B8  RSL
L2C_DUT_MAP5304                0x0001180080E0A5C0  RSL
L2C_DUT_MAP5305                0x0001180080E0A5C8  RSL
L2C_DUT_MAP5306                0x0001180080E0A5D0  RSL
L2C_DUT_MAP5307                0x0001180080E0A5D8  RSL
L2C_DUT_MAP5308                0x0001180080E0A5E0  RSL
L2C_DUT_MAP5309                0x0001180080E0A5E8  RSL
L2C_DUT_MAP5310                0x0001180080E0A5F0  RSL
L2C_DUT_MAP5311                0x0001180080E0A5F8  RSL
L2C_DUT_MAP5312                0x0001180080E0A600  RSL
L2C_DUT_MAP5313                0x0001180080E0A608  RSL
L2C_DUT_MAP5314                0x0001180080E0A610  RSL
L2C_DUT_MAP5315                0x0001180080E0A618  RSL
L2C_DUT_MAP5316                0x0001180080E0A620  RSL
L2C_DUT_MAP5317                0x0001180080E0A628  RSL
L2C_DUT_MAP5318                0x0001180080E0A630  RSL
L2C_DUT_MAP5319                0x0001180080E0A638  RSL
L2C_DUT_MAP5320                0x0001180080E0A640  RSL
L2C_DUT_MAP5321                0x0001180080E0A648  RSL
L2C_DUT_MAP5322                0x0001180080E0A650  RSL
L2C_DUT_MAP5323                0x0001180080E0A658  RSL
L2C_DUT_MAP5324                0x0001180080E0A660  RSL
L2C_DUT_MAP5325                0x0001180080E0A668  RSL
L2C_DUT_MAP5326                0x0001180080E0A670  RSL
L2C_DUT_MAP5327                0x0001180080E0A678  RSL
L2C_DUT_MAP5328                0x0001180080E0A680  RSL
L2C_DUT_MAP5329                0x0001180080E0A688  RSL
L2C_DUT_MAP5330                0x0001180080E0A690  RSL
L2C_DUT_MAP5331                0x0001180080E0A698  RSL
L2C_DUT_MAP5332                0x0001180080E0A6A0  RSL
L2C_DUT_MAP5333                0x0001180080E0A6A8  RSL
L2C_DUT_MAP5334                0x0001180080E0A6B0  RSL
L2C_DUT_MAP5335                0x0001180080E0A6B8  RSL
L2C_DUT_MAP5336                0x0001180080E0A6C0  RSL
L2C_DUT_MAP5337                0x0001180080E0A6C8  RSL
L2C_DUT_MAP5338                0x0001180080E0A6D0  RSL
L2C_DUT_MAP5339                0x0001180080E0A6D8  RSL
L2C_DUT_MAP5340                0x0001180080E0A6E0  RSL
L2C_DUT_MAP5341                0x0001180080E0A6E8  RSL
L2C_DUT_MAP5342                0x0001180080E0A6F0  RSL
L2C_DUT_MAP5343                0x0001180080E0A6F8  RSL
L2C_DUT_MAP5344                0x0001180080E0A700  RSL
L2C_DUT_MAP5345                0x0001180080E0A708  RSL
L2C_DUT_MAP5346                0x0001180080E0A710  RSL
L2C_DUT_MAP5347                0x0001180080E0A718  RSL
L2C_DUT_MAP5348                0x0001180080E0A720  RSL
L2C_DUT_MAP5349                0x0001180080E0A728  RSL
L2C_DUT_MAP5350                0x0001180080E0A730  RSL
L2C_DUT_MAP5351                0x0001180080E0A738  RSL
L2C_DUT_MAP5352                0x0001180080E0A740  RSL
L2C_DUT_MAP5353                0x0001180080E0A748  RSL
L2C_DUT_MAP5354                0x0001180080E0A750  RSL
L2C_DUT_MAP5355                0x0001180080E0A758  RSL
L2C_DUT_MAP5356                0x0001180080E0A760  RSL
L2C_DUT_MAP5357                0x0001180080E0A768  RSL
L2C_DUT_MAP5358                0x0001180080E0A770  RSL
L2C_DUT_MAP5359                0x0001180080E0A778  RSL
L2C_DUT_MAP5360                0x0001180080E0A780  RSL
L2C_DUT_MAP5361                0x0001180080E0A788  RSL
L2C_DUT_MAP5362                0x0001180080E0A790  RSL
L2C_DUT_MAP5363                0x0001180080E0A798  RSL
L2C_DUT_MAP5364                0x0001180080E0A7A0  RSL
L2C_DUT_MAP5365                0x0001180080E0A7A8  RSL
L2C_DUT_MAP5366                0x0001180080E0A7B0  RSL
L2C_DUT_MAP5367                0x0001180080E0A7B8  RSL
L2C_DUT_MAP5368                0x0001180080E0A7C0  RSL
L2C_DUT_MAP5369                0x0001180080E0A7C8  RSL
L2C_DUT_MAP5370                0x0001180080E0A7D0  RSL
L2C_DUT_MAP5371                0x0001180080E0A7D8  RSL
L2C_DUT_MAP5372                0x0001180080E0A7E0  RSL
L2C_DUT_MAP5373                0x0001180080E0A7E8  RSL
L2C_DUT_MAP5374                0x0001180080E0A7F0  RSL
L2C_DUT_MAP5375                0x0001180080E0A7F8  RSL
L2C_DUT_MAP5376                0x0001180080E0A800  RSL
L2C_DUT_MAP5377                0x0001180080E0A808  RSL
L2C_DUT_MAP5378                0x0001180080E0A810  RSL
L2C_DUT_MAP5379                0x0001180080E0A818  RSL
L2C_DUT_MAP5380                0x0001180080E0A820  RSL
L2C_DUT_MAP5381                0x0001180080E0A828  RSL
L2C_DUT_MAP5382                0x0001180080E0A830  RSL
L2C_DUT_MAP5383                0x0001180080E0A838  RSL
L2C_DUT_MAP5384                0x0001180080E0A840  RSL
L2C_DUT_MAP5385                0x0001180080E0A848  RSL
L2C_DUT_MAP5386                0x0001180080E0A850  RSL
L2C_DUT_MAP5387                0x0001180080E0A858  RSL
L2C_DUT_MAP5388                0x0001180080E0A860  RSL
L2C_DUT_MAP5389                0x0001180080E0A868  RSL
L2C_DUT_MAP5390                0x0001180080E0A870  RSL
L2C_DUT_MAP5391                0x0001180080E0A878  RSL
L2C_DUT_MAP5392                0x0001180080E0A880  RSL
L2C_DUT_MAP5393                0x0001180080E0A888  RSL
L2C_DUT_MAP5394                0x0001180080E0A890  RSL
L2C_DUT_MAP5395                0x0001180080E0A898  RSL
L2C_DUT_MAP5396                0x0001180080E0A8A0  RSL
L2C_DUT_MAP5397                0x0001180080E0A8A8  RSL
L2C_DUT_MAP5398                0x0001180080E0A8B0  RSL
L2C_DUT_MAP5399                0x0001180080E0A8B8  RSL
L2C_DUT_MAP5400                0x0001180080E0A8C0  RSL
L2C_DUT_MAP5401                0x0001180080E0A8C8  RSL
L2C_DUT_MAP5402                0x0001180080E0A8D0  RSL
L2C_DUT_MAP5403                0x0001180080E0A8D8  RSL
L2C_DUT_MAP5404                0x0001180080E0A8E0  RSL
L2C_DUT_MAP5405                0x0001180080E0A8E8  RSL
L2C_DUT_MAP5406                0x0001180080E0A8F0  RSL
L2C_DUT_MAP5407                0x0001180080E0A8F8  RSL
L2C_DUT_MAP5408                0x0001180080E0A900  RSL
L2C_DUT_MAP5409                0x0001180080E0A908  RSL
L2C_DUT_MAP5410                0x0001180080E0A910  RSL
L2C_DUT_MAP5411                0x0001180080E0A918  RSL
L2C_DUT_MAP5412                0x0001180080E0A920  RSL
L2C_DUT_MAP5413                0x0001180080E0A928  RSL
L2C_DUT_MAP5414                0x0001180080E0A930  RSL
L2C_DUT_MAP5415                0x0001180080E0A938  RSL
L2C_DUT_MAP5416                0x0001180080E0A940  RSL
L2C_DUT_MAP5417                0x0001180080E0A948  RSL
L2C_DUT_MAP5418                0x0001180080E0A950  RSL
L2C_DUT_MAP5419                0x0001180080E0A958  RSL
L2C_DUT_MAP5420                0x0001180080E0A960  RSL
L2C_DUT_MAP5421                0x0001180080E0A968  RSL
L2C_DUT_MAP5422                0x0001180080E0A970  RSL
L2C_DUT_MAP5423                0x0001180080E0A978  RSL
L2C_DUT_MAP5424                0x0001180080E0A980  RSL
L2C_DUT_MAP5425                0x0001180080E0A988  RSL
L2C_DUT_MAP5426                0x0001180080E0A990  RSL
L2C_DUT_MAP5427                0x0001180080E0A998  RSL
L2C_DUT_MAP5428                0x0001180080E0A9A0  RSL
L2C_DUT_MAP5429                0x0001180080E0A9A8  RSL
L2C_DUT_MAP5430                0x0001180080E0A9B0  RSL
L2C_DUT_MAP5431                0x0001180080E0A9B8  RSL
L2C_DUT_MAP5432                0x0001180080E0A9C0  RSL
L2C_DUT_MAP5433                0x0001180080E0A9C8  RSL
L2C_DUT_MAP5434                0x0001180080E0A9D0  RSL
L2C_DUT_MAP5435                0x0001180080E0A9D8  RSL
L2C_DUT_MAP5436                0x0001180080E0A9E0  RSL
L2C_DUT_MAP5437                0x0001180080E0A9E8  RSL
L2C_DUT_MAP5438                0x0001180080E0A9F0  RSL
L2C_DUT_MAP5439                0x0001180080E0A9F8  RSL
L2C_DUT_MAP5440                0x0001180080E0AA00  RSL
L2C_DUT_MAP5441                0x0001180080E0AA08  RSL
L2C_DUT_MAP5442                0x0001180080E0AA10  RSL
L2C_DUT_MAP5443                0x0001180080E0AA18  RSL
L2C_DUT_MAP5444                0x0001180080E0AA20  RSL
L2C_DUT_MAP5445                0x0001180080E0AA28  RSL
L2C_DUT_MAP5446                0x0001180080E0AA30  RSL
L2C_DUT_MAP5447                0x0001180080E0AA38  RSL
L2C_DUT_MAP5448                0x0001180080E0AA40  RSL
L2C_DUT_MAP5449                0x0001180080E0AA48  RSL
L2C_DUT_MAP5450                0x0001180080E0AA50  RSL
L2C_DUT_MAP5451                0x0001180080E0AA58  RSL
L2C_DUT_MAP5452                0x0001180080E0AA60  RSL
L2C_DUT_MAP5453                0x0001180080E0AA68  RSL
L2C_DUT_MAP5454                0x0001180080E0AA70  RSL
L2C_DUT_MAP5455                0x0001180080E0AA78  RSL
L2C_DUT_MAP5456                0x0001180080E0AA80  RSL
L2C_DUT_MAP5457                0x0001180080E0AA88  RSL
L2C_DUT_MAP5458                0x0001180080E0AA90  RSL
L2C_DUT_MAP5459                0x0001180080E0AA98  RSL
L2C_DUT_MAP5460                0x0001180080E0AAA0  RSL
L2C_DUT_MAP5461                0x0001180080E0AAA8  RSL
L2C_DUT_MAP5462                0x0001180080E0AAB0  RSL
L2C_DUT_MAP5463                0x0001180080E0AAB8  RSL
L2C_DUT_MAP5464                0x0001180080E0AAC0  RSL
L2C_DUT_MAP5465                0x0001180080E0AAC8  RSL
L2C_DUT_MAP5466                0x0001180080E0AAD0  RSL
L2C_DUT_MAP5467                0x0001180080E0AAD8  RSL
L2C_DUT_MAP5468                0x0001180080E0AAE0  RSL
L2C_DUT_MAP5469                0x0001180080E0AAE8  RSL
L2C_DUT_MAP5470                0x0001180080E0AAF0  RSL
L2C_DUT_MAP5471                0x0001180080E0AAF8  RSL
L2C_DUT_MAP5472                0x0001180080E0AB00  RSL
L2C_DUT_MAP5473                0x0001180080E0AB08  RSL
L2C_DUT_MAP5474                0x0001180080E0AB10  RSL
L2C_DUT_MAP5475                0x0001180080E0AB18  RSL
L2C_DUT_MAP5476                0x0001180080E0AB20  RSL
L2C_DUT_MAP5477                0x0001180080E0AB28  RSL
L2C_DUT_MAP5478                0x0001180080E0AB30  RSL
L2C_DUT_MAP5479                0x0001180080E0AB38  RSL
L2C_DUT_MAP5480                0x0001180080E0AB40  RSL
L2C_DUT_MAP5481                0x0001180080E0AB48  RSL
L2C_DUT_MAP5482                0x0001180080E0AB50  RSL
L2C_DUT_MAP5483                0x0001180080E0AB58  RSL
L2C_DUT_MAP5484                0x0001180080E0AB60  RSL
L2C_DUT_MAP5485                0x0001180080E0AB68  RSL
L2C_DUT_MAP5486                0x0001180080E0AB70  RSL
L2C_DUT_MAP5487                0x0001180080E0AB78  RSL
L2C_DUT_MAP5488                0x0001180080E0AB80  RSL
L2C_DUT_MAP5489                0x0001180080E0AB88  RSL
L2C_DUT_MAP5490                0x0001180080E0AB90  RSL
L2C_DUT_MAP5491                0x0001180080E0AB98  RSL
L2C_DUT_MAP5492                0x0001180080E0ABA0  RSL
L2C_DUT_MAP5493                0x0001180080E0ABA8  RSL
L2C_DUT_MAP5494                0x0001180080E0ABB0  RSL
L2C_DUT_MAP5495                0x0001180080E0ABB8  RSL
L2C_DUT_MAP5496                0x0001180080E0ABC0  RSL
L2C_DUT_MAP5497                0x0001180080E0ABC8  RSL
L2C_DUT_MAP5498                0x0001180080E0ABD0  RSL
L2C_DUT_MAP5499                0x0001180080E0ABD8  RSL
L2C_DUT_MAP5500                0x0001180080E0ABE0  RSL
L2C_DUT_MAP5501                0x0001180080E0ABE8  RSL
L2C_DUT_MAP5502                0x0001180080E0ABF0  RSL
L2C_DUT_MAP5503                0x0001180080E0ABF8  RSL
L2C_DUT_MAP5504                0x0001180080E0AC00  RSL
L2C_DUT_MAP5505                0x0001180080E0AC08  RSL
L2C_DUT_MAP5506                0x0001180080E0AC10  RSL
L2C_DUT_MAP5507                0x0001180080E0AC18  RSL
L2C_DUT_MAP5508                0x0001180080E0AC20  RSL
L2C_DUT_MAP5509                0x0001180080E0AC28  RSL
L2C_DUT_MAP5510                0x0001180080E0AC30  RSL
L2C_DUT_MAP5511                0x0001180080E0AC38  RSL
L2C_DUT_MAP5512                0x0001180080E0AC40  RSL
L2C_DUT_MAP5513                0x0001180080E0AC48  RSL
L2C_DUT_MAP5514                0x0001180080E0AC50  RSL
L2C_DUT_MAP5515                0x0001180080E0AC58  RSL
L2C_DUT_MAP5516                0x0001180080E0AC60  RSL
L2C_DUT_MAP5517                0x0001180080E0AC68  RSL
L2C_DUT_MAP5518                0x0001180080E0AC70  RSL
L2C_DUT_MAP5519                0x0001180080E0AC78  RSL
L2C_DUT_MAP5520                0x0001180080E0AC80  RSL
L2C_DUT_MAP5521                0x0001180080E0AC88  RSL
L2C_DUT_MAP5522                0x0001180080E0AC90  RSL
L2C_DUT_MAP5523                0x0001180080E0AC98  RSL
L2C_DUT_MAP5524                0x0001180080E0ACA0  RSL
L2C_DUT_MAP5525                0x0001180080E0ACA8  RSL
L2C_DUT_MAP5526                0x0001180080E0ACB0  RSL
L2C_DUT_MAP5527                0x0001180080E0ACB8  RSL
L2C_DUT_MAP5528                0x0001180080E0ACC0  RSL
L2C_DUT_MAP5529                0x0001180080E0ACC8  RSL
L2C_DUT_MAP5530                0x0001180080E0ACD0  RSL
L2C_DUT_MAP5531                0x0001180080E0ACD8  RSL
L2C_DUT_MAP5532                0x0001180080E0ACE0  RSL
L2C_DUT_MAP5533                0x0001180080E0ACE8  RSL
L2C_DUT_MAP5534                0x0001180080E0ACF0  RSL
L2C_DUT_MAP5535                0x0001180080E0ACF8  RSL
L2C_DUT_MAP5536                0x0001180080E0AD00  RSL
L2C_DUT_MAP5537                0x0001180080E0AD08  RSL
L2C_DUT_MAP5538                0x0001180080E0AD10  RSL
L2C_DUT_MAP5539                0x0001180080E0AD18  RSL
L2C_DUT_MAP5540                0x0001180080E0AD20  RSL
L2C_DUT_MAP5541                0x0001180080E0AD28  RSL
L2C_DUT_MAP5542                0x0001180080E0AD30  RSL
L2C_DUT_MAP5543                0x0001180080E0AD38  RSL
L2C_DUT_MAP5544                0x0001180080E0AD40  RSL
L2C_DUT_MAP5545                0x0001180080E0AD48  RSL
L2C_DUT_MAP5546                0x0001180080E0AD50  RSL
L2C_DUT_MAP5547                0x0001180080E0AD58  RSL
L2C_DUT_MAP5548                0x0001180080E0AD60  RSL
L2C_DUT_MAP5549                0x0001180080E0AD68  RSL
L2C_DUT_MAP5550                0x0001180080E0AD70  RSL
L2C_DUT_MAP5551                0x0001180080E0AD78  RSL
L2C_DUT_MAP5552                0x0001180080E0AD80  RSL
L2C_DUT_MAP5553                0x0001180080E0AD88  RSL
L2C_DUT_MAP5554                0x0001180080E0AD90  RSL
L2C_DUT_MAP5555                0x0001180080E0AD98  RSL
L2C_DUT_MAP5556                0x0001180080E0ADA0  RSL
L2C_DUT_MAP5557                0x0001180080E0ADA8  RSL
L2C_DUT_MAP5558                0x0001180080E0ADB0  RSL
L2C_DUT_MAP5559                0x0001180080E0ADB8  RSL
L2C_DUT_MAP5560                0x0001180080E0ADC0  RSL
L2C_DUT_MAP5561                0x0001180080E0ADC8  RSL
L2C_DUT_MAP5562                0x0001180080E0ADD0  RSL
L2C_DUT_MAP5563                0x0001180080E0ADD8  RSL
L2C_DUT_MAP5564                0x0001180080E0ADE0  RSL
L2C_DUT_MAP5565                0x0001180080E0ADE8  RSL
L2C_DUT_MAP5566                0x0001180080E0ADF0  RSL
L2C_DUT_MAP5567                0x0001180080E0ADF8  RSL
L2C_DUT_MAP5568                0x0001180080E0AE00  RSL
L2C_DUT_MAP5569                0x0001180080E0AE08  RSL
L2C_DUT_MAP5570                0x0001180080E0AE10  RSL
L2C_DUT_MAP5571                0x0001180080E0AE18  RSL
L2C_DUT_MAP5572                0x0001180080E0AE20  RSL
L2C_DUT_MAP5573                0x0001180080E0AE28  RSL
L2C_DUT_MAP5574                0x0001180080E0AE30  RSL
L2C_DUT_MAP5575                0x0001180080E0AE38  RSL
L2C_DUT_MAP5576                0x0001180080E0AE40  RSL
L2C_DUT_MAP5577                0x0001180080E0AE48  RSL
L2C_DUT_MAP5578                0x0001180080E0AE50  RSL
L2C_DUT_MAP5579                0x0001180080E0AE58  RSL
L2C_DUT_MAP5580                0x0001180080E0AE60  RSL
L2C_DUT_MAP5581                0x0001180080E0AE68  RSL
L2C_DUT_MAP5582                0x0001180080E0AE70  RSL
L2C_DUT_MAP5583                0x0001180080E0AE78  RSL
L2C_DUT_MAP5584                0x0001180080E0AE80  RSL
L2C_DUT_MAP5585                0x0001180080E0AE88  RSL
L2C_DUT_MAP5586                0x0001180080E0AE90  RSL
L2C_DUT_MAP5587                0x0001180080E0AE98  RSL
L2C_DUT_MAP5588                0x0001180080E0AEA0  RSL
L2C_DUT_MAP5589                0x0001180080E0AEA8  RSL
L2C_DUT_MAP5590                0x0001180080E0AEB0  RSL
L2C_DUT_MAP5591                0x0001180080E0AEB8  RSL
L2C_DUT_MAP5592                0x0001180080E0AEC0  RSL
L2C_DUT_MAP5593                0x0001180080E0AEC8  RSL
L2C_DUT_MAP5594                0x0001180080E0AED0  RSL
L2C_DUT_MAP5595                0x0001180080E0AED8  RSL
L2C_DUT_MAP5596                0x0001180080E0AEE0  RSL
L2C_DUT_MAP5597                0x0001180080E0AEE8  RSL
L2C_DUT_MAP5598                0x0001180080E0AEF0  RSL
L2C_DUT_MAP5599                0x0001180080E0AEF8  RSL
L2C_DUT_MAP5600                0x0001180080E0AF00  RSL
L2C_DUT_MAP5601                0x0001180080E0AF08  RSL
L2C_DUT_MAP5602                0x0001180080E0AF10  RSL
L2C_DUT_MAP5603                0x0001180080E0AF18  RSL
L2C_DUT_MAP5604                0x0001180080E0AF20  RSL
L2C_DUT_MAP5605                0x0001180080E0AF28  RSL
L2C_DUT_MAP5606                0x0001180080E0AF30  RSL
L2C_DUT_MAP5607                0x0001180080E0AF38  RSL
L2C_DUT_MAP5608                0x0001180080E0AF40  RSL
L2C_DUT_MAP5609                0x0001180080E0AF48  RSL
L2C_DUT_MAP5610                0x0001180080E0AF50  RSL
L2C_DUT_MAP5611                0x0001180080E0AF58  RSL
L2C_DUT_MAP5612                0x0001180080E0AF60  RSL
L2C_DUT_MAP5613                0x0001180080E0AF68  RSL
L2C_DUT_MAP5614                0x0001180080E0AF70  RSL
L2C_DUT_MAP5615                0x0001180080E0AF78  RSL
L2C_DUT_MAP5616                0x0001180080E0AF80  RSL
L2C_DUT_MAP5617                0x0001180080E0AF88  RSL
L2C_DUT_MAP5618                0x0001180080E0AF90  RSL
L2C_DUT_MAP5619                0x0001180080E0AF98  RSL
L2C_DUT_MAP5620                0x0001180080E0AFA0  RSL
L2C_DUT_MAP5621                0x0001180080E0AFA8  RSL
L2C_DUT_MAP5622                0x0001180080E0AFB0  RSL
L2C_DUT_MAP5623                0x0001180080E0AFB8  RSL
L2C_DUT_MAP5624                0x0001180080E0AFC0  RSL
L2C_DUT_MAP5625                0x0001180080E0AFC8  RSL
L2C_DUT_MAP5626                0x0001180080E0AFD0  RSL
L2C_DUT_MAP5627                0x0001180080E0AFD8  RSL
L2C_DUT_MAP5628                0x0001180080E0AFE0  RSL
L2C_DUT_MAP5629                0x0001180080E0AFE8  RSL
L2C_DUT_MAP5630                0x0001180080E0AFF0  RSL
L2C_DUT_MAP5631                0x0001180080E0AFF8  RSL
L2C_DUT_MAP5632                0x0001180080E0B000  RSL
L2C_DUT_MAP5633                0x0001180080E0B008  RSL
L2C_DUT_MAP5634                0x0001180080E0B010  RSL
L2C_DUT_MAP5635                0x0001180080E0B018  RSL
L2C_DUT_MAP5636                0x0001180080E0B020  RSL
L2C_DUT_MAP5637                0x0001180080E0B028  RSL
L2C_DUT_MAP5638                0x0001180080E0B030  RSL
L2C_DUT_MAP5639                0x0001180080E0B038  RSL
L2C_DUT_MAP5640                0x0001180080E0B040  RSL
L2C_DUT_MAP5641                0x0001180080E0B048  RSL
L2C_DUT_MAP5642                0x0001180080E0B050  RSL
L2C_DUT_MAP5643                0x0001180080E0B058  RSL
L2C_DUT_MAP5644                0x0001180080E0B060  RSL
L2C_DUT_MAP5645                0x0001180080E0B068  RSL
L2C_DUT_MAP5646                0x0001180080E0B070  RSL
L2C_DUT_MAP5647                0x0001180080E0B078  RSL
L2C_DUT_MAP5648                0x0001180080E0B080  RSL
L2C_DUT_MAP5649                0x0001180080E0B088  RSL
L2C_DUT_MAP5650                0x0001180080E0B090  RSL
L2C_DUT_MAP5651                0x0001180080E0B098  RSL
L2C_DUT_MAP5652                0x0001180080E0B0A0  RSL
L2C_DUT_MAP5653                0x0001180080E0B0A8  RSL
L2C_DUT_MAP5654                0x0001180080E0B0B0  RSL
L2C_DUT_MAP5655                0x0001180080E0B0B8  RSL
L2C_DUT_MAP5656                0x0001180080E0B0C0  RSL
L2C_DUT_MAP5657                0x0001180080E0B0C8  RSL
L2C_DUT_MAP5658                0x0001180080E0B0D0  RSL
L2C_DUT_MAP5659                0x0001180080E0B0D8  RSL
L2C_DUT_MAP5660                0x0001180080E0B0E0  RSL
L2C_DUT_MAP5661                0x0001180080E0B0E8  RSL
L2C_DUT_MAP5662                0x0001180080E0B0F0  RSL
L2C_DUT_MAP5663                0x0001180080E0B0F8  RSL
L2C_DUT_MAP5664                0x0001180080E0B100  RSL
L2C_DUT_MAP5665                0x0001180080E0B108  RSL
L2C_DUT_MAP5666                0x0001180080E0B110  RSL
L2C_DUT_MAP5667                0x0001180080E0B118  RSL
L2C_DUT_MAP5668                0x0001180080E0B120  RSL
L2C_DUT_MAP5669                0x0001180080E0B128  RSL
L2C_DUT_MAP5670                0x0001180080E0B130  RSL
L2C_DUT_MAP5671                0x0001180080E0B138  RSL
L2C_DUT_MAP5672                0x0001180080E0B140  RSL
L2C_DUT_MAP5673                0x0001180080E0B148  RSL
L2C_DUT_MAP5674                0x0001180080E0B150  RSL
L2C_DUT_MAP5675                0x0001180080E0B158  RSL
L2C_DUT_MAP5676                0x0001180080E0B160  RSL
L2C_DUT_MAP5677                0x0001180080E0B168  RSL
L2C_DUT_MAP5678                0x0001180080E0B170  RSL
L2C_DUT_MAP5679                0x0001180080E0B178  RSL
L2C_DUT_MAP5680                0x0001180080E0B180  RSL
L2C_DUT_MAP5681                0x0001180080E0B188  RSL
L2C_DUT_MAP5682                0x0001180080E0B190  RSL
L2C_DUT_MAP5683                0x0001180080E0B198  RSL
L2C_DUT_MAP5684                0x0001180080E0B1A0  RSL
L2C_DUT_MAP5685                0x0001180080E0B1A8  RSL
L2C_DUT_MAP5686                0x0001180080E0B1B0  RSL
L2C_DUT_MAP5687                0x0001180080E0B1B8  RSL
L2C_DUT_MAP5688                0x0001180080E0B1C0  RSL
L2C_DUT_MAP5689                0x0001180080E0B1C8  RSL
L2C_DUT_MAP5690                0x0001180080E0B1D0  RSL
L2C_DUT_MAP5691                0x0001180080E0B1D8  RSL
L2C_DUT_MAP5692                0x0001180080E0B1E0  RSL
L2C_DUT_MAP5693                0x0001180080E0B1E8  RSL
L2C_DUT_MAP5694                0x0001180080E0B1F0  RSL
L2C_DUT_MAP5695                0x0001180080E0B1F8  RSL
L2C_DUT_MAP5696                0x0001180080E0B200  RSL
L2C_DUT_MAP5697                0x0001180080E0B208  RSL
L2C_DUT_MAP5698                0x0001180080E0B210  RSL
L2C_DUT_MAP5699                0x0001180080E0B218  RSL
L2C_DUT_MAP5700                0x0001180080E0B220  RSL
L2C_DUT_MAP5701                0x0001180080E0B228  RSL
L2C_DUT_MAP5702                0x0001180080E0B230  RSL
L2C_DUT_MAP5703                0x0001180080E0B238  RSL
L2C_DUT_MAP5704                0x0001180080E0B240  RSL
L2C_DUT_MAP5705                0x0001180080E0B248  RSL
L2C_DUT_MAP5706                0x0001180080E0B250  RSL
L2C_DUT_MAP5707                0x0001180080E0B258  RSL
L2C_DUT_MAP5708                0x0001180080E0B260  RSL
L2C_DUT_MAP5709                0x0001180080E0B268  RSL
L2C_DUT_MAP5710                0x0001180080E0B270  RSL
L2C_DUT_MAP5711                0x0001180080E0B278  RSL
L2C_DUT_MAP5712                0x0001180080E0B280  RSL
L2C_DUT_MAP5713                0x0001180080E0B288  RSL
L2C_DUT_MAP5714                0x0001180080E0B290  RSL
L2C_DUT_MAP5715                0x0001180080E0B298  RSL
L2C_DUT_MAP5716                0x0001180080E0B2A0  RSL
L2C_DUT_MAP5717                0x0001180080E0B2A8  RSL
L2C_DUT_MAP5718                0x0001180080E0B2B0  RSL
L2C_DUT_MAP5719                0x0001180080E0B2B8  RSL
L2C_DUT_MAP5720                0x0001180080E0B2C0  RSL
L2C_DUT_MAP5721                0x0001180080E0B2C8  RSL
L2C_DUT_MAP5722                0x0001180080E0B2D0  RSL
L2C_DUT_MAP5723                0x0001180080E0B2D8  RSL
L2C_DUT_MAP5724                0x0001180080E0B2E0  RSL
L2C_DUT_MAP5725                0x0001180080E0B2E8  RSL
L2C_DUT_MAP5726                0x0001180080E0B2F0  RSL
L2C_DUT_MAP5727                0x0001180080E0B2F8  RSL
L2C_DUT_MAP5728                0x0001180080E0B300  RSL
L2C_DUT_MAP5729                0x0001180080E0B308  RSL
L2C_DUT_MAP5730                0x0001180080E0B310  RSL
L2C_DUT_MAP5731                0x0001180080E0B318  RSL
L2C_DUT_MAP5732                0x0001180080E0B320  RSL
L2C_DUT_MAP5733                0x0001180080E0B328  RSL
L2C_DUT_MAP5734                0x0001180080E0B330  RSL
L2C_DUT_MAP5735                0x0001180080E0B338  RSL
L2C_DUT_MAP5736                0x0001180080E0B340  RSL
L2C_DUT_MAP5737                0x0001180080E0B348  RSL
L2C_DUT_MAP5738                0x0001180080E0B350  RSL
L2C_DUT_MAP5739                0x0001180080E0B358  RSL
L2C_DUT_MAP5740                0x0001180080E0B360  RSL
L2C_DUT_MAP5741                0x0001180080E0B368  RSL
L2C_DUT_MAP5742                0x0001180080E0B370  RSL
L2C_DUT_MAP5743                0x0001180080E0B378  RSL
L2C_DUT_MAP5744                0x0001180080E0B380  RSL
L2C_DUT_MAP5745                0x0001180080E0B388  RSL
L2C_DUT_MAP5746                0x0001180080E0B390  RSL
L2C_DUT_MAP5747                0x0001180080E0B398  RSL
L2C_DUT_MAP5748                0x0001180080E0B3A0  RSL
L2C_DUT_MAP5749                0x0001180080E0B3A8  RSL
L2C_DUT_MAP5750                0x0001180080E0B3B0  RSL
L2C_DUT_MAP5751                0x0001180080E0B3B8  RSL
L2C_DUT_MAP5752                0x0001180080E0B3C0  RSL
L2C_DUT_MAP5753                0x0001180080E0B3C8  RSL
L2C_DUT_MAP5754                0x0001180080E0B3D0  RSL
L2C_DUT_MAP5755                0x0001180080E0B3D8  RSL
L2C_DUT_MAP5756                0x0001180080E0B3E0  RSL
L2C_DUT_MAP5757                0x0001180080E0B3E8  RSL
L2C_DUT_MAP5758                0x0001180080E0B3F0  RSL
L2C_DUT_MAP5759                0x0001180080E0B3F8  RSL
L2C_DUT_MAP5760                0x0001180080E0B400  RSL
L2C_DUT_MAP5761                0x0001180080E0B408  RSL
L2C_DUT_MAP5762                0x0001180080E0B410  RSL
L2C_DUT_MAP5763                0x0001180080E0B418  RSL
L2C_DUT_MAP5764                0x0001180080E0B420  RSL
L2C_DUT_MAP5765                0x0001180080E0B428  RSL
L2C_DUT_MAP5766                0x0001180080E0B430  RSL
L2C_DUT_MAP5767                0x0001180080E0B438  RSL
L2C_DUT_MAP5768                0x0001180080E0B440  RSL
L2C_DUT_MAP5769                0x0001180080E0B448  RSL
L2C_DUT_MAP5770                0x0001180080E0B450  RSL
L2C_DUT_MAP5771                0x0001180080E0B458  RSL
L2C_DUT_MAP5772                0x0001180080E0B460  RSL
L2C_DUT_MAP5773                0x0001180080E0B468  RSL
L2C_DUT_MAP5774                0x0001180080E0B470  RSL
L2C_DUT_MAP5775                0x0001180080E0B478  RSL
L2C_DUT_MAP5776                0x0001180080E0B480  RSL
L2C_DUT_MAP5777                0x0001180080E0B488  RSL
L2C_DUT_MAP5778                0x0001180080E0B490  RSL
L2C_DUT_MAP5779                0x0001180080E0B498  RSL
L2C_DUT_MAP5780                0x0001180080E0B4A0  RSL
L2C_DUT_MAP5781                0x0001180080E0B4A8  RSL
L2C_DUT_MAP5782                0x0001180080E0B4B0  RSL
L2C_DUT_MAP5783                0x0001180080E0B4B8  RSL
L2C_DUT_MAP5784                0x0001180080E0B4C0  RSL
L2C_DUT_MAP5785                0x0001180080E0B4C8  RSL
L2C_DUT_MAP5786                0x0001180080E0B4D0  RSL
L2C_DUT_MAP5787                0x0001180080E0B4D8  RSL
L2C_DUT_MAP5788                0x0001180080E0B4E0  RSL
L2C_DUT_MAP5789                0x0001180080E0B4E8  RSL
L2C_DUT_MAP5790                0x0001180080E0B4F0  RSL
L2C_DUT_MAP5791                0x0001180080E0B4F8  RSL
L2C_DUT_MAP5792                0x0001180080E0B500  RSL
L2C_DUT_MAP5793                0x0001180080E0B508  RSL
L2C_DUT_MAP5794                0x0001180080E0B510  RSL
L2C_DUT_MAP5795                0x0001180080E0B518  RSL
L2C_DUT_MAP5796                0x0001180080E0B520  RSL
L2C_DUT_MAP5797                0x0001180080E0B528  RSL
L2C_DUT_MAP5798                0x0001180080E0B530  RSL
L2C_DUT_MAP5799                0x0001180080E0B538  RSL
L2C_DUT_MAP5800                0x0001180080E0B540  RSL
L2C_DUT_MAP5801                0x0001180080E0B548  RSL
L2C_DUT_MAP5802                0x0001180080E0B550  RSL
L2C_DUT_MAP5803                0x0001180080E0B558  RSL
L2C_DUT_MAP5804                0x0001180080E0B560  RSL
L2C_DUT_MAP5805                0x0001180080E0B568  RSL
L2C_DUT_MAP5806                0x0001180080E0B570  RSL
L2C_DUT_MAP5807                0x0001180080E0B578  RSL
L2C_DUT_MAP5808                0x0001180080E0B580  RSL
L2C_DUT_MAP5809                0x0001180080E0B588  RSL
L2C_DUT_MAP5810                0x0001180080E0B590  RSL
L2C_DUT_MAP5811                0x0001180080E0B598  RSL
L2C_DUT_MAP5812                0x0001180080E0B5A0  RSL
L2C_DUT_MAP5813                0x0001180080E0B5A8  RSL
L2C_DUT_MAP5814                0x0001180080E0B5B0  RSL
L2C_DUT_MAP5815                0x0001180080E0B5B8  RSL
L2C_DUT_MAP5816                0x0001180080E0B5C0  RSL
L2C_DUT_MAP5817                0x0001180080E0B5C8  RSL
L2C_DUT_MAP5818                0x0001180080E0B5D0  RSL
L2C_DUT_MAP5819                0x0001180080E0B5D8  RSL
L2C_DUT_MAP5820                0x0001180080E0B5E0  RSL
L2C_DUT_MAP5821                0x0001180080E0B5E8  RSL
L2C_DUT_MAP5822                0x0001180080E0B5F0  RSL
L2C_DUT_MAP5823                0x0001180080E0B5F8  RSL
L2C_DUT_MAP5824                0x0001180080E0B600  RSL
L2C_DUT_MAP5825                0x0001180080E0B608  RSL
L2C_DUT_MAP5826                0x0001180080E0B610  RSL
L2C_DUT_MAP5827                0x0001180080E0B618  RSL
L2C_DUT_MAP5828                0x0001180080E0B620  RSL
L2C_DUT_MAP5829                0x0001180080E0B628  RSL
L2C_DUT_MAP5830                0x0001180080E0B630  RSL
L2C_DUT_MAP5831                0x0001180080E0B638  RSL
L2C_DUT_MAP5832                0x0001180080E0B640  RSL
L2C_DUT_MAP5833                0x0001180080E0B648  RSL
L2C_DUT_MAP5834                0x0001180080E0B650  RSL
L2C_DUT_MAP5835                0x0001180080E0B658  RSL
L2C_DUT_MAP5836                0x0001180080E0B660  RSL
L2C_DUT_MAP5837                0x0001180080E0B668  RSL
L2C_DUT_MAP5838                0x0001180080E0B670  RSL
L2C_DUT_MAP5839                0x0001180080E0B678  RSL
L2C_DUT_MAP5840                0x0001180080E0B680  RSL
L2C_DUT_MAP5841                0x0001180080E0B688  RSL
L2C_DUT_MAP5842                0x0001180080E0B690  RSL
L2C_DUT_MAP5843                0x0001180080E0B698  RSL
L2C_DUT_MAP5844                0x0001180080E0B6A0  RSL
L2C_DUT_MAP5845                0x0001180080E0B6A8  RSL
L2C_DUT_MAP5846                0x0001180080E0B6B0  RSL
L2C_DUT_MAP5847                0x0001180080E0B6B8  RSL
L2C_DUT_MAP5848                0x0001180080E0B6C0  RSL
L2C_DUT_MAP5849                0x0001180080E0B6C8  RSL
L2C_DUT_MAP5850                0x0001180080E0B6D0  RSL
L2C_DUT_MAP5851                0x0001180080E0B6D8  RSL
L2C_DUT_MAP5852                0x0001180080E0B6E0  RSL
L2C_DUT_MAP5853                0x0001180080E0B6E8  RSL
L2C_DUT_MAP5854                0x0001180080E0B6F0  RSL
L2C_DUT_MAP5855                0x0001180080E0B6F8  RSL
L2C_DUT_MAP5856                0x0001180080E0B700  RSL
L2C_DUT_MAP5857                0x0001180080E0B708  RSL
L2C_DUT_MAP5858                0x0001180080E0B710  RSL
L2C_DUT_MAP5859                0x0001180080E0B718  RSL
L2C_DUT_MAP5860                0x0001180080E0B720  RSL
L2C_DUT_MAP5861                0x0001180080E0B728  RSL
L2C_DUT_MAP5862                0x0001180080E0B730  RSL
L2C_DUT_MAP5863                0x0001180080E0B738  RSL
L2C_DUT_MAP5864                0x0001180080E0B740  RSL
L2C_DUT_MAP5865                0x0001180080E0B748  RSL
L2C_DUT_MAP5866                0x0001180080E0B750  RSL
L2C_DUT_MAP5867                0x0001180080E0B758  RSL
L2C_DUT_MAP5868                0x0001180080E0B760  RSL
L2C_DUT_MAP5869                0x0001180080E0B768  RSL
L2C_DUT_MAP5870                0x0001180080E0B770  RSL
L2C_DUT_MAP5871                0x0001180080E0B778  RSL
L2C_DUT_MAP5872                0x0001180080E0B780  RSL
L2C_DUT_MAP5873                0x0001180080E0B788  RSL
L2C_DUT_MAP5874                0x0001180080E0B790  RSL
L2C_DUT_MAP5875                0x0001180080E0B798  RSL
L2C_DUT_MAP5876                0x0001180080E0B7A0  RSL
L2C_DUT_MAP5877                0x0001180080E0B7A8  RSL
L2C_DUT_MAP5878                0x0001180080E0B7B0  RSL
L2C_DUT_MAP5879                0x0001180080E0B7B8  RSL
L2C_DUT_MAP5880                0x0001180080E0B7C0  RSL
L2C_DUT_MAP5881                0x0001180080E0B7C8  RSL
L2C_DUT_MAP5882                0x0001180080E0B7D0  RSL
L2C_DUT_MAP5883                0x0001180080E0B7D8  RSL
L2C_DUT_MAP5884                0x0001180080E0B7E0  RSL
L2C_DUT_MAP5885                0x0001180080E0B7E8  RSL
L2C_DUT_MAP5886                0x0001180080E0B7F0  RSL
L2C_DUT_MAP5887                0x0001180080E0B7F8  RSL
L2C_DUT_MAP5888                0x0001180080E0B800  RSL
L2C_DUT_MAP5889                0x0001180080E0B808  RSL
L2C_DUT_MAP5890                0x0001180080E0B810  RSL
L2C_DUT_MAP5891                0x0001180080E0B818  RSL
L2C_DUT_MAP5892                0x0001180080E0B820  RSL
L2C_DUT_MAP5893                0x0001180080E0B828  RSL
L2C_DUT_MAP5894                0x0001180080E0B830  RSL
L2C_DUT_MAP5895                0x0001180080E0B838  RSL
L2C_DUT_MAP5896                0x0001180080E0B840  RSL
L2C_DUT_MAP5897                0x0001180080E0B848  RSL
L2C_DUT_MAP5898                0x0001180080E0B850  RSL
L2C_DUT_MAP5899                0x0001180080E0B858  RSL
L2C_DUT_MAP5900                0x0001180080E0B860  RSL
L2C_DUT_MAP5901                0x0001180080E0B868  RSL
L2C_DUT_MAP5902                0x0001180080E0B870  RSL
L2C_DUT_MAP5903                0x0001180080E0B878  RSL
L2C_DUT_MAP5904                0x0001180080E0B880  RSL
L2C_DUT_MAP5905                0x0001180080E0B888  RSL
L2C_DUT_MAP5906                0x0001180080E0B890  RSL
L2C_DUT_MAP5907                0x0001180080E0B898  RSL
L2C_DUT_MAP5908                0x0001180080E0B8A0  RSL
L2C_DUT_MAP5909                0x0001180080E0B8A8  RSL
L2C_DUT_MAP5910                0x0001180080E0B8B0  RSL
L2C_DUT_MAP5911                0x0001180080E0B8B8  RSL
L2C_DUT_MAP5912                0x0001180080E0B8C0  RSL
L2C_DUT_MAP5913                0x0001180080E0B8C8  RSL
L2C_DUT_MAP5914                0x0001180080E0B8D0  RSL
L2C_DUT_MAP5915                0x0001180080E0B8D8  RSL
L2C_DUT_MAP5916                0x0001180080E0B8E0  RSL
L2C_DUT_MAP5917                0x0001180080E0B8E8  RSL
L2C_DUT_MAP5918                0x0001180080E0B8F0  RSL
L2C_DUT_MAP5919                0x0001180080E0B8F8  RSL
L2C_DUT_MAP5920                0x0001180080E0B900  RSL
L2C_DUT_MAP5921                0x0001180080E0B908  RSL
L2C_DUT_MAP5922                0x0001180080E0B910  RSL
L2C_DUT_MAP5923                0x0001180080E0B918  RSL
L2C_DUT_MAP5924                0x0001180080E0B920  RSL
L2C_DUT_MAP5925                0x0001180080E0B928  RSL
L2C_DUT_MAP5926                0x0001180080E0B930  RSL
L2C_DUT_MAP5927                0x0001180080E0B938  RSL
L2C_DUT_MAP5928                0x0001180080E0B940  RSL
L2C_DUT_MAP5929                0x0001180080E0B948  RSL
L2C_DUT_MAP5930                0x0001180080E0B950  RSL
L2C_DUT_MAP5931                0x0001180080E0B958  RSL
L2C_DUT_MAP5932                0x0001180080E0B960  RSL
L2C_DUT_MAP5933                0x0001180080E0B968  RSL
L2C_DUT_MAP5934                0x0001180080E0B970  RSL
L2C_DUT_MAP5935                0x0001180080E0B978  RSL
L2C_DUT_MAP5936                0x0001180080E0B980  RSL
L2C_DUT_MAP5937                0x0001180080E0B988  RSL
L2C_DUT_MAP5938                0x0001180080E0B990  RSL
L2C_DUT_MAP5939                0x0001180080E0B998  RSL
L2C_DUT_MAP5940                0x0001180080E0B9A0  RSL
L2C_DUT_MAP5941                0x0001180080E0B9A8  RSL
L2C_DUT_MAP5942                0x0001180080E0B9B0  RSL
L2C_DUT_MAP5943                0x0001180080E0B9B8  RSL
L2C_DUT_MAP5944                0x0001180080E0B9C0  RSL
L2C_DUT_MAP5945                0x0001180080E0B9C8  RSL
L2C_DUT_MAP5946                0x0001180080E0B9D0  RSL
L2C_DUT_MAP5947                0x0001180080E0B9D8  RSL
L2C_DUT_MAP5948                0x0001180080E0B9E0  RSL
L2C_DUT_MAP5949                0x0001180080E0B9E8  RSL
L2C_DUT_MAP5950                0x0001180080E0B9F0  RSL
L2C_DUT_MAP5951                0x0001180080E0B9F8  RSL
L2C_DUT_MAP5952                0x0001180080E0BA00  RSL
L2C_DUT_MAP5953                0x0001180080E0BA08  RSL
L2C_DUT_MAP5954                0x0001180080E0BA10  RSL
L2C_DUT_MAP5955                0x0001180080E0BA18  RSL
L2C_DUT_MAP5956                0x0001180080E0BA20  RSL
L2C_DUT_MAP5957                0x0001180080E0BA28  RSL
L2C_DUT_MAP5958                0x0001180080E0BA30  RSL
L2C_DUT_MAP5959                0x0001180080E0BA38  RSL
L2C_DUT_MAP5960                0x0001180080E0BA40  RSL
L2C_DUT_MAP5961                0x0001180080E0BA48  RSL
L2C_DUT_MAP5962                0x0001180080E0BA50  RSL
L2C_DUT_MAP5963                0x0001180080E0BA58  RSL
L2C_DUT_MAP5964                0x0001180080E0BA60  RSL
L2C_DUT_MAP5965                0x0001180080E0BA68  RSL
L2C_DUT_MAP5966                0x0001180080E0BA70  RSL
L2C_DUT_MAP5967                0x0001180080E0BA78  RSL
L2C_DUT_MAP5968                0x0001180080E0BA80  RSL
L2C_DUT_MAP5969                0x0001180080E0BA88  RSL
L2C_DUT_MAP5970                0x0001180080E0BA90  RSL
L2C_DUT_MAP5971                0x0001180080E0BA98  RSL
L2C_DUT_MAP5972                0x0001180080E0BAA0  RSL
L2C_DUT_MAP5973                0x0001180080E0BAA8  RSL
L2C_DUT_MAP5974                0x0001180080E0BAB0  RSL
L2C_DUT_MAP5975                0x0001180080E0BAB8  RSL
L2C_DUT_MAP5976                0x0001180080E0BAC0  RSL
L2C_DUT_MAP5977                0x0001180080E0BAC8  RSL
L2C_DUT_MAP5978                0x0001180080E0BAD0  RSL
L2C_DUT_MAP5979                0x0001180080E0BAD8  RSL
L2C_DUT_MAP5980                0x0001180080E0BAE0  RSL
L2C_DUT_MAP5981                0x0001180080E0BAE8  RSL
L2C_DUT_MAP5982                0x0001180080E0BAF0  RSL
L2C_DUT_MAP5983                0x0001180080E0BAF8  RSL
L2C_DUT_MAP5984                0x0001180080E0BB00  RSL
L2C_DUT_MAP5985                0x0001180080E0BB08  RSL
L2C_DUT_MAP5986                0x0001180080E0BB10  RSL
L2C_DUT_MAP5987                0x0001180080E0BB18  RSL
L2C_DUT_MAP5988                0x0001180080E0BB20  RSL
L2C_DUT_MAP5989                0x0001180080E0BB28  RSL
L2C_DUT_MAP5990                0x0001180080E0BB30  RSL
L2C_DUT_MAP5991                0x0001180080E0BB38  RSL
L2C_DUT_MAP5992                0x0001180080E0BB40  RSL
L2C_DUT_MAP5993                0x0001180080E0BB48  RSL
L2C_DUT_MAP5994                0x0001180080E0BB50  RSL
L2C_DUT_MAP5995                0x0001180080E0BB58  RSL
L2C_DUT_MAP5996                0x0001180080E0BB60  RSL
L2C_DUT_MAP5997                0x0001180080E0BB68  RSL
L2C_DUT_MAP5998                0x0001180080E0BB70  RSL
L2C_DUT_MAP5999                0x0001180080E0BB78  RSL
L2C_DUT_MAP6000                0x0001180080E0BB80  RSL
L2C_DUT_MAP6001                0x0001180080E0BB88  RSL
L2C_DUT_MAP6002                0x0001180080E0BB90  RSL
L2C_DUT_MAP6003                0x0001180080E0BB98  RSL
L2C_DUT_MAP6004                0x0001180080E0BBA0  RSL
L2C_DUT_MAP6005                0x0001180080E0BBA8  RSL
L2C_DUT_MAP6006                0x0001180080E0BBB0  RSL
L2C_DUT_MAP6007                0x0001180080E0BBB8  RSL
L2C_DUT_MAP6008                0x0001180080E0BBC0  RSL
L2C_DUT_MAP6009                0x0001180080E0BBC8  RSL
L2C_DUT_MAP6010                0x0001180080E0BBD0  RSL
L2C_DUT_MAP6011                0x0001180080E0BBD8  RSL
L2C_DUT_MAP6012                0x0001180080E0BBE0  RSL
L2C_DUT_MAP6013                0x0001180080E0BBE8  RSL
L2C_DUT_MAP6014                0x0001180080E0BBF0  RSL
L2C_DUT_MAP6015                0x0001180080E0BBF8  RSL
L2C_DUT_MAP6016                0x0001180080E0BC00  RSL
L2C_DUT_MAP6017                0x0001180080E0BC08  RSL
L2C_DUT_MAP6018                0x0001180080E0BC10  RSL
L2C_DUT_MAP6019                0x0001180080E0BC18  RSL
L2C_DUT_MAP6020                0x0001180080E0BC20  RSL
L2C_DUT_MAP6021                0x0001180080E0BC28  RSL
L2C_DUT_MAP6022                0x0001180080E0BC30  RSL
L2C_DUT_MAP6023                0x0001180080E0BC38  RSL
L2C_DUT_MAP6024                0x0001180080E0BC40  RSL
L2C_DUT_MAP6025                0x0001180080E0BC48  RSL
L2C_DUT_MAP6026                0x0001180080E0BC50  RSL
L2C_DUT_MAP6027                0x0001180080E0BC58  RSL
L2C_DUT_MAP6028                0x0001180080E0BC60  RSL
L2C_DUT_MAP6029                0x0001180080E0BC68  RSL
L2C_DUT_MAP6030                0x0001180080E0BC70  RSL
L2C_DUT_MAP6031                0x0001180080E0BC78  RSL
L2C_DUT_MAP6032                0x0001180080E0BC80  RSL
L2C_DUT_MAP6033                0x0001180080E0BC88  RSL
L2C_DUT_MAP6034                0x0001180080E0BC90  RSL
L2C_DUT_MAP6035                0x0001180080E0BC98  RSL
L2C_DUT_MAP6036                0x0001180080E0BCA0  RSL
L2C_DUT_MAP6037                0x0001180080E0BCA8  RSL
L2C_DUT_MAP6038                0x0001180080E0BCB0  RSL
L2C_DUT_MAP6039                0x0001180080E0BCB8  RSL
L2C_DUT_MAP6040                0x0001180080E0BCC0  RSL
L2C_DUT_MAP6041                0x0001180080E0BCC8  RSL
L2C_DUT_MAP6042                0x0001180080E0BCD0  RSL
L2C_DUT_MAP6043                0x0001180080E0BCD8  RSL
L2C_DUT_MAP6044                0x0001180080E0BCE0  RSL
L2C_DUT_MAP6045                0x0001180080E0BCE8  RSL
L2C_DUT_MAP6046                0x0001180080E0BCF0  RSL
L2C_DUT_MAP6047                0x0001180080E0BCF8  RSL
L2C_DUT_MAP6048                0x0001180080E0BD00  RSL
L2C_DUT_MAP6049                0x0001180080E0BD08  RSL
L2C_DUT_MAP6050                0x0001180080E0BD10  RSL
L2C_DUT_MAP6051                0x0001180080E0BD18  RSL
L2C_DUT_MAP6052                0x0001180080E0BD20  RSL
L2C_DUT_MAP6053                0x0001180080E0BD28  RSL
L2C_DUT_MAP6054                0x0001180080E0BD30  RSL
L2C_DUT_MAP6055                0x0001180080E0BD38  RSL
L2C_DUT_MAP6056                0x0001180080E0BD40  RSL
L2C_DUT_MAP6057                0x0001180080E0BD48  RSL
L2C_DUT_MAP6058                0x0001180080E0BD50  RSL
L2C_DUT_MAP6059                0x0001180080E0BD58  RSL
L2C_DUT_MAP6060                0x0001180080E0BD60  RSL
L2C_DUT_MAP6061                0x0001180080E0BD68  RSL
L2C_DUT_MAP6062                0x0001180080E0BD70  RSL
L2C_DUT_MAP6063                0x0001180080E0BD78  RSL
L2C_DUT_MAP6064                0x0001180080E0BD80  RSL
L2C_DUT_MAP6065                0x0001180080E0BD88  RSL
L2C_DUT_MAP6066                0x0001180080E0BD90  RSL
L2C_DUT_MAP6067                0x0001180080E0BD98  RSL
L2C_DUT_MAP6068                0x0001180080E0BDA0  RSL
L2C_DUT_MAP6069                0x0001180080E0BDA8  RSL
L2C_DUT_MAP6070                0x0001180080E0BDB0  RSL
L2C_DUT_MAP6071                0x0001180080E0BDB8  RSL
L2C_DUT_MAP6072                0x0001180080E0BDC0  RSL
L2C_DUT_MAP6073                0x0001180080E0BDC8  RSL
L2C_DUT_MAP6074                0x0001180080E0BDD0  RSL
L2C_DUT_MAP6075                0x0001180080E0BDD8  RSL
L2C_DUT_MAP6076                0x0001180080E0BDE0  RSL
L2C_DUT_MAP6077                0x0001180080E0BDE8  RSL
L2C_DUT_MAP6078                0x0001180080E0BDF0  RSL
L2C_DUT_MAP6079                0x0001180080E0BDF8  RSL
L2C_DUT_MAP6080                0x0001180080E0BE00  RSL
L2C_DUT_MAP6081                0x0001180080E0BE08  RSL
L2C_DUT_MAP6082                0x0001180080E0BE10  RSL
L2C_DUT_MAP6083                0x0001180080E0BE18  RSL
L2C_DUT_MAP6084                0x0001180080E0BE20  RSL
L2C_DUT_MAP6085                0x0001180080E0BE28  RSL
L2C_DUT_MAP6086                0x0001180080E0BE30  RSL
L2C_DUT_MAP6087                0x0001180080E0BE38  RSL
L2C_DUT_MAP6088                0x0001180080E0BE40  RSL
L2C_DUT_MAP6089                0x0001180080E0BE48  RSL
L2C_DUT_MAP6090                0x0001180080E0BE50  RSL
L2C_DUT_MAP6091                0x0001180080E0BE58  RSL
L2C_DUT_MAP6092                0x0001180080E0BE60  RSL
L2C_DUT_MAP6093                0x0001180080E0BE68  RSL
L2C_DUT_MAP6094                0x0001180080E0BE70  RSL
L2C_DUT_MAP6095                0x0001180080E0BE78  RSL
L2C_DUT_MAP6096                0x0001180080E0BE80  RSL
L2C_DUT_MAP6097                0x0001180080E0BE88  RSL
L2C_DUT_MAP6098                0x0001180080E0BE90  RSL
L2C_DUT_MAP6099                0x0001180080E0BE98  RSL
L2C_DUT_MAP6100                0x0001180080E0BEA0  RSL
L2C_DUT_MAP6101                0x0001180080E0BEA8  RSL
L2C_DUT_MAP6102                0x0001180080E0BEB0  RSL
L2C_DUT_MAP6103                0x0001180080E0BEB8  RSL
L2C_DUT_MAP6104                0x0001180080E0BEC0  RSL
L2C_DUT_MAP6105                0x0001180080E0BEC8  RSL
L2C_DUT_MAP6106                0x0001180080E0BED0  RSL
L2C_DUT_MAP6107                0x0001180080E0BED8  RSL
L2C_DUT_MAP6108                0x0001180080E0BEE0  RSL
L2C_DUT_MAP6109                0x0001180080E0BEE8  RSL
L2C_DUT_MAP6110                0x0001180080E0BEF0  RSL
L2C_DUT_MAP6111                0x0001180080E0BEF8  RSL
L2C_DUT_MAP6112                0x0001180080E0BF00  RSL
L2C_DUT_MAP6113                0x0001180080E0BF08  RSL
L2C_DUT_MAP6114                0x0001180080E0BF10  RSL
L2C_DUT_MAP6115                0x0001180080E0BF18  RSL
L2C_DUT_MAP6116                0x0001180080E0BF20  RSL
L2C_DUT_MAP6117                0x0001180080E0BF28  RSL
L2C_DUT_MAP6118                0x0001180080E0BF30  RSL
L2C_DUT_MAP6119                0x0001180080E0BF38  RSL
L2C_DUT_MAP6120                0x0001180080E0BF40  RSL
L2C_DUT_MAP6121                0x0001180080E0BF48  RSL
L2C_DUT_MAP6122                0x0001180080E0BF50  RSL
L2C_DUT_MAP6123                0x0001180080E0BF58  RSL
L2C_DUT_MAP6124                0x0001180080E0BF60  RSL
L2C_DUT_MAP6125                0x0001180080E0BF68  RSL
L2C_DUT_MAP6126                0x0001180080E0BF70  RSL
L2C_DUT_MAP6127                0x0001180080E0BF78  RSL
L2C_DUT_MAP6128                0x0001180080E0BF80  RSL
L2C_DUT_MAP6129                0x0001180080E0BF88  RSL
L2C_DUT_MAP6130                0x0001180080E0BF90  RSL
L2C_DUT_MAP6131                0x0001180080E0BF98  RSL
L2C_DUT_MAP6132                0x0001180080E0BFA0  RSL
L2C_DUT_MAP6133                0x0001180080E0BFA8  RSL
L2C_DUT_MAP6134                0x0001180080E0BFB0  RSL
L2C_DUT_MAP6135                0x0001180080E0BFB8  RSL
L2C_DUT_MAP6136                0x0001180080E0BFC0  RSL
L2C_DUT_MAP6137                0x0001180080E0BFC8  RSL
L2C_DUT_MAP6138                0x0001180080E0BFD0  RSL
L2C_DUT_MAP6139                0x0001180080E0BFD8  RSL
L2C_DUT_MAP6140                0x0001180080E0BFE0  RSL
L2C_DUT_MAP6141                0x0001180080E0BFE8  RSL
L2C_DUT_MAP6142                0x0001180080E0BFF0  RSL
L2C_DUT_MAP6143                0x0001180080E0BFF8  RSL
L2C_DUT_MAP6144                0x0001180080E0C000  RSL
L2C_DUT_MAP6145                0x0001180080E0C008  RSL
L2C_DUT_MAP6146                0x0001180080E0C010  RSL
L2C_DUT_MAP6147                0x0001180080E0C018  RSL
L2C_DUT_MAP6148                0x0001180080E0C020  RSL
L2C_DUT_MAP6149                0x0001180080E0C028  RSL
L2C_DUT_MAP6150                0x0001180080E0C030  RSL
L2C_DUT_MAP6151                0x0001180080E0C038  RSL
L2C_DUT_MAP6152                0x0001180080E0C040  RSL
L2C_DUT_MAP6153                0x0001180080E0C048  RSL
L2C_DUT_MAP6154                0x0001180080E0C050  RSL
L2C_DUT_MAP6155                0x0001180080E0C058  RSL
L2C_DUT_MAP6156                0x0001180080E0C060  RSL
L2C_DUT_MAP6157                0x0001180080E0C068  RSL
L2C_DUT_MAP6158                0x0001180080E0C070  RSL
L2C_DUT_MAP6159                0x0001180080E0C078  RSL
L2C_DUT_MAP6160                0x0001180080E0C080  RSL
L2C_DUT_MAP6161                0x0001180080E0C088  RSL
L2C_DUT_MAP6162                0x0001180080E0C090  RSL
L2C_DUT_MAP6163                0x0001180080E0C098  RSL
L2C_DUT_MAP6164                0x0001180080E0C0A0  RSL
L2C_DUT_MAP6165                0x0001180080E0C0A8  RSL
L2C_DUT_MAP6166                0x0001180080E0C0B0  RSL
L2C_DUT_MAP6167                0x0001180080E0C0B8  RSL
L2C_DUT_MAP6168                0x0001180080E0C0C0  RSL
L2C_DUT_MAP6169                0x0001180080E0C0C8  RSL
L2C_DUT_MAP6170                0x0001180080E0C0D0  RSL
L2C_DUT_MAP6171                0x0001180080E0C0D8  RSL
L2C_DUT_MAP6172                0x0001180080E0C0E0  RSL
L2C_DUT_MAP6173                0x0001180080E0C0E8  RSL
L2C_DUT_MAP6174                0x0001180080E0C0F0  RSL
L2C_DUT_MAP6175                0x0001180080E0C0F8  RSL
L2C_DUT_MAP6176                0x0001180080E0C100  RSL
L2C_DUT_MAP6177                0x0001180080E0C108  RSL
L2C_DUT_MAP6178                0x0001180080E0C110  RSL
L2C_DUT_MAP6179                0x0001180080E0C118  RSL
L2C_DUT_MAP6180                0x0001180080E0C120  RSL
L2C_DUT_MAP6181                0x0001180080E0C128  RSL
L2C_DUT_MAP6182                0x0001180080E0C130  RSL
L2C_DUT_MAP6183                0x0001180080E0C138  RSL
L2C_DUT_MAP6184                0x0001180080E0C140  RSL
L2C_DUT_MAP6185                0x0001180080E0C148  RSL
L2C_DUT_MAP6186                0x0001180080E0C150  RSL
L2C_DUT_MAP6187                0x0001180080E0C158  RSL
L2C_DUT_MAP6188                0x0001180080E0C160  RSL
L2C_DUT_MAP6189                0x0001180080E0C168  RSL
L2C_DUT_MAP6190                0x0001180080E0C170  RSL
L2C_DUT_MAP6191                0x0001180080E0C178  RSL
L2C_DUT_MAP6192                0x0001180080E0C180  RSL
L2C_DUT_MAP6193                0x0001180080E0C188  RSL
L2C_DUT_MAP6194                0x0001180080E0C190  RSL
L2C_DUT_MAP6195                0x0001180080E0C198  RSL
L2C_DUT_MAP6196                0x0001180080E0C1A0  RSL
L2C_DUT_MAP6197                0x0001180080E0C1A8  RSL
L2C_DUT_MAP6198                0x0001180080E0C1B0  RSL
L2C_DUT_MAP6199                0x0001180080E0C1B8  RSL
L2C_DUT_MAP6200                0x0001180080E0C1C0  RSL
L2C_DUT_MAP6201                0x0001180080E0C1C8  RSL
L2C_DUT_MAP6202                0x0001180080E0C1D0  RSL
L2C_DUT_MAP6203                0x0001180080E0C1D8  RSL
L2C_DUT_MAP6204                0x0001180080E0C1E0  RSL
L2C_DUT_MAP6205                0x0001180080E0C1E8  RSL
L2C_DUT_MAP6206                0x0001180080E0C1F0  RSL
L2C_DUT_MAP6207                0x0001180080E0C1F8  RSL
L2C_DUT_MAP6208                0x0001180080E0C200  RSL
L2C_DUT_MAP6209                0x0001180080E0C208  RSL
L2C_DUT_MAP6210                0x0001180080E0C210  RSL
L2C_DUT_MAP6211                0x0001180080E0C218  RSL
L2C_DUT_MAP6212                0x0001180080E0C220  RSL
L2C_DUT_MAP6213                0x0001180080E0C228  RSL
L2C_DUT_MAP6214                0x0001180080E0C230  RSL
L2C_DUT_MAP6215                0x0001180080E0C238  RSL
L2C_DUT_MAP6216                0x0001180080E0C240  RSL
L2C_DUT_MAP6217                0x0001180080E0C248  RSL
L2C_DUT_MAP6218                0x0001180080E0C250  RSL
L2C_DUT_MAP6219                0x0001180080E0C258  RSL
L2C_DUT_MAP6220                0x0001180080E0C260  RSL
L2C_DUT_MAP6221                0x0001180080E0C268  RSL
L2C_DUT_MAP6222                0x0001180080E0C270  RSL
L2C_DUT_MAP6223                0x0001180080E0C278  RSL
L2C_DUT_MAP6224                0x0001180080E0C280  RSL
L2C_DUT_MAP6225                0x0001180080E0C288  RSL
L2C_DUT_MAP6226                0x0001180080E0C290  RSL
L2C_DUT_MAP6227                0x0001180080E0C298  RSL
L2C_DUT_MAP6228                0x0001180080E0C2A0  RSL
L2C_DUT_MAP6229                0x0001180080E0C2A8  RSL
L2C_DUT_MAP6230                0x0001180080E0C2B0  RSL
L2C_DUT_MAP6231                0x0001180080E0C2B8  RSL
L2C_DUT_MAP6232                0x0001180080E0C2C0  RSL
L2C_DUT_MAP6233                0x0001180080E0C2C8  RSL
L2C_DUT_MAP6234                0x0001180080E0C2D0  RSL
L2C_DUT_MAP6235                0x0001180080E0C2D8  RSL
L2C_DUT_MAP6236                0x0001180080E0C2E0  RSL
L2C_DUT_MAP6237                0x0001180080E0C2E8  RSL
L2C_DUT_MAP6238                0x0001180080E0C2F0  RSL
L2C_DUT_MAP6239                0x0001180080E0C2F8  RSL
L2C_DUT_MAP6240                0x0001180080E0C300  RSL
L2C_DUT_MAP6241                0x0001180080E0C308  RSL
L2C_DUT_MAP6242                0x0001180080E0C310  RSL
L2C_DUT_MAP6243                0x0001180080E0C318  RSL
L2C_DUT_MAP6244                0x0001180080E0C320  RSL
L2C_DUT_MAP6245                0x0001180080E0C328  RSL
L2C_DUT_MAP6246                0x0001180080E0C330  RSL
L2C_DUT_MAP6247                0x0001180080E0C338  RSL
L2C_DUT_MAP6248                0x0001180080E0C340  RSL
L2C_DUT_MAP6249                0x0001180080E0C348  RSL
L2C_DUT_MAP6250                0x0001180080E0C350  RSL
L2C_DUT_MAP6251                0x0001180080E0C358  RSL
L2C_DUT_MAP6252                0x0001180080E0C360  RSL
L2C_DUT_MAP6253                0x0001180080E0C368  RSL
L2C_DUT_MAP6254                0x0001180080E0C370  RSL
L2C_DUT_MAP6255                0x0001180080E0C378  RSL
L2C_DUT_MAP6256                0x0001180080E0C380  RSL
L2C_DUT_MAP6257                0x0001180080E0C388  RSL
L2C_DUT_MAP6258                0x0001180080E0C390  RSL
L2C_DUT_MAP6259                0x0001180080E0C398  RSL
L2C_DUT_MAP6260                0x0001180080E0C3A0  RSL
L2C_DUT_MAP6261                0x0001180080E0C3A8  RSL
L2C_DUT_MAP6262                0x0001180080E0C3B0  RSL
L2C_DUT_MAP6263                0x0001180080E0C3B8  RSL
L2C_DUT_MAP6264                0x0001180080E0C3C0  RSL
L2C_DUT_MAP6265                0x0001180080E0C3C8  RSL
L2C_DUT_MAP6266                0x0001180080E0C3D0  RSL
L2C_DUT_MAP6267                0x0001180080E0C3D8  RSL
L2C_DUT_MAP6268                0x0001180080E0C3E0  RSL
L2C_DUT_MAP6269                0x0001180080E0C3E8  RSL
L2C_DUT_MAP6270                0x0001180080E0C3F0  RSL
L2C_DUT_MAP6271                0x0001180080E0C3F8  RSL
L2C_DUT_MAP6272                0x0001180080E0C400  RSL
L2C_DUT_MAP6273                0x0001180080E0C408  RSL
L2C_DUT_MAP6274                0x0001180080E0C410  RSL
L2C_DUT_MAP6275                0x0001180080E0C418  RSL
L2C_DUT_MAP6276                0x0001180080E0C420  RSL
L2C_DUT_MAP6277                0x0001180080E0C428  RSL
L2C_DUT_MAP6278                0x0001180080E0C430  RSL
L2C_DUT_MAP6279                0x0001180080E0C438  RSL
L2C_DUT_MAP6280                0x0001180080E0C440  RSL
L2C_DUT_MAP6281                0x0001180080E0C448  RSL
L2C_DUT_MAP6282                0x0001180080E0C450  RSL
L2C_DUT_MAP6283                0x0001180080E0C458  RSL
L2C_DUT_MAP6284                0x0001180080E0C460  RSL
L2C_DUT_MAP6285                0x0001180080E0C468  RSL
L2C_DUT_MAP6286                0x0001180080E0C470  RSL
L2C_DUT_MAP6287                0x0001180080E0C478  RSL
L2C_DUT_MAP6288                0x0001180080E0C480  RSL
L2C_DUT_MAP6289                0x0001180080E0C488  RSL
L2C_DUT_MAP6290                0x0001180080E0C490  RSL
L2C_DUT_MAP6291                0x0001180080E0C498  RSL
L2C_DUT_MAP6292                0x0001180080E0C4A0  RSL
L2C_DUT_MAP6293                0x0001180080E0C4A8  RSL
L2C_DUT_MAP6294                0x0001180080E0C4B0  RSL
L2C_DUT_MAP6295                0x0001180080E0C4B8  RSL
L2C_DUT_MAP6296                0x0001180080E0C4C0  RSL
L2C_DUT_MAP6297                0x0001180080E0C4C8  RSL
L2C_DUT_MAP6298                0x0001180080E0C4D0  RSL
L2C_DUT_MAP6299                0x0001180080E0C4D8  RSL
L2C_DUT_MAP6300                0x0001180080E0C4E0  RSL
L2C_DUT_MAP6301                0x0001180080E0C4E8  RSL
L2C_DUT_MAP6302                0x0001180080E0C4F0  RSL
L2C_DUT_MAP6303                0x0001180080E0C4F8  RSL
L2C_DUT_MAP6304                0x0001180080E0C500  RSL
L2C_DUT_MAP6305                0x0001180080E0C508  RSL
L2C_DUT_MAP6306                0x0001180080E0C510  RSL
L2C_DUT_MAP6307                0x0001180080E0C518  RSL
L2C_DUT_MAP6308                0x0001180080E0C520  RSL
L2C_DUT_MAP6309                0x0001180080E0C528  RSL
L2C_DUT_MAP6310                0x0001180080E0C530  RSL
L2C_DUT_MAP6311                0x0001180080E0C538  RSL
L2C_DUT_MAP6312                0x0001180080E0C540  RSL
L2C_DUT_MAP6313                0x0001180080E0C548  RSL
L2C_DUT_MAP6314                0x0001180080E0C550  RSL
L2C_DUT_MAP6315                0x0001180080E0C558  RSL
L2C_DUT_MAP6316                0x0001180080E0C560  RSL
L2C_DUT_MAP6317                0x0001180080E0C568  RSL
L2C_DUT_MAP6318                0x0001180080E0C570  RSL
L2C_DUT_MAP6319                0x0001180080E0C578  RSL
L2C_DUT_MAP6320                0x0001180080E0C580  RSL
L2C_DUT_MAP6321                0x0001180080E0C588  RSL
L2C_DUT_MAP6322                0x0001180080E0C590  RSL
L2C_DUT_MAP6323                0x0001180080E0C598  RSL
L2C_DUT_MAP6324                0x0001180080E0C5A0  RSL
L2C_DUT_MAP6325                0x0001180080E0C5A8  RSL
L2C_DUT_MAP6326                0x0001180080E0C5B0  RSL
L2C_DUT_MAP6327                0x0001180080E0C5B8  RSL
L2C_DUT_MAP6328                0x0001180080E0C5C0  RSL
L2C_DUT_MAP6329                0x0001180080E0C5C8  RSL
L2C_DUT_MAP6330                0x0001180080E0C5D0  RSL
L2C_DUT_MAP6331                0x0001180080E0C5D8  RSL
L2C_DUT_MAP6332                0x0001180080E0C5E0  RSL
L2C_DUT_MAP6333                0x0001180080E0C5E8  RSL
L2C_DUT_MAP6334                0x0001180080E0C5F0  RSL
L2C_DUT_MAP6335                0x0001180080E0C5F8  RSL
L2C_DUT_MAP6336                0x0001180080E0C600  RSL
L2C_DUT_MAP6337                0x0001180080E0C608  RSL
L2C_DUT_MAP6338                0x0001180080E0C610  RSL
L2C_DUT_MAP6339                0x0001180080E0C618  RSL
L2C_DUT_MAP6340                0x0001180080E0C620  RSL
L2C_DUT_MAP6341                0x0001180080E0C628  RSL
L2C_DUT_MAP6342                0x0001180080E0C630  RSL
L2C_DUT_MAP6343                0x0001180080E0C638  RSL
L2C_DUT_MAP6344                0x0001180080E0C640  RSL
L2C_DUT_MAP6345                0x0001180080E0C648  RSL
L2C_DUT_MAP6346                0x0001180080E0C650  RSL
L2C_DUT_MAP6347                0x0001180080E0C658  RSL
L2C_DUT_MAP6348                0x0001180080E0C660  RSL
L2C_DUT_MAP6349                0x0001180080E0C668  RSL
L2C_DUT_MAP6350                0x0001180080E0C670  RSL
L2C_DUT_MAP6351                0x0001180080E0C678  RSL
L2C_DUT_MAP6352                0x0001180080E0C680  RSL
L2C_DUT_MAP6353                0x0001180080E0C688  RSL
L2C_DUT_MAP6354                0x0001180080E0C690  RSL
L2C_DUT_MAP6355                0x0001180080E0C698  RSL
L2C_DUT_MAP6356                0x0001180080E0C6A0  RSL
L2C_DUT_MAP6357                0x0001180080E0C6A8  RSL
L2C_DUT_MAP6358                0x0001180080E0C6B0  RSL
L2C_DUT_MAP6359                0x0001180080E0C6B8  RSL
L2C_DUT_MAP6360                0x0001180080E0C6C0  RSL
L2C_DUT_MAP6361                0x0001180080E0C6C8  RSL
L2C_DUT_MAP6362                0x0001180080E0C6D0  RSL
L2C_DUT_MAP6363                0x0001180080E0C6D8  RSL
L2C_DUT_MAP6364                0x0001180080E0C6E0  RSL
L2C_DUT_MAP6365                0x0001180080E0C6E8  RSL
L2C_DUT_MAP6366                0x0001180080E0C6F0  RSL
L2C_DUT_MAP6367                0x0001180080E0C6F8  RSL
L2C_DUT_MAP6368                0x0001180080E0C700  RSL
L2C_DUT_MAP6369                0x0001180080E0C708  RSL
L2C_DUT_MAP6370                0x0001180080E0C710  RSL
L2C_DUT_MAP6371                0x0001180080E0C718  RSL
L2C_DUT_MAP6372                0x0001180080E0C720  RSL
L2C_DUT_MAP6373                0x0001180080E0C728  RSL
L2C_DUT_MAP6374                0x0001180080E0C730  RSL
L2C_DUT_MAP6375                0x0001180080E0C738  RSL
L2C_DUT_MAP6376                0x0001180080E0C740  RSL
L2C_DUT_MAP6377                0x0001180080E0C748  RSL
L2C_DUT_MAP6378                0x0001180080E0C750  RSL
L2C_DUT_MAP6379                0x0001180080E0C758  RSL
L2C_DUT_MAP6380                0x0001180080E0C760  RSL
L2C_DUT_MAP6381                0x0001180080E0C768  RSL
L2C_DUT_MAP6382                0x0001180080E0C770  RSL
L2C_DUT_MAP6383                0x0001180080E0C778  RSL
L2C_DUT_MAP6384                0x0001180080E0C780  RSL
L2C_DUT_MAP6385                0x0001180080E0C788  RSL
L2C_DUT_MAP6386                0x0001180080E0C790  RSL
L2C_DUT_MAP6387                0x0001180080E0C798  RSL
L2C_DUT_MAP6388                0x0001180080E0C7A0  RSL
L2C_DUT_MAP6389                0x0001180080E0C7A8  RSL
L2C_DUT_MAP6390                0x0001180080E0C7B0  RSL
L2C_DUT_MAP6391                0x0001180080E0C7B8  RSL
L2C_DUT_MAP6392                0x0001180080E0C7C0  RSL
L2C_DUT_MAP6393                0x0001180080E0C7C8  RSL
L2C_DUT_MAP6394                0x0001180080E0C7D0  RSL
L2C_DUT_MAP6395                0x0001180080E0C7D8  RSL
L2C_DUT_MAP6396                0x0001180080E0C7E0  RSL
L2C_DUT_MAP6397                0x0001180080E0C7E8  RSL
L2C_DUT_MAP6398                0x0001180080E0C7F0  RSL
L2C_DUT_MAP6399                0x0001180080E0C7F8  RSL
L2C_DUT_MAP6400                0x0001180080E0C800  RSL
L2C_DUT_MAP6401                0x0001180080E0C808  RSL
L2C_DUT_MAP6402                0x0001180080E0C810  RSL
L2C_DUT_MAP6403                0x0001180080E0C818  RSL
L2C_DUT_MAP6404                0x0001180080E0C820  RSL
L2C_DUT_MAP6405                0x0001180080E0C828  RSL
L2C_DUT_MAP6406                0x0001180080E0C830  RSL
L2C_DUT_MAP6407                0x0001180080E0C838  RSL
L2C_DUT_MAP6408                0x0001180080E0C840  RSL
L2C_DUT_MAP6409                0x0001180080E0C848  RSL
L2C_DUT_MAP6410                0x0001180080E0C850  RSL
L2C_DUT_MAP6411                0x0001180080E0C858  RSL
L2C_DUT_MAP6412                0x0001180080E0C860  RSL
L2C_DUT_MAP6413                0x0001180080E0C868  RSL
L2C_DUT_MAP6414                0x0001180080E0C870  RSL
L2C_DUT_MAP6415                0x0001180080E0C878  RSL
L2C_DUT_MAP6416                0x0001180080E0C880  RSL
L2C_DUT_MAP6417                0x0001180080E0C888  RSL
L2C_DUT_MAP6418                0x0001180080E0C890  RSL
L2C_DUT_MAP6419                0x0001180080E0C898  RSL
L2C_DUT_MAP6420                0x0001180080E0C8A0  RSL
L2C_DUT_MAP6421                0x0001180080E0C8A8  RSL
L2C_DUT_MAP6422                0x0001180080E0C8B0  RSL
L2C_DUT_MAP6423                0x0001180080E0C8B8  RSL
L2C_DUT_MAP6424                0x0001180080E0C8C0  RSL
L2C_DUT_MAP6425                0x0001180080E0C8C8  RSL
L2C_DUT_MAP6426                0x0001180080E0C8D0  RSL
L2C_DUT_MAP6427                0x0001180080E0C8D8  RSL
L2C_DUT_MAP6428                0x0001180080E0C8E0  RSL
L2C_DUT_MAP6429                0x0001180080E0C8E8  RSL
L2C_DUT_MAP6430                0x0001180080E0C8F0  RSL
L2C_DUT_MAP6431                0x0001180080E0C8F8  RSL
L2C_DUT_MAP6432                0x0001180080E0C900  RSL
L2C_DUT_MAP6433                0x0001180080E0C908  RSL
L2C_DUT_MAP6434                0x0001180080E0C910  RSL
L2C_DUT_MAP6435                0x0001180080E0C918  RSL
L2C_DUT_MAP6436                0x0001180080E0C920  RSL
L2C_DUT_MAP6437                0x0001180080E0C928  RSL
L2C_DUT_MAP6438                0x0001180080E0C930  RSL
L2C_DUT_MAP6439                0x0001180080E0C938  RSL
L2C_DUT_MAP6440                0x0001180080E0C940  RSL
L2C_DUT_MAP6441                0x0001180080E0C948  RSL
L2C_DUT_MAP6442                0x0001180080E0C950  RSL
L2C_DUT_MAP6443                0x0001180080E0C958  RSL
L2C_DUT_MAP6444                0x0001180080E0C960  RSL
L2C_DUT_MAP6445                0x0001180080E0C968  RSL
L2C_DUT_MAP6446                0x0001180080E0C970  RSL
L2C_DUT_MAP6447                0x0001180080E0C978  RSL
L2C_DUT_MAP6448                0x0001180080E0C980  RSL
L2C_DUT_MAP6449                0x0001180080E0C988  RSL
L2C_DUT_MAP6450                0x0001180080E0C990  RSL
L2C_DUT_MAP6451                0x0001180080E0C998  RSL
L2C_DUT_MAP6452                0x0001180080E0C9A0  RSL
L2C_DUT_MAP6453                0x0001180080E0C9A8  RSL
L2C_DUT_MAP6454                0x0001180080E0C9B0  RSL
L2C_DUT_MAP6455                0x0001180080E0C9B8  RSL
L2C_DUT_MAP6456                0x0001180080E0C9C0  RSL
L2C_DUT_MAP6457                0x0001180080E0C9C8  RSL
L2C_DUT_MAP6458                0x0001180080E0C9D0  RSL
L2C_DUT_MAP6459                0x0001180080E0C9D8  RSL
L2C_DUT_MAP6460                0x0001180080E0C9E0  RSL
L2C_DUT_MAP6461                0x0001180080E0C9E8  RSL
L2C_DUT_MAP6462                0x0001180080E0C9F0  RSL
L2C_DUT_MAP6463                0x0001180080E0C9F8  RSL
L2C_DUT_MAP6464                0x0001180080E0CA00  RSL
L2C_DUT_MAP6465                0x0001180080E0CA08  RSL
L2C_DUT_MAP6466                0x0001180080E0CA10  RSL
L2C_DUT_MAP6467                0x0001180080E0CA18  RSL
L2C_DUT_MAP6468                0x0001180080E0CA20  RSL
L2C_DUT_MAP6469                0x0001180080E0CA28  RSL
L2C_DUT_MAP6470                0x0001180080E0CA30  RSL
L2C_DUT_MAP6471                0x0001180080E0CA38  RSL
L2C_DUT_MAP6472                0x0001180080E0CA40  RSL
L2C_DUT_MAP6473                0x0001180080E0CA48  RSL
L2C_DUT_MAP6474                0x0001180080E0CA50  RSL
L2C_DUT_MAP6475                0x0001180080E0CA58  RSL
L2C_DUT_MAP6476                0x0001180080E0CA60  RSL
L2C_DUT_MAP6477                0x0001180080E0CA68  RSL
L2C_DUT_MAP6478                0x0001180080E0CA70  RSL
L2C_DUT_MAP6479                0x0001180080E0CA78  RSL
L2C_DUT_MAP6480                0x0001180080E0CA80  RSL
L2C_DUT_MAP6481                0x0001180080E0CA88  RSL
L2C_DUT_MAP6482                0x0001180080E0CA90  RSL
L2C_DUT_MAP6483                0x0001180080E0CA98  RSL
L2C_DUT_MAP6484                0x0001180080E0CAA0  RSL
L2C_DUT_MAP6485                0x0001180080E0CAA8  RSL
L2C_DUT_MAP6486                0x0001180080E0CAB0  RSL
L2C_DUT_MAP6487                0x0001180080E0CAB8  RSL
L2C_DUT_MAP6488                0x0001180080E0CAC0  RSL
L2C_DUT_MAP6489                0x0001180080E0CAC8  RSL
L2C_DUT_MAP6490                0x0001180080E0CAD0  RSL
L2C_DUT_MAP6491                0x0001180080E0CAD8  RSL
L2C_DUT_MAP6492                0x0001180080E0CAE0  RSL
L2C_DUT_MAP6493                0x0001180080E0CAE8  RSL
L2C_DUT_MAP6494                0x0001180080E0CAF0  RSL
L2C_DUT_MAP6495                0x0001180080E0CAF8  RSL
L2C_DUT_MAP6496                0x0001180080E0CB00  RSL
L2C_DUT_MAP6497                0x0001180080E0CB08  RSL
L2C_DUT_MAP6498                0x0001180080E0CB10  RSL
L2C_DUT_MAP6499                0x0001180080E0CB18  RSL
L2C_DUT_MAP6500                0x0001180080E0CB20  RSL
L2C_DUT_MAP6501                0x0001180080E0CB28  RSL
L2C_DUT_MAP6502                0x0001180080E0CB30  RSL
L2C_DUT_MAP6503                0x0001180080E0CB38  RSL
L2C_DUT_MAP6504                0x0001180080E0CB40  RSL
L2C_DUT_MAP6505                0x0001180080E0CB48  RSL
L2C_DUT_MAP6506                0x0001180080E0CB50  RSL
L2C_DUT_MAP6507                0x0001180080E0CB58  RSL
L2C_DUT_MAP6508                0x0001180080E0CB60  RSL
L2C_DUT_MAP6509                0x0001180080E0CB68  RSL
L2C_DUT_MAP6510                0x0001180080E0CB70  RSL
L2C_DUT_MAP6511                0x0001180080E0CB78  RSL
L2C_DUT_MAP6512                0x0001180080E0CB80  RSL
L2C_DUT_MAP6513                0x0001180080E0CB88  RSL
L2C_DUT_MAP6514                0x0001180080E0CB90  RSL
L2C_DUT_MAP6515                0x0001180080E0CB98  RSL
L2C_DUT_MAP6516                0x0001180080E0CBA0  RSL
L2C_DUT_MAP6517                0x0001180080E0CBA8  RSL
L2C_DUT_MAP6518                0x0001180080E0CBB0  RSL
L2C_DUT_MAP6519                0x0001180080E0CBB8  RSL
L2C_DUT_MAP6520                0x0001180080E0CBC0  RSL
L2C_DUT_MAP6521                0x0001180080E0CBC8  RSL
L2C_DUT_MAP6522                0x0001180080E0CBD0  RSL
L2C_DUT_MAP6523                0x0001180080E0CBD8  RSL
L2C_DUT_MAP6524                0x0001180080E0CBE0  RSL
L2C_DUT_MAP6525                0x0001180080E0CBE8  RSL
L2C_DUT_MAP6526                0x0001180080E0CBF0  RSL
L2C_DUT_MAP6527                0x0001180080E0CBF8  RSL
L2C_DUT_MAP6528                0x0001180080E0CC00  RSL
L2C_DUT_MAP6529                0x0001180080E0CC08  RSL
L2C_DUT_MAP6530                0x0001180080E0CC10  RSL
L2C_DUT_MAP6531                0x0001180080E0CC18  RSL
L2C_DUT_MAP6532                0x0001180080E0CC20  RSL
L2C_DUT_MAP6533                0x0001180080E0CC28  RSL
L2C_DUT_MAP6534                0x0001180080E0CC30  RSL
L2C_DUT_MAP6535                0x0001180080E0CC38  RSL
L2C_DUT_MAP6536                0x0001180080E0CC40  RSL
L2C_DUT_MAP6537                0x0001180080E0CC48  RSL
L2C_DUT_MAP6538                0x0001180080E0CC50  RSL
L2C_DUT_MAP6539                0x0001180080E0CC58  RSL
L2C_DUT_MAP6540                0x0001180080E0CC60  RSL
L2C_DUT_MAP6541                0x0001180080E0CC68  RSL
L2C_DUT_MAP6542                0x0001180080E0CC70  RSL
L2C_DUT_MAP6543                0x0001180080E0CC78  RSL
L2C_DUT_MAP6544                0x0001180080E0CC80  RSL
L2C_DUT_MAP6545                0x0001180080E0CC88  RSL
L2C_DUT_MAP6546                0x0001180080E0CC90  RSL
L2C_DUT_MAP6547                0x0001180080E0CC98  RSL
L2C_DUT_MAP6548                0x0001180080E0CCA0  RSL
L2C_DUT_MAP6549                0x0001180080E0CCA8  RSL
L2C_DUT_MAP6550                0x0001180080E0CCB0  RSL
L2C_DUT_MAP6551                0x0001180080E0CCB8  RSL
L2C_DUT_MAP6552                0x0001180080E0CCC0  RSL
L2C_DUT_MAP6553                0x0001180080E0CCC8  RSL
L2C_DUT_MAP6554                0x0001180080E0CCD0  RSL
L2C_DUT_MAP6555                0x0001180080E0CCD8  RSL
L2C_DUT_MAP6556                0x0001180080E0CCE0  RSL
L2C_DUT_MAP6557                0x0001180080E0CCE8  RSL
L2C_DUT_MAP6558                0x0001180080E0CCF0  RSL
L2C_DUT_MAP6559                0x0001180080E0CCF8  RSL
L2C_DUT_MAP6560                0x0001180080E0CD00  RSL
L2C_DUT_MAP6561                0x0001180080E0CD08  RSL
L2C_DUT_MAP6562                0x0001180080E0CD10  RSL
L2C_DUT_MAP6563                0x0001180080E0CD18  RSL
L2C_DUT_MAP6564                0x0001180080E0CD20  RSL
L2C_DUT_MAP6565                0x0001180080E0CD28  RSL
L2C_DUT_MAP6566                0x0001180080E0CD30  RSL
L2C_DUT_MAP6567                0x0001180080E0CD38  RSL
L2C_DUT_MAP6568                0x0001180080E0CD40  RSL
L2C_DUT_MAP6569                0x0001180080E0CD48  RSL
L2C_DUT_MAP6570                0x0001180080E0CD50  RSL
L2C_DUT_MAP6571                0x0001180080E0CD58  RSL
L2C_DUT_MAP6572                0x0001180080E0CD60  RSL
L2C_DUT_MAP6573                0x0001180080E0CD68  RSL
L2C_DUT_MAP6574                0x0001180080E0CD70  RSL
L2C_DUT_MAP6575                0x0001180080E0CD78  RSL
L2C_DUT_MAP6576                0x0001180080E0CD80  RSL
L2C_DUT_MAP6577                0x0001180080E0CD88  RSL
L2C_DUT_MAP6578                0x0001180080E0CD90  RSL
L2C_DUT_MAP6579                0x0001180080E0CD98  RSL
L2C_DUT_MAP6580                0x0001180080E0CDA0  RSL
L2C_DUT_MAP6581                0x0001180080E0CDA8  RSL
L2C_DUT_MAP6582                0x0001180080E0CDB0  RSL
L2C_DUT_MAP6583                0x0001180080E0CDB8  RSL
L2C_DUT_MAP6584                0x0001180080E0CDC0  RSL
L2C_DUT_MAP6585                0x0001180080E0CDC8  RSL
L2C_DUT_MAP6586                0x0001180080E0CDD0  RSL
L2C_DUT_MAP6587                0x0001180080E0CDD8  RSL
L2C_DUT_MAP6588                0x0001180080E0CDE0  RSL
L2C_DUT_MAP6589                0x0001180080E0CDE8  RSL
L2C_DUT_MAP6590                0x0001180080E0CDF0  RSL
L2C_DUT_MAP6591                0x0001180080E0CDF8  RSL
L2C_DUT_MAP6592                0x0001180080E0CE00  RSL
L2C_DUT_MAP6593                0x0001180080E0CE08  RSL
L2C_DUT_MAP6594                0x0001180080E0CE10  RSL
L2C_DUT_MAP6595                0x0001180080E0CE18  RSL
L2C_DUT_MAP6596                0x0001180080E0CE20  RSL
L2C_DUT_MAP6597                0x0001180080E0CE28  RSL
L2C_DUT_MAP6598                0x0001180080E0CE30  RSL
L2C_DUT_MAP6599                0x0001180080E0CE38  RSL
L2C_DUT_MAP6600                0x0001180080E0CE40  RSL
L2C_DUT_MAP6601                0x0001180080E0CE48  RSL
L2C_DUT_MAP6602                0x0001180080E0CE50  RSL
L2C_DUT_MAP6603                0x0001180080E0CE58  RSL
L2C_DUT_MAP6604                0x0001180080E0CE60  RSL
L2C_DUT_MAP6605                0x0001180080E0CE68  RSL
L2C_DUT_MAP6606                0x0001180080E0CE70  RSL
L2C_DUT_MAP6607                0x0001180080E0CE78  RSL
L2C_DUT_MAP6608                0x0001180080E0CE80  RSL
L2C_DUT_MAP6609                0x0001180080E0CE88  RSL
L2C_DUT_MAP6610                0x0001180080E0CE90  RSL
L2C_DUT_MAP6611                0x0001180080E0CE98  RSL
L2C_DUT_MAP6612                0x0001180080E0CEA0  RSL
L2C_DUT_MAP6613                0x0001180080E0CEA8  RSL
L2C_DUT_MAP6614                0x0001180080E0CEB0  RSL
L2C_DUT_MAP6615                0x0001180080E0CEB8  RSL
L2C_DUT_MAP6616                0x0001180080E0CEC0  RSL
L2C_DUT_MAP6617                0x0001180080E0CEC8  RSL
L2C_DUT_MAP6618                0x0001180080E0CED0  RSL
L2C_DUT_MAP6619                0x0001180080E0CED8  RSL
L2C_DUT_MAP6620                0x0001180080E0CEE0  RSL
L2C_DUT_MAP6621                0x0001180080E0CEE8  RSL
L2C_DUT_MAP6622                0x0001180080E0CEF0  RSL
L2C_DUT_MAP6623                0x0001180080E0CEF8  RSL
L2C_DUT_MAP6624                0x0001180080E0CF00  RSL
L2C_DUT_MAP6625                0x0001180080E0CF08  RSL
L2C_DUT_MAP6626                0x0001180080E0CF10  RSL
L2C_DUT_MAP6627                0x0001180080E0CF18  RSL
L2C_DUT_MAP6628                0x0001180080E0CF20  RSL
L2C_DUT_MAP6629                0x0001180080E0CF28  RSL
L2C_DUT_MAP6630                0x0001180080E0CF30  RSL
L2C_DUT_MAP6631                0x0001180080E0CF38  RSL
L2C_DUT_MAP6632                0x0001180080E0CF40  RSL
L2C_DUT_MAP6633                0x0001180080E0CF48  RSL
L2C_DUT_MAP6634                0x0001180080E0CF50  RSL
L2C_DUT_MAP6635                0x0001180080E0CF58  RSL
L2C_DUT_MAP6636                0x0001180080E0CF60  RSL
L2C_DUT_MAP6637                0x0001180080E0CF68  RSL
L2C_DUT_MAP6638                0x0001180080E0CF70  RSL
L2C_DUT_MAP6639                0x0001180080E0CF78  RSL
L2C_DUT_MAP6640                0x0001180080E0CF80  RSL
L2C_DUT_MAP6641                0x0001180080E0CF88  RSL
L2C_DUT_MAP6642                0x0001180080E0CF90  RSL
L2C_DUT_MAP6643                0x0001180080E0CF98  RSL
L2C_DUT_MAP6644                0x0001180080E0CFA0  RSL
L2C_DUT_MAP6645                0x0001180080E0CFA8  RSL
L2C_DUT_MAP6646                0x0001180080E0CFB0  RSL
L2C_DUT_MAP6647                0x0001180080E0CFB8  RSL
L2C_DUT_MAP6648                0x0001180080E0CFC0  RSL
L2C_DUT_MAP6649                0x0001180080E0CFC8  RSL
L2C_DUT_MAP6650                0x0001180080E0CFD0  RSL
L2C_DUT_MAP6651                0x0001180080E0CFD8  RSL
L2C_DUT_MAP6652                0x0001180080E0CFE0  RSL
L2C_DUT_MAP6653                0x0001180080E0CFE8  RSL
L2C_DUT_MAP6654                0x0001180080E0CFF0  RSL
L2C_DUT_MAP6655                0x0001180080E0CFF8  RSL
L2C_DUT_MAP6656                0x0001180080E0D000  RSL
L2C_DUT_MAP6657                0x0001180080E0D008  RSL
L2C_DUT_MAP6658                0x0001180080E0D010  RSL
L2C_DUT_MAP6659                0x0001180080E0D018  RSL
L2C_DUT_MAP6660                0x0001180080E0D020  RSL
L2C_DUT_MAP6661                0x0001180080E0D028  RSL
L2C_DUT_MAP6662                0x0001180080E0D030  RSL
L2C_DUT_MAP6663                0x0001180080E0D038  RSL
L2C_DUT_MAP6664                0x0001180080E0D040  RSL
L2C_DUT_MAP6665                0x0001180080E0D048  RSL
L2C_DUT_MAP6666                0x0001180080E0D050  RSL
L2C_DUT_MAP6667                0x0001180080E0D058  RSL
L2C_DUT_MAP6668                0x0001180080E0D060  RSL
L2C_DUT_MAP6669                0x0001180080E0D068  RSL
L2C_DUT_MAP6670                0x0001180080E0D070  RSL
L2C_DUT_MAP6671                0x0001180080E0D078  RSL
L2C_DUT_MAP6672                0x0001180080E0D080  RSL
L2C_DUT_MAP6673                0x0001180080E0D088  RSL
L2C_DUT_MAP6674                0x0001180080E0D090  RSL
L2C_DUT_MAP6675                0x0001180080E0D098  RSL
L2C_DUT_MAP6676                0x0001180080E0D0A0  RSL
L2C_DUT_MAP6677                0x0001180080E0D0A8  RSL
L2C_DUT_MAP6678                0x0001180080E0D0B0  RSL
L2C_DUT_MAP6679                0x0001180080E0D0B8  RSL
L2C_DUT_MAP6680                0x0001180080E0D0C0  RSL
L2C_DUT_MAP6681                0x0001180080E0D0C8  RSL
L2C_DUT_MAP6682                0x0001180080E0D0D0  RSL
L2C_DUT_MAP6683                0x0001180080E0D0D8  RSL
L2C_DUT_MAP6684                0x0001180080E0D0E0  RSL
L2C_DUT_MAP6685                0x0001180080E0D0E8  RSL
L2C_DUT_MAP6686                0x0001180080E0D0F0  RSL
L2C_DUT_MAP6687                0x0001180080E0D0F8  RSL
L2C_DUT_MAP6688                0x0001180080E0D100  RSL
L2C_DUT_MAP6689                0x0001180080E0D108  RSL
L2C_DUT_MAP6690                0x0001180080E0D110  RSL
L2C_DUT_MAP6691                0x0001180080E0D118  RSL
L2C_DUT_MAP6692                0x0001180080E0D120  RSL
L2C_DUT_MAP6693                0x0001180080E0D128  RSL
L2C_DUT_MAP6694                0x0001180080E0D130  RSL
L2C_DUT_MAP6695                0x0001180080E0D138  RSL
L2C_DUT_MAP6696                0x0001180080E0D140  RSL
L2C_DUT_MAP6697                0x0001180080E0D148  RSL
L2C_DUT_MAP6698                0x0001180080E0D150  RSL
L2C_DUT_MAP6699                0x0001180080E0D158  RSL
L2C_DUT_MAP6700                0x0001180080E0D160  RSL
L2C_DUT_MAP6701                0x0001180080E0D168  RSL
L2C_DUT_MAP6702                0x0001180080E0D170  RSL
L2C_DUT_MAP6703                0x0001180080E0D178  RSL
L2C_DUT_MAP6704                0x0001180080E0D180  RSL
L2C_DUT_MAP6705                0x0001180080E0D188  RSL
L2C_DUT_MAP6706                0x0001180080E0D190  RSL
L2C_DUT_MAP6707                0x0001180080E0D198  RSL
L2C_DUT_MAP6708                0x0001180080E0D1A0  RSL
L2C_DUT_MAP6709                0x0001180080E0D1A8  RSL
L2C_DUT_MAP6710                0x0001180080E0D1B0  RSL
L2C_DUT_MAP6711                0x0001180080E0D1B8  RSL
L2C_DUT_MAP6712                0x0001180080E0D1C0  RSL
L2C_DUT_MAP6713                0x0001180080E0D1C8  RSL
L2C_DUT_MAP6714                0x0001180080E0D1D0  RSL
L2C_DUT_MAP6715                0x0001180080E0D1D8  RSL
L2C_DUT_MAP6716                0x0001180080E0D1E0  RSL
L2C_DUT_MAP6717                0x0001180080E0D1E8  RSL
L2C_DUT_MAP6718                0x0001180080E0D1F0  RSL
L2C_DUT_MAP6719                0x0001180080E0D1F8  RSL
L2C_DUT_MAP6720                0x0001180080E0D200  RSL
L2C_DUT_MAP6721                0x0001180080E0D208  RSL
L2C_DUT_MAP6722                0x0001180080E0D210  RSL
L2C_DUT_MAP6723                0x0001180080E0D218  RSL
L2C_DUT_MAP6724                0x0001180080E0D220  RSL
L2C_DUT_MAP6725                0x0001180080E0D228  RSL
L2C_DUT_MAP6726                0x0001180080E0D230  RSL
L2C_DUT_MAP6727                0x0001180080E0D238  RSL
L2C_DUT_MAP6728                0x0001180080E0D240  RSL
L2C_DUT_MAP6729                0x0001180080E0D248  RSL
L2C_DUT_MAP6730                0x0001180080E0D250  RSL
L2C_DUT_MAP6731                0x0001180080E0D258  RSL
L2C_DUT_MAP6732                0x0001180080E0D260  RSL
L2C_DUT_MAP6733                0x0001180080E0D268  RSL
L2C_DUT_MAP6734                0x0001180080E0D270  RSL
L2C_DUT_MAP6735                0x0001180080E0D278  RSL
L2C_DUT_MAP6736                0x0001180080E0D280  RSL
L2C_DUT_MAP6737                0x0001180080E0D288  RSL
L2C_DUT_MAP6738                0x0001180080E0D290  RSL
L2C_DUT_MAP6739                0x0001180080E0D298  RSL
L2C_DUT_MAP6740                0x0001180080E0D2A0  RSL
L2C_DUT_MAP6741                0x0001180080E0D2A8  RSL
L2C_DUT_MAP6742                0x0001180080E0D2B0  RSL
L2C_DUT_MAP6743                0x0001180080E0D2B8  RSL
L2C_DUT_MAP6744                0x0001180080E0D2C0  RSL
L2C_DUT_MAP6745                0x0001180080E0D2C8  RSL
L2C_DUT_MAP6746                0x0001180080E0D2D0  RSL
L2C_DUT_MAP6747                0x0001180080E0D2D8  RSL
L2C_DUT_MAP6748                0x0001180080E0D2E0  RSL
L2C_DUT_MAP6749                0x0001180080E0D2E8  RSL
L2C_DUT_MAP6750                0x0001180080E0D2F0  RSL
L2C_DUT_MAP6751                0x0001180080E0D2F8  RSL
L2C_DUT_MAP6752                0x0001180080E0D300  RSL
L2C_DUT_MAP6753                0x0001180080E0D308  RSL
L2C_DUT_MAP6754                0x0001180080E0D310  RSL
L2C_DUT_MAP6755                0x0001180080E0D318  RSL
L2C_DUT_MAP6756                0x0001180080E0D320  RSL
L2C_DUT_MAP6757                0x0001180080E0D328  RSL
L2C_DUT_MAP6758                0x0001180080E0D330  RSL
L2C_DUT_MAP6759                0x0001180080E0D338  RSL
L2C_DUT_MAP6760                0x0001180080E0D340  RSL
L2C_DUT_MAP6761                0x0001180080E0D348  RSL
L2C_DUT_MAP6762                0x0001180080E0D350  RSL
L2C_DUT_MAP6763                0x0001180080E0D358  RSL
L2C_DUT_MAP6764                0x0001180080E0D360  RSL
L2C_DUT_MAP6765                0x0001180080E0D368  RSL
L2C_DUT_MAP6766                0x0001180080E0D370  RSL
L2C_DUT_MAP6767                0x0001180080E0D378  RSL
L2C_DUT_MAP6768                0x0001180080E0D380  RSL
L2C_DUT_MAP6769                0x0001180080E0D388  RSL
L2C_DUT_MAP6770                0x0001180080E0D390  RSL
L2C_DUT_MAP6771                0x0001180080E0D398  RSL
L2C_DUT_MAP6772                0x0001180080E0D3A0  RSL
L2C_DUT_MAP6773                0x0001180080E0D3A8  RSL
L2C_DUT_MAP6774                0x0001180080E0D3B0  RSL
L2C_DUT_MAP6775                0x0001180080E0D3B8  RSL
L2C_DUT_MAP6776                0x0001180080E0D3C0  RSL
L2C_DUT_MAP6777                0x0001180080E0D3C8  RSL
L2C_DUT_MAP6778                0x0001180080E0D3D0  RSL
L2C_DUT_MAP6779                0x0001180080E0D3D8  RSL
L2C_DUT_MAP6780                0x0001180080E0D3E0  RSL
L2C_DUT_MAP6781                0x0001180080E0D3E8  RSL
L2C_DUT_MAP6782                0x0001180080E0D3F0  RSL
L2C_DUT_MAP6783                0x0001180080E0D3F8  RSL
L2C_DUT_MAP6784                0x0001180080E0D400  RSL
L2C_DUT_MAP6785                0x0001180080E0D408  RSL
L2C_DUT_MAP6786                0x0001180080E0D410  RSL
L2C_DUT_MAP6787                0x0001180080E0D418  RSL
L2C_DUT_MAP6788                0x0001180080E0D420  RSL
L2C_DUT_MAP6789                0x0001180080E0D428  RSL
L2C_DUT_MAP6790                0x0001180080E0D430  RSL
L2C_DUT_MAP6791                0x0001180080E0D438  RSL
L2C_DUT_MAP6792                0x0001180080E0D440  RSL
L2C_DUT_MAP6793                0x0001180080E0D448  RSL
L2C_DUT_MAP6794                0x0001180080E0D450  RSL
L2C_DUT_MAP6795                0x0001180080E0D458  RSL
L2C_DUT_MAP6796                0x0001180080E0D460  RSL
L2C_DUT_MAP6797                0x0001180080E0D468  RSL
L2C_DUT_MAP6798                0x0001180080E0D470  RSL
L2C_DUT_MAP6799                0x0001180080E0D478  RSL
L2C_DUT_MAP6800                0x0001180080E0D480  RSL
L2C_DUT_MAP6801                0x0001180080E0D488  RSL
L2C_DUT_MAP6802                0x0001180080E0D490  RSL
L2C_DUT_MAP6803                0x0001180080E0D498  RSL
L2C_DUT_MAP6804                0x0001180080E0D4A0  RSL
L2C_DUT_MAP6805                0x0001180080E0D4A8  RSL
L2C_DUT_MAP6806                0x0001180080E0D4B0  RSL
L2C_DUT_MAP6807                0x0001180080E0D4B8  RSL
L2C_DUT_MAP6808                0x0001180080E0D4C0  RSL
L2C_DUT_MAP6809                0x0001180080E0D4C8  RSL
L2C_DUT_MAP6810                0x0001180080E0D4D0  RSL
L2C_DUT_MAP6811                0x0001180080E0D4D8  RSL
L2C_DUT_MAP6812                0x0001180080E0D4E0  RSL
L2C_DUT_MAP6813                0x0001180080E0D4E8  RSL
L2C_DUT_MAP6814                0x0001180080E0D4F0  RSL
L2C_DUT_MAP6815                0x0001180080E0D4F8  RSL
L2C_DUT_MAP6816                0x0001180080E0D500  RSL
L2C_DUT_MAP6817                0x0001180080E0D508  RSL
L2C_DUT_MAP6818                0x0001180080E0D510  RSL
L2C_DUT_MAP6819                0x0001180080E0D518  RSL
L2C_DUT_MAP6820                0x0001180080E0D520  RSL
L2C_DUT_MAP6821                0x0001180080E0D528  RSL
L2C_DUT_MAP6822                0x0001180080E0D530  RSL
L2C_DUT_MAP6823                0x0001180080E0D538  RSL
L2C_DUT_MAP6824                0x0001180080E0D540  RSL
L2C_DUT_MAP6825                0x0001180080E0D548  RSL
L2C_DUT_MAP6826                0x0001180080E0D550  RSL
L2C_DUT_MAP6827                0x0001180080E0D558  RSL
L2C_DUT_MAP6828                0x0001180080E0D560  RSL
L2C_DUT_MAP6829                0x0001180080E0D568  RSL
L2C_DUT_MAP6830                0x0001180080E0D570  RSL
L2C_DUT_MAP6831                0x0001180080E0D578  RSL
L2C_DUT_MAP6832                0x0001180080E0D580  RSL
L2C_DUT_MAP6833                0x0001180080E0D588  RSL
L2C_DUT_MAP6834                0x0001180080E0D590  RSL
L2C_DUT_MAP6835                0x0001180080E0D598  RSL
L2C_DUT_MAP6836                0x0001180080E0D5A0  RSL
L2C_DUT_MAP6837                0x0001180080E0D5A8  RSL
L2C_DUT_MAP6838                0x0001180080E0D5B0  RSL
L2C_DUT_MAP6839                0x0001180080E0D5B8  RSL
L2C_DUT_MAP6840                0x0001180080E0D5C0  RSL
L2C_DUT_MAP6841                0x0001180080E0D5C8  RSL
L2C_DUT_MAP6842                0x0001180080E0D5D0  RSL
L2C_DUT_MAP6843                0x0001180080E0D5D8  RSL
L2C_DUT_MAP6844                0x0001180080E0D5E0  RSL
L2C_DUT_MAP6845                0x0001180080E0D5E8  RSL
L2C_DUT_MAP6846                0x0001180080E0D5F0  RSL
L2C_DUT_MAP6847                0x0001180080E0D5F8  RSL
L2C_DUT_MAP6848                0x0001180080E0D600  RSL
L2C_DUT_MAP6849                0x0001180080E0D608  RSL
L2C_DUT_MAP6850                0x0001180080E0D610  RSL
L2C_DUT_MAP6851                0x0001180080E0D618  RSL
L2C_DUT_MAP6852                0x0001180080E0D620  RSL
L2C_DUT_MAP6853                0x0001180080E0D628  RSL
L2C_DUT_MAP6854                0x0001180080E0D630  RSL
L2C_DUT_MAP6855                0x0001180080E0D638  RSL
L2C_DUT_MAP6856                0x0001180080E0D640  RSL
L2C_DUT_MAP6857                0x0001180080E0D648  RSL
L2C_DUT_MAP6858                0x0001180080E0D650  RSL
L2C_DUT_MAP6859                0x0001180080E0D658  RSL
L2C_DUT_MAP6860                0x0001180080E0D660  RSL
L2C_DUT_MAP6861                0x0001180080E0D668  RSL
L2C_DUT_MAP6862                0x0001180080E0D670  RSL
L2C_DUT_MAP6863                0x0001180080E0D678  RSL
L2C_DUT_MAP6864                0x0001180080E0D680  RSL
L2C_DUT_MAP6865                0x0001180080E0D688  RSL
L2C_DUT_MAP6866                0x0001180080E0D690  RSL
L2C_DUT_MAP6867                0x0001180080E0D698  RSL
L2C_DUT_MAP6868                0x0001180080E0D6A0  RSL
L2C_DUT_MAP6869                0x0001180080E0D6A8  RSL
L2C_DUT_MAP6870                0x0001180080E0D6B0  RSL
L2C_DUT_MAP6871                0x0001180080E0D6B8  RSL
L2C_DUT_MAP6872                0x0001180080E0D6C0  RSL
L2C_DUT_MAP6873                0x0001180080E0D6C8  RSL
L2C_DUT_MAP6874                0x0001180080E0D6D0  RSL
L2C_DUT_MAP6875                0x0001180080E0D6D8  RSL
L2C_DUT_MAP6876                0x0001180080E0D6E0  RSL
L2C_DUT_MAP6877                0x0001180080E0D6E8  RSL
L2C_DUT_MAP6878                0x0001180080E0D6F0  RSL
L2C_DUT_MAP6879                0x0001180080E0D6F8  RSL
L2C_DUT_MAP6880                0x0001180080E0D700  RSL
L2C_DUT_MAP6881                0x0001180080E0D708  RSL
L2C_DUT_MAP6882                0x0001180080E0D710  RSL
L2C_DUT_MAP6883                0x0001180080E0D718  RSL
L2C_DUT_MAP6884                0x0001180080E0D720  RSL
L2C_DUT_MAP6885                0x0001180080E0D728  RSL
L2C_DUT_MAP6886                0x0001180080E0D730  RSL
L2C_DUT_MAP6887                0x0001180080E0D738  RSL
L2C_DUT_MAP6888                0x0001180080E0D740  RSL
L2C_DUT_MAP6889                0x0001180080E0D748  RSL
L2C_DUT_MAP6890                0x0001180080E0D750  RSL
L2C_DUT_MAP6891                0x0001180080E0D758  RSL
L2C_DUT_MAP6892                0x0001180080E0D760  RSL
L2C_DUT_MAP6893                0x0001180080E0D768  RSL
L2C_DUT_MAP6894                0x0001180080E0D770  RSL
L2C_DUT_MAP6895                0x0001180080E0D778  RSL
L2C_DUT_MAP6896                0x0001180080E0D780  RSL
L2C_DUT_MAP6897                0x0001180080E0D788  RSL
L2C_DUT_MAP6898                0x0001180080E0D790  RSL
L2C_DUT_MAP6899                0x0001180080E0D798  RSL
L2C_DUT_MAP6900                0x0001180080E0D7A0  RSL
L2C_DUT_MAP6901                0x0001180080E0D7A8  RSL
L2C_DUT_MAP6902                0x0001180080E0D7B0  RSL
L2C_DUT_MAP6903                0x0001180080E0D7B8  RSL
L2C_DUT_MAP6904                0x0001180080E0D7C0  RSL
L2C_DUT_MAP6905                0x0001180080E0D7C8  RSL
L2C_DUT_MAP6906                0x0001180080E0D7D0  RSL
L2C_DUT_MAP6907                0x0001180080E0D7D8  RSL
L2C_DUT_MAP6908                0x0001180080E0D7E0  RSL
L2C_DUT_MAP6909                0x0001180080E0D7E8  RSL
L2C_DUT_MAP6910                0x0001180080E0D7F0  RSL
L2C_DUT_MAP6911                0x0001180080E0D7F8  RSL
L2C_DUT_MAP6912                0x0001180080E0D800  RSL
L2C_DUT_MAP6913                0x0001180080E0D808  RSL
L2C_DUT_MAP6914                0x0001180080E0D810  RSL
L2C_DUT_MAP6915                0x0001180080E0D818  RSL
L2C_DUT_MAP6916                0x0001180080E0D820  RSL
L2C_DUT_MAP6917                0x0001180080E0D828  RSL
L2C_DUT_MAP6918                0x0001180080E0D830  RSL
L2C_DUT_MAP6919                0x0001180080E0D838  RSL
L2C_DUT_MAP6920                0x0001180080E0D840  RSL
L2C_DUT_MAP6921                0x0001180080E0D848  RSL
L2C_DUT_MAP6922                0x0001180080E0D850  RSL
L2C_DUT_MAP6923                0x0001180080E0D858  RSL
L2C_DUT_MAP6924                0x0001180080E0D860  RSL
L2C_DUT_MAP6925                0x0001180080E0D868  RSL
L2C_DUT_MAP6926                0x0001180080E0D870  RSL
L2C_DUT_MAP6927                0x0001180080E0D878  RSL
L2C_DUT_MAP6928                0x0001180080E0D880  RSL
L2C_DUT_MAP6929                0x0001180080E0D888  RSL
L2C_DUT_MAP6930                0x0001180080E0D890  RSL
L2C_DUT_MAP6931                0x0001180080E0D898  RSL
L2C_DUT_MAP6932                0x0001180080E0D8A0  RSL
L2C_DUT_MAP6933                0x0001180080E0D8A8  RSL
L2C_DUT_MAP6934                0x0001180080E0D8B0  RSL
L2C_DUT_MAP6935                0x0001180080E0D8B8  RSL
L2C_DUT_MAP6936                0x0001180080E0D8C0  RSL
L2C_DUT_MAP6937                0x0001180080E0D8C8  RSL
L2C_DUT_MAP6938                0x0001180080E0D8D0  RSL
L2C_DUT_MAP6939                0x0001180080E0D8D8  RSL
L2C_DUT_MAP6940                0x0001180080E0D8E0  RSL
L2C_DUT_MAP6941                0x0001180080E0D8E8  RSL
L2C_DUT_MAP6942                0x0001180080E0D8F0  RSL
L2C_DUT_MAP6943                0x0001180080E0D8F8  RSL
L2C_DUT_MAP6944                0x0001180080E0D900  RSL
L2C_DUT_MAP6945                0x0001180080E0D908  RSL
L2C_DUT_MAP6946                0x0001180080E0D910  RSL
L2C_DUT_MAP6947                0x0001180080E0D918  RSL
L2C_DUT_MAP6948                0x0001180080E0D920  RSL
L2C_DUT_MAP6949                0x0001180080E0D928  RSL
L2C_DUT_MAP6950                0x0001180080E0D930  RSL
L2C_DUT_MAP6951                0x0001180080E0D938  RSL
L2C_DUT_MAP6952                0x0001180080E0D940  RSL
L2C_DUT_MAP6953                0x0001180080E0D948  RSL
L2C_DUT_MAP6954                0x0001180080E0D950  RSL
L2C_DUT_MAP6955                0x0001180080E0D958  RSL
L2C_DUT_MAP6956                0x0001180080E0D960  RSL
L2C_DUT_MAP6957                0x0001180080E0D968  RSL
L2C_DUT_MAP6958                0x0001180080E0D970  RSL
L2C_DUT_MAP6959                0x0001180080E0D978  RSL
L2C_DUT_MAP6960                0x0001180080E0D980  RSL
L2C_DUT_MAP6961                0x0001180080E0D988  RSL
L2C_DUT_MAP6962                0x0001180080E0D990  RSL
L2C_DUT_MAP6963                0x0001180080E0D998  RSL
L2C_DUT_MAP6964                0x0001180080E0D9A0  RSL
L2C_DUT_MAP6965                0x0001180080E0D9A8  RSL
L2C_DUT_MAP6966                0x0001180080E0D9B0  RSL
L2C_DUT_MAP6967                0x0001180080E0D9B8  RSL
L2C_DUT_MAP6968                0x0001180080E0D9C0  RSL
L2C_DUT_MAP6969                0x0001180080E0D9C8  RSL
L2C_DUT_MAP6970                0x0001180080E0D9D0  RSL
L2C_DUT_MAP6971                0x0001180080E0D9D8  RSL
L2C_DUT_MAP6972                0x0001180080E0D9E0  RSL
L2C_DUT_MAP6973                0x0001180080E0D9E8  RSL
L2C_DUT_MAP6974                0x0001180080E0D9F0  RSL
L2C_DUT_MAP6975                0x0001180080E0D9F8  RSL
L2C_DUT_MAP6976                0x0001180080E0DA00  RSL
L2C_DUT_MAP6977                0x0001180080E0DA08  RSL
L2C_DUT_MAP6978                0x0001180080E0DA10  RSL
L2C_DUT_MAP6979                0x0001180080E0DA18  RSL
L2C_DUT_MAP6980                0x0001180080E0DA20  RSL
L2C_DUT_MAP6981                0x0001180080E0DA28  RSL
L2C_DUT_MAP6982                0x0001180080E0DA30  RSL
L2C_DUT_MAP6983                0x0001180080E0DA38  RSL
L2C_DUT_MAP6984                0x0001180080E0DA40  RSL
L2C_DUT_MAP6985                0x0001180080E0DA48  RSL
L2C_DUT_MAP6986                0x0001180080E0DA50  RSL
L2C_DUT_MAP6987                0x0001180080E0DA58  RSL
L2C_DUT_MAP6988                0x0001180080E0DA60  RSL
L2C_DUT_MAP6989                0x0001180080E0DA68  RSL
L2C_DUT_MAP6990                0x0001180080E0DA70  RSL
L2C_DUT_MAP6991                0x0001180080E0DA78  RSL
L2C_DUT_MAP6992                0x0001180080E0DA80  RSL
L2C_DUT_MAP6993                0x0001180080E0DA88  RSL
L2C_DUT_MAP6994                0x0001180080E0DA90  RSL
L2C_DUT_MAP6995                0x0001180080E0DA98  RSL
L2C_DUT_MAP6996                0x0001180080E0DAA0  RSL
L2C_DUT_MAP6997                0x0001180080E0DAA8  RSL
L2C_DUT_MAP6998                0x0001180080E0DAB0  RSL
L2C_DUT_MAP6999                0x0001180080E0DAB8  RSL
L2C_DUT_MAP7000                0x0001180080E0DAC0  RSL
L2C_DUT_MAP7001                0x0001180080E0DAC8  RSL
L2C_DUT_MAP7002                0x0001180080E0DAD0  RSL
L2C_DUT_MAP7003                0x0001180080E0DAD8  RSL
L2C_DUT_MAP7004                0x0001180080E0DAE0  RSL
L2C_DUT_MAP7005                0x0001180080E0DAE8  RSL
L2C_DUT_MAP7006                0x0001180080E0DAF0  RSL
L2C_DUT_MAP7007                0x0001180080E0DAF8  RSL
L2C_DUT_MAP7008                0x0001180080E0DB00  RSL
L2C_DUT_MAP7009                0x0001180080E0DB08  RSL
L2C_DUT_MAP7010                0x0001180080E0DB10  RSL
L2C_DUT_MAP7011                0x0001180080E0DB18  RSL
L2C_DUT_MAP7012                0x0001180080E0DB20  RSL
L2C_DUT_MAP7013                0x0001180080E0DB28  RSL
L2C_DUT_MAP7014                0x0001180080E0DB30  RSL
L2C_DUT_MAP7015                0x0001180080E0DB38  RSL
L2C_DUT_MAP7016                0x0001180080E0DB40  RSL
L2C_DUT_MAP7017                0x0001180080E0DB48  RSL
L2C_DUT_MAP7018                0x0001180080E0DB50  RSL
L2C_DUT_MAP7019                0x0001180080E0DB58  RSL
L2C_DUT_MAP7020                0x0001180080E0DB60  RSL
L2C_DUT_MAP7021                0x0001180080E0DB68  RSL
L2C_DUT_MAP7022                0x0001180080E0DB70  RSL
L2C_DUT_MAP7023                0x0001180080E0DB78  RSL
L2C_DUT_MAP7024                0x0001180080E0DB80  RSL
L2C_DUT_MAP7025                0x0001180080E0DB88  RSL
L2C_DUT_MAP7026                0x0001180080E0DB90  RSL
L2C_DUT_MAP7027                0x0001180080E0DB98  RSL
L2C_DUT_MAP7028                0x0001180080E0DBA0  RSL
L2C_DUT_MAP7029                0x0001180080E0DBA8  RSL
L2C_DUT_MAP7030                0x0001180080E0DBB0  RSL
L2C_DUT_MAP7031                0x0001180080E0DBB8  RSL
L2C_DUT_MAP7032                0x0001180080E0DBC0  RSL
L2C_DUT_MAP7033                0x0001180080E0DBC8  RSL
L2C_DUT_MAP7034                0x0001180080E0DBD0  RSL
L2C_DUT_MAP7035                0x0001180080E0DBD8  RSL
L2C_DUT_MAP7036                0x0001180080E0DBE0  RSL
L2C_DUT_MAP7037                0x0001180080E0DBE8  RSL
L2C_DUT_MAP7038                0x0001180080E0DBF0  RSL
L2C_DUT_MAP7039                0x0001180080E0DBF8  RSL
L2C_DUT_MAP7040                0x0001180080E0DC00  RSL
L2C_DUT_MAP7041                0x0001180080E0DC08  RSL
L2C_DUT_MAP7042                0x0001180080E0DC10  RSL
L2C_DUT_MAP7043                0x0001180080E0DC18  RSL
L2C_DUT_MAP7044                0x0001180080E0DC20  RSL
L2C_DUT_MAP7045                0x0001180080E0DC28  RSL
L2C_DUT_MAP7046                0x0001180080E0DC30  RSL
L2C_DUT_MAP7047                0x0001180080E0DC38  RSL
L2C_DUT_MAP7048                0x0001180080E0DC40  RSL
L2C_DUT_MAP7049                0x0001180080E0DC48  RSL
L2C_DUT_MAP7050                0x0001180080E0DC50  RSL
L2C_DUT_MAP7051                0x0001180080E0DC58  RSL
L2C_DUT_MAP7052                0x0001180080E0DC60  RSL
L2C_DUT_MAP7053                0x0001180080E0DC68  RSL
L2C_DUT_MAP7054                0x0001180080E0DC70  RSL
L2C_DUT_MAP7055                0x0001180080E0DC78  RSL
L2C_DUT_MAP7056                0x0001180080E0DC80  RSL
L2C_DUT_MAP7057                0x0001180080E0DC88  RSL
L2C_DUT_MAP7058                0x0001180080E0DC90  RSL
L2C_DUT_MAP7059                0x0001180080E0DC98  RSL
L2C_DUT_MAP7060                0x0001180080E0DCA0  RSL
L2C_DUT_MAP7061                0x0001180080E0DCA8  RSL
L2C_DUT_MAP7062                0x0001180080E0DCB0  RSL
L2C_DUT_MAP7063                0x0001180080E0DCB8  RSL
L2C_DUT_MAP7064                0x0001180080E0DCC0  RSL
L2C_DUT_MAP7065                0x0001180080E0DCC8  RSL
L2C_DUT_MAP7066                0x0001180080E0DCD0  RSL
L2C_DUT_MAP7067                0x0001180080E0DCD8  RSL
L2C_DUT_MAP7068                0x0001180080E0DCE0  RSL
L2C_DUT_MAP7069                0x0001180080E0DCE8  RSL
L2C_DUT_MAP7070                0x0001180080E0DCF0  RSL
L2C_DUT_MAP7071                0x0001180080E0DCF8  RSL
L2C_DUT_MAP7072                0x0001180080E0DD00  RSL
L2C_DUT_MAP7073                0x0001180080E0DD08  RSL
L2C_DUT_MAP7074                0x0001180080E0DD10  RSL
L2C_DUT_MAP7075                0x0001180080E0DD18  RSL
L2C_DUT_MAP7076                0x0001180080E0DD20  RSL
L2C_DUT_MAP7077                0x0001180080E0DD28  RSL
L2C_DUT_MAP7078                0x0001180080E0DD30  RSL
L2C_DUT_MAP7079                0x0001180080E0DD38  RSL
L2C_DUT_MAP7080                0x0001180080E0DD40  RSL
L2C_DUT_MAP7081                0x0001180080E0DD48  RSL
L2C_DUT_MAP7082                0x0001180080E0DD50  RSL
L2C_DUT_MAP7083                0x0001180080E0DD58  RSL
L2C_DUT_MAP7084                0x0001180080E0DD60  RSL
L2C_DUT_MAP7085                0x0001180080E0DD68  RSL
L2C_DUT_MAP7086                0x0001180080E0DD70  RSL
L2C_DUT_MAP7087                0x0001180080E0DD78  RSL
L2C_DUT_MAP7088                0x0001180080E0DD80  RSL
L2C_DUT_MAP7089                0x0001180080E0DD88  RSL
L2C_DUT_MAP7090                0x0001180080E0DD90  RSL
L2C_DUT_MAP7091                0x0001180080E0DD98  RSL
L2C_DUT_MAP7092                0x0001180080E0DDA0  RSL
L2C_DUT_MAP7093                0x0001180080E0DDA8  RSL
L2C_DUT_MAP7094                0x0001180080E0DDB0  RSL
L2C_DUT_MAP7095                0x0001180080E0DDB8  RSL
L2C_DUT_MAP7096                0x0001180080E0DDC0  RSL
L2C_DUT_MAP7097                0x0001180080E0DDC8  RSL
L2C_DUT_MAP7098                0x0001180080E0DDD0  RSL
L2C_DUT_MAP7099                0x0001180080E0DDD8  RSL
L2C_DUT_MAP7100                0x0001180080E0DDE0  RSL
L2C_DUT_MAP7101                0x0001180080E0DDE8  RSL
L2C_DUT_MAP7102                0x0001180080E0DDF0  RSL
L2C_DUT_MAP7103                0x0001180080E0DDF8  RSL
L2C_DUT_MAP7104                0x0001180080E0DE00  RSL
L2C_DUT_MAP7105                0x0001180080E0DE08  RSL
L2C_DUT_MAP7106                0x0001180080E0DE10  RSL
L2C_DUT_MAP7107                0x0001180080E0DE18  RSL
L2C_DUT_MAP7108                0x0001180080E0DE20  RSL
L2C_DUT_MAP7109                0x0001180080E0DE28  RSL
L2C_DUT_MAP7110                0x0001180080E0DE30  RSL
L2C_DUT_MAP7111                0x0001180080E0DE38  RSL
L2C_DUT_MAP7112                0x0001180080E0DE40  RSL
L2C_DUT_MAP7113                0x0001180080E0DE48  RSL
L2C_DUT_MAP7114                0x0001180080E0DE50  RSL
L2C_DUT_MAP7115                0x0001180080E0DE58  RSL
L2C_DUT_MAP7116                0x0001180080E0DE60  RSL
L2C_DUT_MAP7117                0x0001180080E0DE68  RSL
L2C_DUT_MAP7118                0x0001180080E0DE70  RSL
L2C_DUT_MAP7119                0x0001180080E0DE78  RSL
L2C_DUT_MAP7120                0x0001180080E0DE80  RSL
L2C_DUT_MAP7121                0x0001180080E0DE88  RSL
L2C_DUT_MAP7122                0x0001180080E0DE90  RSL
L2C_DUT_MAP7123                0x0001180080E0DE98  RSL
L2C_DUT_MAP7124                0x0001180080E0DEA0  RSL
L2C_DUT_MAP7125                0x0001180080E0DEA8  RSL
L2C_DUT_MAP7126                0x0001180080E0DEB0  RSL
L2C_DUT_MAP7127                0x0001180080E0DEB8  RSL
L2C_DUT_MAP7128                0x0001180080E0DEC0  RSL
L2C_DUT_MAP7129                0x0001180080E0DEC8  RSL
L2C_DUT_MAP7130                0x0001180080E0DED0  RSL
L2C_DUT_MAP7131                0x0001180080E0DED8  RSL
L2C_DUT_MAP7132                0x0001180080E0DEE0  RSL
L2C_DUT_MAP7133                0x0001180080E0DEE8  RSL
L2C_DUT_MAP7134                0x0001180080E0DEF0  RSL
L2C_DUT_MAP7135                0x0001180080E0DEF8  RSL
L2C_DUT_MAP7136                0x0001180080E0DF00  RSL
L2C_DUT_MAP7137                0x0001180080E0DF08  RSL
L2C_DUT_MAP7138                0x0001180080E0DF10  RSL
L2C_DUT_MAP7139                0x0001180080E0DF18  RSL
L2C_DUT_MAP7140                0x0001180080E0DF20  RSL
L2C_DUT_MAP7141                0x0001180080E0DF28  RSL
L2C_DUT_MAP7142                0x0001180080E0DF30  RSL
L2C_DUT_MAP7143                0x0001180080E0DF38  RSL
L2C_DUT_MAP7144                0x0001180080E0DF40  RSL
L2C_DUT_MAP7145                0x0001180080E0DF48  RSL
L2C_DUT_MAP7146                0x0001180080E0DF50  RSL
L2C_DUT_MAP7147                0x0001180080E0DF58  RSL
L2C_DUT_MAP7148                0x0001180080E0DF60  RSL
L2C_DUT_MAP7149                0x0001180080E0DF68  RSL
L2C_DUT_MAP7150                0x0001180080E0DF70  RSL
L2C_DUT_MAP7151                0x0001180080E0DF78  RSL
L2C_DUT_MAP7152                0x0001180080E0DF80  RSL
L2C_DUT_MAP7153                0x0001180080E0DF88  RSL
L2C_DUT_MAP7154                0x0001180080E0DF90  RSL
L2C_DUT_MAP7155                0x0001180080E0DF98  RSL
L2C_DUT_MAP7156                0x0001180080E0DFA0  RSL
L2C_DUT_MAP7157                0x0001180080E0DFA8  RSL
L2C_DUT_MAP7158                0x0001180080E0DFB0  RSL
L2C_DUT_MAP7159                0x0001180080E0DFB8  RSL
L2C_DUT_MAP7160                0x0001180080E0DFC0  RSL
L2C_DUT_MAP7161                0x0001180080E0DFC8  RSL
L2C_DUT_MAP7162                0x0001180080E0DFD0  RSL
L2C_DUT_MAP7163                0x0001180080E0DFD8  RSL
L2C_DUT_MAP7164                0x0001180080E0DFE0  RSL
L2C_DUT_MAP7165                0x0001180080E0DFE8  RSL
L2C_DUT_MAP7166                0x0001180080E0DFF0  RSL
L2C_DUT_MAP7167                0x0001180080E0DFF8  RSL
L2C_DUT_MAP7168                0x0001180080E0E000  RSL
L2C_DUT_MAP7169                0x0001180080E0E008  RSL
L2C_DUT_MAP7170                0x0001180080E0E010  RSL
L2C_DUT_MAP7171                0x0001180080E0E018  RSL
L2C_DUT_MAP7172                0x0001180080E0E020  RSL
L2C_DUT_MAP7173                0x0001180080E0E028  RSL
L2C_DUT_MAP7174                0x0001180080E0E030  RSL
L2C_DUT_MAP7175                0x0001180080E0E038  RSL
L2C_DUT_MAP7176                0x0001180080E0E040  RSL
L2C_DUT_MAP7177                0x0001180080E0E048  RSL
L2C_DUT_MAP7178                0x0001180080E0E050  RSL
L2C_DUT_MAP7179                0x0001180080E0E058  RSL
L2C_DUT_MAP7180                0x0001180080E0E060  RSL
L2C_DUT_MAP7181                0x0001180080E0E068  RSL
L2C_DUT_MAP7182                0x0001180080E0E070  RSL
L2C_DUT_MAP7183                0x0001180080E0E078  RSL
L2C_DUT_MAP7184                0x0001180080E0E080  RSL
L2C_DUT_MAP7185                0x0001180080E0E088  RSL
L2C_DUT_MAP7186                0x0001180080E0E090  RSL
L2C_DUT_MAP7187                0x0001180080E0E098  RSL
L2C_DUT_MAP7188                0x0001180080E0E0A0  RSL
L2C_DUT_MAP7189                0x0001180080E0E0A8  RSL
L2C_DUT_MAP7190                0x0001180080E0E0B0  RSL
L2C_DUT_MAP7191                0x0001180080E0E0B8  RSL
L2C_DUT_MAP7192                0x0001180080E0E0C0  RSL
L2C_DUT_MAP7193                0x0001180080E0E0C8  RSL
L2C_DUT_MAP7194                0x0001180080E0E0D0  RSL
L2C_DUT_MAP7195                0x0001180080E0E0D8  RSL
L2C_DUT_MAP7196                0x0001180080E0E0E0  RSL
L2C_DUT_MAP7197                0x0001180080E0E0E8  RSL
L2C_DUT_MAP7198                0x0001180080E0E0F0  RSL
L2C_DUT_MAP7199                0x0001180080E0E0F8  RSL
L2C_DUT_MAP7200                0x0001180080E0E100  RSL
L2C_DUT_MAP7201                0x0001180080E0E108  RSL
L2C_DUT_MAP7202                0x0001180080E0E110  RSL
L2C_DUT_MAP7203                0x0001180080E0E118  RSL
L2C_DUT_MAP7204                0x0001180080E0E120  RSL
L2C_DUT_MAP7205                0x0001180080E0E128  RSL
L2C_DUT_MAP7206                0x0001180080E0E130  RSL
L2C_DUT_MAP7207                0x0001180080E0E138  RSL
L2C_DUT_MAP7208                0x0001180080E0E140  RSL
L2C_DUT_MAP7209                0x0001180080E0E148  RSL
L2C_DUT_MAP7210                0x0001180080E0E150  RSL
L2C_DUT_MAP7211                0x0001180080E0E158  RSL
L2C_DUT_MAP7212                0x0001180080E0E160  RSL
L2C_DUT_MAP7213                0x0001180080E0E168  RSL
L2C_DUT_MAP7214                0x0001180080E0E170  RSL
L2C_DUT_MAP7215                0x0001180080E0E178  RSL
L2C_DUT_MAP7216                0x0001180080E0E180  RSL
L2C_DUT_MAP7217                0x0001180080E0E188  RSL
L2C_DUT_MAP7218                0x0001180080E0E190  RSL
L2C_DUT_MAP7219                0x0001180080E0E198  RSL
L2C_DUT_MAP7220                0x0001180080E0E1A0  RSL
L2C_DUT_MAP7221                0x0001180080E0E1A8  RSL
L2C_DUT_MAP7222                0x0001180080E0E1B0  RSL
L2C_DUT_MAP7223                0x0001180080E0E1B8  RSL
L2C_DUT_MAP7224                0x0001180080E0E1C0  RSL
L2C_DUT_MAP7225                0x0001180080E0E1C8  RSL
L2C_DUT_MAP7226                0x0001180080E0E1D0  RSL
L2C_DUT_MAP7227                0x0001180080E0E1D8  RSL
L2C_DUT_MAP7228                0x0001180080E0E1E0  RSL
L2C_DUT_MAP7229                0x0001180080E0E1E8  RSL
L2C_DUT_MAP7230                0x0001180080E0E1F0  RSL
L2C_DUT_MAP7231                0x0001180080E0E1F8  RSL
L2C_DUT_MAP7232                0x0001180080E0E200  RSL
L2C_DUT_MAP7233                0x0001180080E0E208  RSL
L2C_DUT_MAP7234                0x0001180080E0E210  RSL
L2C_DUT_MAP7235                0x0001180080E0E218  RSL
L2C_DUT_MAP7236                0x0001180080E0E220  RSL
L2C_DUT_MAP7237                0x0001180080E0E228  RSL
L2C_DUT_MAP7238                0x0001180080E0E230  RSL
L2C_DUT_MAP7239                0x0001180080E0E238  RSL
L2C_DUT_MAP7240                0x0001180080E0E240  RSL
L2C_DUT_MAP7241                0x0001180080E0E248  RSL
L2C_DUT_MAP7242                0x0001180080E0E250  RSL
L2C_DUT_MAP7243                0x0001180080E0E258  RSL
L2C_DUT_MAP7244                0x0001180080E0E260  RSL
L2C_DUT_MAP7245                0x0001180080E0E268  RSL
L2C_DUT_MAP7246                0x0001180080E0E270  RSL
L2C_DUT_MAP7247                0x0001180080E0E278  RSL
L2C_DUT_MAP7248                0x0001180080E0E280  RSL
L2C_DUT_MAP7249                0x0001180080E0E288  RSL
L2C_DUT_MAP7250                0x0001180080E0E290  RSL
L2C_DUT_MAP7251                0x0001180080E0E298  RSL
L2C_DUT_MAP7252                0x0001180080E0E2A0  RSL
L2C_DUT_MAP7253                0x0001180080E0E2A8  RSL
L2C_DUT_MAP7254                0x0001180080E0E2B0  RSL
L2C_DUT_MAP7255                0x0001180080E0E2B8  RSL
L2C_DUT_MAP7256                0x0001180080E0E2C0  RSL
L2C_DUT_MAP7257                0x0001180080E0E2C8  RSL
L2C_DUT_MAP7258                0x0001180080E0E2D0  RSL
L2C_DUT_MAP7259                0x0001180080E0E2D8  RSL
L2C_DUT_MAP7260                0x0001180080E0E2E0  RSL
L2C_DUT_MAP7261                0x0001180080E0E2E8  RSL
L2C_DUT_MAP7262                0x0001180080E0E2F0  RSL
L2C_DUT_MAP7263                0x0001180080E0E2F8  RSL
L2C_DUT_MAP7264                0x0001180080E0E300  RSL
L2C_DUT_MAP7265                0x0001180080E0E308  RSL
L2C_DUT_MAP7266                0x0001180080E0E310  RSL
L2C_DUT_MAP7267                0x0001180080E0E318  RSL
L2C_DUT_MAP7268                0x0001180080E0E320  RSL
L2C_DUT_MAP7269                0x0001180080E0E328  RSL
L2C_DUT_MAP7270                0x0001180080E0E330  RSL
L2C_DUT_MAP7271                0x0001180080E0E338  RSL
L2C_DUT_MAP7272                0x0001180080E0E340  RSL
L2C_DUT_MAP7273                0x0001180080E0E348  RSL
L2C_DUT_MAP7274                0x0001180080E0E350  RSL
L2C_DUT_MAP7275                0x0001180080E0E358  RSL
L2C_DUT_MAP7276                0x0001180080E0E360  RSL
L2C_DUT_MAP7277                0x0001180080E0E368  RSL
L2C_DUT_MAP7278                0x0001180080E0E370  RSL
L2C_DUT_MAP7279                0x0001180080E0E378  RSL
L2C_DUT_MAP7280                0x0001180080E0E380  RSL
L2C_DUT_MAP7281                0x0001180080E0E388  RSL
L2C_DUT_MAP7282                0x0001180080E0E390  RSL
L2C_DUT_MAP7283                0x0001180080E0E398  RSL
L2C_DUT_MAP7284                0x0001180080E0E3A0  RSL
L2C_DUT_MAP7285                0x0001180080E0E3A8  RSL
L2C_DUT_MAP7286                0x0001180080E0E3B0  RSL
L2C_DUT_MAP7287                0x0001180080E0E3B8  RSL
L2C_DUT_MAP7288                0x0001180080E0E3C0  RSL
L2C_DUT_MAP7289                0x0001180080E0E3C8  RSL
L2C_DUT_MAP7290                0x0001180080E0E3D0  RSL
L2C_DUT_MAP7291                0x0001180080E0E3D8  RSL
L2C_DUT_MAP7292                0x0001180080E0E3E0  RSL
L2C_DUT_MAP7293                0x0001180080E0E3E8  RSL
L2C_DUT_MAP7294                0x0001180080E0E3F0  RSL
L2C_DUT_MAP7295                0x0001180080E0E3F8  RSL
L2C_DUT_MAP7296                0x0001180080E0E400  RSL
L2C_DUT_MAP7297                0x0001180080E0E408  RSL
L2C_DUT_MAP7298                0x0001180080E0E410  RSL
L2C_DUT_MAP7299                0x0001180080E0E418  RSL
L2C_DUT_MAP7300                0x0001180080E0E420  RSL
L2C_DUT_MAP7301                0x0001180080E0E428  RSL
L2C_DUT_MAP7302                0x0001180080E0E430  RSL
L2C_DUT_MAP7303                0x0001180080E0E438  RSL
L2C_DUT_MAP7304                0x0001180080E0E440  RSL
L2C_DUT_MAP7305                0x0001180080E0E448  RSL
L2C_DUT_MAP7306                0x0001180080E0E450  RSL
L2C_DUT_MAP7307                0x0001180080E0E458  RSL
L2C_DUT_MAP7308                0x0001180080E0E460  RSL
L2C_DUT_MAP7309                0x0001180080E0E468  RSL
L2C_DUT_MAP7310                0x0001180080E0E470  RSL
L2C_DUT_MAP7311                0x0001180080E0E478  RSL
L2C_DUT_MAP7312                0x0001180080E0E480  RSL
L2C_DUT_MAP7313                0x0001180080E0E488  RSL
L2C_DUT_MAP7314                0x0001180080E0E490  RSL
L2C_DUT_MAP7315                0x0001180080E0E498  RSL
L2C_DUT_MAP7316                0x0001180080E0E4A0  RSL
L2C_DUT_MAP7317                0x0001180080E0E4A8  RSL
L2C_DUT_MAP7318                0x0001180080E0E4B0  RSL
L2C_DUT_MAP7319                0x0001180080E0E4B8  RSL
L2C_DUT_MAP7320                0x0001180080E0E4C0  RSL
L2C_DUT_MAP7321                0x0001180080E0E4C8  RSL
L2C_DUT_MAP7322                0x0001180080E0E4D0  RSL
L2C_DUT_MAP7323                0x0001180080E0E4D8  RSL
L2C_DUT_MAP7324                0x0001180080E0E4E0  RSL
L2C_DUT_MAP7325                0x0001180080E0E4E8  RSL
L2C_DUT_MAP7326                0x0001180080E0E4F0  RSL
L2C_DUT_MAP7327                0x0001180080E0E4F8  RSL
L2C_DUT_MAP7328                0x0001180080E0E500  RSL
L2C_DUT_MAP7329                0x0001180080E0E508  RSL
L2C_DUT_MAP7330                0x0001180080E0E510  RSL
L2C_DUT_MAP7331                0x0001180080E0E518  RSL
L2C_DUT_MAP7332                0x0001180080E0E520  RSL
L2C_DUT_MAP7333                0x0001180080E0E528  RSL
L2C_DUT_MAP7334                0x0001180080E0E530  RSL
L2C_DUT_MAP7335                0x0001180080E0E538  RSL
L2C_DUT_MAP7336                0x0001180080E0E540  RSL
L2C_DUT_MAP7337                0x0001180080E0E548  RSL
L2C_DUT_MAP7338                0x0001180080E0E550  RSL
L2C_DUT_MAP7339                0x0001180080E0E558  RSL
L2C_DUT_MAP7340                0x0001180080E0E560  RSL
L2C_DUT_MAP7341                0x0001180080E0E568  RSL
L2C_DUT_MAP7342                0x0001180080E0E570  RSL
L2C_DUT_MAP7343                0x0001180080E0E578  RSL
L2C_DUT_MAP7344                0x0001180080E0E580  RSL
L2C_DUT_MAP7345                0x0001180080E0E588  RSL
L2C_DUT_MAP7346                0x0001180080E0E590  RSL
L2C_DUT_MAP7347                0x0001180080E0E598  RSL
L2C_DUT_MAP7348                0x0001180080E0E5A0  RSL
L2C_DUT_MAP7349                0x0001180080E0E5A8  RSL
L2C_DUT_MAP7350                0x0001180080E0E5B0  RSL
L2C_DUT_MAP7351                0x0001180080E0E5B8  RSL
L2C_DUT_MAP7352                0x0001180080E0E5C0  RSL
L2C_DUT_MAP7353                0x0001180080E0E5C8  RSL
L2C_DUT_MAP7354                0x0001180080E0E5D0  RSL
L2C_DUT_MAP7355                0x0001180080E0E5D8  RSL
L2C_DUT_MAP7356                0x0001180080E0E5E0  RSL
L2C_DUT_MAP7357                0x0001180080E0E5E8  RSL
L2C_DUT_MAP7358                0x0001180080E0E5F0  RSL
L2C_DUT_MAP7359                0x0001180080E0E5F8  RSL
L2C_DUT_MAP7360                0x0001180080E0E600  RSL
L2C_DUT_MAP7361                0x0001180080E0E608  RSL
L2C_DUT_MAP7362                0x0001180080E0E610  RSL
L2C_DUT_MAP7363                0x0001180080E0E618  RSL
L2C_DUT_MAP7364                0x0001180080E0E620  RSL
L2C_DUT_MAP7365                0x0001180080E0E628  RSL
L2C_DUT_MAP7366                0x0001180080E0E630  RSL
L2C_DUT_MAP7367                0x0001180080E0E638  RSL
L2C_DUT_MAP7368                0x0001180080E0E640  RSL
L2C_DUT_MAP7369                0x0001180080E0E648  RSL
L2C_DUT_MAP7370                0x0001180080E0E650  RSL
L2C_DUT_MAP7371                0x0001180080E0E658  RSL
L2C_DUT_MAP7372                0x0001180080E0E660  RSL
L2C_DUT_MAP7373                0x0001180080E0E668  RSL
L2C_DUT_MAP7374                0x0001180080E0E670  RSL
L2C_DUT_MAP7375                0x0001180080E0E678  RSL
L2C_DUT_MAP7376                0x0001180080E0E680  RSL
L2C_DUT_MAP7377                0x0001180080E0E688  RSL
L2C_DUT_MAP7378                0x0001180080E0E690  RSL
L2C_DUT_MAP7379                0x0001180080E0E698  RSL
L2C_DUT_MAP7380                0x0001180080E0E6A0  RSL
L2C_DUT_MAP7381                0x0001180080E0E6A8  RSL
L2C_DUT_MAP7382                0x0001180080E0E6B0  RSL
L2C_DUT_MAP7383                0x0001180080E0E6B8  RSL
L2C_DUT_MAP7384                0x0001180080E0E6C0  RSL
L2C_DUT_MAP7385                0x0001180080E0E6C8  RSL
L2C_DUT_MAP7386                0x0001180080E0E6D0  RSL
L2C_DUT_MAP7387                0x0001180080E0E6D8  RSL
L2C_DUT_MAP7388                0x0001180080E0E6E0  RSL
L2C_DUT_MAP7389                0x0001180080E0E6E8  RSL
L2C_DUT_MAP7390                0x0001180080E0E6F0  RSL
L2C_DUT_MAP7391                0x0001180080E0E6F8  RSL
L2C_DUT_MAP7392                0x0001180080E0E700  RSL
L2C_DUT_MAP7393                0x0001180080E0E708  RSL
L2C_DUT_MAP7394                0x0001180080E0E710  RSL
L2C_DUT_MAP7395                0x0001180080E0E718  RSL
L2C_DUT_MAP7396                0x0001180080E0E720  RSL
L2C_DUT_MAP7397                0x0001180080E0E728  RSL
L2C_DUT_MAP7398                0x0001180080E0E730  RSL
L2C_DUT_MAP7399                0x0001180080E0E738  RSL
L2C_DUT_MAP7400                0x0001180080E0E740  RSL
L2C_DUT_MAP7401                0x0001180080E0E748  RSL
L2C_DUT_MAP7402                0x0001180080E0E750  RSL
L2C_DUT_MAP7403                0x0001180080E0E758  RSL
L2C_DUT_MAP7404                0x0001180080E0E760  RSL
L2C_DUT_MAP7405                0x0001180080E0E768  RSL
L2C_DUT_MAP7406                0x0001180080E0E770  RSL
L2C_DUT_MAP7407                0x0001180080E0E778  RSL
L2C_DUT_MAP7408                0x0001180080E0E780  RSL
L2C_DUT_MAP7409                0x0001180080E0E788  RSL
L2C_DUT_MAP7410                0x0001180080E0E790  RSL
L2C_DUT_MAP7411                0x0001180080E0E798  RSL
L2C_DUT_MAP7412                0x0001180080E0E7A0  RSL
L2C_DUT_MAP7413                0x0001180080E0E7A8  RSL
L2C_DUT_MAP7414                0x0001180080E0E7B0  RSL
L2C_DUT_MAP7415                0x0001180080E0E7B8  RSL
L2C_DUT_MAP7416                0x0001180080E0E7C0  RSL
L2C_DUT_MAP7417                0x0001180080E0E7C8  RSL
L2C_DUT_MAP7418                0x0001180080E0E7D0  RSL
L2C_DUT_MAP7419                0x0001180080E0E7D8  RSL
L2C_DUT_MAP7420                0x0001180080E0E7E0  RSL
L2C_DUT_MAP7421                0x0001180080E0E7E8  RSL
L2C_DUT_MAP7422                0x0001180080E0E7F0  RSL
L2C_DUT_MAP7423                0x0001180080E0E7F8  RSL
L2C_DUT_MAP7424                0x0001180080E0E800  RSL
L2C_DUT_MAP7425                0x0001180080E0E808  RSL
L2C_DUT_MAP7426                0x0001180080E0E810  RSL
L2C_DUT_MAP7427                0x0001180080E0E818  RSL
L2C_DUT_MAP7428                0x0001180080E0E820  RSL
L2C_DUT_MAP7429                0x0001180080E0E828  RSL
L2C_DUT_MAP7430                0x0001180080E0E830  RSL
L2C_DUT_MAP7431                0x0001180080E0E838  RSL
L2C_DUT_MAP7432                0x0001180080E0E840  RSL
L2C_DUT_MAP7433                0x0001180080E0E848  RSL
L2C_DUT_MAP7434                0x0001180080E0E850  RSL
L2C_DUT_MAP7435                0x0001180080E0E858  RSL
L2C_DUT_MAP7436                0x0001180080E0E860  RSL
L2C_DUT_MAP7437                0x0001180080E0E868  RSL
L2C_DUT_MAP7438                0x0001180080E0E870  RSL
L2C_DUT_MAP7439                0x0001180080E0E878  RSL
L2C_DUT_MAP7440                0x0001180080E0E880  RSL
L2C_DUT_MAP7441                0x0001180080E0E888  RSL
L2C_DUT_MAP7442                0x0001180080E0E890  RSL
L2C_DUT_MAP7443                0x0001180080E0E898  RSL
L2C_DUT_MAP7444                0x0001180080E0E8A0  RSL
L2C_DUT_MAP7445                0x0001180080E0E8A8  RSL
L2C_DUT_MAP7446                0x0001180080E0E8B0  RSL
L2C_DUT_MAP7447                0x0001180080E0E8B8  RSL
L2C_DUT_MAP7448                0x0001180080E0E8C0  RSL
L2C_DUT_MAP7449                0x0001180080E0E8C8  RSL
L2C_DUT_MAP7450                0x0001180080E0E8D0  RSL
L2C_DUT_MAP7451                0x0001180080E0E8D8  RSL
L2C_DUT_MAP7452                0x0001180080E0E8E0  RSL
L2C_DUT_MAP7453                0x0001180080E0E8E8  RSL
L2C_DUT_MAP7454                0x0001180080E0E8F0  RSL
L2C_DUT_MAP7455                0x0001180080E0E8F8  RSL
L2C_DUT_MAP7456                0x0001180080E0E900  RSL
L2C_DUT_MAP7457                0x0001180080E0E908  RSL
L2C_DUT_MAP7458                0x0001180080E0E910  RSL
L2C_DUT_MAP7459                0x0001180080E0E918  RSL
L2C_DUT_MAP7460                0x0001180080E0E920  RSL
L2C_DUT_MAP7461                0x0001180080E0E928  RSL
L2C_DUT_MAP7462                0x0001180080E0E930  RSL
L2C_DUT_MAP7463                0x0001180080E0E938  RSL
L2C_DUT_MAP7464                0x0001180080E0E940  RSL
L2C_DUT_MAP7465                0x0001180080E0E948  RSL
L2C_DUT_MAP7466                0x0001180080E0E950  RSL
L2C_DUT_MAP7467                0x0001180080E0E958  RSL
L2C_DUT_MAP7468                0x0001180080E0E960  RSL
L2C_DUT_MAP7469                0x0001180080E0E968  RSL
L2C_DUT_MAP7470                0x0001180080E0E970  RSL
L2C_DUT_MAP7471                0x0001180080E0E978  RSL
L2C_DUT_MAP7472                0x0001180080E0E980  RSL
L2C_DUT_MAP7473                0x0001180080E0E988  RSL
L2C_DUT_MAP7474                0x0001180080E0E990  RSL
L2C_DUT_MAP7475                0x0001180080E0E998  RSL
L2C_DUT_MAP7476                0x0001180080E0E9A0  RSL
L2C_DUT_MAP7477                0x0001180080E0E9A8  RSL
L2C_DUT_MAP7478                0x0001180080E0E9B0  RSL
L2C_DUT_MAP7479                0x0001180080E0E9B8  RSL
L2C_DUT_MAP7480                0x0001180080E0E9C0  RSL
L2C_DUT_MAP7481                0x0001180080E0E9C8  RSL
L2C_DUT_MAP7482                0x0001180080E0E9D0  RSL
L2C_DUT_MAP7483                0x0001180080E0E9D8  RSL
L2C_DUT_MAP7484                0x0001180080E0E9E0  RSL
L2C_DUT_MAP7485                0x0001180080E0E9E8  RSL
L2C_DUT_MAP7486                0x0001180080E0E9F0  RSL
L2C_DUT_MAP7487                0x0001180080E0E9F8  RSL
L2C_DUT_MAP7488                0x0001180080E0EA00  RSL
L2C_DUT_MAP7489                0x0001180080E0EA08  RSL
L2C_DUT_MAP7490                0x0001180080E0EA10  RSL
L2C_DUT_MAP7491                0x0001180080E0EA18  RSL
L2C_DUT_MAP7492                0x0001180080E0EA20  RSL
L2C_DUT_MAP7493                0x0001180080E0EA28  RSL
L2C_DUT_MAP7494                0x0001180080E0EA30  RSL
L2C_DUT_MAP7495                0x0001180080E0EA38  RSL
L2C_DUT_MAP7496                0x0001180080E0EA40  RSL
L2C_DUT_MAP7497                0x0001180080E0EA48  RSL
L2C_DUT_MAP7498                0x0001180080E0EA50  RSL
L2C_DUT_MAP7499                0x0001180080E0EA58  RSL
L2C_DUT_MAP7500                0x0001180080E0EA60  RSL
L2C_DUT_MAP7501                0x0001180080E0EA68  RSL
L2C_DUT_MAP7502                0x0001180080E0EA70  RSL
L2C_DUT_MAP7503                0x0001180080E0EA78  RSL
L2C_DUT_MAP7504                0x0001180080E0EA80  RSL
L2C_DUT_MAP7505                0x0001180080E0EA88  RSL
L2C_DUT_MAP7506                0x0001180080E0EA90  RSL
L2C_DUT_MAP7507                0x0001180080E0EA98  RSL
L2C_DUT_MAP7508                0x0001180080E0EAA0  RSL
L2C_DUT_MAP7509                0x0001180080E0EAA8  RSL
L2C_DUT_MAP7510                0x0001180080E0EAB0  RSL
L2C_DUT_MAP7511                0x0001180080E0EAB8  RSL
L2C_DUT_MAP7512                0x0001180080E0EAC0  RSL
L2C_DUT_MAP7513                0x0001180080E0EAC8  RSL
L2C_DUT_MAP7514                0x0001180080E0EAD0  RSL
L2C_DUT_MAP7515                0x0001180080E0EAD8  RSL
L2C_DUT_MAP7516                0x0001180080E0EAE0  RSL
L2C_DUT_MAP7517                0x0001180080E0EAE8  RSL
L2C_DUT_MAP7518                0x0001180080E0EAF0  RSL
L2C_DUT_MAP7519                0x0001180080E0EAF8  RSL
L2C_DUT_MAP7520                0x0001180080E0EB00  RSL
L2C_DUT_MAP7521                0x0001180080E0EB08  RSL
L2C_DUT_MAP7522                0x0001180080E0EB10  RSL
L2C_DUT_MAP7523                0x0001180080E0EB18  RSL
L2C_DUT_MAP7524                0x0001180080E0EB20  RSL
L2C_DUT_MAP7525                0x0001180080E0EB28  RSL
L2C_DUT_MAP7526                0x0001180080E0EB30  RSL
L2C_DUT_MAP7527                0x0001180080E0EB38  RSL
L2C_DUT_MAP7528                0x0001180080E0EB40  RSL
L2C_DUT_MAP7529                0x0001180080E0EB48  RSL
L2C_DUT_MAP7530                0x0001180080E0EB50  RSL
L2C_DUT_MAP7531                0x0001180080E0EB58  RSL
L2C_DUT_MAP7532                0x0001180080E0EB60  RSL
L2C_DUT_MAP7533                0x0001180080E0EB68  RSL
L2C_DUT_MAP7534                0x0001180080E0EB70  RSL
L2C_DUT_MAP7535                0x0001180080E0EB78  RSL
L2C_DUT_MAP7536                0x0001180080E0EB80  RSL
L2C_DUT_MAP7537                0x0001180080E0EB88  RSL
L2C_DUT_MAP7538                0x0001180080E0EB90  RSL
L2C_DUT_MAP7539                0x0001180080E0EB98  RSL
L2C_DUT_MAP7540                0x0001180080E0EBA0  RSL
L2C_DUT_MAP7541                0x0001180080E0EBA8  RSL
L2C_DUT_MAP7542                0x0001180080E0EBB0  RSL
L2C_DUT_MAP7543                0x0001180080E0EBB8  RSL
L2C_DUT_MAP7544                0x0001180080E0EBC0  RSL
L2C_DUT_MAP7545                0x0001180080E0EBC8  RSL
L2C_DUT_MAP7546                0x0001180080E0EBD0  RSL
L2C_DUT_MAP7547                0x0001180080E0EBD8  RSL
L2C_DUT_MAP7548                0x0001180080E0EBE0  RSL
L2C_DUT_MAP7549                0x0001180080E0EBE8  RSL
L2C_DUT_MAP7550                0x0001180080E0EBF0  RSL
L2C_DUT_MAP7551                0x0001180080E0EBF8  RSL
L2C_DUT_MAP7552                0x0001180080E0EC00  RSL
L2C_DUT_MAP7553                0x0001180080E0EC08  RSL
L2C_DUT_MAP7554                0x0001180080E0EC10  RSL
L2C_DUT_MAP7555                0x0001180080E0EC18  RSL
L2C_DUT_MAP7556                0x0001180080E0EC20  RSL
L2C_DUT_MAP7557                0x0001180080E0EC28  RSL
L2C_DUT_MAP7558                0x0001180080E0EC30  RSL
L2C_DUT_MAP7559                0x0001180080E0EC38  RSL
L2C_DUT_MAP7560                0x0001180080E0EC40  RSL
L2C_DUT_MAP7561                0x0001180080E0EC48  RSL
L2C_DUT_MAP7562                0x0001180080E0EC50  RSL
L2C_DUT_MAP7563                0x0001180080E0EC58  RSL
L2C_DUT_MAP7564                0x0001180080E0EC60  RSL
L2C_DUT_MAP7565                0x0001180080E0EC68  RSL
L2C_DUT_MAP7566                0x0001180080E0EC70  RSL
L2C_DUT_MAP7567                0x0001180080E0EC78  RSL
L2C_DUT_MAP7568                0x0001180080E0EC80  RSL
L2C_DUT_MAP7569                0x0001180080E0EC88  RSL
L2C_DUT_MAP7570                0x0001180080E0EC90  RSL
L2C_DUT_MAP7571                0x0001180080E0EC98  RSL
L2C_DUT_MAP7572                0x0001180080E0ECA0  RSL
L2C_DUT_MAP7573                0x0001180080E0ECA8  RSL
L2C_DUT_MAP7574                0x0001180080E0ECB0  RSL
L2C_DUT_MAP7575                0x0001180080E0ECB8  RSL
L2C_DUT_MAP7576                0x0001180080E0ECC0  RSL
L2C_DUT_MAP7577                0x0001180080E0ECC8  RSL
L2C_DUT_MAP7578                0x0001180080E0ECD0  RSL
L2C_DUT_MAP7579                0x0001180080E0ECD8  RSL
L2C_DUT_MAP7580                0x0001180080E0ECE0  RSL
L2C_DUT_MAP7581                0x0001180080E0ECE8  RSL
L2C_DUT_MAP7582                0x0001180080E0ECF0  RSL
L2C_DUT_MAP7583                0x0001180080E0ECF8  RSL
L2C_DUT_MAP7584                0x0001180080E0ED00  RSL
L2C_DUT_MAP7585                0x0001180080E0ED08  RSL
L2C_DUT_MAP7586                0x0001180080E0ED10  RSL
L2C_DUT_MAP7587                0x0001180080E0ED18  RSL
L2C_DUT_MAP7588                0x0001180080E0ED20  RSL
L2C_DUT_MAP7589                0x0001180080E0ED28  RSL
L2C_DUT_MAP7590                0x0001180080E0ED30  RSL
L2C_DUT_MAP7591                0x0001180080E0ED38  RSL
L2C_DUT_MAP7592                0x0001180080E0ED40  RSL
L2C_DUT_MAP7593                0x0001180080E0ED48  RSL
L2C_DUT_MAP7594                0x0001180080E0ED50  RSL
L2C_DUT_MAP7595                0x0001180080E0ED58  RSL
L2C_DUT_MAP7596                0x0001180080E0ED60  RSL
L2C_DUT_MAP7597                0x0001180080E0ED68  RSL
L2C_DUT_MAP7598                0x0001180080E0ED70  RSL
L2C_DUT_MAP7599                0x0001180080E0ED78  RSL
L2C_DUT_MAP7600                0x0001180080E0ED80  RSL
L2C_DUT_MAP7601                0x0001180080E0ED88  RSL
L2C_DUT_MAP7602                0x0001180080E0ED90  RSL
L2C_DUT_MAP7603                0x0001180080E0ED98  RSL
L2C_DUT_MAP7604                0x0001180080E0EDA0  RSL
L2C_DUT_MAP7605                0x0001180080E0EDA8  RSL
L2C_DUT_MAP7606                0x0001180080E0EDB0  RSL
L2C_DUT_MAP7607                0x0001180080E0EDB8  RSL
L2C_DUT_MAP7608                0x0001180080E0EDC0  RSL
L2C_DUT_MAP7609                0x0001180080E0EDC8  RSL
L2C_DUT_MAP7610                0x0001180080E0EDD0  RSL
L2C_DUT_MAP7611                0x0001180080E0EDD8  RSL
L2C_DUT_MAP7612                0x0001180080E0EDE0  RSL
L2C_DUT_MAP7613                0x0001180080E0EDE8  RSL
L2C_DUT_MAP7614                0x0001180080E0EDF0  RSL
L2C_DUT_MAP7615                0x0001180080E0EDF8  RSL
L2C_DUT_MAP7616                0x0001180080E0EE00  RSL
L2C_DUT_MAP7617                0x0001180080E0EE08  RSL
L2C_DUT_MAP7618                0x0001180080E0EE10  RSL
L2C_DUT_MAP7619                0x0001180080E0EE18  RSL
L2C_DUT_MAP7620                0x0001180080E0EE20  RSL
L2C_DUT_MAP7621                0x0001180080E0EE28  RSL
L2C_DUT_MAP7622                0x0001180080E0EE30  RSL
L2C_DUT_MAP7623                0x0001180080E0EE38  RSL
L2C_DUT_MAP7624                0x0001180080E0EE40  RSL
L2C_DUT_MAP7625                0x0001180080E0EE48  RSL
L2C_DUT_MAP7626                0x0001180080E0EE50  RSL
L2C_DUT_MAP7627                0x0001180080E0EE58  RSL
L2C_DUT_MAP7628                0x0001180080E0EE60  RSL
L2C_DUT_MAP7629                0x0001180080E0EE68  RSL
L2C_DUT_MAP7630                0x0001180080E0EE70  RSL
L2C_DUT_MAP7631                0x0001180080E0EE78  RSL
L2C_DUT_MAP7632                0x0001180080E0EE80  RSL
L2C_DUT_MAP7633                0x0001180080E0EE88  RSL
L2C_DUT_MAP7634                0x0001180080E0EE90  RSL
L2C_DUT_MAP7635                0x0001180080E0EE98  RSL
L2C_DUT_MAP7636                0x0001180080E0EEA0  RSL
L2C_DUT_MAP7637                0x0001180080E0EEA8  RSL
L2C_DUT_MAP7638                0x0001180080E0EEB0  RSL
L2C_DUT_MAP7639                0x0001180080E0EEB8  RSL
L2C_DUT_MAP7640                0x0001180080E0EEC0  RSL
L2C_DUT_MAP7641                0x0001180080E0EEC8  RSL
L2C_DUT_MAP7642                0x0001180080E0EED0  RSL
L2C_DUT_MAP7643                0x0001180080E0EED8  RSL
L2C_DUT_MAP7644                0x0001180080E0EEE0  RSL
L2C_DUT_MAP7645                0x0001180080E0EEE8  RSL
L2C_DUT_MAP7646                0x0001180080E0EEF0  RSL
L2C_DUT_MAP7647                0x0001180080E0EEF8  RSL
L2C_DUT_MAP7648                0x0001180080E0EF00  RSL
L2C_DUT_MAP7649                0x0001180080E0EF08  RSL
L2C_DUT_MAP7650                0x0001180080E0EF10  RSL
L2C_DUT_MAP7651                0x0001180080E0EF18  RSL
L2C_DUT_MAP7652                0x0001180080E0EF20  RSL
L2C_DUT_MAP7653                0x0001180080E0EF28  RSL
L2C_DUT_MAP7654                0x0001180080E0EF30  RSL
L2C_DUT_MAP7655                0x0001180080E0EF38  RSL
L2C_DUT_MAP7656                0x0001180080E0EF40  RSL
L2C_DUT_MAP7657                0x0001180080E0EF48  RSL
L2C_DUT_MAP7658                0x0001180080E0EF50  RSL
L2C_DUT_MAP7659                0x0001180080E0EF58  RSL
L2C_DUT_MAP7660                0x0001180080E0EF60  RSL
L2C_DUT_MAP7661                0x0001180080E0EF68  RSL
L2C_DUT_MAP7662                0x0001180080E0EF70  RSL
L2C_DUT_MAP7663                0x0001180080E0EF78  RSL
L2C_DUT_MAP7664                0x0001180080E0EF80  RSL
L2C_DUT_MAP7665                0x0001180080E0EF88  RSL
L2C_DUT_MAP7666                0x0001180080E0EF90  RSL
L2C_DUT_MAP7667                0x0001180080E0EF98  RSL
L2C_DUT_MAP7668                0x0001180080E0EFA0  RSL
L2C_DUT_MAP7669                0x0001180080E0EFA8  RSL
L2C_DUT_MAP7670                0x0001180080E0EFB0  RSL
L2C_DUT_MAP7671                0x0001180080E0EFB8  RSL
L2C_DUT_MAP7672                0x0001180080E0EFC0  RSL
L2C_DUT_MAP7673                0x0001180080E0EFC8  RSL
L2C_DUT_MAP7674                0x0001180080E0EFD0  RSL
L2C_DUT_MAP7675                0x0001180080E0EFD8  RSL
L2C_DUT_MAP7676                0x0001180080E0EFE0  RSL
L2C_DUT_MAP7677                0x0001180080E0EFE8  RSL
L2C_DUT_MAP7678                0x0001180080E0EFF0  RSL
L2C_DUT_MAP7679                0x0001180080E0EFF8  RSL
L2C_DUT_MAP7680                0x0001180080E0F000  RSL
L2C_DUT_MAP7681                0x0001180080E0F008  RSL
L2C_DUT_MAP7682                0x0001180080E0F010  RSL
L2C_DUT_MAP7683                0x0001180080E0F018  RSL
L2C_DUT_MAP7684                0x0001180080E0F020  RSL
L2C_DUT_MAP7685                0x0001180080E0F028  RSL
L2C_DUT_MAP7686                0x0001180080E0F030  RSL
L2C_DUT_MAP7687                0x0001180080E0F038  RSL
L2C_DUT_MAP7688                0x0001180080E0F040  RSL
L2C_DUT_MAP7689                0x0001180080E0F048  RSL
L2C_DUT_MAP7690                0x0001180080E0F050  RSL
L2C_DUT_MAP7691                0x0001180080E0F058  RSL
L2C_DUT_MAP7692                0x0001180080E0F060  RSL
L2C_DUT_MAP7693                0x0001180080E0F068  RSL
L2C_DUT_MAP7694                0x0001180080E0F070  RSL
L2C_DUT_MAP7695                0x0001180080E0F078  RSL
L2C_DUT_MAP7696                0x0001180080E0F080  RSL
L2C_DUT_MAP7697                0x0001180080E0F088  RSL
L2C_DUT_MAP7698                0x0001180080E0F090  RSL
L2C_DUT_MAP7699                0x0001180080E0F098  RSL
L2C_DUT_MAP7700                0x0001180080E0F0A0  RSL
L2C_DUT_MAP7701                0x0001180080E0F0A8  RSL
L2C_DUT_MAP7702                0x0001180080E0F0B0  RSL
L2C_DUT_MAP7703                0x0001180080E0F0B8  RSL
L2C_DUT_MAP7704                0x0001180080E0F0C0  RSL
L2C_DUT_MAP7705                0x0001180080E0F0C8  RSL
L2C_DUT_MAP7706                0x0001180080E0F0D0  RSL
L2C_DUT_MAP7707                0x0001180080E0F0D8  RSL
L2C_DUT_MAP7708                0x0001180080E0F0E0  RSL
L2C_DUT_MAP7709                0x0001180080E0F0E8  RSL
L2C_DUT_MAP7710                0x0001180080E0F0F0  RSL
L2C_DUT_MAP7711                0x0001180080E0F0F8  RSL
L2C_DUT_MAP7712                0x0001180080E0F100  RSL
L2C_DUT_MAP7713                0x0001180080E0F108  RSL
L2C_DUT_MAP7714                0x0001180080E0F110  RSL
L2C_DUT_MAP7715                0x0001180080E0F118  RSL
L2C_DUT_MAP7716                0x0001180080E0F120  RSL
L2C_DUT_MAP7717                0x0001180080E0F128  RSL
L2C_DUT_MAP7718                0x0001180080E0F130  RSL
L2C_DUT_MAP7719                0x0001180080E0F138  RSL
L2C_DUT_MAP7720                0x0001180080E0F140  RSL
L2C_DUT_MAP7721                0x0001180080E0F148  RSL
L2C_DUT_MAP7722                0x0001180080E0F150  RSL
L2C_DUT_MAP7723                0x0001180080E0F158  RSL
L2C_DUT_MAP7724                0x0001180080E0F160  RSL
L2C_DUT_MAP7725                0x0001180080E0F168  RSL
L2C_DUT_MAP7726                0x0001180080E0F170  RSL
L2C_DUT_MAP7727                0x0001180080E0F178  RSL
L2C_DUT_MAP7728                0x0001180080E0F180  RSL
L2C_DUT_MAP7729                0x0001180080E0F188  RSL
L2C_DUT_MAP7730                0x0001180080E0F190  RSL
L2C_DUT_MAP7731                0x0001180080E0F198  RSL
L2C_DUT_MAP7732                0x0001180080E0F1A0  RSL
L2C_DUT_MAP7733                0x0001180080E0F1A8  RSL
L2C_DUT_MAP7734                0x0001180080E0F1B0  RSL
L2C_DUT_MAP7735                0x0001180080E0F1B8  RSL
L2C_DUT_MAP7736                0x0001180080E0F1C0  RSL
L2C_DUT_MAP7737                0x0001180080E0F1C8  RSL
L2C_DUT_MAP7738                0x0001180080E0F1D0  RSL
L2C_DUT_MAP7739                0x0001180080E0F1D8  RSL
L2C_DUT_MAP7740                0x0001180080E0F1E0  RSL
L2C_DUT_MAP7741                0x0001180080E0F1E8  RSL
L2C_DUT_MAP7742                0x0001180080E0F1F0  RSL
L2C_DUT_MAP7743                0x0001180080E0F1F8  RSL
L2C_DUT_MAP7744                0x0001180080E0F200  RSL
L2C_DUT_MAP7745                0x0001180080E0F208  RSL
L2C_DUT_MAP7746                0x0001180080E0F210  RSL
L2C_DUT_MAP7747                0x0001180080E0F218  RSL
L2C_DUT_MAP7748                0x0001180080E0F220  RSL
L2C_DUT_MAP7749                0x0001180080E0F228  RSL
L2C_DUT_MAP7750                0x0001180080E0F230  RSL
L2C_DUT_MAP7751                0x0001180080E0F238  RSL
L2C_DUT_MAP7752                0x0001180080E0F240  RSL
L2C_DUT_MAP7753                0x0001180080E0F248  RSL
L2C_DUT_MAP7754                0x0001180080E0F250  RSL
L2C_DUT_MAP7755                0x0001180080E0F258  RSL
L2C_DUT_MAP7756                0x0001180080E0F260  RSL
L2C_DUT_MAP7757                0x0001180080E0F268  RSL
L2C_DUT_MAP7758                0x0001180080E0F270  RSL
L2C_DUT_MAP7759                0x0001180080E0F278  RSL
L2C_DUT_MAP7760                0x0001180080E0F280  RSL
L2C_DUT_MAP7761                0x0001180080E0F288  RSL
L2C_DUT_MAP7762                0x0001180080E0F290  RSL
L2C_DUT_MAP7763                0x0001180080E0F298  RSL
L2C_DUT_MAP7764                0x0001180080E0F2A0  RSL
L2C_DUT_MAP7765                0x0001180080E0F2A8  RSL
L2C_DUT_MAP7766                0x0001180080E0F2B0  RSL
L2C_DUT_MAP7767                0x0001180080E0F2B8  RSL
L2C_DUT_MAP7768                0x0001180080E0F2C0  RSL
L2C_DUT_MAP7769                0x0001180080E0F2C8  RSL
L2C_DUT_MAP7770                0x0001180080E0F2D0  RSL
L2C_DUT_MAP7771                0x0001180080E0F2D8  RSL
L2C_DUT_MAP7772                0x0001180080E0F2E0  RSL
L2C_DUT_MAP7773                0x0001180080E0F2E8  RSL
L2C_DUT_MAP7774                0x0001180080E0F2F0  RSL
L2C_DUT_MAP7775                0x0001180080E0F2F8  RSL
L2C_DUT_MAP7776                0x0001180080E0F300  RSL
L2C_DUT_MAP7777                0x0001180080E0F308  RSL
L2C_DUT_MAP7778                0x0001180080E0F310  RSL
L2C_DUT_MAP7779                0x0001180080E0F318  RSL
L2C_DUT_MAP7780                0x0001180080E0F320  RSL
L2C_DUT_MAP7781                0x0001180080E0F328  RSL
L2C_DUT_MAP7782                0x0001180080E0F330  RSL
L2C_DUT_MAP7783                0x0001180080E0F338  RSL
L2C_DUT_MAP7784                0x0001180080E0F340  RSL
L2C_DUT_MAP7785                0x0001180080E0F348  RSL
L2C_DUT_MAP7786                0x0001180080E0F350  RSL
L2C_DUT_MAP7787                0x0001180080E0F358  RSL
L2C_DUT_MAP7788                0x0001180080E0F360  RSL
L2C_DUT_MAP7789                0x0001180080E0F368  RSL
L2C_DUT_MAP7790                0x0001180080E0F370  RSL
L2C_DUT_MAP7791                0x0001180080E0F378  RSL
L2C_DUT_MAP7792                0x0001180080E0F380  RSL
L2C_DUT_MAP7793                0x0001180080E0F388  RSL
L2C_DUT_MAP7794                0x0001180080E0F390  RSL
L2C_DUT_MAP7795                0x0001180080E0F398  RSL
L2C_DUT_MAP7796                0x0001180080E0F3A0  RSL
L2C_DUT_MAP7797                0x0001180080E0F3A8  RSL
L2C_DUT_MAP7798                0x0001180080E0F3B0  RSL
L2C_DUT_MAP7799                0x0001180080E0F3B8  RSL
L2C_DUT_MAP7800                0x0001180080E0F3C0  RSL
L2C_DUT_MAP7801                0x0001180080E0F3C8  RSL
L2C_DUT_MAP7802                0x0001180080E0F3D0  RSL
L2C_DUT_MAP7803                0x0001180080E0F3D8  RSL
L2C_DUT_MAP7804                0x0001180080E0F3E0  RSL
L2C_DUT_MAP7805                0x0001180080E0F3E8  RSL
L2C_DUT_MAP7806                0x0001180080E0F3F0  RSL
L2C_DUT_MAP7807                0x0001180080E0F3F8  RSL
L2C_DUT_MAP7808                0x0001180080E0F400  RSL
L2C_DUT_MAP7809                0x0001180080E0F408  RSL
L2C_DUT_MAP7810                0x0001180080E0F410  RSL
L2C_DUT_MAP7811                0x0001180080E0F418  RSL
L2C_DUT_MAP7812                0x0001180080E0F420  RSL
L2C_DUT_MAP7813                0x0001180080E0F428  RSL
L2C_DUT_MAP7814                0x0001180080E0F430  RSL
L2C_DUT_MAP7815                0x0001180080E0F438  RSL
L2C_DUT_MAP7816                0x0001180080E0F440  RSL
L2C_DUT_MAP7817                0x0001180080E0F448  RSL
L2C_DUT_MAP7818                0x0001180080E0F450  RSL
L2C_DUT_MAP7819                0x0001180080E0F458  RSL
L2C_DUT_MAP7820                0x0001180080E0F460  RSL
L2C_DUT_MAP7821                0x0001180080E0F468  RSL
L2C_DUT_MAP7822                0x0001180080E0F470  RSL
L2C_DUT_MAP7823                0x0001180080E0F478  RSL
L2C_DUT_MAP7824                0x0001180080E0F480  RSL
L2C_DUT_MAP7825                0x0001180080E0F488  RSL
L2C_DUT_MAP7826                0x0001180080E0F490  RSL
L2C_DUT_MAP7827                0x0001180080E0F498  RSL
L2C_DUT_MAP7828                0x0001180080E0F4A0  RSL
L2C_DUT_MAP7829                0x0001180080E0F4A8  RSL
L2C_DUT_MAP7830                0x0001180080E0F4B0  RSL
L2C_DUT_MAP7831                0x0001180080E0F4B8  RSL
L2C_DUT_MAP7832                0x0001180080E0F4C0  RSL
L2C_DUT_MAP7833                0x0001180080E0F4C8  RSL
L2C_DUT_MAP7834                0x0001180080E0F4D0  RSL
L2C_DUT_MAP7835                0x0001180080E0F4D8  RSL
L2C_DUT_MAP7836                0x0001180080E0F4E0  RSL
L2C_DUT_MAP7837                0x0001180080E0F4E8  RSL
L2C_DUT_MAP7838                0x0001180080E0F4F0  RSL
L2C_DUT_MAP7839                0x0001180080E0F4F8  RSL
L2C_DUT_MAP7840                0x0001180080E0F500  RSL
L2C_DUT_MAP7841                0x0001180080E0F508  RSL
L2C_DUT_MAP7842                0x0001180080E0F510  RSL
L2C_DUT_MAP7843                0x0001180080E0F518  RSL
L2C_DUT_MAP7844                0x0001180080E0F520  RSL
L2C_DUT_MAP7845                0x0001180080E0F528  RSL
L2C_DUT_MAP7846                0x0001180080E0F530  RSL
L2C_DUT_MAP7847                0x0001180080E0F538  RSL
L2C_DUT_MAP7848                0x0001180080E0F540  RSL
L2C_DUT_MAP7849                0x0001180080E0F548  RSL
L2C_DUT_MAP7850                0x0001180080E0F550  RSL
L2C_DUT_MAP7851                0x0001180080E0F558  RSL
L2C_DUT_MAP7852                0x0001180080E0F560  RSL
L2C_DUT_MAP7853                0x0001180080E0F568  RSL
L2C_DUT_MAP7854                0x0001180080E0F570  RSL
L2C_DUT_MAP7855                0x0001180080E0F578  RSL
L2C_DUT_MAP7856                0x0001180080E0F580  RSL
L2C_DUT_MAP7857                0x0001180080E0F588  RSL
L2C_DUT_MAP7858                0x0001180080E0F590  RSL
L2C_DUT_MAP7859                0x0001180080E0F598  RSL
L2C_DUT_MAP7860                0x0001180080E0F5A0  RSL
L2C_DUT_MAP7861                0x0001180080E0F5A8  RSL
L2C_DUT_MAP7862                0x0001180080E0F5B0  RSL
L2C_DUT_MAP7863                0x0001180080E0F5B8  RSL
L2C_DUT_MAP7864                0x0001180080E0F5C0  RSL
L2C_DUT_MAP7865                0x0001180080E0F5C8  RSL
L2C_DUT_MAP7866                0x0001180080E0F5D0  RSL
L2C_DUT_MAP7867                0x0001180080E0F5D8  RSL
L2C_DUT_MAP7868                0x0001180080E0F5E0  RSL
L2C_DUT_MAP7869                0x0001180080E0F5E8  RSL
L2C_DUT_MAP7870                0x0001180080E0F5F0  RSL
L2C_DUT_MAP7871                0x0001180080E0F5F8  RSL
L2C_DUT_MAP7872                0x0001180080E0F600  RSL
L2C_DUT_MAP7873                0x0001180080E0F608  RSL
L2C_DUT_MAP7874                0x0001180080E0F610  RSL
L2C_DUT_MAP7875                0x0001180080E0F618  RSL
L2C_DUT_MAP7876                0x0001180080E0F620  RSL
L2C_DUT_MAP7877                0x0001180080E0F628  RSL
L2C_DUT_MAP7878                0x0001180080E0F630  RSL
L2C_DUT_MAP7879                0x0001180080E0F638  RSL
L2C_DUT_MAP7880                0x0001180080E0F640  RSL
L2C_DUT_MAP7881                0x0001180080E0F648  RSL
L2C_DUT_MAP7882                0x0001180080E0F650  RSL
L2C_DUT_MAP7883                0x0001180080E0F658  RSL
L2C_DUT_MAP7884                0x0001180080E0F660  RSL
L2C_DUT_MAP7885                0x0001180080E0F668  RSL
L2C_DUT_MAP7886                0x0001180080E0F670  RSL
L2C_DUT_MAP7887                0x0001180080E0F678  RSL
L2C_DUT_MAP7888                0x0001180080E0F680  RSL
L2C_DUT_MAP7889                0x0001180080E0F688  RSL
L2C_DUT_MAP7890                0x0001180080E0F690  RSL
L2C_DUT_MAP7891                0x0001180080E0F698  RSL
L2C_DUT_MAP7892                0x0001180080E0F6A0  RSL
L2C_DUT_MAP7893                0x0001180080E0F6A8  RSL
L2C_DUT_MAP7894                0x0001180080E0F6B0  RSL
L2C_DUT_MAP7895                0x0001180080E0F6B8  RSL
L2C_DUT_MAP7896                0x0001180080E0F6C0  RSL
L2C_DUT_MAP7897                0x0001180080E0F6C8  RSL
L2C_DUT_MAP7898                0x0001180080E0F6D0  RSL
L2C_DUT_MAP7899                0x0001180080E0F6D8  RSL
L2C_DUT_MAP7900                0x0001180080E0F6E0  RSL
L2C_DUT_MAP7901                0x0001180080E0F6E8  RSL
L2C_DUT_MAP7902                0x0001180080E0F6F0  RSL
L2C_DUT_MAP7903                0x0001180080E0F6F8  RSL
L2C_DUT_MAP7904                0x0001180080E0F700  RSL
L2C_DUT_MAP7905                0x0001180080E0F708  RSL
L2C_DUT_MAP7906                0x0001180080E0F710  RSL
L2C_DUT_MAP7907                0x0001180080E0F718  RSL
L2C_DUT_MAP7908                0x0001180080E0F720  RSL
L2C_DUT_MAP7909                0x0001180080E0F728  RSL
L2C_DUT_MAP7910                0x0001180080E0F730  RSL
L2C_DUT_MAP7911                0x0001180080E0F738  RSL
L2C_DUT_MAP7912                0x0001180080E0F740  RSL
L2C_DUT_MAP7913                0x0001180080E0F748  RSL
L2C_DUT_MAP7914                0x0001180080E0F750  RSL
L2C_DUT_MAP7915                0x0001180080E0F758  RSL
L2C_DUT_MAP7916                0x0001180080E0F760  RSL
L2C_DUT_MAP7917                0x0001180080E0F768  RSL
L2C_DUT_MAP7918                0x0001180080E0F770  RSL
L2C_DUT_MAP7919                0x0001180080E0F778  RSL
L2C_DUT_MAP7920                0x0001180080E0F780  RSL
L2C_DUT_MAP7921                0x0001180080E0F788  RSL
L2C_DUT_MAP7922                0x0001180080E0F790  RSL
L2C_DUT_MAP7923                0x0001180080E0F798  RSL
L2C_DUT_MAP7924                0x0001180080E0F7A0  RSL
L2C_DUT_MAP7925                0x0001180080E0F7A8  RSL
L2C_DUT_MAP7926                0x0001180080E0F7B0  RSL
L2C_DUT_MAP7927                0x0001180080E0F7B8  RSL
L2C_DUT_MAP7928                0x0001180080E0F7C0  RSL
L2C_DUT_MAP7929                0x0001180080E0F7C8  RSL
L2C_DUT_MAP7930                0x0001180080E0F7D0  RSL
L2C_DUT_MAP7931                0x0001180080E0F7D8  RSL
L2C_DUT_MAP7932                0x0001180080E0F7E0  RSL
L2C_DUT_MAP7933                0x0001180080E0F7E8  RSL
L2C_DUT_MAP7934                0x0001180080E0F7F0  RSL
L2C_DUT_MAP7935                0x0001180080E0F7F8  RSL
L2C_DUT_MAP7936                0x0001180080E0F800  RSL
L2C_DUT_MAP7937                0x0001180080E0F808  RSL
L2C_DUT_MAP7938                0x0001180080E0F810  RSL
L2C_DUT_MAP7939                0x0001180080E0F818  RSL
L2C_DUT_MAP7940                0x0001180080E0F820  RSL
L2C_DUT_MAP7941                0x0001180080E0F828  RSL
L2C_DUT_MAP7942                0x0001180080E0F830  RSL
L2C_DUT_MAP7943                0x0001180080E0F838  RSL
L2C_DUT_MAP7944                0x0001180080E0F840  RSL
L2C_DUT_MAP7945                0x0001180080E0F848  RSL
L2C_DUT_MAP7946                0x0001180080E0F850  RSL
L2C_DUT_MAP7947                0x0001180080E0F858  RSL
L2C_DUT_MAP7948                0x0001180080E0F860  RSL
L2C_DUT_MAP7949                0x0001180080E0F868  RSL
L2C_DUT_MAP7950                0x0001180080E0F870  RSL
L2C_DUT_MAP7951                0x0001180080E0F878  RSL
L2C_DUT_MAP7952                0x0001180080E0F880  RSL
L2C_DUT_MAP7953                0x0001180080E0F888  RSL
L2C_DUT_MAP7954                0x0001180080E0F890  RSL
L2C_DUT_MAP7955                0x0001180080E0F898  RSL
L2C_DUT_MAP7956                0x0001180080E0F8A0  RSL
L2C_DUT_MAP7957                0x0001180080E0F8A8  RSL
L2C_DUT_MAP7958                0x0001180080E0F8B0  RSL
L2C_DUT_MAP7959                0x0001180080E0F8B8  RSL
L2C_DUT_MAP7960                0x0001180080E0F8C0  RSL
L2C_DUT_MAP7961                0x0001180080E0F8C8  RSL
L2C_DUT_MAP7962                0x0001180080E0F8D0  RSL
L2C_DUT_MAP7963                0x0001180080E0F8D8  RSL
L2C_DUT_MAP7964                0x0001180080E0F8E0  RSL
L2C_DUT_MAP7965                0x0001180080E0F8E8  RSL
L2C_DUT_MAP7966                0x0001180080E0F8F0  RSL
L2C_DUT_MAP7967                0x0001180080E0F8F8  RSL
L2C_DUT_MAP7968                0x0001180080E0F900  RSL
L2C_DUT_MAP7969                0x0001180080E0F908  RSL
L2C_DUT_MAP7970                0x0001180080E0F910  RSL
L2C_DUT_MAP7971                0x0001180080E0F918  RSL
L2C_DUT_MAP7972                0x0001180080E0F920  RSL
L2C_DUT_MAP7973                0x0001180080E0F928  RSL
L2C_DUT_MAP7974                0x0001180080E0F930  RSL
L2C_DUT_MAP7975                0x0001180080E0F938  RSL
L2C_DUT_MAP7976                0x0001180080E0F940  RSL
L2C_DUT_MAP7977                0x0001180080E0F948  RSL
L2C_DUT_MAP7978                0x0001180080E0F950  RSL
L2C_DUT_MAP7979                0x0001180080E0F958  RSL
L2C_DUT_MAP7980                0x0001180080E0F960  RSL
L2C_DUT_MAP7981                0x0001180080E0F968  RSL
L2C_DUT_MAP7982                0x0001180080E0F970  RSL
L2C_DUT_MAP7983                0x0001180080E0F978  RSL
L2C_DUT_MAP7984                0x0001180080E0F980  RSL
L2C_DUT_MAP7985                0x0001180080E0F988  RSL
L2C_DUT_MAP7986                0x0001180080E0F990  RSL
L2C_DUT_MAP7987                0x0001180080E0F998  RSL
L2C_DUT_MAP7988                0x0001180080E0F9A0  RSL
L2C_DUT_MAP7989                0x0001180080E0F9A8  RSL
L2C_DUT_MAP7990                0x0001180080E0F9B0  RSL
L2C_DUT_MAP7991                0x0001180080E0F9B8  RSL
L2C_DUT_MAP7992                0x0001180080E0F9C0  RSL
L2C_DUT_MAP7993                0x0001180080E0F9C8  RSL
L2C_DUT_MAP7994                0x0001180080E0F9D0  RSL
L2C_DUT_MAP7995                0x0001180080E0F9D8  RSL
L2C_DUT_MAP7996                0x0001180080E0F9E0  RSL
L2C_DUT_MAP7997                0x0001180080E0F9E8  RSL
L2C_DUT_MAP7998                0x0001180080E0F9F0  RSL
L2C_DUT_MAP7999                0x0001180080E0F9F8  RSL
L2C_DUT_MAP8000                0x0001180080E0FA00  RSL
L2C_DUT_MAP8001                0x0001180080E0FA08  RSL
L2C_DUT_MAP8002                0x0001180080E0FA10  RSL
L2C_DUT_MAP8003                0x0001180080E0FA18  RSL
L2C_DUT_MAP8004                0x0001180080E0FA20  RSL
L2C_DUT_MAP8005                0x0001180080E0FA28  RSL
L2C_DUT_MAP8006                0x0001180080E0FA30  RSL
L2C_DUT_MAP8007                0x0001180080E0FA38  RSL
L2C_DUT_MAP8008                0x0001180080E0FA40  RSL
L2C_DUT_MAP8009                0x0001180080E0FA48  RSL
L2C_DUT_MAP8010                0x0001180080E0FA50  RSL
L2C_DUT_MAP8011                0x0001180080E0FA58  RSL
L2C_DUT_MAP8012                0x0001180080E0FA60  RSL
L2C_DUT_MAP8013                0x0001180080E0FA68  RSL
L2C_DUT_MAP8014                0x0001180080E0FA70  RSL
L2C_DUT_MAP8015                0x0001180080E0FA78  RSL
L2C_DUT_MAP8016                0x0001180080E0FA80  RSL
L2C_DUT_MAP8017                0x0001180080E0FA88  RSL
L2C_DUT_MAP8018                0x0001180080E0FA90  RSL
L2C_DUT_MAP8019                0x0001180080E0FA98  RSL
L2C_DUT_MAP8020                0x0001180080E0FAA0  RSL
L2C_DUT_MAP8021                0x0001180080E0FAA8  RSL
L2C_DUT_MAP8022                0x0001180080E0FAB0  RSL
L2C_DUT_MAP8023                0x0001180080E0FAB8  RSL
L2C_DUT_MAP8024                0x0001180080E0FAC0  RSL
L2C_DUT_MAP8025                0x0001180080E0FAC8  RSL
L2C_DUT_MAP8026                0x0001180080E0FAD0  RSL
L2C_DUT_MAP8027                0x0001180080E0FAD8  RSL
L2C_DUT_MAP8028                0x0001180080E0FAE0  RSL
L2C_DUT_MAP8029                0x0001180080E0FAE8  RSL
L2C_DUT_MAP8030                0x0001180080E0FAF0  RSL
L2C_DUT_MAP8031                0x0001180080E0FAF8  RSL
L2C_DUT_MAP8032                0x0001180080E0FB00  RSL
L2C_DUT_MAP8033                0x0001180080E0FB08  RSL
L2C_DUT_MAP8034                0x0001180080E0FB10  RSL
L2C_DUT_MAP8035                0x0001180080E0FB18  RSL
L2C_DUT_MAP8036                0x0001180080E0FB20  RSL
L2C_DUT_MAP8037                0x0001180080E0FB28  RSL
L2C_DUT_MAP8038                0x0001180080E0FB30  RSL
L2C_DUT_MAP8039                0x0001180080E0FB38  RSL
L2C_DUT_MAP8040                0x0001180080E0FB40  RSL
L2C_DUT_MAP8041                0x0001180080E0FB48  RSL
L2C_DUT_MAP8042                0x0001180080E0FB50  RSL
L2C_DUT_MAP8043                0x0001180080E0FB58  RSL
L2C_DUT_MAP8044                0x0001180080E0FB60  RSL
L2C_DUT_MAP8045                0x0001180080E0FB68  RSL
L2C_DUT_MAP8046                0x0001180080E0FB70  RSL
L2C_DUT_MAP8047                0x0001180080E0FB78  RSL
L2C_DUT_MAP8048                0x0001180080E0FB80  RSL
L2C_DUT_MAP8049                0x0001180080E0FB88  RSL
L2C_DUT_MAP8050                0x0001180080E0FB90  RSL
L2C_DUT_MAP8051                0x0001180080E0FB98  RSL
L2C_DUT_MAP8052                0x0001180080E0FBA0  RSL
L2C_DUT_MAP8053                0x0001180080E0FBA8  RSL
L2C_DUT_MAP8054                0x0001180080E0FBB0  RSL
L2C_DUT_MAP8055                0x0001180080E0FBB8  RSL
L2C_DUT_MAP8056                0x0001180080E0FBC0  RSL
L2C_DUT_MAP8057                0x0001180080E0FBC8  RSL
L2C_DUT_MAP8058                0x0001180080E0FBD0  RSL
L2C_DUT_MAP8059                0x0001180080E0FBD8  RSL
L2C_DUT_MAP8060                0x0001180080E0FBE0  RSL
L2C_DUT_MAP8061                0x0001180080E0FBE8  RSL
L2C_DUT_MAP8062                0x0001180080E0FBF0  RSL
L2C_DUT_MAP8063                0x0001180080E0FBF8  RSL
L2C_DUT_MAP8064                0x0001180080E0FC00  RSL
L2C_DUT_MAP8065                0x0001180080E0FC08  RSL
L2C_DUT_MAP8066                0x0001180080E0FC10  RSL
L2C_DUT_MAP8067                0x0001180080E0FC18  RSL
L2C_DUT_MAP8068                0x0001180080E0FC20  RSL
L2C_DUT_MAP8069                0x0001180080E0FC28  RSL
L2C_DUT_MAP8070                0x0001180080E0FC30  RSL
L2C_DUT_MAP8071                0x0001180080E0FC38  RSL
L2C_DUT_MAP8072                0x0001180080E0FC40  RSL
L2C_DUT_MAP8073                0x0001180080E0FC48  RSL
L2C_DUT_MAP8074                0x0001180080E0FC50  RSL
L2C_DUT_MAP8075                0x0001180080E0FC58  RSL
L2C_DUT_MAP8076                0x0001180080E0FC60  RSL
L2C_DUT_MAP8077                0x0001180080E0FC68  RSL
L2C_DUT_MAP8078                0x0001180080E0FC70  RSL
L2C_DUT_MAP8079                0x0001180080E0FC78  RSL
L2C_DUT_MAP8080                0x0001180080E0FC80  RSL
L2C_DUT_MAP8081                0x0001180080E0FC88  RSL
L2C_DUT_MAP8082                0x0001180080E0FC90  RSL
L2C_DUT_MAP8083                0x0001180080E0FC98  RSL
L2C_DUT_MAP8084                0x0001180080E0FCA0  RSL
L2C_DUT_MAP8085                0x0001180080E0FCA8  RSL
L2C_DUT_MAP8086                0x0001180080E0FCB0  RSL
L2C_DUT_MAP8087                0x0001180080E0FCB8  RSL
L2C_DUT_MAP8088                0x0001180080E0FCC0  RSL
L2C_DUT_MAP8089                0x0001180080E0FCC8  RSL
L2C_DUT_MAP8090                0x0001180080E0FCD0  RSL
L2C_DUT_MAP8091                0x0001180080E0FCD8  RSL
L2C_DUT_MAP8092                0x0001180080E0FCE0  RSL
L2C_DUT_MAP8093                0x0001180080E0FCE8  RSL
L2C_DUT_MAP8094                0x0001180080E0FCF0  RSL
L2C_DUT_MAP8095                0x0001180080E0FCF8  RSL
L2C_DUT_MAP8096                0x0001180080E0FD00  RSL
L2C_DUT_MAP8097                0x0001180080E0FD08  RSL
L2C_DUT_MAP8098                0x0001180080E0FD10  RSL
L2C_DUT_MAP8099                0x0001180080E0FD18  RSL
L2C_DUT_MAP8100                0x0001180080E0FD20  RSL
L2C_DUT_MAP8101                0x0001180080E0FD28  RSL
L2C_DUT_MAP8102                0x0001180080E0FD30  RSL
L2C_DUT_MAP8103                0x0001180080E0FD38  RSL
L2C_DUT_MAP8104                0x0001180080E0FD40  RSL
L2C_DUT_MAP8105                0x0001180080E0FD48  RSL
L2C_DUT_MAP8106                0x0001180080E0FD50  RSL
L2C_DUT_MAP8107                0x0001180080E0FD58  RSL
L2C_DUT_MAP8108                0x0001180080E0FD60  RSL
L2C_DUT_MAP8109                0x0001180080E0FD68  RSL
L2C_DUT_MAP8110                0x0001180080E0FD70  RSL
L2C_DUT_MAP8111                0x0001180080E0FD78  RSL
L2C_DUT_MAP8112                0x0001180080E0FD80  RSL
L2C_DUT_MAP8113                0x0001180080E0FD88  RSL
L2C_DUT_MAP8114                0x0001180080E0FD90  RSL
L2C_DUT_MAP8115                0x0001180080E0FD98  RSL
L2C_DUT_MAP8116                0x0001180080E0FDA0  RSL
L2C_DUT_MAP8117                0x0001180080E0FDA8  RSL
L2C_DUT_MAP8118                0x0001180080E0FDB0  RSL
L2C_DUT_MAP8119                0x0001180080E0FDB8  RSL
L2C_DUT_MAP8120                0x0001180080E0FDC0  RSL
L2C_DUT_MAP8121                0x0001180080E0FDC8  RSL
L2C_DUT_MAP8122                0x0001180080E0FDD0  RSL
L2C_DUT_MAP8123                0x0001180080E0FDD8  RSL
L2C_DUT_MAP8124                0x0001180080E0FDE0  RSL
L2C_DUT_MAP8125                0x0001180080E0FDE8  RSL
L2C_DUT_MAP8126                0x0001180080E0FDF0  RSL
L2C_DUT_MAP8127                0x0001180080E0FDF8  RSL
L2C_DUT_MAP8128                0x0001180080E0FE00  RSL
L2C_DUT_MAP8129                0x0001180080E0FE08  RSL
L2C_DUT_MAP8130                0x0001180080E0FE10  RSL
L2C_DUT_MAP8131                0x0001180080E0FE18  RSL
L2C_DUT_MAP8132                0x0001180080E0FE20  RSL
L2C_DUT_MAP8133                0x0001180080E0FE28  RSL
L2C_DUT_MAP8134                0x0001180080E0FE30  RSL
L2C_DUT_MAP8135                0x0001180080E0FE38  RSL
L2C_DUT_MAP8136                0x0001180080E0FE40  RSL
L2C_DUT_MAP8137                0x0001180080E0FE48  RSL
L2C_DUT_MAP8138                0x0001180080E0FE50  RSL
L2C_DUT_MAP8139                0x0001180080E0FE58  RSL
L2C_DUT_MAP8140                0x0001180080E0FE60  RSL
L2C_DUT_MAP8141                0x0001180080E0FE68  RSL
L2C_DUT_MAP8142                0x0001180080E0FE70  RSL
L2C_DUT_MAP8143                0x0001180080E0FE78  RSL
L2C_DUT_MAP8144                0x0001180080E0FE80  RSL
L2C_DUT_MAP8145                0x0001180080E0FE88  RSL
L2C_DUT_MAP8146                0x0001180080E0FE90  RSL
L2C_DUT_MAP8147                0x0001180080E0FE98  RSL
L2C_DUT_MAP8148                0x0001180080E0FEA0  RSL
L2C_DUT_MAP8149                0x0001180080E0FEA8  RSL
L2C_DUT_MAP8150                0x0001180080E0FEB0  RSL
L2C_DUT_MAP8151                0x0001180080E0FEB8  RSL
L2C_DUT_MAP8152                0x0001180080E0FEC0  RSL
L2C_DUT_MAP8153                0x0001180080E0FEC8  RSL
L2C_DUT_MAP8154                0x0001180080E0FED0  RSL
L2C_DUT_MAP8155                0x0001180080E0FED8  RSL
L2C_DUT_MAP8156                0x0001180080E0FEE0  RSL
L2C_DUT_MAP8157                0x0001180080E0FEE8  RSL
L2C_DUT_MAP8158                0x0001180080E0FEF0  RSL
L2C_DUT_MAP8159                0x0001180080E0FEF8  RSL
L2C_DUT_MAP8160                0x0001180080E0FF00  RSL
L2C_DUT_MAP8161                0x0001180080E0FF08  RSL
L2C_DUT_MAP8162                0x0001180080E0FF10  RSL
L2C_DUT_MAP8163                0x0001180080E0FF18  RSL
L2C_DUT_MAP8164                0x0001180080E0FF20  RSL
L2C_DUT_MAP8165                0x0001180080E0FF28  RSL
L2C_DUT_MAP8166                0x0001180080E0FF30  RSL
L2C_DUT_MAP8167                0x0001180080E0FF38  RSL
L2C_DUT_MAP8168                0x0001180080E0FF40  RSL
L2C_DUT_MAP8169                0x0001180080E0FF48  RSL
L2C_DUT_MAP8170                0x0001180080E0FF50  RSL
L2C_DUT_MAP8171                0x0001180080E0FF58  RSL
L2C_DUT_MAP8172                0x0001180080E0FF60  RSL
L2C_DUT_MAP8173                0x0001180080E0FF68  RSL
L2C_DUT_MAP8174                0x0001180080E0FF70  RSL
L2C_DUT_MAP8175                0x0001180080E0FF78  RSL
L2C_DUT_MAP8176                0x0001180080E0FF80  RSL
L2C_DUT_MAP8177                0x0001180080E0FF88  RSL
L2C_DUT_MAP8178                0x0001180080E0FF90  RSL
L2C_DUT_MAP8179                0x0001180080E0FF98  RSL
L2C_DUT_MAP8180                0x0001180080E0FFA0  RSL
L2C_DUT_MAP8181                0x0001180080E0FFA8  RSL
L2C_DUT_MAP8182                0x0001180080E0FFB0  RSL
L2C_DUT_MAP8183                0x0001180080E0FFB8  RSL
L2C_DUT_MAP8184                0x0001180080E0FFC0  RSL
L2C_DUT_MAP8185                0x0001180080E0FFC8  RSL
L2C_DUT_MAP8186                0x0001180080E0FFD0  RSL
L2C_DUT_MAP8187                0x0001180080E0FFD8  RSL
L2C_DUT_MAP8188                0x0001180080E0FFE0  RSL
L2C_DUT_MAP8189                0x0001180080E0FFE8  RSL
L2C_DUT_MAP8190                0x0001180080E0FFF0  RSL
L2C_DUT_MAP8191                0x0001180080E0FFF8  RSL
L2C_ERR_TDT0                   0x0001180080A007E0  RSL
L2C_ERR_TDT1                   0x0001180080A407E0  RSL
L2C_ERR_TDT2                   0x0001180080A807E0  RSL
L2C_ERR_TDT3                   0x0001180080AC07E0  RSL
L2C_ERR_TTG0                   0x0001180080A007E8  RSL
L2C_ERR_TTG1                   0x0001180080A407E8  RSL
L2C_ERR_TTG2                   0x0001180080A807E8  RSL
L2C_ERR_TTG3                   0x0001180080AC07E8  RSL
L2C_ERR_VBF0                   0x0001180080C007F0  RSL
L2C_ERR_VBF1                   0x0001180080C407F0  RSL
L2C_ERR_VBF2                   0x0001180080C807F0  RSL
L2C_ERR_VBF3                   0x0001180080CC07F0  RSL
L2C_ERR_XMC                    0x00011800808007D8  RSL
L2C_INT_ENA                    0x0001180080800020  RSL
L2C_INT_REG                    0x0001180080800018  RSL
L2C_IOC0_PFC                   0x0001180080800420  RSL
L2C_IOR0_PFC                   0x0001180080800428  RSL
L2C_QOS_IOB0                   0x0001180080880200  RSL
L2C_QOS_IOB1                   0x0001180080880208  RSL
L2C_QOS_PP0                    0x0001180080880000  RSL
L2C_QOS_PP1                    0x0001180080880008  RSL
L2C_QOS_PP2                    0x0001180080880010  RSL
L2C_QOS_PP3                    0x0001180080880018  RSL
L2C_QOS_PP4                    0x0001180080880020  RSL
L2C_QOS_PP5                    0x0001180080880028  RSL
L2C_QOS_PP6                    0x0001180080880030  RSL
L2C_QOS_PP7                    0x0001180080880038  RSL
L2C_QOS_PP8                    0x0001180080880040  RSL
L2C_QOS_PP9                    0x0001180080880048  RSL
L2C_QOS_PP10                   0x0001180080880050  RSL
L2C_QOS_PP11                   0x0001180080880058  RSL
L2C_QOS_PP12                   0x0001180080880060  RSL
L2C_QOS_PP13                   0x0001180080880068  RSL
L2C_QOS_PP14                   0x0001180080880070  RSL
L2C_QOS_PP15                   0x0001180080880078  RSL
L2C_QOS_PP16                   0x0001180080880080  RSL
L2C_QOS_PP17                   0x0001180080880088  RSL
L2C_QOS_PP18                   0x0001180080880090  RSL
L2C_QOS_PP19                   0x0001180080880098  RSL
L2C_QOS_PP20                   0x00011800808800A0  RSL
L2C_QOS_PP21                   0x00011800808800A8  RSL
L2C_QOS_PP22                   0x00011800808800B0  RSL
L2C_QOS_PP23                   0x00011800808800B8  RSL
L2C_QOS_PP24                   0x00011800808800C0  RSL
L2C_QOS_PP25                   0x00011800808800C8  RSL
L2C_QOS_PP26                   0x00011800808800D0  RSL
L2C_QOS_PP27                   0x00011800808800D8  RSL
L2C_QOS_PP28                   0x00011800808800E0  RSL
L2C_QOS_PP29                   0x00011800808800E8  RSL
L2C_QOS_PP30                   0x00011800808800F0  RSL
L2C_QOS_PP31                   0x00011800808800F8  RSL
L2C_QOS_WGT                    0x0001180080800008  RSL
L2C_RSC0_PFC                   0x0001180080800410  RSL
L2C_RSC1_PFC                   0x0001180080800450  RSL
L2C_RSC2_PFC                   0x0001180080800490  RSL
L2C_RSC3_PFC                   0x00011800808004D0  RSL
L2C_RSD0_PFC                   0x0001180080800418  RSL
L2C_RSD1_PFC                   0x0001180080800458  RSL
L2C_RSD2_PFC                   0x0001180080800498  RSL
L2C_RSD3_PFC                   0x00011800808004D8  RSL
L2C_TAD0_ECC0                  0x0001180080A00018  RSL
L2C_TAD0_ECC1                  0x0001180080A00020  RSL
L2C_TAD0_IEN                   0x0001180080A00000  RSL
L2C_TAD0_INT                   0x0001180080A00028  RSL
L2C_TAD0_PFC0                  0x0001180080A00400  RSL
L2C_TAD0_PFC1                  0x0001180080A00408  RSL
L2C_TAD0_PFC2                  0x0001180080A00410  RSL
L2C_TAD0_PFC3                  0x0001180080A00418  RSL
L2C_TAD0_PRF                   0x0001180080A00008  RSL
L2C_TAD0_TAG                   0x0001180080A00010  RSL
L2C_TAD1_ECC0                  0x0001180080A40018  RSL
L2C_TAD1_ECC1                  0x0001180080A40020  RSL
L2C_TAD1_IEN                   0x0001180080A40000  RSL
L2C_TAD1_INT                   0x0001180080A40028  RSL
L2C_TAD1_PFC0                  0x0001180080A40400  RSL
L2C_TAD1_PFC1                  0x0001180080A40408  RSL
L2C_TAD1_PFC2                  0x0001180080A40410  RSL
L2C_TAD1_PFC3                  0x0001180080A40418  RSL
L2C_TAD1_PRF                   0x0001180080A40008  RSL
L2C_TAD1_TAG                   0x0001180080A40010  RSL
L2C_TAD2_ECC0                  0x0001180080A80018  RSL
L2C_TAD2_ECC1                  0x0001180080A80020  RSL
L2C_TAD2_IEN                   0x0001180080A80000  RSL
L2C_TAD2_INT                   0x0001180080A80028  RSL
L2C_TAD2_PFC0                  0x0001180080A80400  RSL
L2C_TAD2_PFC1                  0x0001180080A80408  RSL
L2C_TAD2_PFC2                  0x0001180080A80410  RSL
L2C_TAD2_PFC3                  0x0001180080A80418  RSL
L2C_TAD2_PRF                   0x0001180080A80008  RSL
L2C_TAD2_TAG                   0x0001180080A80010  RSL
L2C_TAD3_ECC0                  0x0001180080AC0018  RSL
L2C_TAD3_ECC1                  0x0001180080AC0020  RSL
L2C_TAD3_IEN                   0x0001180080AC0000  RSL
L2C_TAD3_INT                   0x0001180080AC0028  RSL
L2C_TAD3_PFC0                  0x0001180080AC0400  RSL
L2C_TAD3_PFC1                  0x0001180080AC0408  RSL
L2C_TAD3_PFC2                  0x0001180080AC0410  RSL
L2C_TAD3_PFC3                  0x0001180080AC0418  RSL
L2C_TAD3_PRF                   0x0001180080AC0008  RSL
L2C_TAD3_TAG                   0x0001180080AC0010  RSL
L2C_VER_ID                     0x00011800808007E0  RSL
L2C_VER_IOB                    0x00011800808007F0  RSL
L2C_VER_MSC                    0x00011800808007D0  RSL
L2C_VER_PP                     0x00011800808007E8  RSL
L2C_VIRTID_IOB0                0x00011800808C0200  RSL
L2C_VIRTID_IOB1                0x00011800808C0208  RSL
L2C_VIRTID_PP0                 0x00011800808C0000  RSL
L2C_VIRTID_PP1                 0x00011800808C0008  RSL
L2C_VIRTID_PP2                 0x00011800808C0010  RSL
L2C_VIRTID_PP3                 0x00011800808C0018  RSL
L2C_VIRTID_PP4                 0x00011800808C0020  RSL
L2C_VIRTID_PP5                 0x00011800808C0028  RSL
L2C_VIRTID_PP6                 0x00011800808C0030  RSL
L2C_VIRTID_PP7                 0x00011800808C0038  RSL
L2C_VIRTID_PP8                 0x00011800808C0040  RSL
L2C_VIRTID_PP9                 0x00011800808C0048  RSL
L2C_VIRTID_PP10                0x00011800808C0050  RSL
L2C_VIRTID_PP11                0x00011800808C0058  RSL
L2C_VIRTID_PP12                0x00011800808C0060  RSL
L2C_VIRTID_PP13                0x00011800808C0068  RSL
L2C_VIRTID_PP14                0x00011800808C0070  RSL
L2C_VIRTID_PP15                0x00011800808C0078  RSL
L2C_VIRTID_PP16                0x00011800808C0080  RSL
L2C_VIRTID_PP17                0x00011800808C0088  RSL
L2C_VIRTID_PP18                0x00011800808C0090  RSL
L2C_VIRTID_PP19                0x00011800808C0098  RSL
L2C_VIRTID_PP20                0x00011800808C00A0  RSL
L2C_VIRTID_PP21                0x00011800808C00A8  RSL
L2C_VIRTID_PP22                0x00011800808C00B0  RSL
L2C_VIRTID_PP23                0x00011800808C00B8  RSL
L2C_VIRTID_PP24                0x00011800808C00C0  RSL
L2C_VIRTID_PP25                0x00011800808C00C8  RSL
L2C_VIRTID_PP26                0x00011800808C00D0  RSL
L2C_VIRTID_PP27                0x00011800808C00D8  RSL
L2C_VIRTID_PP28                0x00011800808C00E0  RSL
L2C_VIRTID_PP29                0x00011800808C00E8  RSL
L2C_VIRTID_PP30                0x00011800808C00F0  RSL
L2C_VIRTID_PP31                0x00011800808C00F8  RSL
L2C_VRT_CTL                    0x0001180080800010  RSL
L2C_VRT_MEM0                   0x0001180080900000  RSL
L2C_VRT_MEM1                   0x0001180080900008  RSL
L2C_VRT_MEM2                   0x0001180080900010  RSL
L2C_VRT_MEM3                   0x0001180080900018  RSL
L2C_VRT_MEM4                   0x0001180080900020  RSL
L2C_VRT_MEM5                   0x0001180080900028  RSL
L2C_VRT_MEM6                   0x0001180080900030  RSL
L2C_VRT_MEM7                   0x0001180080900038  RSL
L2C_VRT_MEM8                   0x0001180080900040  RSL
L2C_VRT_MEM9                   0x0001180080900048  RSL
L2C_VRT_MEM10                  0x0001180080900050  RSL
L2C_VRT_MEM11                  0x0001180080900058  RSL
L2C_VRT_MEM12                  0x0001180080900060  RSL
L2C_VRT_MEM13                  0x0001180080900068  RSL
L2C_VRT_MEM14                  0x0001180080900070  RSL
L2C_VRT_MEM15                  0x0001180080900078  RSL
L2C_VRT_MEM16                  0x0001180080900080  RSL
L2C_VRT_MEM17                  0x0001180080900088  RSL
L2C_VRT_MEM18                  0x0001180080900090  RSL
L2C_VRT_MEM19                  0x0001180080900098  RSL
L2C_VRT_MEM20                  0x00011800809000A0  RSL
L2C_VRT_MEM21                  0x00011800809000A8  RSL
L2C_VRT_MEM22                  0x00011800809000B0  RSL
L2C_VRT_MEM23                  0x00011800809000B8  RSL
L2C_VRT_MEM24                  0x00011800809000C0  RSL
L2C_VRT_MEM25                  0x00011800809000C8  RSL
L2C_VRT_MEM26                  0x00011800809000D0  RSL
L2C_VRT_MEM27                  0x00011800809000D8  RSL
L2C_VRT_MEM28                  0x00011800809000E0  RSL
L2C_VRT_MEM29                  0x00011800809000E8  RSL
L2C_VRT_MEM30                  0x00011800809000F0  RSL
L2C_VRT_MEM31                  0x00011800809000F8  RSL
L2C_VRT_MEM32                  0x0001180080900100  RSL
L2C_VRT_MEM33                  0x0001180080900108  RSL
L2C_VRT_MEM34                  0x0001180080900110  RSL
L2C_VRT_MEM35                  0x0001180080900118  RSL
L2C_VRT_MEM36                  0x0001180080900120  RSL
L2C_VRT_MEM37                  0x0001180080900128  RSL
L2C_VRT_MEM38                  0x0001180080900130  RSL
L2C_VRT_MEM39                  0x0001180080900138  RSL
L2C_VRT_MEM40                  0x0001180080900140  RSL
L2C_VRT_MEM41                  0x0001180080900148  RSL
L2C_VRT_MEM42                  0x0001180080900150  RSL
L2C_VRT_MEM43                  0x0001180080900158  RSL
L2C_VRT_MEM44                  0x0001180080900160  RSL
L2C_VRT_MEM45                  0x0001180080900168  RSL
L2C_VRT_MEM46                  0x0001180080900170  RSL
L2C_VRT_MEM47                  0x0001180080900178  RSL
L2C_VRT_MEM48                  0x0001180080900180  RSL
L2C_VRT_MEM49                  0x0001180080900188  RSL
L2C_VRT_MEM50                  0x0001180080900190  RSL
L2C_VRT_MEM51                  0x0001180080900198  RSL
L2C_VRT_MEM52                  0x00011800809001A0  RSL
L2C_VRT_MEM53                  0x00011800809001A8  RSL
L2C_VRT_MEM54                  0x00011800809001B0  RSL
L2C_VRT_MEM55                  0x00011800809001B8  RSL
L2C_VRT_MEM56                  0x00011800809001C0  RSL
L2C_VRT_MEM57                  0x00011800809001C8  RSL
L2C_VRT_MEM58                  0x00011800809001D0  RSL
L2C_VRT_MEM59                  0x00011800809001D8  RSL
L2C_VRT_MEM60                  0x00011800809001E0  RSL
L2C_VRT_MEM61                  0x00011800809001E8  RSL
L2C_VRT_MEM62                  0x00011800809001F0  RSL
L2C_VRT_MEM63                  0x00011800809001F8  RSL
L2C_VRT_MEM64                  0x0001180080900200  RSL
L2C_VRT_MEM65                  0x0001180080900208  RSL
L2C_VRT_MEM66                  0x0001180080900210  RSL
L2C_VRT_MEM67                  0x0001180080900218  RSL
L2C_VRT_MEM68                  0x0001180080900220  RSL
L2C_VRT_MEM69                  0x0001180080900228  RSL
L2C_VRT_MEM70                  0x0001180080900230  RSL
L2C_VRT_MEM71                  0x0001180080900238  RSL
L2C_VRT_MEM72                  0x0001180080900240  RSL
L2C_VRT_MEM73                  0x0001180080900248  RSL
L2C_VRT_MEM74                  0x0001180080900250  RSL
L2C_VRT_MEM75                  0x0001180080900258  RSL
L2C_VRT_MEM76                  0x0001180080900260  RSL
L2C_VRT_MEM77                  0x0001180080900268  RSL
L2C_VRT_MEM78                  0x0001180080900270  RSL
L2C_VRT_MEM79                  0x0001180080900278  RSL
L2C_VRT_MEM80                  0x0001180080900280  RSL
L2C_VRT_MEM81                  0x0001180080900288  RSL
L2C_VRT_MEM82                  0x0001180080900290  RSL
L2C_VRT_MEM83                  0x0001180080900298  RSL
L2C_VRT_MEM84                  0x00011800809002A0  RSL
L2C_VRT_MEM85                  0x00011800809002A8  RSL
L2C_VRT_MEM86                  0x00011800809002B0  RSL
L2C_VRT_MEM87                  0x00011800809002B8  RSL
L2C_VRT_MEM88                  0x00011800809002C0  RSL
L2C_VRT_MEM89                  0x00011800809002C8  RSL
L2C_VRT_MEM90                  0x00011800809002D0  RSL
L2C_VRT_MEM91                  0x00011800809002D8  RSL
L2C_VRT_MEM92                  0x00011800809002E0  RSL
L2C_VRT_MEM93                  0x00011800809002E8  RSL
L2C_VRT_MEM94                  0x00011800809002F0  RSL
L2C_VRT_MEM95                  0x00011800809002F8  RSL
L2C_VRT_MEM96                  0x0001180080900300  RSL
L2C_VRT_MEM97                  0x0001180080900308  RSL
L2C_VRT_MEM98                  0x0001180080900310  RSL
L2C_VRT_MEM99                  0x0001180080900318  RSL
L2C_VRT_MEM100                 0x0001180080900320  RSL
L2C_VRT_MEM101                 0x0001180080900328  RSL
L2C_VRT_MEM102                 0x0001180080900330  RSL
L2C_VRT_MEM103                 0x0001180080900338  RSL
L2C_VRT_MEM104                 0x0001180080900340  RSL
L2C_VRT_MEM105                 0x0001180080900348  RSL
L2C_VRT_MEM106                 0x0001180080900350  RSL
L2C_VRT_MEM107                 0x0001180080900358  RSL
L2C_VRT_MEM108                 0x0001180080900360  RSL
L2C_VRT_MEM109                 0x0001180080900368  RSL
L2C_VRT_MEM110                 0x0001180080900370  RSL
L2C_VRT_MEM111                 0x0001180080900378  RSL
L2C_VRT_MEM112                 0x0001180080900380  RSL
L2C_VRT_MEM113                 0x0001180080900388  RSL
L2C_VRT_MEM114                 0x0001180080900390  RSL
L2C_VRT_MEM115                 0x0001180080900398  RSL
L2C_VRT_MEM116                 0x00011800809003A0  RSL
L2C_VRT_MEM117                 0x00011800809003A8  RSL
L2C_VRT_MEM118                 0x00011800809003B0  RSL
L2C_VRT_MEM119                 0x00011800809003B8  RSL
L2C_VRT_MEM120                 0x00011800809003C0  RSL
L2C_VRT_MEM121                 0x00011800809003C8  RSL
L2C_VRT_MEM122                 0x00011800809003D0  RSL
L2C_VRT_MEM123                 0x00011800809003D8  RSL
L2C_VRT_MEM124                 0x00011800809003E0  RSL
L2C_VRT_MEM125                 0x00011800809003E8  RSL
L2C_VRT_MEM126                 0x00011800809003F0  RSL
L2C_VRT_MEM127                 0x00011800809003F8  RSL
L2C_VRT_MEM128                 0x0001180080900400  RSL
L2C_VRT_MEM129                 0x0001180080900408  RSL
L2C_VRT_MEM130                 0x0001180080900410  RSL
L2C_VRT_MEM131                 0x0001180080900418  RSL
L2C_VRT_MEM132                 0x0001180080900420  RSL
L2C_VRT_MEM133                 0x0001180080900428  RSL
L2C_VRT_MEM134                 0x0001180080900430  RSL
L2C_VRT_MEM135                 0x0001180080900438  RSL
L2C_VRT_MEM136                 0x0001180080900440  RSL
L2C_VRT_MEM137                 0x0001180080900448  RSL
L2C_VRT_MEM138                 0x0001180080900450  RSL
L2C_VRT_MEM139                 0x0001180080900458  RSL
L2C_VRT_MEM140                 0x0001180080900460  RSL
L2C_VRT_MEM141                 0x0001180080900468  RSL
L2C_VRT_MEM142                 0x0001180080900470  RSL
L2C_VRT_MEM143                 0x0001180080900478  RSL
L2C_VRT_MEM144                 0x0001180080900480  RSL
L2C_VRT_MEM145                 0x0001180080900488  RSL
L2C_VRT_MEM146                 0x0001180080900490  RSL
L2C_VRT_MEM147                 0x0001180080900498  RSL
L2C_VRT_MEM148                 0x00011800809004A0  RSL
L2C_VRT_MEM149                 0x00011800809004A8  RSL
L2C_VRT_MEM150                 0x00011800809004B0  RSL
L2C_VRT_MEM151                 0x00011800809004B8  RSL
L2C_VRT_MEM152                 0x00011800809004C0  RSL
L2C_VRT_MEM153                 0x00011800809004C8  RSL
L2C_VRT_MEM154                 0x00011800809004D0  RSL
L2C_VRT_MEM155                 0x00011800809004D8  RSL
L2C_VRT_MEM156                 0x00011800809004E0  RSL
L2C_VRT_MEM157                 0x00011800809004E8  RSL
L2C_VRT_MEM158                 0x00011800809004F0  RSL
L2C_VRT_MEM159                 0x00011800809004F8  RSL
L2C_VRT_MEM160                 0x0001180080900500  RSL
L2C_VRT_MEM161                 0x0001180080900508  RSL
L2C_VRT_MEM162                 0x0001180080900510  RSL
L2C_VRT_MEM163                 0x0001180080900518  RSL
L2C_VRT_MEM164                 0x0001180080900520  RSL
L2C_VRT_MEM165                 0x0001180080900528  RSL
L2C_VRT_MEM166                 0x0001180080900530  RSL
L2C_VRT_MEM167                 0x0001180080900538  RSL
L2C_VRT_MEM168                 0x0001180080900540  RSL
L2C_VRT_MEM169                 0x0001180080900548  RSL
L2C_VRT_MEM170                 0x0001180080900550  RSL
L2C_VRT_MEM171                 0x0001180080900558  RSL
L2C_VRT_MEM172                 0x0001180080900560  RSL
L2C_VRT_MEM173                 0x0001180080900568  RSL
L2C_VRT_MEM174                 0x0001180080900570  RSL
L2C_VRT_MEM175                 0x0001180080900578  RSL
L2C_VRT_MEM176                 0x0001180080900580  RSL
L2C_VRT_MEM177                 0x0001180080900588  RSL
L2C_VRT_MEM178                 0x0001180080900590  RSL
L2C_VRT_MEM179                 0x0001180080900598  RSL
L2C_VRT_MEM180                 0x00011800809005A0  RSL
L2C_VRT_MEM181                 0x00011800809005A8  RSL
L2C_VRT_MEM182                 0x00011800809005B0  RSL
L2C_VRT_MEM183                 0x00011800809005B8  RSL
L2C_VRT_MEM184                 0x00011800809005C0  RSL
L2C_VRT_MEM185                 0x00011800809005C8  RSL
L2C_VRT_MEM186                 0x00011800809005D0  RSL
L2C_VRT_MEM187                 0x00011800809005D8  RSL
L2C_VRT_MEM188                 0x00011800809005E0  RSL
L2C_VRT_MEM189                 0x00011800809005E8  RSL
L2C_VRT_MEM190                 0x00011800809005F0  RSL
L2C_VRT_MEM191                 0x00011800809005F8  RSL
L2C_VRT_MEM192                 0x0001180080900600  RSL
L2C_VRT_MEM193                 0x0001180080900608  RSL
L2C_VRT_MEM194                 0x0001180080900610  RSL
L2C_VRT_MEM195                 0x0001180080900618  RSL
L2C_VRT_MEM196                 0x0001180080900620  RSL
L2C_VRT_MEM197                 0x0001180080900628  RSL
L2C_VRT_MEM198                 0x0001180080900630  RSL
L2C_VRT_MEM199                 0x0001180080900638  RSL
L2C_VRT_MEM200                 0x0001180080900640  RSL
L2C_VRT_MEM201                 0x0001180080900648  RSL
L2C_VRT_MEM202                 0x0001180080900650  RSL
L2C_VRT_MEM203                 0x0001180080900658  RSL
L2C_VRT_MEM204                 0x0001180080900660  RSL
L2C_VRT_MEM205                 0x0001180080900668  RSL
L2C_VRT_MEM206                 0x0001180080900670  RSL
L2C_VRT_MEM207                 0x0001180080900678  RSL
L2C_VRT_MEM208                 0x0001180080900680  RSL
L2C_VRT_MEM209                 0x0001180080900688  RSL
L2C_VRT_MEM210                 0x0001180080900690  RSL
L2C_VRT_MEM211                 0x0001180080900698  RSL
L2C_VRT_MEM212                 0x00011800809006A0  RSL
L2C_VRT_MEM213                 0x00011800809006A8  RSL
L2C_VRT_MEM214                 0x00011800809006B0  RSL
L2C_VRT_MEM215                 0x00011800809006B8  RSL
L2C_VRT_MEM216                 0x00011800809006C0  RSL
L2C_VRT_MEM217                 0x00011800809006C8  RSL
L2C_VRT_MEM218                 0x00011800809006D0  RSL
L2C_VRT_MEM219                 0x00011800809006D8  RSL
L2C_VRT_MEM220                 0x00011800809006E0  RSL
L2C_VRT_MEM221                 0x00011800809006E8  RSL
L2C_VRT_MEM222                 0x00011800809006F0  RSL
L2C_VRT_MEM223                 0x00011800809006F8  RSL
L2C_VRT_MEM224                 0x0001180080900700  RSL
L2C_VRT_MEM225                 0x0001180080900708  RSL
L2C_VRT_MEM226                 0x0001180080900710  RSL
L2C_VRT_MEM227                 0x0001180080900718  RSL
L2C_VRT_MEM228                 0x0001180080900720  RSL
L2C_VRT_MEM229                 0x0001180080900728  RSL
L2C_VRT_MEM230                 0x0001180080900730  RSL
L2C_VRT_MEM231                 0x0001180080900738  RSL
L2C_VRT_MEM232                 0x0001180080900740  RSL
L2C_VRT_MEM233                 0x0001180080900748  RSL
L2C_VRT_MEM234                 0x0001180080900750  RSL
L2C_VRT_MEM235                 0x0001180080900758  RSL
L2C_VRT_MEM236                 0x0001180080900760  RSL
L2C_VRT_MEM237                 0x0001180080900768  RSL
L2C_VRT_MEM238                 0x0001180080900770  RSL
L2C_VRT_MEM239                 0x0001180080900778  RSL
L2C_VRT_MEM240                 0x0001180080900780  RSL
L2C_VRT_MEM241                 0x0001180080900788  RSL
L2C_VRT_MEM242                 0x0001180080900790  RSL
L2C_VRT_MEM243                 0x0001180080900798  RSL
L2C_VRT_MEM244                 0x00011800809007A0  RSL
L2C_VRT_MEM245                 0x00011800809007A8  RSL
L2C_VRT_MEM246                 0x00011800809007B0  RSL
L2C_VRT_MEM247                 0x00011800809007B8  RSL
L2C_VRT_MEM248                 0x00011800809007C0  RSL
L2C_VRT_MEM249                 0x00011800809007C8  RSL
L2C_VRT_MEM250                 0x00011800809007D0  RSL
L2C_VRT_MEM251                 0x00011800809007D8  RSL
L2C_VRT_MEM252                 0x00011800809007E0  RSL
L2C_VRT_MEM253                 0x00011800809007E8  RSL
L2C_VRT_MEM254                 0x00011800809007F0  RSL
L2C_VRT_MEM255                 0x00011800809007F8  RSL
L2C_VRT_MEM256                 0x0001180080900800  RSL
L2C_VRT_MEM257                 0x0001180080900808  RSL
L2C_VRT_MEM258                 0x0001180080900810  RSL
L2C_VRT_MEM259                 0x0001180080900818  RSL
L2C_VRT_MEM260                 0x0001180080900820  RSL
L2C_VRT_MEM261                 0x0001180080900828  RSL
L2C_VRT_MEM262                 0x0001180080900830  RSL
L2C_VRT_MEM263                 0x0001180080900838  RSL
L2C_VRT_MEM264                 0x0001180080900840  RSL
L2C_VRT_MEM265                 0x0001180080900848  RSL
L2C_VRT_MEM266                 0x0001180080900850  RSL
L2C_VRT_MEM267                 0x0001180080900858  RSL
L2C_VRT_MEM268                 0x0001180080900860  RSL
L2C_VRT_MEM269                 0x0001180080900868  RSL
L2C_VRT_MEM270                 0x0001180080900870  RSL
L2C_VRT_MEM271                 0x0001180080900878  RSL
L2C_VRT_MEM272                 0x0001180080900880  RSL
L2C_VRT_MEM273                 0x0001180080900888  RSL
L2C_VRT_MEM274                 0x0001180080900890  RSL
L2C_VRT_MEM275                 0x0001180080900898  RSL
L2C_VRT_MEM276                 0x00011800809008A0  RSL
L2C_VRT_MEM277                 0x00011800809008A8  RSL
L2C_VRT_MEM278                 0x00011800809008B0  RSL
L2C_VRT_MEM279                 0x00011800809008B8  RSL
L2C_VRT_MEM280                 0x00011800809008C0  RSL
L2C_VRT_MEM281                 0x00011800809008C8  RSL
L2C_VRT_MEM282                 0x00011800809008D0  RSL
L2C_VRT_MEM283                 0x00011800809008D8  RSL
L2C_VRT_MEM284                 0x00011800809008E0  RSL
L2C_VRT_MEM285                 0x00011800809008E8  RSL
L2C_VRT_MEM286                 0x00011800809008F0  RSL
L2C_VRT_MEM287                 0x00011800809008F8  RSL
L2C_VRT_MEM288                 0x0001180080900900  RSL
L2C_VRT_MEM289                 0x0001180080900908  RSL
L2C_VRT_MEM290                 0x0001180080900910  RSL
L2C_VRT_MEM291                 0x0001180080900918  RSL
L2C_VRT_MEM292                 0x0001180080900920  RSL
L2C_VRT_MEM293                 0x0001180080900928  RSL
L2C_VRT_MEM294                 0x0001180080900930  RSL
L2C_VRT_MEM295                 0x0001180080900938  RSL
L2C_VRT_MEM296                 0x0001180080900940  RSL
L2C_VRT_MEM297                 0x0001180080900948  RSL
L2C_VRT_MEM298                 0x0001180080900950  RSL
L2C_VRT_MEM299                 0x0001180080900958  RSL
L2C_VRT_MEM300                 0x0001180080900960  RSL
L2C_VRT_MEM301                 0x0001180080900968  RSL
L2C_VRT_MEM302                 0x0001180080900970  RSL
L2C_VRT_MEM303                 0x0001180080900978  RSL
L2C_VRT_MEM304                 0x0001180080900980  RSL
L2C_VRT_MEM305                 0x0001180080900988  RSL
L2C_VRT_MEM306                 0x0001180080900990  RSL
L2C_VRT_MEM307                 0x0001180080900998  RSL
L2C_VRT_MEM308                 0x00011800809009A0  RSL
L2C_VRT_MEM309                 0x00011800809009A8  RSL
L2C_VRT_MEM310                 0x00011800809009B0  RSL
L2C_VRT_MEM311                 0x00011800809009B8  RSL
L2C_VRT_MEM312                 0x00011800809009C0  RSL
L2C_VRT_MEM313                 0x00011800809009C8  RSL
L2C_VRT_MEM314                 0x00011800809009D0  RSL
L2C_VRT_MEM315                 0x00011800809009D8  RSL
L2C_VRT_MEM316                 0x00011800809009E0  RSL
L2C_VRT_MEM317                 0x00011800809009E8  RSL
L2C_VRT_MEM318                 0x00011800809009F0  RSL
L2C_VRT_MEM319                 0x00011800809009F8  RSL
L2C_VRT_MEM320                 0x0001180080900A00  RSL
L2C_VRT_MEM321                 0x0001180080900A08  RSL
L2C_VRT_MEM322                 0x0001180080900A10  RSL
L2C_VRT_MEM323                 0x0001180080900A18  RSL
L2C_VRT_MEM324                 0x0001180080900A20  RSL
L2C_VRT_MEM325                 0x0001180080900A28  RSL
L2C_VRT_MEM326                 0x0001180080900A30  RSL
L2C_VRT_MEM327                 0x0001180080900A38  RSL
L2C_VRT_MEM328                 0x0001180080900A40  RSL
L2C_VRT_MEM329                 0x0001180080900A48  RSL
L2C_VRT_MEM330                 0x0001180080900A50  RSL
L2C_VRT_MEM331                 0x0001180080900A58  RSL
L2C_VRT_MEM332                 0x0001180080900A60  RSL
L2C_VRT_MEM333                 0x0001180080900A68  RSL
L2C_VRT_MEM334                 0x0001180080900A70  RSL
L2C_VRT_MEM335                 0x0001180080900A78  RSL
L2C_VRT_MEM336                 0x0001180080900A80  RSL
L2C_VRT_MEM337                 0x0001180080900A88  RSL
L2C_VRT_MEM338                 0x0001180080900A90  RSL
L2C_VRT_MEM339                 0x0001180080900A98  RSL
L2C_VRT_MEM340                 0x0001180080900AA0  RSL
L2C_VRT_MEM341                 0x0001180080900AA8  RSL
L2C_VRT_MEM342                 0x0001180080900AB0  RSL
L2C_VRT_MEM343                 0x0001180080900AB8  RSL
L2C_VRT_MEM344                 0x0001180080900AC0  RSL
L2C_VRT_MEM345                 0x0001180080900AC8  RSL
L2C_VRT_MEM346                 0x0001180080900AD0  RSL
L2C_VRT_MEM347                 0x0001180080900AD8  RSL
L2C_VRT_MEM348                 0x0001180080900AE0  RSL
L2C_VRT_MEM349                 0x0001180080900AE8  RSL
L2C_VRT_MEM350                 0x0001180080900AF0  RSL
L2C_VRT_MEM351                 0x0001180080900AF8  RSL
L2C_VRT_MEM352                 0x0001180080900B00  RSL
L2C_VRT_MEM353                 0x0001180080900B08  RSL
L2C_VRT_MEM354                 0x0001180080900B10  RSL
L2C_VRT_MEM355                 0x0001180080900B18  RSL
L2C_VRT_MEM356                 0x0001180080900B20  RSL
L2C_VRT_MEM357                 0x0001180080900B28  RSL
L2C_VRT_MEM358                 0x0001180080900B30  RSL
L2C_VRT_MEM359                 0x0001180080900B38  RSL
L2C_VRT_MEM360                 0x0001180080900B40  RSL
L2C_VRT_MEM361                 0x0001180080900B48  RSL
L2C_VRT_MEM362                 0x0001180080900B50  RSL
L2C_VRT_MEM363                 0x0001180080900B58  RSL
L2C_VRT_MEM364                 0x0001180080900B60  RSL
L2C_VRT_MEM365                 0x0001180080900B68  RSL
L2C_VRT_MEM366                 0x0001180080900B70  RSL
L2C_VRT_MEM367                 0x0001180080900B78  RSL
L2C_VRT_MEM368                 0x0001180080900B80  RSL
L2C_VRT_MEM369                 0x0001180080900B88  RSL
L2C_VRT_MEM370                 0x0001180080900B90  RSL
L2C_VRT_MEM371                 0x0001180080900B98  RSL
L2C_VRT_MEM372                 0x0001180080900BA0  RSL
L2C_VRT_MEM373                 0x0001180080900BA8  RSL
L2C_VRT_MEM374                 0x0001180080900BB0  RSL
L2C_VRT_MEM375                 0x0001180080900BB8  RSL
L2C_VRT_MEM376                 0x0001180080900BC0  RSL
L2C_VRT_MEM377                 0x0001180080900BC8  RSL
L2C_VRT_MEM378                 0x0001180080900BD0  RSL
L2C_VRT_MEM379                 0x0001180080900BD8  RSL
L2C_VRT_MEM380                 0x0001180080900BE0  RSL
L2C_VRT_MEM381                 0x0001180080900BE8  RSL
L2C_VRT_MEM382                 0x0001180080900BF0  RSL
L2C_VRT_MEM383                 0x0001180080900BF8  RSL
L2C_VRT_MEM384                 0x0001180080900C00  RSL
L2C_VRT_MEM385                 0x0001180080900C08  RSL
L2C_VRT_MEM386                 0x0001180080900C10  RSL
L2C_VRT_MEM387                 0x0001180080900C18  RSL
L2C_VRT_MEM388                 0x0001180080900C20  RSL
L2C_VRT_MEM389                 0x0001180080900C28  RSL
L2C_VRT_MEM390                 0x0001180080900C30  RSL
L2C_VRT_MEM391                 0x0001180080900C38  RSL
L2C_VRT_MEM392                 0x0001180080900C40  RSL
L2C_VRT_MEM393                 0x0001180080900C48  RSL
L2C_VRT_MEM394                 0x0001180080900C50  RSL
L2C_VRT_MEM395                 0x0001180080900C58  RSL
L2C_VRT_MEM396                 0x0001180080900C60  RSL
L2C_VRT_MEM397                 0x0001180080900C68  RSL
L2C_VRT_MEM398                 0x0001180080900C70  RSL
L2C_VRT_MEM399                 0x0001180080900C78  RSL
L2C_VRT_MEM400                 0x0001180080900C80  RSL
L2C_VRT_MEM401                 0x0001180080900C88  RSL
L2C_VRT_MEM402                 0x0001180080900C90  RSL
L2C_VRT_MEM403                 0x0001180080900C98  RSL
L2C_VRT_MEM404                 0x0001180080900CA0  RSL
L2C_VRT_MEM405                 0x0001180080900CA8  RSL
L2C_VRT_MEM406                 0x0001180080900CB0  RSL
L2C_VRT_MEM407                 0x0001180080900CB8  RSL
L2C_VRT_MEM408                 0x0001180080900CC0  RSL
L2C_VRT_MEM409                 0x0001180080900CC8  RSL
L2C_VRT_MEM410                 0x0001180080900CD0  RSL
L2C_VRT_MEM411                 0x0001180080900CD8  RSL
L2C_VRT_MEM412                 0x0001180080900CE0  RSL
L2C_VRT_MEM413                 0x0001180080900CE8  RSL
L2C_VRT_MEM414                 0x0001180080900CF0  RSL
L2C_VRT_MEM415                 0x0001180080900CF8  RSL
L2C_VRT_MEM416                 0x0001180080900D00  RSL
L2C_VRT_MEM417                 0x0001180080900D08  RSL
L2C_VRT_MEM418                 0x0001180080900D10  RSL
L2C_VRT_MEM419                 0x0001180080900D18  RSL
L2C_VRT_MEM420                 0x0001180080900D20  RSL
L2C_VRT_MEM421                 0x0001180080900D28  RSL
L2C_VRT_MEM422                 0x0001180080900D30  RSL
L2C_VRT_MEM423                 0x0001180080900D38  RSL
L2C_VRT_MEM424                 0x0001180080900D40  RSL
L2C_VRT_MEM425                 0x0001180080900D48  RSL
L2C_VRT_MEM426                 0x0001180080900D50  RSL
L2C_VRT_MEM427                 0x0001180080900D58  RSL
L2C_VRT_MEM428                 0x0001180080900D60  RSL
L2C_VRT_MEM429                 0x0001180080900D68  RSL
L2C_VRT_MEM430                 0x0001180080900D70  RSL
L2C_VRT_MEM431                 0x0001180080900D78  RSL
L2C_VRT_MEM432                 0x0001180080900D80  RSL
L2C_VRT_MEM433                 0x0001180080900D88  RSL
L2C_VRT_MEM434                 0x0001180080900D90  RSL
L2C_VRT_MEM435                 0x0001180080900D98  RSL
L2C_VRT_MEM436                 0x0001180080900DA0  RSL
L2C_VRT_MEM437                 0x0001180080900DA8  RSL
L2C_VRT_MEM438                 0x0001180080900DB0  RSL
L2C_VRT_MEM439                 0x0001180080900DB8  RSL
L2C_VRT_MEM440                 0x0001180080900DC0  RSL
L2C_VRT_MEM441                 0x0001180080900DC8  RSL
L2C_VRT_MEM442                 0x0001180080900DD0  RSL
L2C_VRT_MEM443                 0x0001180080900DD8  RSL
L2C_VRT_MEM444                 0x0001180080900DE0  RSL
L2C_VRT_MEM445                 0x0001180080900DE8  RSL
L2C_VRT_MEM446                 0x0001180080900DF0  RSL
L2C_VRT_MEM447                 0x0001180080900DF8  RSL
L2C_VRT_MEM448                 0x0001180080900E00  RSL
L2C_VRT_MEM449                 0x0001180080900E08  RSL
L2C_VRT_MEM450                 0x0001180080900E10  RSL
L2C_VRT_MEM451                 0x0001180080900E18  RSL
L2C_VRT_MEM452                 0x0001180080900E20  RSL
L2C_VRT_MEM453                 0x0001180080900E28  RSL
L2C_VRT_MEM454                 0x0001180080900E30  RSL
L2C_VRT_MEM455                 0x0001180080900E38  RSL
L2C_VRT_MEM456                 0x0001180080900E40  RSL
L2C_VRT_MEM457                 0x0001180080900E48  RSL
L2C_VRT_MEM458                 0x0001180080900E50  RSL
L2C_VRT_MEM459                 0x0001180080900E58  RSL
L2C_VRT_MEM460                 0x0001180080900E60  RSL
L2C_VRT_MEM461                 0x0001180080900E68  RSL
L2C_VRT_MEM462                 0x0001180080900E70  RSL
L2C_VRT_MEM463                 0x0001180080900E78  RSL
L2C_VRT_MEM464                 0x0001180080900E80  RSL
L2C_VRT_MEM465                 0x0001180080900E88  RSL
L2C_VRT_MEM466                 0x0001180080900E90  RSL
L2C_VRT_MEM467                 0x0001180080900E98  RSL
L2C_VRT_MEM468                 0x0001180080900EA0  RSL
L2C_VRT_MEM469                 0x0001180080900EA8  RSL
L2C_VRT_MEM470                 0x0001180080900EB0  RSL
L2C_VRT_MEM471                 0x0001180080900EB8  RSL
L2C_VRT_MEM472                 0x0001180080900EC0  RSL
L2C_VRT_MEM473                 0x0001180080900EC8  RSL
L2C_VRT_MEM474                 0x0001180080900ED0  RSL
L2C_VRT_MEM475                 0x0001180080900ED8  RSL
L2C_VRT_MEM476                 0x0001180080900EE0  RSL
L2C_VRT_MEM477                 0x0001180080900EE8  RSL
L2C_VRT_MEM478                 0x0001180080900EF0  RSL
L2C_VRT_MEM479                 0x0001180080900EF8  RSL
L2C_VRT_MEM480                 0x0001180080900F00  RSL
L2C_VRT_MEM481                 0x0001180080900F08  RSL
L2C_VRT_MEM482                 0x0001180080900F10  RSL
L2C_VRT_MEM483                 0x0001180080900F18  RSL
L2C_VRT_MEM484                 0x0001180080900F20  RSL
L2C_VRT_MEM485                 0x0001180080900F28  RSL
L2C_VRT_MEM486                 0x0001180080900F30  RSL
L2C_VRT_MEM487                 0x0001180080900F38  RSL
L2C_VRT_MEM488                 0x0001180080900F40  RSL
L2C_VRT_MEM489                 0x0001180080900F48  RSL
L2C_VRT_MEM490                 0x0001180080900F50  RSL
L2C_VRT_MEM491                 0x0001180080900F58  RSL
L2C_VRT_MEM492                 0x0001180080900F60  RSL
L2C_VRT_MEM493                 0x0001180080900F68  RSL
L2C_VRT_MEM494                 0x0001180080900F70  RSL
L2C_VRT_MEM495                 0x0001180080900F78  RSL
L2C_VRT_MEM496                 0x0001180080900F80  RSL
L2C_VRT_MEM497                 0x0001180080900F88  RSL
L2C_VRT_MEM498                 0x0001180080900F90  RSL
L2C_VRT_MEM499                 0x0001180080900F98  RSL
L2C_VRT_MEM500                 0x0001180080900FA0  RSL
L2C_VRT_MEM501                 0x0001180080900FA8  RSL
L2C_VRT_MEM502                 0x0001180080900FB0  RSL
L2C_VRT_MEM503                 0x0001180080900FB8  RSL
L2C_VRT_MEM504                 0x0001180080900FC0  RSL
L2C_VRT_MEM505                 0x0001180080900FC8  RSL
L2C_VRT_MEM506                 0x0001180080900FD0  RSL
L2C_VRT_MEM507                 0x0001180080900FD8  RSL
L2C_VRT_MEM508                 0x0001180080900FE0  RSL
L2C_VRT_MEM509                 0x0001180080900FE8  RSL
L2C_VRT_MEM510                 0x0001180080900FF0  RSL
L2C_VRT_MEM511                 0x0001180080900FF8  RSL
L2C_VRT_MEM512                 0x0001180080901000  RSL
L2C_VRT_MEM513                 0x0001180080901008  RSL
L2C_VRT_MEM514                 0x0001180080901010  RSL
L2C_VRT_MEM515                 0x0001180080901018  RSL
L2C_VRT_MEM516                 0x0001180080901020  RSL
L2C_VRT_MEM517                 0x0001180080901028  RSL
L2C_VRT_MEM518                 0x0001180080901030  RSL
L2C_VRT_MEM519                 0x0001180080901038  RSL
L2C_VRT_MEM520                 0x0001180080901040  RSL
L2C_VRT_MEM521                 0x0001180080901048  RSL
L2C_VRT_MEM522                 0x0001180080901050  RSL
L2C_VRT_MEM523                 0x0001180080901058  RSL
L2C_VRT_MEM524                 0x0001180080901060  RSL
L2C_VRT_MEM525                 0x0001180080901068  RSL
L2C_VRT_MEM526                 0x0001180080901070  RSL
L2C_VRT_MEM527                 0x0001180080901078  RSL
L2C_VRT_MEM528                 0x0001180080901080  RSL
L2C_VRT_MEM529                 0x0001180080901088  RSL
L2C_VRT_MEM530                 0x0001180080901090  RSL
L2C_VRT_MEM531                 0x0001180080901098  RSL
L2C_VRT_MEM532                 0x00011800809010A0  RSL
L2C_VRT_MEM533                 0x00011800809010A8  RSL
L2C_VRT_MEM534                 0x00011800809010B0  RSL
L2C_VRT_MEM535                 0x00011800809010B8  RSL
L2C_VRT_MEM536                 0x00011800809010C0  RSL
L2C_VRT_MEM537                 0x00011800809010C8  RSL
L2C_VRT_MEM538                 0x00011800809010D0  RSL
L2C_VRT_MEM539                 0x00011800809010D8  RSL
L2C_VRT_MEM540                 0x00011800809010E0  RSL
L2C_VRT_MEM541                 0x00011800809010E8  RSL
L2C_VRT_MEM542                 0x00011800809010F0  RSL
L2C_VRT_MEM543                 0x00011800809010F8  RSL
L2C_VRT_MEM544                 0x0001180080901100  RSL
L2C_VRT_MEM545                 0x0001180080901108  RSL
L2C_VRT_MEM546                 0x0001180080901110  RSL
L2C_VRT_MEM547                 0x0001180080901118  RSL
L2C_VRT_MEM548                 0x0001180080901120  RSL
L2C_VRT_MEM549                 0x0001180080901128  RSL
L2C_VRT_MEM550                 0x0001180080901130  RSL
L2C_VRT_MEM551                 0x0001180080901138  RSL
L2C_VRT_MEM552                 0x0001180080901140  RSL
L2C_VRT_MEM553                 0x0001180080901148  RSL
L2C_VRT_MEM554                 0x0001180080901150  RSL
L2C_VRT_MEM555                 0x0001180080901158  RSL
L2C_VRT_MEM556                 0x0001180080901160  RSL
L2C_VRT_MEM557                 0x0001180080901168  RSL
L2C_VRT_MEM558                 0x0001180080901170  RSL
L2C_VRT_MEM559                 0x0001180080901178  RSL
L2C_VRT_MEM560                 0x0001180080901180  RSL
L2C_VRT_MEM561                 0x0001180080901188  RSL
L2C_VRT_MEM562                 0x0001180080901190  RSL
L2C_VRT_MEM563                 0x0001180080901198  RSL
L2C_VRT_MEM564                 0x00011800809011A0  RSL
L2C_VRT_MEM565                 0x00011800809011A8  RSL
L2C_VRT_MEM566                 0x00011800809011B0  RSL
L2C_VRT_MEM567                 0x00011800809011B8  RSL
L2C_VRT_MEM568                 0x00011800809011C0  RSL
L2C_VRT_MEM569                 0x00011800809011C8  RSL
L2C_VRT_MEM570                 0x00011800809011D0  RSL
L2C_VRT_MEM571                 0x00011800809011D8  RSL
L2C_VRT_MEM572                 0x00011800809011E0  RSL
L2C_VRT_MEM573                 0x00011800809011E8  RSL
L2C_VRT_MEM574                 0x00011800809011F0  RSL
L2C_VRT_MEM575                 0x00011800809011F8  RSL
L2C_VRT_MEM576                 0x0001180080901200  RSL
L2C_VRT_MEM577                 0x0001180080901208  RSL
L2C_VRT_MEM578                 0x0001180080901210  RSL
L2C_VRT_MEM579                 0x0001180080901218  RSL
L2C_VRT_MEM580                 0x0001180080901220  RSL
L2C_VRT_MEM581                 0x0001180080901228  RSL
L2C_VRT_MEM582                 0x0001180080901230  RSL
L2C_VRT_MEM583                 0x0001180080901238  RSL
L2C_VRT_MEM584                 0x0001180080901240  RSL
L2C_VRT_MEM585                 0x0001180080901248  RSL
L2C_VRT_MEM586                 0x0001180080901250  RSL
L2C_VRT_MEM587                 0x0001180080901258  RSL
L2C_VRT_MEM588                 0x0001180080901260  RSL
L2C_VRT_MEM589                 0x0001180080901268  RSL
L2C_VRT_MEM590                 0x0001180080901270  RSL
L2C_VRT_MEM591                 0x0001180080901278  RSL
L2C_VRT_MEM592                 0x0001180080901280  RSL
L2C_VRT_MEM593                 0x0001180080901288  RSL
L2C_VRT_MEM594                 0x0001180080901290  RSL
L2C_VRT_MEM595                 0x0001180080901298  RSL
L2C_VRT_MEM596                 0x00011800809012A0  RSL
L2C_VRT_MEM597                 0x00011800809012A8  RSL
L2C_VRT_MEM598                 0x00011800809012B0  RSL
L2C_VRT_MEM599                 0x00011800809012B8  RSL
L2C_VRT_MEM600                 0x00011800809012C0  RSL
L2C_VRT_MEM601                 0x00011800809012C8  RSL
L2C_VRT_MEM602                 0x00011800809012D0  RSL
L2C_VRT_MEM603                 0x00011800809012D8  RSL
L2C_VRT_MEM604                 0x00011800809012E0  RSL
L2C_VRT_MEM605                 0x00011800809012E8  RSL
L2C_VRT_MEM606                 0x00011800809012F0  RSL
L2C_VRT_MEM607                 0x00011800809012F8  RSL
L2C_VRT_MEM608                 0x0001180080901300  RSL
L2C_VRT_MEM609                 0x0001180080901308  RSL
L2C_VRT_MEM610                 0x0001180080901310  RSL
L2C_VRT_MEM611                 0x0001180080901318  RSL
L2C_VRT_MEM612                 0x0001180080901320  RSL
L2C_VRT_MEM613                 0x0001180080901328  RSL
L2C_VRT_MEM614                 0x0001180080901330  RSL
L2C_VRT_MEM615                 0x0001180080901338  RSL
L2C_VRT_MEM616                 0x0001180080901340  RSL
L2C_VRT_MEM617                 0x0001180080901348  RSL
L2C_VRT_MEM618                 0x0001180080901350  RSL
L2C_VRT_MEM619                 0x0001180080901358  RSL
L2C_VRT_MEM620                 0x0001180080901360  RSL
L2C_VRT_MEM621                 0x0001180080901368  RSL
L2C_VRT_MEM622                 0x0001180080901370  RSL
L2C_VRT_MEM623                 0x0001180080901378  RSL
L2C_VRT_MEM624                 0x0001180080901380  RSL
L2C_VRT_MEM625                 0x0001180080901388  RSL
L2C_VRT_MEM626                 0x0001180080901390  RSL
L2C_VRT_MEM627                 0x0001180080901398  RSL
L2C_VRT_MEM628                 0x00011800809013A0  RSL
L2C_VRT_MEM629                 0x00011800809013A8  RSL
L2C_VRT_MEM630                 0x00011800809013B0  RSL
L2C_VRT_MEM631                 0x00011800809013B8  RSL
L2C_VRT_MEM632                 0x00011800809013C0  RSL
L2C_VRT_MEM633                 0x00011800809013C8  RSL
L2C_VRT_MEM634                 0x00011800809013D0  RSL
L2C_VRT_MEM635                 0x00011800809013D8  RSL
L2C_VRT_MEM636                 0x00011800809013E0  RSL
L2C_VRT_MEM637                 0x00011800809013E8  RSL
L2C_VRT_MEM638                 0x00011800809013F0  RSL
L2C_VRT_MEM639                 0x00011800809013F8  RSL
L2C_VRT_MEM640                 0x0001180080901400  RSL
L2C_VRT_MEM641                 0x0001180080901408  RSL
L2C_VRT_MEM642                 0x0001180080901410  RSL
L2C_VRT_MEM643                 0x0001180080901418  RSL
L2C_VRT_MEM644                 0x0001180080901420  RSL
L2C_VRT_MEM645                 0x0001180080901428  RSL
L2C_VRT_MEM646                 0x0001180080901430  RSL
L2C_VRT_MEM647                 0x0001180080901438  RSL
L2C_VRT_MEM648                 0x0001180080901440  RSL
L2C_VRT_MEM649                 0x0001180080901448  RSL
L2C_VRT_MEM650                 0x0001180080901450  RSL
L2C_VRT_MEM651                 0x0001180080901458  RSL
L2C_VRT_MEM652                 0x0001180080901460  RSL
L2C_VRT_MEM653                 0x0001180080901468  RSL
L2C_VRT_MEM654                 0x0001180080901470  RSL
L2C_VRT_MEM655                 0x0001180080901478  RSL
L2C_VRT_MEM656                 0x0001180080901480  RSL
L2C_VRT_MEM657                 0x0001180080901488  RSL
L2C_VRT_MEM658                 0x0001180080901490  RSL
L2C_VRT_MEM659                 0x0001180080901498  RSL
L2C_VRT_MEM660                 0x00011800809014A0  RSL
L2C_VRT_MEM661                 0x00011800809014A8  RSL
L2C_VRT_MEM662                 0x00011800809014B0  RSL
L2C_VRT_MEM663                 0x00011800809014B8  RSL
L2C_VRT_MEM664                 0x00011800809014C0  RSL
L2C_VRT_MEM665                 0x00011800809014C8  RSL
L2C_VRT_MEM666                 0x00011800809014D0  RSL
L2C_VRT_MEM667                 0x00011800809014D8  RSL
L2C_VRT_MEM668                 0x00011800809014E0  RSL
L2C_VRT_MEM669                 0x00011800809014E8  RSL
L2C_VRT_MEM670                 0x00011800809014F0  RSL
L2C_VRT_MEM671                 0x00011800809014F8  RSL
L2C_VRT_MEM672                 0x0001180080901500  RSL
L2C_VRT_MEM673                 0x0001180080901508  RSL
L2C_VRT_MEM674                 0x0001180080901510  RSL
L2C_VRT_MEM675                 0x0001180080901518  RSL
L2C_VRT_MEM676                 0x0001180080901520  RSL
L2C_VRT_MEM677                 0x0001180080901528  RSL
L2C_VRT_MEM678                 0x0001180080901530  RSL
L2C_VRT_MEM679                 0x0001180080901538  RSL
L2C_VRT_MEM680                 0x0001180080901540  RSL
L2C_VRT_MEM681                 0x0001180080901548  RSL
L2C_VRT_MEM682                 0x0001180080901550  RSL
L2C_VRT_MEM683                 0x0001180080901558  RSL
L2C_VRT_MEM684                 0x0001180080901560  RSL
L2C_VRT_MEM685                 0x0001180080901568  RSL
L2C_VRT_MEM686                 0x0001180080901570  RSL
L2C_VRT_MEM687                 0x0001180080901578  RSL
L2C_VRT_MEM688                 0x0001180080901580  RSL
L2C_VRT_MEM689                 0x0001180080901588  RSL
L2C_VRT_MEM690                 0x0001180080901590  RSL
L2C_VRT_MEM691                 0x0001180080901598  RSL
L2C_VRT_MEM692                 0x00011800809015A0  RSL
L2C_VRT_MEM693                 0x00011800809015A8  RSL
L2C_VRT_MEM694                 0x00011800809015B0  RSL
L2C_VRT_MEM695                 0x00011800809015B8  RSL
L2C_VRT_MEM696                 0x00011800809015C0  RSL
L2C_VRT_MEM697                 0x00011800809015C8  RSL
L2C_VRT_MEM698                 0x00011800809015D0  RSL
L2C_VRT_MEM699                 0x00011800809015D8  RSL
L2C_VRT_MEM700                 0x00011800809015E0  RSL
L2C_VRT_MEM701                 0x00011800809015E8  RSL
L2C_VRT_MEM702                 0x00011800809015F0  RSL
L2C_VRT_MEM703                 0x00011800809015F8  RSL
L2C_VRT_MEM704                 0x0001180080901600  RSL
L2C_VRT_MEM705                 0x0001180080901608  RSL
L2C_VRT_MEM706                 0x0001180080901610  RSL
L2C_VRT_MEM707                 0x0001180080901618  RSL
L2C_VRT_MEM708                 0x0001180080901620  RSL
L2C_VRT_MEM709                 0x0001180080901628  RSL
L2C_VRT_MEM710                 0x0001180080901630  RSL
L2C_VRT_MEM711                 0x0001180080901638  RSL
L2C_VRT_MEM712                 0x0001180080901640  RSL
L2C_VRT_MEM713                 0x0001180080901648  RSL
L2C_VRT_MEM714                 0x0001180080901650  RSL
L2C_VRT_MEM715                 0x0001180080901658  RSL
L2C_VRT_MEM716                 0x0001180080901660  RSL
L2C_VRT_MEM717                 0x0001180080901668  RSL
L2C_VRT_MEM718                 0x0001180080901670  RSL
L2C_VRT_MEM719                 0x0001180080901678  RSL
L2C_VRT_MEM720                 0x0001180080901680  RSL
L2C_VRT_MEM721                 0x0001180080901688  RSL
L2C_VRT_MEM722                 0x0001180080901690  RSL
L2C_VRT_MEM723                 0x0001180080901698  RSL
L2C_VRT_MEM724                 0x00011800809016A0  RSL
L2C_VRT_MEM725                 0x00011800809016A8  RSL
L2C_VRT_MEM726                 0x00011800809016B0  RSL
L2C_VRT_MEM727                 0x00011800809016B8  RSL
L2C_VRT_MEM728                 0x00011800809016C0  RSL
L2C_VRT_MEM729                 0x00011800809016C8  RSL
L2C_VRT_MEM730                 0x00011800809016D0  RSL
L2C_VRT_MEM731                 0x00011800809016D8  RSL
L2C_VRT_MEM732                 0x00011800809016E0  RSL
L2C_VRT_MEM733                 0x00011800809016E8  RSL
L2C_VRT_MEM734                 0x00011800809016F0  RSL
L2C_VRT_MEM735                 0x00011800809016F8  RSL
L2C_VRT_MEM736                 0x0001180080901700  RSL
L2C_VRT_MEM737                 0x0001180080901708  RSL
L2C_VRT_MEM738                 0x0001180080901710  RSL
L2C_VRT_MEM739                 0x0001180080901718  RSL
L2C_VRT_MEM740                 0x0001180080901720  RSL
L2C_VRT_MEM741                 0x0001180080901728  RSL
L2C_VRT_MEM742                 0x0001180080901730  RSL
L2C_VRT_MEM743                 0x0001180080901738  RSL
L2C_VRT_MEM744                 0x0001180080901740  RSL
L2C_VRT_MEM745                 0x0001180080901748  RSL
L2C_VRT_MEM746                 0x0001180080901750  RSL
L2C_VRT_MEM747                 0x0001180080901758  RSL
L2C_VRT_MEM748                 0x0001180080901760  RSL
L2C_VRT_MEM749                 0x0001180080901768  RSL
L2C_VRT_MEM750                 0x0001180080901770  RSL
L2C_VRT_MEM751                 0x0001180080901778  RSL
L2C_VRT_MEM752                 0x0001180080901780  RSL
L2C_VRT_MEM753                 0x0001180080901788  RSL
L2C_VRT_MEM754                 0x0001180080901790  RSL
L2C_VRT_MEM755                 0x0001180080901798  RSL
L2C_VRT_MEM756                 0x00011800809017A0  RSL
L2C_VRT_MEM757                 0x00011800809017A8  RSL
L2C_VRT_MEM758                 0x00011800809017B0  RSL
L2C_VRT_MEM759                 0x00011800809017B8  RSL
L2C_VRT_MEM760                 0x00011800809017C0  RSL
L2C_VRT_MEM761                 0x00011800809017C8  RSL
L2C_VRT_MEM762                 0x00011800809017D0  RSL
L2C_VRT_MEM763                 0x00011800809017D8  RSL
L2C_VRT_MEM764                 0x00011800809017E0  RSL
L2C_VRT_MEM765                 0x00011800809017E8  RSL
L2C_VRT_MEM766                 0x00011800809017F0  RSL
L2C_VRT_MEM767                 0x00011800809017F8  RSL
L2C_VRT_MEM768                 0x0001180080901800  RSL
L2C_VRT_MEM769                 0x0001180080901808  RSL
L2C_VRT_MEM770                 0x0001180080901810  RSL
L2C_VRT_MEM771                 0x0001180080901818  RSL
L2C_VRT_MEM772                 0x0001180080901820  RSL
L2C_VRT_MEM773                 0x0001180080901828  RSL
L2C_VRT_MEM774                 0x0001180080901830  RSL
L2C_VRT_MEM775                 0x0001180080901838  RSL
L2C_VRT_MEM776                 0x0001180080901840  RSL
L2C_VRT_MEM777                 0x0001180080901848  RSL
L2C_VRT_MEM778                 0x0001180080901850  RSL
L2C_VRT_MEM779                 0x0001180080901858  RSL
L2C_VRT_MEM780                 0x0001180080901860  RSL
L2C_VRT_MEM781                 0x0001180080901868  RSL
L2C_VRT_MEM782                 0x0001180080901870  RSL
L2C_VRT_MEM783                 0x0001180080901878  RSL
L2C_VRT_MEM784                 0x0001180080901880  RSL
L2C_VRT_MEM785                 0x0001180080901888  RSL
L2C_VRT_MEM786                 0x0001180080901890  RSL
L2C_VRT_MEM787                 0x0001180080901898  RSL
L2C_VRT_MEM788                 0x00011800809018A0  RSL
L2C_VRT_MEM789                 0x00011800809018A8  RSL
L2C_VRT_MEM790                 0x00011800809018B0  RSL
L2C_VRT_MEM791                 0x00011800809018B8  RSL
L2C_VRT_MEM792                 0x00011800809018C0  RSL
L2C_VRT_MEM793                 0x00011800809018C8  RSL
L2C_VRT_MEM794                 0x00011800809018D0  RSL
L2C_VRT_MEM795                 0x00011800809018D8  RSL
L2C_VRT_MEM796                 0x00011800809018E0  RSL
L2C_VRT_MEM797                 0x00011800809018E8  RSL
L2C_VRT_MEM798                 0x00011800809018F0  RSL
L2C_VRT_MEM799                 0x00011800809018F8  RSL
L2C_VRT_MEM800                 0x0001180080901900  RSL
L2C_VRT_MEM801                 0x0001180080901908  RSL
L2C_VRT_MEM802                 0x0001180080901910  RSL
L2C_VRT_MEM803                 0x0001180080901918  RSL
L2C_VRT_MEM804                 0x0001180080901920  RSL
L2C_VRT_MEM805                 0x0001180080901928  RSL
L2C_VRT_MEM806                 0x0001180080901930  RSL
L2C_VRT_MEM807                 0x0001180080901938  RSL
L2C_VRT_MEM808                 0x0001180080901940  RSL
L2C_VRT_MEM809                 0x0001180080901948  RSL
L2C_VRT_MEM810                 0x0001180080901950  RSL
L2C_VRT_MEM811                 0x0001180080901958  RSL
L2C_VRT_MEM812                 0x0001180080901960  RSL
L2C_VRT_MEM813                 0x0001180080901968  RSL
L2C_VRT_MEM814                 0x0001180080901970  RSL
L2C_VRT_MEM815                 0x0001180080901978  RSL
L2C_VRT_MEM816                 0x0001180080901980  RSL
L2C_VRT_MEM817                 0x0001180080901988  RSL
L2C_VRT_MEM818                 0x0001180080901990  RSL
L2C_VRT_MEM819                 0x0001180080901998  RSL
L2C_VRT_MEM820                 0x00011800809019A0  RSL
L2C_VRT_MEM821                 0x00011800809019A8  RSL
L2C_VRT_MEM822                 0x00011800809019B0  RSL
L2C_VRT_MEM823                 0x00011800809019B8  RSL
L2C_VRT_MEM824                 0x00011800809019C0  RSL
L2C_VRT_MEM825                 0x00011800809019C8  RSL
L2C_VRT_MEM826                 0x00011800809019D0  RSL
L2C_VRT_MEM827                 0x00011800809019D8  RSL
L2C_VRT_MEM828                 0x00011800809019E0  RSL
L2C_VRT_MEM829                 0x00011800809019E8  RSL
L2C_VRT_MEM830                 0x00011800809019F0  RSL
L2C_VRT_MEM831                 0x00011800809019F8  RSL
L2C_VRT_MEM832                 0x0001180080901A00  RSL
L2C_VRT_MEM833                 0x0001180080901A08  RSL
L2C_VRT_MEM834                 0x0001180080901A10  RSL
L2C_VRT_MEM835                 0x0001180080901A18  RSL
L2C_VRT_MEM836                 0x0001180080901A20  RSL
L2C_VRT_MEM837                 0x0001180080901A28  RSL
L2C_VRT_MEM838                 0x0001180080901A30  RSL
L2C_VRT_MEM839                 0x0001180080901A38  RSL
L2C_VRT_MEM840                 0x0001180080901A40  RSL
L2C_VRT_MEM841                 0x0001180080901A48  RSL
L2C_VRT_MEM842                 0x0001180080901A50  RSL
L2C_VRT_MEM843                 0x0001180080901A58  RSL
L2C_VRT_MEM844                 0x0001180080901A60  RSL
L2C_VRT_MEM845                 0x0001180080901A68  RSL
L2C_VRT_MEM846                 0x0001180080901A70  RSL
L2C_VRT_MEM847                 0x0001180080901A78  RSL
L2C_VRT_MEM848                 0x0001180080901A80  RSL
L2C_VRT_MEM849                 0x0001180080901A88  RSL
L2C_VRT_MEM850                 0x0001180080901A90  RSL
L2C_VRT_MEM851                 0x0001180080901A98  RSL
L2C_VRT_MEM852                 0x0001180080901AA0  RSL
L2C_VRT_MEM853                 0x0001180080901AA8  RSL
L2C_VRT_MEM854                 0x0001180080901AB0  RSL
L2C_VRT_MEM855                 0x0001180080901AB8  RSL
L2C_VRT_MEM856                 0x0001180080901AC0  RSL
L2C_VRT_MEM857                 0x0001180080901AC8  RSL
L2C_VRT_MEM858                 0x0001180080901AD0  RSL
L2C_VRT_MEM859                 0x0001180080901AD8  RSL
L2C_VRT_MEM860                 0x0001180080901AE0  RSL
L2C_VRT_MEM861                 0x0001180080901AE8  RSL
L2C_VRT_MEM862                 0x0001180080901AF0  RSL
L2C_VRT_MEM863                 0x0001180080901AF8  RSL
L2C_VRT_MEM864                 0x0001180080901B00  RSL
L2C_VRT_MEM865                 0x0001180080901B08  RSL
L2C_VRT_MEM866                 0x0001180080901B10  RSL
L2C_VRT_MEM867                 0x0001180080901B18  RSL
L2C_VRT_MEM868                 0x0001180080901B20  RSL
L2C_VRT_MEM869                 0x0001180080901B28  RSL
L2C_VRT_MEM870                 0x0001180080901B30  RSL
L2C_VRT_MEM871                 0x0001180080901B38  RSL
L2C_VRT_MEM872                 0x0001180080901B40  RSL
L2C_VRT_MEM873                 0x0001180080901B48  RSL
L2C_VRT_MEM874                 0x0001180080901B50  RSL
L2C_VRT_MEM875                 0x0001180080901B58  RSL
L2C_VRT_MEM876                 0x0001180080901B60  RSL
L2C_VRT_MEM877                 0x0001180080901B68  RSL
L2C_VRT_MEM878                 0x0001180080901B70  RSL
L2C_VRT_MEM879                 0x0001180080901B78  RSL
L2C_VRT_MEM880                 0x0001180080901B80  RSL
L2C_VRT_MEM881                 0x0001180080901B88  RSL
L2C_VRT_MEM882                 0x0001180080901B90  RSL
L2C_VRT_MEM883                 0x0001180080901B98  RSL
L2C_VRT_MEM884                 0x0001180080901BA0  RSL
L2C_VRT_MEM885                 0x0001180080901BA8  RSL
L2C_VRT_MEM886                 0x0001180080901BB0  RSL
L2C_VRT_MEM887                 0x0001180080901BB8  RSL
L2C_VRT_MEM888                 0x0001180080901BC0  RSL
L2C_VRT_MEM889                 0x0001180080901BC8  RSL
L2C_VRT_MEM890                 0x0001180080901BD0  RSL
L2C_VRT_MEM891                 0x0001180080901BD8  RSL
L2C_VRT_MEM892                 0x0001180080901BE0  RSL
L2C_VRT_MEM893                 0x0001180080901BE8  RSL
L2C_VRT_MEM894                 0x0001180080901BF0  RSL
L2C_VRT_MEM895                 0x0001180080901BF8  RSL
L2C_VRT_MEM896                 0x0001180080901C00  RSL
L2C_VRT_MEM897                 0x0001180080901C08  RSL
L2C_VRT_MEM898                 0x0001180080901C10  RSL
L2C_VRT_MEM899                 0x0001180080901C18  RSL
L2C_VRT_MEM900                 0x0001180080901C20  RSL
L2C_VRT_MEM901                 0x0001180080901C28  RSL
L2C_VRT_MEM902                 0x0001180080901C30  RSL
L2C_VRT_MEM903                 0x0001180080901C38  RSL
L2C_VRT_MEM904                 0x0001180080901C40  RSL
L2C_VRT_MEM905                 0x0001180080901C48  RSL
L2C_VRT_MEM906                 0x0001180080901C50  RSL
L2C_VRT_MEM907                 0x0001180080901C58  RSL
L2C_VRT_MEM908                 0x0001180080901C60  RSL
L2C_VRT_MEM909                 0x0001180080901C68  RSL
L2C_VRT_MEM910                 0x0001180080901C70  RSL
L2C_VRT_MEM911                 0x0001180080901C78  RSL
L2C_VRT_MEM912                 0x0001180080901C80  RSL
L2C_VRT_MEM913                 0x0001180080901C88  RSL
L2C_VRT_MEM914                 0x0001180080901C90  RSL
L2C_VRT_MEM915                 0x0001180080901C98  RSL
L2C_VRT_MEM916                 0x0001180080901CA0  RSL
L2C_VRT_MEM917                 0x0001180080901CA8  RSL
L2C_VRT_MEM918                 0x0001180080901CB0  RSL
L2C_VRT_MEM919                 0x0001180080901CB8  RSL
L2C_VRT_MEM920                 0x0001180080901CC0  RSL
L2C_VRT_MEM921                 0x0001180080901CC8  RSL
L2C_VRT_MEM922                 0x0001180080901CD0  RSL
L2C_VRT_MEM923                 0x0001180080901CD8  RSL
L2C_VRT_MEM924                 0x0001180080901CE0  RSL
L2C_VRT_MEM925                 0x0001180080901CE8  RSL
L2C_VRT_MEM926                 0x0001180080901CF0  RSL
L2C_VRT_MEM927                 0x0001180080901CF8  RSL
L2C_VRT_MEM928                 0x0001180080901D00  RSL
L2C_VRT_MEM929                 0x0001180080901D08  RSL
L2C_VRT_MEM930                 0x0001180080901D10  RSL
L2C_VRT_MEM931                 0x0001180080901D18  RSL
L2C_VRT_MEM932                 0x0001180080901D20  RSL
L2C_VRT_MEM933                 0x0001180080901D28  RSL
L2C_VRT_MEM934                 0x0001180080901D30  RSL
L2C_VRT_MEM935                 0x0001180080901D38  RSL
L2C_VRT_MEM936                 0x0001180080901D40  RSL
L2C_VRT_MEM937                 0x0001180080901D48  RSL
L2C_VRT_MEM938                 0x0001180080901D50  RSL
L2C_VRT_MEM939                 0x0001180080901D58  RSL
L2C_VRT_MEM940                 0x0001180080901D60  RSL
L2C_VRT_MEM941                 0x0001180080901D68  RSL
L2C_VRT_MEM942                 0x0001180080901D70  RSL
L2C_VRT_MEM943                 0x0001180080901D78  RSL
L2C_VRT_MEM944                 0x0001180080901D80  RSL
L2C_VRT_MEM945                 0x0001180080901D88  RSL
L2C_VRT_MEM946                 0x0001180080901D90  RSL
L2C_VRT_MEM947                 0x0001180080901D98  RSL
L2C_VRT_MEM948                 0x0001180080901DA0  RSL
L2C_VRT_MEM949                 0x0001180080901DA8  RSL
L2C_VRT_MEM950                 0x0001180080901DB0  RSL
L2C_VRT_MEM951                 0x0001180080901DB8  RSL
L2C_VRT_MEM952                 0x0001180080901DC0  RSL
L2C_VRT_MEM953                 0x0001180080901DC8  RSL
L2C_VRT_MEM954                 0x0001180080901DD0  RSL
L2C_VRT_MEM955                 0x0001180080901DD8  RSL
L2C_VRT_MEM956                 0x0001180080901DE0  RSL
L2C_VRT_MEM957                 0x0001180080901DE8  RSL
L2C_VRT_MEM958                 0x0001180080901DF0  RSL
L2C_VRT_MEM959                 0x0001180080901DF8  RSL
L2C_VRT_MEM960                 0x0001180080901E00  RSL
L2C_VRT_MEM961                 0x0001180080901E08  RSL
L2C_VRT_MEM962                 0x0001180080901E10  RSL
L2C_VRT_MEM963                 0x0001180080901E18  RSL
L2C_VRT_MEM964                 0x0001180080901E20  RSL
L2C_VRT_MEM965                 0x0001180080901E28  RSL
L2C_VRT_MEM966                 0x0001180080901E30  RSL
L2C_VRT_MEM967                 0x0001180080901E38  RSL
L2C_VRT_MEM968                 0x0001180080901E40  RSL
L2C_VRT_MEM969                 0x0001180080901E48  RSL
L2C_VRT_MEM970                 0x0001180080901E50  RSL
L2C_VRT_MEM971                 0x0001180080901E58  RSL
L2C_VRT_MEM972                 0x0001180080901E60  RSL
L2C_VRT_MEM973                 0x0001180080901E68  RSL
L2C_VRT_MEM974                 0x0001180080901E70  RSL
L2C_VRT_MEM975                 0x0001180080901E78  RSL
L2C_VRT_MEM976                 0x0001180080901E80  RSL
L2C_VRT_MEM977                 0x0001180080901E88  RSL
L2C_VRT_MEM978                 0x0001180080901E90  RSL
L2C_VRT_MEM979                 0x0001180080901E98  RSL
L2C_VRT_MEM980                 0x0001180080901EA0  RSL
L2C_VRT_MEM981                 0x0001180080901EA8  RSL
L2C_VRT_MEM982                 0x0001180080901EB0  RSL
L2C_VRT_MEM983                 0x0001180080901EB8  RSL
L2C_VRT_MEM984                 0x0001180080901EC0  RSL
L2C_VRT_MEM985                 0x0001180080901EC8  RSL
L2C_VRT_MEM986                 0x0001180080901ED0  RSL
L2C_VRT_MEM987                 0x0001180080901ED8  RSL
L2C_VRT_MEM988                 0x0001180080901EE0  RSL
L2C_VRT_MEM989                 0x0001180080901EE8  RSL
L2C_VRT_MEM990                 0x0001180080901EF0  RSL
L2C_VRT_MEM991                 0x0001180080901EF8  RSL
L2C_VRT_MEM992                 0x0001180080901F00  RSL
L2C_VRT_MEM993                 0x0001180080901F08  RSL
L2C_VRT_MEM994                 0x0001180080901F10  RSL
L2C_VRT_MEM995                 0x0001180080901F18  RSL
L2C_VRT_MEM996                 0x0001180080901F20  RSL
L2C_VRT_MEM997                 0x0001180080901F28  RSL
L2C_VRT_MEM998                 0x0001180080901F30  RSL
L2C_VRT_MEM999                 0x0001180080901F38  RSL
L2C_VRT_MEM1000                0x0001180080901F40  RSL
L2C_VRT_MEM1001                0x0001180080901F48  RSL
L2C_VRT_MEM1002                0x0001180080901F50  RSL
L2C_VRT_MEM1003                0x0001180080901F58  RSL
L2C_VRT_MEM1004                0x0001180080901F60  RSL
L2C_VRT_MEM1005                0x0001180080901F68  RSL
L2C_VRT_MEM1006                0x0001180080901F70  RSL
L2C_VRT_MEM1007                0x0001180080901F78  RSL
L2C_VRT_MEM1008                0x0001180080901F80  RSL
L2C_VRT_MEM1009                0x0001180080901F88  RSL
L2C_VRT_MEM1010                0x0001180080901F90  RSL
L2C_VRT_MEM1011                0x0001180080901F98  RSL
L2C_VRT_MEM1012                0x0001180080901FA0  RSL
L2C_VRT_MEM1013                0x0001180080901FA8  RSL
L2C_VRT_MEM1014                0x0001180080901FB0  RSL
L2C_VRT_MEM1015                0x0001180080901FB8  RSL
L2C_VRT_MEM1016                0x0001180080901FC0  RSL
L2C_VRT_MEM1017                0x0001180080901FC8  RSL
L2C_VRT_MEM1018                0x0001180080901FD0  RSL
L2C_VRT_MEM1019                0x0001180080901FD8  RSL
L2C_VRT_MEM1020                0x0001180080901FE0  RSL
L2C_VRT_MEM1021                0x0001180080901FE8  RSL
L2C_VRT_MEM1022                0x0001180080901FF0  RSL
L2C_VRT_MEM1023                0x0001180080901FF8  RSL
L2C_WPAR_IOB0                  0x0001180080840200  RSL
L2C_WPAR_IOB1                  0x0001180080840208  RSL
L2C_WPAR_PP0                   0x0001180080840000  RSL
L2C_WPAR_PP1                   0x0001180080840008  RSL
L2C_WPAR_PP2                   0x0001180080840010  RSL
L2C_WPAR_PP3                   0x0001180080840018  RSL
L2C_WPAR_PP4                   0x0001180080840020  RSL
L2C_WPAR_PP5                   0x0001180080840028  RSL
L2C_WPAR_PP6                   0x0001180080840030  RSL
L2C_WPAR_PP7                   0x0001180080840038  RSL
L2C_WPAR_PP8                   0x0001180080840040  RSL
L2C_WPAR_PP9                   0x0001180080840048  RSL
L2C_WPAR_PP10                  0x0001180080840050  RSL
L2C_WPAR_PP11                  0x0001180080840058  RSL
L2C_WPAR_PP12                  0x0001180080840060  RSL
L2C_WPAR_PP13                  0x0001180080840068  RSL
L2C_WPAR_PP14                  0x0001180080840070  RSL
L2C_WPAR_PP15                  0x0001180080840078  RSL
L2C_WPAR_PP16                  0x0001180080840080  RSL
L2C_WPAR_PP17                  0x0001180080840088  RSL
L2C_WPAR_PP18                  0x0001180080840090  RSL
L2C_WPAR_PP19                  0x0001180080840098  RSL
L2C_WPAR_PP20                  0x00011800808400A0  RSL
L2C_WPAR_PP21                  0x00011800808400A8  RSL
L2C_WPAR_PP22                  0x00011800808400B0  RSL
L2C_WPAR_PP23                  0x00011800808400B8  RSL
L2C_WPAR_PP24                  0x00011800808400C0  RSL
L2C_WPAR_PP25                  0x00011800808400C8  RSL
L2C_WPAR_PP26                  0x00011800808400D0  RSL
L2C_WPAR_PP27                  0x00011800808400D8  RSL
L2C_WPAR_PP28                  0x00011800808400E0  RSL
L2C_WPAR_PP29                  0x00011800808400E8  RSL
L2C_WPAR_PP30                  0x00011800808400F0  RSL
L2C_WPAR_PP31                  0x00011800808400F8  RSL
L2C_XMC0_PFC                   0x0001180080800400  RSL
L2C_XMC1_PFC                   0x0001180080800440  RSL
L2C_XMC2_PFC                   0x0001180080800480  RSL
L2C_XMC3_PFC                   0x00011800808004C0  RSL
L2C_XMC_CMD                    0x0001180080800028  RSL
L2C_XMD0_PFC                   0x0001180080800408  RSL
L2C_XMD1_PFC                   0x0001180080800448  RSL
L2C_XMD2_PFC                   0x0001180080800488  RSL
L2C_XMD3_PFC                   0x00011800808004C8  RSL
LMC0_CHAR_CTL                  0x0001180088000220  RSL
LMC0_CHAR_MASK0                0x0001180088000228  RSL
LMC0_CHAR_MASK1                0x0001180088000230  RSL
LMC0_CHAR_MASK2                0x0001180088000238  RSL
LMC0_CHAR_MASK3                0x0001180088000240  RSL
LMC0_CHAR_MASK4                0x0001180088000318  RSL
LMC0_COMP_CTL2                 0x00011800880001B8  RSL
LMC0_CONFIG                    0x0001180088000188  RSL
LMC0_CONTROL                   0x0001180088000190  RSL
LMC0_DCLK_CNT                  0x00011800880001E0  RSL
LMC0_DDR_PLL_CTL               0x0001180088000258  RSL
LMC0_DIMM000_PARAMS            0x0001180088000270  RSL
LMC0_DIMM001_PARAMS            0x0001180088000278  RSL
LMC0_DIMM_CTL                  0x0001180088000310  RSL
LMC0_DLL_CTL2                  0x00011800880001C8  RSL
LMC0_DLL_CTL3                  0x0001180088000218  RSL
LMC0_DUAL_MEMCFG               0x0001180088000098  RSL
LMC0_ECC_SYND                  0x0001180088000038  RSL
LMC0_FADR                      0x0001180088000020  RSL
LMC0_IFB_CNT                   0x00011800880001D0  RSL
LMC0_INT                       0x00011800880001F0  RSL
LMC0_INT_EN                    0x00011800880001E8  RSL
LMC0_MODEREG_PARAMS0           0x00011800880001A8  RSL
LMC0_MODEREG_PARAMS1           0x0001180088000260  RSL
LMC0_NXM                       0x00011800880000C8  RSL
LMC0_OPS_CNT                   0x00011800880001D8  RSL
LMC0_PHY_CTL                   0x0001180088000210  RSL
LMC0_RESET_CTL                 0x0001180088000180  RSL
LMC0_RLEVEL_CTL                0x00011800880002A0  RSL
LMC0_RLEVEL_DBG                0x00011800880002A8  RSL
LMC0_RLEVEL_RANK000            0x0001180088000280  RSL
LMC0_RLEVEL_RANK001            0x0001180088000288  RSL
LMC0_RLEVEL_RANK002            0x0001180088000290  RSL
LMC0_RLEVEL_RANK003            0x0001180088000298  RSL
LMC0_RODT_MASK                 0x0001180088000268  RSL
LMC0_SLOT_CTL0                 0x00011800880001F8  RSL
LMC0_SLOT_CTL1                 0x0001180088000200  RSL
LMC0_SLOT_CTL2                 0x0001180088000208  RSL
LMC0_TIMING_PARAMS0            0x0001180088000198  RSL
LMC0_TIMING_PARAMS1            0x00011800880001A0  RSL
LMC0_TRO_CTL                   0x0001180088000248  RSL
LMC0_TRO_STAT                  0x0001180088000250  RSL
LMC0_WLEVEL_CTL                0x0001180088000300  RSL
LMC0_WLEVEL_DBG                0x0001180088000308  RSL
LMC0_WLEVEL_RANK000            0x00011800880002B0  RSL
LMC0_WLEVEL_RANK001            0x00011800880002B8  RSL
LMC0_WLEVEL_RANK002            0x00011800880002C0  RSL
LMC0_WLEVEL_RANK003            0x00011800880002C8  RSL
LMC0_WODT_MASK                 0x00011800880001B0  RSL
LMC1_CHAR_CTL                  0x0001180089000220  RSL
LMC1_CHAR_MASK0                0x0001180089000228  RSL
LMC1_CHAR_MASK1                0x0001180089000230  RSL
LMC1_CHAR_MASK2                0x0001180089000238  RSL
LMC1_CHAR_MASK3                0x0001180089000240  RSL
LMC1_CHAR_MASK4                0x0001180089000318  RSL
LMC1_COMP_CTL2                 0x00011800890001B8  RSL
LMC1_CONFIG                    0x0001180089000188  RSL
LMC1_CONTROL                   0x0001180089000190  RSL
LMC1_DCLK_CNT                  0x00011800890001E0  RSL
LMC1_DDR_PLL_CTL               0x0001180089000258  RSL
LMC1_DIMM000_PARAMS            0x0001180089000270  RSL
LMC1_DIMM001_PARAMS            0x0001180089000278  RSL
LMC1_DIMM_CTL                  0x0001180089000310  RSL
LMC1_DLL_CTL2                  0x00011800890001C8  RSL
LMC1_DLL_CTL3                  0x0001180089000218  RSL
LMC1_DUAL_MEMCFG               0x0001180089000098  RSL
LMC1_ECC_SYND                  0x0001180089000038  RSL
LMC1_FADR                      0x0001180089000020  RSL
LMC1_IFB_CNT                   0x00011800890001D0  RSL
LMC1_INT                       0x00011800890001F0  RSL
LMC1_INT_EN                    0x00011800890001E8  RSL
LMC1_MODEREG_PARAMS0           0x00011800890001A8  RSL
LMC1_MODEREG_PARAMS1           0x0001180089000260  RSL
LMC1_NXM                       0x00011800890000C8  RSL
LMC1_OPS_CNT                   0x00011800890001D8  RSL
LMC1_PHY_CTL                   0x0001180089000210  RSL
LMC1_RESET_CTL                 0x0001180089000180  RSL
LMC1_RLEVEL_CTL                0x00011800890002A0  RSL
LMC1_RLEVEL_DBG                0x00011800890002A8  RSL
LMC1_RLEVEL_RANK000            0x0001180089000280  RSL
LMC1_RLEVEL_RANK001            0x0001180089000288  RSL
LMC1_RLEVEL_RANK002            0x0001180089000290  RSL
LMC1_RLEVEL_RANK003            0x0001180089000298  RSL
LMC1_RODT_MASK                 0x0001180089000268  RSL
LMC1_SLOT_CTL0                 0x00011800890001F8  RSL
LMC1_SLOT_CTL1                 0x0001180089000200  RSL
LMC1_SLOT_CTL2                 0x0001180089000208  RSL
LMC1_TIMING_PARAMS0            0x0001180089000198  RSL
LMC1_TIMING_PARAMS1            0x00011800890001A0  RSL
LMC1_TRO_CTL                   0x0001180089000248  RSL
LMC1_TRO_STAT                  0x0001180089000250  RSL
LMC1_WLEVEL_CTL                0x0001180089000300  RSL
LMC1_WLEVEL_DBG                0x0001180089000308  RSL
LMC1_WLEVEL_RANK000            0x00011800890002B0  RSL
LMC1_WLEVEL_RANK001            0x00011800890002B8  RSL
LMC1_WLEVEL_RANK002            0x00011800890002C0  RSL
LMC1_WLEVEL_RANK003            0x00011800890002C8  RSL
LMC1_WODT_MASK                 0x00011800890001B0  RSL
LMC2_CHAR_CTL                  0x000118008A000220  RSL
LMC2_CHAR_MASK0                0x000118008A000228  RSL
LMC2_CHAR_MASK1                0x000118008A000230  RSL
LMC2_CHAR_MASK2                0x000118008A000238  RSL
LMC2_CHAR_MASK3                0x000118008A000240  RSL
LMC2_CHAR_MASK4                0x000118008A000318  RSL
LMC2_COMP_CTL2                 0x000118008A0001B8  RSL
LMC2_CONFIG                    0x000118008A000188  RSL
LMC2_CONTROL                   0x000118008A000190  RSL
LMC2_DCLK_CNT                  0x000118008A0001E0  RSL
LMC2_DDR_PLL_CTL               0x000118008A000258  RSL
LMC2_DIMM000_PARAMS            0x000118008A000270  RSL
LMC2_DIMM001_PARAMS            0x000118008A000278  RSL
LMC2_DIMM_CTL                  0x000118008A000310  RSL
LMC2_DLL_CTL2                  0x000118008A0001C8  RSL
LMC2_DLL_CTL3                  0x000118008A000218  RSL
LMC2_DUAL_MEMCFG               0x000118008A000098  RSL
LMC2_ECC_SYND                  0x000118008A000038  RSL
LMC2_FADR                      0x000118008A000020  RSL
LMC2_IFB_CNT                   0x000118008A0001D0  RSL
LMC2_INT                       0x000118008A0001F0  RSL
LMC2_INT_EN                    0x000118008A0001E8  RSL
LMC2_MODEREG_PARAMS0           0x000118008A0001A8  RSL
LMC2_MODEREG_PARAMS1           0x000118008A000260  RSL
LMC2_NXM                       0x000118008A0000C8  RSL
LMC2_OPS_CNT                   0x000118008A0001D8  RSL
LMC2_PHY_CTL                   0x000118008A000210  RSL
LMC2_RESET_CTL                 0x000118008A000180  RSL
LMC2_RLEVEL_CTL                0x000118008A0002A0  RSL
LMC2_RLEVEL_DBG                0x000118008A0002A8  RSL
LMC2_RLEVEL_RANK000            0x000118008A000280  RSL
LMC2_RLEVEL_RANK001            0x000118008A000288  RSL
LMC2_RLEVEL_RANK002            0x000118008A000290  RSL
LMC2_RLEVEL_RANK003            0x000118008A000298  RSL
LMC2_RODT_MASK                 0x000118008A000268  RSL
LMC2_SLOT_CTL0                 0x000118008A0001F8  RSL
LMC2_SLOT_CTL1                 0x000118008A000200  RSL
LMC2_SLOT_CTL2                 0x000118008A000208  RSL
LMC2_TIMING_PARAMS0            0x000118008A000198  RSL
LMC2_TIMING_PARAMS1            0x000118008A0001A0  RSL
LMC2_TRO_CTL                   0x000118008A000248  RSL
LMC2_TRO_STAT                  0x000118008A000250  RSL
LMC2_WLEVEL_CTL                0x000118008A000300  RSL
LMC2_WLEVEL_DBG                0x000118008A000308  RSL
LMC2_WLEVEL_RANK000            0x000118008A0002B0  RSL
LMC2_WLEVEL_RANK001            0x000118008A0002B8  RSL
LMC2_WLEVEL_RANK002            0x000118008A0002C0  RSL
LMC2_WLEVEL_RANK003            0x000118008A0002C8  RSL
LMC2_WODT_MASK                 0x000118008A0001B0  RSL
LMC3_CHAR_CTL                  0x000118008B000220  RSL
LMC3_CHAR_MASK0                0x000118008B000228  RSL
LMC3_CHAR_MASK1                0x000118008B000230  RSL
LMC3_CHAR_MASK2                0x000118008B000238  RSL
LMC3_CHAR_MASK3                0x000118008B000240  RSL
LMC3_CHAR_MASK4                0x000118008B000318  RSL
LMC3_COMP_CTL2                 0x000118008B0001B8  RSL
LMC3_CONFIG                    0x000118008B000188  RSL
LMC3_CONTROL                   0x000118008B000190  RSL
LMC3_DCLK_CNT                  0x000118008B0001E0  RSL
LMC3_DDR_PLL_CTL               0x000118008B000258  RSL
LMC3_DIMM000_PARAMS            0x000118008B000270  RSL
LMC3_DIMM001_PARAMS            0x000118008B000278  RSL
LMC3_DIMM_CTL                  0x000118008B000310  RSL
LMC3_DLL_CTL2                  0x000118008B0001C8  RSL
LMC3_DLL_CTL3                  0x000118008B000218  RSL
LMC3_DUAL_MEMCFG               0x000118008B000098  RSL
LMC3_ECC_SYND                  0x000118008B000038  RSL
LMC3_FADR                      0x000118008B000020  RSL
LMC3_IFB_CNT                   0x000118008B0001D0  RSL
LMC3_INT                       0x000118008B0001F0  RSL
LMC3_INT_EN                    0x000118008B0001E8  RSL
LMC3_MODEREG_PARAMS0           0x000118008B0001A8  RSL
LMC3_MODEREG_PARAMS1           0x000118008B000260  RSL
LMC3_NXM                       0x000118008B0000C8  RSL
LMC3_OPS_CNT                   0x000118008B0001D8  RSL
LMC3_PHY_CTL                   0x000118008B000210  RSL
LMC3_RESET_CTL                 0x000118008B000180  RSL
LMC3_RLEVEL_CTL                0x000118008B0002A0  RSL
LMC3_RLEVEL_DBG                0x000118008B0002A8  RSL
LMC3_RLEVEL_RANK000            0x000118008B000280  RSL
LMC3_RLEVEL_RANK001            0x000118008B000288  RSL
LMC3_RLEVEL_RANK002            0x000118008B000290  RSL
LMC3_RLEVEL_RANK003            0x000118008B000298  RSL
LMC3_RODT_MASK                 0x000118008B000268  RSL
LMC3_SLOT_CTL0                 0x000118008B0001F8  RSL
LMC3_SLOT_CTL1                 0x000118008B000200  RSL
LMC3_SLOT_CTL2                 0x000118008B000208  RSL
LMC3_TIMING_PARAMS0            0x000118008B000198  RSL
LMC3_TIMING_PARAMS1            0x000118008B0001A0  RSL
LMC3_TRO_CTL                   0x000118008B000248  RSL
LMC3_TRO_STAT                  0x000118008B000250  RSL
LMC3_WLEVEL_CTL                0x000118008B000300  RSL
LMC3_WLEVEL_DBG                0x000118008B000308  RSL
LMC3_WLEVEL_RANK000            0x000118008B0002B0  RSL
LMC3_WLEVEL_RANK001            0x000118008B0002B8  RSL
LMC3_WLEVEL_RANK002            0x000118008B0002C0  RSL
LMC3_WLEVEL_RANK003            0x000118008B0002C8  RSL
LMC3_WODT_MASK                 0x000118008B0001B0  RSL
MIO_BOOT_BIST_STAT             0x00011800000000F8  RSL
MIO_BOOT_COMP                  0x00011800000000B8  RSL
MIO_BOOT_DMA_CFG0              0x0001180000000100  RSL
MIO_BOOT_DMA_CFG1              0x0001180000000108  RSL
MIO_BOOT_DMA_INT0              0x0001180000000138  RSL
MIO_BOOT_DMA_INT1              0x0001180000000140  RSL
MIO_BOOT_DMA_INT_EN0           0x0001180000000150  RSL
MIO_BOOT_DMA_INT_EN1           0x0001180000000158  RSL
MIO_BOOT_DMA_TIM0              0x0001180000000120  RSL
MIO_BOOT_DMA_TIM1              0x0001180000000128  RSL
MIO_BOOT_ERR                   0x00011800000000A0  RSL
MIO_BOOT_INT                   0x00011800000000A8  RSL
MIO_BOOT_LOC_ADR               0x0001180000000090  RSL
MIO_BOOT_LOC_CFG0              0x0001180000000080  RSL
MIO_BOOT_LOC_CFG1              0x0001180000000088  RSL
MIO_BOOT_LOC_DAT               0x0001180000000098  RSL
MIO_BOOT_PIN_DEFS              0x00011800000000C0  RSL
MIO_BOOT_REG_CFG0              0x0001180000000000  RSL
MIO_BOOT_REG_CFG1              0x0001180000000008  RSL
MIO_BOOT_REG_CFG2              0x0001180000000010  RSL
MIO_BOOT_REG_CFG3              0x0001180000000018  RSL
MIO_BOOT_REG_CFG4              0x0001180000000020  RSL
MIO_BOOT_REG_CFG5              0x0001180000000028  RSL
MIO_BOOT_REG_CFG6              0x0001180000000030  RSL
MIO_BOOT_REG_CFG7              0x0001180000000038  RSL
MIO_BOOT_REG_TIM0              0x0001180000000040  RSL
MIO_BOOT_REG_TIM1              0x0001180000000048  RSL
MIO_BOOT_REG_TIM2              0x0001180000000050  RSL
MIO_BOOT_REG_TIM3              0x0001180000000058  RSL
MIO_BOOT_REG_TIM4              0x0001180000000060  RSL
MIO_BOOT_REG_TIM5              0x0001180000000068  RSL
MIO_BOOT_REG_TIM6              0x0001180000000070  RSL
MIO_BOOT_REG_TIM7              0x0001180000000078  RSL
MIO_BOOT_THR                   0x00011800000000B0  RSL
MIO_FUS_BNK_DAT0               0x0001180000001520  RSL
MIO_FUS_BNK_DAT1               0x0001180000001528  RSL
MIO_FUS_DAT0                   0x0001180000001400  RSL
MIO_FUS_DAT1                   0x0001180000001408  RSL
MIO_FUS_DAT2                   0x0001180000001410  RSL
MIO_FUS_DAT3                   0x0001180000001418  RSL
MIO_FUS_EMA                    0x0001180000001550  RSL
MIO_FUS_PDF                    0x0001180000001420  RSL
MIO_FUS_PLL                    0x0001180000001580  RSL
MIO_FUS_PROG                   0x0001180000001510  RSL
MIO_FUS_PROG_TIMES             0x0001180000001518  RSL
MIO_FUS_RCMD                   0x0001180000001500  RSL
MIO_FUS_READ_TIMES             0x0001180000001570  RSL
MIO_FUS_REPAIR_RES0            0x0001180000001558  RSL
MIO_FUS_REPAIR_RES1            0x0001180000001560  RSL
MIO_FUS_REPAIR_RES2            0x0001180000001568  RSL
MIO_FUS_SPR_REPAIR_RES         0x0001180000001548  RSL
MIO_FUS_SPR_REPAIR_SUM         0x0001180000001540  RSL
MIO_FUS_WADR                   0x0001180000001508  RSL
MIO_GPIO_COMP                  0x00011800000000C8  RSL
MIO_NDF_DMA_CFG                0x0001180000000168  RSL
MIO_NDF_DMA_INT                0x0001180000000170  RSL
MIO_NDF_DMA_INT_EN             0x0001180000000178  RSL
MIO_PTP_CLOCK_CFG              0x0001070000000F00  NCB
MIO_PTP_CLOCK_COMP             0x0001070000000F18  NCB
MIO_PTP_CLOCK_HI               0x0001070000000F10  NCB
MIO_PTP_CLOCK_LO               0x0001070000000F08  NCB
MIO_PTP_EVT_CNT                0x0001070000000F28  NCB
MIO_PTP_TIMESTAMP              0x0001070000000F20  NCB
MIO_QLM0_CFG                   0x0001180000001590  RSL
MIO_QLM1_CFG                   0x0001180000001598  RSL
MIO_QLM2_CFG                   0x00011800000015A0  RSL
MIO_QLM3_CFG                   0x00011800000015A8  RSL
MIO_QLM4_CFG                   0x00011800000015B0  RSL
MIO_RST_BOOT                   0x0001180000001600  RSL
MIO_RST_CFG                    0x0001180000001610  RSL
MIO_RST_CTL0                   0x0001180000001618  RSL
MIO_RST_CTL1                   0x0001180000001620  RSL
MIO_RST_DELAY                  0x0001180000001608  RSL
MIO_RST_INT                    0x0001180000001628  RSL
MIO_RST_INT_EN                 0x0001180000001630  RSL
MIO_TWS0_INT                   0x0001180000001010  RSL
MIO_TWS0_SW_TWSI               0x0001180000001000  RSL
MIO_TWS0_SW_TWSI_EXT           0x0001180000001018  RSL
MIO_TWS0_TWSI_SW               0x0001180000001008  RSL
MIO_TWS1_INT                   0x0001180000001210  RSL
MIO_TWS1_SW_TWSI               0x0001180000001200  RSL
MIO_TWS1_SW_TWSI_EXT           0x0001180000001218  RSL
MIO_TWS1_TWSI_SW               0x0001180000001208  RSL
MIO_UART0_DLH                  0x0001180000000888  RSL
MIO_UART0_DLL                  0x0001180000000880  RSL
MIO_UART0_FAR                  0x0001180000000920  RSL
MIO_UART0_FCR                  0x0001180000000850  RSL
MIO_UART0_HTX                  0x0001180000000B08  RSL
MIO_UART0_IER                  0x0001180000000808  RSL
MIO_UART0_IIR                  0x0001180000000810  RSL
MIO_UART0_LCR                  0x0001180000000818  RSL
MIO_UART0_LSR                  0x0001180000000828  RSL
MIO_UART0_MCR                  0x0001180000000820  RSL
MIO_UART0_MSR                  0x0001180000000830  RSL
MIO_UART0_RBR                  0x0001180000000800  RSL
MIO_UART0_RFL                  0x0001180000000A08  RSL
MIO_UART0_RFW                  0x0001180000000930  RSL
MIO_UART0_SBCR                 0x0001180000000A20  RSL
MIO_UART0_SCR                  0x0001180000000838  RSL
MIO_UART0_SFE                  0x0001180000000A30  RSL
MIO_UART0_SRR                  0x0001180000000A10  RSL
MIO_UART0_SRT                  0x0001180000000A38  RSL
MIO_UART0_SRTS                 0x0001180000000A18  RSL
MIO_UART0_STT                  0x0001180000000B00  RSL
MIO_UART0_TFL                  0x0001180000000A00  RSL
MIO_UART0_TFR                  0x0001180000000928  RSL
MIO_UART0_THR                  0x0001180000000840  RSL
MIO_UART0_USR                  0x0001180000000938  RSL
MIO_UART1_DLH                  0x0001180000000C88  RSL
MIO_UART1_DLL                  0x0001180000000C80  RSL
MIO_UART1_FAR                  0x0001180000000D20  RSL
MIO_UART1_FCR                  0x0001180000000C50  RSL
MIO_UART1_HTX                  0x0001180000000F08  RSL
MIO_UART1_IER                  0x0001180000000C08  RSL
MIO_UART1_IIR                  0x0001180000000C10  RSL
MIO_UART1_LCR                  0x0001180000000C18  RSL
MIO_UART1_LSR                  0x0001180000000C28  RSL
MIO_UART1_MCR                  0x0001180000000C20  RSL
MIO_UART1_MSR                  0x0001180000000C30  RSL
MIO_UART1_RBR                  0x0001180000000C00  RSL
MIO_UART1_RFL                  0x0001180000000E08  RSL
MIO_UART1_RFW                  0x0001180000000D30  RSL
MIO_UART1_SBCR                 0x0001180000000E20  RSL
MIO_UART1_SCR                  0x0001180000000C38  RSL
MIO_UART1_SFE                  0x0001180000000E30  RSL
MIO_UART1_SRR                  0x0001180000000E10  RSL
MIO_UART1_SRT                  0x0001180000000E38  RSL
MIO_UART1_SRTS                 0x0001180000000E18  RSL
MIO_UART1_STT                  0x0001180000000F00  RSL
MIO_UART1_TFL                  0x0001180000000E00  RSL
MIO_UART1_TFR                  0x0001180000000D28  RSL
MIO_UART1_THR                  0x0001180000000C40  RSL
MIO_UART1_USR                  0x0001180000000D38  RSL
MIX0_BIST                      0x0001070000100078  NCB
MIX0_CTL                       0x0001070000100020  NCB
MIX0_INTENA                    0x0001070000100050  NCB
MIX0_IRCNT                     0x0001070000100030  NCB
MIX0_IRHWM                     0x0001070000100028  NCB
MIX0_IRING1                    0x0001070000100010  NCB
MIX0_IRING2                    0x0001070000100018  NCB
MIX0_ISR                       0x0001070000100048  NCB
MIX0_ORCNT                     0x0001070000100040  NCB
MIX0_ORHWM                     0x0001070000100038  NCB
MIX0_ORING1                    0x0001070000100000  NCB
MIX0_ORING2                    0x0001070000100008  NCB
MIX0_REMCNT                    0x0001070000100058  NCB
MIX0_TSCTL                     0x0001070000100068  NCB
MIX0_TSTAMP                    0x0001070000100060  NCB
NDF_BT_PG_INFO                 0x0001070001000018  NCB
NDF_CMD                        0x0001070001000000  NCB
NDF_DRBELL                     0x0001070001000030  NCB
NDF_ECC_CNT                    0x0001070001000010  NCB
NDF_INT                        0x0001070001000020  NCB
NDF_INT_EN                     0x0001070001000028  NCB
NDF_MISC                       0x0001070001000008  NCB
NDF_ST_REG                     0x0001070001000038  NCB
PCIEEP0_CFG000                 0x0000000000000000  PCICONFIGEP0
PCIEEP0_CFG001                 0x0000000000000004  PCICONFIGEP0
PCIEEP0_CFG002                 0x0000000000000008  PCICONFIGEP0
PCIEEP0_CFG003                 0x000000000000000C  PCICONFIGEP0
PCIEEP0_CFG004                 0x0000000000000010  PCICONFIGEP0
PCIEEP0_CFG004_MASK            0x0000000080000010  PCICONFIGEP0
PCIEEP0_CFG005                 0x0000000000000014  PCICONFIGEP0
PCIEEP0_CFG005_MASK            0x0000000080000014  PCICONFIGEP0
PCIEEP0_CFG006                 0x0000000000000018  PCICONFIGEP0
PCIEEP0_CFG006_MASK            0x0000000080000018  PCICONFIGEP0
PCIEEP0_CFG007                 0x000000000000001C  PCICONFIGEP0
PCIEEP0_CFG007_MASK            0x000000008000001C  PCICONFIGEP0
PCIEEP0_CFG008                 0x0000000000000020  PCICONFIGEP0
PCIEEP0_CFG008_MASK            0x0000000080000020  PCICONFIGEP0
PCIEEP0_CFG009                 0x0000000000000024  PCICONFIGEP0
PCIEEP0_CFG009_MASK            0x0000000080000024  PCICONFIGEP0
PCIEEP0_CFG010                 0x0000000000000028  PCICONFIGEP0
PCIEEP0_CFG011                 0x000000000000002C  PCICONFIGEP0
PCIEEP0_CFG012                 0x0000000000000030  PCICONFIGEP0
PCIEEP0_CFG012_MASK            0x0000000080000030  PCICONFIGEP0
PCIEEP0_CFG013                 0x0000000000000034  PCICONFIGEP0
PCIEEP0_CFG015                 0x000000000000003C  PCICONFIGEP0
PCIEEP0_CFG016                 0x0000000000000040  PCICONFIGEP0
PCIEEP0_CFG017                 0x0000000000000044  PCICONFIGEP0
PCIEEP0_CFG020                 0x0000000000000050  PCICONFIGEP0
PCIEEP0_CFG021                 0x0000000000000054  PCICONFIGEP0
PCIEEP0_CFG022                 0x0000000000000058  PCICONFIGEP0
PCIEEP0_CFG023                 0x000000000000005C  PCICONFIGEP0
PCIEEP0_CFG028                 0x0000000000000070  PCICONFIGEP0
PCIEEP0_CFG029                 0x0000000000000074  PCICONFIGEP0
PCIEEP0_CFG030                 0x0000000000000078  PCICONFIGEP0
PCIEEP0_CFG031                 0x000000000000007C  PCICONFIGEP0
PCIEEP0_CFG032                 0x0000000000000080  PCICONFIGEP0
PCIEEP0_CFG037                 0x0000000000000094  PCICONFIGEP0
PCIEEP0_CFG038                 0x0000000000000098  PCICONFIGEP0
PCIEEP0_CFG039                 0x000000000000009C  PCICONFIGEP0
PCIEEP0_CFG040                 0x00000000000000A0  PCICONFIGEP0
PCIEEP0_CFG064                 0x0000000000000100  PCICONFIGEP0
PCIEEP0_CFG065                 0x0000000000000104  PCICONFIGEP0
PCIEEP0_CFG066                 0x0000000000000108  PCICONFIGEP0
PCIEEP0_CFG067                 0x000000000000010C  PCICONFIGEP0
PCIEEP0_CFG068                 0x0000000000000110  PCICONFIGEP0
PCIEEP0_CFG069                 0x0000000000000114  PCICONFIGEP0
PCIEEP0_CFG070                 0x0000000000000118  PCICONFIGEP0
PCIEEP0_CFG071                 0x000000000000011C  PCICONFIGEP0
PCIEEP0_CFG072                 0x0000000000000120  PCICONFIGEP0
PCIEEP0_CFG073                 0x0000000000000124  PCICONFIGEP0
PCIEEP0_CFG074                 0x0000000000000128  PCICONFIGEP0
PCIEEP0_CFG448                 0x0000000000000700  PCICONFIGEP0
PCIEEP0_CFG449                 0x0000000000000704  PCICONFIGEP0
PCIEEP0_CFG450                 0x0000000000000708  PCICONFIGEP0
PCIEEP0_CFG451                 0x000000000000070C  PCICONFIGEP0
PCIEEP0_CFG452                 0x0000000000000710  PCICONFIGEP0
PCIEEP0_CFG453                 0x0000000000000714  PCICONFIGEP0
PCIEEP0_CFG454                 0x0000000000000718  PCICONFIGEP0
PCIEEP0_CFG455                 0x000000000000071C  PCICONFIGEP0
PCIEEP0_CFG456                 0x0000000000000720  PCICONFIGEP0
PCIEEP0_CFG458                 0x0000000000000728  PCICONFIGEP0
PCIEEP0_CFG459                 0x000000000000072C  PCICONFIGEP0
PCIEEP0_CFG460                 0x0000000000000730  PCICONFIGEP0
PCIEEP0_CFG461                 0x0000000000000734  PCICONFIGEP0
PCIEEP0_CFG462                 0x0000000000000738  PCICONFIGEP0
PCIEEP0_CFG463                 0x000000000000073C  PCICONFIGEP0
PCIEEP0_CFG464                 0x0000000000000740  PCICONFIGEP0
PCIEEP0_CFG465                 0x0000000000000744  PCICONFIGEP0
PCIEEP0_CFG466                 0x0000000000000748  PCICONFIGEP0
PCIEEP0_CFG467                 0x000000000000074C  PCICONFIGEP0
PCIEEP0_CFG468                 0x0000000000000750  PCICONFIGEP0
PCIEEP0_CFG490                 0x00000000000007A8  PCICONFIGEP0
PCIEEP0_CFG491                 0x00000000000007AC  PCICONFIGEP0
PCIEEP0_CFG492                 0x00000000000007B0  PCICONFIGEP0
PCIEEP0_CFG515                 0x000000000000080C  PCICONFIGEP0
PCIEEP0_CFG516                 0x0000000000000810  PCICONFIGEP0
PCIEEP0_CFG517                 0x0000000000000814  PCICONFIGEP0
PCIEEP1_CFG000                 0x0000000000000000  PCICONFIGEP1
PCIEEP1_CFG001                 0x0000000000000004  PCICONFIGEP1
PCIEEP1_CFG002                 0x0000000000000008  PCICONFIGEP1
PCIEEP1_CFG003                 0x000000000000000C  PCICONFIGEP1
PCIEEP1_CFG004                 0x0000000000000010  PCICONFIGEP1
PCIEEP1_CFG004_MASK            0x0000000080000010  PCICONFIGEP1
PCIEEP1_CFG005                 0x0000000000000014  PCICONFIGEP1
PCIEEP1_CFG005_MASK            0x0000000080000014  PCICONFIGEP1
PCIEEP1_CFG006                 0x0000000000000018  PCICONFIGEP1
PCIEEP1_CFG006_MASK            0x0000000080000018  PCICONFIGEP1
PCIEEP1_CFG007                 0x000000000000001C  PCICONFIGEP1
PCIEEP1_CFG007_MASK            0x000000008000001C  PCICONFIGEP1
PCIEEP1_CFG008                 0x0000000000000020  PCICONFIGEP1
PCIEEP1_CFG008_MASK            0x0000000080000020  PCICONFIGEP1
PCIEEP1_CFG009                 0x0000000000000024  PCICONFIGEP1
PCIEEP1_CFG009_MASK            0x0000000080000024  PCICONFIGEP1
PCIEEP1_CFG010                 0x0000000000000028  PCICONFIGEP1
PCIEEP1_CFG011                 0x000000000000002C  PCICONFIGEP1
PCIEEP1_CFG012                 0x0000000000000030  PCICONFIGEP1
PCIEEP1_CFG012_MASK            0x0000000080000030  PCICONFIGEP1
PCIEEP1_CFG013                 0x0000000000000034  PCICONFIGEP1
PCIEEP1_CFG015                 0x000000000000003C  PCICONFIGEP1
PCIEEP1_CFG016                 0x0000000000000040  PCICONFIGEP1
PCIEEP1_CFG017                 0x0000000000000044  PCICONFIGEP1
PCIEEP1_CFG020                 0x0000000000000050  PCICONFIGEP1
PCIEEP1_CFG021                 0x0000000000000054  PCICONFIGEP1
PCIEEP1_CFG022                 0x0000000000000058  PCICONFIGEP1
PCIEEP1_CFG023                 0x000000000000005C  PCICONFIGEP1
PCIEEP1_CFG028                 0x0000000000000070  PCICONFIGEP1
PCIEEP1_CFG029                 0x0000000000000074  PCICONFIGEP1
PCIEEP1_CFG030                 0x0000000000000078  PCICONFIGEP1
PCIEEP1_CFG031                 0x000000000000007C  PCICONFIGEP1
PCIEEP1_CFG032                 0x0000000000000080  PCICONFIGEP1
PCIEEP1_CFG037                 0x0000000000000094  PCICONFIGEP1
PCIEEP1_CFG038                 0x0000000000000098  PCICONFIGEP1
PCIEEP1_CFG039                 0x000000000000009C  PCICONFIGEP1
PCIEEP1_CFG040                 0x00000000000000A0  PCICONFIGEP1
PCIEEP1_CFG064                 0x0000000000000100  PCICONFIGEP1
PCIEEP1_CFG065                 0x0000000000000104  PCICONFIGEP1
PCIEEP1_CFG066                 0x0000000000000108  PCICONFIGEP1
PCIEEP1_CFG067                 0x000000000000010C  PCICONFIGEP1
PCIEEP1_CFG068                 0x0000000000000110  PCICONFIGEP1
PCIEEP1_CFG069                 0x0000000000000114  PCICONFIGEP1
PCIEEP1_CFG070                 0x0000000000000118  PCICONFIGEP1
PCIEEP1_CFG071                 0x000000000000011C  PCICONFIGEP1
PCIEEP1_CFG072                 0x0000000000000120  PCICONFIGEP1
PCIEEP1_CFG073                 0x0000000000000124  PCICONFIGEP1
PCIEEP1_CFG074                 0x0000000000000128  PCICONFIGEP1
PCIEEP1_CFG448                 0x0000000000000700  PCICONFIGEP1
PCIEEP1_CFG449                 0x0000000000000704  PCICONFIGEP1
PCIEEP1_CFG450                 0x0000000000000708  PCICONFIGEP1
PCIEEP1_CFG451                 0x000000000000070C  PCICONFIGEP1
PCIEEP1_CFG452                 0x0000000000000710  PCICONFIGEP1
PCIEEP1_CFG453                 0x0000000000000714  PCICONFIGEP1
PCIEEP1_CFG454                 0x0000000000000718  PCICONFIGEP1
PCIEEP1_CFG455                 0x000000000000071C  PCICONFIGEP1
PCIEEP1_CFG456                 0x0000000000000720  PCICONFIGEP1
PCIEEP1_CFG458                 0x0000000000000728  PCICONFIGEP1
PCIEEP1_CFG459                 0x000000000000072C  PCICONFIGEP1
PCIEEP1_CFG460                 0x0000000000000730  PCICONFIGEP1
PCIEEP1_CFG461                 0x0000000000000734  PCICONFIGEP1
PCIEEP1_CFG462                 0x0000000000000738  PCICONFIGEP1
PCIEEP1_CFG463                 0x000000000000073C  PCICONFIGEP1
PCIEEP1_CFG464                 0x0000000000000740  PCICONFIGEP1
PCIEEP1_CFG465                 0x0000000000000744  PCICONFIGEP1
PCIEEP1_CFG466                 0x0000000000000748  PCICONFIGEP1
PCIEEP1_CFG467                 0x000000000000074C  PCICONFIGEP1
PCIEEP1_CFG468                 0x0000000000000750  PCICONFIGEP1
PCIEEP1_CFG490                 0x00000000000007A8  PCICONFIGEP1
PCIEEP1_CFG491                 0x00000000000007AC  PCICONFIGEP1
PCIEEP1_CFG492                 0x00000000000007B0  PCICONFIGEP1
PCIEEP1_CFG515                 0x000000000000080C  PCICONFIGEP1
PCIEEP1_CFG516                 0x0000000000000810  PCICONFIGEP1
PCIEEP1_CFG517                 0x0000000000000814  PCICONFIGEP1
PCIERC0_CFG000                 0x0000000000000000  PCICONFIGRC0
PCIERC0_CFG001                 0x0000000000000004  PCICONFIGRC0
PCIERC0_CFG002                 0x0000000000000008  PCICONFIGRC0
PCIERC0_CFG003                 0x000000000000000C  PCICONFIGRC0
PCIERC0_CFG004                 0x0000000000000010  PCICONFIGRC0
PCIERC0_CFG005                 0x0000000000000014  PCICONFIGRC0
PCIERC0_CFG006                 0x0000000000000018  PCICONFIGRC0
PCIERC0_CFG007                 0x000000000000001C  PCICONFIGRC0
PCIERC0_CFG008                 0x0000000000000020  PCICONFIGRC0
PCIERC0_CFG009                 0x0000000000000024  PCICONFIGRC0
PCIERC0_CFG010                 0x0000000000000028  PCICONFIGRC0
PCIERC0_CFG011                 0x000000000000002C  PCICONFIGRC0
PCIERC0_CFG012                 0x0000000000000030  PCICONFIGRC0
PCIERC0_CFG013                 0x0000000000000034  PCICONFIGRC0
PCIERC0_CFG014                 0x0000000000000038  PCICONFIGRC0
PCIERC0_CFG015                 0x000000000000003C  PCICONFIGRC0
PCIERC0_CFG016                 0x0000000000000040  PCICONFIGRC0
PCIERC0_CFG017                 0x0000000000000044  PCICONFIGRC0
PCIERC0_CFG020                 0x0000000000000050  PCICONFIGRC0
PCIERC0_CFG021                 0x0000000000000054  PCICONFIGRC0
PCIERC0_CFG022                 0x0000000000000058  PCICONFIGRC0
PCIERC0_CFG023                 0x000000000000005C  PCICONFIGRC0
PCIERC0_CFG028                 0x0000000000000070  PCICONFIGRC0
PCIERC0_CFG029                 0x0000000000000074  PCICONFIGRC0
PCIERC0_CFG030                 0x0000000000000078  PCICONFIGRC0
PCIERC0_CFG031                 0x000000000000007C  PCICONFIGRC0
PCIERC0_CFG032                 0x0000000000000080  PCICONFIGRC0
PCIERC0_CFG033                 0x0000000000000084  PCICONFIGRC0
PCIERC0_CFG034                 0x0000000000000088  PCICONFIGRC0
PCIERC0_CFG035                 0x000000000000008C  PCICONFIGRC0
PCIERC0_CFG036                 0x0000000000000090  PCICONFIGRC0
PCIERC0_CFG037                 0x0000000000000094  PCICONFIGRC0
PCIERC0_CFG038                 0x0000000000000098  PCICONFIGRC0
PCIERC0_CFG039                 0x000000000000009C  PCICONFIGRC0
PCIERC0_CFG040                 0x00000000000000A0  PCICONFIGRC0
PCIERC0_CFG041                 0x00000000000000A4  PCICONFIGRC0
PCIERC0_CFG042                 0x00000000000000A8  PCICONFIGRC0
PCIERC0_CFG064                 0x0000000000000100  PCICONFIGRC0
PCIERC0_CFG065                 0x0000000000000104  PCICONFIGRC0
PCIERC0_CFG066                 0x0000000000000108  PCICONFIGRC0
PCIERC0_CFG067                 0x000000000000010C  PCICONFIGRC0
PCIERC0_CFG068                 0x0000000000000110  PCICONFIGRC0
PCIERC0_CFG069                 0x0000000000000114  PCICONFIGRC0
PCIERC0_CFG070                 0x0000000000000118  PCICONFIGRC0
PCIERC0_CFG071                 0x000000000000011C  PCICONFIGRC0
PCIERC0_CFG072                 0x0000000000000120  PCICONFIGRC0
PCIERC0_CFG073                 0x0000000000000124  PCICONFIGRC0
PCIERC0_CFG074                 0x0000000000000128  PCICONFIGRC0
PCIERC0_CFG075                 0x000000000000012C  PCICONFIGRC0
PCIERC0_CFG076                 0x0000000000000130  PCICONFIGRC0
PCIERC0_CFG077                 0x0000000000000134  PCICONFIGRC0
PCIERC0_CFG448                 0x0000000000000700  PCICONFIGRC0
PCIERC0_CFG449                 0x0000000000000704  PCICONFIGRC0
PCIERC0_CFG450                 0x0000000000000708  PCICONFIGRC0
PCIERC0_CFG451                 0x000000000000070C  PCICONFIGRC0
PCIERC0_CFG452                 0x0000000000000710  PCICONFIGRC0
PCIERC0_CFG453                 0x0000000000000714  PCICONFIGRC0
PCIERC0_CFG454                 0x0000000000000718  PCICONFIGRC0
PCIERC0_CFG455                 0x000000000000071C  PCICONFIGRC0
PCIERC0_CFG456                 0x0000000000000720  PCICONFIGRC0
PCIERC0_CFG458                 0x0000000000000728  PCICONFIGRC0
PCIERC0_CFG459                 0x000000000000072C  PCICONFIGRC0
PCIERC0_CFG460                 0x0000000000000730  PCICONFIGRC0
PCIERC0_CFG461                 0x0000000000000734  PCICONFIGRC0
PCIERC0_CFG462                 0x0000000000000738  PCICONFIGRC0
PCIERC0_CFG463                 0x000000000000073C  PCICONFIGRC0
PCIERC0_CFG464                 0x0000000000000740  PCICONFIGRC0
PCIERC0_CFG465                 0x0000000000000744  PCICONFIGRC0
PCIERC0_CFG466                 0x0000000000000748  PCICONFIGRC0
PCIERC0_CFG467                 0x000000000000074C  PCICONFIGRC0
PCIERC0_CFG468                 0x0000000000000750  PCICONFIGRC0
PCIERC0_CFG490                 0x00000000000007A8  PCICONFIGRC0
PCIERC0_CFG491                 0x00000000000007AC  PCICONFIGRC0
PCIERC0_CFG492                 0x00000000000007B0  PCICONFIGRC0
PCIERC0_CFG515                 0x000000000000080C  PCICONFIGRC0
PCIERC0_CFG516                 0x0000000000000810  PCICONFIGRC0
PCIERC0_CFG517                 0x0000000000000814  PCICONFIGRC0
PCIERC1_CFG000                 0x0000000000000000  PCICONFIGRC1
PCIERC1_CFG001                 0x0000000000000004  PCICONFIGRC1
PCIERC1_CFG002                 0x0000000000000008  PCICONFIGRC1
PCIERC1_CFG003                 0x000000000000000C  PCICONFIGRC1
PCIERC1_CFG004                 0x0000000000000010  PCICONFIGRC1
PCIERC1_CFG005                 0x0000000000000014  PCICONFIGRC1
PCIERC1_CFG006                 0x0000000000000018  PCICONFIGRC1
PCIERC1_CFG007                 0x000000000000001C  PCICONFIGRC1
PCIERC1_CFG008                 0x0000000000000020  PCICONFIGRC1
PCIERC1_CFG009                 0x0000000000000024  PCICONFIGRC1
PCIERC1_CFG010                 0x0000000000000028  PCICONFIGRC1
PCIERC1_CFG011                 0x000000000000002C  PCICONFIGRC1
PCIERC1_CFG012                 0x0000000000000030  PCICONFIGRC1
PCIERC1_CFG013                 0x0000000000000034  PCICONFIGRC1
PCIERC1_CFG014                 0x0000000000000038  PCICONFIGRC1
PCIERC1_CFG015                 0x000000000000003C  PCICONFIGRC1
PCIERC1_CFG016                 0x0000000000000040  PCICONFIGRC1
PCIERC1_CFG017                 0x0000000000000044  PCICONFIGRC1
PCIERC1_CFG020                 0x0000000000000050  PCICONFIGRC1
PCIERC1_CFG021                 0x0000000000000054  PCICONFIGRC1
PCIERC1_CFG022                 0x0000000000000058  PCICONFIGRC1
PCIERC1_CFG023                 0x000000000000005C  PCICONFIGRC1
PCIERC1_CFG028                 0x0000000000000070  PCICONFIGRC1
PCIERC1_CFG029                 0x0000000000000074  PCICONFIGRC1
PCIERC1_CFG030                 0x0000000000000078  PCICONFIGRC1
PCIERC1_CFG031                 0x000000000000007C  PCICONFIGRC1
PCIERC1_CFG032                 0x0000000000000080  PCICONFIGRC1
PCIERC1_CFG033                 0x0000000000000084  PCICONFIGRC1
PCIERC1_CFG034                 0x0000000000000088  PCICONFIGRC1
PCIERC1_CFG035                 0x000000000000008C  PCICONFIGRC1
PCIERC1_CFG036                 0x0000000000000090  PCICONFIGRC1
PCIERC1_CFG037                 0x0000000000000094  PCICONFIGRC1
PCIERC1_CFG038                 0x0000000000000098  PCICONFIGRC1
PCIERC1_CFG039                 0x000000000000009C  PCICONFIGRC1
PCIERC1_CFG040                 0x00000000000000A0  PCICONFIGRC1
PCIERC1_CFG041                 0x00000000000000A4  PCICONFIGRC1
PCIERC1_CFG042                 0x00000000000000A8  PCICONFIGRC1
PCIERC1_CFG064                 0x0000000000000100  PCICONFIGRC1
PCIERC1_CFG065                 0x0000000000000104  PCICONFIGRC1
PCIERC1_CFG066                 0x0000000000000108  PCICONFIGRC1
PCIERC1_CFG067                 0x000000000000010C  PCICONFIGRC1
PCIERC1_CFG068                 0x0000000000000110  PCICONFIGRC1
PCIERC1_CFG069                 0x0000000000000114  PCICONFIGRC1
PCIERC1_CFG070                 0x0000000000000118  PCICONFIGRC1
PCIERC1_CFG071                 0x000000000000011C  PCICONFIGRC1
PCIERC1_CFG072                 0x0000000000000120  PCICONFIGRC1
PCIERC1_CFG073                 0x0000000000000124  PCICONFIGRC1
PCIERC1_CFG074                 0x0000000000000128  PCICONFIGRC1
PCIERC1_CFG075                 0x000000000000012C  PCICONFIGRC1
PCIERC1_CFG076                 0x0000000000000130  PCICONFIGRC1
PCIERC1_CFG077                 0x0000000000000134  PCICONFIGRC1
PCIERC1_CFG448                 0x0000000000000700  PCICONFIGRC1
PCIERC1_CFG449                 0x0000000000000704  PCICONFIGRC1
PCIERC1_CFG450                 0x0000000000000708  PCICONFIGRC1
PCIERC1_CFG451                 0x000000000000070C  PCICONFIGRC1
PCIERC1_CFG452                 0x0000000000000710  PCICONFIGRC1
PCIERC1_CFG453                 0x0000000000000714  PCICONFIGRC1
PCIERC1_CFG454                 0x0000000000000718  PCICONFIGRC1
PCIERC1_CFG455                 0x000000000000071C  PCICONFIGRC1
PCIERC1_CFG456                 0x0000000000000720  PCICONFIGRC1
PCIERC1_CFG458                 0x0000000000000728  PCICONFIGRC1
PCIERC1_CFG459                 0x000000000000072C  PCICONFIGRC1
PCIERC1_CFG460                 0x0000000000000730  PCICONFIGRC1
PCIERC1_CFG461                 0x0000000000000734  PCICONFIGRC1
PCIERC1_CFG462                 0x0000000000000738  PCICONFIGRC1
PCIERC1_CFG463                 0x000000000000073C  PCICONFIGRC1
PCIERC1_CFG464                 0x0000000000000740  PCICONFIGRC1
PCIERC1_CFG465                 0x0000000000000744  PCICONFIGRC1
PCIERC1_CFG466                 0x0000000000000748  PCICONFIGRC1
PCIERC1_CFG467                 0x000000000000074C  PCICONFIGRC1
PCIERC1_CFG468                 0x0000000000000750  PCICONFIGRC1
PCIERC1_CFG490                 0x00000000000007A8  PCICONFIGRC1
PCIERC1_CFG491                 0x00000000000007AC  PCICONFIGRC1
PCIERC1_CFG492                 0x00000000000007B0  PCICONFIGRC1
PCIERC1_CFG515                 0x000000000000080C  PCICONFIGRC1
PCIERC1_CFG516                 0x0000000000000810  PCICONFIGRC1
PCIERC1_CFG517                 0x0000000000000814  PCICONFIGRC1
PCS0_AN000_ADV_REG             0x00011800B0001010  RSL
PCS0_AN000_EXT_ST_REG          0x00011800B0001028  RSL
PCS0_AN000_LP_ABIL_REG         0x00011800B0001018  RSL
PCS0_AN000_RESULTS_REG         0x00011800B0001020  RSL
PCS0_AN001_ADV_REG             0x00011800B0001410  RSL
PCS0_AN001_EXT_ST_REG          0x00011800B0001428  RSL
PCS0_AN001_LP_ABIL_REG         0x00011800B0001418  RSL
PCS0_AN001_RESULTS_REG         0x00011800B0001420  RSL
PCS0_AN002_ADV_REG             0x00011800B0001810  RSL
PCS0_AN002_EXT_ST_REG          0x00011800B0001828  RSL
PCS0_AN002_LP_ABIL_REG         0x00011800B0001818  RSL
PCS0_AN002_RESULTS_REG         0x00011800B0001820  RSL
PCS0_AN003_ADV_REG             0x00011800B0001C10  RSL
PCS0_AN003_EXT_ST_REG          0x00011800B0001C28  RSL
PCS0_AN003_LP_ABIL_REG         0x00011800B0001C18  RSL
PCS0_AN003_RESULTS_REG         0x00011800B0001C20  RSL
PCS0_INT000_EN_REG             0x00011800B0001088  RSL
PCS0_INT000_REG                0x00011800B0001080  RSL
PCS0_INT001_EN_REG             0x00011800B0001488  RSL
PCS0_INT001_REG                0x00011800B0001480  RSL
PCS0_INT002_EN_REG             0x00011800B0001888  RSL
PCS0_INT002_REG                0x00011800B0001880  RSL
PCS0_INT003_EN_REG             0x00011800B0001C88  RSL
PCS0_INT003_REG                0x00011800B0001C80  RSL
PCS0_LINK000_TIMER_COUNT_REG   0x00011800B0001040  RSL
PCS0_LINK001_TIMER_COUNT_REG   0x00011800B0001440  RSL
PCS0_LINK002_TIMER_COUNT_REG   0x00011800B0001840  RSL
PCS0_LINK003_TIMER_COUNT_REG   0x00011800B0001C40  RSL
PCS0_LOG_ANL000_REG            0x00011800B0001090  RSL
PCS0_LOG_ANL001_REG            0x00011800B0001490  RSL
PCS0_LOG_ANL002_REG            0x00011800B0001890  RSL
PCS0_LOG_ANL003_REG            0x00011800B0001C90  RSL
PCS0_MISC000_CTL_REG           0x00011800B0001078  RSL
PCS0_MISC001_CTL_REG           0x00011800B0001478  RSL
PCS0_MISC002_CTL_REG           0x00011800B0001878  RSL
PCS0_MISC003_CTL_REG           0x00011800B0001C78  RSL
PCS0_MR000_CONTROL_REG         0x00011800B0001000  RSL
PCS0_MR000_STATUS_REG          0x00011800B0001008  RSL
PCS0_MR001_CONTROL_REG         0x00011800B0001400  RSL
PCS0_MR001_STATUS_REG          0x00011800B0001408  RSL
PCS0_MR002_CONTROL_REG         0x00011800B0001800  RSL
PCS0_MR002_STATUS_REG          0x00011800B0001808  RSL
PCS0_MR003_CONTROL_REG         0x00011800B0001C00  RSL
PCS0_MR003_STATUS_REG          0x00011800B0001C08  RSL
PCS0_RX000_STATES_REG          0x00011800B0001058  RSL
PCS0_RX000_SYNC_REG            0x00011800B0001050  RSL
PCS0_RX001_STATES_REG          0x00011800B0001458  RSL
PCS0_RX001_SYNC_REG            0x00011800B0001450  RSL
PCS0_RX002_STATES_REG          0x00011800B0001858  RSL
PCS0_RX002_SYNC_REG            0x00011800B0001850  RSL
PCS0_RX003_STATES_REG          0x00011800B0001C58  RSL
PCS0_RX003_SYNC_REG            0x00011800B0001C50  RSL
PCS0_SGM000_AN_ADV_REG         0x00011800B0001068  RSL
PCS0_SGM000_LP_ADV_REG         0x00011800B0001070  RSL
PCS0_SGM001_AN_ADV_REG         0x00011800B0001468  RSL
PCS0_SGM001_LP_ADV_REG         0x00011800B0001470  RSL
PCS0_SGM002_AN_ADV_REG         0x00011800B0001868  RSL
PCS0_SGM002_LP_ADV_REG         0x00011800B0001870  RSL
PCS0_SGM003_AN_ADV_REG         0x00011800B0001C68  RSL
PCS0_SGM003_LP_ADV_REG         0x00011800B0001C70  RSL
PCS0_TX000_STATES_REG          0x00011800B0001060  RSL
PCS0_TX001_STATES_REG          0x00011800B0001460  RSL
PCS0_TX002_STATES_REG          0x00011800B0001860  RSL
PCS0_TX003_STATES_REG          0x00011800B0001C60  RSL
PCS0_TX_RX000_POLARITY_REG     0x00011800B0001048  RSL
PCS0_TX_RX001_POLARITY_REG     0x00011800B0001448  RSL
PCS0_TX_RX002_POLARITY_REG     0x00011800B0001848  RSL
PCS0_TX_RX003_POLARITY_REG     0x00011800B0001C48  RSL
PCS1_AN000_ADV_REG             0x00011800B1001010  RSL
PCS1_AN000_EXT_ST_REG          0x00011800B1001028  RSL
PCS1_AN000_LP_ABIL_REG         0x00011800B1001018  RSL
PCS1_AN000_RESULTS_REG         0x00011800B1001020  RSL
PCS1_AN001_ADV_REG             0x00011800B1001410  RSL
PCS1_AN001_EXT_ST_REG          0x00011800B1001428  RSL
PCS1_AN001_LP_ABIL_REG         0x00011800B1001418  RSL
PCS1_AN001_RESULTS_REG         0x00011800B1001420  RSL
PCS1_AN002_ADV_REG             0x00011800B1001810  RSL
PCS1_AN002_EXT_ST_REG          0x00011800B1001828  RSL
PCS1_AN002_LP_ABIL_REG         0x00011800B1001818  RSL
PCS1_AN002_RESULTS_REG         0x00011800B1001820  RSL
PCS1_AN003_ADV_REG             0x00011800B1001C10  RSL
PCS1_AN003_EXT_ST_REG          0x00011800B1001C28  RSL
PCS1_AN003_LP_ABIL_REG         0x00011800B1001C18  RSL
PCS1_AN003_RESULTS_REG         0x00011800B1001C20  RSL
PCS1_INT000_EN_REG             0x00011800B1001088  RSL
PCS1_INT000_REG                0x00011800B1001080  RSL
PCS1_INT001_EN_REG             0x00011800B1001488  RSL
PCS1_INT001_REG                0x00011800B1001480  RSL
PCS1_INT002_EN_REG             0x00011800B1001888  RSL
PCS1_INT002_REG                0x00011800B1001880  RSL
PCS1_INT003_EN_REG             0x00011800B1001C88  RSL
PCS1_INT003_REG                0x00011800B1001C80  RSL
PCS1_LINK000_TIMER_COUNT_REG   0x00011800B1001040  RSL
PCS1_LINK001_TIMER_COUNT_REG   0x00011800B1001440  RSL
PCS1_LINK002_TIMER_COUNT_REG   0x00011800B1001840  RSL
PCS1_LINK003_TIMER_COUNT_REG   0x00011800B1001C40  RSL
PCS1_LOG_ANL000_REG            0x00011800B1001090  RSL
PCS1_LOG_ANL001_REG            0x00011800B1001490  RSL
PCS1_LOG_ANL002_REG            0x00011800B1001890  RSL
PCS1_LOG_ANL003_REG            0x00011800B1001C90  RSL
PCS1_MISC000_CTL_REG           0x00011800B1001078  RSL
PCS1_MISC001_CTL_REG           0x00011800B1001478  RSL
PCS1_MISC002_CTL_REG           0x00011800B1001878  RSL
PCS1_MISC003_CTL_REG           0x00011800B1001C78  RSL
PCS1_MR000_CONTROL_REG         0x00011800B1001000  RSL
PCS1_MR000_STATUS_REG          0x00011800B1001008  RSL
PCS1_MR001_CONTROL_REG         0x00011800B1001400  RSL
PCS1_MR001_STATUS_REG          0x00011800B1001408  RSL
PCS1_MR002_CONTROL_REG         0x00011800B1001800  RSL
PCS1_MR002_STATUS_REG          0x00011800B1001808  RSL
PCS1_MR003_CONTROL_REG         0x00011800B1001C00  RSL
PCS1_MR003_STATUS_REG          0x00011800B1001C08  RSL
PCS1_RX000_STATES_REG          0x00011800B1001058  RSL
PCS1_RX000_SYNC_REG            0x00011800B1001050  RSL
PCS1_RX001_STATES_REG          0x00011800B1001458  RSL
PCS1_RX001_SYNC_REG            0x00011800B1001450  RSL
PCS1_RX002_STATES_REG          0x00011800B1001858  RSL
PCS1_RX002_SYNC_REG            0x00011800B1001850  RSL
PCS1_RX003_STATES_REG          0x00011800B1001C58  RSL
PCS1_RX003_SYNC_REG            0x00011800B1001C50  RSL
PCS1_SGM000_AN_ADV_REG         0x00011800B1001068  RSL
PCS1_SGM000_LP_ADV_REG         0x00011800B1001070  RSL
PCS1_SGM001_AN_ADV_REG         0x00011800B1001468  RSL
PCS1_SGM001_LP_ADV_REG         0x00011800B1001470  RSL
PCS1_SGM002_AN_ADV_REG         0x00011800B1001868  RSL
PCS1_SGM002_LP_ADV_REG         0x00011800B1001870  RSL
PCS1_SGM003_AN_ADV_REG         0x00011800B1001C68  RSL
PCS1_SGM003_LP_ADV_REG         0x00011800B1001C70  RSL
PCS1_TX000_STATES_REG          0x00011800B1001060  RSL
PCS1_TX001_STATES_REG          0x00011800B1001460  RSL
PCS1_TX002_STATES_REG          0x00011800B1001860  RSL
PCS1_TX003_STATES_REG          0x00011800B1001C60  RSL
PCS1_TX_RX000_POLARITY_REG     0x00011800B1001048  RSL
PCS1_TX_RX001_POLARITY_REG     0x00011800B1001448  RSL
PCS1_TX_RX002_POLARITY_REG     0x00011800B1001848  RSL
PCS1_TX_RX003_POLARITY_REG     0x00011800B1001C48  RSL
PCS2_AN000_ADV_REG             0x00011800B2001010  RSL
PCS2_AN000_EXT_ST_REG          0x00011800B2001028  RSL
PCS2_AN000_LP_ABIL_REG         0x00011800B2001018  RSL
PCS2_AN000_RESULTS_REG         0x00011800B2001020  RSL
PCS2_AN001_ADV_REG             0x00011800B2001410  RSL
PCS2_AN001_EXT_ST_REG          0x00011800B2001428  RSL
PCS2_AN001_LP_ABIL_REG         0x00011800B2001418  RSL
PCS2_AN001_RESULTS_REG         0x00011800B2001420  RSL
PCS2_AN002_ADV_REG             0x00011800B2001810  RSL
PCS2_AN002_EXT_ST_REG          0x00011800B2001828  RSL
PCS2_AN002_LP_ABIL_REG         0x00011800B2001818  RSL
PCS2_AN002_RESULTS_REG         0x00011800B2001820  RSL
PCS2_AN003_ADV_REG             0x00011800B2001C10  RSL
PCS2_AN003_EXT_ST_REG          0x00011800B2001C28  RSL
PCS2_AN003_LP_ABIL_REG         0x00011800B2001C18  RSL
PCS2_AN003_RESULTS_REG         0x00011800B2001C20  RSL
PCS2_INT000_EN_REG             0x00011800B2001088  RSL
PCS2_INT000_REG                0x00011800B2001080  RSL
PCS2_INT001_EN_REG             0x00011800B2001488  RSL
PCS2_INT001_REG                0x00011800B2001480  RSL
PCS2_INT002_EN_REG             0x00011800B2001888  RSL
PCS2_INT002_REG                0x00011800B2001880  RSL
PCS2_INT003_EN_REG             0x00011800B2001C88  RSL
PCS2_INT003_REG                0x00011800B2001C80  RSL
PCS2_LINK000_TIMER_COUNT_REG   0x00011800B2001040  RSL
PCS2_LINK001_TIMER_COUNT_REG   0x00011800B2001440  RSL
PCS2_LINK002_TIMER_COUNT_REG   0x00011800B2001840  RSL
PCS2_LINK003_TIMER_COUNT_REG   0x00011800B2001C40  RSL
PCS2_LOG_ANL000_REG            0x00011800B2001090  RSL
PCS2_LOG_ANL001_REG            0x00011800B2001490  RSL
PCS2_LOG_ANL002_REG            0x00011800B2001890  RSL
PCS2_LOG_ANL003_REG            0x00011800B2001C90  RSL
PCS2_MISC000_CTL_REG           0x00011800B2001078  RSL
PCS2_MISC001_CTL_REG           0x00011800B2001478  RSL
PCS2_MISC002_CTL_REG           0x00011800B2001878  RSL
PCS2_MISC003_CTL_REG           0x00011800B2001C78  RSL
PCS2_MR000_CONTROL_REG         0x00011800B2001000  RSL
PCS2_MR000_STATUS_REG          0x00011800B2001008  RSL
PCS2_MR001_CONTROL_REG         0x00011800B2001400  RSL
PCS2_MR001_STATUS_REG          0x00011800B2001408  RSL
PCS2_MR002_CONTROL_REG         0x00011800B2001800  RSL
PCS2_MR002_STATUS_REG          0x00011800B2001808  RSL
PCS2_MR003_CONTROL_REG         0x00011800B2001C00  RSL
PCS2_MR003_STATUS_REG          0x00011800B2001C08  RSL
PCS2_RX000_STATES_REG          0x00011800B2001058  RSL
PCS2_RX000_SYNC_REG            0x00011800B2001050  RSL
PCS2_RX001_STATES_REG          0x00011800B2001458  RSL
PCS2_RX001_SYNC_REG            0x00011800B2001450  RSL
PCS2_RX002_STATES_REG          0x00011800B2001858  RSL
PCS2_RX002_SYNC_REG            0x00011800B2001850  RSL
PCS2_RX003_STATES_REG          0x00011800B2001C58  RSL
PCS2_RX003_SYNC_REG            0x00011800B2001C50  RSL
PCS2_SGM000_AN_ADV_REG         0x00011800B2001068  RSL
PCS2_SGM000_LP_ADV_REG         0x00011800B2001070  RSL
PCS2_SGM001_AN_ADV_REG         0x00011800B2001468  RSL
PCS2_SGM001_LP_ADV_REG         0x00011800B2001470  RSL
PCS2_SGM002_AN_ADV_REG         0x00011800B2001868  RSL
PCS2_SGM002_LP_ADV_REG         0x00011800B2001870  RSL
PCS2_SGM003_AN_ADV_REG         0x00011800B2001C68  RSL
PCS2_SGM003_LP_ADV_REG         0x00011800B2001C70  RSL
PCS2_TX000_STATES_REG          0x00011800B2001060  RSL
PCS2_TX001_STATES_REG          0x00011800B2001460  RSL
PCS2_TX002_STATES_REG          0x00011800B2001860  RSL
PCS2_TX003_STATES_REG          0x00011800B2001C60  RSL
PCS2_TX_RX000_POLARITY_REG     0x00011800B2001048  RSL
PCS2_TX_RX001_POLARITY_REG     0x00011800B2001448  RSL
PCS2_TX_RX002_POLARITY_REG     0x00011800B2001848  RSL
PCS2_TX_RX003_POLARITY_REG     0x00011800B2001C48  RSL
PCS3_AN000_ADV_REG             0x00011800B3001010  RSL
PCS3_AN000_EXT_ST_REG          0x00011800B3001028  RSL
PCS3_AN000_LP_ABIL_REG         0x00011800B3001018  RSL
PCS3_AN000_RESULTS_REG         0x00011800B3001020  RSL
PCS3_AN001_ADV_REG             0x00011800B3001410  RSL
PCS3_AN001_EXT_ST_REG          0x00011800B3001428  RSL
PCS3_AN001_LP_ABIL_REG         0x00011800B3001418  RSL
PCS3_AN001_RESULTS_REG         0x00011800B3001420  RSL
PCS3_AN002_ADV_REG             0x00011800B3001810  RSL
PCS3_AN002_EXT_ST_REG          0x00011800B3001828  RSL
PCS3_AN002_LP_ABIL_REG         0x00011800B3001818  RSL
PCS3_AN002_RESULTS_REG         0x00011800B3001820  RSL
PCS3_AN003_ADV_REG             0x00011800B3001C10  RSL
PCS3_AN003_EXT_ST_REG          0x00011800B3001C28  RSL
PCS3_AN003_LP_ABIL_REG         0x00011800B3001C18  RSL
PCS3_AN003_RESULTS_REG         0x00011800B3001C20  RSL
PCS3_INT000_EN_REG             0x00011800B3001088  RSL
PCS3_INT000_REG                0x00011800B3001080  RSL
PCS3_INT001_EN_REG             0x00011800B3001488  RSL
PCS3_INT001_REG                0x00011800B3001480  RSL
PCS3_INT002_EN_REG             0x00011800B3001888  RSL
PCS3_INT002_REG                0x00011800B3001880  RSL
PCS3_INT003_EN_REG             0x00011800B3001C88  RSL
PCS3_INT003_REG                0x00011800B3001C80  RSL
PCS3_LINK000_TIMER_COUNT_REG   0x00011800B3001040  RSL
PCS3_LINK001_TIMER_COUNT_REG   0x00011800B3001440  RSL
PCS3_LINK002_TIMER_COUNT_REG   0x00011800B3001840  RSL
PCS3_LINK003_TIMER_COUNT_REG   0x00011800B3001C40  RSL
PCS3_LOG_ANL000_REG            0x00011800B3001090  RSL
PCS3_LOG_ANL001_REG            0x00011800B3001490  RSL
PCS3_LOG_ANL002_REG            0x00011800B3001890  RSL
PCS3_LOG_ANL003_REG            0x00011800B3001C90  RSL
PCS3_MISC000_CTL_REG           0x00011800B3001078  RSL
PCS3_MISC001_CTL_REG           0x00011800B3001478  RSL
PCS3_MISC002_CTL_REG           0x00011800B3001878  RSL
PCS3_MISC003_CTL_REG           0x00011800B3001C78  RSL
PCS3_MR000_CONTROL_REG         0x00011800B3001000  RSL
PCS3_MR000_STATUS_REG          0x00011800B3001008  RSL
PCS3_MR001_CONTROL_REG         0x00011800B3001400  RSL
PCS3_MR001_STATUS_REG          0x00011800B3001408  RSL
PCS3_MR002_CONTROL_REG         0x00011800B3001800  RSL
PCS3_MR002_STATUS_REG          0x00011800B3001808  RSL
PCS3_MR003_CONTROL_REG         0x00011800B3001C00  RSL
PCS3_MR003_STATUS_REG          0x00011800B3001C08  RSL
PCS3_RX000_STATES_REG          0x00011800B3001058  RSL
PCS3_RX000_SYNC_REG            0x00011800B3001050  RSL
PCS3_RX001_STATES_REG          0x00011800B3001458  RSL
PCS3_RX001_SYNC_REG            0x00011800B3001450  RSL
PCS3_RX002_STATES_REG          0x00011800B3001858  RSL
PCS3_RX002_SYNC_REG            0x00011800B3001850  RSL
PCS3_RX003_STATES_REG          0x00011800B3001C58  RSL
PCS3_RX003_SYNC_REG            0x00011800B3001C50  RSL
PCS3_SGM000_AN_ADV_REG         0x00011800B3001068  RSL
PCS3_SGM000_LP_ADV_REG         0x00011800B3001070  RSL
PCS3_SGM001_AN_ADV_REG         0x00011800B3001468  RSL
PCS3_SGM001_LP_ADV_REG         0x00011800B3001470  RSL
PCS3_SGM002_AN_ADV_REG         0x00011800B3001868  RSL
PCS3_SGM002_LP_ADV_REG         0x00011800B3001870  RSL
PCS3_SGM003_AN_ADV_REG         0x00011800B3001C68  RSL
PCS3_SGM003_LP_ADV_REG         0x00011800B3001C70  RSL
PCS3_TX000_STATES_REG          0x00011800B3001060  RSL
PCS3_TX001_STATES_REG          0x00011800B3001460  RSL
PCS3_TX002_STATES_REG          0x00011800B3001860  RSL
PCS3_TX003_STATES_REG          0x00011800B3001C60  RSL
PCS3_TX_RX000_POLARITY_REG     0x00011800B3001048  RSL
PCS3_TX_RX001_POLARITY_REG     0x00011800B3001448  RSL
PCS3_TX_RX002_POLARITY_REG     0x00011800B3001848  RSL
PCS3_TX_RX003_POLARITY_REG     0x00011800B3001C48  RSL
PCS4_AN000_ADV_REG             0x00011800B4001010  RSL
PCS4_AN000_EXT_ST_REG          0x00011800B4001028  RSL
PCS4_AN000_LP_ABIL_REG         0x00011800B4001018  RSL
PCS4_AN000_RESULTS_REG         0x00011800B4001020  RSL
PCS4_AN001_ADV_REG             0x00011800B4001410  RSL
PCS4_AN001_EXT_ST_REG          0x00011800B4001428  RSL
PCS4_AN001_LP_ABIL_REG         0x00011800B4001418  RSL
PCS4_AN001_RESULTS_REG         0x00011800B4001420  RSL
PCS4_AN002_ADV_REG             0x00011800B4001810  RSL
PCS4_AN002_EXT_ST_REG          0x00011800B4001828  RSL
PCS4_AN002_LP_ABIL_REG         0x00011800B4001818  RSL
PCS4_AN002_RESULTS_REG         0x00011800B4001820  RSL
PCS4_AN003_ADV_REG             0x00011800B4001C10  RSL
PCS4_AN003_EXT_ST_REG          0x00011800B4001C28  RSL
PCS4_AN003_LP_ABIL_REG         0x00011800B4001C18  RSL
PCS4_AN003_RESULTS_REG         0x00011800B4001C20  RSL
PCS4_INT000_EN_REG             0x00011800B4001088  RSL
PCS4_INT000_REG                0x00011800B4001080  RSL
PCS4_INT001_EN_REG             0x00011800B4001488  RSL
PCS4_INT001_REG                0x00011800B4001480  RSL
PCS4_INT002_EN_REG             0x00011800B4001888  RSL
PCS4_INT002_REG                0x00011800B4001880  RSL
PCS4_INT003_EN_REG             0x00011800B4001C88  RSL
PCS4_INT003_REG                0x00011800B4001C80  RSL
PCS4_LINK000_TIMER_COUNT_REG   0x00011800B4001040  RSL
PCS4_LINK001_TIMER_COUNT_REG   0x00011800B4001440  RSL
PCS4_LINK002_TIMER_COUNT_REG   0x00011800B4001840  RSL
PCS4_LINK003_TIMER_COUNT_REG   0x00011800B4001C40  RSL
PCS4_LOG_ANL000_REG            0x00011800B4001090  RSL
PCS4_LOG_ANL001_REG            0x00011800B4001490  RSL
PCS4_LOG_ANL002_REG            0x00011800B4001890  RSL
PCS4_LOG_ANL003_REG            0x00011800B4001C90  RSL
PCS4_MISC000_CTL_REG           0x00011800B4001078  RSL
PCS4_MISC001_CTL_REG           0x00011800B4001478  RSL
PCS4_MISC002_CTL_REG           0x00011800B4001878  RSL
PCS4_MISC003_CTL_REG           0x00011800B4001C78  RSL
PCS4_MR000_CONTROL_REG         0x00011800B4001000  RSL
PCS4_MR000_STATUS_REG          0x00011800B4001008  RSL
PCS4_MR001_CONTROL_REG         0x00011800B4001400  RSL
PCS4_MR001_STATUS_REG          0x00011800B4001408  RSL
PCS4_MR002_CONTROL_REG         0x00011800B4001800  RSL
PCS4_MR002_STATUS_REG          0x00011800B4001808  RSL
PCS4_MR003_CONTROL_REG         0x00011800B4001C00  RSL
PCS4_MR003_STATUS_REG          0x00011800B4001C08  RSL
PCS4_RX000_STATES_REG          0x00011800B4001058  RSL
PCS4_RX000_SYNC_REG            0x00011800B4001050  RSL
PCS4_RX001_STATES_REG          0x00011800B4001458  RSL
PCS4_RX001_SYNC_REG            0x00011800B4001450  RSL
PCS4_RX002_STATES_REG          0x00011800B4001858  RSL
PCS4_RX002_SYNC_REG            0x00011800B4001850  RSL
PCS4_RX003_STATES_REG          0x00011800B4001C58  RSL
PCS4_RX003_SYNC_REG            0x00011800B4001C50  RSL
PCS4_SGM000_AN_ADV_REG         0x00011800B4001068  RSL
PCS4_SGM000_LP_ADV_REG         0x00011800B4001070  RSL
PCS4_SGM001_AN_ADV_REG         0x00011800B4001468  RSL
PCS4_SGM001_LP_ADV_REG         0x00011800B4001470  RSL
PCS4_SGM002_AN_ADV_REG         0x00011800B4001868  RSL
PCS4_SGM002_LP_ADV_REG         0x00011800B4001870  RSL
PCS4_SGM003_AN_ADV_REG         0x00011800B4001C68  RSL
PCS4_SGM003_LP_ADV_REG         0x00011800B4001C70  RSL
PCS4_TX000_STATES_REG          0x00011800B4001060  RSL
PCS4_TX001_STATES_REG          0x00011800B4001460  RSL
PCS4_TX002_STATES_REG          0x00011800B4001860  RSL
PCS4_TX003_STATES_REG          0x00011800B4001C60  RSL
PCS4_TX_RX000_POLARITY_REG     0x00011800B4001048  RSL
PCS4_TX_RX001_POLARITY_REG     0x00011800B4001448  RSL
PCS4_TX_RX002_POLARITY_REG     0x00011800B4001848  RSL
PCS4_TX_RX003_POLARITY_REG     0x00011800B4001C48  RSL
PCSX0_10GBX_STATUS_REG         0x00011800B0000828  RSL
PCSX0_BIST_STATUS_REG          0x00011800B0000870  RSL
PCSX0_BIT_LOCK_STATUS_REG      0x00011800B0000850  RSL
PCSX0_CONTROL1_REG             0x00011800B0000800  RSL
PCSX0_CONTROL2_REG             0x00011800B0000818  RSL
PCSX0_INT_EN_REG               0x00011800B0000860  RSL
PCSX0_INT_REG                  0x00011800B0000858  RSL
PCSX0_LOG_ANL_REG              0x00011800B0000868  RSL
PCSX0_MISC_CTL_REG             0x00011800B0000848  RSL
PCSX0_RX_SYNC_STATES_REG       0x00011800B0000838  RSL
PCSX0_SPD_ABIL_REG             0x00011800B0000810  RSL
PCSX0_STATUS1_REG              0x00011800B0000808  RSL
PCSX0_STATUS2_REG              0x00011800B0000820  RSL
PCSX0_TX_RX_POLARITY_REG       0x00011800B0000840  RSL
PCSX0_TX_RX_STATES_REG         0x00011800B0000830  RSL
PCSX1_10GBX_STATUS_REG         0x00011800B1000828  RSL
PCSX1_BIST_STATUS_REG          0x00011800B1000870  RSL
PCSX1_BIT_LOCK_STATUS_REG      0x00011800B1000850  RSL
PCSX1_CONTROL1_REG             0x00011800B1000800  RSL
PCSX1_CONTROL2_REG             0x00011800B1000818  RSL
PCSX1_INT_EN_REG               0x00011800B1000860  RSL
PCSX1_INT_REG                  0x00011800B1000858  RSL
PCSX1_LOG_ANL_REG              0x00011800B1000868  RSL
PCSX1_MISC_CTL_REG             0x00011800B1000848  RSL
PCSX1_RX_SYNC_STATES_REG       0x00011800B1000838  RSL
PCSX1_SPD_ABIL_REG             0x00011800B1000810  RSL
PCSX1_STATUS1_REG              0x00011800B1000808  RSL
PCSX1_STATUS2_REG              0x00011800B1000820  RSL
PCSX1_TX_RX_POLARITY_REG       0x00011800B1000840  RSL
PCSX1_TX_RX_STATES_REG         0x00011800B1000830  RSL
PCSX2_10GBX_STATUS_REG         0x00011800B2000828  RSL
PCSX2_BIST_STATUS_REG          0x00011800B2000870  RSL
PCSX2_BIT_LOCK_STATUS_REG      0x00011800B2000850  RSL
PCSX2_CONTROL1_REG             0x00011800B2000800  RSL
PCSX2_CONTROL2_REG             0x00011800B2000818  RSL
PCSX2_INT_EN_REG               0x00011800B2000860  RSL
PCSX2_INT_REG                  0x00011800B2000858  RSL
PCSX2_LOG_ANL_REG              0x00011800B2000868  RSL
PCSX2_MISC_CTL_REG             0x00011800B2000848  RSL
PCSX2_RX_SYNC_STATES_REG       0x00011800B2000838  RSL
PCSX2_SPD_ABIL_REG             0x00011800B2000810  RSL
PCSX2_STATUS1_REG              0x00011800B2000808  RSL
PCSX2_STATUS2_REG              0x00011800B2000820  RSL
PCSX2_TX_RX_POLARITY_REG       0x00011800B2000840  RSL
PCSX2_TX_RX_STATES_REG         0x00011800B2000830  RSL
PCSX3_10GBX_STATUS_REG         0x00011800B3000828  RSL
PCSX3_BIST_STATUS_REG          0x00011800B3000870  RSL
PCSX3_BIT_LOCK_STATUS_REG      0x00011800B3000850  RSL
PCSX3_CONTROL1_REG             0x00011800B3000800  RSL
PCSX3_CONTROL2_REG             0x00011800B3000818  RSL
PCSX3_INT_EN_REG               0x00011800B3000860  RSL
PCSX3_INT_REG                  0x00011800B3000858  RSL
PCSX3_LOG_ANL_REG              0x00011800B3000868  RSL
PCSX3_MISC_CTL_REG             0x00011800B3000848  RSL
PCSX3_RX_SYNC_STATES_REG       0x00011800B3000838  RSL
PCSX3_SPD_ABIL_REG             0x00011800B3000810  RSL
PCSX3_STATUS1_REG              0x00011800B3000808  RSL
PCSX3_STATUS2_REG              0x00011800B3000820  RSL
PCSX3_TX_RX_POLARITY_REG       0x00011800B3000840  RSL
PCSX3_TX_RX_STATES_REG         0x00011800B3000830  RSL
PCSX4_10GBX_STATUS_REG         0x00011800B4000828  RSL
PCSX4_BIST_STATUS_REG          0x00011800B4000870  RSL
PCSX4_BIT_LOCK_STATUS_REG      0x00011800B4000850  RSL
PCSX4_CONTROL1_REG             0x00011800B4000800  RSL
PCSX4_CONTROL2_REG             0x00011800B4000818  RSL
PCSX4_INT_EN_REG               0x00011800B4000860  RSL
PCSX4_INT_REG                  0x00011800B4000858  RSL
PCSX4_LOG_ANL_REG              0x00011800B4000868  RSL
PCSX4_MISC_CTL_REG             0x00011800B4000848  RSL
PCSX4_RX_SYNC_STATES_REG       0x00011800B4000838  RSL
PCSX4_SPD_ABIL_REG             0x00011800B4000810  RSL
PCSX4_STATUS1_REG              0x00011800B4000808  RSL
PCSX4_STATUS2_REG              0x00011800B4000820  RSL
PCSX4_TX_RX_POLARITY_REG       0x00011800B4000840  RSL
PCSX4_TX_RX_STATES_REG         0x00011800B4000830  RSL
PEM0_BAR1_INDEX000             0x00011800C00000A8  RSL
PEM0_BAR1_INDEX001             0x00011800C00000B0  RSL
PEM0_BAR1_INDEX002             0x00011800C00000B8  RSL
PEM0_BAR1_INDEX003             0x00011800C00000C0  RSL
PEM0_BAR1_INDEX004             0x00011800C00000C8  RSL
PEM0_BAR1_INDEX005             0x00011800C00000D0  RSL
PEM0_BAR1_INDEX006             0x00011800C00000D8  RSL
PEM0_BAR1_INDEX007             0x00011800C00000E0  RSL
PEM0_BAR1_INDEX008             0x00011800C00000E8  RSL
PEM0_BAR1_INDEX009             0x00011800C00000F0  RSL
PEM0_BAR1_INDEX010             0x00011800C00000F8  RSL
PEM0_BAR1_INDEX011             0x00011800C0000100  RSL
PEM0_BAR1_INDEX012             0x00011800C0000108  RSL
PEM0_BAR1_INDEX013             0x00011800C0000110  RSL
PEM0_BAR1_INDEX014             0x00011800C0000118  RSL
PEM0_BAR1_INDEX015             0x00011800C0000120  RSL
PEM0_BAR2_MASK                 0x00011800C0000130  RSL
PEM0_BAR_CTL                   0x00011800C0000128  RSL
PEM0_BIST_STATUS               0x00011800C0000018  RSL
PEM0_BIST_STATUS2              0x00011800C0000420  RSL
PEM0_CFG_RD                    0x00011800C0000030  RSL
PEM0_CFG_WR                    0x00011800C0000028  RSL
PEM0_CPL_LUT_VALID             0x00011800C0000098  RSL
PEM0_CTL_STATUS                0x00011800C0000000  RSL
PEM0_DBG_INFO                  0x00011800C0000008  RSL
PEM0_DBG_INFO_EN               0x00011800C00000A0  RSL
PEM0_DIAG_STATUS               0x00011800C0000020  RSL
PEM0_INT_ENB                   0x00011800C0000410  RSL
PEM0_INT_ENB_INT               0x00011800C0000418  RSL
PEM0_INT_SUM                   0x00011800C0000408  RSL
PEM0_P2N_BAR0_START            0x00011800C0000080  RSL
PEM0_P2N_BAR1_START            0x00011800C0000088  RSL
PEM0_P2N_BAR2_START            0x00011800C0000090  RSL
PEM0_P2P_BAR000_END            0x00011800C0000048  RSL
PEM0_P2P_BAR000_START          0x00011800C0000040  RSL
PEM0_P2P_BAR001_END            0x00011800C0000058  RSL
PEM0_P2P_BAR001_START          0x00011800C0000050  RSL
PEM0_P2P_BAR002_END            0x00011800C0000068  RSL
PEM0_P2P_BAR002_START          0x00011800C0000060  RSL
PEM0_P2P_BAR003_END            0x00011800C0000078  RSL
PEM0_P2P_BAR003_START          0x00011800C0000070  RSL
PEM0_TLP_CREDITS               0x00011800C0000038  RSL
PEM1_BAR1_INDEX000             0x00011800C10000A8  RSL
PEM1_BAR1_INDEX001             0x00011800C10000B0  RSL
PEM1_BAR1_INDEX002             0x00011800C10000B8  RSL
PEM1_BAR1_INDEX003             0x00011800C10000C0  RSL
PEM1_BAR1_INDEX004             0x00011800C10000C8  RSL
PEM1_BAR1_INDEX005             0x00011800C10000D0  RSL
PEM1_BAR1_INDEX006             0x00011800C10000D8  RSL
PEM1_BAR1_INDEX007             0x00011800C10000E0  RSL
PEM1_BAR1_INDEX008             0x00011800C10000E8  RSL
PEM1_BAR1_INDEX009             0x00011800C10000F0  RSL
PEM1_BAR1_INDEX010             0x00011800C10000F8  RSL
PEM1_BAR1_INDEX011             0x00011800C1000100  RSL
PEM1_BAR1_INDEX012             0x00011800C1000108  RSL
PEM1_BAR1_INDEX013             0x00011800C1000110  RSL
PEM1_BAR1_INDEX014             0x00011800C1000118  RSL
PEM1_BAR1_INDEX015             0x00011800C1000120  RSL
PEM1_BAR2_MASK                 0x00011800C1000130  RSL
PEM1_BAR_CTL                   0x00011800C1000128  RSL
PEM1_BIST_STATUS               0x00011800C1000018  RSL
PEM1_BIST_STATUS2              0x00011800C1000420  RSL
PEM1_CFG_RD                    0x00011800C1000030  RSL
PEM1_CFG_WR                    0x00011800C1000028  RSL
PEM1_CPL_LUT_VALID             0x00011800C1000098  RSL
PEM1_CTL_STATUS                0x00011800C1000000  RSL
PEM1_DBG_INFO                  0x00011800C1000008  RSL
PEM1_DBG_INFO_EN               0x00011800C10000A0  RSL
PEM1_DIAG_STATUS               0x00011800C1000020  RSL
PEM1_INT_ENB                   0x00011800C1000410  RSL
PEM1_INT_ENB_INT               0x00011800C1000418  RSL
PEM1_INT_SUM                   0x00011800C1000408  RSL
PEM1_P2N_BAR0_START            0x00011800C1000080  RSL
PEM1_P2N_BAR1_START            0x00011800C1000088  RSL
PEM1_P2N_BAR2_START            0x00011800C1000090  RSL
PEM1_P2P_BAR000_END            0x00011800C1000048  RSL
PEM1_P2P_BAR000_START          0x00011800C1000040  RSL
PEM1_P2P_BAR001_END            0x00011800C1000058  RSL
PEM1_P2P_BAR001_START          0x00011800C1000050  RSL
PEM1_P2P_BAR002_END            0x00011800C1000068  RSL
PEM1_P2P_BAR002_START          0x00011800C1000060  RSL
PEM1_P2P_BAR003_END            0x00011800C1000078  RSL
PEM1_P2P_BAR003_START          0x00011800C1000070  RSL
PEM1_TLP_CREDITS               0x00011800C1000038  RSL
PIP_BCK_PRS                    0x00011800A0000038  RSL
PIP_BIST_STATUS                0x00011800A0000000  RSL
PIP_CLKEN                      0x00011800A0000040  RSL
PIP_DEC_IPSEC0                 0x00011800A0000080  RSL
PIP_DEC_IPSEC1                 0x00011800A0000088  RSL
PIP_DEC_IPSEC2                 0x00011800A0000090  RSL
PIP_DEC_IPSEC3                 0x00011800A0000098  RSL
PIP_DSA_SRC_GRP                0x00011800A0000190  RSL
PIP_DSA_VID_GRP                0x00011800A0000198  RSL
PIP_FRM_LEN_CHK0               0x00011800A0000180  RSL
PIP_FRM_LEN_CHK1               0x00011800A0000188  RSL
PIP_GBL_CFG                    0x00011800A0000028  RSL
PIP_GBL_CTL                    0x00011800A0000020  RSL
PIP_INT_EN                     0x00011800A0000010  RSL
PIP_INT_REG                    0x00011800A0000008  RSL
PIP_IP_OFFSET                  0x00011800A0000060  RSL
PIP_PRI_TBL0                   0x00011800A0004000  RSL
PIP_PRI_TBL1                   0x00011800A0004008  RSL
PIP_PRI_TBL2                   0x00011800A0004010  RSL
PIP_PRI_TBL3                   0x00011800A0004018  RSL
PIP_PRI_TBL4                   0x00011800A0004020  RSL
PIP_PRI_TBL5                   0x00011800A0004028  RSL
PIP_PRI_TBL6                   0x00011800A0004030  RSL
PIP_PRI_TBL7                   0x00011800A0004038  RSL
PIP_PRI_TBL8                   0x00011800A0004040  RSL
PIP_PRI_TBL9                   0x00011800A0004048  RSL
PIP_PRI_TBL10                  0x00011800A0004050  RSL
PIP_PRI_TBL11                  0x00011800A0004058  RSL
PIP_PRI_TBL12                  0x00011800A0004060  RSL
PIP_PRI_TBL13                  0x00011800A0004068  RSL
PIP_PRI_TBL14                  0x00011800A0004070  RSL
PIP_PRI_TBL15                  0x00011800A0004078  RSL
PIP_PRI_TBL16                  0x00011800A0004080  RSL
PIP_PRI_TBL17                  0x00011800A0004088  RSL
PIP_PRI_TBL18                  0x00011800A0004090  RSL
PIP_PRI_TBL19                  0x00011800A0004098  RSL
PIP_PRI_TBL20                  0x00011800A00040A0  RSL
PIP_PRI_TBL21                  0x00011800A00040A8  RSL
PIP_PRI_TBL22                  0x00011800A00040B0  RSL
PIP_PRI_TBL23                  0x00011800A00040B8  RSL
PIP_PRI_TBL24                  0x00011800A00040C0  RSL
PIP_PRI_TBL25                  0x00011800A00040C8  RSL
PIP_PRI_TBL26                  0x00011800A00040D0  RSL
PIP_PRI_TBL27                  0x00011800A00040D8  RSL
PIP_PRI_TBL28                  0x00011800A00040E0  RSL
PIP_PRI_TBL29                  0x00011800A00040E8  RSL
PIP_PRI_TBL30                  0x00011800A00040F0  RSL
PIP_PRI_TBL31                  0x00011800A00040F8  RSL
PIP_PRI_TBL32                  0x00011800A0004100  RSL
PIP_PRI_TBL33                  0x00011800A0004108  RSL
PIP_PRI_TBL34                  0x00011800A0004110  RSL
PIP_PRI_TBL35                  0x00011800A0004118  RSL
PIP_PRI_TBL36                  0x00011800A0004120  RSL
PIP_PRI_TBL37                  0x00011800A0004128  RSL
PIP_PRI_TBL38                  0x00011800A0004130  RSL
PIP_PRI_TBL39                  0x00011800A0004138  RSL
PIP_PRI_TBL40                  0x00011800A0004140  RSL
PIP_PRI_TBL41                  0x00011800A0004148  RSL
PIP_PRI_TBL42                  0x00011800A0004150  RSL
PIP_PRI_TBL43                  0x00011800A0004158  RSL
PIP_PRI_TBL44                  0x00011800A0004160  RSL
PIP_PRI_TBL45                  0x00011800A0004168  RSL
PIP_PRI_TBL46                  0x00011800A0004170  RSL
PIP_PRI_TBL47                  0x00011800A0004178  RSL
PIP_PRI_TBL48                  0x00011800A0004180  RSL
PIP_PRI_TBL49                  0x00011800A0004188  RSL
PIP_PRI_TBL50                  0x00011800A0004190  RSL
PIP_PRI_TBL51                  0x00011800A0004198  RSL
PIP_PRI_TBL52                  0x00011800A00041A0  RSL
PIP_PRI_TBL53                  0x00011800A00041A8  RSL
PIP_PRI_TBL54                  0x00011800A00041B0  RSL
PIP_PRI_TBL55                  0x00011800A00041B8  RSL
PIP_PRI_TBL56                  0x00011800A00041C0  RSL
PIP_PRI_TBL57                  0x00011800A00041C8  RSL
PIP_PRI_TBL58                  0x00011800A00041D0  RSL
PIP_PRI_TBL59                  0x00011800A00041D8  RSL
PIP_PRI_TBL60                  0x00011800A00041E0  RSL
PIP_PRI_TBL61                  0x00011800A00041E8  RSL
PIP_PRI_TBL62                  0x00011800A00041F0  RSL
PIP_PRI_TBL63                  0x00011800A00041F8  RSL
PIP_PRI_TBL64                  0x00011800A0004200  RSL
PIP_PRI_TBL65                  0x00011800A0004208  RSL
PIP_PRI_TBL66                  0x00011800A0004210  RSL
PIP_PRI_TBL67                  0x00011800A0004218  RSL
PIP_PRI_TBL68                  0x00011800A0004220  RSL
PIP_PRI_TBL69                  0x00011800A0004228  RSL
PIP_PRI_TBL70                  0x00011800A0004230  RSL
PIP_PRI_TBL71                  0x00011800A0004238  RSL
PIP_PRI_TBL72                  0x00011800A0004240  RSL
PIP_PRI_TBL73                  0x00011800A0004248  RSL
PIP_PRI_TBL74                  0x00011800A0004250  RSL
PIP_PRI_TBL75                  0x00011800A0004258  RSL
PIP_PRI_TBL76                  0x00011800A0004260  RSL
PIP_PRI_TBL77                  0x00011800A0004268  RSL
PIP_PRI_TBL78                  0x00011800A0004270  RSL
PIP_PRI_TBL79                  0x00011800A0004278  RSL
PIP_PRI_TBL80                  0x00011800A0004280  RSL
PIP_PRI_TBL81                  0x00011800A0004288  RSL
PIP_PRI_TBL82                  0x00011800A0004290  RSL
PIP_PRI_TBL83                  0x00011800A0004298  RSL
PIP_PRI_TBL84                  0x00011800A00042A0  RSL
PIP_PRI_TBL85                  0x00011800A00042A8  RSL
PIP_PRI_TBL86                  0x00011800A00042B0  RSL
PIP_PRI_TBL87                  0x00011800A00042B8  RSL
PIP_PRI_TBL88                  0x00011800A00042C0  RSL
PIP_PRI_TBL89                  0x00011800A00042C8  RSL
PIP_PRI_TBL90                  0x00011800A00042D0  RSL
PIP_PRI_TBL91                  0x00011800A00042D8  RSL
PIP_PRI_TBL92                  0x00011800A00042E0  RSL
PIP_PRI_TBL93                  0x00011800A00042E8  RSL
PIP_PRI_TBL94                  0x00011800A00042F0  RSL
PIP_PRI_TBL95                  0x00011800A00042F8  RSL
PIP_PRI_TBL96                  0x00011800A0004300  RSL
PIP_PRI_TBL97                  0x00011800A0004308  RSL
PIP_PRI_TBL98                  0x00011800A0004310  RSL
PIP_PRI_TBL99                  0x00011800A0004318  RSL
PIP_PRI_TBL100                 0x00011800A0004320  RSL
PIP_PRI_TBL101                 0x00011800A0004328  RSL
PIP_PRI_TBL102                 0x00011800A0004330  RSL
PIP_PRI_TBL103                 0x00011800A0004338  RSL
PIP_PRI_TBL104                 0x00011800A0004340  RSL
PIP_PRI_TBL105                 0x00011800A0004348  RSL
PIP_PRI_TBL106                 0x00011800A0004350  RSL
PIP_PRI_TBL107                 0x00011800A0004358  RSL
PIP_PRI_TBL108                 0x00011800A0004360  RSL
PIP_PRI_TBL109                 0x00011800A0004368  RSL
PIP_PRI_TBL110                 0x00011800A0004370  RSL
PIP_PRI_TBL111                 0x00011800A0004378  RSL
PIP_PRI_TBL112                 0x00011800A0004380  RSL
PIP_PRI_TBL113                 0x00011800A0004388  RSL
PIP_PRI_TBL114                 0x00011800A0004390  RSL
PIP_PRI_TBL115                 0x00011800A0004398  RSL
PIP_PRI_TBL116                 0x00011800A00043A0  RSL
PIP_PRI_TBL117                 0x00011800A00043A8  RSL
PIP_PRI_TBL118                 0x00011800A00043B0  RSL
PIP_PRI_TBL119                 0x00011800A00043B8  RSL
PIP_PRI_TBL120                 0x00011800A00043C0  RSL
PIP_PRI_TBL121                 0x00011800A00043C8  RSL
PIP_PRI_TBL122                 0x00011800A00043D0  RSL
PIP_PRI_TBL123                 0x00011800A00043D8  RSL
PIP_PRI_TBL124                 0x00011800A00043E0  RSL
PIP_PRI_TBL125                 0x00011800A00043E8  RSL
PIP_PRI_TBL126                 0x00011800A00043F0  RSL
PIP_PRI_TBL127                 0x00011800A00043F8  RSL
PIP_PRI_TBL128                 0x00011800A0004400  RSL
PIP_PRI_TBL129                 0x00011800A0004408  RSL
PIP_PRI_TBL130                 0x00011800A0004410  RSL
PIP_PRI_TBL131                 0x00011800A0004418  RSL
PIP_PRI_TBL132                 0x00011800A0004420  RSL
PIP_PRI_TBL133                 0x00011800A0004428  RSL
PIP_PRI_TBL134                 0x00011800A0004430  RSL
PIP_PRI_TBL135                 0x00011800A0004438  RSL
PIP_PRI_TBL136                 0x00011800A0004440  RSL
PIP_PRI_TBL137                 0x00011800A0004448  RSL
PIP_PRI_TBL138                 0x00011800A0004450  RSL
PIP_PRI_TBL139                 0x00011800A0004458  RSL
PIP_PRI_TBL140                 0x00011800A0004460  RSL
PIP_PRI_TBL141                 0x00011800A0004468  RSL
PIP_PRI_TBL142                 0x00011800A0004470  RSL
PIP_PRI_TBL143                 0x00011800A0004478  RSL
PIP_PRI_TBL144                 0x00011800A0004480  RSL
PIP_PRI_TBL145                 0x00011800A0004488  RSL
PIP_PRI_TBL146                 0x00011800A0004490  RSL
PIP_PRI_TBL147                 0x00011800A0004498  RSL
PIP_PRI_TBL148                 0x00011800A00044A0  RSL
PIP_PRI_TBL149                 0x00011800A00044A8  RSL
PIP_PRI_TBL150                 0x00011800A00044B0  RSL
PIP_PRI_TBL151                 0x00011800A00044B8  RSL
PIP_PRI_TBL152                 0x00011800A00044C0  RSL
PIP_PRI_TBL153                 0x00011800A00044C8  RSL
PIP_PRI_TBL154                 0x00011800A00044D0  RSL
PIP_PRI_TBL155                 0x00011800A00044D8  RSL
PIP_PRI_TBL156                 0x00011800A00044E0  RSL
PIP_PRI_TBL157                 0x00011800A00044E8  RSL
PIP_PRI_TBL158                 0x00011800A00044F0  RSL
PIP_PRI_TBL159                 0x00011800A00044F8  RSL
PIP_PRI_TBL160                 0x00011800A0004500  RSL
PIP_PRI_TBL161                 0x00011800A0004508  RSL
PIP_PRI_TBL162                 0x00011800A0004510  RSL
PIP_PRI_TBL163                 0x00011800A0004518  RSL
PIP_PRI_TBL164                 0x00011800A0004520  RSL
PIP_PRI_TBL165                 0x00011800A0004528  RSL
PIP_PRI_TBL166                 0x00011800A0004530  RSL
PIP_PRI_TBL167                 0x00011800A0004538  RSL
PIP_PRI_TBL168                 0x00011800A0004540  RSL
PIP_PRI_TBL169                 0x00011800A0004548  RSL
PIP_PRI_TBL170                 0x00011800A0004550  RSL
PIP_PRI_TBL171                 0x00011800A0004558  RSL
PIP_PRI_TBL172                 0x00011800A0004560  RSL
PIP_PRI_TBL173                 0x00011800A0004568  RSL
PIP_PRI_TBL174                 0x00011800A0004570  RSL
PIP_PRI_TBL175                 0x00011800A0004578  RSL
PIP_PRI_TBL176                 0x00011800A0004580  RSL
PIP_PRI_TBL177                 0x00011800A0004588  RSL
PIP_PRI_TBL178                 0x00011800A0004590  RSL
PIP_PRI_TBL179                 0x00011800A0004598  RSL
PIP_PRI_TBL180                 0x00011800A00045A0  RSL
PIP_PRI_TBL181                 0x00011800A00045A8  RSL
PIP_PRI_TBL182                 0x00011800A00045B0  RSL
PIP_PRI_TBL183                 0x00011800A00045B8  RSL
PIP_PRI_TBL184                 0x00011800A00045C0  RSL
PIP_PRI_TBL185                 0x00011800A00045C8  RSL
PIP_PRI_TBL186                 0x00011800A00045D0  RSL
PIP_PRI_TBL187                 0x00011800A00045D8  RSL
PIP_PRI_TBL188                 0x00011800A00045E0  RSL
PIP_PRI_TBL189                 0x00011800A00045E8  RSL
PIP_PRI_TBL190                 0x00011800A00045F0  RSL
PIP_PRI_TBL191                 0x00011800A00045F8  RSL
PIP_PRI_TBL192                 0x00011800A0004600  RSL
PIP_PRI_TBL193                 0x00011800A0004608  RSL
PIP_PRI_TBL194                 0x00011800A0004610  RSL
PIP_PRI_TBL195                 0x00011800A0004618  RSL
PIP_PRI_TBL196                 0x00011800A0004620  RSL
PIP_PRI_TBL197                 0x00011800A0004628  RSL
PIP_PRI_TBL198                 0x00011800A0004630  RSL
PIP_PRI_TBL199                 0x00011800A0004638  RSL
PIP_PRI_TBL200                 0x00011800A0004640  RSL
PIP_PRI_TBL201                 0x00011800A0004648  RSL
PIP_PRI_TBL202                 0x00011800A0004650  RSL
PIP_PRI_TBL203                 0x00011800A0004658  RSL
PIP_PRI_TBL204                 0x00011800A0004660  RSL
PIP_PRI_TBL205                 0x00011800A0004668  RSL
PIP_PRI_TBL206                 0x00011800A0004670  RSL
PIP_PRI_TBL207                 0x00011800A0004678  RSL
PIP_PRI_TBL208                 0x00011800A0004680  RSL
PIP_PRI_TBL209                 0x00011800A0004688  RSL
PIP_PRI_TBL210                 0x00011800A0004690  RSL
PIP_PRI_TBL211                 0x00011800A0004698  RSL
PIP_PRI_TBL212                 0x00011800A00046A0  RSL
PIP_PRI_TBL213                 0x00011800A00046A8  RSL
PIP_PRI_TBL214                 0x00011800A00046B0  RSL
PIP_PRI_TBL215                 0x00011800A00046B8  RSL
PIP_PRI_TBL216                 0x00011800A00046C0  RSL
PIP_PRI_TBL217                 0x00011800A00046C8  RSL
PIP_PRI_TBL218                 0x00011800A00046D0  RSL
PIP_PRI_TBL219                 0x00011800A00046D8  RSL
PIP_PRI_TBL220                 0x00011800A00046E0  RSL
PIP_PRI_TBL221                 0x00011800A00046E8  RSL
PIP_PRI_TBL222                 0x00011800A00046F0  RSL
PIP_PRI_TBL223                 0x00011800A00046F8  RSL
PIP_PRI_TBL224                 0x00011800A0004700  RSL
PIP_PRI_TBL225                 0x00011800A0004708  RSL
PIP_PRI_TBL226                 0x00011800A0004710  RSL
PIP_PRI_TBL227                 0x00011800A0004718  RSL
PIP_PRI_TBL228                 0x00011800A0004720  RSL
PIP_PRI_TBL229                 0x00011800A0004728  RSL
PIP_PRI_TBL230                 0x00011800A0004730  RSL
PIP_PRI_TBL231                 0x00011800A0004738  RSL
PIP_PRI_TBL232                 0x00011800A0004740  RSL
PIP_PRI_TBL233                 0x00011800A0004748  RSL
PIP_PRI_TBL234                 0x00011800A0004750  RSL
PIP_PRI_TBL235                 0x00011800A0004758  RSL
PIP_PRI_TBL236                 0x00011800A0004760  RSL
PIP_PRI_TBL237                 0x00011800A0004768  RSL
PIP_PRI_TBL238                 0x00011800A0004770  RSL
PIP_PRI_TBL239                 0x00011800A0004778  RSL
PIP_PRI_TBL240                 0x00011800A0004780  RSL
PIP_PRI_TBL241                 0x00011800A0004788  RSL
PIP_PRI_TBL242                 0x00011800A0004790  RSL
PIP_PRI_TBL243                 0x00011800A0004798  RSL
PIP_PRI_TBL244                 0x00011800A00047A0  RSL
PIP_PRI_TBL245                 0x00011800A00047A8  RSL
PIP_PRI_TBL246                 0x00011800A00047B0  RSL
PIP_PRI_TBL247                 0x00011800A00047B8  RSL
PIP_PRI_TBL248                 0x00011800A00047C0  RSL
PIP_PRI_TBL249                 0x00011800A00047C8  RSL
PIP_PRI_TBL250                 0x00011800A00047D0  RSL
PIP_PRI_TBL251                 0x00011800A00047D8  RSL
PIP_PRI_TBL252                 0x00011800A00047E0  RSL
PIP_PRI_TBL253                 0x00011800A00047E8  RSL
PIP_PRI_TBL254                 0x00011800A00047F0  RSL
PIP_PRI_TBL255                 0x00011800A00047F8  RSL
PIP_PRT_CFG0                   0x00011800A0000200  RSL
PIP_PRT_CFG1                   0x00011800A0000208  RSL
PIP_PRT_CFG2                   0x00011800A0000210  RSL
PIP_PRT_CFG3                   0x00011800A0000218  RSL
PIP_PRT_CFG4                   0x00011800A0000220  RSL
PIP_PRT_CFG5                   0x00011800A0000228  RSL
PIP_PRT_CFG6                   0x00011800A0000230  RSL
PIP_PRT_CFG7                   0x00011800A0000238  RSL
PIP_PRT_CFG8                   0x00011800A0000240  RSL
PIP_PRT_CFG9                   0x00011800A0000248  RSL
PIP_PRT_CFG10                  0x00011800A0000250  RSL
PIP_PRT_CFG11                  0x00011800A0000258  RSL
PIP_PRT_CFG12                  0x00011800A0000260  RSL
PIP_PRT_CFG13                  0x00011800A0000268  RSL
PIP_PRT_CFG14                  0x00011800A0000270  RSL
PIP_PRT_CFG15                  0x00011800A0000278  RSL
PIP_PRT_CFG16                  0x00011800A0000280  RSL
PIP_PRT_CFG17                  0x00011800A0000288  RSL
PIP_PRT_CFG18                  0x00011800A0000290  RSL
PIP_PRT_CFG19                  0x00011800A0000298  RSL
PIP_PRT_CFG20                  0x00011800A00002A0  RSL
PIP_PRT_CFG21                  0x00011800A00002A8  RSL
PIP_PRT_CFG22                  0x00011800A00002B0  RSL
PIP_PRT_CFG23                  0x00011800A00002B8  RSL
PIP_PRT_CFG24                  0x00011800A00002C0  RSL
PIP_PRT_CFG25                  0x00011800A00002C8  RSL
PIP_PRT_CFG26                  0x00011800A00002D0  RSL
PIP_PRT_CFG27                  0x00011800A00002D8  RSL
PIP_PRT_CFG28                  0x00011800A00002E0  RSL
PIP_PRT_CFG29                  0x00011800A00002E8  RSL
PIP_PRT_CFG30                  0x00011800A00002F0  RSL
PIP_PRT_CFG31                  0x00011800A00002F8  RSL
PIP_PRT_CFG32                  0x00011800A0000300  RSL
PIP_PRT_CFG33                  0x00011800A0000308  RSL
PIP_PRT_CFG34                  0x00011800A0000310  RSL
PIP_PRT_CFG35                  0x00011800A0000318  RSL
PIP_PRT_CFG36                  0x00011800A0000320  RSL
PIP_PRT_CFG37                  0x00011800A0000328  RSL
PIP_PRT_CFG38                  0x00011800A0000330  RSL
PIP_PRT_CFG39                  0x00011800A0000338  RSL
PIP_PRT_CFG40                  0x00011800A0000340  RSL
PIP_PRT_CFG41                  0x00011800A0000348  RSL
PIP_PRT_CFG42                  0x00011800A0000350  RSL
PIP_PRT_CFG43                  0x00011800A0000358  RSL
PIP_PRT_CFG44                  0x00011800A0000360  RSL
PIP_PRT_CFG45                  0x00011800A0000368  RSL
PIP_PRT_CFG46                  0x00011800A0000370  RSL
PIP_PRT_CFG47                  0x00011800A0000378  RSL
PIP_PRT_CFG48                  0x00011800A0000380  RSL
PIP_PRT_CFG49                  0x00011800A0000388  RSL
PIP_PRT_CFG50                  0x00011800A0000390  RSL
PIP_PRT_CFG51                  0x00011800A0000398  RSL
PIP_PRT_CFG52                  0x00011800A00003A0  RSL
PIP_PRT_CFG53                  0x00011800A00003A8  RSL
PIP_PRT_CFG54                  0x00011800A00003B0  RSL
PIP_PRT_CFG55                  0x00011800A00003B8  RSL
PIP_PRT_CFG56                  0x00011800A00003C0  RSL
PIP_PRT_CFG57                  0x00011800A00003C8  RSL
PIP_PRT_CFG58                  0x00011800A00003D0  RSL
PIP_PRT_CFG59                  0x00011800A00003D8  RSL
PIP_PRT_CFG60                  0x00011800A00003E0  RSL
PIP_PRT_CFG61                  0x00011800A00003E8  RSL
PIP_PRT_CFG62                  0x00011800A00003F0  RSL
PIP_PRT_CFG63                  0x00011800A00003F8  RSL
PIP_PRT_CFGB0                  0x00011800A0008000  RSL
PIP_PRT_CFGB1                  0x00011800A0008008  RSL
PIP_PRT_CFGB2                  0x00011800A0008010  RSL
PIP_PRT_CFGB3                  0x00011800A0008018  RSL
PIP_PRT_CFGB4                  0x00011800A0008020  RSL
PIP_PRT_CFGB5                  0x00011800A0008028  RSL
PIP_PRT_CFGB6                  0x00011800A0008030  RSL
PIP_PRT_CFGB7                  0x00011800A0008038  RSL
PIP_PRT_CFGB8                  0x00011800A0008040  RSL
PIP_PRT_CFGB9                  0x00011800A0008048  RSL
PIP_PRT_CFGB10                 0x00011800A0008050  RSL
PIP_PRT_CFGB11                 0x00011800A0008058  RSL
PIP_PRT_CFGB12                 0x00011800A0008060  RSL
PIP_PRT_CFGB13                 0x00011800A0008068  RSL
PIP_PRT_CFGB14                 0x00011800A0008070  RSL
PIP_PRT_CFGB15                 0x00011800A0008078  RSL
PIP_PRT_CFGB16                 0x00011800A0008080  RSL
PIP_PRT_CFGB17                 0x00011800A0008088  RSL
PIP_PRT_CFGB18                 0x00011800A0008090  RSL
PIP_PRT_CFGB19                 0x00011800A0008098  RSL
PIP_PRT_CFGB20                 0x00011800A00080A0  RSL
PIP_PRT_CFGB21                 0x00011800A00080A8  RSL
PIP_PRT_CFGB22                 0x00011800A00080B0  RSL
PIP_PRT_CFGB23                 0x00011800A00080B8  RSL
PIP_PRT_CFGB24                 0x00011800A00080C0  RSL
PIP_PRT_CFGB25                 0x00011800A00080C8  RSL
PIP_PRT_CFGB26                 0x00011800A00080D0  RSL
PIP_PRT_CFGB27                 0x00011800A00080D8  RSL
PIP_PRT_CFGB28                 0x00011800A00080E0  RSL
PIP_PRT_CFGB29                 0x00011800A00080E8  RSL
PIP_PRT_CFGB30                 0x00011800A00080F0  RSL
PIP_PRT_CFGB31                 0x00011800A00080F8  RSL
PIP_PRT_CFGB32                 0x00011800A0008100  RSL
PIP_PRT_CFGB33                 0x00011800A0008108  RSL
PIP_PRT_CFGB34                 0x00011800A0008110  RSL
PIP_PRT_CFGB35                 0x00011800A0008118  RSL
PIP_PRT_CFGB36                 0x00011800A0008120  RSL
PIP_PRT_CFGB37                 0x00011800A0008128  RSL
PIP_PRT_CFGB38                 0x00011800A0008130  RSL
PIP_PRT_CFGB39                 0x00011800A0008138  RSL
PIP_PRT_CFGB40                 0x00011800A0008140  RSL
PIP_PRT_CFGB41                 0x00011800A0008148  RSL
PIP_PRT_CFGB42                 0x00011800A0008150  RSL
PIP_PRT_CFGB43                 0x00011800A0008158  RSL
PIP_PRT_CFGB44                 0x00011800A0008160  RSL
PIP_PRT_CFGB45                 0x00011800A0008168  RSL
PIP_PRT_CFGB46                 0x00011800A0008170  RSL
PIP_PRT_CFGB47                 0x00011800A0008178  RSL
PIP_PRT_CFGB48                 0x00011800A0008180  RSL
PIP_PRT_CFGB49                 0x00011800A0008188  RSL
PIP_PRT_CFGB50                 0x00011800A0008190  RSL
PIP_PRT_CFGB51                 0x00011800A0008198  RSL
PIP_PRT_CFGB52                 0x00011800A00081A0  RSL
PIP_PRT_CFGB53                 0x00011800A00081A8  RSL
PIP_PRT_CFGB54                 0x00011800A00081B0  RSL
PIP_PRT_CFGB55                 0x00011800A00081B8  RSL
PIP_PRT_CFGB56                 0x00011800A00081C0  RSL
PIP_PRT_CFGB57                 0x00011800A00081C8  RSL
PIP_PRT_CFGB58                 0x00011800A00081D0  RSL
PIP_PRT_CFGB59                 0x00011800A00081D8  RSL
PIP_PRT_CFGB60                 0x00011800A00081E0  RSL
PIP_PRT_CFGB61                 0x00011800A00081E8  RSL
PIP_PRT_CFGB62                 0x00011800A00081F0  RSL
PIP_PRT_CFGB63                 0x00011800A00081F8  RSL
PIP_PRT_TAG0                   0x00011800A0000400  RSL
PIP_PRT_TAG1                   0x00011800A0000408  RSL
PIP_PRT_TAG2                   0x00011800A0000410  RSL
PIP_PRT_TAG3                   0x00011800A0000418  RSL
PIP_PRT_TAG4                   0x00011800A0000420  RSL
PIP_PRT_TAG5                   0x00011800A0000428  RSL
PIP_PRT_TAG6                   0x00011800A0000430  RSL
PIP_PRT_TAG7                   0x00011800A0000438  RSL
PIP_PRT_TAG8                   0x00011800A0000440  RSL
PIP_PRT_TAG9                   0x00011800A0000448  RSL
PIP_PRT_TAG10                  0x00011800A0000450  RSL
PIP_PRT_TAG11                  0x00011800A0000458  RSL
PIP_PRT_TAG12                  0x00011800A0000460  RSL
PIP_PRT_TAG13                  0x00011800A0000468  RSL
PIP_PRT_TAG14                  0x00011800A0000470  RSL
PIP_PRT_TAG15                  0x00011800A0000478  RSL
PIP_PRT_TAG16                  0x00011800A0000480  RSL
PIP_PRT_TAG17                  0x00011800A0000488  RSL
PIP_PRT_TAG18                  0x00011800A0000490  RSL
PIP_PRT_TAG19                  0x00011800A0000498  RSL
PIP_PRT_TAG20                  0x00011800A00004A0  RSL
PIP_PRT_TAG21                  0x00011800A00004A8  RSL
PIP_PRT_TAG22                  0x00011800A00004B0  RSL
PIP_PRT_TAG23                  0x00011800A00004B8  RSL
PIP_PRT_TAG24                  0x00011800A00004C0  RSL
PIP_PRT_TAG25                  0x00011800A00004C8  RSL
PIP_PRT_TAG26                  0x00011800A00004D0  RSL
PIP_PRT_TAG27                  0x00011800A00004D8  RSL
PIP_PRT_TAG28                  0x00011800A00004E0  RSL
PIP_PRT_TAG29                  0x00011800A00004E8  RSL
PIP_PRT_TAG30                  0x00011800A00004F0  RSL
PIP_PRT_TAG31                  0x00011800A00004F8  RSL
PIP_PRT_TAG32                  0x00011800A0000500  RSL
PIP_PRT_TAG33                  0x00011800A0000508  RSL
PIP_PRT_TAG34                  0x00011800A0000510  RSL
PIP_PRT_TAG35                  0x00011800A0000518  RSL
PIP_PRT_TAG36                  0x00011800A0000520  RSL
PIP_PRT_TAG37                  0x00011800A0000528  RSL
PIP_PRT_TAG38                  0x00011800A0000530  RSL
PIP_PRT_TAG39                  0x00011800A0000538  RSL
PIP_PRT_TAG40                  0x00011800A0000540  RSL
PIP_PRT_TAG41                  0x00011800A0000548  RSL
PIP_PRT_TAG42                  0x00011800A0000550  RSL
PIP_PRT_TAG43                  0x00011800A0000558  RSL
PIP_PRT_TAG44                  0x00011800A0000560  RSL
PIP_PRT_TAG45                  0x00011800A0000568  RSL
PIP_PRT_TAG46                  0x00011800A0000570  RSL
PIP_PRT_TAG47                  0x00011800A0000578  RSL
PIP_PRT_TAG48                  0x00011800A0000580  RSL
PIP_PRT_TAG49                  0x00011800A0000588  RSL
PIP_PRT_TAG50                  0x00011800A0000590  RSL
PIP_PRT_TAG51                  0x00011800A0000598  RSL
PIP_PRT_TAG52                  0x00011800A00005A0  RSL
PIP_PRT_TAG53                  0x00011800A00005A8  RSL
PIP_PRT_TAG54                  0x00011800A00005B0  RSL
PIP_PRT_TAG55                  0x00011800A00005B8  RSL
PIP_PRT_TAG56                  0x00011800A00005C0  RSL
PIP_PRT_TAG57                  0x00011800A00005C8  RSL
PIP_PRT_TAG58                  0x00011800A00005D0  RSL
PIP_PRT_TAG59                  0x00011800A00005D8  RSL
PIP_PRT_TAG60                  0x00011800A00005E0  RSL
PIP_PRT_TAG61                  0x00011800A00005E8  RSL
PIP_PRT_TAG62                  0x00011800A00005F0  RSL
PIP_PRT_TAG63                  0x00011800A00005F8  RSL
PIP_QOS_WATCH0                 0x00011800A0000100  RSL
PIP_QOS_WATCH1                 0x00011800A0000108  RSL
PIP_QOS_WATCH2                 0x00011800A0000110  RSL
PIP_QOS_WATCH3                 0x00011800A0000118  RSL
PIP_QOS_WATCH4                 0x00011800A0000120  RSL
PIP_QOS_WATCH5                 0x00011800A0000128  RSL
PIP_QOS_WATCH6                 0x00011800A0000130  RSL
PIP_QOS_WATCH7                 0x00011800A0000138  RSL
PIP_RAW_WORD                   0x00011800A00000B0  RSL
PIP_SFT_RST                    0x00011800A0000030  RSL
PIP_STAT0_0                    0x00011800A0040000  RSL
PIP_STAT0_1                    0x00011800A0040080  RSL
PIP_STAT0_2                    0x00011800A0040100  RSL
PIP_STAT0_3                    0x00011800A0040180  RSL
PIP_STAT0_4                    0x00011800A0040200  RSL
PIP_STAT0_5                    0x00011800A0040280  RSL
PIP_STAT0_6                    0x00011800A0040300  RSL
PIP_STAT0_7                    0x00011800A0040380  RSL
PIP_STAT0_8                    0x00011800A0040400  RSL
PIP_STAT0_9                    0x00011800A0040480  RSL
PIP_STAT0_10                   0x00011800A0040500  RSL
PIP_STAT0_11                   0x00011800A0040580  RSL
PIP_STAT0_12                   0x00011800A0040600  RSL
PIP_STAT0_13                   0x00011800A0040680  RSL
PIP_STAT0_14                   0x00011800A0040700  RSL
PIP_STAT0_15                   0x00011800A0040780  RSL
PIP_STAT0_16                   0x00011800A0040800  RSL
PIP_STAT0_17                   0x00011800A0040880  RSL
PIP_STAT0_18                   0x00011800A0040900  RSL
PIP_STAT0_19                   0x00011800A0040980  RSL
PIP_STAT0_20                   0x00011800A0040A00  RSL
PIP_STAT0_21                   0x00011800A0040A80  RSL
PIP_STAT0_22                   0x00011800A0040B00  RSL
PIP_STAT0_23                   0x00011800A0040B80  RSL
PIP_STAT0_24                   0x00011800A0040C00  RSL
PIP_STAT0_25                   0x00011800A0040C80  RSL
PIP_STAT0_26                   0x00011800A0040D00  RSL
PIP_STAT0_27                   0x00011800A0040D80  RSL
PIP_STAT0_28                   0x00011800A0040E00  RSL
PIP_STAT0_29                   0x00011800A0040E80  RSL
PIP_STAT0_30                   0x00011800A0040F00  RSL
PIP_STAT0_31                   0x00011800A0040F80  RSL
PIP_STAT0_32                   0x00011800A0041000  RSL
PIP_STAT0_33                   0x00011800A0041080  RSL
PIP_STAT0_34                   0x00011800A0041100  RSL
PIP_STAT0_35                   0x00011800A0041180  RSL
PIP_STAT0_36                   0x00011800A0041200  RSL
PIP_STAT0_37                   0x00011800A0041280  RSL
PIP_STAT0_38                   0x00011800A0041300  RSL
PIP_STAT0_39                   0x00011800A0041380  RSL
PIP_STAT0_40                   0x00011800A0041400  RSL
PIP_STAT0_41                   0x00011800A0041480  RSL
PIP_STAT0_42                   0x00011800A0041500  RSL
PIP_STAT0_43                   0x00011800A0041580  RSL
PIP_STAT0_44                   0x00011800A0041600  RSL
PIP_STAT0_45                   0x00011800A0041680  RSL
PIP_STAT0_46                   0x00011800A0041700  RSL
PIP_STAT0_47                   0x00011800A0041780  RSL
PIP_STAT0_48                   0x00011800A0041800  RSL
PIP_STAT0_49                   0x00011800A0041880  RSL
PIP_STAT0_50                   0x00011800A0041900  RSL
PIP_STAT0_51                   0x00011800A0041980  RSL
PIP_STAT0_52                   0x00011800A0041A00  RSL
PIP_STAT0_53                   0x00011800A0041A80  RSL
PIP_STAT0_54                   0x00011800A0041B00  RSL
PIP_STAT0_55                   0x00011800A0041B80  RSL
PIP_STAT0_56                   0x00011800A0041C00  RSL
PIP_STAT0_57                   0x00011800A0041C80  RSL
PIP_STAT0_58                   0x00011800A0041D00  RSL
PIP_STAT0_59                   0x00011800A0041D80  RSL
PIP_STAT0_60                   0x00011800A0041E00  RSL
PIP_STAT0_61                   0x00011800A0041E80  RSL
PIP_STAT0_62                   0x00011800A0041F00  RSL
PIP_STAT0_63                   0x00011800A0041F80  RSL
PIP_STAT1_0                    0x00011800A0040008  RSL
PIP_STAT1_1                    0x00011800A0040088  RSL
PIP_STAT1_2                    0x00011800A0040108  RSL
PIP_STAT1_3                    0x00011800A0040188  RSL
PIP_STAT1_4                    0x00011800A0040208  RSL
PIP_STAT1_5                    0x00011800A0040288  RSL
PIP_STAT1_6                    0x00011800A0040308  RSL
PIP_STAT1_7                    0x00011800A0040388  RSL
PIP_STAT1_8                    0x00011800A0040408  RSL
PIP_STAT1_9                    0x00011800A0040488  RSL
PIP_STAT1_10                   0x00011800A0040508  RSL
PIP_STAT1_11                   0x00011800A0040588  RSL
PIP_STAT1_12                   0x00011800A0040608  RSL
PIP_STAT1_13                   0x00011800A0040688  RSL
PIP_STAT1_14                   0x00011800A0040708  RSL
PIP_STAT1_15                   0x00011800A0040788  RSL
PIP_STAT1_16                   0x00011800A0040808  RSL
PIP_STAT1_17                   0x00011800A0040888  RSL
PIP_STAT1_18                   0x00011800A0040908  RSL
PIP_STAT1_19                   0x00011800A0040988  RSL
PIP_STAT1_20                   0x00011800A0040A08  RSL
PIP_STAT1_21                   0x00011800A0040A88  RSL
PIP_STAT1_22                   0x00011800A0040B08  RSL
PIP_STAT1_23                   0x00011800A0040B88  RSL
PIP_STAT1_24                   0x00011800A0040C08  RSL
PIP_STAT1_25                   0x00011800A0040C88  RSL
PIP_STAT1_26                   0x00011800A0040D08  RSL
PIP_STAT1_27                   0x00011800A0040D88  RSL
PIP_STAT1_28                   0x00011800A0040E08  RSL
PIP_STAT1_29                   0x00011800A0040E88  RSL
PIP_STAT1_30                   0x00011800A0040F08  RSL
PIP_STAT1_31                   0x00011800A0040F88  RSL
PIP_STAT1_32                   0x00011800A0041008  RSL
PIP_STAT1_33                   0x00011800A0041088  RSL
PIP_STAT1_34                   0x00011800A0041108  RSL
PIP_STAT1_35                   0x00011800A0041188  RSL
PIP_STAT1_36                   0x00011800A0041208  RSL
PIP_STAT1_37                   0x00011800A0041288  RSL
PIP_STAT1_38                   0x00011800A0041308  RSL
PIP_STAT1_39                   0x00011800A0041388  RSL
PIP_STAT1_40                   0x00011800A0041408  RSL
PIP_STAT1_41                   0x00011800A0041488  RSL
PIP_STAT1_42                   0x00011800A0041508  RSL
PIP_STAT1_43                   0x00011800A0041588  RSL
PIP_STAT1_44                   0x00011800A0041608  RSL
PIP_STAT1_45                   0x00011800A0041688  RSL
PIP_STAT1_46                   0x00011800A0041708  RSL
PIP_STAT1_47                   0x00011800A0041788  RSL
PIP_STAT1_48                   0x00011800A0041808  RSL
PIP_STAT1_49                   0x00011800A0041888  RSL
PIP_STAT1_50                   0x00011800A0041908  RSL
PIP_STAT1_51                   0x00011800A0041988  RSL
PIP_STAT1_52                   0x00011800A0041A08  RSL
PIP_STAT1_53                   0x00011800A0041A88  RSL
PIP_STAT1_54                   0x00011800A0041B08  RSL
PIP_STAT1_55                   0x00011800A0041B88  RSL
PIP_STAT1_56                   0x00011800A0041C08  RSL
PIP_STAT1_57                   0x00011800A0041C88  RSL
PIP_STAT1_58                   0x00011800A0041D08  RSL
PIP_STAT1_59                   0x00011800A0041D88  RSL
PIP_STAT1_60                   0x00011800A0041E08  RSL
PIP_STAT1_61                   0x00011800A0041E88  RSL
PIP_STAT1_62                   0x00011800A0041F08  RSL
PIP_STAT1_63                   0x00011800A0041F88  RSL
PIP_STAT2_0                    0x00011800A0040010  RSL
PIP_STAT2_1                    0x00011800A0040090  RSL
PIP_STAT2_2                    0x00011800A0040110  RSL
PIP_STAT2_3                    0x00011800A0040190  RSL
PIP_STAT2_4                    0x00011800A0040210  RSL
PIP_STAT2_5                    0x00011800A0040290  RSL
PIP_STAT2_6                    0x00011800A0040310  RSL
PIP_STAT2_7                    0x00011800A0040390  RSL
PIP_STAT2_8                    0x00011800A0040410  RSL
PIP_STAT2_9                    0x00011800A0040490  RSL
PIP_STAT2_10                   0x00011800A0040510  RSL
PIP_STAT2_11                   0x00011800A0040590  RSL
PIP_STAT2_12                   0x00011800A0040610  RSL
PIP_STAT2_13                   0x00011800A0040690  RSL
PIP_STAT2_14                   0x00011800A0040710  RSL
PIP_STAT2_15                   0x00011800A0040790  RSL
PIP_STAT2_16                   0x00011800A0040810  RSL
PIP_STAT2_17                   0x00011800A0040890  RSL
PIP_STAT2_18                   0x00011800A0040910  RSL
PIP_STAT2_19                   0x00011800A0040990  RSL
PIP_STAT2_20                   0x00011800A0040A10  RSL
PIP_STAT2_21                   0x00011800A0040A90  RSL
PIP_STAT2_22                   0x00011800A0040B10  RSL
PIP_STAT2_23                   0x00011800A0040B90  RSL
PIP_STAT2_24                   0x00011800A0040C10  RSL
PIP_STAT2_25                   0x00011800A0040C90  RSL
PIP_STAT2_26                   0x00011800A0040D10  RSL
PIP_STAT2_27                   0x00011800A0040D90  RSL
PIP_STAT2_28                   0x00011800A0040E10  RSL
PIP_STAT2_29                   0x00011800A0040E90  RSL
PIP_STAT2_30                   0x00011800A0040F10  RSL
PIP_STAT2_31                   0x00011800A0040F90  RSL
PIP_STAT2_32                   0x00011800A0041010  RSL
PIP_STAT2_33                   0x00011800A0041090  RSL
PIP_STAT2_34                   0x00011800A0041110  RSL
PIP_STAT2_35                   0x00011800A0041190  RSL
PIP_STAT2_36                   0x00011800A0041210  RSL
PIP_STAT2_37                   0x00011800A0041290  RSL
PIP_STAT2_38                   0x00011800A0041310  RSL
PIP_STAT2_39                   0x00011800A0041390  RSL
PIP_STAT2_40                   0x00011800A0041410  RSL
PIP_STAT2_41                   0x00011800A0041490  RSL
PIP_STAT2_42                   0x00011800A0041510  RSL
PIP_STAT2_43                   0x00011800A0041590  RSL
PIP_STAT2_44                   0x00011800A0041610  RSL
PIP_STAT2_45                   0x00011800A0041690  RSL
PIP_STAT2_46                   0x00011800A0041710  RSL
PIP_STAT2_47                   0x00011800A0041790  RSL
PIP_STAT2_48                   0x00011800A0041810  RSL
PIP_STAT2_49                   0x00011800A0041890  RSL
PIP_STAT2_50                   0x00011800A0041910  RSL
PIP_STAT2_51                   0x00011800A0041990  RSL
PIP_STAT2_52                   0x00011800A0041A10  RSL
PIP_STAT2_53                   0x00011800A0041A90  RSL
PIP_STAT2_54                   0x00011800A0041B10  RSL
PIP_STAT2_55                   0x00011800A0041B90  RSL
PIP_STAT2_56                   0x00011800A0041C10  RSL
PIP_STAT2_57                   0x00011800A0041C90  RSL
PIP_STAT2_58                   0x00011800A0041D10  RSL
PIP_STAT2_59                   0x00011800A0041D90  RSL
PIP_STAT2_60                   0x00011800A0041E10  RSL
PIP_STAT2_61                   0x00011800A0041E90  RSL
PIP_STAT2_62                   0x00011800A0041F10  RSL
PIP_STAT2_63                   0x00011800A0041F90  RSL
PIP_STAT3_0                    0x00011800A0040018  RSL
PIP_STAT3_1                    0x00011800A0040098  RSL
PIP_STAT3_2                    0x00011800A0040118  RSL
PIP_STAT3_3                    0x00011800A0040198  RSL
PIP_STAT3_4                    0x00011800A0040218  RSL
PIP_STAT3_5                    0x00011800A0040298  RSL
PIP_STAT3_6                    0x00011800A0040318  RSL
PIP_STAT3_7                    0x00011800A0040398  RSL
PIP_STAT3_8                    0x00011800A0040418  RSL
PIP_STAT3_9                    0x00011800A0040498  RSL
PIP_STAT3_10                   0x00011800A0040518  RSL
PIP_STAT3_11                   0x00011800A0040598  RSL
PIP_STAT3_12                   0x00011800A0040618  RSL
PIP_STAT3_13                   0x00011800A0040698  RSL
PIP_STAT3_14                   0x00011800A0040718  RSL
PIP_STAT3_15                   0x00011800A0040798  RSL
PIP_STAT3_16                   0x00011800A0040818  RSL
PIP_STAT3_17                   0x00011800A0040898  RSL
PIP_STAT3_18                   0x00011800A0040918  RSL
PIP_STAT3_19                   0x00011800A0040998  RSL
PIP_STAT3_20                   0x00011800A0040A18  RSL
PIP_STAT3_21                   0x00011800A0040A98  RSL
PIP_STAT3_22                   0x00011800A0040B18  RSL
PIP_STAT3_23                   0x00011800A0040B98  RSL
PIP_STAT3_24                   0x00011800A0040C18  RSL
PIP_STAT3_25                   0x00011800A0040C98  RSL
PIP_STAT3_26                   0x00011800A0040D18  RSL
PIP_STAT3_27                   0x00011800A0040D98  RSL
PIP_STAT3_28                   0x00011800A0040E18  RSL
PIP_STAT3_29                   0x00011800A0040E98  RSL
PIP_STAT3_30                   0x00011800A0040F18  RSL
PIP_STAT3_31                   0x00011800A0040F98  RSL
PIP_STAT3_32                   0x00011800A0041018  RSL
PIP_STAT3_33                   0x00011800A0041098  RSL
PIP_STAT3_34                   0x00011800A0041118  RSL
PIP_STAT3_35                   0x00011800A0041198  RSL
PIP_STAT3_36                   0x00011800A0041218  RSL
PIP_STAT3_37                   0x00011800A0041298  RSL
PIP_STAT3_38                   0x00011800A0041318  RSL
PIP_STAT3_39                   0x00011800A0041398  RSL
PIP_STAT3_40                   0x00011800A0041418  RSL
PIP_STAT3_41                   0x00011800A0041498  RSL
PIP_STAT3_42                   0x00011800A0041518  RSL
PIP_STAT3_43                   0x00011800A0041598  RSL
PIP_STAT3_44                   0x00011800A0041618  RSL
PIP_STAT3_45                   0x00011800A0041698  RSL
PIP_STAT3_46                   0x00011800A0041718  RSL
PIP_STAT3_47                   0x00011800A0041798  RSL
PIP_STAT3_48                   0x00011800A0041818  RSL
PIP_STAT3_49                   0x00011800A0041898  RSL
PIP_STAT3_50                   0x00011800A0041918  RSL
PIP_STAT3_51                   0x00011800A0041998  RSL
PIP_STAT3_52                   0x00011800A0041A18  RSL
PIP_STAT3_53                   0x00011800A0041A98  RSL
PIP_STAT3_54                   0x00011800A0041B18  RSL
PIP_STAT3_55                   0x00011800A0041B98  RSL
PIP_STAT3_56                   0x00011800A0041C18  RSL
PIP_STAT3_57                   0x00011800A0041C98  RSL
PIP_STAT3_58                   0x00011800A0041D18  RSL
PIP_STAT3_59                   0x00011800A0041D98  RSL
PIP_STAT3_60                   0x00011800A0041E18  RSL
PIP_STAT3_61                   0x00011800A0041E98  RSL
PIP_STAT3_62                   0x00011800A0041F18  RSL
PIP_STAT3_63                   0x00011800A0041F98  RSL
PIP_STAT4_0                    0x00011800A0040020  RSL
PIP_STAT4_1                    0x00011800A00400A0  RSL
PIP_STAT4_2                    0x00011800A0040120  RSL
PIP_STAT4_3                    0x00011800A00401A0  RSL
PIP_STAT4_4                    0x00011800A0040220  RSL
PIP_STAT4_5                    0x00011800A00402A0  RSL
PIP_STAT4_6                    0x00011800A0040320  RSL
PIP_STAT4_7                    0x00011800A00403A0  RSL
PIP_STAT4_8                    0x00011800A0040420  RSL
PIP_STAT4_9                    0x00011800A00404A0  RSL
PIP_STAT4_10                   0x00011800A0040520  RSL
PIP_STAT4_11                   0x00011800A00405A0  RSL
PIP_STAT4_12                   0x00011800A0040620  RSL
PIP_STAT4_13                   0x00011800A00406A0  RSL
PIP_STAT4_14                   0x00011800A0040720  RSL
PIP_STAT4_15                   0x00011800A00407A0  RSL
PIP_STAT4_16                   0x00011800A0040820  RSL
PIP_STAT4_17                   0x00011800A00408A0  RSL
PIP_STAT4_18                   0x00011800A0040920  RSL
PIP_STAT4_19                   0x00011800A00409A0  RSL
PIP_STAT4_20                   0x00011800A0040A20  RSL
PIP_STAT4_21                   0x00011800A0040AA0  RSL
PIP_STAT4_22                   0x00011800A0040B20  RSL
PIP_STAT4_23                   0x00011800A0040BA0  RSL
PIP_STAT4_24                   0x00011800A0040C20  RSL
PIP_STAT4_25                   0x00011800A0040CA0  RSL
PIP_STAT4_26                   0x00011800A0040D20  RSL
PIP_STAT4_27                   0x00011800A0040DA0  RSL
PIP_STAT4_28                   0x00011800A0040E20  RSL
PIP_STAT4_29                   0x00011800A0040EA0  RSL
PIP_STAT4_30                   0x00011800A0040F20  RSL
PIP_STAT4_31                   0x00011800A0040FA0  RSL
PIP_STAT4_32                   0x00011800A0041020  RSL
PIP_STAT4_33                   0x00011800A00410A0  RSL
PIP_STAT4_34                   0x00011800A0041120  RSL
PIP_STAT4_35                   0x00011800A00411A0  RSL
PIP_STAT4_36                   0x00011800A0041220  RSL
PIP_STAT4_37                   0x00011800A00412A0  RSL
PIP_STAT4_38                   0x00011800A0041320  RSL
PIP_STAT4_39                   0x00011800A00413A0  RSL
PIP_STAT4_40                   0x00011800A0041420  RSL
PIP_STAT4_41                   0x00011800A00414A0  RSL
PIP_STAT4_42                   0x00011800A0041520  RSL
PIP_STAT4_43                   0x00011800A00415A0  RSL
PIP_STAT4_44                   0x00011800A0041620  RSL
PIP_STAT4_45                   0x00011800A00416A0  RSL
PIP_STAT4_46                   0x00011800A0041720  RSL
PIP_STAT4_47                   0x00011800A00417A0  RSL
PIP_STAT4_48                   0x00011800A0041820  RSL
PIP_STAT4_49                   0x00011800A00418A0  RSL
PIP_STAT4_50                   0x00011800A0041920  RSL
PIP_STAT4_51                   0x00011800A00419A0  RSL
PIP_STAT4_52                   0x00011800A0041A20  RSL
PIP_STAT4_53                   0x00011800A0041AA0  RSL
PIP_STAT4_54                   0x00011800A0041B20  RSL
PIP_STAT4_55                   0x00011800A0041BA0  RSL
PIP_STAT4_56                   0x00011800A0041C20  RSL
PIP_STAT4_57                   0x00011800A0041CA0  RSL
PIP_STAT4_58                   0x00011800A0041D20  RSL
PIP_STAT4_59                   0x00011800A0041DA0  RSL
PIP_STAT4_60                   0x00011800A0041E20  RSL
PIP_STAT4_61                   0x00011800A0041EA0  RSL
PIP_STAT4_62                   0x00011800A0041F20  RSL
PIP_STAT4_63                   0x00011800A0041FA0  RSL
PIP_STAT5_0                    0x00011800A0040028  RSL
PIP_STAT5_1                    0x00011800A00400A8  RSL
PIP_STAT5_2                    0x00011800A0040128  RSL
PIP_STAT5_3                    0x00011800A00401A8  RSL
PIP_STAT5_4                    0x00011800A0040228  RSL
PIP_STAT5_5                    0x00011800A00402A8  RSL
PIP_STAT5_6                    0x00011800A0040328  RSL
PIP_STAT5_7                    0x00011800A00403A8  RSL
PIP_STAT5_8                    0x00011800A0040428  RSL
PIP_STAT5_9                    0x00011800A00404A8  RSL
PIP_STAT5_10                   0x00011800A0040528  RSL
PIP_STAT5_11                   0x00011800A00405A8  RSL
PIP_STAT5_12                   0x00011800A0040628  RSL
PIP_STAT5_13                   0x00011800A00406A8  RSL
PIP_STAT5_14                   0x00011800A0040728  RSL
PIP_STAT5_15                   0x00011800A00407A8  RSL
PIP_STAT5_16                   0x00011800A0040828  RSL
PIP_STAT5_17                   0x00011800A00408A8  RSL
PIP_STAT5_18                   0x00011800A0040928  RSL
PIP_STAT5_19                   0x00011800A00409A8  RSL
PIP_STAT5_20                   0x00011800A0040A28  RSL
PIP_STAT5_21                   0x00011800A0040AA8  RSL
PIP_STAT5_22                   0x00011800A0040B28  RSL
PIP_STAT5_23                   0x00011800A0040BA8  RSL
PIP_STAT5_24                   0x00011800A0040C28  RSL
PIP_STAT5_25                   0x00011800A0040CA8  RSL
PIP_STAT5_26                   0x00011800A0040D28  RSL
PIP_STAT5_27                   0x00011800A0040DA8  RSL
PIP_STAT5_28                   0x00011800A0040E28  RSL
PIP_STAT5_29                   0x00011800A0040EA8  RSL
PIP_STAT5_30                   0x00011800A0040F28  RSL
PIP_STAT5_31                   0x00011800A0040FA8  RSL
PIP_STAT5_32                   0x00011800A0041028  RSL
PIP_STAT5_33                   0x00011800A00410A8  RSL
PIP_STAT5_34                   0x00011800A0041128  RSL
PIP_STAT5_35                   0x00011800A00411A8  RSL
PIP_STAT5_36                   0x00011800A0041228  RSL
PIP_STAT5_37                   0x00011800A00412A8  RSL
PIP_STAT5_38                   0x00011800A0041328  RSL
PIP_STAT5_39                   0x00011800A00413A8  RSL
PIP_STAT5_40                   0x00011800A0041428  RSL
PIP_STAT5_41                   0x00011800A00414A8  RSL
PIP_STAT5_42                   0x00011800A0041528  RSL
PIP_STAT5_43                   0x00011800A00415A8  RSL
PIP_STAT5_44                   0x00011800A0041628  RSL
PIP_STAT5_45                   0x00011800A00416A8  RSL
PIP_STAT5_46                   0x00011800A0041728  RSL
PIP_STAT5_47                   0x00011800A00417A8  RSL
PIP_STAT5_48                   0x00011800A0041828  RSL
PIP_STAT5_49                   0x00011800A00418A8  RSL
PIP_STAT5_50                   0x00011800A0041928  RSL
PIP_STAT5_51                   0x00011800A00419A8  RSL
PIP_STAT5_52                   0x00011800A0041A28  RSL
PIP_STAT5_53                   0x00011800A0041AA8  RSL
PIP_STAT5_54                   0x00011800A0041B28  RSL
PIP_STAT5_55                   0x00011800A0041BA8  RSL
PIP_STAT5_56                   0x00011800A0041C28  RSL
PIP_STAT5_57                   0x00011800A0041CA8  RSL
PIP_STAT5_58                   0x00011800A0041D28  RSL
PIP_STAT5_59                   0x00011800A0041DA8  RSL
PIP_STAT5_60                   0x00011800A0041E28  RSL
PIP_STAT5_61                   0x00011800A0041EA8  RSL
PIP_STAT5_62                   0x00011800A0041F28  RSL
PIP_STAT5_63                   0x00011800A0041FA8  RSL
PIP_STAT6_0                    0x00011800A0040030  RSL
PIP_STAT6_1                    0x00011800A00400B0  RSL
PIP_STAT6_2                    0x00011800A0040130  RSL
PIP_STAT6_3                    0x00011800A00401B0  RSL
PIP_STAT6_4                    0x00011800A0040230  RSL
PIP_STAT6_5                    0x00011800A00402B0  RSL
PIP_STAT6_6                    0x00011800A0040330  RSL
PIP_STAT6_7                    0x00011800A00403B0  RSL
PIP_STAT6_8                    0x00011800A0040430  RSL
PIP_STAT6_9                    0x00011800A00404B0  RSL
PIP_STAT6_10                   0x00011800A0040530  RSL
PIP_STAT6_11                   0x00011800A00405B0  RSL
PIP_STAT6_12                   0x00011800A0040630  RSL
PIP_STAT6_13                   0x00011800A00406B0  RSL
PIP_STAT6_14                   0x00011800A0040730  RSL
PIP_STAT6_15                   0x00011800A00407B0  RSL
PIP_STAT6_16                   0x00011800A0040830  RSL
PIP_STAT6_17                   0x00011800A00408B0  RSL
PIP_STAT6_18                   0x00011800A0040930  RSL
PIP_STAT6_19                   0x00011800A00409B0  RSL
PIP_STAT6_20                   0x00011800A0040A30  RSL
PIP_STAT6_21                   0x00011800A0040AB0  RSL
PIP_STAT6_22                   0x00011800A0040B30  RSL
PIP_STAT6_23                   0x00011800A0040BB0  RSL
PIP_STAT6_24                   0x00011800A0040C30  RSL
PIP_STAT6_25                   0x00011800A0040CB0  RSL
PIP_STAT6_26                   0x00011800A0040D30  RSL
PIP_STAT6_27                   0x00011800A0040DB0  RSL
PIP_STAT6_28                   0x00011800A0040E30  RSL
PIP_STAT6_29                   0x00011800A0040EB0  RSL
PIP_STAT6_30                   0x00011800A0040F30  RSL
PIP_STAT6_31                   0x00011800A0040FB0  RSL
PIP_STAT6_32                   0x00011800A0041030  RSL
PIP_STAT6_33                   0x00011800A00410B0  RSL
PIP_STAT6_34                   0x00011800A0041130  RSL
PIP_STAT6_35                   0x00011800A00411B0  RSL
PIP_STAT6_36                   0x00011800A0041230  RSL
PIP_STAT6_37                   0x00011800A00412B0  RSL
PIP_STAT6_38                   0x00011800A0041330  RSL
PIP_STAT6_39                   0x00011800A00413B0  RSL
PIP_STAT6_40                   0x00011800A0041430  RSL
PIP_STAT6_41                   0x00011800A00414B0  RSL
PIP_STAT6_42                   0x00011800A0041530  RSL
PIP_STAT6_43                   0x00011800A00415B0  RSL
PIP_STAT6_44                   0x00011800A0041630  RSL
PIP_STAT6_45                   0x00011800A00416B0  RSL
PIP_STAT6_46                   0x00011800A0041730  RSL
PIP_STAT6_47                   0x00011800A00417B0  RSL
PIP_STAT6_48                   0x00011800A0041830  RSL
PIP_STAT6_49                   0x00011800A00418B0  RSL
PIP_STAT6_50                   0x00011800A0041930  RSL
PIP_STAT6_51                   0x00011800A00419B0  RSL
PIP_STAT6_52                   0x00011800A0041A30  RSL
PIP_STAT6_53                   0x00011800A0041AB0  RSL
PIP_STAT6_54                   0x00011800A0041B30  RSL
PIP_STAT6_55                   0x00011800A0041BB0  RSL
PIP_STAT6_56                   0x00011800A0041C30  RSL
PIP_STAT6_57                   0x00011800A0041CB0  RSL
PIP_STAT6_58                   0x00011800A0041D30  RSL
PIP_STAT6_59                   0x00011800A0041DB0  RSL
PIP_STAT6_60                   0x00011800A0041E30  RSL
PIP_STAT6_61                   0x00011800A0041EB0  RSL
PIP_STAT6_62                   0x00011800A0041F30  RSL
PIP_STAT6_63                   0x00011800A0041FB0  RSL
PIP_STAT7_0                    0x00011800A0040038  RSL
PIP_STAT7_1                    0x00011800A00400B8  RSL
PIP_STAT7_2                    0x00011800A0040138  RSL
PIP_STAT7_3                    0x00011800A00401B8  RSL
PIP_STAT7_4                    0x00011800A0040238  RSL
PIP_STAT7_5                    0x00011800A00402B8  RSL
PIP_STAT7_6                    0x00011800A0040338  RSL
PIP_STAT7_7                    0x00011800A00403B8  RSL
PIP_STAT7_8                    0x00011800A0040438  RSL
PIP_STAT7_9                    0x00011800A00404B8  RSL
PIP_STAT7_10                   0x00011800A0040538  RSL
PIP_STAT7_11                   0x00011800A00405B8  RSL
PIP_STAT7_12                   0x00011800A0040638  RSL
PIP_STAT7_13                   0x00011800A00406B8  RSL
PIP_STAT7_14                   0x00011800A0040738  RSL
PIP_STAT7_15                   0x00011800A00407B8  RSL
PIP_STAT7_16                   0x00011800A0040838  RSL
PIP_STAT7_17                   0x00011800A00408B8  RSL
PIP_STAT7_18                   0x00011800A0040938  RSL
PIP_STAT7_19                   0x00011800A00409B8  RSL
PIP_STAT7_20                   0x00011800A0040A38  RSL
PIP_STAT7_21                   0x00011800A0040AB8  RSL
PIP_STAT7_22                   0x00011800A0040B38  RSL
PIP_STAT7_23                   0x00011800A0040BB8  RSL
PIP_STAT7_24                   0x00011800A0040C38  RSL
PIP_STAT7_25                   0x00011800A0040CB8  RSL
PIP_STAT7_26                   0x00011800A0040D38  RSL
PIP_STAT7_27                   0x00011800A0040DB8  RSL
PIP_STAT7_28                   0x00011800A0040E38  RSL
PIP_STAT7_29                   0x00011800A0040EB8  RSL
PIP_STAT7_30                   0x00011800A0040F38  RSL
PIP_STAT7_31                   0x00011800A0040FB8  RSL
PIP_STAT7_32                   0x00011800A0041038  RSL
PIP_STAT7_33                   0x00011800A00410B8  RSL
PIP_STAT7_34                   0x00011800A0041138  RSL
PIP_STAT7_35                   0x00011800A00411B8  RSL
PIP_STAT7_36                   0x00011800A0041238  RSL
PIP_STAT7_37                   0x00011800A00412B8  RSL
PIP_STAT7_38                   0x00011800A0041338  RSL
PIP_STAT7_39                   0x00011800A00413B8  RSL
PIP_STAT7_40                   0x00011800A0041438  RSL
PIP_STAT7_41                   0x00011800A00414B8  RSL
PIP_STAT7_42                   0x00011800A0041538  RSL
PIP_STAT7_43                   0x00011800A00415B8  RSL
PIP_STAT7_44                   0x00011800A0041638  RSL
PIP_STAT7_45                   0x00011800A00416B8  RSL
PIP_STAT7_46                   0x00011800A0041738  RSL
PIP_STAT7_47                   0x00011800A00417B8  RSL
PIP_STAT7_48                   0x00011800A0041838  RSL
PIP_STAT7_49                   0x00011800A00418B8  RSL
PIP_STAT7_50                   0x00011800A0041938  RSL
PIP_STAT7_51                   0x00011800A00419B8  RSL
PIP_STAT7_52                   0x00011800A0041A38  RSL
PIP_STAT7_53                   0x00011800A0041AB8  RSL
PIP_STAT7_54                   0x00011800A0041B38  RSL
PIP_STAT7_55                   0x00011800A0041BB8  RSL
PIP_STAT7_56                   0x00011800A0041C38  RSL
PIP_STAT7_57                   0x00011800A0041CB8  RSL
PIP_STAT7_58                   0x00011800A0041D38  RSL
PIP_STAT7_59                   0x00011800A0041DB8  RSL
PIP_STAT7_60                   0x00011800A0041E38  RSL
PIP_STAT7_61                   0x00011800A0041EB8  RSL
PIP_STAT7_62                   0x00011800A0041F38  RSL
PIP_STAT7_63                   0x00011800A0041FB8  RSL
PIP_STAT8_0                    0x00011800A0040040  RSL
PIP_STAT8_1                    0x00011800A00400C0  RSL
PIP_STAT8_2                    0x00011800A0040140  RSL
PIP_STAT8_3                    0x00011800A00401C0  RSL
PIP_STAT8_4                    0x00011800A0040240  RSL
PIP_STAT8_5                    0x00011800A00402C0  RSL
PIP_STAT8_6                    0x00011800A0040340  RSL
PIP_STAT8_7                    0x00011800A00403C0  RSL
PIP_STAT8_8                    0x00011800A0040440  RSL
PIP_STAT8_9                    0x00011800A00404C0  RSL
PIP_STAT8_10                   0x00011800A0040540  RSL
PIP_STAT8_11                   0x00011800A00405C0  RSL
PIP_STAT8_12                   0x00011800A0040640  RSL
PIP_STAT8_13                   0x00011800A00406C0  RSL
PIP_STAT8_14                   0x00011800A0040740  RSL
PIP_STAT8_15                   0x00011800A00407C0  RSL
PIP_STAT8_16                   0x00011800A0040840  RSL
PIP_STAT8_17                   0x00011800A00408C0  RSL
PIP_STAT8_18                   0x00011800A0040940  RSL
PIP_STAT8_19                   0x00011800A00409C0  RSL
PIP_STAT8_20                   0x00011800A0040A40  RSL
PIP_STAT8_21                   0x00011800A0040AC0  RSL
PIP_STAT8_22                   0x00011800A0040B40  RSL
PIP_STAT8_23                   0x00011800A0040BC0  RSL
PIP_STAT8_24                   0x00011800A0040C40  RSL
PIP_STAT8_25                   0x00011800A0040CC0  RSL
PIP_STAT8_26                   0x00011800A0040D40  RSL
PIP_STAT8_27                   0x00011800A0040DC0  RSL
PIP_STAT8_28                   0x00011800A0040E40  RSL
PIP_STAT8_29                   0x00011800A0040EC0  RSL
PIP_STAT8_30                   0x00011800A0040F40  RSL
PIP_STAT8_31                   0x00011800A0040FC0  RSL
PIP_STAT8_32                   0x00011800A0041040  RSL
PIP_STAT8_33                   0x00011800A00410C0  RSL
PIP_STAT8_34                   0x00011800A0041140  RSL
PIP_STAT8_35                   0x00011800A00411C0  RSL
PIP_STAT8_36                   0x00011800A0041240  RSL
PIP_STAT8_37                   0x00011800A00412C0  RSL
PIP_STAT8_38                   0x00011800A0041340  RSL
PIP_STAT8_39                   0x00011800A00413C0  RSL
PIP_STAT8_40                   0x00011800A0041440  RSL
PIP_STAT8_41                   0x00011800A00414C0  RSL
PIP_STAT8_42                   0x00011800A0041540  RSL
PIP_STAT8_43                   0x00011800A00415C0  RSL
PIP_STAT8_44                   0x00011800A0041640  RSL
PIP_STAT8_45                   0x00011800A00416C0  RSL
PIP_STAT8_46                   0x00011800A0041740  RSL
PIP_STAT8_47                   0x00011800A00417C0  RSL
PIP_STAT8_48                   0x00011800A0041840  RSL
PIP_STAT8_49                   0x00011800A00418C0  RSL
PIP_STAT8_50                   0x00011800A0041940  RSL
PIP_STAT8_51                   0x00011800A00419C0  RSL
PIP_STAT8_52                   0x00011800A0041A40  RSL
PIP_STAT8_53                   0x00011800A0041AC0  RSL
PIP_STAT8_54                   0x00011800A0041B40  RSL
PIP_STAT8_55                   0x00011800A0041BC0  RSL
PIP_STAT8_56                   0x00011800A0041C40  RSL
PIP_STAT8_57                   0x00011800A0041CC0  RSL
PIP_STAT8_58                   0x00011800A0041D40  RSL
PIP_STAT8_59                   0x00011800A0041DC0  RSL
PIP_STAT8_60                   0x00011800A0041E40  RSL
PIP_STAT8_61                   0x00011800A0041EC0  RSL
PIP_STAT8_62                   0x00011800A0041F40  RSL
PIP_STAT8_63                   0x00011800A0041FC0  RSL
PIP_STAT9_0                    0x00011800A0040048  RSL
PIP_STAT9_1                    0x00011800A00400C8  RSL
PIP_STAT9_2                    0x00011800A0040148  RSL
PIP_STAT9_3                    0x00011800A00401C8  RSL
PIP_STAT9_4                    0x00011800A0040248  RSL
PIP_STAT9_5                    0x00011800A00402C8  RSL
PIP_STAT9_6                    0x00011800A0040348  RSL
PIP_STAT9_7                    0x00011800A00403C8  RSL
PIP_STAT9_8                    0x00011800A0040448  RSL
PIP_STAT9_9                    0x00011800A00404C8  RSL
PIP_STAT9_10                   0x00011800A0040548  RSL
PIP_STAT9_11                   0x00011800A00405C8  RSL
PIP_STAT9_12                   0x00011800A0040648  RSL
PIP_STAT9_13                   0x00011800A00406C8  RSL
PIP_STAT9_14                   0x00011800A0040748  RSL
PIP_STAT9_15                   0x00011800A00407C8  RSL
PIP_STAT9_16                   0x00011800A0040848  RSL
PIP_STAT9_17                   0x00011800A00408C8  RSL
PIP_STAT9_18                   0x00011800A0040948  RSL
PIP_STAT9_19                   0x00011800A00409C8  RSL
PIP_STAT9_20                   0x00011800A0040A48  RSL
PIP_STAT9_21                   0x00011800A0040AC8  RSL
PIP_STAT9_22                   0x00011800A0040B48  RSL
PIP_STAT9_23                   0x00011800A0040BC8  RSL
PIP_STAT9_24                   0x00011800A0040C48  RSL
PIP_STAT9_25                   0x00011800A0040CC8  RSL
PIP_STAT9_26                   0x00011800A0040D48  RSL
PIP_STAT9_27                   0x00011800A0040DC8  RSL
PIP_STAT9_28                   0x00011800A0040E48  RSL
PIP_STAT9_29                   0x00011800A0040EC8  RSL
PIP_STAT9_30                   0x00011800A0040F48  RSL
PIP_STAT9_31                   0x00011800A0040FC8  RSL
PIP_STAT9_32                   0x00011800A0041048  RSL
PIP_STAT9_33                   0x00011800A00410C8  RSL
PIP_STAT9_34                   0x00011800A0041148  RSL
PIP_STAT9_35                   0x00011800A00411C8  RSL
PIP_STAT9_36                   0x00011800A0041248  RSL
PIP_STAT9_37                   0x00011800A00412C8  RSL
PIP_STAT9_38                   0x00011800A0041348  RSL
PIP_STAT9_39                   0x00011800A00413C8  RSL
PIP_STAT9_40                   0x00011800A0041448  RSL
PIP_STAT9_41                   0x00011800A00414C8  RSL
PIP_STAT9_42                   0x00011800A0041548  RSL
PIP_STAT9_43                   0x00011800A00415C8  RSL
PIP_STAT9_44                   0x00011800A0041648  RSL
PIP_STAT9_45                   0x00011800A00416C8  RSL
PIP_STAT9_46                   0x00011800A0041748  RSL
PIP_STAT9_47                   0x00011800A00417C8  RSL
PIP_STAT9_48                   0x00011800A0041848  RSL
PIP_STAT9_49                   0x00011800A00418C8  RSL
PIP_STAT9_50                   0x00011800A0041948  RSL
PIP_STAT9_51                   0x00011800A00419C8  RSL
PIP_STAT9_52                   0x00011800A0041A48  RSL
PIP_STAT9_53                   0x00011800A0041AC8  RSL
PIP_STAT9_54                   0x00011800A0041B48  RSL
PIP_STAT9_55                   0x00011800A0041BC8  RSL
PIP_STAT9_56                   0x00011800A0041C48  RSL
PIP_STAT9_57                   0x00011800A0041CC8  RSL
PIP_STAT9_58                   0x00011800A0041D48  RSL
PIP_STAT9_59                   0x00011800A0041DC8  RSL
PIP_STAT9_60                   0x00011800A0041E48  RSL
PIP_STAT9_61                   0x00011800A0041EC8  RSL
PIP_STAT9_62                   0x00011800A0041F48  RSL
PIP_STAT9_63                   0x00011800A0041FC8  RSL
PIP_STAT10_0                   0x00011800A0040050  RSL
PIP_STAT10_1                   0x00011800A00400D0  RSL
PIP_STAT10_2                   0x00011800A0040150  RSL
PIP_STAT10_3                   0x00011800A00401D0  RSL
PIP_STAT10_4                   0x00011800A0040250  RSL
PIP_STAT10_5                   0x00011800A00402D0  RSL
PIP_STAT10_6                   0x00011800A0040350  RSL
PIP_STAT10_7                   0x00011800A00403D0  RSL
PIP_STAT10_8                   0x00011800A0040450  RSL
PIP_STAT10_9                   0x00011800A00404D0  RSL
PIP_STAT10_10                  0x00011800A0040550  RSL
PIP_STAT10_11                  0x00011800A00405D0  RSL
PIP_STAT10_12                  0x00011800A0040650  RSL
PIP_STAT10_13                  0x00011800A00406D0  RSL
PIP_STAT10_14                  0x00011800A0040750  RSL
PIP_STAT10_15                  0x00011800A00407D0  RSL
PIP_STAT10_16                  0x00011800A0040850  RSL
PIP_STAT10_17                  0x00011800A00408D0  RSL
PIP_STAT10_18                  0x00011800A0040950  RSL
PIP_STAT10_19                  0x00011800A00409D0  RSL
PIP_STAT10_20                  0x00011800A0040A50  RSL
PIP_STAT10_21                  0x00011800A0040AD0  RSL
PIP_STAT10_22                  0x00011800A0040B50  RSL
PIP_STAT10_23                  0x00011800A0040BD0  RSL
PIP_STAT10_24                  0x00011800A0040C50  RSL
PIP_STAT10_25                  0x00011800A0040CD0  RSL
PIP_STAT10_26                  0x00011800A0040D50  RSL
PIP_STAT10_27                  0x00011800A0040DD0  RSL
PIP_STAT10_28                  0x00011800A0040E50  RSL
PIP_STAT10_29                  0x00011800A0040ED0  RSL
PIP_STAT10_30                  0x00011800A0040F50  RSL
PIP_STAT10_31                  0x00011800A0040FD0  RSL
PIP_STAT10_32                  0x00011800A0041050  RSL
PIP_STAT10_33                  0x00011800A00410D0  RSL
PIP_STAT10_34                  0x00011800A0041150  RSL
PIP_STAT10_35                  0x00011800A00411D0  RSL
PIP_STAT10_36                  0x00011800A0041250  RSL
PIP_STAT10_37                  0x00011800A00412D0  RSL
PIP_STAT10_38                  0x00011800A0041350  RSL
PIP_STAT10_39                  0x00011800A00413D0  RSL
PIP_STAT10_40                  0x00011800A0041450  RSL
PIP_STAT10_41                  0x00011800A00414D0  RSL
PIP_STAT10_42                  0x00011800A0041550  RSL
PIP_STAT10_43                  0x00011800A00415D0  RSL
PIP_STAT10_44                  0x00011800A0041650  RSL
PIP_STAT10_45                  0x00011800A00416D0  RSL
PIP_STAT10_46                  0x00011800A0041750  RSL
PIP_STAT10_47                  0x00011800A00417D0  RSL
PIP_STAT10_48                  0x00011800A0041850  RSL
PIP_STAT10_49                  0x00011800A00418D0  RSL
PIP_STAT10_50                  0x00011800A0041950  RSL
PIP_STAT10_51                  0x00011800A00419D0  RSL
PIP_STAT10_52                  0x00011800A0041A50  RSL
PIP_STAT10_53                  0x00011800A0041AD0  RSL
PIP_STAT10_54                  0x00011800A0041B50  RSL
PIP_STAT10_55                  0x00011800A0041BD0  RSL
PIP_STAT10_56                  0x00011800A0041C50  RSL
PIP_STAT10_57                  0x00011800A0041CD0  RSL
PIP_STAT10_58                  0x00011800A0041D50  RSL
PIP_STAT10_59                  0x00011800A0041DD0  RSL
PIP_STAT10_60                  0x00011800A0041E50  RSL
PIP_STAT10_61                  0x00011800A0041ED0  RSL
PIP_STAT10_62                  0x00011800A0041F50  RSL
PIP_STAT10_63                  0x00011800A0041FD0  RSL
PIP_STAT11_0                   0x00011800A0040058  RSL
PIP_STAT11_1                   0x00011800A00400D8  RSL
PIP_STAT11_2                   0x00011800A0040158  RSL
PIP_STAT11_3                   0x00011800A00401D8  RSL
PIP_STAT11_4                   0x00011800A0040258  RSL
PIP_STAT11_5                   0x00011800A00402D8  RSL
PIP_STAT11_6                   0x00011800A0040358  RSL
PIP_STAT11_7                   0x00011800A00403D8  RSL
PIP_STAT11_8                   0x00011800A0040458  RSL
PIP_STAT11_9                   0x00011800A00404D8  RSL
PIP_STAT11_10                  0x00011800A0040558  RSL
PIP_STAT11_11                  0x00011800A00405D8  RSL
PIP_STAT11_12                  0x00011800A0040658  RSL
PIP_STAT11_13                  0x00011800A00406D8  RSL
PIP_STAT11_14                  0x00011800A0040758  RSL
PIP_STAT11_15                  0x00011800A00407D8  RSL
PIP_STAT11_16                  0x00011800A0040858  RSL
PIP_STAT11_17                  0x00011800A00408D8  RSL
PIP_STAT11_18                  0x00011800A0040958  RSL
PIP_STAT11_19                  0x00011800A00409D8  RSL
PIP_STAT11_20                  0x00011800A0040A58  RSL
PIP_STAT11_21                  0x00011800A0040AD8  RSL
PIP_STAT11_22                  0x00011800A0040B58  RSL
PIP_STAT11_23                  0x00011800A0040BD8  RSL
PIP_STAT11_24                  0x00011800A0040C58  RSL
PIP_STAT11_25                  0x00011800A0040CD8  RSL
PIP_STAT11_26                  0x00011800A0040D58  RSL
PIP_STAT11_27                  0x00011800A0040DD8  RSL
PIP_STAT11_28                  0x00011800A0040E58  RSL
PIP_STAT11_29                  0x00011800A0040ED8  RSL
PIP_STAT11_30                  0x00011800A0040F58  RSL
PIP_STAT11_31                  0x00011800A0040FD8  RSL
PIP_STAT11_32                  0x00011800A0041058  RSL
PIP_STAT11_33                  0x00011800A00410D8  RSL
PIP_STAT11_34                  0x00011800A0041158  RSL
PIP_STAT11_35                  0x00011800A00411D8  RSL
PIP_STAT11_36                  0x00011800A0041258  RSL
PIP_STAT11_37                  0x00011800A00412D8  RSL
PIP_STAT11_38                  0x00011800A0041358  RSL
PIP_STAT11_39                  0x00011800A00413D8  RSL
PIP_STAT11_40                  0x00011800A0041458  RSL
PIP_STAT11_41                  0x00011800A00414D8  RSL
PIP_STAT11_42                  0x00011800A0041558  RSL
PIP_STAT11_43                  0x00011800A00415D8  RSL
PIP_STAT11_44                  0x00011800A0041658  RSL
PIP_STAT11_45                  0x00011800A00416D8  RSL
PIP_STAT11_46                  0x00011800A0041758  RSL
PIP_STAT11_47                  0x00011800A00417D8  RSL
PIP_STAT11_48                  0x00011800A0041858  RSL
PIP_STAT11_49                  0x00011800A00418D8  RSL
PIP_STAT11_50                  0x00011800A0041958  RSL
PIP_STAT11_51                  0x00011800A00419D8  RSL
PIP_STAT11_52                  0x00011800A0041A58  RSL
PIP_STAT11_53                  0x00011800A0041AD8  RSL
PIP_STAT11_54                  0x00011800A0041B58  RSL
PIP_STAT11_55                  0x00011800A0041BD8  RSL
PIP_STAT11_56                  0x00011800A0041C58  RSL
PIP_STAT11_57                  0x00011800A0041CD8  RSL
PIP_STAT11_58                  0x00011800A0041D58  RSL
PIP_STAT11_59                  0x00011800A0041DD8  RSL
PIP_STAT11_60                  0x00011800A0041E58  RSL
PIP_STAT11_61                  0x00011800A0041ED8  RSL
PIP_STAT11_62                  0x00011800A0041F58  RSL
PIP_STAT11_63                  0x00011800A0041FD8  RSL
PIP_STAT_CTL                   0x00011800A0000018  RSL
PIP_STAT_INB_ERRS_PKND0        0x00011800A0020010  RSL
PIP_STAT_INB_ERRS_PKND1        0x00011800A0020030  RSL
PIP_STAT_INB_ERRS_PKND2        0x00011800A0020050  RSL
PIP_STAT_INB_ERRS_PKND3        0x00011800A0020070  RSL
PIP_STAT_INB_ERRS_PKND4        0x00011800A0020090  RSL
PIP_STAT_INB_ERRS_PKND5        0x00011800A00200B0  RSL
PIP_STAT_INB_ERRS_PKND6        0x00011800A00200D0  RSL
PIP_STAT_INB_ERRS_PKND7        0x00011800A00200F0  RSL
PIP_STAT_INB_ERRS_PKND8        0x00011800A0020110  RSL
PIP_STAT_INB_ERRS_PKND9        0x00011800A0020130  RSL
PIP_STAT_INB_ERRS_PKND10       0x00011800A0020150  RSL
PIP_STAT_INB_ERRS_PKND11       0x00011800A0020170  RSL
PIP_STAT_INB_ERRS_PKND12       0x00011800A0020190  RSL
PIP_STAT_INB_ERRS_PKND13       0x00011800A00201B0  RSL
PIP_STAT_INB_ERRS_PKND14       0x00011800A00201D0  RSL
PIP_STAT_INB_ERRS_PKND15       0x00011800A00201F0  RSL
PIP_STAT_INB_ERRS_PKND16       0x00011800A0020210  RSL
PIP_STAT_INB_ERRS_PKND17       0x00011800A0020230  RSL
PIP_STAT_INB_ERRS_PKND18       0x00011800A0020250  RSL
PIP_STAT_INB_ERRS_PKND19       0x00011800A0020270  RSL
PIP_STAT_INB_ERRS_PKND20       0x00011800A0020290  RSL
PIP_STAT_INB_ERRS_PKND21       0x00011800A00202B0  RSL
PIP_STAT_INB_ERRS_PKND22       0x00011800A00202D0  RSL
PIP_STAT_INB_ERRS_PKND23       0x00011800A00202F0  RSL
PIP_STAT_INB_ERRS_PKND24       0x00011800A0020310  RSL
PIP_STAT_INB_ERRS_PKND25       0x00011800A0020330  RSL
PIP_STAT_INB_ERRS_PKND26       0x00011800A0020350  RSL
PIP_STAT_INB_ERRS_PKND27       0x00011800A0020370  RSL
PIP_STAT_INB_ERRS_PKND28       0x00011800A0020390  RSL
PIP_STAT_INB_ERRS_PKND29       0x00011800A00203B0  RSL
PIP_STAT_INB_ERRS_PKND30       0x00011800A00203D0  RSL
PIP_STAT_INB_ERRS_PKND31       0x00011800A00203F0  RSL
PIP_STAT_INB_ERRS_PKND32       0x00011800A0020410  RSL
PIP_STAT_INB_ERRS_PKND33       0x00011800A0020430  RSL
PIP_STAT_INB_ERRS_PKND34       0x00011800A0020450  RSL
PIP_STAT_INB_ERRS_PKND35       0x00011800A0020470  RSL
PIP_STAT_INB_ERRS_PKND36       0x00011800A0020490  RSL
PIP_STAT_INB_ERRS_PKND37       0x00011800A00204B0  RSL
PIP_STAT_INB_ERRS_PKND38       0x00011800A00204D0  RSL
PIP_STAT_INB_ERRS_PKND39       0x00011800A00204F0  RSL
PIP_STAT_INB_ERRS_PKND40       0x00011800A0020510  RSL
PIP_STAT_INB_ERRS_PKND41       0x00011800A0020530  RSL
PIP_STAT_INB_ERRS_PKND42       0x00011800A0020550  RSL
PIP_STAT_INB_ERRS_PKND43       0x00011800A0020570  RSL
PIP_STAT_INB_ERRS_PKND44       0x00011800A0020590  RSL
PIP_STAT_INB_ERRS_PKND45       0x00011800A00205B0  RSL
PIP_STAT_INB_ERRS_PKND46       0x00011800A00205D0  RSL
PIP_STAT_INB_ERRS_PKND47       0x00011800A00205F0  RSL
PIP_STAT_INB_ERRS_PKND48       0x00011800A0020610  RSL
PIP_STAT_INB_ERRS_PKND49       0x00011800A0020630  RSL
PIP_STAT_INB_ERRS_PKND50       0x00011800A0020650  RSL
PIP_STAT_INB_ERRS_PKND51       0x00011800A0020670  RSL
PIP_STAT_INB_ERRS_PKND52       0x00011800A0020690  RSL
PIP_STAT_INB_ERRS_PKND53       0x00011800A00206B0  RSL
PIP_STAT_INB_ERRS_PKND54       0x00011800A00206D0  RSL
PIP_STAT_INB_ERRS_PKND55       0x00011800A00206F0  RSL
PIP_STAT_INB_ERRS_PKND56       0x00011800A0020710  RSL
PIP_STAT_INB_ERRS_PKND57       0x00011800A0020730  RSL
PIP_STAT_INB_ERRS_PKND58       0x00011800A0020750  RSL
PIP_STAT_INB_ERRS_PKND59       0x00011800A0020770  RSL
PIP_STAT_INB_ERRS_PKND60       0x00011800A0020790  RSL
PIP_STAT_INB_ERRS_PKND61       0x00011800A00207B0  RSL
PIP_STAT_INB_ERRS_PKND62       0x00011800A00207D0  RSL
PIP_STAT_INB_ERRS_PKND63       0x00011800A00207F0  RSL
PIP_STAT_INB_OCTS_PKND0        0x00011800A0020008  RSL
PIP_STAT_INB_OCTS_PKND1        0x00011800A0020028  RSL
PIP_STAT_INB_OCTS_PKND2        0x00011800A0020048  RSL
PIP_STAT_INB_OCTS_PKND3        0x00011800A0020068  RSL
PIP_STAT_INB_OCTS_PKND4        0x00011800A0020088  RSL
PIP_STAT_INB_OCTS_PKND5        0x00011800A00200A8  RSL
PIP_STAT_INB_OCTS_PKND6        0x00011800A00200C8  RSL
PIP_STAT_INB_OCTS_PKND7        0x00011800A00200E8  RSL
PIP_STAT_INB_OCTS_PKND8        0x00011800A0020108  RSL
PIP_STAT_INB_OCTS_PKND9        0x00011800A0020128  RSL
PIP_STAT_INB_OCTS_PKND10       0x00011800A0020148  RSL
PIP_STAT_INB_OCTS_PKND11       0x00011800A0020168  RSL
PIP_STAT_INB_OCTS_PKND12       0x00011800A0020188  RSL
PIP_STAT_INB_OCTS_PKND13       0x00011800A00201A8  RSL
PIP_STAT_INB_OCTS_PKND14       0x00011800A00201C8  RSL
PIP_STAT_INB_OCTS_PKND15       0x00011800A00201E8  RSL
PIP_STAT_INB_OCTS_PKND16       0x00011800A0020208  RSL
PIP_STAT_INB_OCTS_PKND17       0x00011800A0020228  RSL
PIP_STAT_INB_OCTS_PKND18       0x00011800A0020248  RSL
PIP_STAT_INB_OCTS_PKND19       0x00011800A0020268  RSL
PIP_STAT_INB_OCTS_PKND20       0x00011800A0020288  RSL
PIP_STAT_INB_OCTS_PKND21       0x00011800A00202A8  RSL
PIP_STAT_INB_OCTS_PKND22       0x00011800A00202C8  RSL
PIP_STAT_INB_OCTS_PKND23       0x00011800A00202E8  RSL
PIP_STAT_INB_OCTS_PKND24       0x00011800A0020308  RSL
PIP_STAT_INB_OCTS_PKND25       0x00011800A0020328  RSL
PIP_STAT_INB_OCTS_PKND26       0x00011800A0020348  RSL
PIP_STAT_INB_OCTS_PKND27       0x00011800A0020368  RSL
PIP_STAT_INB_OCTS_PKND28       0x00011800A0020388  RSL
PIP_STAT_INB_OCTS_PKND29       0x00011800A00203A8  RSL
PIP_STAT_INB_OCTS_PKND30       0x00011800A00203C8  RSL
PIP_STAT_INB_OCTS_PKND31       0x00011800A00203E8  RSL
PIP_STAT_INB_OCTS_PKND32       0x00011800A0020408  RSL
PIP_STAT_INB_OCTS_PKND33       0x00011800A0020428  RSL
PIP_STAT_INB_OCTS_PKND34       0x00011800A0020448  RSL
PIP_STAT_INB_OCTS_PKND35       0x00011800A0020468  RSL
PIP_STAT_INB_OCTS_PKND36       0x00011800A0020488  RSL
PIP_STAT_INB_OCTS_PKND37       0x00011800A00204A8  RSL
PIP_STAT_INB_OCTS_PKND38       0x00011800A00204C8  RSL
PIP_STAT_INB_OCTS_PKND39       0x00011800A00204E8  RSL
PIP_STAT_INB_OCTS_PKND40       0x00011800A0020508  RSL
PIP_STAT_INB_OCTS_PKND41       0x00011800A0020528  RSL
PIP_STAT_INB_OCTS_PKND42       0x00011800A0020548  RSL
PIP_STAT_INB_OCTS_PKND43       0x00011800A0020568  RSL
PIP_STAT_INB_OCTS_PKND44       0x00011800A0020588  RSL
PIP_STAT_INB_OCTS_PKND45       0x00011800A00205A8  RSL
PIP_STAT_INB_OCTS_PKND46       0x00011800A00205C8  RSL
PIP_STAT_INB_OCTS_PKND47       0x00011800A00205E8  RSL
PIP_STAT_INB_OCTS_PKND48       0x00011800A0020608  RSL
PIP_STAT_INB_OCTS_PKND49       0x00011800A0020628  RSL
PIP_STAT_INB_OCTS_PKND50       0x00011800A0020648  RSL
PIP_STAT_INB_OCTS_PKND51       0x00011800A0020668  RSL
PIP_STAT_INB_OCTS_PKND52       0x00011800A0020688  RSL
PIP_STAT_INB_OCTS_PKND53       0x00011800A00206A8  RSL
PIP_STAT_INB_OCTS_PKND54       0x00011800A00206C8  RSL
PIP_STAT_INB_OCTS_PKND55       0x00011800A00206E8  RSL
PIP_STAT_INB_OCTS_PKND56       0x00011800A0020708  RSL
PIP_STAT_INB_OCTS_PKND57       0x00011800A0020728  RSL
PIP_STAT_INB_OCTS_PKND58       0x00011800A0020748  RSL
PIP_STAT_INB_OCTS_PKND59       0x00011800A0020768  RSL
PIP_STAT_INB_OCTS_PKND60       0x00011800A0020788  RSL
PIP_STAT_INB_OCTS_PKND61       0x00011800A00207A8  RSL
PIP_STAT_INB_OCTS_PKND62       0x00011800A00207C8  RSL
PIP_STAT_INB_OCTS_PKND63       0x00011800A00207E8  RSL
PIP_STAT_INB_PKTS_PKND0        0x00011800A0020000  RSL
PIP_STAT_INB_PKTS_PKND1        0x00011800A0020020  RSL
PIP_STAT_INB_PKTS_PKND2        0x00011800A0020040  RSL
PIP_STAT_INB_PKTS_PKND3        0x00011800A0020060  RSL
PIP_STAT_INB_PKTS_PKND4        0x00011800A0020080  RSL
PIP_STAT_INB_PKTS_PKND5        0x00011800A00200A0  RSL
PIP_STAT_INB_PKTS_PKND6        0x00011800A00200C0  RSL
PIP_STAT_INB_PKTS_PKND7        0x00011800A00200E0  RSL
PIP_STAT_INB_PKTS_PKND8        0x00011800A0020100  RSL
PIP_STAT_INB_PKTS_PKND9        0x00011800A0020120  RSL
PIP_STAT_INB_PKTS_PKND10       0x00011800A0020140  RSL
PIP_STAT_INB_PKTS_PKND11       0x00011800A0020160  RSL
PIP_STAT_INB_PKTS_PKND12       0x00011800A0020180  RSL
PIP_STAT_INB_PKTS_PKND13       0x00011800A00201A0  RSL
PIP_STAT_INB_PKTS_PKND14       0x00011800A00201C0  RSL
PIP_STAT_INB_PKTS_PKND15       0x00011800A00201E0  RSL
PIP_STAT_INB_PKTS_PKND16       0x00011800A0020200  RSL
PIP_STAT_INB_PKTS_PKND17       0x00011800A0020220  RSL
PIP_STAT_INB_PKTS_PKND18       0x00011800A0020240  RSL
PIP_STAT_INB_PKTS_PKND19       0x00011800A0020260  RSL
PIP_STAT_INB_PKTS_PKND20       0x00011800A0020280  RSL
PIP_STAT_INB_PKTS_PKND21       0x00011800A00202A0  RSL
PIP_STAT_INB_PKTS_PKND22       0x00011800A00202C0  RSL
PIP_STAT_INB_PKTS_PKND23       0x00011800A00202E0  RSL
PIP_STAT_INB_PKTS_PKND24       0x00011800A0020300  RSL
PIP_STAT_INB_PKTS_PKND25       0x00011800A0020320  RSL
PIP_STAT_INB_PKTS_PKND26       0x00011800A0020340  RSL
PIP_STAT_INB_PKTS_PKND27       0x00011800A0020360  RSL
PIP_STAT_INB_PKTS_PKND28       0x00011800A0020380  RSL
PIP_STAT_INB_PKTS_PKND29       0x00011800A00203A0  RSL
PIP_STAT_INB_PKTS_PKND30       0x00011800A00203C0  RSL
PIP_STAT_INB_PKTS_PKND31       0x00011800A00203E0  RSL
PIP_STAT_INB_PKTS_PKND32       0x00011800A0020400  RSL
PIP_STAT_INB_PKTS_PKND33       0x00011800A0020420  RSL
PIP_STAT_INB_PKTS_PKND34       0x00011800A0020440  RSL
PIP_STAT_INB_PKTS_PKND35       0x00011800A0020460  RSL
PIP_STAT_INB_PKTS_PKND36       0x00011800A0020480  RSL
PIP_STAT_INB_PKTS_PKND37       0x00011800A00204A0  RSL
PIP_STAT_INB_PKTS_PKND38       0x00011800A00204C0  RSL
PIP_STAT_INB_PKTS_PKND39       0x00011800A00204E0  RSL
PIP_STAT_INB_PKTS_PKND40       0x00011800A0020500  RSL
PIP_STAT_INB_PKTS_PKND41       0x00011800A0020520  RSL
PIP_STAT_INB_PKTS_PKND42       0x00011800A0020540  RSL
PIP_STAT_INB_PKTS_PKND43       0x00011800A0020560  RSL
PIP_STAT_INB_PKTS_PKND44       0x00011800A0020580  RSL
PIP_STAT_INB_PKTS_PKND45       0x00011800A00205A0  RSL
PIP_STAT_INB_PKTS_PKND46       0x00011800A00205C0  RSL
PIP_STAT_INB_PKTS_PKND47       0x00011800A00205E0  RSL
PIP_STAT_INB_PKTS_PKND48       0x00011800A0020600  RSL
PIP_STAT_INB_PKTS_PKND49       0x00011800A0020620  RSL
PIP_STAT_INB_PKTS_PKND50       0x00011800A0020640  RSL
PIP_STAT_INB_PKTS_PKND51       0x00011800A0020660  RSL
PIP_STAT_INB_PKTS_PKND52       0x00011800A0020680  RSL
PIP_STAT_INB_PKTS_PKND53       0x00011800A00206A0  RSL
PIP_STAT_INB_PKTS_PKND54       0x00011800A00206C0  RSL
PIP_STAT_INB_PKTS_PKND55       0x00011800A00206E0  RSL
PIP_STAT_INB_PKTS_PKND56       0x00011800A0020700  RSL
PIP_STAT_INB_PKTS_PKND57       0x00011800A0020720  RSL
PIP_STAT_INB_PKTS_PKND58       0x00011800A0020740  RSL
PIP_STAT_INB_PKTS_PKND59       0x00011800A0020760  RSL
PIP_STAT_INB_PKTS_PKND60       0x00011800A0020780  RSL
PIP_STAT_INB_PKTS_PKND61       0x00011800A00207A0  RSL
PIP_STAT_INB_PKTS_PKND62       0x00011800A00207C0  RSL
PIP_STAT_INB_PKTS_PKND63       0x00011800A00207E0  RSL
PIP_SUB_PKIND_FCS0             0x00011800A0080000  RSL
PIP_TAG_INC0                   0x00011800A0001800  RSL
PIP_TAG_INC1                   0x00011800A0001808  RSL
PIP_TAG_INC2                   0x00011800A0001810  RSL
PIP_TAG_INC3                   0x00011800A0001818  RSL
PIP_TAG_INC4                   0x00011800A0001820  RSL
PIP_TAG_INC5                   0x00011800A0001828  RSL
PIP_TAG_INC6                   0x00011800A0001830  RSL
PIP_TAG_INC7                   0x00011800A0001838  RSL
PIP_TAG_INC8                   0x00011800A0001840  RSL
PIP_TAG_INC9                   0x00011800A0001848  RSL
PIP_TAG_INC10                  0x00011800A0001850  RSL
PIP_TAG_INC11                  0x00011800A0001858  RSL
PIP_TAG_INC12                  0x00011800A0001860  RSL
PIP_TAG_INC13                  0x00011800A0001868  RSL
PIP_TAG_INC14                  0x00011800A0001870  RSL
PIP_TAG_INC15                  0x00011800A0001878  RSL
PIP_TAG_INC16                  0x00011800A0001880  RSL
PIP_TAG_INC17                  0x00011800A0001888  RSL
PIP_TAG_INC18                  0x00011800A0001890  RSL
PIP_TAG_INC19                  0x00011800A0001898  RSL
PIP_TAG_INC20                  0x00011800A00018A0  RSL
PIP_TAG_INC21                  0x00011800A00018A8  RSL
PIP_TAG_INC22                  0x00011800A00018B0  RSL
PIP_TAG_INC23                  0x00011800A00018B8  RSL
PIP_TAG_INC24                  0x00011800A00018C0  RSL
PIP_TAG_INC25                  0x00011800A00018C8  RSL
PIP_TAG_INC26                  0x00011800A00018D0  RSL
PIP_TAG_INC27                  0x00011800A00018D8  RSL
PIP_TAG_INC28                  0x00011800A00018E0  RSL
PIP_TAG_INC29                  0x00011800A00018E8  RSL
PIP_TAG_INC30                  0x00011800A00018F0  RSL
PIP_TAG_INC31                  0x00011800A00018F8  RSL
PIP_TAG_INC32                  0x00011800A0001900  RSL
PIP_TAG_INC33                  0x00011800A0001908  RSL
PIP_TAG_INC34                  0x00011800A0001910  RSL
PIP_TAG_INC35                  0x00011800A0001918  RSL
PIP_TAG_INC36                  0x00011800A0001920  RSL
PIP_TAG_INC37                  0x00011800A0001928  RSL
PIP_TAG_INC38                  0x00011800A0001930  RSL
PIP_TAG_INC39                  0x00011800A0001938  RSL
PIP_TAG_INC40                  0x00011800A0001940  RSL
PIP_TAG_INC41                  0x00011800A0001948  RSL
PIP_TAG_INC42                  0x00011800A0001950  RSL
PIP_TAG_INC43                  0x00011800A0001958  RSL
PIP_TAG_INC44                  0x00011800A0001960  RSL
PIP_TAG_INC45                  0x00011800A0001968  RSL
PIP_TAG_INC46                  0x00011800A0001970  RSL
PIP_TAG_INC47                  0x00011800A0001978  RSL
PIP_TAG_INC48                  0x00011800A0001980  RSL
PIP_TAG_INC49                  0x00011800A0001988  RSL
PIP_TAG_INC50                  0x00011800A0001990  RSL
PIP_TAG_INC51                  0x00011800A0001998  RSL
PIP_TAG_INC52                  0x00011800A00019A0  RSL
PIP_TAG_INC53                  0x00011800A00019A8  RSL
PIP_TAG_INC54                  0x00011800A00019B0  RSL
PIP_TAG_INC55                  0x00011800A00019B8  RSL
PIP_TAG_INC56                  0x00011800A00019C0  RSL
PIP_TAG_INC57                  0x00011800A00019C8  RSL
PIP_TAG_INC58                  0x00011800A00019D0  RSL
PIP_TAG_INC59                  0x00011800A00019D8  RSL
PIP_TAG_INC60                  0x00011800A00019E0  RSL
PIP_TAG_INC61                  0x00011800A00019E8  RSL
PIP_TAG_INC62                  0x00011800A00019F0  RSL
PIP_TAG_INC63                  0x00011800A00019F8  RSL
PIP_TAG_MASK                   0x00011800A0000070  RSL
PIP_TAG_SECRET                 0x00011800A0000068  RSL
PIP_TODO_ENTRY                 0x00011800A0000078  RSL
PKO_MEM_COUNT0                 0x0001180050001080  RSL
PKO_MEM_COUNT1                 0x0001180050001088  RSL
PKO_MEM_DEBUG0                 0x0001180050001100  RSL
PKO_MEM_DEBUG1                 0x0001180050001108  RSL
PKO_MEM_DEBUG2                 0x0001180050001110  RSL
PKO_MEM_DEBUG3                 0x0001180050001118  RSL
PKO_MEM_DEBUG4                 0x0001180050001120  RSL
PKO_MEM_DEBUG5                 0x0001180050001128  RSL
PKO_MEM_DEBUG6                 0x0001180050001130  RSL
PKO_MEM_DEBUG7                 0x0001180050001138  RSL
PKO_MEM_DEBUG8                 0x0001180050001140  RSL
PKO_MEM_DEBUG9                 0x0001180050001148  RSL
PKO_MEM_DEBUG10                0x0001180050001150  RSL
PKO_MEM_DEBUG11                0x0001180050001158  RSL
PKO_MEM_DEBUG12                0x0001180050001160  RSL
PKO_MEM_DEBUG13                0x0001180050001168  RSL
PKO_MEM_IPORT_PTRS             0x0001180050001030  RSL
PKO_MEM_IPORT_QOS              0x0001180050001038  RSL
PKO_MEM_IQUEUE_PTRS            0x0001180050001040  RSL
PKO_MEM_IQUEUE_QOS             0x0001180050001048  RSL
PKO_MEM_PORT_RATE0             0x0001180050001020  RSL
PKO_MEM_PORT_RATE1             0x0001180050001028  RSL
PKO_MEM_THROTTLE_INT           0x0001180050001058  RSL
PKO_MEM_THROTTLE_PIPE          0x0001180050001050  RSL
PKO_REG_BIST_RESULT            0x0001180050000080  RSL
PKO_REG_CMD_BUF                0x0001180050000010  RSL
PKO_REG_DEBUG0                 0x0001180050000098  RSL
PKO_REG_DEBUG1                 0x00011800500000A0  RSL
PKO_REG_DEBUG2                 0x00011800500000A8  RSL
PKO_REG_DEBUG3                 0x00011800500000B0  RSL
PKO_REG_DEBUG4                 0x00011800500000B8  RSL
PKO_REG_ENGINE_INFLIGHT        0x0001180050000050  RSL
PKO_REG_ENGINE_INFLIGHT1       0x0001180050000318  RSL
PKO_REG_ENGINE_STORAGE0        0x0001180050000300  RSL
PKO_REG_ENGINE_STORAGE1        0x0001180050000308  RSL
PKO_REG_ENGINE_THRESH          0x0001180050000058  RSL
PKO_REG_ERROR                  0x0001180050000088  RSL
PKO_REG_FLAGS                  0x0001180050000000  RSL
PKO_REG_INT_MASK               0x0001180050000090  RSL
PKO_REG_LOOPBACK_BPID          0x0001180050000118  RSL
PKO_REG_LOOPBACK_PKIND         0x0001180050000068  RSL
PKO_REG_MIN_PKT                0x0001180050000070  RSL
PKO_REG_PREEMPT                0x0001180050000110  RSL
PKO_REG_QUEUE_MODE             0x0001180050000048  RSL
PKO_REG_QUEUE_PREEMPT          0x0001180050000108  RSL
PKO_REG_READ_IDX               0x0001180050000008  RSL
PKO_REG_THROTTLE               0x0001180050000078  RSL
PKO_REG_TIMESTAMP              0x0001180050000060  RSL
RAD_MEM_DEBUG0                 0x0001180070001000  RSL
RAD_MEM_DEBUG1                 0x0001180070001008  RSL
RAD_MEM_DEBUG2                 0x0001180070001010  RSL
RAD_REG_BIST_RESULT            0x0001180070000080  RSL
RAD_REG_CMD_BUF                0x0001180070000008  RSL
RAD_REG_CTL                    0x0001180070000000  RSL
RAD_REG_DEBUG0                 0x0001180070000100  RSL
RAD_REG_DEBUG1                 0x0001180070000108  RSL
RAD_REG_DEBUG2                 0x0001180070000110  RSL
RAD_REG_DEBUG3                 0x0001180070000118  RSL
RAD_REG_DEBUG4                 0x0001180070000120  RSL
RAD_REG_DEBUG5                 0x0001180070000128  RSL
RAD_REG_DEBUG6                 0x0001180070000130  RSL
RAD_REG_DEBUG7                 0x0001180070000138  RSL
RAD_REG_DEBUG8                 0x0001180070000140  RSL
RAD_REG_DEBUG9                 0x0001180070000148  RSL
RAD_REG_DEBUG10                0x0001180070000150  RSL
RAD_REG_DEBUG11                0x0001180070000158  RSL
RAD_REG_DEBUG12                0x0001180070000160  RSL
RAD_REG_ERROR                  0x0001180070000088  RSL
RAD_REG_INT_MASK               0x0001180070000090  RSL
RAD_REG_POLYNOMIAL             0x0001180070000010  RSL
RAD_REG_READ_IDX               0x0001180070000018  RSL
RNM_BIST_STATUS                0x0001180040000008  RSL
RNM_CTL_STATUS                 0x0001180040000000  RSL
RNM_EER_DBG                    0x0001180040000018  RSL
RNM_EER_KEY                    0x0001180040000010  RSL
RNM_SERIAL_NUM                 0x0001180040000020  RSL
SLI_BIST_STATUS                0x0000000000000580  PEXP_NCB     0x00011F0000010580  NCB
SLI_CTL_PORT0                  0x0000000000000050  PEXP_NCB     0x00011F0000010050  NCB
SLI_CTL_PORT1                  0x0000000000000060  PEXP_NCB     0x00011F0000010060  NCB
SLI_CTL_STATUS                 0x0000000000000570  PEXP_NCB     0x00011F0000010570  NCB
SLI_DATA_OUT_CNT               0x00000000000005F0  PEXP_NCB     0x00011F00000105F0  NCB
SLI_DBG_DATA                   0x0000000000000310  PEXP_NCB     0x00011F0000010310  NCB
SLI_DBG_SELECT                 0x0000000000000300  PEXP_NCB     0x00011F0000010300  NCB
SLI_DMA0_CNT                   0x0000000000000400  PEXP_NCB     0x00011F0000010400  NCB
SLI_DMA0_INT_LEVEL             0x00000000000003E0  PEXP_NCB     0x00011F00000103E0  NCB
SLI_DMA0_TIM                   0x0000000000000420  PEXP_NCB     0x00011F0000010420  NCB
SLI_DMA1_CNT                   0x0000000000000410  PEXP_NCB     0x00011F0000010410  NCB
SLI_DMA1_INT_LEVEL             0x00000000000003F0  PEXP_NCB     0x00011F00000103F0  NCB
SLI_DMA1_TIM                   0x0000000000000430  PEXP_NCB     0x00011F0000010430  NCB
SLI_INT_ENB_CIU                0x0000000000003CD0  PEXP_NCB     0x00011F0000013CD0  NCB
SLI_INT_ENB_PORT0              0x0000000000000340  PEXP_NCB     0x00011F0000010340  NCB
SLI_INT_ENB_PORT1              0x0000000000000350  PEXP_NCB     0x00011F0000010350  NCB
SLI_INT_SUM                    0x0000000000000330  PEXP_NCB     0x00011F0000010330  NCB
SLI_LAST_WIN_RDATA0            0x0000000000000600  PEXP_NCB     0x00011F0000010600  NCB
SLI_LAST_WIN_RDATA1            0x0000000000000610  PEXP_NCB     0x00011F0000010610  NCB
SLI_MAC_CREDIT_CNT             0x0000000000003D70  PEXP_NCB     0x00011F0000013D70  NCB
SLI_MAC_NUMBER                 0x0000000000003E00  PEXP
SLI_MEM_ACCESS_CTL             0x00000000000002F0  PEXP_NCB     0x00011F00000102F0  NCB
SLI_MEM_ACCESS_SUBID12         0x00000000000000E0  PEXP_NCB     0x00011F00000100E0  NCB
SLI_MEM_ACCESS_SUBID13         0x00000000000000F0  PEXP_NCB     0x00011F00000100F0  NCB
SLI_MEM_ACCESS_SUBID14         0x0000000000000100  PEXP_NCB     0x00011F0000010100  NCB
SLI_MEM_ACCESS_SUBID15         0x0000000000000110  PEXP_NCB     0x00011F0000010110  NCB
SLI_MEM_ACCESS_SUBID16         0x0000000000000120  PEXP_NCB     0x00011F0000010120  NCB
SLI_MEM_ACCESS_SUBID17         0x0000000000000130  PEXP_NCB     0x00011F0000010130  NCB
SLI_MEM_ACCESS_SUBID18         0x0000000000000140  PEXP_NCB     0x00011F0000010140  NCB
SLI_MEM_ACCESS_SUBID19         0x0000000000000150  PEXP_NCB     0x00011F0000010150  NCB
SLI_MEM_ACCESS_SUBID20         0x0000000000000160  PEXP_NCB     0x00011F0000010160  NCB
SLI_MEM_ACCESS_SUBID21         0x0000000000000170  PEXP_NCB     0x00011F0000010170  NCB
SLI_MEM_ACCESS_SUBID22         0x0000000000000180  PEXP_NCB     0x00011F0000010180  NCB
SLI_MEM_ACCESS_SUBID23         0x0000000000000190  PEXP_NCB     0x00011F0000010190  NCB
SLI_MEM_ACCESS_SUBID24         0x00000000000001A0  PEXP_NCB     0x00011F00000101A0  NCB
SLI_MEM_ACCESS_SUBID25         0x00000000000001B0  PEXP_NCB     0x00011F00000101B0  NCB
SLI_MEM_ACCESS_SUBID26         0x00000000000001C0  PEXP_NCB     0x00011F00000101C0  NCB
SLI_MEM_ACCESS_SUBID27         0x00000000000001D0  PEXP_NCB     0x00011F00000101D0  NCB
SLI_MSI_ENB0                   0x0000000000003C50  PEXP_NCB     0x00011F0000013C50  NCB
SLI_MSI_ENB1                   0x0000000000003C60  PEXP_NCB     0x00011F0000013C60  NCB
SLI_MSI_ENB2                   0x0000000000003C70  PEXP_NCB     0x00011F0000013C70  NCB
SLI_MSI_ENB3                   0x0000000000003C80  PEXP_NCB     0x00011F0000013C80  NCB
SLI_MSI_RCV0                   0x0000000000003C10  PEXP_NCB     0x00011F0000013C10  NCB
SLI_MSI_RCV1                   0x0000000000003C20  PEXP_NCB     0x00011F0000013C20  NCB
SLI_MSI_RCV2                   0x0000000000003C30  PEXP_NCB     0x00011F0000013C30  NCB
SLI_MSI_RCV3                   0x0000000000003C40  PEXP_NCB     0x00011F0000013C40  NCB
SLI_MSI_RD_MAP                 0x0000000000003CA0  PEXP_NCB     0x00011F0000013CA0  NCB
SLI_MSI_W1C_ENB0               0x0000000000003CF0  PEXP_NCB     0x00011F0000013CF0  NCB
SLI_MSI_W1C_ENB1               0x0000000000003D00  PEXP_NCB     0x00011F0000013D00  NCB
SLI_MSI_W1C_ENB2               0x0000000000003D10  PEXP_NCB     0x00011F0000013D10  NCB
SLI_MSI_W1C_ENB3               0x0000000000003D20  PEXP_NCB     0x00011F0000013D20  NCB
SLI_MSI_W1S_ENB0               0x0000000000003D30  PEXP_NCB     0x00011F0000013D30  NCB
SLI_MSI_W1S_ENB1               0x0000000000003D40  PEXP_NCB     0x00011F0000013D40  NCB
SLI_MSI_W1S_ENB2               0x0000000000003D50  PEXP_NCB     0x00011F0000013D50  NCB
SLI_MSI_W1S_ENB3               0x0000000000003D60  PEXP_NCB     0x00011F0000013D60  NCB
SLI_MSI_WR_MAP                 0x0000000000003C90  PEXP_NCB     0x00011F0000013C90  NCB
SLI_PCIE_MSI_RCV               0x0000000000003CB0  PEXP_NCB     0x00011F0000013CB0  NCB
SLI_PCIE_MSI_RCV_B1            0x0000000000000650  PEXP_NCB     0x00011F0000010650  NCB
SLI_PCIE_MSI_RCV_B2            0x0000000000000660  PEXP_NCB     0x00011F0000010660  NCB
SLI_PCIE_MSI_RCV_B3            0x0000000000000670  PEXP_NCB     0x00011F0000010670  NCB
SLI_PKT0_CNTS                  0x0000000000002400  PEXP_NCB     0x00011F0000012400  NCB
SLI_PKT0_INSTR_BADDR           0x0000000000002800  PEXP_NCB     0x00011F0000012800  NCB
SLI_PKT0_INSTR_BAOFF_DBELL     0x0000000000002C00  PEXP_NCB     0x00011F0000012C00  NCB
SLI_PKT0_INSTR_FIFO_RSIZE      0x0000000000003000  PEXP_NCB     0x00011F0000013000  NCB
SLI_PKT0_INSTR_HEADER          0x0000000000003400  PEXP_NCB     0x00011F0000013400  NCB
SLI_PKT0_OUT_SIZE              0x0000000000000C00  PEXP_NCB     0x00011F0000010C00  NCB
SLI_PKT0_SLIST_BADDR           0x0000000000001400  PEXP_NCB     0x00011F0000011400  NCB
SLI_PKT0_SLIST_BAOFF_DBELL     0x0000000000001800  PEXP_NCB     0x00011F0000011800  NCB
SLI_PKT0_SLIST_FIFO_RSIZE      0x0000000000001C00  PEXP_NCB     0x00011F0000011C00  NCB
SLI_PKT1_CNTS                  0x0000000000002410  PEXP_NCB     0x00011F0000012410  NCB
SLI_PKT1_INSTR_BADDR           0x0000000000002810  PEXP_NCB     0x00011F0000012810  NCB
SLI_PKT1_INSTR_BAOFF_DBELL     0x0000000000002C10  PEXP_NCB     0x00011F0000012C10  NCB
SLI_PKT1_INSTR_FIFO_RSIZE      0x0000000000003010  PEXP_NCB     0x00011F0000013010  NCB
SLI_PKT1_INSTR_HEADER          0x0000000000003410  PEXP_NCB     0x00011F0000013410  NCB
SLI_PKT1_OUT_SIZE              0x0000000000000C10  PEXP_NCB     0x00011F0000010C10  NCB
SLI_PKT1_SLIST_BADDR           0x0000000000001410  PEXP_NCB     0x00011F0000011410  NCB
SLI_PKT1_SLIST_BAOFF_DBELL     0x0000000000001810  PEXP_NCB     0x00011F0000011810  NCB
SLI_PKT1_SLIST_FIFO_RSIZE      0x0000000000001C10  PEXP_NCB     0x00011F0000011C10  NCB
SLI_PKT2_CNTS                  0x0000000000002420  PEXP_NCB     0x00011F0000012420  NCB
SLI_PKT2_INSTR_BADDR           0x0000000000002820  PEXP_NCB     0x00011F0000012820  NCB
SLI_PKT2_INSTR_BAOFF_DBELL     0x0000000000002C20  PEXP_NCB     0x00011F0000012C20  NCB
SLI_PKT2_INSTR_FIFO_RSIZE      0x0000000000003020  PEXP_NCB     0x00011F0000013020  NCB
SLI_PKT2_INSTR_HEADER          0x0000000000003420  PEXP_NCB     0x00011F0000013420  NCB
SLI_PKT2_OUT_SIZE              0x0000000000000C20  PEXP_NCB     0x00011F0000010C20  NCB
SLI_PKT2_SLIST_BADDR           0x0000000000001420  PEXP_NCB     0x00011F0000011420  NCB
SLI_PKT2_SLIST_BAOFF_DBELL     0x0000000000001820  PEXP_NCB     0x00011F0000011820  NCB
SLI_PKT2_SLIST_FIFO_RSIZE      0x0000000000001C20  PEXP_NCB     0x00011F0000011C20  NCB
SLI_PKT3_CNTS                  0x0000000000002430  PEXP_NCB     0x00011F0000012430  NCB
SLI_PKT3_INSTR_BADDR           0x0000000000002830  PEXP_NCB     0x00011F0000012830  NCB
SLI_PKT3_INSTR_BAOFF_DBELL     0x0000000000002C30  PEXP_NCB     0x00011F0000012C30  NCB
SLI_PKT3_INSTR_FIFO_RSIZE      0x0000000000003030  PEXP_NCB     0x00011F0000013030  NCB
SLI_PKT3_INSTR_HEADER          0x0000000000003430  PEXP_NCB     0x00011F0000013430  NCB
SLI_PKT3_OUT_SIZE              0x0000000000000C30  PEXP_NCB     0x00011F0000010C30  NCB
SLI_PKT3_SLIST_BADDR           0x0000000000001430  PEXP_NCB     0x00011F0000011430  NCB
SLI_PKT3_SLIST_BAOFF_DBELL     0x0000000000001830  PEXP_NCB     0x00011F0000011830  NCB
SLI_PKT3_SLIST_FIFO_RSIZE      0x0000000000001C30  PEXP_NCB     0x00011F0000011C30  NCB
SLI_PKT4_CNTS                  0x0000000000002440  PEXP_NCB     0x00011F0000012440  NCB
SLI_PKT4_INSTR_BADDR           0x0000000000002840  PEXP_NCB     0x00011F0000012840  NCB
SLI_PKT4_INSTR_BAOFF_DBELL     0x0000000000002C40  PEXP_NCB     0x00011F0000012C40  NCB
SLI_PKT4_INSTR_FIFO_RSIZE      0x0000000000003040  PEXP_NCB     0x00011F0000013040  NCB
SLI_PKT4_INSTR_HEADER          0x0000000000003440  PEXP_NCB     0x00011F0000013440  NCB
SLI_PKT4_OUT_SIZE              0x0000000000000C40  PEXP_NCB     0x00011F0000010C40  NCB
SLI_PKT4_SLIST_BADDR           0x0000000000001440  PEXP_NCB     0x00011F0000011440  NCB
SLI_PKT4_SLIST_BAOFF_DBELL     0x0000000000001840  PEXP_NCB     0x00011F0000011840  NCB
SLI_PKT4_SLIST_FIFO_RSIZE      0x0000000000001C40  PEXP_NCB     0x00011F0000011C40  NCB
SLI_PKT5_CNTS                  0x0000000000002450  PEXP_NCB     0x00011F0000012450  NCB
SLI_PKT5_INSTR_BADDR           0x0000000000002850  PEXP_NCB     0x00011F0000012850  NCB
SLI_PKT5_INSTR_BAOFF_DBELL     0x0000000000002C50  PEXP_NCB     0x00011F0000012C50  NCB
SLI_PKT5_INSTR_FIFO_RSIZE      0x0000000000003050  PEXP_NCB     0x00011F0000013050  NCB
SLI_PKT5_INSTR_HEADER          0x0000000000003450  PEXP_NCB     0x00011F0000013450  NCB
SLI_PKT5_OUT_SIZE              0x0000000000000C50  PEXP_NCB     0x00011F0000010C50  NCB
SLI_PKT5_SLIST_BADDR           0x0000000000001450  PEXP_NCB     0x00011F0000011450  NCB
SLI_PKT5_SLIST_BAOFF_DBELL     0x0000000000001850  PEXP_NCB     0x00011F0000011850  NCB
SLI_PKT5_SLIST_FIFO_RSIZE      0x0000000000001C50  PEXP_NCB     0x00011F0000011C50  NCB
SLI_PKT6_CNTS                  0x0000000000002460  PEXP_NCB     0x00011F0000012460  NCB
SLI_PKT6_INSTR_BADDR           0x0000000000002860  PEXP_NCB     0x00011F0000012860  NCB
SLI_PKT6_INSTR_BAOFF_DBELL     0x0000000000002C60  PEXP_NCB     0x00011F0000012C60  NCB
SLI_PKT6_INSTR_FIFO_RSIZE      0x0000000000003060  PEXP_NCB     0x00011F0000013060  NCB
SLI_PKT6_INSTR_HEADER          0x0000000000003460  PEXP_NCB     0x00011F0000013460  NCB
SLI_PKT6_OUT_SIZE              0x0000000000000C60  PEXP_NCB     0x00011F0000010C60  NCB
SLI_PKT6_SLIST_BADDR           0x0000000000001460  PEXP_NCB     0x00011F0000011460  NCB
SLI_PKT6_SLIST_BAOFF_DBELL     0x0000000000001860  PEXP_NCB     0x00011F0000011860  NCB
SLI_PKT6_SLIST_FIFO_RSIZE      0x0000000000001C60  PEXP_NCB     0x00011F0000011C60  NCB
SLI_PKT7_CNTS                  0x0000000000002470  PEXP_NCB     0x00011F0000012470  NCB
SLI_PKT7_INSTR_BADDR           0x0000000000002870  PEXP_NCB     0x00011F0000012870  NCB
SLI_PKT7_INSTR_BAOFF_DBELL     0x0000000000002C70  PEXP_NCB     0x00011F0000012C70  NCB
SLI_PKT7_INSTR_FIFO_RSIZE      0x0000000000003070  PEXP_NCB     0x00011F0000013070  NCB
SLI_PKT7_INSTR_HEADER          0x0000000000003470  PEXP_NCB     0x00011F0000013470  NCB
SLI_PKT7_OUT_SIZE              0x0000000000000C70  PEXP_NCB     0x00011F0000010C70  NCB
SLI_PKT7_SLIST_BADDR           0x0000000000001470  PEXP_NCB     0x00011F0000011470  NCB
SLI_PKT7_SLIST_BAOFF_DBELL     0x0000000000001870  PEXP_NCB     0x00011F0000011870  NCB
SLI_PKT7_SLIST_FIFO_RSIZE      0x0000000000001C70  PEXP_NCB     0x00011F0000011C70  NCB
SLI_PKT8_CNTS                  0x0000000000002480  PEXP_NCB     0x00011F0000012480  NCB
SLI_PKT8_INSTR_BADDR           0x0000000000002880  PEXP_NCB     0x00011F0000012880  NCB
SLI_PKT8_INSTR_BAOFF_DBELL     0x0000000000002C80  PEXP_NCB     0x00011F0000012C80  NCB
SLI_PKT8_INSTR_FIFO_RSIZE      0x0000000000003080  PEXP_NCB     0x00011F0000013080  NCB
SLI_PKT8_INSTR_HEADER          0x0000000000003480  PEXP_NCB     0x00011F0000013480  NCB
SLI_PKT8_OUT_SIZE              0x0000000000000C80  PEXP_NCB     0x00011F0000010C80  NCB
SLI_PKT8_SLIST_BADDR           0x0000000000001480  PEXP_NCB     0x00011F0000011480  NCB
SLI_PKT8_SLIST_BAOFF_DBELL     0x0000000000001880  PEXP_NCB     0x00011F0000011880  NCB
SLI_PKT8_SLIST_FIFO_RSIZE      0x0000000000001C80  PEXP_NCB     0x00011F0000011C80  NCB
SLI_PKT9_CNTS                  0x0000000000002490  PEXP_NCB     0x00011F0000012490  NCB
SLI_PKT9_INSTR_BADDR           0x0000000000002890  PEXP_NCB     0x00011F0000012890  NCB
SLI_PKT9_INSTR_BAOFF_DBELL     0x0000000000002C90  PEXP_NCB     0x00011F0000012C90  NCB
SLI_PKT9_INSTR_FIFO_RSIZE      0x0000000000003090  PEXP_NCB     0x00011F0000013090  NCB
SLI_PKT9_INSTR_HEADER          0x0000000000003490  PEXP_NCB     0x00011F0000013490  NCB
SLI_PKT9_OUT_SIZE              0x0000000000000C90  PEXP_NCB     0x00011F0000010C90  NCB
SLI_PKT9_SLIST_BADDR           0x0000000000001490  PEXP_NCB     0x00011F0000011490  NCB
SLI_PKT9_SLIST_BAOFF_DBELL     0x0000000000001890  PEXP_NCB     0x00011F0000011890  NCB
SLI_PKT9_SLIST_FIFO_RSIZE      0x0000000000001C90  PEXP_NCB     0x00011F0000011C90  NCB
SLI_PKT10_CNTS                 0x00000000000024A0  PEXP_NCB     0x00011F00000124A0  NCB
SLI_PKT10_INSTR_BADDR          0x00000000000028A0  PEXP_NCB     0x00011F00000128A0  NCB
SLI_PKT10_INSTR_BAOFF_DBELL    0x0000000000002CA0  PEXP_NCB     0x00011F0000012CA0  NCB
SLI_PKT10_INSTR_FIFO_RSIZE     0x00000000000030A0  PEXP_NCB     0x00011F00000130A0  NCB
SLI_PKT10_INSTR_HEADER         0x00000000000034A0  PEXP_NCB     0x00011F00000134A0  NCB
SLI_PKT10_OUT_SIZE             0x0000000000000CA0  PEXP_NCB     0x00011F0000010CA0  NCB
SLI_PKT10_SLIST_BADDR          0x00000000000014A0  PEXP_NCB     0x00011F00000114A0  NCB
SLI_PKT10_SLIST_BAOFF_DBELL    0x00000000000018A0  PEXP_NCB     0x00011F00000118A0  NCB
SLI_PKT10_SLIST_FIFO_RSIZE     0x0000000000001CA0  PEXP_NCB     0x00011F0000011CA0  NCB
SLI_PKT11_CNTS                 0x00000000000024B0  PEXP_NCB     0x00011F00000124B0  NCB
SLI_PKT11_INSTR_BADDR          0x00000000000028B0  PEXP_NCB     0x00011F00000128B0  NCB
SLI_PKT11_INSTR_BAOFF_DBELL    0x0000000000002CB0  PEXP_NCB     0x00011F0000012CB0  NCB
SLI_PKT11_INSTR_FIFO_RSIZE     0x00000000000030B0  PEXP_NCB     0x00011F00000130B0  NCB
SLI_PKT11_INSTR_HEADER         0x00000000000034B0  PEXP_NCB     0x00011F00000134B0  NCB
SLI_PKT11_OUT_SIZE             0x0000000000000CB0  PEXP_NCB     0x00011F0000010CB0  NCB
SLI_PKT11_SLIST_BADDR          0x00000000000014B0  PEXP_NCB     0x00011F00000114B0  NCB
SLI_PKT11_SLIST_BAOFF_DBELL    0x00000000000018B0  PEXP_NCB     0x00011F00000118B0  NCB
SLI_PKT11_SLIST_FIFO_RSIZE     0x0000000000001CB0  PEXP_NCB     0x00011F0000011CB0  NCB
SLI_PKT12_CNTS                 0x00000000000024C0  PEXP_NCB     0x00011F00000124C0  NCB
SLI_PKT12_INSTR_BADDR          0x00000000000028C0  PEXP_NCB     0x00011F00000128C0  NCB
SLI_PKT12_INSTR_BAOFF_DBELL    0x0000000000002CC0  PEXP_NCB     0x00011F0000012CC0  NCB
SLI_PKT12_INSTR_FIFO_RSIZE     0x00000000000030C0  PEXP_NCB     0x00011F00000130C0  NCB
SLI_PKT12_INSTR_HEADER         0x00000000000034C0  PEXP_NCB     0x00011F00000134C0  NCB
SLI_PKT12_OUT_SIZE             0x0000000000000CC0  PEXP_NCB     0x00011F0000010CC0  NCB
SLI_PKT12_SLIST_BADDR          0x00000000000014C0  PEXP_NCB     0x00011F00000114C0  NCB
SLI_PKT12_SLIST_BAOFF_DBELL    0x00000000000018C0  PEXP_NCB     0x00011F00000118C0  NCB
SLI_PKT12_SLIST_FIFO_RSIZE     0x0000000000001CC0  PEXP_NCB     0x00011F0000011CC0  NCB
SLI_PKT13_CNTS                 0x00000000000024D0  PEXP_NCB     0x00011F00000124D0  NCB
SLI_PKT13_INSTR_BADDR          0x00000000000028D0  PEXP_NCB     0x00011F00000128D0  NCB
SLI_PKT13_INSTR_BAOFF_DBELL    0x0000000000002CD0  PEXP_NCB     0x00011F0000012CD0  NCB
SLI_PKT13_INSTR_FIFO_RSIZE     0x00000000000030D0  PEXP_NCB     0x00011F00000130D0  NCB
SLI_PKT13_INSTR_HEADER         0x00000000000034D0  PEXP_NCB     0x00011F00000134D0  NCB
SLI_PKT13_OUT_SIZE             0x0000000000000CD0  PEXP_NCB     0x00011F0000010CD0  NCB
SLI_PKT13_SLIST_BADDR          0x00000000000014D0  PEXP_NCB     0x00011F00000114D0  NCB
SLI_PKT13_SLIST_BAOFF_DBELL    0x00000000000018D0  PEXP_NCB     0x00011F00000118D0  NCB
SLI_PKT13_SLIST_FIFO_RSIZE     0x0000000000001CD0  PEXP_NCB     0x00011F0000011CD0  NCB
SLI_PKT14_CNTS                 0x00000000000024E0  PEXP_NCB     0x00011F00000124E0  NCB
SLI_PKT14_INSTR_BADDR          0x00000000000028E0  PEXP_NCB     0x00011F00000128E0  NCB
SLI_PKT14_INSTR_BAOFF_DBELL    0x0000000000002CE0  PEXP_NCB     0x00011F0000012CE0  NCB
SLI_PKT14_INSTR_FIFO_RSIZE     0x00000000000030E0  PEXP_NCB     0x00011F00000130E0  NCB
SLI_PKT14_INSTR_HEADER         0x00000000000034E0  PEXP_NCB     0x00011F00000134E0  NCB
SLI_PKT14_OUT_SIZE             0x0000000000000CE0  PEXP_NCB     0x00011F0000010CE0  NCB
SLI_PKT14_SLIST_BADDR          0x00000000000014E0  PEXP_NCB     0x00011F00000114E0  NCB
SLI_PKT14_SLIST_BAOFF_DBELL    0x00000000000018E0  PEXP_NCB     0x00011F00000118E0  NCB
SLI_PKT14_SLIST_FIFO_RSIZE     0x0000000000001CE0  PEXP_NCB     0x00011F0000011CE0  NCB
SLI_PKT15_CNTS                 0x00000000000024F0  PEXP_NCB     0x00011F00000124F0  NCB
SLI_PKT15_INSTR_BADDR          0x00000000000028F0  PEXP_NCB     0x00011F00000128F0  NCB
SLI_PKT15_INSTR_BAOFF_DBELL    0x0000000000002CF0  PEXP_NCB     0x00011F0000012CF0  NCB
SLI_PKT15_INSTR_FIFO_RSIZE     0x00000000000030F0  PEXP_NCB     0x00011F00000130F0  NCB
SLI_PKT15_INSTR_HEADER         0x00000000000034F0  PEXP_NCB     0x00011F00000134F0  NCB
SLI_PKT15_OUT_SIZE             0x0000000000000CF0  PEXP_NCB     0x00011F0000010CF0  NCB
SLI_PKT15_SLIST_BADDR          0x00000000000014F0  PEXP_NCB     0x00011F00000114F0  NCB
SLI_PKT15_SLIST_BAOFF_DBELL    0x00000000000018F0  PEXP_NCB     0x00011F00000118F0  NCB
SLI_PKT15_SLIST_FIFO_RSIZE     0x0000000000001CF0  PEXP_NCB     0x00011F0000011CF0  NCB
SLI_PKT16_CNTS                 0x0000000000002500  PEXP_NCB     0x00011F0000012500  NCB
SLI_PKT16_INSTR_BADDR          0x0000000000002900  PEXP_NCB     0x00011F0000012900  NCB
SLI_PKT16_INSTR_BAOFF_DBELL    0x0000000000002D00  PEXP_NCB     0x00011F0000012D00  NCB
SLI_PKT16_INSTR_FIFO_RSIZE     0x0000000000003100  PEXP_NCB     0x00011F0000013100  NCB
SLI_PKT16_INSTR_HEADER         0x0000000000003500  PEXP_NCB     0x00011F0000013500  NCB
SLI_PKT16_OUT_SIZE             0x0000000000000D00  PEXP_NCB     0x00011F0000010D00  NCB
SLI_PKT16_SLIST_BADDR          0x0000000000001500  PEXP_NCB     0x00011F0000011500  NCB
SLI_PKT16_SLIST_BAOFF_DBELL    0x0000000000001900  PEXP_NCB     0x00011F0000011900  NCB
SLI_PKT16_SLIST_FIFO_RSIZE     0x0000000000001D00  PEXP_NCB     0x00011F0000011D00  NCB
SLI_PKT17_CNTS                 0x0000000000002510  PEXP_NCB     0x00011F0000012510  NCB
SLI_PKT17_INSTR_BADDR          0x0000000000002910  PEXP_NCB     0x00011F0000012910  NCB
SLI_PKT17_INSTR_BAOFF_DBELL    0x0000000000002D10  PEXP_NCB     0x00011F0000012D10  NCB
SLI_PKT17_INSTR_FIFO_RSIZE     0x0000000000003110  PEXP_NCB     0x00011F0000013110  NCB
SLI_PKT17_INSTR_HEADER         0x0000000000003510  PEXP_NCB     0x00011F0000013510  NCB
SLI_PKT17_OUT_SIZE             0x0000000000000D10  PEXP_NCB     0x00011F0000010D10  NCB
SLI_PKT17_SLIST_BADDR          0x0000000000001510  PEXP_NCB     0x00011F0000011510  NCB
SLI_PKT17_SLIST_BAOFF_DBELL    0x0000000000001910  PEXP_NCB     0x00011F0000011910  NCB
SLI_PKT17_SLIST_FIFO_RSIZE     0x0000000000001D10  PEXP_NCB     0x00011F0000011D10  NCB
SLI_PKT18_CNTS                 0x0000000000002520  PEXP_NCB     0x00011F0000012520  NCB
SLI_PKT18_INSTR_BADDR          0x0000000000002920  PEXP_NCB     0x00011F0000012920  NCB
SLI_PKT18_INSTR_BAOFF_DBELL    0x0000000000002D20  PEXP_NCB     0x00011F0000012D20  NCB
SLI_PKT18_INSTR_FIFO_RSIZE     0x0000000000003120  PEXP_NCB     0x00011F0000013120  NCB
SLI_PKT18_INSTR_HEADER         0x0000000000003520  PEXP_NCB     0x00011F0000013520  NCB
SLI_PKT18_OUT_SIZE             0x0000000000000D20  PEXP_NCB     0x00011F0000010D20  NCB
SLI_PKT18_SLIST_BADDR          0x0000000000001520  PEXP_NCB     0x00011F0000011520  NCB
SLI_PKT18_SLIST_BAOFF_DBELL    0x0000000000001920  PEXP_NCB     0x00011F0000011920  NCB
SLI_PKT18_SLIST_FIFO_RSIZE     0x0000000000001D20  PEXP_NCB     0x00011F0000011D20  NCB
SLI_PKT19_CNTS                 0x0000000000002530  PEXP_NCB     0x00011F0000012530  NCB
SLI_PKT19_INSTR_BADDR          0x0000000000002930  PEXP_NCB     0x00011F0000012930  NCB
SLI_PKT19_INSTR_BAOFF_DBELL    0x0000000000002D30  PEXP_NCB     0x00011F0000012D30  NCB
SLI_PKT19_INSTR_FIFO_RSIZE     0x0000000000003130  PEXP_NCB     0x00011F0000013130  NCB
SLI_PKT19_INSTR_HEADER         0x0000000000003530  PEXP_NCB     0x00011F0000013530  NCB
SLI_PKT19_OUT_SIZE             0x0000000000000D30  PEXP_NCB     0x00011F0000010D30  NCB
SLI_PKT19_SLIST_BADDR          0x0000000000001530  PEXP_NCB     0x00011F0000011530  NCB
SLI_PKT19_SLIST_BAOFF_DBELL    0x0000000000001930  PEXP_NCB     0x00011F0000011930  NCB
SLI_PKT19_SLIST_FIFO_RSIZE     0x0000000000001D30  PEXP_NCB     0x00011F0000011D30  NCB
SLI_PKT20_CNTS                 0x0000000000002540  PEXP_NCB     0x00011F0000012540  NCB
SLI_PKT20_INSTR_BADDR          0x0000000000002940  PEXP_NCB     0x00011F0000012940  NCB
SLI_PKT20_INSTR_BAOFF_DBELL    0x0000000000002D40  PEXP_NCB     0x00011F0000012D40  NCB
SLI_PKT20_INSTR_FIFO_RSIZE     0x0000000000003140  PEXP_NCB     0x00011F0000013140  NCB
SLI_PKT20_INSTR_HEADER         0x0000000000003540  PEXP_NCB     0x00011F0000013540  NCB
SLI_PKT20_OUT_SIZE             0x0000000000000D40  PEXP_NCB     0x00011F0000010D40  NCB
SLI_PKT20_SLIST_BADDR          0x0000000000001540  PEXP_NCB     0x00011F0000011540  NCB
SLI_PKT20_SLIST_BAOFF_DBELL    0x0000000000001940  PEXP_NCB     0x00011F0000011940  NCB
SLI_PKT20_SLIST_FIFO_RSIZE     0x0000000000001D40  PEXP_NCB     0x00011F0000011D40  NCB
SLI_PKT21_CNTS                 0x0000000000002550  PEXP_NCB     0x00011F0000012550  NCB
SLI_PKT21_INSTR_BADDR          0x0000000000002950  PEXP_NCB     0x00011F0000012950  NCB
SLI_PKT21_INSTR_BAOFF_DBELL    0x0000000000002D50  PEXP_NCB     0x00011F0000012D50  NCB
SLI_PKT21_INSTR_FIFO_RSIZE     0x0000000000003150  PEXP_NCB     0x00011F0000013150  NCB
SLI_PKT21_INSTR_HEADER         0x0000000000003550  PEXP_NCB     0x00011F0000013550  NCB
SLI_PKT21_OUT_SIZE             0x0000000000000D50  PEXP_NCB     0x00011F0000010D50  NCB
SLI_PKT21_SLIST_BADDR          0x0000000000001550  PEXP_NCB     0x00011F0000011550  NCB
SLI_PKT21_SLIST_BAOFF_DBELL    0x0000000000001950  PEXP_NCB     0x00011F0000011950  NCB
SLI_PKT21_SLIST_FIFO_RSIZE     0x0000000000001D50  PEXP_NCB     0x00011F0000011D50  NCB
SLI_PKT22_CNTS                 0x0000000000002560  PEXP_NCB     0x00011F0000012560  NCB
SLI_PKT22_INSTR_BADDR          0x0000000000002960  PEXP_NCB     0x00011F0000012960  NCB
SLI_PKT22_INSTR_BAOFF_DBELL    0x0000000000002D60  PEXP_NCB     0x00011F0000012D60  NCB
SLI_PKT22_INSTR_FIFO_RSIZE     0x0000000000003160  PEXP_NCB     0x00011F0000013160  NCB
SLI_PKT22_INSTR_HEADER         0x0000000000003560  PEXP_NCB     0x00011F0000013560  NCB
SLI_PKT22_OUT_SIZE             0x0000000000000D60  PEXP_NCB     0x00011F0000010D60  NCB
SLI_PKT22_SLIST_BADDR          0x0000000000001560  PEXP_NCB     0x00011F0000011560  NCB
SLI_PKT22_SLIST_BAOFF_DBELL    0x0000000000001960  PEXP_NCB     0x00011F0000011960  NCB
SLI_PKT22_SLIST_FIFO_RSIZE     0x0000000000001D60  PEXP_NCB     0x00011F0000011D60  NCB
SLI_PKT23_CNTS                 0x0000000000002570  PEXP_NCB     0x00011F0000012570  NCB
SLI_PKT23_INSTR_BADDR          0x0000000000002970  PEXP_NCB     0x00011F0000012970  NCB
SLI_PKT23_INSTR_BAOFF_DBELL    0x0000000000002D70  PEXP_NCB     0x00011F0000012D70  NCB
SLI_PKT23_INSTR_FIFO_RSIZE     0x0000000000003170  PEXP_NCB     0x00011F0000013170  NCB
SLI_PKT23_INSTR_HEADER         0x0000000000003570  PEXP_NCB     0x00011F0000013570  NCB
SLI_PKT23_OUT_SIZE             0x0000000000000D70  PEXP_NCB     0x00011F0000010D70  NCB
SLI_PKT23_SLIST_BADDR          0x0000000000001570  PEXP_NCB     0x00011F0000011570  NCB
SLI_PKT23_SLIST_BAOFF_DBELL    0x0000000000001970  PEXP_NCB     0x00011F0000011970  NCB
SLI_PKT23_SLIST_FIFO_RSIZE     0x0000000000001D70  PEXP_NCB     0x00011F0000011D70  NCB
SLI_PKT24_CNTS                 0x0000000000002580  PEXP_NCB     0x00011F0000012580  NCB
SLI_PKT24_INSTR_BADDR          0x0000000000002980  PEXP_NCB     0x00011F0000012980  NCB
SLI_PKT24_INSTR_BAOFF_DBELL    0x0000000000002D80  PEXP_NCB     0x00011F0000012D80  NCB
SLI_PKT24_INSTR_FIFO_RSIZE     0x0000000000003180  PEXP_NCB     0x00011F0000013180  NCB
SLI_PKT24_INSTR_HEADER         0x0000000000003580  PEXP_NCB     0x00011F0000013580  NCB
SLI_PKT24_OUT_SIZE             0x0000000000000D80  PEXP_NCB     0x00011F0000010D80  NCB
SLI_PKT24_SLIST_BADDR          0x0000000000001580  PEXP_NCB     0x00011F0000011580  NCB
SLI_PKT24_SLIST_BAOFF_DBELL    0x0000000000001980  PEXP_NCB     0x00011F0000011980  NCB
SLI_PKT24_SLIST_FIFO_RSIZE     0x0000000000001D80  PEXP_NCB     0x00011F0000011D80  NCB
SLI_PKT25_CNTS                 0x0000000000002590  PEXP_NCB     0x00011F0000012590  NCB
SLI_PKT25_INSTR_BADDR          0x0000000000002990  PEXP_NCB     0x00011F0000012990  NCB
SLI_PKT25_INSTR_BAOFF_DBELL    0x0000000000002D90  PEXP_NCB     0x00011F0000012D90  NCB
SLI_PKT25_INSTR_FIFO_RSIZE     0x0000000000003190  PEXP_NCB     0x00011F0000013190  NCB
SLI_PKT25_INSTR_HEADER         0x0000000000003590  PEXP_NCB     0x00011F0000013590  NCB
SLI_PKT25_OUT_SIZE             0x0000000000000D90  PEXP_NCB     0x00011F0000010D90  NCB
SLI_PKT25_SLIST_BADDR          0x0000000000001590  PEXP_NCB     0x00011F0000011590  NCB
SLI_PKT25_SLIST_BAOFF_DBELL    0x0000000000001990  PEXP_NCB     0x00011F0000011990  NCB
SLI_PKT25_SLIST_FIFO_RSIZE     0x0000000000001D90  PEXP_NCB     0x00011F0000011D90  NCB
SLI_PKT26_CNTS                 0x00000000000025A0  PEXP_NCB     0x00011F00000125A0  NCB
SLI_PKT26_INSTR_BADDR          0x00000000000029A0  PEXP_NCB     0x00011F00000129A0  NCB
SLI_PKT26_INSTR_BAOFF_DBELL    0x0000000000002DA0  PEXP_NCB     0x00011F0000012DA0  NCB
SLI_PKT26_INSTR_FIFO_RSIZE     0x00000000000031A0  PEXP_NCB     0x00011F00000131A0  NCB
SLI_PKT26_INSTR_HEADER         0x00000000000035A0  PEXP_NCB     0x00011F00000135A0  NCB
SLI_PKT26_OUT_SIZE             0x0000000000000DA0  PEXP_NCB     0x00011F0000010DA0  NCB
SLI_PKT26_SLIST_BADDR          0x00000000000015A0  PEXP_NCB     0x00011F00000115A0  NCB
SLI_PKT26_SLIST_BAOFF_DBELL    0x00000000000019A0  PEXP_NCB     0x00011F00000119A0  NCB
SLI_PKT26_SLIST_FIFO_RSIZE     0x0000000000001DA0  PEXP_NCB     0x00011F0000011DA0  NCB
SLI_PKT27_CNTS                 0x00000000000025B0  PEXP_NCB     0x00011F00000125B0  NCB
SLI_PKT27_INSTR_BADDR          0x00000000000029B0  PEXP_NCB     0x00011F00000129B0  NCB
SLI_PKT27_INSTR_BAOFF_DBELL    0x0000000000002DB0  PEXP_NCB     0x00011F0000012DB0  NCB
SLI_PKT27_INSTR_FIFO_RSIZE     0x00000000000031B0  PEXP_NCB     0x00011F00000131B0  NCB
SLI_PKT27_INSTR_HEADER         0x00000000000035B0  PEXP_NCB     0x00011F00000135B0  NCB
SLI_PKT27_OUT_SIZE             0x0000000000000DB0  PEXP_NCB     0x00011F0000010DB0  NCB
SLI_PKT27_SLIST_BADDR          0x00000000000015B0  PEXP_NCB     0x00011F00000115B0  NCB
SLI_PKT27_SLIST_BAOFF_DBELL    0x00000000000019B0  PEXP_NCB     0x00011F00000119B0  NCB
SLI_PKT27_SLIST_FIFO_RSIZE     0x0000000000001DB0  PEXP_NCB     0x00011F0000011DB0  NCB
SLI_PKT28_CNTS                 0x00000000000025C0  PEXP_NCB     0x00011F00000125C0  NCB
SLI_PKT28_INSTR_BADDR          0x00000000000029C0  PEXP_NCB     0x00011F00000129C0  NCB
SLI_PKT28_INSTR_BAOFF_DBELL    0x0000000000002DC0  PEXP_NCB     0x00011F0000012DC0  NCB
SLI_PKT28_INSTR_FIFO_RSIZE     0x00000000000031C0  PEXP_NCB     0x00011F00000131C0  NCB
SLI_PKT28_INSTR_HEADER         0x00000000000035C0  PEXP_NCB     0x00011F00000135C0  NCB
SLI_PKT28_OUT_SIZE             0x0000000000000DC0  PEXP_NCB     0x00011F0000010DC0  NCB
SLI_PKT28_SLIST_BADDR          0x00000000000015C0  PEXP_NCB     0x00011F00000115C0  NCB
SLI_PKT28_SLIST_BAOFF_DBELL    0x00000000000019C0  PEXP_NCB     0x00011F00000119C0  NCB
SLI_PKT28_SLIST_FIFO_RSIZE     0x0000000000001DC0  PEXP_NCB     0x00011F0000011DC0  NCB
SLI_PKT29_CNTS                 0x00000000000025D0  PEXP_NCB     0x00011F00000125D0  NCB
SLI_PKT29_INSTR_BADDR          0x00000000000029D0  PEXP_NCB     0x00011F00000129D0  NCB
SLI_PKT29_INSTR_BAOFF_DBELL    0x0000000000002DD0  PEXP_NCB     0x00011F0000012DD0  NCB
SLI_PKT29_INSTR_FIFO_RSIZE     0x00000000000031D0  PEXP_NCB     0x00011F00000131D0  NCB
SLI_PKT29_INSTR_HEADER         0x00000000000035D0  PEXP_NCB     0x00011F00000135D0  NCB
SLI_PKT29_OUT_SIZE             0x0000000000000DD0  PEXP_NCB     0x00011F0000010DD0  NCB
SLI_PKT29_SLIST_BADDR          0x00000000000015D0  PEXP_NCB     0x00011F00000115D0  NCB
SLI_PKT29_SLIST_BAOFF_DBELL    0x00000000000019D0  PEXP_NCB     0x00011F00000119D0  NCB
SLI_PKT29_SLIST_FIFO_RSIZE     0x0000000000001DD0  PEXP_NCB     0x00011F0000011DD0  NCB
SLI_PKT30_CNTS                 0x00000000000025E0  PEXP_NCB     0x00011F00000125E0  NCB
SLI_PKT30_INSTR_BADDR          0x00000000000029E0  PEXP_NCB     0x00011F00000129E0  NCB
SLI_PKT30_INSTR_BAOFF_DBELL    0x0000000000002DE0  PEXP_NCB     0x00011F0000012DE0  NCB
SLI_PKT30_INSTR_FIFO_RSIZE     0x00000000000031E0  PEXP_NCB     0x00011F00000131E0  NCB
SLI_PKT30_INSTR_HEADER         0x00000000000035E0  PEXP_NCB     0x00011F00000135E0  NCB
SLI_PKT30_OUT_SIZE             0x0000000000000DE0  PEXP_NCB     0x00011F0000010DE0  NCB
SLI_PKT30_SLIST_BADDR          0x00000000000015E0  PEXP_NCB     0x00011F00000115E0  NCB
SLI_PKT30_SLIST_BAOFF_DBELL    0x00000000000019E0  PEXP_NCB     0x00011F00000119E0  NCB
SLI_PKT30_SLIST_FIFO_RSIZE     0x0000000000001DE0  PEXP_NCB     0x00011F0000011DE0  NCB
SLI_PKT31_CNTS                 0x00000000000025F0  PEXP_NCB     0x00011F00000125F0  NCB
SLI_PKT31_INSTR_BADDR          0x00000000000029F0  PEXP_NCB     0x00011F00000129F0  NCB
SLI_PKT31_INSTR_BAOFF_DBELL    0x0000000000002DF0  PEXP_NCB     0x00011F0000012DF0  NCB
SLI_PKT31_INSTR_FIFO_RSIZE     0x00000000000031F0  PEXP_NCB     0x00011F00000131F0  NCB
SLI_PKT31_INSTR_HEADER         0x00000000000035F0  PEXP_NCB     0x00011F00000135F0  NCB
SLI_PKT31_OUT_SIZE             0x0000000000000DF0  PEXP_NCB     0x00011F0000010DF0  NCB
SLI_PKT31_SLIST_BADDR          0x00000000000015F0  PEXP_NCB     0x00011F00000115F0  NCB
SLI_PKT31_SLIST_BAOFF_DBELL    0x00000000000019F0  PEXP_NCB     0x00011F00000119F0  NCB
SLI_PKT31_SLIST_FIFO_RSIZE     0x0000000000001DF0  PEXP_NCB     0x00011F0000011DF0  NCB
SLI_PKT_CNT_INT                0x0000000000001130  PEXP_NCB     0x00011F0000011130  NCB
SLI_PKT_CNT_INT_ENB            0x0000000000001150  PEXP_NCB     0x00011F0000011150  NCB
SLI_PKT_CTL                    0x0000000000001220  PEXP_NCB     0x00011F0000011220  NCB
SLI_PKT_DATA_OUT_ES            0x00000000000010B0  PEXP_NCB     0x00011F00000110B0  NCB
SLI_PKT_DATA_OUT_NS            0x00000000000010A0  PEXP_NCB     0x00011F00000110A0  NCB
SLI_PKT_DATA_OUT_ROR           0x0000000000001090  PEXP_NCB     0x00011F0000011090  NCB
SLI_PKT_DPADDR                 0x0000000000001080  PEXP_NCB     0x00011F0000011080  NCB
SLI_PKT_INPUT_CONTROL          0x0000000000001170  PEXP_NCB     0x00011F0000011170  NCB
SLI_PKT_INSTR_ENB              0x0000000000001000  PEXP_NCB     0x00011F0000011000  NCB
SLI_PKT_INSTR_RD_SIZE          0x00000000000011A0  PEXP_NCB     0x00011F00000111A0  NCB
SLI_PKT_INSTR_SIZE             0x0000000000001020  PEXP_NCB     0x00011F0000011020  NCB
SLI_PKT_INT_LEVELS             0x0000000000001120  PEXP_NCB     0x00011F0000011120  NCB
SLI_PKT_IN_DONE0_CNTS          0x0000000000002000  PEXP_NCB     0x00011F0000012000  NCB
SLI_PKT_IN_DONE1_CNTS          0x0000000000002010  PEXP_NCB     0x00011F0000012010  NCB
SLI_PKT_IN_DONE2_CNTS          0x0000000000002020  PEXP_NCB     0x00011F0000012020  NCB
SLI_PKT_IN_DONE3_CNTS          0x0000000000002030  PEXP_NCB     0x00011F0000012030  NCB
SLI_PKT_IN_DONE4_CNTS          0x0000000000002040  PEXP_NCB     0x00011F0000012040  NCB
SLI_PKT_IN_DONE5_CNTS          0x0000000000002050  PEXP_NCB     0x00011F0000012050  NCB
SLI_PKT_IN_DONE6_CNTS          0x0000000000002060  PEXP_NCB     0x00011F0000012060  NCB
SLI_PKT_IN_DONE7_CNTS          0x0000000000002070  PEXP_NCB     0x00011F0000012070  NCB
SLI_PKT_IN_DONE8_CNTS          0x0000000000002080  PEXP_NCB     0x00011F0000012080  NCB
SLI_PKT_IN_DONE9_CNTS          0x0000000000002090  PEXP_NCB     0x00011F0000012090  NCB
SLI_PKT_IN_DONE10_CNTS         0x00000000000020A0  PEXP_NCB     0x00011F00000120A0  NCB
SLI_PKT_IN_DONE11_CNTS         0x00000000000020B0  PEXP_NCB     0x00011F00000120B0  NCB
SLI_PKT_IN_DONE12_CNTS         0x00000000000020C0  PEXP_NCB     0x00011F00000120C0  NCB
SLI_PKT_IN_DONE13_CNTS         0x00000000000020D0  PEXP_NCB     0x00011F00000120D0  NCB
SLI_PKT_IN_DONE14_CNTS         0x00000000000020E0  PEXP_NCB     0x00011F00000120E0  NCB
SLI_PKT_IN_DONE15_CNTS         0x00000000000020F0  PEXP_NCB     0x00011F00000120F0  NCB
SLI_PKT_IN_DONE16_CNTS         0x0000000000002100  PEXP_NCB     0x00011F0000012100  NCB
SLI_PKT_IN_DONE17_CNTS         0x0000000000002110  PEXP_NCB     0x00011F0000012110  NCB
SLI_PKT_IN_DONE18_CNTS         0x0000000000002120  PEXP_NCB     0x00011F0000012120  NCB
SLI_PKT_IN_DONE19_CNTS         0x0000000000002130  PEXP_NCB     0x00011F0000012130  NCB
SLI_PKT_IN_DONE20_CNTS         0x0000000000002140  PEXP_NCB     0x00011F0000012140  NCB
SLI_PKT_IN_DONE21_CNTS         0x0000000000002150  PEXP_NCB     0x00011F0000012150  NCB
SLI_PKT_IN_DONE22_CNTS         0x0000000000002160  PEXP_NCB     0x00011F0000012160  NCB
SLI_PKT_IN_DONE23_CNTS         0x0000000000002170  PEXP_NCB     0x00011F0000012170  NCB
SLI_PKT_IN_DONE24_CNTS         0x0000000000002180  PEXP_NCB     0x00011F0000012180  NCB
SLI_PKT_IN_DONE25_CNTS         0x0000000000002190  PEXP_NCB     0x00011F0000012190  NCB
SLI_PKT_IN_DONE26_CNTS         0x00000000000021A0  PEXP_NCB     0x00011F00000121A0  NCB
SLI_PKT_IN_DONE27_CNTS         0x00000000000021B0  PEXP_NCB     0x00011F00000121B0  NCB
SLI_PKT_IN_DONE28_CNTS         0x00000000000021C0  PEXP_NCB     0x00011F00000121C0  NCB
SLI_PKT_IN_DONE29_CNTS         0x00000000000021D0  PEXP_NCB     0x00011F00000121D0  NCB
SLI_PKT_IN_DONE30_CNTS         0x00000000000021E0  PEXP_NCB     0x00011F00000121E0  NCB
SLI_PKT_IN_DONE31_CNTS         0x00000000000021F0  PEXP_NCB     0x00011F00000121F0  NCB
SLI_PKT_IN_INSTR_COUNTS        0x0000000000001200  PEXP_NCB     0x00011F0000011200  NCB
SLI_PKT_IN_PCIE_PORT           0x00000000000011B0  PEXP_NCB     0x00011F00000111B0  NCB
SLI_PKT_IPTR                   0x0000000000001070  PEXP_NCB     0x00011F0000011070  NCB
SLI_PKT_OUTPUT_WMARK           0x0000000000001180  PEXP_NCB     0x00011F0000011180  NCB
SLI_PKT_OUT_BMODE              0x00000000000010D0  PEXP_NCB     0x00011F00000110D0  NCB
SLI_PKT_OUT_BP_EN              0x0000000000001240  PEXP_NCB     0x00011F0000011240  NCB
SLI_PKT_OUT_ENB                0x0000000000001010  PEXP_NCB     0x00011F0000011010  NCB
SLI_PKT_PCIE_PORT              0x00000000000010E0  PEXP_NCB     0x00011F00000110E0  NCB
SLI_PKT_PORT_IN_RST            0x00000000000011F0  PEXP_NCB     0x00011F00000111F0  NCB
SLI_PKT_SLIST_ES               0x0000000000001050  PEXP_NCB     0x00011F0000011050  NCB
SLI_PKT_SLIST_NS               0x0000000000001040  PEXP_NCB     0x00011F0000011040  NCB
SLI_PKT_SLIST_ROR              0x0000000000001030  PEXP_NCB     0x00011F0000011030  NCB
SLI_PKT_TIME_INT               0x0000000000001140  PEXP_NCB     0x00011F0000011140  NCB
SLI_PKT_TIME_INT_ENB           0x0000000000001160  PEXP_NCB     0x00011F0000011160  NCB
SLI_PORT0_PKIND                0x0000000000000800  PEXP_NCB     0x00011F0000010800  NCB
SLI_PORT1_PKIND                0x0000000000000810  PEXP_NCB     0x00011F0000010810  NCB
SLI_PORT2_PKIND                0x0000000000000820  PEXP_NCB     0x00011F0000010820  NCB
SLI_PORT3_PKIND                0x0000000000000830  PEXP_NCB     0x00011F0000010830  NCB
SLI_PORT4_PKIND                0x0000000000000840  PEXP_NCB     0x00011F0000010840  NCB
SLI_PORT5_PKIND                0x0000000000000850  PEXP_NCB     0x00011F0000010850  NCB
SLI_PORT6_PKIND                0x0000000000000860  PEXP_NCB     0x00011F0000010860  NCB
SLI_PORT7_PKIND                0x0000000000000870  PEXP_NCB     0x00011F0000010870  NCB
SLI_PORT8_PKIND                0x0000000000000880  PEXP_NCB     0x00011F0000010880  NCB
SLI_PORT9_PKIND                0x0000000000000890  PEXP_NCB     0x00011F0000010890  NCB
SLI_PORT10_PKIND               0x00000000000008A0  PEXP_NCB     0x00011F00000108A0  NCB
SLI_PORT11_PKIND               0x00000000000008B0  PEXP_NCB     0x00011F00000108B0  NCB
SLI_PORT12_PKIND               0x00000000000008C0  PEXP_NCB     0x00011F00000108C0  NCB
SLI_PORT13_PKIND               0x00000000000008D0  PEXP_NCB     0x00011F00000108D0  NCB
SLI_PORT14_PKIND               0x00000000000008E0  PEXP_NCB     0x00011F00000108E0  NCB
SLI_PORT15_PKIND               0x00000000000008F0  PEXP_NCB     0x00011F00000108F0  NCB
SLI_PORT16_PKIND               0x0000000000000900  PEXP_NCB     0x00011F0000010900  NCB
SLI_PORT17_PKIND               0x0000000000000910  PEXP_NCB     0x00011F0000010910  NCB
SLI_PORT18_PKIND               0x0000000000000920  PEXP_NCB     0x00011F0000010920  NCB
SLI_PORT19_PKIND               0x0000000000000930  PEXP_NCB     0x00011F0000010930  NCB
SLI_PORT20_PKIND               0x0000000000000940  PEXP_NCB     0x00011F0000010940  NCB
SLI_PORT21_PKIND               0x0000000000000950  PEXP_NCB     0x00011F0000010950  NCB
SLI_PORT22_PKIND               0x0000000000000960  PEXP_NCB     0x00011F0000010960  NCB
SLI_PORT23_PKIND               0x0000000000000970  PEXP_NCB     0x00011F0000010970  NCB
SLI_PORT24_PKIND               0x0000000000000980  PEXP_NCB     0x00011F0000010980  NCB
SLI_PORT25_PKIND               0x0000000000000990  PEXP_NCB     0x00011F0000010990  NCB
SLI_PORT26_PKIND               0x00000000000009A0  PEXP_NCB     0x00011F00000109A0  NCB
SLI_PORT27_PKIND               0x00000000000009B0  PEXP_NCB     0x00011F00000109B0  NCB
SLI_PORT28_PKIND               0x00000000000009C0  PEXP_NCB     0x00011F00000109C0  NCB
SLI_PORT29_PKIND               0x00000000000009D0  PEXP_NCB     0x00011F00000109D0  NCB
SLI_PORT30_PKIND               0x00000000000009E0  PEXP_NCB     0x00011F00000109E0  NCB
SLI_PORT31_PKIND               0x00000000000009F0  PEXP_NCB     0x00011F00000109F0  NCB
SLI_S2M_PORT0_CTL              0x0000000000003D80  PEXP_NCB     0x00011F0000013D80  NCB
SLI_S2M_PORT1_CTL              0x0000000000003D90  PEXP_NCB     0x00011F0000013D90  NCB
SLI_SCRATCH_1                  0x00000000000003C0  PEXP_NCB     0x00011F00000103C0  NCB
SLI_SCRATCH_2                  0x00000000000003D0  PEXP_NCB     0x00011F00000103D0  NCB
SLI_STATE1                     0x0000000000000620  PEXP_NCB     0x00011F0000010620  NCB
SLI_STATE2                     0x0000000000000630  PEXP_NCB     0x00011F0000010630  NCB
SLI_STATE3                     0x0000000000000640  PEXP_NCB     0x00011F0000010640  NCB
SLI_TX_PIPE                    0x0000000000001230  PEXP_NCB     0x00011F0000011230  NCB
SLI_WINDOW_CTL                 0x00000000000002E0  PEXP_NCB     0x00011F00000102E0  NCB
SLI_WIN_RD_ADDR                0x0000000000000010  PEXP
SLI_WIN_RD_DATA                0x0000000000000040  PEXP
SLI_WIN_WR_ADDR                0x0000000000000000  PEXP
SLI_WIN_WR_DATA                0x0000000000000020  PEXP
SLI_WIN_WR_MASK                0x0000000000000030  PEXP
SMI0_CLK                      0x0001180000003818  RSL
SMI0_CMD                      0x0001180000003800  RSL
SMI0_EN                       0x0001180000003820  RSL
SMI0_RD_DAT                   0x0001180000003810  RSL
SMI0_WR_DAT                   0x0001180000003808  RSL
SMI1_CLK                      0x0001180000003898  RSL
SMI1_CMD                      0x0001180000003880  RSL
SMI1_EN                       0x00011800000038A0  RSL
SMI1_RD_DAT                   0x0001180000003890  RSL
SMI1_WR_DAT                   0x0001180000003888  RSL
SMI2_CLK                      0x0001180000003918  RSL
SMI2_CMD                      0x0001180000003900  RSL
SMI2_EN                       0x0001180000003920  RSL
SMI2_RD_DAT                   0x0001180000003910  RSL
SMI2_WR_DAT                   0x0001180000003908  RSL
SMI3_CLK                      0x0001180000003998  RSL
SMI3_CMD                      0x0001180000003980  RSL
SMI3_EN                       0x00011800000039A0  RSL
SMI3_RD_DAT                   0x0001180000003990  RSL
SMI3_WR_DAT                   0x0001180000003988  RSL
SMI_DRV_CTL                    0x0001180000001828  RSL
SSO_BIST_STAT                  0x0001670000001078  NCB
SSO_CFG                        0x0001670000001088  NCB
SSO_DS_PC                      0x0001670000001070  NCB
SSO_ERR                        0x0001670000001038  NCB
SSO_ERR_ENB                    0x0001670000001030  NCB
SSO_FIDX_ECC_CTL               0x00016700000010D0  NCB
SSO_FIDX_ECC_ST                0x00016700000010D8  NCB
SSO_FPAGE_CNT                  0x0001670000001090  NCB
SSO_GWE_CFG                    0x0001670000001098  NCB
SSO_IDX_ECC_CTL                0x00016700000010C0  NCB
SSO_IDX_ECC_ST                 0x00016700000010C8  NCB
SSO_IQ_CNT0                    0x0001670000009000  NCB
SSO_IQ_CNT1                    0x0001670000009008  NCB
SSO_IQ_CNT2                    0x0001670000009010  NCB
SSO_IQ_CNT3                    0x0001670000009018  NCB
SSO_IQ_CNT4                    0x0001670000009020  NCB
SSO_IQ_CNT5                    0x0001670000009028  NCB
SSO_IQ_CNT6                    0x0001670000009030  NCB
SSO_IQ_CNT7                    0x0001670000009038  NCB
SSO_IQ_COM_CNT                 0x0001670000001058  NCB
SSO_IQ_INT                     0x0001670000001048  NCB
SSO_IQ_INT_EN                  0x0001670000001050  NCB
SSO_IQ_THR0                    0x000167000000A000  NCB
SSO_IQ_THR1                    0x000167000000A008  NCB
SSO_IQ_THR2                    0x000167000000A010  NCB
SSO_IQ_THR3                    0x000167000000A018  NCB
SSO_IQ_THR4                    0x000167000000A020  NCB
SSO_IQ_THR5                    0x000167000000A028  NCB
SSO_IQ_THR6                    0x000167000000A030  NCB
SSO_IQ_THR7                    0x000167000000A038  NCB
SSO_NOS_CNT                    0x0001670000001040  NCB
SSO_NW_TIM                     0x0001670000001028  NCB
SSO_OTH_ECC_CTL                0x00016700000010B0  NCB
SSO_OTH_ECC_ST                 0x00016700000010B8  NCB
SSO_PND_ECC_CTL                0x00016700000010A0  NCB
SSO_PND_ECC_ST                 0x00016700000010A8  NCB
SSO_PP0_GRP_MSK                0x0001670000006000  NCB
SSO_PP0_QOS_PRI                0x0001670000003000  NCB
SSO_PP1_GRP_MSK                0x0001670000006008  NCB
SSO_PP1_QOS_PRI                0x0001670000003008  NCB
SSO_PP2_GRP_MSK                0x0001670000006010  NCB
SSO_PP2_QOS_PRI                0x0001670000003010  NCB
SSO_PP3_GRP_MSK                0x0001670000006018  NCB
SSO_PP3_QOS_PRI                0x0001670000003018  NCB
SSO_PP4_GRP_MSK                0x0001670000006020  NCB
SSO_PP4_QOS_PRI                0x0001670000003020  NCB
SSO_PP5_GRP_MSK                0x0001670000006028  NCB
SSO_PP5_QOS_PRI                0x0001670000003028  NCB
SSO_PP6_GRP_MSK                0x0001670000006030  NCB
SSO_PP6_QOS_PRI                0x0001670000003030  NCB
SSO_PP7_GRP_MSK                0x0001670000006038  NCB
SSO_PP7_QOS_PRI                0x0001670000003038  NCB
SSO_PP8_GRP_MSK                0x0001670000006040  NCB
SSO_PP8_QOS_PRI                0x0001670000003040  NCB
SSO_PP9_GRP_MSK                0x0001670000006048  NCB
SSO_PP9_QOS_PRI                0x0001670000003048  NCB
SSO_PP10_GRP_MSK               0x0001670000006050  NCB
SSO_PP10_QOS_PRI               0x0001670000003050  NCB
SSO_PP11_GRP_MSK               0x0001670000006058  NCB
SSO_PP11_QOS_PRI               0x0001670000003058  NCB
SSO_PP12_GRP_MSK               0x0001670000006060  NCB
SSO_PP12_QOS_PRI               0x0001670000003060  NCB
SSO_PP13_GRP_MSK               0x0001670000006068  NCB
SSO_PP13_QOS_PRI               0x0001670000003068  NCB
SSO_PP14_GRP_MSK               0x0001670000006070  NCB
SSO_PP14_QOS_PRI               0x0001670000003070  NCB
SSO_PP15_GRP_MSK               0x0001670000006078  NCB
SSO_PP15_QOS_PRI               0x0001670000003078  NCB
SSO_PP16_GRP_MSK               0x0001670000006080  NCB
SSO_PP16_QOS_PRI               0x0001670000003080  NCB
SSO_PP17_GRP_MSK               0x0001670000006088  NCB
SSO_PP17_QOS_PRI               0x0001670000003088  NCB
SSO_PP18_GRP_MSK               0x0001670000006090  NCB
SSO_PP18_QOS_PRI               0x0001670000003090  NCB
SSO_PP19_GRP_MSK               0x0001670000006098  NCB
SSO_PP19_QOS_PRI               0x0001670000003098  NCB
SSO_PP20_GRP_MSK               0x00016700000060A0  NCB
SSO_PP20_QOS_PRI               0x00016700000030A0  NCB
SSO_PP21_GRP_MSK               0x00016700000060A8  NCB
SSO_PP21_QOS_PRI               0x00016700000030A8  NCB
SSO_PP22_GRP_MSK               0x00016700000060B0  NCB
SSO_PP22_QOS_PRI               0x00016700000030B0  NCB
SSO_PP23_GRP_MSK               0x00016700000060B8  NCB
SSO_PP23_QOS_PRI               0x00016700000030B8  NCB
SSO_PP24_GRP_MSK               0x00016700000060C0  NCB
SSO_PP24_QOS_PRI               0x00016700000030C0  NCB
SSO_PP25_GRP_MSK               0x00016700000060C8  NCB
SSO_PP25_QOS_PRI               0x00016700000030C8  NCB
SSO_PP26_GRP_MSK               0x00016700000060D0  NCB
SSO_PP26_QOS_PRI               0x00016700000030D0  NCB
SSO_PP27_GRP_MSK               0x00016700000060D8  NCB
SSO_PP27_QOS_PRI               0x00016700000030D8  NCB
SSO_PP28_GRP_MSK               0x00016700000060E0  NCB
SSO_PP28_QOS_PRI               0x00016700000030E0  NCB
SSO_PP29_GRP_MSK               0x00016700000060E8  NCB
SSO_PP29_QOS_PRI               0x00016700000030E8  NCB
SSO_PP30_GRP_MSK               0x00016700000060F0  NCB
SSO_PP30_QOS_PRI               0x00016700000030F0  NCB
SSO_PP31_GRP_MSK               0x00016700000060F8  NCB
SSO_PP31_QOS_PRI               0x00016700000030F8  NCB
SSO_PP_STRICT                  0x00016700000010E0  NCB
SSO_QOS0_RND                   0x0001670000002000  NCB
SSO_QOS1_RND                   0x0001670000002008  NCB
SSO_QOS2_RND                   0x0001670000002010  NCB
SSO_QOS3_RND                   0x0001670000002018  NCB
SSO_QOS4_RND                   0x0001670000002020  NCB
SSO_QOS5_RND                   0x0001670000002028  NCB
SSO_QOS6_RND                   0x0001670000002030  NCB
SSO_QOS7_RND                   0x0001670000002038  NCB
SSO_QOS_THR0                   0x000167000000B000  NCB
SSO_QOS_THR1                   0x000167000000B008  NCB
SSO_QOS_THR2                   0x000167000000B010  NCB
SSO_QOS_THR3                   0x000167000000B018  NCB
SSO_QOS_THR4                   0x000167000000B020  NCB
SSO_QOS_THR5                   0x000167000000B028  NCB
SSO_QOS_THR6                   0x000167000000B030  NCB
SSO_QOS_THR7                   0x000167000000B038  NCB
SSO_QOS_WE                     0x0001670000001080  NCB
SSO_RWQ_HEAD_PTR0              0x000167000000C000  NCB
SSO_RWQ_HEAD_PTR1              0x000167000000C008  NCB
SSO_RWQ_HEAD_PTR2              0x000167000000C010  NCB
SSO_RWQ_HEAD_PTR3              0x000167000000C018  NCB
SSO_RWQ_HEAD_PTR4              0x000167000000C020  NCB
SSO_RWQ_HEAD_PTR5              0x000167000000C028  NCB
SSO_RWQ_HEAD_PTR6              0x000167000000C030  NCB
SSO_RWQ_HEAD_PTR7              0x000167000000C038  NCB
SSO_RWQ_POP_FPTR               0x000167000000C408  NCB
SSO_RWQ_PSH_FPTR               0x000167000000C400  NCB
SSO_RWQ_TAIL_PTR0              0x000167000000C200  NCB
SSO_RWQ_TAIL_PTR1              0x000167000000C208  NCB
SSO_RWQ_TAIL_PTR2              0x000167000000C210  NCB
SSO_RWQ_TAIL_PTR3              0x000167000000C218  NCB
SSO_RWQ_TAIL_PTR4              0x000167000000C220  NCB
SSO_RWQ_TAIL_PTR5              0x000167000000C228  NCB
SSO_RWQ_TAIL_PTR6              0x000167000000C230  NCB
SSO_RWQ_TAIL_PTR7              0x000167000000C238  NCB
SSO_TS_PC                      0x0001670000001068  NCB
SSO_WA_COM_PC                  0x0001670000001060  NCB
SSO_WA_PC0                     0x0001670000005000  NCB
SSO_WA_PC1                     0x0001670000005008  NCB
SSO_WA_PC2                     0x0001670000005010  NCB
SSO_WA_PC3                     0x0001670000005018  NCB
SSO_WA_PC4                     0x0001670000005020  NCB
SSO_WA_PC5                     0x0001670000005028  NCB
SSO_WA_PC6                     0x0001670000005030  NCB
SSO_WA_PC7                     0x0001670000005038  NCB
SSO_WQ_INT                     0x0001670000001000  NCB
SSO_WQ_INT_CNT0                0x0001670000008000  NCB
SSO_WQ_INT_CNT1                0x0001670000008008  NCB
SSO_WQ_INT_CNT2                0x0001670000008010  NCB
SSO_WQ_INT_CNT3                0x0001670000008018  NCB
SSO_WQ_INT_CNT4                0x0001670000008020  NCB
SSO_WQ_INT_CNT5                0x0001670000008028  NCB
SSO_WQ_INT_CNT6                0x0001670000008030  NCB
SSO_WQ_INT_CNT7                0x0001670000008038  NCB
SSO_WQ_INT_CNT8                0x0001670000008040  NCB
SSO_WQ_INT_CNT9                0x0001670000008048  NCB
SSO_WQ_INT_CNT10               0x0001670000008050  NCB
SSO_WQ_INT_CNT11               0x0001670000008058  NCB
SSO_WQ_INT_CNT12               0x0001670000008060  NCB
SSO_WQ_INT_CNT13               0x0001670000008068  NCB
SSO_WQ_INT_CNT14               0x0001670000008070  NCB
SSO_WQ_INT_CNT15               0x0001670000008078  NCB
SSO_WQ_INT_CNT16               0x0001670000008080  NCB
SSO_WQ_INT_CNT17               0x0001670000008088  NCB
SSO_WQ_INT_CNT18               0x0001670000008090  NCB
SSO_WQ_INT_CNT19               0x0001670000008098  NCB
SSO_WQ_INT_CNT20               0x00016700000080A0  NCB
SSO_WQ_INT_CNT21               0x00016700000080A8  NCB
SSO_WQ_INT_CNT22               0x00016700000080B0  NCB
SSO_WQ_INT_CNT23               0x00016700000080B8  NCB
SSO_WQ_INT_CNT24               0x00016700000080C0  NCB
SSO_WQ_INT_CNT25               0x00016700000080C8  NCB
SSO_WQ_INT_CNT26               0x00016700000080D0  NCB
SSO_WQ_INT_CNT27               0x00016700000080D8  NCB
SSO_WQ_INT_CNT28               0x00016700000080E0  NCB
SSO_WQ_INT_CNT29               0x00016700000080E8  NCB
SSO_WQ_INT_CNT30               0x00016700000080F0  NCB
SSO_WQ_INT_CNT31               0x00016700000080F8  NCB
SSO_WQ_INT_CNT32               0x0001670000008100  NCB
SSO_WQ_INT_CNT33               0x0001670000008108  NCB
SSO_WQ_INT_CNT34               0x0001670000008110  NCB
SSO_WQ_INT_CNT35               0x0001670000008118  NCB
SSO_WQ_INT_CNT36               0x0001670000008120  NCB
SSO_WQ_INT_CNT37               0x0001670000008128  NCB
SSO_WQ_INT_CNT38               0x0001670000008130  NCB
SSO_WQ_INT_CNT39               0x0001670000008138  NCB
SSO_WQ_INT_CNT40               0x0001670000008140  NCB
SSO_WQ_INT_CNT41               0x0001670000008148  NCB
SSO_WQ_INT_CNT42               0x0001670000008150  NCB
SSO_WQ_INT_CNT43               0x0001670000008158  NCB
SSO_WQ_INT_CNT44               0x0001670000008160  NCB
SSO_WQ_INT_CNT45               0x0001670000008168  NCB
SSO_WQ_INT_CNT46               0x0001670000008170  NCB
SSO_WQ_INT_CNT47               0x0001670000008178  NCB
SSO_WQ_INT_CNT48               0x0001670000008180  NCB
SSO_WQ_INT_CNT49               0x0001670000008188  NCB
SSO_WQ_INT_CNT50               0x0001670000008190  NCB
SSO_WQ_INT_CNT51               0x0001670000008198  NCB
SSO_WQ_INT_CNT52               0x00016700000081A0  NCB
SSO_WQ_INT_CNT53               0x00016700000081A8  NCB
SSO_WQ_INT_CNT54               0x00016700000081B0  NCB
SSO_WQ_INT_CNT55               0x00016700000081B8  NCB
SSO_WQ_INT_CNT56               0x00016700000081C0  NCB
SSO_WQ_INT_CNT57               0x00016700000081C8  NCB
SSO_WQ_INT_CNT58               0x00016700000081D0  NCB
SSO_WQ_INT_CNT59               0x00016700000081D8  NCB
SSO_WQ_INT_CNT60               0x00016700000081E0  NCB
SSO_WQ_INT_CNT61               0x00016700000081E8  NCB
SSO_WQ_INT_CNT62               0x00016700000081F0  NCB
SSO_WQ_INT_CNT63               0x00016700000081F8  NCB
SSO_WQ_INT_PC                  0x0001670000001020  NCB
SSO_WQ_INT_THR0                0x0001670000007000  NCB
SSO_WQ_INT_THR1                0x0001670000007008  NCB
SSO_WQ_INT_THR2                0x0001670000007010  NCB
SSO_WQ_INT_THR3                0x0001670000007018  NCB
SSO_WQ_INT_THR4                0x0001670000007020  NCB
SSO_WQ_INT_THR5                0x0001670000007028  NCB
SSO_WQ_INT_THR6                0x0001670000007030  NCB
SSO_WQ_INT_THR7                0x0001670000007038  NCB
SSO_WQ_INT_THR8                0x0001670000007040  NCB
SSO_WQ_INT_THR9                0x0001670000007048  NCB
SSO_WQ_INT_THR10               0x0001670000007050  NCB
SSO_WQ_INT_THR11               0x0001670000007058  NCB
SSO_WQ_INT_THR12               0x0001670000007060  NCB
SSO_WQ_INT_THR13               0x0001670000007068  NCB
SSO_WQ_INT_THR14               0x0001670000007070  NCB
SSO_WQ_INT_THR15               0x0001670000007078  NCB
SSO_WQ_INT_THR16               0x0001670000007080  NCB
SSO_WQ_INT_THR17               0x0001670000007088  NCB
SSO_WQ_INT_THR18               0x0001670000007090  NCB
SSO_WQ_INT_THR19               0x0001670000007098  NCB
SSO_WQ_INT_THR20               0x00016700000070A0  NCB
SSO_WQ_INT_THR21               0x00016700000070A8  NCB
SSO_WQ_INT_THR22               0x00016700000070B0  NCB
SSO_WQ_INT_THR23               0x00016700000070B8  NCB
SSO_WQ_INT_THR24               0x00016700000070C0  NCB
SSO_WQ_INT_THR25               0x00016700000070C8  NCB
SSO_WQ_INT_THR26               0x00016700000070D0  NCB
SSO_WQ_INT_THR27               0x00016700000070D8  NCB
SSO_WQ_INT_THR28               0x00016700000070E0  NCB
SSO_WQ_INT_THR29               0x00016700000070E8  NCB
SSO_WQ_INT_THR30               0x00016700000070F0  NCB
SSO_WQ_INT_THR31               0x00016700000070F8  NCB
SSO_WQ_INT_THR32               0x0001670000007100  NCB
SSO_WQ_INT_THR33               0x0001670000007108  NCB
SSO_WQ_INT_THR34               0x0001670000007110  NCB
SSO_WQ_INT_THR35               0x0001670000007118  NCB
SSO_WQ_INT_THR36               0x0001670000007120  NCB
SSO_WQ_INT_THR37               0x0001670000007128  NCB
SSO_WQ_INT_THR38               0x0001670000007130  NCB
SSO_WQ_INT_THR39               0x0001670000007138  NCB
SSO_WQ_INT_THR40               0x0001670000007140  NCB
SSO_WQ_INT_THR41               0x0001670000007148  NCB
SSO_WQ_INT_THR42               0x0001670000007150  NCB
SSO_WQ_INT_THR43               0x0001670000007158  NCB
SSO_WQ_INT_THR44               0x0001670000007160  NCB
SSO_WQ_INT_THR45               0x0001670000007168  NCB
SSO_WQ_INT_THR46               0x0001670000007170  NCB
SSO_WQ_INT_THR47               0x0001670000007178  NCB
SSO_WQ_INT_THR48               0x0001670000007180  NCB
SSO_WQ_INT_THR49               0x0001670000007188  NCB
SSO_WQ_INT_THR50               0x0001670000007190  NCB
SSO_WQ_INT_THR51               0x0001670000007198  NCB
SSO_WQ_INT_THR52               0x00016700000071A0  NCB
SSO_WQ_INT_THR53               0x00016700000071A8  NCB
SSO_WQ_INT_THR54               0x00016700000071B0  NCB
SSO_WQ_INT_THR55               0x00016700000071B8  NCB
SSO_WQ_INT_THR56               0x00016700000071C0  NCB
SSO_WQ_INT_THR57               0x00016700000071C8  NCB
SSO_WQ_INT_THR58               0x00016700000071D0  NCB
SSO_WQ_INT_THR59               0x00016700000071D8  NCB
SSO_WQ_INT_THR60               0x00016700000071E0  NCB
SSO_WQ_INT_THR61               0x00016700000071E8  NCB
SSO_WQ_INT_THR62               0x00016700000071F0  NCB
SSO_WQ_INT_THR63               0x00016700000071F8  NCB
SSO_WQ_IQ_DIS                  0x0001670000001010  NCB
SSO_WS_PC0                     0x0001670000004000  NCB
SSO_WS_PC1                     0x0001670000004008  NCB
SSO_WS_PC2                     0x0001670000004010  NCB
SSO_WS_PC3                     0x0001670000004018  NCB
SSO_WS_PC4                     0x0001670000004020  NCB
SSO_WS_PC5                     0x0001670000004028  NCB
SSO_WS_PC6                     0x0001670000004030  NCB
SSO_WS_PC7                     0x0001670000004038  NCB
SSO_WS_PC8                     0x0001670000004040  NCB
SSO_WS_PC9                     0x0001670000004048  NCB
SSO_WS_PC10                    0x0001670000004050  NCB
SSO_WS_PC11                    0x0001670000004058  NCB
SSO_WS_PC12                    0x0001670000004060  NCB
SSO_WS_PC13                    0x0001670000004068  NCB
SSO_WS_PC14                    0x0001670000004070  NCB
SSO_WS_PC15                    0x0001670000004078  NCB
SSO_WS_PC16                    0x0001670000004080  NCB
SSO_WS_PC17                    0x0001670000004088  NCB
SSO_WS_PC18                    0x0001670000004090  NCB
SSO_WS_PC19                    0x0001670000004098  NCB
SSO_WS_PC20                    0x00016700000040A0  NCB
SSO_WS_PC21                    0x00016700000040A8  NCB
SSO_WS_PC22                    0x00016700000040B0  NCB
SSO_WS_PC23                    0x00016700000040B8  NCB
SSO_WS_PC24                    0x00016700000040C0  NCB
SSO_WS_PC25                    0x00016700000040C8  NCB
SSO_WS_PC26                    0x00016700000040D0  NCB
SSO_WS_PC27                    0x00016700000040D8  NCB
SSO_WS_PC28                    0x00016700000040E0  NCB
SSO_WS_PC29                    0x00016700000040E8  NCB
SSO_WS_PC30                    0x00016700000040F0  NCB
SSO_WS_PC31                    0x00016700000040F8  NCB
SSO_WS_PC32                    0x0001670000004100  NCB
SSO_WS_PC33                    0x0001670000004108  NCB
SSO_WS_PC34                    0x0001670000004110  NCB
SSO_WS_PC35                    0x0001670000004118  NCB
SSO_WS_PC36                    0x0001670000004120  NCB
SSO_WS_PC37                    0x0001670000004128  NCB
SSO_WS_PC38                    0x0001670000004130  NCB
SSO_WS_PC39                    0x0001670000004138  NCB
SSO_WS_PC40                    0x0001670000004140  NCB
SSO_WS_PC41                    0x0001670000004148  NCB
SSO_WS_PC42                    0x0001670000004150  NCB
SSO_WS_PC43                    0x0001670000004158  NCB
SSO_WS_PC44                    0x0001670000004160  NCB
SSO_WS_PC45                    0x0001670000004168  NCB
SSO_WS_PC46                    0x0001670000004170  NCB
SSO_WS_PC47                    0x0001670000004178  NCB
SSO_WS_PC48                    0x0001670000004180  NCB
SSO_WS_PC49                    0x0001670000004188  NCB
SSO_WS_PC50                    0x0001670000004190  NCB
SSO_WS_PC51                    0x0001670000004198  NCB
SSO_WS_PC52                    0x00016700000041A0  NCB
SSO_WS_PC53                    0x00016700000041A8  NCB
SSO_WS_PC54                    0x00016700000041B0  NCB
SSO_WS_PC55                    0x00016700000041B8  NCB
SSO_WS_PC56                    0x00016700000041C0  NCB
SSO_WS_PC57                    0x00016700000041C8  NCB
SSO_WS_PC58                    0x00016700000041D0  NCB
SSO_WS_PC59                    0x00016700000041D8  NCB
SSO_WS_PC60                    0x00016700000041E0  NCB
SSO_WS_PC61                    0x00016700000041E8  NCB
SSO_WS_PC62                    0x00016700000041F0  NCB
SSO_WS_PC63                    0x00016700000041F8  NCB
TIM_BIST_RESULT                0x0001180058000020  RSL
TIM_DBG2                       0x00011800580000A0  RSL
TIM_DBG3                       0x00011800580000A8  RSL
TIM_ECC_CFG                    0x0001180058000018  RSL
TIM_FR_RN_TT                   0x0001180058000010  RSL
TIM_INT0                       0x0001180058000030  RSL
TIM_INT0_EN                    0x0001180058000038  RSL
TIM_INT0_EVENT                 0x0001180058000040  RSL
TIM_INT_ECCERR                 0x0001180058000060  RSL
TIM_INT_ECCERR_EN              0x0001180058000068  RSL
TIM_INT_ECCERR_EVENT0          0x0001180058000070  RSL
TIM_INT_ECCERR_EVENT1          0x0001180058000078  RSL
TIM_REG_FLAGS                  0x0001180058000000  RSL
TIM_RING0_CTL0                 0x0001180058002000  RSL
TIM_RING0_CTL1                 0x0001180058002400  RSL
TIM_RING0_CTL2                 0x0001180058002800  RSL
TIM_RING0_DBG0                 0x0001180058003000  RSL
TIM_RING0_DBG1                 0x0001180058001200  RSL
TIM_RING1_CTL0                 0x0001180058002008  RSL
TIM_RING1_CTL1                 0x0001180058002408  RSL
TIM_RING1_CTL2                 0x0001180058002808  RSL
TIM_RING1_DBG0                 0x0001180058003008  RSL
TIM_RING1_DBG1                 0x0001180058001208  RSL
TIM_RING2_CTL0                 0x0001180058002010  RSL
TIM_RING2_CTL1                 0x0001180058002410  RSL
TIM_RING2_CTL2                 0x0001180058002810  RSL
TIM_RING2_DBG0                 0x0001180058003010  RSL
TIM_RING2_DBG1                 0x0001180058001210  RSL
TIM_RING3_CTL0                 0x0001180058002018  RSL
TIM_RING3_CTL1                 0x0001180058002418  RSL
TIM_RING3_CTL2                 0x0001180058002818  RSL
TIM_RING3_DBG0                 0x0001180058003018  RSL
TIM_RING3_DBG1                 0x0001180058001218  RSL
TIM_RING4_CTL0                 0x0001180058002020  RSL
TIM_RING4_CTL1                 0x0001180058002420  RSL
TIM_RING4_CTL2                 0x0001180058002820  RSL
TIM_RING4_DBG0                 0x0001180058003020  RSL
TIM_RING4_DBG1                 0x0001180058001220  RSL
TIM_RING5_CTL0                 0x0001180058002028  RSL
TIM_RING5_CTL1                 0x0001180058002428  RSL
TIM_RING5_CTL2                 0x0001180058002828  RSL
TIM_RING5_DBG0                 0x0001180058003028  RSL
TIM_RING5_DBG1                 0x0001180058001228  RSL
TIM_RING6_CTL0                 0x0001180058002030  RSL
TIM_RING6_CTL1                 0x0001180058002430  RSL
TIM_RING6_CTL2                 0x0001180058002830  RSL
TIM_RING6_DBG0                 0x0001180058003030  RSL
TIM_RING6_DBG1                 0x0001180058001230  RSL
TIM_RING7_CTL0                 0x0001180058002038  RSL
TIM_RING7_CTL1                 0x0001180058002438  RSL
TIM_RING7_CTL2                 0x0001180058002838  RSL
TIM_RING7_DBG0                 0x0001180058003038  RSL
TIM_RING7_DBG1                 0x0001180058001238  RSL
TIM_RING8_CTL0                 0x0001180058002040  RSL
TIM_RING8_CTL1                 0x0001180058002440  RSL
TIM_RING8_CTL2                 0x0001180058002840  RSL
TIM_RING8_DBG0                 0x0001180058003040  RSL
TIM_RING8_DBG1                 0x0001180058001240  RSL
TIM_RING9_CTL0                 0x0001180058002048  RSL
TIM_RING9_CTL1                 0x0001180058002448  RSL
TIM_RING9_CTL2                 0x0001180058002848  RSL
TIM_RING9_DBG0                 0x0001180058003048  RSL
TIM_RING9_DBG1                 0x0001180058001248  RSL
TIM_RING10_CTL0                0x0001180058002050  RSL
TIM_RING10_CTL1                0x0001180058002450  RSL
TIM_RING10_CTL2                0x0001180058002850  RSL
TIM_RING10_DBG0                0x0001180058003050  RSL
TIM_RING10_DBG1                0x0001180058001250  RSL
TIM_RING11_CTL0                0x0001180058002058  RSL
TIM_RING11_CTL1                0x0001180058002458  RSL
TIM_RING11_CTL2                0x0001180058002858  RSL
TIM_RING11_DBG0                0x0001180058003058  RSL
TIM_RING11_DBG1                0x0001180058001258  RSL
TIM_RING12_CTL0                0x0001180058002060  RSL
TIM_RING12_CTL1                0x0001180058002460  RSL
TIM_RING12_CTL2                0x0001180058002860  RSL
TIM_RING12_DBG0                0x0001180058003060  RSL
TIM_RING12_DBG1                0x0001180058001260  RSL
TIM_RING13_CTL0                0x0001180058002068  RSL
TIM_RING13_CTL1                0x0001180058002468  RSL
TIM_RING13_CTL2                0x0001180058002868  RSL
TIM_RING13_DBG0                0x0001180058003068  RSL
TIM_RING13_DBG1                0x0001180058001268  RSL
TIM_RING14_CTL0                0x0001180058002070  RSL
TIM_RING14_CTL1                0x0001180058002470  RSL
TIM_RING14_CTL2                0x0001180058002870  RSL
TIM_RING14_DBG0                0x0001180058003070  RSL
TIM_RING14_DBG1                0x0001180058001270  RSL
TIM_RING15_CTL0                0x0001180058002078  RSL
TIM_RING15_CTL1                0x0001180058002478  RSL
TIM_RING15_CTL2                0x0001180058002878  RSL
TIM_RING15_DBG0                0x0001180058003078  RSL
TIM_RING15_DBG1                0x0001180058001278  RSL
TIM_RING16_CTL0                0x0001180058002080  RSL
TIM_RING16_CTL1                0x0001180058002480  RSL
TIM_RING16_CTL2                0x0001180058002880  RSL
TIM_RING16_DBG0                0x0001180058003080  RSL
TIM_RING16_DBG1                0x0001180058001280  RSL
TIM_RING17_CTL0                0x0001180058002088  RSL
TIM_RING17_CTL1                0x0001180058002488  RSL
TIM_RING17_CTL2                0x0001180058002888  RSL
TIM_RING17_DBG0                0x0001180058003088  RSL
TIM_RING17_DBG1                0x0001180058001288  RSL
TIM_RING18_CTL0                0x0001180058002090  RSL
TIM_RING18_CTL1                0x0001180058002490  RSL
TIM_RING18_CTL2                0x0001180058002890  RSL
TIM_RING18_DBG0                0x0001180058003090  RSL
TIM_RING18_DBG1                0x0001180058001290  RSL
TIM_RING19_CTL0                0x0001180058002098  RSL
TIM_RING19_CTL1                0x0001180058002498  RSL
TIM_RING19_CTL2                0x0001180058002898  RSL
TIM_RING19_DBG0                0x0001180058003098  RSL
TIM_RING19_DBG1                0x0001180058001298  RSL
TIM_RING20_CTL0                0x00011800580020A0  RSL
TIM_RING20_CTL1                0x00011800580024A0  RSL
TIM_RING20_CTL2                0x00011800580028A0  RSL
TIM_RING20_DBG0                0x00011800580030A0  RSL
TIM_RING20_DBG1                0x00011800580012A0  RSL
TIM_RING21_CTL0                0x00011800580020A8  RSL
TIM_RING21_CTL1                0x00011800580024A8  RSL
TIM_RING21_CTL2                0x00011800580028A8  RSL
TIM_RING21_DBG0                0x00011800580030A8  RSL
TIM_RING21_DBG1                0x00011800580012A8  RSL
TIM_RING22_CTL0                0x00011800580020B0  RSL
TIM_RING22_CTL1                0x00011800580024B0  RSL
TIM_RING22_CTL2                0x00011800580028B0  RSL
TIM_RING22_DBG0                0x00011800580030B0  RSL
TIM_RING22_DBG1                0x00011800580012B0  RSL
TIM_RING23_CTL0                0x00011800580020B8  RSL
TIM_RING23_CTL1                0x00011800580024B8  RSL
TIM_RING23_CTL2                0x00011800580028B8  RSL
TIM_RING23_DBG0                0x00011800580030B8  RSL
TIM_RING23_DBG1                0x00011800580012B8  RSL
TIM_RING24_CTL0                0x00011800580020C0  RSL
TIM_RING24_CTL1                0x00011800580024C0  RSL
TIM_RING24_CTL2                0x00011800580028C0  RSL
TIM_RING24_DBG0                0x00011800580030C0  RSL
TIM_RING24_DBG1                0x00011800580012C0  RSL
TIM_RING25_CTL0                0x00011800580020C8  RSL
TIM_RING25_CTL1                0x00011800580024C8  RSL
TIM_RING25_CTL2                0x00011800580028C8  RSL
TIM_RING25_DBG0                0x00011800580030C8  RSL
TIM_RING25_DBG1                0x00011800580012C8  RSL
TIM_RING26_CTL0                0x00011800580020D0  RSL
TIM_RING26_CTL1                0x00011800580024D0  RSL
TIM_RING26_CTL2                0x00011800580028D0  RSL
TIM_RING26_DBG0                0x00011800580030D0  RSL
TIM_RING26_DBG1                0x00011800580012D0  RSL
TIM_RING27_CTL0                0x00011800580020D8  RSL
TIM_RING27_CTL1                0x00011800580024D8  RSL
TIM_RING27_CTL2                0x00011800580028D8  RSL
TIM_RING27_DBG0                0x00011800580030D8  RSL
TIM_RING27_DBG1                0x00011800580012D8  RSL
TIM_RING28_CTL0                0x00011800580020E0  RSL
TIM_RING28_CTL1                0x00011800580024E0  RSL
TIM_RING28_CTL2                0x00011800580028E0  RSL
TIM_RING28_DBG0                0x00011800580030E0  RSL
TIM_RING28_DBG1                0x00011800580012E0  RSL
TIM_RING29_CTL0                0x00011800580020E8  RSL
TIM_RING29_CTL1                0x00011800580024E8  RSL
TIM_RING29_CTL2                0x00011800580028E8  RSL
TIM_RING29_DBG0                0x00011800580030E8  RSL
TIM_RING29_DBG1                0x00011800580012E8  RSL
TIM_RING30_CTL0                0x00011800580020F0  RSL
TIM_RING30_CTL1                0x00011800580024F0  RSL
TIM_RING30_CTL2                0x00011800580028F0  RSL
TIM_RING30_DBG0                0x00011800580030F0  RSL
TIM_RING30_DBG1                0x00011800580012F0  RSL
TIM_RING31_CTL0                0x00011800580020F8  RSL
TIM_RING31_CTL1                0x00011800580024F8  RSL
TIM_RING31_CTL2                0x00011800580028F8  RSL
TIM_RING31_DBG0                0x00011800580030F8  RSL
TIM_RING31_DBG1                0x00011800580012F8  RSL
TIM_RING32_CTL0                0x0001180058002100  RSL
TIM_RING32_CTL1                0x0001180058002500  RSL
TIM_RING32_CTL2                0x0001180058002900  RSL
TIM_RING32_DBG0                0x0001180058003100  RSL
TIM_RING32_DBG1                0x0001180058001300  RSL
TIM_RING33_CTL0                0x0001180058002108  RSL
TIM_RING33_CTL1                0x0001180058002508  RSL
TIM_RING33_CTL2                0x0001180058002908  RSL
TIM_RING33_DBG0                0x0001180058003108  RSL
TIM_RING33_DBG1                0x0001180058001308  RSL
TIM_RING34_CTL0                0x0001180058002110  RSL
TIM_RING34_CTL1                0x0001180058002510  RSL
TIM_RING34_CTL2                0x0001180058002910  RSL
TIM_RING34_DBG0                0x0001180058003110  RSL
TIM_RING34_DBG1                0x0001180058001310  RSL
TIM_RING35_CTL0                0x0001180058002118  RSL
TIM_RING35_CTL1                0x0001180058002518  RSL
TIM_RING35_CTL2                0x0001180058002918  RSL
TIM_RING35_DBG0                0x0001180058003118  RSL
TIM_RING35_DBG1                0x0001180058001318  RSL
TIM_RING36_CTL0                0x0001180058002120  RSL
TIM_RING36_CTL1                0x0001180058002520  RSL
TIM_RING36_CTL2                0x0001180058002920  RSL
TIM_RING36_DBG0                0x0001180058003120  RSL
TIM_RING36_DBG1                0x0001180058001320  RSL
TIM_RING37_CTL0                0x0001180058002128  RSL
TIM_RING37_CTL1                0x0001180058002528  RSL
TIM_RING37_CTL2                0x0001180058002928  RSL
TIM_RING37_DBG0                0x0001180058003128  RSL
TIM_RING37_DBG1                0x0001180058001328  RSL
TIM_RING38_CTL0                0x0001180058002130  RSL
TIM_RING38_CTL1                0x0001180058002530  RSL
TIM_RING38_CTL2                0x0001180058002930  RSL
TIM_RING38_DBG0                0x0001180058003130  RSL
TIM_RING38_DBG1                0x0001180058001330  RSL
TIM_RING39_CTL0                0x0001180058002138  RSL
TIM_RING39_CTL1                0x0001180058002538  RSL
TIM_RING39_CTL2                0x0001180058002938  RSL
TIM_RING39_DBG0                0x0001180058003138  RSL
TIM_RING39_DBG1                0x0001180058001338  RSL
TIM_RING40_CTL0                0x0001180058002140  RSL
TIM_RING40_CTL1                0x0001180058002540  RSL
TIM_RING40_CTL2                0x0001180058002940  RSL
TIM_RING40_DBG0                0x0001180058003140  RSL
TIM_RING40_DBG1                0x0001180058001340  RSL
TIM_RING41_CTL0                0x0001180058002148  RSL
TIM_RING41_CTL1                0x0001180058002548  RSL
TIM_RING41_CTL2                0x0001180058002948  RSL
TIM_RING41_DBG0                0x0001180058003148  RSL
TIM_RING41_DBG1                0x0001180058001348  RSL
TIM_RING42_CTL0                0x0001180058002150  RSL
TIM_RING42_CTL1                0x0001180058002550  RSL
TIM_RING42_CTL2                0x0001180058002950  RSL
TIM_RING42_DBG0                0x0001180058003150  RSL
TIM_RING42_DBG1                0x0001180058001350  RSL
TIM_RING43_CTL0                0x0001180058002158  RSL
TIM_RING43_CTL1                0x0001180058002558  RSL
TIM_RING43_CTL2                0x0001180058002958  RSL
TIM_RING43_DBG0                0x0001180058003158  RSL
TIM_RING43_DBG1                0x0001180058001358  RSL
TIM_RING44_CTL0                0x0001180058002160  RSL
TIM_RING44_CTL1                0x0001180058002560  RSL
TIM_RING44_CTL2                0x0001180058002960  RSL
TIM_RING44_DBG0                0x0001180058003160  RSL
TIM_RING44_DBG1                0x0001180058001360  RSL
TIM_RING45_CTL0                0x0001180058002168  RSL
TIM_RING45_CTL1                0x0001180058002568  RSL
TIM_RING45_CTL2                0x0001180058002968  RSL
TIM_RING45_DBG0                0x0001180058003168  RSL
TIM_RING45_DBG1                0x0001180058001368  RSL
TIM_RING46_CTL0                0x0001180058002170  RSL
TIM_RING46_CTL1                0x0001180058002570  RSL
TIM_RING46_CTL2                0x0001180058002970  RSL
TIM_RING46_DBG0                0x0001180058003170  RSL
TIM_RING46_DBG1                0x0001180058001370  RSL
TIM_RING47_CTL0                0x0001180058002178  RSL
TIM_RING47_CTL1                0x0001180058002578  RSL
TIM_RING47_CTL2                0x0001180058002978  RSL
TIM_RING47_DBG0                0x0001180058003178  RSL
TIM_RING47_DBG1                0x0001180058001378  RSL
TIM_RING48_CTL0                0x0001180058002180  RSL
TIM_RING48_CTL1                0x0001180058002580  RSL
TIM_RING48_CTL2                0x0001180058002980  RSL
TIM_RING48_DBG0                0x0001180058003180  RSL
TIM_RING48_DBG1                0x0001180058001380  RSL
TIM_RING49_CTL0                0x0001180058002188  RSL
TIM_RING49_CTL1                0x0001180058002588  RSL
TIM_RING49_CTL2                0x0001180058002988  RSL
TIM_RING49_DBG0                0x0001180058003188  RSL
TIM_RING49_DBG1                0x0001180058001388  RSL
TIM_RING50_CTL0                0x0001180058002190  RSL
TIM_RING50_CTL1                0x0001180058002590  RSL
TIM_RING50_CTL2                0x0001180058002990  RSL
TIM_RING50_DBG0                0x0001180058003190  RSL
TIM_RING50_DBG1                0x0001180058001390  RSL
TIM_RING51_CTL0                0x0001180058002198  RSL
TIM_RING51_CTL1                0x0001180058002598  RSL
TIM_RING51_CTL2                0x0001180058002998  RSL
TIM_RING51_DBG0                0x0001180058003198  RSL
TIM_RING51_DBG1                0x0001180058001398  RSL
TIM_RING52_CTL0                0x00011800580021A0  RSL
TIM_RING52_CTL1                0x00011800580025A0  RSL
TIM_RING52_CTL2                0x00011800580029A0  RSL
TIM_RING52_DBG0                0x00011800580031A0  RSL
TIM_RING52_DBG1                0x00011800580013A0  RSL
TIM_RING53_CTL0                0x00011800580021A8  RSL
TIM_RING53_CTL1                0x00011800580025A8  RSL
TIM_RING53_CTL2                0x00011800580029A8  RSL
TIM_RING53_DBG0                0x00011800580031A8  RSL
TIM_RING53_DBG1                0x00011800580013A8  RSL
TIM_RING54_CTL0                0x00011800580021B0  RSL
TIM_RING54_CTL1                0x00011800580025B0  RSL
TIM_RING54_CTL2                0x00011800580029B0  RSL
TIM_RING54_DBG0                0x00011800580031B0  RSL
TIM_RING54_DBG1                0x00011800580013B0  RSL
TIM_RING55_CTL0                0x00011800580021B8  RSL
TIM_RING55_CTL1                0x00011800580025B8  RSL
TIM_RING55_CTL2                0x00011800580029B8  RSL
TIM_RING55_DBG0                0x00011800580031B8  RSL
TIM_RING55_DBG1                0x00011800580013B8  RSL
TIM_RING56_CTL0                0x00011800580021C0  RSL
TIM_RING56_CTL1                0x00011800580025C0  RSL
TIM_RING56_CTL2                0x00011800580029C0  RSL
TIM_RING56_DBG0                0x00011800580031C0  RSL
TIM_RING56_DBG1                0x00011800580013C0  RSL
TIM_RING57_CTL0                0x00011800580021C8  RSL
TIM_RING57_CTL1                0x00011800580025C8  RSL
TIM_RING57_CTL2                0x00011800580029C8  RSL
TIM_RING57_DBG0                0x00011800580031C8  RSL
TIM_RING57_DBG1                0x00011800580013C8  RSL
TIM_RING58_CTL0                0x00011800580021D0  RSL
TIM_RING58_CTL1                0x00011800580025D0  RSL
TIM_RING58_CTL2                0x00011800580029D0  RSL
TIM_RING58_DBG0                0x00011800580031D0  RSL
TIM_RING58_DBG1                0x00011800580013D0  RSL
TIM_RING59_CTL0                0x00011800580021D8  RSL
TIM_RING59_CTL1                0x00011800580025D8  RSL
TIM_RING59_CTL2                0x00011800580029D8  RSL
TIM_RING59_DBG0                0x00011800580031D8  RSL
TIM_RING59_DBG1                0x00011800580013D8  RSL
TIM_RING60_CTL0                0x00011800580021E0  RSL
TIM_RING60_CTL1                0x00011800580025E0  RSL
TIM_RING60_CTL2                0x00011800580029E0  RSL
TIM_RING60_DBG0                0x00011800580031E0  RSL
TIM_RING60_DBG1                0x00011800580013E0  RSL
TIM_RING61_CTL0                0x00011800580021E8  RSL
TIM_RING61_CTL1                0x00011800580025E8  RSL
TIM_RING61_CTL2                0x00011800580029E8  RSL
TIM_RING61_DBG0                0x00011800580031E8  RSL
TIM_RING61_DBG1                0x00011800580013E8  RSL
TIM_RING62_CTL0                0x00011800580021F0  RSL
TIM_RING62_CTL1                0x00011800580025F0  RSL
TIM_RING62_CTL2                0x00011800580029F0  RSL
TIM_RING62_DBG0                0x00011800580031F0  RSL
TIM_RING62_DBG1                0x00011800580013F0  RSL
TIM_RING63_CTL0                0x00011800580021F8  RSL
TIM_RING63_CTL1                0x00011800580025F8  RSL
TIM_RING63_CTL2                0x00011800580029F8  RSL
TIM_RING63_DBG0                0x00011800580031F8  RSL
TIM_RING63_DBG1                0x00011800580013F8  RSL
TRA0_BIST_STATUS               0x00011800A8000010  RSL
TRA0_CTL                       0x00011800A8000000  RSL
TRA0_CYCLES_SINCE              0x00011800A8000018  RSL
TRA0_CYCLES_SINCE1             0x00011800A8000028  RSL
TRA0_FILT_ADR_ADR              0x00011800A8000058  RSL
TRA0_FILT_ADR_MSK              0x00011800A8000060  RSL
TRA0_FILT_CMD                  0x00011800A8000040  RSL
TRA0_FILT_DID                  0x00011800A8000050  RSL
TRA0_FILT_SID                  0x00011800A8000048  RSL
TRA0_INT_STATUS                0x00011800A8000008  RSL
TRA0_READ_DAT                  0x00011800A8000020  RSL
TRA0_READ_DAT_HI               0x00011800A8000030  RSL
TRA0_TRIG0_ADR_ADR             0x00011800A8000098  RSL
TRA0_TRIG0_ADR_MSK             0x00011800A80000A0  RSL
TRA0_TRIG0_CMD                 0x00011800A8000080  RSL
TRA0_TRIG0_DID                 0x00011800A8000090  RSL
TRA0_TRIG0_SID                 0x00011800A8000088  RSL
TRA0_TRIG1_ADR_ADR             0x00011800A80000D8  RSL
TRA0_TRIG1_ADR_MSK             0x00011800A80000E0  RSL
TRA0_TRIG1_CMD                 0x00011800A80000C0  RSL
TRA0_TRIG1_DID                 0x00011800A80000D0  RSL
TRA0_TRIG1_SID                 0x00011800A80000C8  RSL
TRA1_BIST_STATUS               0x00011800A8100010  RSL
TRA1_CTL                       0x00011800A8100000  RSL
TRA1_CYCLES_SINCE              0x00011800A8100018  RSL
TRA1_CYCLES_SINCE1             0x00011800A8100028  RSL
TRA1_FILT_ADR_ADR              0x00011800A8100058  RSL
TRA1_FILT_ADR_MSK              0x00011800A8100060  RSL
TRA1_FILT_CMD                  0x00011800A8100040  RSL
TRA1_FILT_DID                  0x00011800A8100050  RSL
TRA1_FILT_SID                  0x00011800A8100048  RSL
TRA1_INT_STATUS                0x00011800A8100008  RSL
TRA1_READ_DAT                  0x00011800A8100020  RSL
TRA1_READ_DAT_HI               0x00011800A8100030  RSL
TRA1_TRIG0_ADR_ADR             0x00011800A8100098  RSL
TRA1_TRIG0_ADR_MSK             0x00011800A81000A0  RSL
TRA1_TRIG0_CMD                 0x00011800A8100080  RSL
TRA1_TRIG0_DID                 0x00011800A8100090  RSL
TRA1_TRIG0_SID                 0x00011800A8100088  RSL
TRA1_TRIG1_ADR_ADR             0x00011800A81000D8  RSL
TRA1_TRIG1_ADR_MSK             0x00011800A81000E0  RSL
TRA1_TRIG1_CMD                 0x00011800A81000C0  RSL
TRA1_TRIG1_DID                 0x00011800A81000D0  RSL
TRA1_TRIG1_SID                 0x00011800A81000C8  RSL
TRA2_BIST_STATUS               0x00011800A8200010  RSL
TRA2_CTL                       0x00011800A8200000  RSL
TRA2_CYCLES_SINCE              0x00011800A8200018  RSL
TRA2_CYCLES_SINCE1             0x00011800A8200028  RSL
TRA2_FILT_ADR_ADR              0x00011800A8200058  RSL
TRA2_FILT_ADR_MSK              0x00011800A8200060  RSL
TRA2_FILT_CMD                  0x00011800A8200040  RSL
TRA2_FILT_DID                  0x00011800A8200050  RSL
TRA2_FILT_SID                  0x00011800A8200048  RSL
TRA2_INT_STATUS                0x00011800A8200008  RSL
TRA2_READ_DAT                  0x00011800A8200020  RSL
TRA2_READ_DAT_HI               0x00011800A8200030  RSL
TRA2_TRIG0_ADR_ADR             0x00011800A8200098  RSL
TRA2_TRIG0_ADR_MSK             0x00011800A82000A0  RSL
TRA2_TRIG0_CMD                 0x00011800A8200080  RSL
TRA2_TRIG0_DID                 0x00011800A8200090  RSL
TRA2_TRIG0_SID                 0x00011800A8200088  RSL
TRA2_TRIG1_ADR_ADR             0x00011800A82000D8  RSL
TRA2_TRIG1_ADR_MSK             0x00011800A82000E0  RSL
TRA2_TRIG1_CMD                 0x00011800A82000C0  RSL
TRA2_TRIG1_DID                 0x00011800A82000D0  RSL
TRA2_TRIG1_SID                 0x00011800A82000C8  RSL
TRA3_BIST_STATUS               0x00011800A8300010  RSL
TRA3_CTL                       0x00011800A8300000  RSL
TRA3_CYCLES_SINCE              0x00011800A8300018  RSL
TRA3_CYCLES_SINCE1             0x00011800A8300028  RSL
TRA3_FILT_ADR_ADR              0x00011800A8300058  RSL
TRA3_FILT_ADR_MSK              0x00011800A8300060  RSL
TRA3_FILT_CMD                  0x00011800A8300040  RSL
TRA3_FILT_DID                  0x00011800A8300050  RSL
TRA3_FILT_SID                  0x00011800A8300048  RSL
TRA3_INT_STATUS                0x00011800A8300008  RSL
TRA3_READ_DAT                  0x00011800A8300020  RSL
TRA3_READ_DAT_HI               0x00011800A8300030  RSL
TRA3_TRIG0_ADR_ADR             0x00011800A8300098  RSL
TRA3_TRIG0_ADR_MSK             0x00011800A83000A0  RSL
TRA3_TRIG0_CMD                 0x00011800A8300080  RSL
TRA3_TRIG0_DID                 0x00011800A8300090  RSL
TRA3_TRIG0_SID                 0x00011800A8300088  RSL
TRA3_TRIG1_ADR_ADR             0x00011800A83000D8  RSL
TRA3_TRIG1_ADR_MSK             0x00011800A83000E0  RSL
TRA3_TRIG1_CMD                 0x00011800A83000C0  RSL
TRA3_TRIG1_DID                 0x00011800A83000D0  RSL
TRA3_TRIG1_SID                 0x00011800A83000C8  RSL
UAHC0_EHCI_ASYNCLISTADDR       0x00016F0000000028  NCB
UAHC0_EHCI_CONFIGFLAG          0x00016F0000000050  NCB
UAHC0_EHCI_CTRLDSSEGMENT       0x00016F0000000020  NCB
UAHC0_EHCI_FRINDEX             0x00016F000000001C  NCB
UAHC0_EHCI_HCCAPBASE           0x00016F0000000000  NCB
UAHC0_EHCI_HCCPARAMS           0x00016F0000000008  NCB
UAHC0_EHCI_HCSPARAMS           0x00016F0000000004  NCB
UAHC0_EHCI_INSNREG00           0x00016F0000000090  NCB
UAHC0_EHCI_INSNREG03           0x00016F000000009C  NCB
UAHC0_EHCI_INSNREG04           0x00016F00000000A0  NCB
UAHC0_EHCI_INSNREG06           0x00016F00000000E8  NCB
UAHC0_EHCI_INSNREG07           0x00016F00000000EC  NCB
UAHC0_EHCI_PERIODICLISTBASE    0x00016F0000000024  NCB
UAHC0_EHCI_PORTSC001           0x00016F0000000054  NCB
UAHC0_EHCI_PORTSC002           0x00016F0000000058  NCB
UAHC0_EHCI_USBCMD              0x00016F0000000010  NCB
UAHC0_EHCI_USBINTR             0x00016F0000000018  NCB
UAHC0_EHCI_USBSTS              0x00016F0000000014  NCB
UAHC0_OHCI0_HCBULKCURRENTED    0x00016F000000042C  NCB
UAHC0_OHCI0_HCBULKHEADED       0x00016F0000000428  NCB
UAHC0_OHCI0_HCCOMMANDSTATUS    0x00016F0000000408  NCB
UAHC0_OHCI0_HCCONTROL          0x00016F0000000404  NCB
UAHC0_OHCI0_HCCONTROLCURRENTED 0x00016F0000000424  NCB
UAHC0_OHCI0_HCCONTROLHEADED    0x00016F0000000420  NCB
UAHC0_OHCI0_HCDONEHEAD         0x00016F0000000430  NCB
UAHC0_OHCI0_HCFMINTERVAL       0x00016F0000000434  NCB
UAHC0_OHCI0_HCFMNUMBER         0x00016F000000043C  NCB
UAHC0_OHCI0_HCFMREMAINING      0x00016F0000000438  NCB
UAHC0_OHCI0_HCHCCA             0x00016F0000000418  NCB
UAHC0_OHCI0_HCINTERRUPTDISABLE 0x00016F0000000414  NCB
UAHC0_OHCI0_HCINTERRUPTENABLE  0x00016F0000000410  NCB
UAHC0_OHCI0_HCINTERRUPTSTATUS  0x00016F000000040C  NCB
UAHC0_OHCI0_HCLSTHRESHOLD      0x00016F0000000444  NCB
UAHC0_OHCI0_HCPERIODCURRENTED  0x00016F000000041C  NCB
UAHC0_OHCI0_HCPERIODICSTART    0x00016F0000000440  NCB
UAHC0_OHCI0_HCREVISION         0x00016F0000000400  NCB
UAHC0_OHCI0_HCRHDESCRIPTORA    0x00016F0000000448  NCB
UAHC0_OHCI0_HCRHDESCRIPTORB    0x00016F000000044C  NCB
UAHC0_OHCI0_HCRHPORTSTATUS001  0x00016F0000000454  NCB
UAHC0_OHCI0_HCRHPORTSTATUS002  0x00016F0000000458  NCB
UAHC0_OHCI0_HCRHSTATUS         0x00016F0000000450  NCB
UAHC0_OHCI0_INSNREG06          0x00016F0000000498  NCB
UAHC0_OHCI0_INSNREG07          0x00016F000000049C  NCB
UCTL0_BIST_STATUS              0x000118006F0000A0  RSL
UCTL0_CLK_RST_CTL              0x000118006F000000  RSL
UCTL0_EHCI_CTL                 0x000118006F000080  RSL
UCTL0_EHCI_FLA                 0x000118006F0000A8  RSL
UCTL0_ERTO_CTL                 0x000118006F000090  RSL
UCTL0_IF_ENA                   0x000118006F000030  RSL
UCTL0_INT_ENA                  0x000118006F000028  RSL
UCTL0_INT_REG                  0x000118006F000020  RSL
UCTL0_OHCI_CTL                 0x000118006F000088  RSL
UCTL0_ORTO_CTL                 0x000118006F000098  RSL
UCTL0_UPHY_CTL_STATUS          0x000118006F000008  RSL
UCTL0_UPHY_PORT000_CTL_STATUS  0x000118006F000010  RSL
UCTL0_UPHY_PORT001_CTL_STATUS  0x000118006F000018  RSL
ZIP_CMD_BIST_RESULT            0x0001180038000080  RSL
ZIP_CMD_BUF                    0x0001180038000008  RSL
ZIP_CMD_CTL                    0x0001180038000000  RSL
ZIP_CONSTANTS                  0x00011800380000A0  RSL
ZIP_CORE0_BIST_STATUS          0x0001180038000520  RSL
ZIP_CORE1_BIST_STATUS          0x0001180038000528  RSL
ZIP_CTL_BIST_STATUS            0x0001180038000510  RSL
ZIP_CTL_CFG                    0x0001180038000560  RSL
ZIP_DBG_CORE0_INST             0x0001180038000640  RSL
ZIP_DBG_CORE0_STA              0x0001180038000680  RSL
ZIP_DBG_CORE1_INST             0x0001180038000648  RSL
ZIP_DBG_CORE1_STA              0x0001180038000688  RSL
ZIP_DBG_QUE0_STA               0x0001180038000600  RSL
ZIP_DBG_QUE1_STA               0x0001180038000608  RSL
ZIP_DEBUG0                     0x0001180038000098  RSL
ZIP_ECC_CTL                    0x0001180038000568  RSL
ZIP_ERROR                      0x0001180038000088  RSL
ZIP_INT_ENA                    0x0001180038000580  RSL
ZIP_INT_MASK                   0x0001180038000090  RSL
ZIP_INT_REG                    0x0001180038000570  RSL
ZIP_QUE0_BUF                   0x0001180038000100  RSL
ZIP_QUE0_ECC_ERR_STA           0x0001180038000590  RSL
ZIP_QUE0_MAP                   0x0001180038000300  RSL
ZIP_QUE1_BUF                   0x0001180038000108  RSL
ZIP_QUE1_ECC_ERR_STA           0x0001180038000598  RSL
ZIP_QUE1_MAP                   0x0001180038000308  RSL
ZIP_QUE_ENA                    0x0001180038000500  RSL
ZIP_QUE_PRI                    0x0001180038000508  RSL
ZIP_THROTTLE                   0x0001180038000010  RSL
