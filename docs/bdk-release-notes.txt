//
// This is a asciidoc document. Edit here, but view the HTML
//

Bringup and Diagnostic Kit (BDK) Release Notes
==============================================

Overview
--------
This document gives a short overview of the major changes
incorporated into each BDK release.

octeon-bdk-2012.10-79005
------------------------
* Fix SGMII auto negotiation broken in last release. The changes to allow
	forcing of SGMII speed in the previous release broke speed
	auto negotiation.

octeon-bdk-2012.10-77908
------------------------

* Update NOR flash programming to support 16bit wired devices.
** "bdk-remote flash" can burn images over ejtag or PCIe. Programming
	748KB using Macraigor EJTAG took 13min on a CNF71XX board with
	a 16bit NOR flash.
** The bdk-full.bin menu can burn images natively.
* When a SGMII speed is manually configured in the configuration
	menu, this speed is now used to force the SGMII speed.
	SGMII autonegotiation is not used.
* Workaround for Due errata AGL-16930, 100/10 transmit IFGs are too small.
* Add support for a user configurable baud rate. The user must change
<b>rom/minimal/init.lua</b> or <b>rom/full/menu.lua</b>.


octeon-bdk-2012.08-76122
------------------------

* Fixed issue with setting environment variables that are numbers.
** All previous BDK releases can crash in random ways whenever an
	environment variable is set with either a name or value
	that parses into a number. The bug was the Lua bridge
	code would convert the string to a number and use the
	resulting value as a pointer.
* Updated DRAM init code:
** Add 1ms delay after each power-up/init sequence to help make some
	designs more robust.
** At least a 500us delay is necessary after DDR_RESET_L is deasserted.
	This was missing from the early HRMs.


octeon-bdk-2012.08-75963
------------------------
* Traffic-gen
** Fix bug where packet buffers could be freed while still in use
	when traffic stopped with 'stop' command.
** Handling of SSO work changed internally to better work with
	core stalls due to an automatic SYNCIOBDMA before scratch
	reads.
* Workaround for errata SSO-16306


octeon-bdk-2012.05-73226
------------------------
* Added reporting for ECC, parity, and other hardware detected
	errors. This is likely to confuse people to begin with, but
	greatly helps tracking down strange error conditions. Look
	errors up in the HRM to determine their cause.
* ILK link setup code was rewritten. It should be more reliable.
* Make the following changes to errata (G-16467) QLM 1/2 speed at
	6.25 Gbaud, excessive QLM jitter for 5 and 6.25 Gbaud:
** Apply the speed workaround to all CN68XX pass 2.x parts.
** Only apply the jitter workaround on CN68XX pass 2.0.
** Apply workaround on CN61XX and CN66XX.
* Fix L2 locking issue where not all of the cache was locked. This
	causes strange failures when the BDK starts running out of
	room.
* Fix bug in GDB remote protocol where failing to create a connection
	was ignored.
* PRBS improvements:
** Fix issue where PRBS doesn't work on CN68XX pass 2 unless traffic-gen
	was started first.
** Delay allowing receive of PRBS until transmit has been running for
	1ms. This gives the transmitters a chance to stabilize before
	the receivers lock. This fixes an issue where some lanes
	wouldn't align correctly when doing loopback.
* Add support for eMMC, MMC, and SD read/write to the BDK.
** Read/write is available under the "flash" menu.
** "bdk-remote" can read/write over PCIe and EJTAG.
** WARNING: The code to report eMMC and SD sizes is incorrect for
	devices larger than 2GB. If the size reported is incorrect,
	you can safely ignore it as read/write support is unaffected.


octeon-bdk-2012.04-72137
------------------------
* Errata updates
** Add workaround for (G-16592) Loss-of-signal can be erroneously
	detected for SRIO @ 5GBaud.
** Add workaround for (G-16467) Tx Clock Mux Isolation
** CN68XX pass 2.0: Implement workaround for errata (G-16467) QLM 1/2 speed
	at 6.25 Gbaud, excessive QLM jitter for 6.25 Gbaud
** Apply G-15273 to all CN63XX pass 2.x parts, not just 2.0 and 2.1
* QLM Tuning
** Fixed issue with QLM tuning menu where RX parameters were always
	set to zero regardless of user input.
** Reformat the output of auto tune.
** PRBS: Don't show biasdrv and tcoeff when we haven't programmed them and are
	using the defaults.
** Show PRBS error rate in scientific notation as BER
** Update PRBS to allow you to select which QLMs to run on.
** Update auto status to only show the current settings and not
	full QLM status.
** Run auto tune over known RX EQ settings instead of asking the user
** Show a table of amplitude and TX demphasis for the auto tune prompt.
** Show auto tune results when the user interrupts the run by hitting return.
** Show auto tune results per lane
** Allow the user to specify a max error rate in auto tune.
** Show the settings for lowest error counts in the summary for auto tune
* Traffic-gen updates
** Add ability of traffic-gen "csr" command to read and write individual
	fields in a CSR. Use a "." to specify a field. For example:
+
[source, sh]
----
(INS)Command> csr ciu_fuse
CIU_FUSE[0x0001070000000728] = 0x00000000ffffffff
  [63:32] RESERVED_32_63       =          0 (0x0)
  [31: 0] FUSE                 = 4294967295 (0xffffffff)
(INS)Command> csr ciu_fuse.fuse
CIU_FUSE.FUSE = 4294967295 (0xffffffff)
(INS)Command> csr ciu_fuse.fuse 5
(INS)Command>
* Note: Fuse is RO, so the last example does nothing, but it shows the syntax.
----
** Fix rare issue where sometimes trafficgen get the wrong name for XAUI10 on
	CN68XX pass 2.0.
** Add sleep command to traffic-gen
** Show the link speed in the traffic-gen statistics. This also adds the command "link_speed" to get it as a command.
** Fixed bug which caused SRIO networking to be missing from traffic-gen.
* Lua Scripting
** Add callbacks in the Lua code to automatically run user supplied scripts
	to extend the BDK's functionality. Each script starts with "autorun",
	so search the Lua code to find them.
** Make the functions supplied by the utils module be part of the utils
	namespace. Someday we might want to cleanup the global variables
	and have everything in utils.*.
* Fixed passing environment variables to Uboot.
* Set the TWSI clock speed to 100 KHz for more reliable TWSI operation.
* Increase the number of file handles. This fixes issues with writing
	to NOR flash from the menu.
* Clear all ILK calendar data at startup. This makes sure that unused TX
	channels are set to XOF.
* Fix reporting RXAUI speed.
* Speed up flash timings very early in boot. This speeds up BDK booting
	from NOR.
* Add new config option to enable or disable the display of link status.
	The asynchronous link status tends to break scripts, so it can be
	useful to disable it when a user isn't interactive.


octeon-bdk-2012.03-70829
------------------------

* Official CNF71XX support:
** CNF71XX, like CN61XX, requires the DLMs to be configured through
	the interactive menu before use. Specifically, the SGMII
	ports are disabled after power on.
** The general process of bringing up CNF71XX is:
*** Boot *bdk-minimal.bin* using NOR, EJTAG, or PCIe.
*** Use *bdk-menu* on the host to create a working DRAM configuration.
*** Port the DRAM configuration to Uboot and boot.
*** Use Uboot to boot *bdk-full.bin* and test IO units.
* Removed SRIO, and traffic-gen from *bdk-minimal.bin* image. This is
	needed to save space on CN61XX and CNF71XX. The *bdk-full.bin*
	is required to test traffic, so you must boot it from Uboot.
* Fix long standing overflow bug which would cause core cycle
	counters to be out of sync if core 0 had been booted
	for a while. This caused long delays and lockups
	in output for other cores.
* Fixed a bug where CSR access to 32bit USB registers would
	access the incorrect register.
* If DRAM is already configured when we start networking, use more
	and bigger buffers to improve performance.
* New QLM/DLM tuning menu. Now all QLM/DLMs run PRBS at the same
	time. This makes it easier to run loopback setups.
* First pass at an automatic tune for QLMs. This is still very
	experimental and is unlikely to work. Try it, but expect
	to need manual tuning.


octeon-bdk-2012.02-70412
------------------------

* Preliminary CNF71XX support.
* Update Lua from 5.2-work5 to the final 5.2 release.
** This change may break some Lua scripts as there were slight
	changes to the Lua objects. Most notably, the bit32
	module changed.
* Improved Lua garbage collection management.
* Add bdk-luac command line Lua compiler.
* Modify Lua's byte code to always be in big endian format. This
	allows you to compile a Lua file on a 32bit x86 and run
	it on 64bit Octeon.
* Compile Lua files before stuffing them into the /rom file system.
	This saves space in the download image.
* Host binaries are stripped to reduce the size of the release.
* Update readline to do use less special characters, making it
	friendly for scripting.
* Update XAUI QLM status check for CN63XX, CN66XX, and CN61XX.
* Updated DRAM config useful for 32bit mode.


octeon-bdk-2011.12-68142
------------------------

* CN61XX Support. There is a new configuration menu under the QLM menu.
** Currently you must use Uboot to load bdk-full.bin to run trafficgen.
** bdk-minimal.bin along with bdk-menu should be used before Uboot is working.
* Speed up NOR flash reads by reading 8 bytes at a time when possible.
* Improve serial port setup when using OCTEON_REMOTE_CONSOLE.
* Speed up NOR flash programming using the mpDemon. Still very slow.
* Fix permissions on the remote protocol lock file.
* Update MGMT port to work with the 1Gbps and 100Mbps hard coded PHY speeds.
* Fix bug in command line trafficgen stats where the numbers don't update.
* Add range checking to some of the config options. Also have current value
	as the default.
* Build bdk-lua for octeon, not octeon2. This allows older chips can work as
	a host.
* Skip error characters in the uart fifo. Boards not using a uart, like the
	nic10e's uart1, get an error character in the uart after initial
	boot. This was causing strange input problems as console output
	would pick up an extra zero character.
* Label the QLM menu with the current QLM config. Most people only need this
	information and can stop here.
* Change QLM code to set TX amplitude and demphasis.
* Update PRBS to exit when a user presses "return".
* Change the RPC protocol to use the character 0xa3 instead of '$' to
	begin commands. The '$' is too common in normal output.
* Change trafficgen drop stats to be totals instead of rates.
* Fix bug packing RPC arguments containing nil values.
* Fix reading environment variables from the remote target.
* Fixed incorrect FCS check which caused packet validation to fail on
	management ports.
* Only probe for a max of two flash chips.


octeon-bdk-2011.10-r66302
-------------------------

* Lua remote read, oremote.read_mem(), can now handle very large reads.
* G-16094: QLM Gen2 Equalizer Default Setting Change.
+
CN68XX pass 1.x and CN66XX pass 1.x: Tweak the JTAG
setting for a QLMs to run better at 5 and 6.25Ghz. Previously
these setting were only applied to CN68XX, which was incorrect.

* Add support for CN61XX QLM1, which only has two lanes.
* Add creation of Ldoc documentation to the release.
+
These are located in *docs/lua-modules/index.html*.

* Bug #3826: Add support for manual SPDs to the BDK. SPDs are expected to be Lua strings:
+
Here is a sample SPD formatted for Lua from a CN63XX with a 2GB module:
+
[source, lua]
----
config.ddr_config[1].dimm_config_table[1].spd_ptrs[1] =
	"\x92\x10\x0b\x02\x02\x11\x00\x09\x0b\x52\x01\x08\x0c\x00\x3c\x00" ..
	"\x69\x78\x69\x30\x69\x11\x20\x89\x70\x03\x3c\x3c\x00\xf0\x83\x05" ..
	"\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" ..
	"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x11\x04\x01" ..
	"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" ..
	"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" ..
	"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" ..
	"\x00\x00\x00\x00\x00\x01\x61\x00\x09\x00\x00\x00\x00\x00\x99\xc0" ..
	"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" ..
	"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" ..
	"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
----
** The length is 128, 176, or 256 bytes.
** The first byte encoding matches the length of the string.
** The string is a binary SPD exactly as would be read from a DIMM.


octeon-bdk-2011.10-r65630
-------------------------

* Improve DXAUI and XAUI link negotiation reliability.
* Trafficgen: Fix creation of IPv4 header checksum.
* Trafficgen GUI improvements:
** Compress buffer counts and memory usage onto a single row to save space.
** Use more accurate values when getting totals for stats in Mbps.
** Hide error rows when they are all zero.
** Add transit time counter similar to the SDK traffic-gen.
* On CN68XX, enable using the PKO internal storage for all active engines.
* Improve setting of PIP_IP_OFFSET, allows improved small packet performance.
* SGMII: Disable frame alignment if using preamble. This allows the link to
	reach full rate for odd length packets. For example, without this
	SGMII is slower than RGMII for 65 byte packets.


octeon-bdk-2011.09-r64642
-------------------------

* Script updates to bdk-lua for compatibility with older distributions.
* Add support for internal and external loopback into traffic-gen.
* Use L2C_COP0_MAPX to perform sampling over PCIe without stopping the
	core or needing a debug stub.
* Fix PCI debug stub. The size wasn't calculated right so the stub was
	truncated. Also the writes for stopping the cores was not ordered
	so CSR access to stop the core could bypass these writes and
	cause a failure. Also automatically stop and start the core
	when registers are accessed.
* Traffic-gen: Create short alias "size" and "count" for common commands.
	Remove autogenerated commands that aren't useful.
* (G-16094) QLM Gen2 Equalizer Default Setting Change.
* Add remote console support.
* Support RPC over the remote console by setting OCTEON_REMOTE_CONSOLE=remote.
	This is quite fast over PCIe, but probably too slow over EJTAG.
* Enable the console on both uarts. No messages go to uart1 until
	something is received.
* Improvements to the readline interface with tab completion.
* Redo rom filesystem to allow updates without recompiles.
	Append rom files to the raw image and update the Uboot
	image header to include the new data. Create a new utility
	bdk-update-romfs that adds rom files to the image and
	updates the header. Remove bdk-update-header as it
	has been superceded by the new utility.
* Organize the rom directory as a holder for other directories that
	represent different configurations. Each directory will have
	symbolic links to lua-modules to prevent the duplication of
	code. Only custom Lua files, such as init.lua, should be in
	the rom subdir.
* CN63XXp1 Errata Core-14317 - Disable CvmCtl[DEFET].
* Fix memory leak on RPC calls through the readline interface.
* Reset the scrolling region on menu startup in case trafficgen exited
	poorly before.
* Add raw access to SRIO and Higig headers from trafficgen. Most people will
	never touch this.
* Fixed bug in bdk-remote that caused PCIe CSRs to be read twice on
	every read. This didn't cause any issues unless reading the CSR
	had side effects.


octeon-bdk-2011.08-r63049
-------------------------

* Stop cores before probing flash. This speeds of flash support over EJTAG.
* Add support for Mentor Graphics Majic.
* Show progress percentage on flash reads.
* Don't force RTS/CTS in RPC setup. RTS/CTS doesn't work on all boards.
* Add note about minimum mpDemon firmware version for CN63XX pass 2.x.
* Update CN68XX QLM settings to work better with PCIe gen2.
* Display the number of free command buffers in traffic-gen.
* Add two special PHY addresses that encode a fixed 1Gbps or 100Mbps
	connection. This is for systems where there is a PHY but it isn't
	connected to Octeon's MDIO.
* Update PHY configuration menu to make more sense to new users.
* Improve detection of PCIe speed on CN63XX.
* Add PowerPC host support. The script "bdk-lua" executes the correct host
	binary based on "uname -m".
* "bdk-lua" script: Use exit instead of return for compatibility with older
	distributions.


octeon-bdk-2011.07-r62444
-------------------------

* Only display a message for the first 100 errors when testing DDR.
	The total error count will be displayed at the end of the
	test.
* Improvements in TCP/IP reliability.
* "bdk-lua" is now a shell script that performs some environment
	variable setup before executing the real file. This fixes
	issues with the Lua search path not being correct.
* Host binaries are supplied for Octeon as well as x86.
* Menu prompts now support multiple word input. This allows you to
	string multiple inputs together.
* Many Lua modules no longer create global variables. Importing a module
	should now use a local variable to store the module. For example:
+
[source, lua]
----
local oremote = require("oremote")
----
* Fixed possible crash due to unintialized CVMSEG state.
* Fix issue causing CFI flash probing to fail. When using
	remote boot, the moveable region was placed over the reset
	vector. This was capturing accesses to NOR and stopping CFI
	query from working. The code now programs all bootbus
	regions to avoid this problem.
* bdk-remote can now read and write NOR flash.
* Add octeon.csr.NAME.display() and oremote.csr.NAME.display().
* Add workaround for CN63XXp1 errata where scratch has invalid parity.
* Enable SMI/MDIO bus in menu if it isn't already enabled.
* CN66XX: Fix detection when QLM1 is not SGMII and mistakenly think it is SGMII.
* CN66XX: Fix detection of SRIO message interfaces.
* Add DDR config for EBB6600.
* Disable SRIO1 on CN66XX if PCIe1 exists. They share controller logic
	and PCIe1 has priority.
* Update SGMII to support running without external PHYs.
* Update SGMII speed detection to work with dual speed config of CN65XX
* Fix QLM speed reported for PCIe on CN63XX
* Fix order of QLM JTAG shift. CN6XXX parts shift in lane 3 LSB first.


octeon-bdk-2011.06-r61431
------------------------

* Decode register from high bit to low bit, not low to high. This
	matches the documentation better.
* Update DDR menu to allow setting any environment variables.
* Implement SRIOMAINT read and write for the remote utilities.
* Improve SRIO messaging performance.
* Reduce buffer size to save memory and have more packet buffers.
	With a size of (256+128), PKO will be limited to 23688 bytes
	(63 * (256+128-8)). Buffers are now roughly 1/4 the size they
	were before. Double the number of buffers.
* Redo packet receive handling to use a dispatcher that runs on all cores.
* Display the number of free packets in traffic-gen.
* Implement SRIO memory read/write.
* Add methods for bit insert and extract in bit64.
* Buffer characters read while we poll for Control-C. This should stop
	us from dropping characters while traffic-gen updates the screen.
* Update traffic-gen to support packets all the way down to one byte
	for interfaces that can support it (SRIO, LOOP).
* Update SGMII code to report speed based on QLM clock instead of hard
	coded 1Gbps
* Update CN63XX to calculate the XAUI speed based on the QLM
	rate instead of hard coding 10Gbps.
* Preliminary and untested support for CN66XX.


octeon-bdk-2011.05-r60866
-------------------------

* Improvements to RPC marshalling to handle arbitrary strings.
* Check for link training while waiting for PCIe link. This fixes an issue
	where gen2 speeds were sometimes reported when the link was actually
	gen1.
* Allow choosing menu items based on their internal key. Unlike the
	numbers, these don't change when items are added to the menu. The
	special word "keys" turns on/off the display of the keys. This
	should make it easier to script the menus.
* Initial support for QLM diagnostics such as PRBS.
* Add binary flag to all TFTP client documentation examples. Some clients
	defaults to doing line conversions, causing corruption.
* Support for CN63XX pass 2.2.
* Improvements in the telnet server and TCP/IP connections.
* Add support for passing booleans into C functions.

octeon-bdk-2011.05-r60390
-------------------------

* Change logs are not published for this version and previous versions.

