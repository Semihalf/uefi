

 *
 *                PCIE_CFG000 = First 32-bits of PCIE type 0 config space (Device ID and Vendor ID Register)
 *
 *

     ==============================================================
     PCIEEP(0)_CFG000 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>  VENDID          RO/WRSL  0x177d      0x177d    Vendor ID, writable through PESC(0..1)_CFG_WR                             
                                                         However, the application must not change this field.               
                                                        During and EPROM Load is a value of 0xFFFF is loaded to this
                                                        field and a value of 0xFFFF is loaded to the DEVID field of
                                                        this register, the value will not be loaded, EEPROM load will
                                                        stop, and the FastLinkEnable bit will be set in the
                                                        PCIE_CFG452 register.
<31:16> DEVID           RO/WRSL  0x50        0x50      Device ID, writable through PESC(0..1)_CFG_WR                             
                                                         However, the application must not change this field.               
                                                        For EEPROM loads also see VENDID of this register.
----------------------------------------------------------------------------------------------------
===

 *
 *                PCIE_CFG001 = Second 32-bits of PCIE type 0 config space (Command/Status Register)
 *

     ==============================================================
     PCIEEP(0)_CFG001 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     ISAE            R/W      0x0         0x0       I/O Space Enable                                                     
<1>     MSAE            R/W      0x0         0x0       Memory Space Enable                                                  
<2>     ME              R/W      0x0         0x0       Bus Master Enable                                                    
<3>     SCSE            RO       0x0         0x0       Special Cycle Enable                                                 
                                                         Not applicable for PCI Express. Must be hardwired to 0.
<4>     MWICE           RO       0x0         0x0       Memory Write and Invalidate                                          
                                                         Not applicable for PCI Express. Must be hardwired to 0. 
<5>     VPS             RO       0x0         0x0       VGA Palette Snoop                                                    
                                                         Not applicable for PCI Express. Must be hardwired to 0. 
<6>     PER             R/W      0x0         0x0       Parity Error Response                                                
<7>     IDS_WCC         RO       0x0         0x0       IDSEL Stepping/Wait Cycle Control                                    
                                                         Not applicable for PCI Express. Must be hardwired to 0
<8>     SEE             R/W      0x0         0x0       SERR# Enable                                                         
<9>     FBBE            RO       0x0         0x0       Fast Back-to-Back Enable                                             
                                                         Not applicable for PCI Express. Must be hardwired to 0. 
<10>    I_DIS           R/W      0x0         0x0       INTx Assertion Disable                                               
<18:11> NS              RAZ      NS          NS        Reserved                                                             
<19>    I_STAT          RO       0x0         0x0       INTx Status                                                          
<20>    CL              RO       0x1         0x1       Capabilities List                                                    
                                                         Indicates presence of an extended capability item. 
                                                         Hardwired to 1.
<21>    M66             RO       0x0         0x0       66 MHz Capable                                                       
                                                         Not applicable for PCI Express. Hardwired to 0. 
<22>    NS              RAZ      NS          NS        Reserved                                                             
<23>    FBB             RO       0x0         0x0       Fast Back-to-Back Capable                                            
                                                         Not applicable for PCI Express. Hardwired to 0. 
<24>    MDPE            R/W1C    0x0         0x0       Master Data Parity Error                                             
<26:25> DEVT            RO       0x0         0x0       DEVSEL Timing                                                        
                                                         Not applicable for PCI Express. Hardwired to 0. 
<27>    STA             R/W1C    0x0         0x0       Signaled Target Abort                                                
<28>    RTA             R/W1C    0x0         0x0       Received Target Abort                                                
<29>    RMA             R/W1C    0x0         0x0       Received Master Abort                                                
<30>    SSE             R/W1C    0x0         0x0       Signaled System Error                                                
<31>    DPE             R/W1C    0x0         0x0       Detected Parity Error                                                
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG002 = Third 32-bits of PCIE type 0 config space (Revision ID/Class Code Register)
 *

     ==============================================================
     PCIEEP(0)_CFG002 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   RID             RO/WRSL  0x00        0x0       Revision ID, writable through PESC(0..1)_CFG_WR                           
                                                         However, the application must not change this field.                                             
<15:8>  PI              RO/WRSL  0x00        0x0       Programming Interface, writable through PESC(0..1)_CFG_WR                 
                                                         However, the application must not change this field.                                             
<23:16> SC              RO/WRSL  0x30        0x30      Subclass Code, writable through PESC(0..1)_CFG_WR                         
                                                         However, the application must not change this field.                                             
<31:24> BCC             RO/WRSL  0x0B        0x0B      Base Class Code, writable through PESC(0..1)_CFG_WR                       
                                                         However, the application must not change this field.                              
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG003 = Fourth 32-bits of PCIE type 0 config space (Cache Line Size/Master Latency Timer/Header Type Register/BIST Register)
 *

     ==============================================================
     PCIEEP(0)_CFG003 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   CLS             R/W      0x00        0x0       Cache Line Size                                                      
                                                         The Cache Line Size register is RW for legacy compatibility 
                                                         purposes and is not applicable to PCI Express device 
                                                         functionality. 
                                                         Writing to the Cache Line Size register does not impact 
                                                         functionality.
<15:8>  LT              RO       0x00        0x0       Master Latency Timer                                                 
                                                         Not applicable for PCI Express, hardwired to 0.
<22:16> CHF             RO       0x0         0x0       Configuration Header Format                                          
                                                         Hardwired to 0 for type 0.
<23>    MFD             RO/WRSL  0x0         0x0       Multi Function Device                                                
                                                         The Multi Function Device bit is writable through PESC(0..1)_CFG_WR.
                                                         However, this is a single function device. Therefore, the 
                                                         application must not write a 1 to this bit.
<31:24> BIST            RO       0x00        0x0       The BIST register functions are not supported.                       
                                                         All 8 bits of the BIST register are hardwired to 0.                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG004 = Fifth 32-bits of PCIE type 0 config space (Base Address Register 0 - Low) 
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG004 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:14> LBAB            R/W      0x0000000   0x0       Lower bits of the BAR 0 base address                                 
<13:4>  NS              RAZ      NS          NS        Reserved                                                             
                                                         If the Bit Mask Register (PCIE_CFG004_MASK or PCIE_CFG005_MASK)
                                                         is changed, see LBAB.                    
<3>     PF              RO/WRSL  0x1         0x1       Prefetchable                                                         
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<2:1>   TYP             RO/WRSL  0x2         0x2       BAR type                                                             
                                                            o 00 = 32-bit BAR 
                                                            o 10 = 64-bit BAR
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.                                               
<0>     MSPC            RO/WRSL  0x0         0x0       Memory Space Indicator                                               
                                                            o 0 = BAR 0 is a memory BAR             
                                                            o 1 = BAR 0 is an I/O BAR
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG005 = Sixth 32-bits of PCIE type 0 config space (Base Address Register 0 - High)
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG005 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  UBAB            R/W      0x0         0x0       Contains the upper 32 bits of the BAR 0 base address.                
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG006 = Seventh 32-bits of PCIE type 0 config space (Base Address Register 1 - Low)
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG006 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:26> LBAB            R/W      0x0000000   0x0       Lower bits of the BAR 1 base address                                 
<25:4>  NS              RAZ      NS          NS        Reserved                                                             
                                                         If the Bit Mask Register (PCIE_CFG006_MASK or PCIE_CFG007_MASK)
                                                         is changed, see LBAB.
<3>     PF              RO/WRSL  0x1         0x1       Prefetchable                                                         
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<2:1>   TYP             RO/WRSL  0x2         0x2       BAR type                                                             
                                                            o 00 = 32-bit BAR 
                                                            o 10 = 64-bit BAR
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.                                               
<0>     MSPC            RO/WRSL  0x0         0x0       Memory Space Indicator                                               
                                                            o 0 = BAR 0 is a memory BAR             
                                                            o 1 = BAR 0 is an I/O BAR
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG007 = Eighth 32-bits of PCIE type 0 config space (Base Address Register 1 - High)
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG007 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  UBAB            R/W      0x0         0x0       Contains the upper 32 bits of the BAR 1 base address.                
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG008 = Ninth 32-bits of PCIE type 0 config space (Base Address Register 2 - Low)
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG008 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:4>  NS              RAZ      NS          NS        Reserved                                                             
                                                         If the Bit Mask Register (PCIE_CFG008_MASK or PCIE_CFG009_MASK)
                                                         is changed, see LBAB.
<3>     PF              RO/WRSL  0x1         0x1       Prefetchable                                                         
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<2:1>   TYP             RO/WRSL  0x2         0x2       BAR type                                                             
                                                            o 00 = 32-bit BAR 
                                                            o 10 = 64-bit BAR
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.                                               
<0>     MSPC            RO/WRSL  0x0         0x0       Memory Space Indicator                                               
                                                            o 0 = BAR 0 is a memory BAR             
                                                            o 1 = BAR 0 is an I/O BAR
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG009 = Tenth 32-bits of PCIE type 0 config space (Base Address Register 2 - High)
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG009 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:7>  UBAB            R/W      0x0         0x0       Contains the upper 32 bits of the BAR 2 base address.                
<6:0>   NS              RAZ      NS          NS        Reserved                                                             
                                                         If the Bit Mask Register (PCIE_CFG008_MASK or PCIE_CFG009_MASK)
                                                         is changed, see UBAB.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG010 = Eleventh 32-bits of PCIE type 0 config space (CardBus CIS Pointer Register) 
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG010 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  CISP            RO/WRSL  0x0         0x0       CardBus CIS Pointer                                                  
                                                         Optional, writable through PESC(0..1)_CFG_WR.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG011 = Twelfth 32-bits of PCIE type 0 config space (Subsystem ID and Subsystem Vendor ID Register) 
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG011 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>  SSVID           RO/WRSL  0x177d      0x177d    Subsystem Vendor ID                                                  
                                                         Assigned by PCI-SIG, writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<31:16> SSID            RO/WRSL  0x1         0x1       Subsystem ID                                                         
                                                         Assigned by PCI-SIG, writable through PESC(0..1)_CFG_WR.                                                                                                          However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG012 = Thirteenth 32-bits of PCIE type 0 config space (Expansion ROM Base Address Register) 
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG012 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:16> ERADDR          R/W      0x00000     0x0       Expansion ROM Address                                                
<15:1>  NS              RAZ      NS          NS        Reserved                                                             
<0>     ER_EN           R/W      0x0         0x0       Expansion ROM Enable                                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG013 = Fourteenth 32-bits of PCIE type 0 config space (Capability Pointer Register)
 *

     ==============================================================
     PCIEEP(0)_CFG013 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   CP              RO/WRSL  0x40        0x40      First Capability Pointer.                                            
                                                         Points to Power Management Capability structure by 
                                                         default, writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<31:8>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG015 = Sixteenth 32-bits of PCIE type 0 config space (Interrupt Line Register/Interrupt Pin/Bridge Control Register)
 *

     ==============================================================
     PCIEEP(0)_CFG015 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   IL              R/W      0xFF        0xFF      Interrupt Line                                                       
<15:8>  INTA            RO/WRSL  0x01        0x01      Interrupt Pin                                                        
                                                         Identifies the legacy interrupt Message that the device 
                                                         (or device function) uses.
                                                         The Interrupt Pin register is writable through PESC(0..1)_CFG_WR.
                                                         In a single-function configuration, only INTA is used. 
                                                         Therefore, the application must not change this field.
<23:16> MG              RO       0x00        0x00      Minimum Grant       (Hardwired to 0)                                 
<31:24> ML              RO       0x00        0x00      Maximum Latency     (Hardwired to 0)                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                 PCIE_CFG016 = Seventeenth 32-bits of PCIE type 0 config space 
 *                  (Power Management Capability ID/
 *                  Power Management Next Item Pointer/
 *                  Power Management Capabilities Register)
 *

     ==============================================================
     PCIEEP(0)_CFG016 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   PMCID           RO       0x01        0x0       Power Management Capability ID                                       
<15:8>  NCP             RO/WRSL  0x50        0x0       Next Capability Pointer                                              
                                                         Points to the MSI capabilities by default, writable 
                                                         through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<18:16> PMSV            RO/WRSL  0x03        0x0       Power Management Specification Version,                              
                                                         writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.              
<19>    PME_Clock       RO       0x0         0x0       PME Clock, hardwired to 0                                            
<20>    NS              RAZ      NS          NS        Reserved                                                             
<21>    DSI             RO/WRSL  0x0         0x0       Device Specific Initialization (DSI), writable through PESC(0..1)_CFG_WR  
                                                         However, the application must not change this field.               
<24:22> AUXC            RO/WRSL  0x0         0x0       AUX Current, writable through PESC(0..1)_CFG_WR                           
                                                         However, the application must not change this field.               
<25>    D1S             RO/WRSL  0x0         0x0       D1 Support, writable through PESC(0..1)_CFG_WR                            
                                                         However, the application must not change this field.               
<26>    D2S             RO/WRSL  0x0         0x0       D2 Support, writable through PESC(0..1)_CFG_WR                            
                                                         However, the application must not change this field.               
<31:27> PMES            RO/WRSL  0x0         0x0       PME_Support                                                          
                                                         o Bit 11: If set, PME Messages can be generated from D0
                                                         o Bit 12: If set, PME Messages can be generated from D1
                                                         o Bit 13: If set, PME Messages can be generated from D2
                                                         o Bit 14: If set, PME Messages can be generated from D3hot
                                                         o Bit 15: If set, PME Messages can be generated from D3cold
                                                         The PME_Support field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG017 = Eighteenth 32-bits of PCIE type 0 config space (Power Management Control and Status Register)
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG017 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<1:0>   PS              R/W      0x0         0x0       Power State                                                          
                                                         Controls the device power state:
                                                           o 00b: D0
                                                           o 01b: D1
                                                           o 10b: D2
                                                           o 11b: D3
                                                         The written value is ignored if the specific state is 
                                                         not supported.
<2>     NS              RAZ      NS          NS        Reserved                                                             
<3>     NSR             RO/WRSL  0x0         0x0       No Soft Reset, writable through PESC(0..1)_CFG_WR                         
                                                         However, the application must not change this field.               
<7:4>   NS              RAZ      NS          NS        Reserved                                                             
<8>     PMEENS          R/W      0x0         0x0       PME Enable                                                           
                                                         A value of 1 indicates that the device is enabled to 
                                                         generate PME.
<12:9>  PMDS            RO       0x0         0x0       Data Select (not supported)                                          
<14:13> PMEDSIA         RO       0x0         0x0       Data Scale (not supported)                                           
<15>    PMESS           R/W1C    0x0         0x0       PME Status                                                           
                                                        Indicates if a previously enabled PME event occurred or not.
<21:16> NS              RAZ      NS          NS        Reserved                                                             
<22>    BD3H            RO       0x0         0x0       B2/B3 Support, hardwired to 0                                        
<23>    BPCCEE          RO       0x0         0x0       Bus Power/Clock Control Enable, hardwired to 0                       
<31:24> PMDIA           RO       0x00        0x0       Data register for additional information (not supported)             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG020 = Twenty-first 32-bits of PCIE type 0 config space
 *                  (MSI Capability ID/
 *                   MSI Next Item Pointer/
 *                   MSI Control Register)
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG020 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   MSICID          RO       0x05        0x05      MSI Capability ID                                                    
<15:8>  NCP             RO/WRSL  0x70        0x70      Next Capability Pointer                                              
                                                         Points to PCI Express Capabilities by default, 
                                                         writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<16>    MSIEN           R/W      0x0         0x0       MSI Enabled                                                          
                                                         When set, INTx must be disabled.
<19:17> MMC             RO/WRSL  0x0         0x0       Multiple Message Capable, writable through PESC(0..1)_CFG_WR              
                                                         However, the application must not change this field.
<22:20> MME             R/W      0x0         0x0       Multiple Message Enabled                                             
                                                         Indicates that multiple Message mode is enabled by system 
                                                         software. The number of Messages enabled must be less than 
                                                         or equal to the Multiple Message Capable value.
<23>    M64             RO/WRSL  0x1         0x1       64-bit Address Capable, writable through PESC(0..1)_CFG_WR                
                                                         However, the application must not change this field.               
<31:24> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG021 = Twenty-second 32-bits of PCIE type 0 config space (MSI Lower 32 Bits Address Register)
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG021 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<1:0>   NS              RAZ      NS          NS        Reserved                                                             
<31:2>  LMSI            R/W      0x00000000  0x0       Lower 32-bit Address                                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG022 = Twenty-third 32-bits of PCIE type 0 config space (MSI Upper 32 bits Address Register)
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG022 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  UMSI            R/W      0x00000000  0x0       Upper 32-bit Address                                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG023 = Twenty-fourth 32-bits of PCIE type 0 config space (MSI Data Register) 
 *                 

     ==============================================================
     PCIEEP(0)_CFG023 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>  MSIMD           R/W      0x0000      0x0       MSI Data                                                             
                                                         Pattern assigned by system software, bits [4:0] are Or-ed with 
                                                         MSI_VECTOR to generate 32 MSI Messages per function.
<31:16> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG028 = Twenty-ninth 32-bits of PCIE type 0 config space
 *                  (PCI Express Capabilities List Register/
 *                   PCI Express Capabilities Register)
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG028 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   PCIEID          RO       0x10        0x10      PCIE Capability ID                                                    
<15:8>  NCP             RO/WRSL  0x0         0x0       Next Capability Pointer                                               
                                                         Writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<19:16> PCIECV          RO       0x2         0x2       PCI Express Capability Version                                        
<23:20> DPT             RO       0x0         0x0       Device Port Type                                                      
<24>    SI              RO/WRSL  0x0         0x0       Slot Implemented                                                      
                                                         This bit is writable through PESC(0..1)_CFG_WR.
                                                         However, it must be 0 for 
                                                         an Endpoint device. Therefore, the application must not write a 
                                                         1 to this bit.
<29:25> IMN             RO/WRSL  0x0         0x0       Interrupt Message Number                                              
                                                         Updated by hardware, writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<31:30> NS              RAZ      NS          NS        Reserved                                                              
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG029 = Thirtieth 32-bits of PCIE type 0 config space (Device Capabilities Register) 
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG029 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<2:0>   MPSS            RO/WRSL  0x1         0x1       Max_Payload_Size Supported, writable through PESC(0..1)_CFG_WR            
                                                         However, the application must not change this field.               
<4:3>   PFS             RO/WRSL  0x0         0x0       Phantom Function Supported                                           
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, Phantom 
                                                         Function is not supported. Therefore, the application must not 
                                                         write any value other than 0x0 to this field.
<5>     ETFS            RO/WRSL  0x0         0x0       Extended Tag Field Supported                                         
                                                         This bit is writable through PESC(0..1)_CFG_WR.
                                                         However, the application
                                                         must not write a 1 to this bit.
<8:6>   EL0AL           RO/WRSL  0x4         0x4       Endpoint L0s Acceptable Latency, writable through PESC(0..1)_CFG_WR       
                                                         However, the application must not change this field.               
<11:9>  EL1AL           RO/WRSL  0x3         0x3       Endpoint L1 Acceptable Latency, writable through PESC(0..1)_CFG_WR        
                                                         However, the application must not change this field.
<12>    NS              RAZ      NS          NS        Undefined for PCI Express 1.1                                        
                                                         (Was Attention Button Present for PCI Express 1.0a)
<13>    NS              RAZ      NS          NS        Undefined for PCI Express 1.1                                        
                                                         (Was Attention Indicator Present for PCI Express 1.0a)
<14>    NS              RAZ      NS          NS        Undefined for PCI Express 1.1                                        
                                                         (Was Power Indicator Present for PCI Express 1.0a)
<15>    RBER            RO/WRSL  0x1         0x1       Role-Based Error Reporting, writable through PESC(0..1)_CFG_WR            
                                                         However, the application must not change this field.
<17:16> NS              RAZ      NS          NS        Reserved                                                             
<25:18> CSPLV           RO       0x00        0x0       Captured Slot Power Limit Value                                      
                                                         From Message from RC, upstream port only.
<27:26> CSPLS           RO       0x0         0x0       Captured Slot Power Limit Scale                                      
                                                         From Message from RC, upstream port only.
<31:28> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG030 = Thirty-first 32-bits of PCIE type 0 config space 
 *                  (Device Control Register/Device Status Register)
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG030 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     CE_EN           R/W      0x0         0x0       Correctable Error Reporting Enable                                   
<1>     NFE_EN          R/W      0x0         0x0       Non-Fatal Error Reporting Enable                                     
<2>     FE_EN           R/W      0x0         0x0       Fatal Error Reporting Enable                                         
<3>     UR_EN           R/W      0x0         0x0       Unsupported Request Reporting Enable                                 
<4>     RO_EN           R/W      0x1         0x1       Enable Relaxed Ordering                                              
<7:5>   MPS             R/W      0x0         0x0       Max Payload Size                                                     
                                                         Legal values:
                                                          0  = 128B
                                                          1  = 256B
                                                         Larger sizes not supported by OCTEON.
                                                        Note: NPEI_CTL_STATUS2[MPS] must be set to the same
                                                              value for proper functionality.
<8>     ETF_EN          R/W      0x0         0x0       Extended Tag Field Enable                                            
                                                         This bit should never be set - OCTEON requests never use
                                                         extended tags.
<9>     PF_EN           R/W      0x0         0x0       Phantom Function Enable                                              
                                                         This bit should never be set - OCTEON requests never use
                                                         phantom functions.
<10>    AP_EN           R/W      0x0         0x0       AUX Power PM Enable                                                  
<11>    NS_EN           R/W      0x1         0x1       Enable No Snoop                                                      
<14:12> MRRS            R/W      0x2         0x2       Max Read Request Size                                                
                                                         0 = 128B
                                                         1 = 256B
                                                         2 = 512B
                                                         3 = 1024B
                                                         4 = 2048B
                                                         5 = 4096B
                                                        Note: NPEI_CTL_STATUS2[MRRS] also must be set properly.
                                                        NPEI_CTL_STATUS2[MRRS] must not exceed the
                                                        desired max read request size.
<15>    NS              RAZ      NS          NS        Reserved                                                             
<16>    CE_D            R/W1C    0x0         0x0       Correctable Error Detected                                           
                                                         Errors are logged in this register regardless of whether 
                                                         error reporting is enabled in the Device Control register.
                                                        CE_D is set if we receive any of the errors in PCIE_CFG068
                                                        for example a Replay Timer Timeout.  Also, it can be set if
                                                        we get any of the errors in PCIE_CFG066 that has a severity
                                                        set to Nonfatal and meets the Advisory Nonfatal criteria
                                                        (PCIe 1.1 spec, Section 6.2.3.2.4), which most ECRC errors 
                                                        should be.
<17>    NFE_D           R/W1C    0x0         0x0       Non-Fatal Error detected                                             
                                                         Errors are logged in this register regardless of whether 
                                                         error reporting is enabled in the Device Control register.
                                                        NFE_D is set if we receive any of the errors in PCIE_CFG066
                                                        that has a severity set to Nonfatal and does NOT meet Advisory
                                                        Nonfatal criteria (PCIe 1.1 spec, Section 6.2.3.2.4), which
                                                        most poisoned TLP's should be.
<18>    FE_D            R/W1C    0x0         0x0       Fatal Error Detected                                                 
                                                         Errors are logged in this register regardless of whether 
                                                         error reporting is enabled in the Device Control register.
                                                        FE_D is set if receive any of the errors in PCIE_CFG066 that
                                                        has a severity set to Fatal.  Malformed TLP's generally fit
                                                        into this category.
<19>    UR_D            R/W1C    0x0         0x0       Unsupported Request Detected                                         
                                                         Errors are logged in this register regardless of whether 
                                                         error reporting is enabled in the Device Control register.
                                                        UR_D occurs when we receive something we don't support.
                                                        Unsupported requests are Nonfatal errors, so UR_D should
                                                        cause NFE_D.  Receiving a  vendor defined message should
                                                        cause an unsupported request.
<20>    AP_D            RO       0x0         0x0       Aux Power Detected                                                   
                                                         Set to 1 if Aux power detected.
<21>    TP              RO       0x0         0x0       Transaction Pending                                                  
                                                         Set to 1 when Non-Posted Requests are not yet completed 
                                                         and clear when they are completed.
<31:22> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG031 = Thirty-second 32-bits of PCIE type 0 config space 
 *                  (Link Capabilities Register)
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG031 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>   MLS             RO/WRSL  0x1         0x1       Maximum Link Speed                                                   
                                                         Default value is 0x1 for 2.5 Gbps Link.
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, 0x1 is the 
                                                         only supported value. Therefore, the application must not write 
                                                         any value other than 0x1 to this field.
<9:4>   MLW             RO/WRSL  0x08        0x08      Maximum Link Width                                                   
                                                         The default value is the value you specify during hardware 
                                                         configuration (x1, x4, x8, or x16), writable through PESC(0..1)_CFG_WR.
<11:10> ASLPMS          RO/WRSL  0x3         0x3       Active State Link PM Support                                         
                                                         The default value is the value you specify during hardware 
                                                         configuration, writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<14:12> L0EL            RO/WRSL  0x6         0x6       L0s Exit Latency                                                     
                                                         The default value is the value you specify during hardware 
                                                         configuration, writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<17:15> L1EL            RO/WRSL  0x6         0x6       L1 Exit Latency                                                      
                                                         The default value is the value you specify during hardware 
                                                         configuration, writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<18>    CPM             RO/WRSL  0x0         0x0       Clock Power Management                                               
                                                         The default value is the value you specify during hardware 
                                                         configuration, writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<19>    SDERC           RO       0x0         0x0       Surprise Down Error Reporting Capable                                
                                                         Not supported, hardwired to 0x0.
<20>    DLLARC          RO       0x0         0x0       Data Link Layer Active Reporting Capable                             
<21>    LBNC            RO       0x0         0x0       Link Bandwith Notification Capability                                
<23:22> NS              RAZ      NS          NS        Reserved                                                             
<31:24> PNUM            RO/WRSL  0x0         0x0       Port Number, writable through PESC(0..1)_CFG_WR                           
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG032 = Thirty-third 32-bits of PCIE type 0 config space 
 *                  (Link Control Register/Link Status Register)
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG032 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<1:0>   ASLPC           R/W      0x0         0x0       Active State Link PM Control                                         
<2>     NS              RAZ      NS          NS        Reserved                                                             
<3>     RCB             RO       0x0         0x0       Read Completion Boundary (RCB)                                       
<4>     LD              RO       0x0         0x0       Link Disable                                                         
                                                         Not applicable for an upstream Port or Endpoint device, 
                                                         hardwired to 0.
<5>     RL              RO       0x0         0x0       Retrain Link                                                         
                                                         Not applicable for an upstream Port or Endpoint device, 
                                                         hardwired to 0.
<6>     CCC             R/W      0x0         0x0       Common Clock Configuration                                           
<7>     ES              R/W      0x0         0x0       Extended Synch                                                       
<8>     ECPM            R/W      0x0         0x0       Enable Clock Power Management                                        
                                                         Hardwired to 0 if Clock Power Management is disabled in 
                                                         the Link Capabilities register.
<9>     HAWD            R/W      0x0         0x0       Hardware Autonomous Width Disable                                    
                                                         (Not Supported)
<15:10> NS              RAZ      NS          NS        Reserved                                                             
<19:16> LS              RO       0x1         0x1       Link Speed                                                           
                                                         The negotiated Link speed: 2.5 Gbps
<25:20> NLW             RO       0x0         0x8       Negotiated Link Width                                                
                                                         Set automatically by hardware after Link initialization.
<26>    NS              RAZ      NS          NS        Undefined for PCI Express 1.1                                        
                                                         (Was Training Error for PCI Express 1.0a)
<27>    LT              RO       0x0         0x0       Link Training                                                        
                                                         Not applicable for an upstream Port or Endpoint device, 
                                                         hardwired to 0.
<28>    SCC             RO/WRSL  0x1         0x1       Slot Clock Configuration                                             
                                                         Indicates that the component uses the same physical reference 
                                                         clock that the platform provides on the connector. 
                                                         Writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<29>    DLLA            RO       0x0         0x0       Data Link Layer Active                                               
                                                         Not applicable for an upstream Port or Endpoint device, 
                                                         hardwired to 0.
<31:30> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG033 = Thirty-fourth 32-bits of PCIE type 0 config space 
 *                  (Slot Capabilities Register)
 *

     ==============================================================
     PCIEEP(0)_CFG033 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     ABP             RO/WRSL  0x0         0x0       Attention Button Present, writable through PESC(0..1)_CFG_WR              
                                                         However, the application must not change this field.
<1>     PCP             RO/WRSL  0x0         0x0       Power Controller Present, writable through PESC(0..1)_CFG_WR              
                                                         However, the application must not change this field.
<2>     MRLSP           RO/WRSL  0x0         0x0       MRL Sensor Present, writable through PESC(0..1)_CFG_WR                    
                                                         However, the application must not change this field.
<3>     AIP             RO/WRSL  0x0         0x0       Attention Indicator Present, writable through PESC(0..1)_CFG_WR           
                                                         However, the application must not change this field.
<4>     PIP             RO/WRSL  0x0         0x0       Power Indicator Present, writable through PESC(0..1)_CFG_WR               
                                                         However, the application must not change this field.
<5>     HP_S            RO/WRSL  0x0         0x0       Hot-Plug Surprise, writable through PESC(0..1)_CFG_WR                     
                                                         However, the application must not change this field.
<6>     HP_C            RO/WRSL  0x0         0x0       Hot-Plug Capable, writable through PESC(0..1)_CFG_WR                      
                                                         However, the application must not change this field.
<14:7>  SP_LV           RO/WRSL  0x0         0x0       Slot Power Limit Value, writable through PESC(0..1)_CFG_WR                
                                                         However, the application must not change this field.
<16:15> SP_LS           RO/WRSL  0x0         0x0       Slot Power Limit Scale, writable through PESC(0..1)_CFG_WR                
                                                         However, the application must not change this field.
<17>    EMIP            RO/WRSL  0x0         0x0       Electromechanical Interlock Present, writable through PESC(0..1)_CFG_WR   
                                                         However, the application must not change this field.
<18>    NCCS            RO/WRSL  0x0         0x0       No Command Complete Support, writable through PESC(0..1)_CFG_WR           
                                                         However, the application must not change this field.
<31:19> PS_NUM          RO/WRSL  0x0000      0x0       Physical Slot Number, writable through PESC(0..1)_CFG_WR                  
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG034 = Thirty-fifth 32-bits of PCIE type 0 config space 
 *                  (Slot Control Register/Slot Status Register)
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG034 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     ABP_EN          R/W      0x0         0x0       Attention Button Pressed Enable                                      
<1>     PF_EN           R/W      0x0         0x0       Power Fault Detected Enable                                          
<2>     MRLS_EN         R/W      0x0         0x0       MRL Sensor Changed Enable                                            
<3>     PD_EN           R/W      0x0         0x0       Presence Detect Changed Enable                                       
<4>     CCINT_EN        R/W      0x0         0x0       Command Completed Interrupt Enable                                   
<5>     HPINT_EN        R/W      0x0         0x0       Hot-Plug Interrupt Enable                                            
<7:6>   AIC             R/W      0x0         0x0       Attention Indicator Control                                          
<9:8>   PIC             R/W      0x0         0x0       Power Indicator Control                                              
<10>    PCC             R/W      0x0         0x0       Power Controller Control                                             
<11>    EMIC            R/W      0x0         0x0       Electromechanical Interlock Control                                  
<12>    DLLS_EN         RO       0x0         0x0       Data Link Layer State Changed Enable                                 
                                                         Not applicable for an upstream Port or Endpoint device, 
                                                         hardwired to 0. 
<15:13> NS              RAZ      NS          NS        Reserved                                                             
<16>    ABP_D           R/W1C    0x0         0x0       Attention Button Pressed                                             
<17>    PF_D            R/W1C    0x0         0x0       Power Fault Detected                                                 
<18>    MRLS_C          R/W1C    0x0         0x0       MRL Sensor Changed                                                   
<19>    PD_C            R/W1C    0x0         0x0       Presence Detect Changed                                              
<20>    CCINT_D         R/W1C    0x0         0x0       Command Completed                                                    
<21>    MRLSS           RO       0x0         0x0       MRL Sensor State                                                     
<22>    PDS             RO       0x0         0x0       Presence Detect State                                                
<23>    EMIS            RO       0x0         0x0       Electromechanical Interlock Status                                   
<24>    DLLS_C          RO       0x0         0x0       Data Link Layer State Changed                                        
                                                         Not applicable for an upstream Port or Endpoint device, 
                                                         hardwired to 0. 
<31:25> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG037 = Thirty-eighth 32-bits of PCIE type 0 config space 
 *                  (Device Capabilities 2 Register)
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG037 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>   CTRS            RO       0x0         0x0       Completion Timeout Ranges Supported                                  
                                                         Value of 0 indicates that Completion Timeout Programming
                                                         is not supported
                                                         Completion timeout is 16.7ms.
<4>     CTDS            RO       0x1         0x1       Completion Timeout Disable Supported                                 
<31:5>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG038 = Thirty-ninth 32-bits of PCIE type 0 config space 
 *                  (Device Control 2 Register/Device Status 2 Register)
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG038 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>   CTV             RO       0x0         0x0       Completion Timeout Value                                             
                                                         Completion Timeout Programming is not supported
                                                         Completion timeout is 16.7ms.
<4>     CTD             R/W      0x0         0x0       Completion Timeout Disable                                           
<31:5>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  PCIE_CFG039 = Fourtieth 32-bits of PCIE type 0 config space 
 *                  (Link Capabilities 2 Register)
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG039 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG040 = Fourty-first 32-bits of PCIE type 0 config space 
 *                  (Link Control 2 Register/Link Status 2 Register)
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG040 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG041 = Fourty-second 32-bits of PCIE type 0 config space 
 *                  (Slot Capabilities 2 Register)
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG041 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG042 = Fourty-third 32-bits of PCIE type 0 config space 
 *                  (Slot Control 2 Register/Slot Status 2 Register)
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG042 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG064 = Sixty-fifth 32-bits of PCIE type 0 config space 
 *                  (PCI Express Enhanced Capability Header)
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG064 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>  PCIEEC          RO       0x1         0x0       PCIE Express Extended Capability                                     
<19:16> CV              RO       0x1         0x0       Capability Version                                                   
<31:20> NCO             RO       0x0         0x0       Next Capability Offset                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG065 = Sixty-sixth 32-bits of PCIE type 0 config space 
 *                  (Uncorrectable Error Status Register)
 *

     ==============================================================
     PCIEEP(0)_CFG065 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     NS              RAZ      NS          NS        Undefined                                                            
                                                         (Was Training Error Status for PCI Express 1.0a)
<3:1>   NS              RAZ      NS          NS        Reserved                                                             
<4>     DLPES           R/W1C    0x0         0x0       Data Link Protocol Error Status                                      
<5>     SDES            RO       0x0         0x0       Surprise Down Error Status (not supported)                           
<11:6>  NS              RAZ      NS          NS        Reserved                                                             
<12>    PTLPS           R/W1C    0x0         0x0       Poisoned TLP Status                                                  
<13>    FCPES           R/W1C    0x0         0x0       Flow Control Protocol Error Status                                   
<14>    CTS             R/W1C    0x0         0x0       Completion Timeout Status                                            
<15>    CAS             R/W1C    0x0         0x0       Completer Abort Status                                               
<16>    UCS             R/W1C    0x0         0x0       Unexpected Completion Status                                         
<17>    ROS             R/W1C    0x0         0x0       Receiver Overflow Status                                             
<18>    MTLPS           R/W1C    0x0         0x0       Malformed TLP Status                                                 
<19>    ECRCES          R/W1C    0x0         0x0       ECRC Error Status                                                    
<20>    URES            R/W1C    0x0         0x0       Unsupported Request Error Status                                     
<31:21> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG066 = Sixty-seventh 32-bits of PCIE type 0 config space 
 *                  (Uncorrectable Error Mask Register) 
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG066 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     NS              RAZ      NS          NS        Undefined                                                            
                                                         (Was Training Error Mask for PCI Express 1.0a)
<3:1>   NS              RAZ      NS          NS        Reserved                                                             
<4>     DLPEM           R/W      0x0         0x0       Data Link Protocol Error Mask                                        
<5>     SDEM            RO       0x0         0x0       Surprise Down Error Mask (not supported)                             
<11:6>  NS              RAZ      NS          NS        Reserved                                                             
<12>    PTLPM           R/W      0x0         0x0       Poisoned TLP Mask                                                    
<13>    FCPEM           R/W      0x0         0x0       Flow Control Protocol Error Mask                                     
<14>    CTM             R/W      0x0         0x0       Completion Timeout Mask                                              
<15>    CAM             R/W      0x0         0x0       Completer Abort Mask                                                 
<16>    UCM             R/W      0x0         0x0       Unexpected Completion Mask                                           
<17>    ROM             R/W      0x0         0x0       Receiver Overflow Mask                                               
<18>    MTLPM           R/W      0x0         0x0       Malformed TLP Mask                                                   
<19>    ECRCEM          R/W      0x0         0x0       ECRC Error Mask                                                      
<20>    UREM            R/W      0x0         0x0       Unsupported Request Error Mask                                       
<31:21> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG067 = Sixty-eighth 32-bits of PCIE type 0 config space 
 *                  (Uncorrectable Error Severity Register)
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG067 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     NS              RAZ      NS          NS        Undefined                                                            
                                                         (Was Training Error Severity for PCI Express 1.0a)
<3:1>   NS              RAZ      NS          NS        Reserved                                                             
<4>     DLPES           R/W      0x1         0x1       Data Link Protocol Error Severity                                    
<5>     SDES            RO       0x1         0x1       Surprise Down Error Severity (not supported)                         
<11:6>  NS              RAZ      NS          NS        Reserved                                                             
<12>    PTLPS           R/W      0x0         0x0       Poisoned TLP Severity                                                
<13>    FCPES           R/W      0x1         0x1       Flow Control Protocol Error Severity                                 
<14>    CTS             R/W      0x0         0x0       Completion Timeout Severity                                          
<15>    CAS             R/W      0x0         0x0       Completer Abort Severity                                             
<16>    UCS             R/W      0x0         0x0       Unexpected Completion Severity                                       
<17>    ROS             R/W      0x1         0x1       Receiver Overflow Severity                                           
<18>    MTLPS           R/W      0x1         0x1       Malformed TLP Severity                                               
<19>    ECRCES          R/W      0x0         0x0       ECRC Error Severity                                                  
<20>    URES            R/W      0x0         0x0       Unsupported Request Error Severity                                   
<31:21> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG068 = Sixty-ninth 32-bits of PCIE type 0 config space 
 *                  (Correctable Error Status Register)
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG068 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     RES             R/W1C    0x0         0x0       Receiver Error Status                                                
<5:1>   NS              RAZ      NS          NS        Reserved                                                             
<6>     BTLPS           R/W1C    0x0         0x0       Bad TLP Status                                                       
<7>     BDLLPS          R/W1C    0x0         0x0       Bad DLLP Status                                                      
<8>     RNRS            R/W1C    0x0         0x0       REPLAY_NUM Rollover Status                                           
<11:9>  NS              RAZ      NS          NS        Reserved                                                             
<12>    RTTS            R/W1C    0x0         0x0       Reply Timer Timeout Status                                           
<13>    ANFES           R/W1C    0x0         0x0       Advisory Non-Fatal Error Status                                      
<31:14> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG069 = Seventieth 32-bits of PCIE type 0 config space 
 *                  (Correctable Error Mask Register) 
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG069 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     REM             R/W      0x0         0x0       Receiver Error Mask                                                  
<5:1>   NS              RAZ      NS          NS        Reserved                                                             
<6>     BTLPM           R/W      0x0         0x0       Bad TLP Mask                                                         
<7>     BDLLPM          R/W      0x0         0x0       Bad DLLP Mask                                                        
<8>     RNRM            R/W      0x0         0x0       REPLAY_NUM Rollover Mask                                             
<11:9>  NS              RAZ      NS          NS        Reserved                                                             
<12>    RTTM            R/W      0x0         0x0       Reply Timer Timeout Mask                                             
<13>    ANFEM           R/W      0x1         0x1       Advisory Non-Fatal Error Mask                                        
<31:14> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG070 = Seventy-first 32-bits of PCIE type 0 config space 
 *                  (Advanced Error Capabilities and Control Register) 
 *

     ==============================================================
     PCIEEP(0)_CFG070 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<4:0>   FEP             RO       0x00        0x0       First Error Pointer                                                  
<5>     GC              RO       0x1         0x1       ECRC Generation Capability                                           
<6>     GE              R/W      0x0         0x0       ECRC Generation Enable                                               
<7>     CC              RO       0x1         0x1       ECRC Check Capable                                                   
<8>     CE              R/W      0x0         0x0       ECRC Check Enable                                                    
<31:9>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG071 = Seventy-second 32-bits of PCIE type 0 config space 
 *                  (Header Log Register 1) 
 *

     ==============================================================
     PCIEEP(0)_CFG071 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  DWORD1          RO       0x0         0x0       Header Log Register (first DWORD)                                    
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  PCIE_CFG072 = Seventy-third 32-bits of PCIE type 0 config space 
 *                  (Header Log Register 2) 
 *

     ==============================================================
     PCIEEP(0)_CFG072 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  DWORD2          RO       0x0         0x0       Header Log Register (second DWORD)                                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG073 = Seventy-fourth 32-bits of PCIE type 0 config space 
 *                  (Header Log Register 3) 
 *

     ==============================================================
     PCIEEP(0)_CFG073 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  DWORD3          RO       0x0         0x0       Header Log Register (third DWORD)                                    
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG074 = Seventy-fifth 32-bits of PCIE type 0 config space 
 *                  (Header Log Register 4) 
 *

     ==============================================================
     PCIEEP(0)_CFG074 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  DWORD4          RO       0x0         0x0       Header Log Register (fourth DWORD)                                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG448 = Four hundred forty-ninth 32-bits of PCIE type 0 config space
 *                  (Ack Latency Timer and Replay Timer Register) 
 *

     ==============================================================
     PCIEEP(0)_CFG448 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>  RTLTL           R/W      0x102F      0x102F    Round Trip Latency Time Limit                                        
                                                         The Ack/Nak latency timer expires when it reaches this limit.
                                                         The default is then updated based on the Negotiated Link Width 
                                                         and Max_Payload_Size.
<31:16> RTL             R/W      0x308D      0x308D    Replay Time Limit                                                    
                                                         The replay timer expires when it reaches this limit. The PCI 
                                                         Express bus initiates a replay upon reception of a Nak or when 
                                                         the replay timer expires.
                                                         The default is then updated based on the Negotiated Link Width 
                                                         and Max_Payload_Size.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG449 = Four hundred fiftieth 32-bits of PCIE type 0 config space
 *                  (Other Message Register) 
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG449 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  OMR             R/W      0xFFFFFFFF  NS        Other Message Register                                               
                                                         This register can be used for either of the following purposes:
                                                         o To send a specific PCI Express Message, the application 
                                                           writes the payload of the Message into this register, then 
                                                           sets bit 0 of the Port Link Control Register to send the 
                                                           Message.
                                                         o To store a corruption pattern for corrupting the LCRC on all 
                                                           TLPs, the application places a 32-bit corruption pattern into 
                                                           this register and enables this function by setting bit 25 of 
                                                           the Port Link Control Register. When enabled, the transmit 
                                                           LCRC result is XOR'd with this pattern before inserting 
                                                           it into the packet.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG450 = Four hundred fifty-first 32-bits of PCIE type 0 config space
 *                  (Port Force Link Register)
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG450 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   LINK_NUM        RO       0x0         0x0       Link Number                                                          
                                                         Not used for Endpoint
<14:8>  NS              RAZ      NS          NS        Reserved                                                             
<15>    FORCE_LINK      R/W      0x0         0x0       Force Link                                                           
                                                         Forces the Link to the state specified by the Link State field. 
                                                         The Force Link pulse will trigger Link re-negotiation.
                                                         * As the The Force Link is a pulse, writing a 1 to it does 
                                                           trigger the forced link state event, even thought reading it 
                                                           always returns a 0. 
<21:16> LINK_STATE      R/W      0x00        0x0       Link State                                                           
                                                         The Link state that the PCI Express Bus will be forced to 
                                                         when bit 15 (Force Link) is set. 
                                                         State encoding:
                                                         o DETECT_QUIET              00h
                                                         o DETECT_ACT                01h
                                                         o POLL_ACTIVE               02h
                                                         o POLL_COMPLIANCE           03h
                                                         o POLL_CONFIG               04h
                                                         o PRE_DETECT_QUIET          05h
                                                         o DETECT_WAIT               06h
                                                         o CFG_LINKWD_START          07h
                                                         o CFG_LINKWD_ACEPT          08h
                                                         o CFG_LANENUM_WAIT          09h
                                                         o CFG_LANENUM_ACEPT         0Ah
                                                         o CFG_COMPLETE              0Bh
                                                         o CFG_IDLE                  0Ch
                                                         o RCVRY_LOCK                0Dh
                                                         o RCVRY_SPEED               0Eh
                                                         o RCVRY_RCVRCFG             0Fh
                                                         o RCVRY_IDLE                10h
                                                         o L0                        11h
                                                         o L0S                       12h
                                                         o L123_SEND_EIDLE           13h
                                                         o L1_IDLE                   14h
                                                         o L2_IDLE                   15h
                                                         o L2_WAKE                   16h
                                                         o DISABLED_ENTRY            17h
                                                         o DISABLED_IDLE             18h
                                                         o DISABLED                  19h
                                                         o LPBK_ENTRY                1Ah
                                                         o LPBK_ACTIVE               1Bh
                                                         o LPBK_EXIT                 1Ch
                                                         o LPBK_EXIT_TIMEOUT         1Dh
                                                         o HOT_RESET_ENTRY           1Eh
                                                         o HOT_RESET                 1Fh
<23:22> NS              RAZ      NS          NS        Reserved                                                             
<31:24> LPEC            R/W      0x7         0x7       Low Power Entrance Count                                             
                                                         The Power Management state will wait for this many clock cycles 
                                                         for the associated completion of a CfgWr to PCIE_CFG017 register
                                                         Power State (PS) field register to go low-power. This register 
                                                         is intended for applications that do not let the PCI Express 
                                                         bus handle a completion for configuration request to the 
                                                         Power Management Control and Status (PCIE_CFG017) register.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG451 = Four hundred fifty-second 32-bits of PCIE type 0 config space
 *                  (Ack Frequency Register)
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG451 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   ACK_FREQ        R/W      0x0         0x0       Ack Frequency                                                        
                                                         The number of pending Ack's specified here (up to 255) before 
                                                         sending an Ack.
<15:8>  N_FTS           R/W      0x80        0x80      N_FTS                                                                
                                                         The number of Fast Training Sequence ordered sets to be 
                                                         transmitted when transitioning from L0s to L0. The maximum 
                                                         number of FTS ordered-sets that a component can request is 255.
                                                         Note: A value of zero is not supported; a value of 
                                                               zero can cause the LTSSM to go into the recovery state 
                                                               when exiting from L0s.
<23:16> N_FTS_CC        R/W      0x80        0x80      N_FTS when common clock is used.                                     
                                                         The number of Fast Training Sequence ordered sets to be 
                                                         transmitted when transitioning from L0s to L0. The maximum 
                                                         number of FTS ordered-sets that a component can request is 255.
                                                          Note: A value of zero is not supported; a value of 
                                                                zero can cause the LTSSM to go into the recovery state 
                                                                when exiting from L0s.
<26:24> L0EL            R/W      0x3         0x3       L0s Entrance Latency                                                 
                                                         Values correspond to:
                                                         o 000: 1 ms
                                                         o 001: 2 ms
                                                         o 010: 3 ms
                                                         o 011: 4 ms
                                                         o 100: 5 ms
                                                         o 101: 6 ms
                                                         o 110 or 111: 7 ms
<29:27> L1EL            R/W      0x3         0x3       L1 Entrance Latency                                                  
                                                         Values correspond to:
                                                         o 000: 1 ms
                                                         o 001: 2 ms
                                                         o 010: 4 ms
                                                         o 011: 8 ms
                                                         o 100: 16 ms
                                                         o 101: 32 ms
                                                         o 110 or 111: 64 ms
<31:30> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG452 = Four hundred fifty-third 32-bits of PCIE type 0 config space
 *                  (Port Link Control Register)
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG452 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     OMR             R/W      0x0         0x0       Other Message Request                                                
                                                         When software writes a `1' to this bit, the PCI Express bus
                                                         transmits the Message contained in the Other Message register.
<1>     SD              R/W      0x0         0x0       Scramble Disable                                                     
                                                         Turns off data scrambling.
<2>     LE              R/W      0x0         0x0       Loopback Enable                                                      
                                                         Initiate loopback mode as a master. On a 0->1 transition,
                                                         the PCIe core sends TS ordered sets with the loopback bit set
                                                         to cause the link partner to enter into loopback mode as a
                                                         slave. Normal transmission is not possible when LE=1. To exit
                                                         loopback mode, take the link through a reset sequence.
<3>     RA              R/W      0x0         0x0       Reset Assert                                                         
                                                         Triggers a recovery and forces the LTSSM to the Hot Reset 
                                                         state (downstream port only).
<4>     NS              RAZ      NS          NS        Reserved                                                             
<5>     DLLLE           R/W      0x1         0x1       DLL Link Enable                                                      
                                                         Enables Link initialization. If DLL Link Enable = 0, the PCI 
                                                         Express bus does not transmit InitFC DLLPs and does not 
                                                         establish a Link.
<6>     NS              RAZ      NS          NS        Reserved                                                             
<7>     FLM             R/W      0x0         0x0       Fast Link Mode                                                       
                                                         Sets all internal timers to fast mode for simulation purposes.
                                                         If during an eeprom load, the first word loaded is 0xffffffff,
                                                         then the EEPROM load will be terminated and this bit will be set.
<11:8>  NS              RO       0x1         0x1       Reserved                                                             
<15:12> NS              RAZ      NS          NS        Reserved                                                             
<21:16> LME             R/W      0xF         0xF       Link Mode Enable                                                     
                                                         o 000001: x1
                                                         o 000011: x2
                                                         o 000111: x4
                                                         o 001111: x8
                                                         o 011111: x16 (not supported)
                                                         o 111111: x32 (not supported)
                                                         This field indicates the MAXIMUM number of lanes supported
                                                         by the PCIe port. It is set to 0xF or 0x7 depending
                                                         on the value of the QLM_CFG bits (0xF when QLM_CFG == 0
                                                         otherwise 0x7). The value can be set less than 0xF or 0x7
                                                         to limit the number of lanes the PCIe will attempt to use.
                                                         If the value of 0xF or 0x7 set by the HW is not desired, 
                                                         this field can be programmed to a smaller value (i.e. EEPROM)
                                                         See also MLW.
                                                         (Note: The value of this field does NOT indicate the number
                                                          of lanes in use by the PCIe. LME sets the max number of lanes
                                                          in the PCIe core that COULD be used. As per the PCIe specs,
                                                          the PCIe core can negotiate a smaller link width, so all
                                                          of x8, x4, x2, and x1 are supported when LME=0xF,
                                                          for example.)
<24:22> NS             RAZ      NS          NS        Reserved                                                              
<25>    ECCRC          R/W      0x0         0x0       Enable Corrupted CRC                                                  
                                                        Causes corrupt LCRC for TLPs when set, 
                                                        using the pattern contained in the Other Message register.
                                                        This is a test feature, not to be used in normal operation.
<31:26> NS             RAZ      NS          NS        Reserved                                                              
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG453 = Four hundred fifty-fourth 32-bits of PCIE type 0 config space
 *                  (Lane Skew Register) 
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG453 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<23:0>  ILST            R/W      0x000000    0x0       Insert Lane Skew for Transmit                                        
                                                         Causes skew between lanes for test purposes. There are three 
                                                         bits per Lane. The value is in units of one symbol time. For 
                                                         example, the value 010b for a Lane forces a skew of two symbol 
                                                         times for that Lane. The maximum skew value for any Lane is 5 
                                                         symbol times.
<24>    FCD             R/W      0x0         0x0       Flow Control Disable                                                 
                                                         Prevents the PCI Express bus from sending FC DLLPs.
<25>    ACK_NAK         R/W      0x0         0x0       Ack/Nak Disable                                                      
                                                         Prevents the PCI Express bus from sending Ack and Nak DLLPs.
<30:26> NS              RAZ      NS          NS        Reserved                                                             
<31>    DLLD            R/W      0x0         0x0       Disable Lane-to-Lane Deskew                                          
                                                         Disables the internal Lane-to-Lane deskew logic.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG454 = Four hundred fifty-fifth 32-bits of PCIE type 0 config space
 *                  (Symbol Number Register) 
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG454 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>   NTSS            R/W      0xA         0xA       Number of TS Symbols                                                 
                                                         Sets the number of TS identifier symbols that are sent in TS1 
                                                         and TS2 ordered sets.
<7:4>   NS              RO       NS          NS        Reserved                                                             
<10:8>  NSKPS           R/W      0x3         0x3       Number of SKP Symbols                                                
<13:11> NS              RAZ      NS          NS        Reserved                                                             
<18:14> TMRT            R/W      0x8         0x8       Timer Modifier for Replay Timer                                      
                                                         Increases the timer value for the replay timer, in increments 
                                                         of 64 clock cycles.
<23:19> TMANLT          R/W      0x0         0x0       Timer Modifier for Ack/Nak Latency Timer                             
                                                         Increases the timer value for the Ack/Nak latency timer, in 
                                                         increments of 64 clock cycles.
<28:24> TMFCWT          R/W      0x0         0x0       Timer Modifier for Flow Control Watchdog Timer                       
                                                         Increases the timer value for the Flow Control watchdog timer, 
                                                         in increments of 16 clock cycles.
<31:29> NS              RO       NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG455 = Four hundred fifty-sixth 32-bits of PCIE type 0 config space
 *                  (Symbol Timer Register/Filter Mask Register 1)
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG455 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<10:0>  SKPIV           R/W      0x500       0x500     SKP Interval Value                                                   
<14:11> NS              RAZ      NS          NS        Reserved                                                             
<15>    DFCWT           R/W      0x0         0x0       Disable FC Watchdog Timer                                            
<16>    M_FUN           R/W      0x0         0x0       Mask function                                                        
<17>    M_POIS_FILT     R/W      0x0         0x0       Mask poisoned TLP filtering                                          
<18>    M_BAR_MATCH     R/W      0x0         0x0       Mask BAR match filtering                                             
<19>    M_CFG1_FILT     R/W      0x0         0x0       Mask Type 1 Configuration Request filtering                          
<20>    M_LK_FILT       R/W      0x0         0x0       Mask Locked Request filtering                                        
<21>    M_CPL_TAG_ERR   R/W      0x0         0x0       Mask Tag error rules for received Completions                        
<22>    M_CPL_RID_ERR   R/W      0x0         0x0       Mask Requester ID mismatch error for received Completions            
<23>    M_CPL_FUN_ERR   R/W      0x0         0x0       Mask function mismatch error for received Completions                
<24>    M_CPL_TC_ERR    R/W      0x0         0x0       Mask Traffic Class mismatch error for received Completions           
<25>    M_CPL_ATTR_ERR  R/W      0x0         0x0       Mask Attributes mismatch error for received Completions              
<26>    M_CPL_LEN_ERR   R/W      0x0         0x0       Mask Length mismatch error for received Completions                  
<27>    M_ECRC_FILT     R/W      0x0         0x0       Mask ECRC error filtering                                            
<28>    M_CPL_ECRC_FILT R/W      0x0         0x0       Mask ECRC error filtering for Completions                            
<29>    MSG_CTRL        R/W      0x0         0x0       Message Control                                                      
                                                         The application must not change this field.
<30>    M_IO_FILT       R/W      0x0         0x0       Mask filtering of received I/O Requests (RC mode only)               
<31>    M_CFG0_FILT     R/W      0x0         0x0       Mask filtering of received Configuration Requests (RC mode only)     
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG456 = Four hundred fifty-seventh 32-bits of PCIE type 0 config space
 *                  (Filter Mask Register 2)
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG456 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:2>  NS              RAZ      NS          NS        Reserved                                                             
<1>     M_VEND1_DRP     R/W      0x0         0x0       Mask Vendor MSG Type 1 dropped silently                              
<0>     M_VEND0_DRP     R/W      0x0         0x0       Mask Vendor MSG Type 0 dropped with UR error reporting.              
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG458 = Four hundred fifty-ninth 32-bits of PCIE type 0 config space
 *                  (Debug Register 0) 
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG458 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  DBG_INFO_L32    RO       0x0         0x0       Debug Info Lower 32 Bits                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG459 = Four hundred sixtieth 32-bits of PCIE type 0 config space
 *                  (Debug Register 1) 
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG459 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  DBG_INFO_U32     RO       0x0         0x0      Debug Info Upper 32 Bits                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG460 = Four hundred sixty-first 32-bits of PCIE type 0 config space
 *                  (Transmit Posted FC Credit Status)
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG460 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>  TPDFCC          RO       0x0         0x0       Transmit Posted Data FC Credits                                      
                                                         The Posted Data credits advertised by the receiver at the other 
                                                         end of the Link, updated with each UpdateFC DLLP.
<19:12> TPHFCC          RO       0x0         0x0       Transmit Posted Header FC Credits                                    
                                                         The Posted Header credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
<31:20> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  PCIE_CFG461 = Four hundred sixty-second 32-bits of PCIE type 0 config space
 *                  (Transmit Non-Posted FC Credit Status) 
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG461 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>  TCDFCC          RO       0x0         0x0       Transmit Non-Posted Data FC Credits                                  
                                                         The Non-Posted Data credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
<19:12> TCHFCC          RO       0x0         0x0       Transmit Non-Posted Header FC Credits                                
                                                         The Non-Posted Header credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
<31:20> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG462 = Four hundred sixty-third 32-bits of PCIE type 0 config space
 *                  (Transmit Completion FC Credit Status )
 *
 *  

     ==============================================================
     PCIEEP(0)_CFG462 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>  TCDFCC          RO       0x0         0x0       Transmit Completion Data FC Credits                                  
                                                         The Completion Data credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
<19:12> TCHFCC          RO       0x0         0x0       Transmit Completion Header FC Credits                                
                                                         The Completion Header credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
<31:20> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG463 = Four hundred sixty-fourth 32-bits of PCIE type 0 config space
 *                  (Queue Status) 
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG463 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     RTLPFCCNR       RO       0x0         0x0       Received TLP FC Credits Not Returned                                 
                                                         Indicates that the PCI Express bus has sent a TLP but has not 
                                                         yet received an UpdateFC DLLP indicating that the credits for 
                                                         that TLP have been restored by the receiver at the other end of 
                                                         the Link.
<1>     TRBNE           RO       0x0         0x0       Transmit Retry Buffer Not Empty                                      
                                                         Indicates that there is data in the transmit retry buffer.
<2>     RQNE            RO       0x0         0x0       Received Queue Not Empty                                             
                                                         Indicates there is data in one or more of the receive buffers.
<31:3>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG464 = Four hundred sixty-fifth 32-bits of PCIE type 0 config space
 *                  (VC Transmit Arbitration Register 1)
 *
 *

     ==============================================================
     PCIEEP(0)_CFG464 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   WRR_VC0         RO       0xF         0xF       WRR Weight for VC0                                                   
<15:8>  WRR_VC1         RO       0x0         0x0       WRR Weight for VC1                                                   
<23:16> WRR_VC2         RO       0x0         0x0       WRR Weight for VC2                                                   
<31:24> WRR_VC3         RO       0x0         0x0       WRR Weight for VC3                                                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG465 = Four hundred sixty-sixth 32-bits of PCIE type 0 config space
 *                  (VC Transmit Arbitration Register 2)
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG465 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   WRR_VC4         RO       0x0         0x0       WRR Weight for VC4                                                   
<15:8>  WRR_VC5         RO       0x0         0x0       WRR Weight for VC5                                                   
<23:16> WRR_VC6         RO       0x0         0x0       WRR Weight for VC6                                                   
<31:24> WRR_VC7         RO       0x0         0x0       WRR Weight for VC7                                                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG466 = Four hundred sixty-seventh 32-bits of PCIE type 0 config space
 *                  (VC0 Posted Receive Queue Control)
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG466 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>  DATA_CREDITS    RO/WRSL  0x048       0x048     VC0 Posted Data Credits                                              
                                                         The number of initial Posted data credits for VC0, used for all 
                                                         receive queue buffer configurations.
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<19:12> HEADER_CREDITS  RO/WRSL  0x20        0x20      VC0 Posted Header Credits                                            
                                                         The number of initial Posted header credits for VC0, used for 
                                                         all receive queue buffer configurations.
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<20>    NS              RAZ      NS          NS        Reserved                                                             
<23:21> QUEUE_MODE      RO/WRSL  0x2         0x2      VC0 Posted TLP Queue Mode                                             
                                                         The operating mode of the Posted receive queue for VC0, used 
                                                         only in the segmented-buffer configuration, writable through
                                                         PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
                                                         Only one bit can be set at a time:
                                                         o Bit 23: Bypass
                                                         o Bit 22: Cut-through
                                                         o Bit 21: Store-and-forward
<29:24> NS              RAZ      NS          NS        Reserved                                                             
<30>    TYPE_ORDERING   RO/WRSL  0x1         0x1       TLP Type Ordering for VC0                                            
                                                         Determines the TLP type ordering rule for VC0 receive queues, 
                                                         used only in the segmented-buffer configuration, writable 
                                                         through PESC(0..1)_CFG_WR:
                                                         o 1: Ordering of received TLPs follows the rules in 
                                                              PCI Express Base Specification, Revision 1.1
                                                         o 0: Strict ordering for received TLPs: Posted, then 
                                                              Completion, then Non-Posted
                                                         However, the application must not change this field.
<31>    RX_QUEUE_ORDER  RO/WRSL  0x0         0x0       VC Ordering for Receive Queues                                       
                                                         Determines the VC ordering rule for the receive queues, used 
                                                         only in the segmented-buffer configuration, 
                                                         writable through PESC(0..1)_CFG_WR:
                                                         o 1: Strict ordering, higher numbered VCs have higher priority
                                                         o 0: Round robin
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG467 = Four hundred sixty-eighth 32-bits of PCIE type 0 config space
 *                  (VC0 Non-Posted Receive Queue Control)
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG467 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>  DATA_CREDITS    RO/WRSL  0x004       0x4       VC0 Non-Posted Data Credits                                          
                                                         The number of initial Non-Posted data credits for VC0, used for 
                                                         all receive queue buffer configurations.
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<19:12> HEADER_CREDITS  RO/WRSL  0x08        0x8       VC0 Non-Posted Header Credits                                        
                                                         The number of initial Non-Posted header credits for VC0, used 
                                                         for all receive queue buffer configurations.
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<20>    NS              RAZ      NS          NS        Reserved                                                             
<23:21> QUEUE_MODE      RO/WRSL  0x2         0x2       VC0 Non-Posted TLP Queue Mode                                        
                                                         The operating mode of the Non-Posted receive queue for VC0, 
                                                         used only in the segmented-buffer configuration, writable 
                                                         through PESC(0..1)_CFG_WR.
                                                         Only one bit can be set at a time:
                                                         o Bit 23: Bypass
                                                         o Bit 22: Cut-through
                                                         o Bit 21: Store-and-forward
                                                         However, the application must not change this field.
<31:24> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG468 = Four hundred sixty-ninth 32-bits of PCIE type 0 config space
 *                  (VC0 Completion Receive Queue Control)
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG468 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>  DATA_CREDITS    RO/WRSL  0x000       0x00      VC0 Completion Data Credits                                          
                                                         The number of initial Completion data credits for VC0, used for 
                                                         all receive queue buffer configurations.
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<19:12> HEADER_CREDITS  RO/WRSL  0x00        0x00      VC0 Completion Header Credits                                        
                                                         The number of initial Completion header credits for VC0, used 
                                                         for all receive queue buffer configurations.
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<20>    NS              RAZ      NS          NS        Reserved                                                             
<23:21> QUEUE_MODE      RO/WRSL  0x2         0x2       VC0 Completion TLP Queue Mode                                        
                                                         The operating mode of the Completion receive queue for VC0, 
                                                         used only in the segmented-buffer configuration, writable 
                                                         through PESC(0..1)_CFG_WR.
                                                         Only one bit can be set at a time:
                                                         o Bit 23: Bypass
                                                         o Bit 22: Cut-through
                                                         o Bit 21: Store-and-forward
                                                         However, the application must not change this field.
<31:24> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG490 = Four hundred ninety-first 32-bits of PCIE type 0 config space
 *                  (VC0 Posted Buffer Depth)
 *

     ==============================================================
     PCIEEP(0)_CFG490 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>  DATA_DEPTH      RO/WRSL  0x00D8      0xD8      VC0 Posted Data Queue Depth                                          
                                                         Sets the number of entries in the Posted data queue for VC0 
                                                         when using the segmented-buffer configuration, writable 
                                                         through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<15:14> NS              RAZ      NS          NS        Reserved                                                             
<25:16> HEADER_DEPTH    RO/WRSL  0x026       0x26      VC0 Posted Header Queue Depth                                        
                                                         Sets the number of entries in the Posted header queue for VC0 
                                                         when using the segmented-buffer configuration, writable through 
                                                         PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<31:26> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG491 = Four hundred ninety-second 32-bits of PCIE type 0 config space
 *                  (VC0 Non-Posted Buffer Depth)
 *

     ==============================================================
     PCIEEP(0)_CFG491 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>  DATA_DEPTH      RO/WRSL  0x0038      0x38      VC0 Non-Posted Data Queue Depth                                      
                                                         Sets the number of entries in the Non-Posted data queue for VC0 
                                                         when using the segmented-buffer configuration, writable 
                                                         through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<15:14> NS              RAZ      NS          NS        Reserved                                                             
<25:16> HEADER_DEPTH    RO/WRSL  0x00E       0xE       VC0 Non-Posted Header Queue Depth                                    
                                                         Sets the number of entries in the Non-Posted header queue for 
                                                         VC0 when using the segmented-buffer configuration, writable 
                                                         through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<31:26> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG492 = Four hundred ninety-third 32-bits of PCIE type 0 config space
 *                  (VC0 Completion Buffer Depth)
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG492 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>  DATA_DEPTH      RO/WRSL  0x0168      0x168     VC0 Completion Data Queue Depth                                      
                                                         Sets the number of entries in the Completion data queue for VC0 
                                                         when using the segmented-buffer configuration, writable 
                                                         through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<15:14> NS              RAZ      NS          NS        Reserved                                                             
<25:16> HEADER_DEPTH    RO/WRSL  0x046       0x46      VC0 Completion Header Queue Depth                                    
                                                         Sets the number of entries in the Completion header queue for 
                                                         VC0 when using the segmented-buffer configuration, writable 
                                                         through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<31:26> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG516 = Five hundred seventeenth 32-bits of PCIE type 0 config space
 *                  (PHY Status Register) 
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG516 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PHY_STAT        RO       0x0         0x0       PHY Status                                                           
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG517 = Five hundred eighteenth 32-bits of PCIE type 0 config space
 *                  (PHY Control Register)
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG517 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PHY_CTRL        R/W      0x0         0x0       PHY Control                                                          
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG004_MASK (BAR Mask 0 - Low)
 *                   The BAR 0 Mask register is invisible to host software and not readable from the application.
 *                   The BAR 0 Mask register is only writable through PESC(0..1)_CFG_WR.
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG004_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:1>  LMASK           WORSL    0x1FFF      0x1FFF    Bar Mask Low                                                         
<0>     ENB             WORSL    0x1         0x1       Bar Enable                                                           
                                                         o 0: BAR 0 is disabled
                                                         o 1: BAR 0 is enabled
                                                         Bit 0 is interpreted as BAR Enable when writing to the BAR Mask 
                                                         register rather than as a mask bit because bit 0 of a BAR is 
                                                         always masked from writing by host software. Bit 0 must be
                                                         written prior to writing the other mask bits.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG005_MASK = (BAR Mask 0 - High)
 *                   The BAR 0 Mask register is invisible to host software and not readable from the application.
 *                   The BAR 0 Mask register is only writable through PESC(0..1)_CFG_WR.
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG005_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  UMASK           WORSL    0x0         0x0       Bar Mask High                                                        
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG006_MASK (BAR Mask 1 - Low)
 *                   The BAR 1 Mask register is invisible to host software and not readable from the application.
 *                   The BAR 1 Mask register is only writable through PESC(0..1)_CFG_WR.
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG006_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:1>  LMASK           WORSL    0x1FFFFFF   0x1FFFFFF Bar Mask Low                                                         
<0>     ENB             WORSL    0x1         0x1       Bar Enable                                                           
                                                         o 0: BAR 1 is disabled
                                                         o 1: BAR 1 is enabled
                                                         Bit 0 is interpreted as BAR Enable when writing to the BAR Mask 
                                                         register rather than as a mask bit because bit 0 of a BAR is 
                                                         always masked from writing by host software. Bit 0 must be
                                                         written prior to writing the other mask bits.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG007_MASK (BAR Mask 1 - High)
 *                   The BAR 1 Mask register is invisible to host software and not readable from the application.
 *                   The BAR 1 Mask register is only writable through PESC(0..1)_CFG_WR.
 *
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG007_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  UMASK           WORSL    0x0         0x0       Bar Mask High                                                        
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG008_MASK (BAR Mask 2 - Low)
 *                   The BAR 2 Mask register is invisible to host software and not readable from the application.
 *                   The BAR 2 Mask register is only writable through PESC(0..1)_CFG_WR.
 * 
 *

     ==============================================================
     PCIEEP(0)_CFG008_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:1>  LMASK           WORSL    0x7FFFFFFF 0x7FFFFFFF Bar Mask Low                                                         
<0>     ENB             WORSL    0x1         0x1       Bar Enable                                                           
                                                         o 0: BAR 2 is disabled
                                                         o 1: BAR 2 is enabled
                                                         Bit 0 is interpreted as BAR Enable when writing to the BAR Mask 
                                                         register rather than as a mask bit because bit 0 of a BAR is 
                                                         always masked from writing by host software. Bit 0 must be
                                                         written prior to writing the other mask bits.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG009_MASK (BAR Mask 2 - High)
 *                   The BAR 2 Mask register is invisible to host software and not readable from the application.
 *                   The BAR 2 Mask register is only writable through PESC(0..1)_CFG_WR.
 *

     ==============================================================
     PCIEEP(0)_CFG009_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  UMASK           WORSL    0x7F        0x7F      Bar Mask High                                                        
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG012_MASK (Exapansion ROM BAR Mask)
 *                   The ROM Mask register is invisible to host software and not readable from the application.
 *                   The ROM Mask register is only writable through PESC(0..1)_CFG_WR.
 *

     ==============================================================
     PCIEEP(0)_CFG012_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:1>  MASK            WORSL    0x7FFFFFFF 0x7FFFFFFF Bar Mask Low                                                         
<0>     ENB             WORSL    0x1         0x1       Bar Enable                                                           
                                                         o 0: BAR ROM is disabled
                                                         o 1: BAR ROM is enabled
                                                         Bit 0 is interpreted as BAR Enable when writing to the BAR Mask 
                                                         register rather than as a mask bit because bit 0 of a BAR is 
                                                         always masked from writing by host software. Bit 0 must be
                                                         written prior to writing the other mask bits.
----------------------------------------------------------------------------------------------------
===



 *
 *                PCIE_CFG000 = First 32-bits of PCIE type 1 config space (Device ID and Vendor ID Register)
 *                  
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG000 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>  VENDID          R/W      0x177d      0x177d    Vendor ID, writable through PESC(0..1)_CFG_WR                             
                                                         However, the application must not change this field.                              
<31:16> DEVID           R/W      0x50        0x50      Device ID, writable through PESC(0..1)_CFG_WR                             
                                                         However, the application must not change this field.               
----------------------------------------------------------------------------------------------------
===

 *
 *                PCIE_CFG001 = Second 32-bits of PCIE type 1 config space (Command/Status Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG001 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     ISAE            R/W      0x0         0x0       I/O Space Enable                                                     
<1>     MSAE            R/W      0x0         0x0       Memory Space Enable                                                  
<2>     ME              R/W      0x0         0x0       Bus Master Enable                                                    
<3>     SCSE            RO       0x0         0x0       Special Cycle Enable                                                 
                                                         Not applicable for PCI Express. Must be hardwired to 0.
<4>     MWICE           RO       0x0         0x0       Memory Write and Invalidate                                          
                                                         Not applicable for PCI Express. Must be hardwired to 0. 
<5>     VPS             RO       0x0         0x0       VGA Palette Snoop                                                    
                                                         Not applicable for PCI Express. Must be hardwired to 0. 
<6>     PER             R/W      0x0         0x0       Parity Error Response                                                
<7>     IDS_WCC         RO       0x0         0x0       IDSEL Stepping/Wait Cycle Control                                    
                                                         Not applicable for PCI Express. Must be hardwired to 0
<8>     SEE             R/W      0x0         0x0       SERR# Enable                                                         
<9>     FBBE            RO       0x0         0x0       Fast Back-to-Back Enable                                             
                                                         Not applicable for PCI Express. Must be hardwired to 0. 
<10>    I_DIS           R/W      0x0         0x0       INTx Assertion Disable                                               
<18:11> NS              RAZ      NS          NS        Reserved                                                             
<19>    I_STAT          RO       0x0         0x0       INTx Status                                                          
<20>    CL              RO       0x1         0x1       Capabilities List                                                    
                                                         Indicates presence of an extended capability item. 
                                                         Hardwired to 1.
<21>    M66             RO       0x0         0x0       66 MHz Capable                                                       
                                                         Not applicable for PCI Express. Hardwired to 0. 
<22>    NS              RO       NS          NS        Reserved                                                             
<23>    FBB             RO       0x0         0x0       Fast Back-to-Back Capable                                            
                                                         Not applicable for PCI Express. Hardwired to 0. 
<24>    MDPE            R/W1C    0x0         0x0       Master Data Parity Error                                             
<26:25> DEVT            RO       0x0         0x0       DEVSEL Timing                                                        
                                                         Not applicable for PCI Express. Hardwired to 0. 
<27>    STA             R/W1C    0x0         0x0       Signaled Target Abort                                                
<28>    RTA             R/W1C    0x0         0x0       Received Target Abort                                                
<29>    RMA             R/W1C    0x0         0x0       Received Master Abort                                                
<30>    SSE             R/W1C    0x0         0x0       Signaled System Error                                                
<31>    DPE             R/W1C    0x0         0x0       Detected Parity Error                                                
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG002 = Third 32-bits of PCIE type 1 config space (Revision ID/Class Code Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG002 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   RID             R/W      0x00        0x00      Revision ID, writable through PESC(0..1)_CFG_WR                           
                                                         However, the application must not change this field.                                             
<15:8>  PI              R/W      0x00        0x0       Programming Interface, writable through PESC(0..1)_CFG_WR                 
                                                         However, the application must not change this field.                                             
<23:16> SC              R/W      0x30        0x30      Subclass Code, writable through PESC(0..1)_CFG_WR                         
                                                         However, the application must not change this field.                                             
<31:24> BCC             R/W      0x0B        0x0B      Base Class Code, writable through PESC(0..1)_CFG_WR                       
                                                         However, the application must not change this field.                              
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG003 = Fourth 32-bits of PCIE type 1 config space (Cache Line Size/Master Latency Timer/Header Type Register/BIST Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG003 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   CLS             R/W      0x00        0x0       Cache Line Size                                                      
                                                         The Cache Line Size register is RW for legacy compatibility 
                                                         purposes and is not applicable to PCI Express device 
                                                         functionality. 
<15:8>  LT              RO       0x00        0x0       Master Latency Timer                                                 
                                                         Not applicable for PCI Express, hardwired to 0.
<22:16> CHF             RO       0x1         0x1       Configuration Header Format                                          
                                                         Hardwired to 1.
<23>    MFD             R/W      0x0         0x0       Multi Function Device                                                
                                                         The Multi Function Device bit is writable through PESC(0..1)_CFG_WR.
                                                         However, this is a single function device. Therefore, the 
                                                         application must not write a 1 to this bit.
<31:24> BIST            RO       0x00        0x0       The BIST register functions are not supported.                       
                                                         All 8 bits of the BIST register are hardwired to 0.                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG004 = Fifth 32-bits of PCIE type 1 config space (Base Address Register 0 - Low) 
 *

     ==============================================================
     PCIERC(0..1)_CFG004 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  NS              RO       NS          NS        Unused                                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG005 = Sixth 32-bits of PCIE type 1 config space (Base Address Register 0 - High)
 *

     ==============================================================
     PCIERC(0..1)_CFG005 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  NS              RO       NS          NS        Unused                                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG006 = Seventh 32-bits of PCIE type 1 config space (Bus Number Registers)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG006 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   PBNUM           R/W      0x00        0x0       Primary Bus Number                                                   
<15:8>  SBNUM           R/W      0x00        0x0       Secondary Bus Number                                                 
<23:16> SUBBNUM         R/W      0x00        0x0       Subordinate Bus Number                                               
<31:24> SLT             RO       0x00        0x0       Secondary Latency Timer                                              
                                                         Not applicable to PCI Express, hardwired to 0x00.
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  PCIE_CFG007 = Eighth 32-bits of PCIE type 1 config space (IO Base and IO Limit/Secondary Status Register)
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG007 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     IO32A           R/W      0x1         0x1       32-Bit I/O Space                                                     
                                                         o 0 = 16-bit I/O addressing
                                                         o 1 = 32-bit I/O addressing
                                                         This bit is writable through PESC(0..1)_CFG_WR.
                                                         When the application 
                                                         writes to this bit through PESC(0..1)_CFG_WR,
                                                         the same value is written 
                                                         to bit 8 of this register.
<3:1>   NS              RAZ      0x00        0x0       Reserved                                                             
<7:4>   LIO_BASE        R/W      0x00        0x0       I/O Space Base                                                       
<8>     IO32B           RO       0x1         0x1       32-Bit I/O Space                                                     
<11:9>  NS              RAZ      0x00        0x0       Reserved                                                             
<15:12> LIO_LIMI        R/W      0x00        0x0       I/O Space Limit                                                      
<20:16> NS              RAZ      NS          NS        Reserved                                                             
<21>    M66             RO       0x0         0x0       66 MHz Capable                                                       
                                                         Not applicable for PCI Express. Hardwired to 0. 
<22>    NS              RO       NS          NS        Reserved                                                             
<23>    FBB             RO       0x0         0x0       Fast Back-to-Back Capable                                            
                                                         Not applicable for PCI Express. Hardwired to 0. 
<24>    MDPE            R/W1C    0x0         0x0       Master Data Parity Error                                             
<26:25> DEVT            RO       0x0         0x0       DEVSEL Timing                                                        
                                                         Not applicable for PCI Express. Hardwired to 0. 
<27>    STA             R/W1C    0x0         0x0       Signaled Target Abort                                                
<28>    RTA             R/W1C    0x0         0x0       Received Target Abort                                                
<29>    RMA             R/W1C    0x0         0x0       Received Master Abort                                                
<30>    SSE             R/W1C    0x0         0x0       Signaled System Error                                                
<31>    DPE             R/W1C    0x0         0x0       Detected Parity Error                                                
----------------------------------------------------------------------------------------------------
===

 *
 *                 PCIE_CFG008 = Ninth 32-bits of PCIE type 1 config space (Memory Base and Memory Limit Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG008 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>   NS              RO       NS          NS        Reserved                                                             
<15:4>  MB_ADDR         R/W      0x00        0x0       Memory Base Address                                                  
<19:16> NS              RO       NS          NS        Reserved                                                             
<31:20> ML_ADDR         R/W      0x00        0x0       Memory Limit Address                                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG009 = Tenth 32-bits of PCIE type 1 config space (Prefetchable Memory Base and Limit Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG009 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     MEM64A          R/W      0x1         0x1       64-Bit Memory Addressing                                             
                                                         o 0 = 32-bit memory addressing
                                                         o 1 = 64-bit memory addressing
                                                         This bit is writable through PESC(0..1)_CFG_WR.
                                                         When the application 
                                                         writes to this bit through PESC(0..1)_CFG_WR,
                                                         the same value is written 
                                                         to bit 16 of this register.
<3:1>   NS              RO       NS          NS        Reserved                                                             
<15:4>  LMEM_BASE       R/W      0x000       0x0       Upper 12 bits of 32-bit Prefetchable Memory Start Address            
<16>    MEM64B          RO       0x1         0x1       64-Bit Memory Addressing                                             
                                                         o 0 = 32-bit memory addressing
                                                         o 1 = 64-bit memory addressing
<19:17> NS              RO       NS          NS        Reserved                                                             
<31:20> LMEM_LIMIT      R/W      0x000       0x0       Upper 12 bits of 32-bit Prefetchable Memory End Address              
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG010 = Eleventh 32-bits of PCIE type 1 config space (Prefetchable Base Upper 32 Bits Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG010 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  UMEM_BASE       R/W      0x00000000  0x0       Upper 32 Bits of Base Address of Prefetchable Memory Space           
                                                         Used only when 64-bit prefetchable memory addressing is 
                                                         enabled.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG011 = Twelfth 32-bits of PCIE type 1 config space (Prefetchable Limit Upper 32 Bits Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG011 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  UMEM_LIMIT      R/W      0x00000000  0x0       Upper 32 Bits of Limit Address of Prefetchable Memory Space          
                                                         Used only when 64-bit prefetchable memory addressing is 
                                                         enabled.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG012 = Thirteenth 32-bits of PCIE type 1 config space (IO Base and Limit Upper 16 Bits Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG012 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>  UIO_BASE        R/W      0x0000      0x0       Upper 16 Bits of I/O Base (if 32-bit I/O decoding is supported       
                                                         for devices on the secondary side)                    
<31:16> UIO_LIMIT       R/W      0x0000      0x0       Upper 16 Bits of I/O Limit (if 32-bit I/O decoding is supported      
                                                         for devices on the secondary side)                    
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG013 = Fourteenth 32-bits of PCIE type 1 config space (Capability Pointer Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG013 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   CP              R/W      0x40        0x40      First Capability Pointer.                                            
                                                         Points to Power Management Capability structure by 
                                                         default, writable through PESC(0..1)_CFG_WR
                                                         However, the application must not change this field.
<31:8>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG014 = Fifteenth 32-bits of PCIE type 1 config space (Expansion ROM Base Address Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG014 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  NS              RAZ      NS          NS        Unused                                                               
----------------------------------------------------------------------------------------------------
===



 *
 *                  PCIE_CFG015 = Sixteenth 32-bits of PCIE type 1 config space (Interrupt Line Register/Interrupt Pin/Bridge Control Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG015 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   IL              R/W      0xFF        0xFF      Interrupt Line                                                       
<15:8>  INTA            R/W      0x01        0x01      Interrupt Pin                                                        
                                                         Identifies the legacy interrupt Message that the device 
                                                         (or device function) uses.
                                                         The Interrupt Pin register is writable through PESC(0..1)_CFG_WR.
                                                         In a single-function configuration, only INTA is used. 
                                                         Therefore, the application must not change this field.               
<16>    PERE            R/W      0x0         0x0       Parity Error Response Enable                                         
<17>    SEE             R/W      0x0         0x0       SERR Enable                                                          
<18>    ISAE            R/W      0x0         0x0       ISA Enable                                                           
<19>    VGAE            R/W      0x0         0x0       VGA Enable                                                           
<20>    VGA16D          R/W      0x0         0x0       VGA 16-Bit Decode                                                    
<21>    MAM             RO       0x0         0x0       Master Abort Mode                                                    
                                                         Not applicable to PCI Express, hardwired to 0.
<22>    SBRST           R/W      0x0         0x0       Secondary Bus Reset                                                  
                                                         Hot reset. Causes TS1s with the hot reset bit to be sent to
                                                         the link partner. When set, SW should wait 2ms before
                                                         clearing. The link partner normally responds by sending TS1s
                                                         with the hot reset bit set, which will cause a link
                                                         down event - refer to "PCIe Link-Down Reset in RC Mode"
                                                         section.
<23>    FBBE            RO       0x0         0x0       Fast Back-to-Back Transactions Enable                                
                                                         Not applicable to PCI Express, hardwired to 0.
<24>    PDT             RO       0x0         0x0       Primary Discard Timer                                                
                                                         Not applicable to PCI Express, hardwired to 0.
<25>    SDT             RO       0x0         0x0       Secondary Discard Timer                                              
                                                         Not applicable to PCI Express, hardwired to 0.
<26>    DTS             RO       0x0         0x0       Discard Timer Status                                                 
                                                         Not applicable to PCI Express, hardwired to 0.
<27>    DTSEES          RO       0x0         0x0       Discard Timer SERR Enable Status                                     
                                                         Not applicable to PCI Express, hardwired to 0.
<31:28> NS              RO       NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                 PCIE_CFG016 = Seventeenth 32-bits of PCIE type 1 config space 
 *                  (Power Management Capability ID/
 *                  Power Management Next Item Pointer/
 *                  Power Management Capabilities Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG016 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   PMCID           RO       0x01        0x01      Power Management Capability ID                                       
<15:8>  NCP             R/W      0x50        0x50      Next Capability Pointer                                              
                                                         Points to the MSI capabilities by default, writable 
                                                         through PESC(0..1)_CFG_WR.
<18:16> PMSV            R/W      0x03        0x03      Power Management Specification Version,                              
                                                         writable through PESC(0..1)_CFG_WR.              
                                                         However, the application must not change this field.
<19>    PME_Clock       RO       0x0         0x0       PME Clock, hardwired to 0                                            
<20>    NS              RAZ      NS          NS        Reserved                                                             
<21>    DSI             R/W      0x0         0x0       Device Specific Initialization (DSI), writable through PESC(0..1)_CFG_WR  
                                                         However, the application must not change this field.
<24:22> AUXC            R/W      0x0         0x0       AUX Current, writable through PESC(0..1)_CFG_WR                           
                                                         However, the application must not change this field.
<25>    D1S             R/W      0x0         0x0       D1 Support, writable through PESC(0..1)_CFG_WR                            
                                                         However, the application must not change this field.
<26>    D2S             R/W      0x0         0x0       D2 Support, writable through PESC(0..1)_CFG_WR                            
                                                         However, the application must not change this field.
<31:27> PMES            R/W      0x0         0x0       PME_Support                                                          
                                                         A value of 0 for any bit indicates that the 
                                                         device (or function) is not capable of generating PME Messages 
                                                         while in that power state:
                                                         o Bit 11: If set, PME Messages can be generated from D0
                                                         o Bit 12: If set, PME Messages can be generated from D1
                                                         o Bit 13: If set, PME Messages can be generated from D2
                                                         o Bit 14: If set, PME Messages can be generated from D3hot
                                                         o Bit 15: If set, PME Messages can be generated from D3cold
                                                         The PME_Support field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG017 = Eighteenth 32-bits of PCIE type 1 config space (Power Management Control and Status Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG017 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<1:0>   PS              R/W      0x0         0x0       Power State                                                          
                                                         Controls the device power state:
                                                           o 00b: D0
                                                           o 01b: D1
                                                           o 10b: D2
                                                           o 11b: D3
                                                         The written value is ignored if the specific state is 
                                                         not supported.
<2>     NS              RAZ      NS          NS        Reserved                                                             
<3>     NSR             R/W      0x0         0x0       No Soft Reset, writable through PESC(0..1)_CFG_WR                         
                                                         However, the application must not change this field.
<7:4>   NS              RAZ      NS          NS        Reserved                                                             
<8>     PMEENS          R/W      0x0         0x0       PME Enable                                                           
                                                         A value of 1 indicates that the device is enabled to 
                                                         generate PME.
<12:9>  PMDS            RO       0x0         0x0       Data Select (not supported)                                          
<14:13> PMEDSIA         RO       0x0         0x0       Data Scale (not supported)                                           
<15>    PMESS           R/W1C    0x0         0x0       PME Status                                                           
                                                        Indicates if a previously enabled PME event occurred or not.
<21:16> NS              RAZ      NS          NS        Reserved                                                             
<22>    BD3H            RO       0x0         0x0       B2/B3 Support, hardwired to 0                                        
<23>    BPCCEE          RO       0x0         0x0       Bus Power/Clock Control Enable, hardwired to 0                       
<31:24> PMDIA           RO       0x00        0x0       Data register for additional information (not supported)             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG020 = Twenty-first 32-bits of PCIE type 1 config space
 *                  (MSI Capability ID/
 *                   MSI Next Item Pointer/
 *                   MSI Control Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG020 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   MSICID          RO       0x05        0x05      MSI Capability ID                                                    
<15:8>  NCP             R/W      0x70        0x70      Next Capability Pointer                                              
                                                         Points to PCI Express Capabilities by default, 
                                                         writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<16>    MSIEN           R/W      0x0         0x0       MSI Enabled                                                          
                                                         When set, INTx must be disabled.
                                                         This bit must never be set, as internal-MSI is not supported in
                                                         RC mode. (Note that this has no effect on external MSI, which
                                                         will be commonly used in RC mode.)
<19:17> MMC             R/W      0x0         0x0       Multiple Message Capable, writable through PESC(0..1)_CFG_WR              
                                                         However, the application must not change this field.
<22:20> MME             R/W      0x0         0x0       Multiple Message Enabled                                             
                                                         Indicates that multiple Message mode is enabled by system 
                                                         software. The number of Messages enabled must be less than 
                                                         or equal to the Multiple Message Capable value.
<23>    M64             R/W      0x1         0x1       64-bit Address Capable, writable through PESC(0..1)_CFG_WR                
                                                         However, the application must not change this field.
<31:24> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG021 = Twenty-second 32-bits of PCIE type 1 config space (MSI Lower 32 Bits Address Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG021 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<1:0>   NS              RAZ      NS          NS        Reserved                                                             
<31:2>  LMSI            R/W      0x00000000  0x0       Lower 32-bit Address                                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG022 = Twenty-third 32-bits of PCIE type 1 config space (MSI Upper 32 bits Address Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG022 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  UMSI            R/W      0x00000000  0x0       Upper 32-bit Address                                                 

----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG023 = Twenty-fourth 32-bits of PCIE type 1 config space (MSI Data Register) 
 *                 

     ==============================================================
     PCIERC(0..1)_CFG023 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>  MSIMD           R/W      0x0000      0x0       MSI Data                                                             
                                                         Pattern assigned by system software, bits [4:0] are Or-ed with 
                                                         MSI_VECTOR to generate 32 MSI Messages per function.
<31:16> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG028 = Twenty-ninth 32-bits of PCIE type 1 config space
 *                  (PCI Express Capabilities List Register/
 *                   PCI Express Capabilities Register)
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG028 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   PCIEID          RO       0x10        0x10      PCIE Capability ID                                                    
<15:8>  NCP             R/W      0x00        0x0       Next Capability Pointer                                               
                                                         writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<19:16> PCIECV          RO       0x2         0x2       PCI Express Capability Version                                        
<23:20> DPT             RO       0x4         0x4       Device Port Type                                                      
<24>    SI              R/W      0x0         0x0       Slot Implemented                                                      
                                                         This bit is writable through PESC(0..1)_CFG_WR.
                                                         However, it must 0 for an 
                                                         Endpoint device. Therefore, the application must not write a 
                                                         1 to this bit.
<29:25> IMN             R/W      0x0         0x0       Interrupt Message Number                                              
                                                        Updated by hardware, writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<31:30> NS              RAZ      NS          NS        RsvdP                                                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG029 = Thirtieth 32-bits of PCIE type 1 config space (Device Capabilities Register) 
 *

     ==============================================================
     PCIERC(0..1)_CFG029 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<2:0>   MPSS            R/W      0x1         0x1       Max_Payload_Size Supported, writable through PESC(0..1)_CFG_WR            
                                                         However, the application must not change this field.
<4:3>   PFS             R/W      0x0         0x0       Phantom Function Supported                                           
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, Phantom 
                                                         Function is not supported. Therefore, the application must not 
                                                         write any value other than 0x0 to this field.
<5>     ETFS            R/W      0x0         0x0       Extended Tag Field Supported                                         
                                                         This bit is writable through PESC(0..1)_CFG_WR.
                                                         However, the application
                                                         must not write a 1 to this bit.
<8:6>   EL0AL           R/W      0x0         0x0       Endpoint L0s Acceptable Latency, writable through PESC(0..1)_CFG_WR       
                                                         Must be 0x0 for non-endpoint devices.               
<11:9>  EL1AL           R/W      0x0         0x0       Endpoint L1 Acceptable Latency, writable through PESC(0..1)_CFG_WR        
                                                         Must be 0x0 for non-endpoint devices.               
<12>    NS              RAZ      NS          NS        Undefined for PCI Express 1.1                                        
                                                         (Was Attention Button Present for PCI Express 1.0a)
<13>    NS              RAZ      NS          NS        Undefined for PCI Express 1.1                                        
                                                         (Was Attention Indicator Present for PCI Express 1.0a)
<14>    NS              RAZ      0x0         0x0       Undefined for PCI Express 1.1                                        
                                                         (Was Power Indicator Present for PCI Express 1.0a)
<15>    RBER            R/W      0x1         0x1       Role-Based Error Reporting, writable through PESC(0..1)_CFG_WR            
                                                         However, the application must not change this field.
<17:16> NS              RAZ      NS          NS        Reserved                                                             
<25:18> CSPLV           RO       0x00        0x0       Captured Slot Power Limit Value                                      
                                                         Not applicable for RC port, upstream port only.
<27:26> CSPLS           RO       0x0         0x0       Captured Slot Power Limit Scale                                      
                                                         Not applicable for RC port, upstream port only.
<31:28> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG030 = Thirty-first 32-bits of PCIE type 1 config space 
 *                  (Device Control Register/Device Status Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG030 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     CE_EN           R/W      0x0         0x0       Correctable Error Reporting Enable                                   
<1>     NFE_EN          R/W      0x0         0x0       Non-Fatal Error Reporting Enable                                     
<2>     FE_EN           R/W      0x0         0x0       Fatal Error Reporting Enable                                         
<3>     UR_EN           R/W      0x0         0x0       Unsupported Request Reporting Enable                                 
<4>     RO_EN           R/W      0x1         0x1       Enable Relaxed Ordering                                              
<7:5>   MPS             R/W      0x0         0x0       Max Payload Size                                                     
                                                         Legal values:
                                                          0  = 128B
                                                          1  = 256B
                                                         Larger sizes not supported.
                                                        Note: Both PCI Express Ports must be set to the same value
                                                              for Peer-to-Peer to function properly.               
                                                        Note: NPEI_CTL_STATUS2[MPS] must also be set to the same
                                                              value for proper functionality.
<8>     ETF_EN          R/W      0x0         0x0       Extended Tag Field Enable                                            
                                                          This bit should never be set - OCTEON requests never use
                                                          extended tags.
<9>     PF_EN           R/W      0x0         0x0       Phantom Function Enable                                              
                                                          This bit should never be set - OCTEON requests never use
                                                          phantom functions.
<10>    AP_EN           R/W      0x0         0x0       AUX Power PM Enable                                                  
<11>    NS_EN           R/W      0x1         0x1       Enable No Snoop                                                      
<14:12> MRRS            R/W      0x2         0x2       Max Read Request Size                                                
                                                         0 = 128B
                                                         1 = 256B
                                                         2 = 512B
                                                         3 = 1024B
                                                         4 = 2048B
                                                         5 = 4096B
                                                        Note: NPEI_CTL_STATUS2[MRRS] also must be set properly.
                                                        NPEI_CTL_STATUS2[MRRS] must not exceed the
                                                        desired max read request size.
<15>    NS              RAZ      NS          NS        Reserved                                                             
<16>    CE_D            R/W1C    0x0         0x0       Correctable Error Detected                                           
                                                         Errors are logged in this register regardless of whether 
                                                         error reporting is enabled in the Device Control register.
                                                        CE_D is set if we receive any of the errors in PCIE_CFG068
                                                        for example a Replay Timer Timeout.  Also, it can be set if
                                                        we get any of the errors in PCIE_CFG066 that has a severity
                                                        set to Nonfatal and meets the Advisory Nonfatal criteria
                                                        (PCIe 1.1 spec, Section 6.2.3.2.4), which most ECRC errors 
                                                        should be.
<17>    NFE_D           R/W1C    0x0         0x0       Non-Fatal Error detected                                             
                                                        Errors are logged in this register regardless of whether 
                                                         error reporting is enabled in the Device Control register.
                                                        NFE_D is set if we receive any of the errors in PCIE_CFG066
                                                        that has a severity set to Nonfatal and does NOT meet Advisory
                                                        Nonfatal criteria (PCIe 1.1 spec, Section 6.2.3.2.4), which
                                                        most poisoned TLP's should be.
<18>    FE_D            R/W1C    0x0         0x0       Fatal Error Detected                                                 
                                                        Errors are logged in this register regardless of whether 
                                                         error reporting is enabled in the Device Control register.
                                                        FE_D is set if receive any of the errors in PCIE_CFG066 that
                                                        has a severity set to Fatal.  Malformed TLP's generally fit
                                                        into this category.
<19>    UR_D            R/W1C    0x0         0x0       Unsupported Request Detected                                         
                                                        Errors are logged in this register regardless of whether 
                                                         error reporting is enabled in the Device Control register.
                                                        UR_D occurs when we receive something we don't support.
                                                        Unsupported requests are Nonfatal errors, so UR_D should
                                                        cause NFE_D.  Receiving a  vendor defined message should
                                                        cause an unsupported request.
<20>    AP_D            RO       0x0         0x0       Aux Power Detected                                                   
                                                         Set to 1 if Aux power detected.
<21>    TP              RO       0x0         0x0       Transaction Pending                                                  
                                                         Set to 1 when Non-Posted Requests are not yet completed 
                                                         and clear when they are completed.
<31:22> NS              RAZ      NS       NS           Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG031 = Thirty-second 32-bits of PCIE type 1 config space 
 *                  (Link Capabilities Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG031 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>   MLS             R/W      0x1         0x1       Maximum Link Speed                                                   
                                                         Default value is 0x1 for 2.5 Gbps Link.
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, 0x1 is the 
                                                         only supported value. Therefore, the application must not write 
                                                         any value other than 0x1 to this field.
<9:4>   MLW             R/W      0x8         0x8       Maximum Link Width                                                   
                                                         The default value is the value you specify during hardware 
                                                         configuration (x1, x4, x8, or x16), writable through PESC(0..1)_CFG_WR.
                                                         The SW needs to set this to 0x8 or 0x4 depending on the max
                                                         number of lanes (QLM_CFG == 0 set to 0x8 else 0x4).
<11:10> ASLPMS          R/W      0x3         0x3       Active State Link PM Support                                         
                                                         The default value is the value you specify during hardware 
                                                         configuration, writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<14:12> L0EL            R/W      0x6         0x6       L0s Exit Latency                                                     
                                                         The default value is the value you specify during hardware 
                                                         configuration, writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<17:15> L1EL            R/W      0x6         0x6       L1 Exit Latency                                                      
                                                         The default value is the value you specify during hardware 
                                                         configuration, writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<18>    CPM             R/W      0x0         0x0       Clock Power Management                                               
                                                         The default value is the value you specify during hardware 
                                                         configuration, writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<19>    SDERC           RO       0x0         0x0       Surprise Down Error Reporting Capable                                
                                                         Not supported, hardwired to 0x0.
<20>    DLLARC          RO       0x1         0x1       Data Link Layer Active Reporting Capable                             
                                                         Set to 1 for Root Complex devices and 0 for Endpoint devices.
<21>    LBNC            RO       0x1         0x1       Link Bandwith Notification Capability                                
<23:22> NS              RAZ      NS          NS        Reserved                                                             
<31:24> PNUM            R/W      0x0         0x0       Port Number, writable through PESC(0..1)_CFG_WR                           
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG032 = Thirty-third 32-bits of PCIE type 1 config space 
 *                  (Link Control Register/Link Status Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG032 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<1:0>   ASLPC           R/W      0x0         0x0       Active State Link PM Control                                         
<2>     NS              RAZ      NS          NS        Reserved                                                             
<3>     RCB             R/W      0x1         0x1       Read Completion Boundary (RCB), writable through PESC(0..1)_CFG_WR        
                                                         However, the application must not change this field
                                                         because an RCB of 64 bytes is not supported.                
<4>     LD              R/W      0x0         0x0       Link Disable                                                         
<5>     RL              R/W      0x0         0x0       Retrain Link                                                         
<6>     CCC             R/W      0x0         0x0       Common Clock Configuration                                           
<7>     ES              R/W      0x0         0x0       Extended Synch                                                       
<8>     ECPM            R/W      0x0         0x0       Enable Clock Power Management                                        
                                                         Hardwired to 0 if Clock Power Management is disabled in 
                                                         the Link Capabilities register.
<9>     HAWD            R/W      0x0         0x0       Hardware Autonomous Width Disable                                    
                                                         (Not Supported)
<10>    LBM_INT_ENB     R/W      0x0         0x0       Link Bandwidth Management Interrupt Enable                           
                                                         This interrupt is for Gen2 and is not supported. This bit should
                                                         always be written to zero.
<11>    LAB_INT_ENB     R/W      0x0         0x0       Link Autonomous Bandwidth Interrupt Enable                           
                                                         This interrupt is for Gen2 and is not supported. This bit should
                                                         always be written to zero.
<15:12> NS              RAZ      NS          NS        Reserved                                                             
<19:16> LS              RO       0x1         0x1       Link Speed                                                           
                                                         The negotiated Link speed: 2.5 Gbps
<25:20> NLW             RO       0x0         0x0       Negotiated Link Width                                                
                                                         Set automatically by hardware after Link initialization.
<26>    NS              RAZ      NS          NS        Undefined for PCI Express 1.1                                        
                                                         (Was Training Error for PCI Express 1.0a)
<27>    LT              RO       0x0         0x0       Link Training                                                        
<28>    SCC             R/W      0x1         0x0       Slot Clock Configuration                                             
                                                         Indicates that the component uses the same physical reference 
                                                         clock that the platform provides on the connector. The default 
                                                         value is the value you select during hardware configuration, 
                                                         writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<29>    DLLA            RO       0x0         0x1       Data Link Layer Active                                               
<30>    LBM             R/W1C    0x0         0x0       Link Bandwidth Management Status                                     
<31>    LAB             R/W1C    0x0         0x0       Link Autonomous Bandwidth Status                                     
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG033 = Thirty-fourth 32-bits of PCIE type 1 config space 
 *                  (Slot Capabilities Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG033 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     ABP             R/W      0x0         0x0       Attention Button Present, writable through PESC(0..1)_CFG_WR              
                                                         However, the application must not change this field.
<1>     PCP             R/W      0x0         0x0       Power Controller Present, writable through PESC(0..1)_CFG_WR              
                                                         However, the application must not change this field.
<2>     MRLSP           R/W      0x0         0x0       MRL Sensor Present, writable through PESC(0..1)_CFG_WR                    
                                                         However, the application must not change this field.
<3>     AIP             R/W      0x0         0x0       Attention Indicator Present, writable through PESC(0..1)_CFG_WR           
                                                         However, the application must not change this field.
<4>     PIP             R/W      0x0         0x0       Power Indicator Present, writable through PESC(0..1)_CFG_WR               
                                                         However, the application must not change this field.
<5>     HP_S            R/W      0x0         0x0       Hot-Plug Surprise, writable through PESC(0..1)_CFG_WR                     
                                                         However, the application must not change this field.
<6>     HP_C            R/W      0x0         0x0       Hot-Plug Capable, writable through PESC(0..1)_CFG_WR                      
                                                         However, the application must not change this field.
<14:7>  SP_LV           R/W      0x0         0x0       Slot Power Limit Value, writable through PESC(0..1)_CFG_WR.               
<16:15> SP_LS           R/W      0x0         0x0       Slot Power Limit Scale, writable through PESC(0..1)_CFG_WR.               
<17>    EMIP            R/W      0x0         0x0       Electromechanical Interlock Present, writable through PESC(0..1)_CFG_WR   
                                                         However, the application must not change this field.
<18>    NCCS            R/W      0x0         0x0       No Command Complete Support, writable through PESC(0..1)_CFG_WR           
                                                         However, the application must not change this field.
<31:19> PS_NUM          R/W      0x0000      0x0       Physical Slot Number, writable through PESC(0..1)_CFG_WR                  
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG034 = Thirty-fifth 32-bits of PCIE type 1 config space 
 *                  (Slot Control Register/Slot Status Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG034 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     ABP_EN          R/W      0x0         0x0       Attention Button Pressed Enable                                      
<1>     PF_EN           R/W      0x0         0x0       Power Fault Detected Enable                                          
<2>     MRLS_EN         R/W      0x0         0x0       MRL Sensor Changed Enable                                            
<3>     PD_EN           R/W      0x0         0x0       Presence Detect Changed Enable                                       
<4>     CCINT_EN        R/W      0x0         0x0       Command Completed Interrupt Enable                                   
<5>     HPINT_EN        R/W      0x0         0x0       Hot-Plug Interrupt Enable                                            
<7:6>   AIC             R/W      0x3         0x3       Attention Indicator Control                                          
<9:8>   PIC             R/W      0x3         0x3       Power Indicator Control                                              
<10>    PCC             R/W      0x0         0x0       Power Controller Control                                             
<11>    EMIC            R/W      0x0         0x0       Electromechanical Interlock Control                                  
<12>    DLLS_EN         R/W      0x0         0x0       Data Link Layer State Changed Enable                                 
<15:13> NS              RAZ      NS          NS        Reserved                                                             
<16>    ABP_D           R/W1C    0x0         0x0       Attention Button Pressed                                             
<17>    PF_D            R/W1C    0x0         0x0       Power Fault Detected                                                 
<18>    MRLS_C          R/W1C    0x0         0x0       MRL Sensor Changed                                                   
<19>    PD_C            R/W1C    0x0         0x0       Presence Detect Changed                                              
<20>    CCINT_D         R/W1C    0x0         0x0       Command Completed                                                    
<21>    MRLSS           RO       0x0         0x0       MRL Sensor State                                                     
<22>    PDS             RO       0x1         0x1       Presence Detect State                                                
<23>    EMIS            RO       0x0         0x0       Electromechanical Interlock Status                                   
<24>    DLLS_C          R/W1C    0x0         0x0       Data Link Layer State Changed                                        
<31:25> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  PCIE_CFG035 = Thirty-sixth 32-bits of PCIE type 1 config space 
 *                  (Root Control Register/Root Capabilities Register)
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG035 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     SECEE           R/W      0x0         0x0       System Error on Correctable Error Enable                             
<1>     SENFEE          R/W      0x0         0x0       System Error on Non-fatal Error Enable                               
<2>     SEFEE           R/W      0x0         0x0       System Error on Fatal Error Enable                                   
<3>     PMEIE           R/W      0x0         0x0       PME Interrupt Enable                                                 
<4>     CRSSVE          RO       0x0         0x0       CRS Software Visibility Enable                                       
                                                         Not supported, hardwired to 0x0.
<15:5>  NS              RAZ      NS          NS        Reserved                                                             
<16>    CRSSV           RO       0x0         0x0       CRS Software Visibility                                              
                                                         Not supported, hardwired to 0x0.
<31:17> NS              RAZ      NS          NS        Reserved                                                             

----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG036 = Thirty-seventh 32-bits of PCIE type 1 config space 
 *                  (Root Status Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG036 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>  PME_RID         RO       0x0         0x0       PME Requester ID                                                     
<16>    PME_STAT        R/W1C    0x0         0x0       PME Status                                                           
<17>    PME_PEND        RO       0x0         0x0       PME Pending                                                          
<31:18> NS              RAZ      0x0         0x0       Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG037 = Thirty-eighth 32-bits of PCIE type 1 config space 
 *                  (Device Capabilities 2 Register)
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG037 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>   CTRS            RO       0x0         0x0       Completion Timeout Ranges Supported                                  
                                                         Value of 0 indicates that Completion Timeout Programming
                                                         is not supported.
                                                         Completion timeout is 16.7ms.
<4>     CTDS            RO       0x1         0x1       Completion Timeout Disable Supported                                 
<31:5>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG038 = Thirty-ninth 32-bits of PCIE type 1 config space 
 *                  (Device Control 2 Register)
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG038 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>   CTV             RO       0x0         0x0       Completion Timeout Value                                             
                                                         Completion Timeout Programming is not supported
                                                         Completion timeout is 16.7ms.
<4>     CTD             R/W      0x0         0x0       Completion Timeout Disable                                           
<31:5>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  PCIE_CFG039 = Fourtieth 32-bits of PCIE type 1 config space 
 *                  (Link Capabilities 2 Register)
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG039 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG040 = Fourty-first 32-bits of PCIE type 1 config space 
 *                  (Link Control 2 Register/Link Status 2 Register)
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG040 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG041 = Fourty-second 32-bits of PCIE type 1 config space 
 *                  (Slot Capabilities 2 Register)
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG041 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG042 = Fourty-third 32-bits of PCIE type 1 config space 
 *                  (Slot Control 2 Register/Slot Status 2 Register)
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG042 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  PCIE_CFG064 = Sixty-fifth 32-bits of PCIE type 1 config space 
 *                  (PCI Express Enhanced Capability Header)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG064 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>  PCIEEC          RO       0x1         0x1       PCIE Express Extended Capability                                     
<19:16> CV              RO       0x1         0x1       Capability Version                                                   
<31:20> NCO             RO       0x000       0x0       Next Capability Offset                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG065 = Sixty-sixth 32-bits of PCIE type 1 config space 
 *                  (Uncorrectable Error Status Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG065 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     NS              RAZ      NS          NS        Undefined                                                            
                                                         (Was Training Error Status for PCI Express 1.0a)
<3:1>   NS              RAZ      NS          NS        Reserved                                                             
<4>     DLPES           R/W1C    0x0         0x0       Data Link Protocol Error Status                                      
<5>     SDES            RO       0x0         0x0       Surprise Down Error Status (not supported)                           
<11:6>  NS              RAZ      NS          NS        Reserved                                                             
<12>    PTLPS           R/W1C    0x0         0x0       Poisoned TLP Status                                                  
<13>    FCPES           R/W1C    0x0         0x0       Flow Control Protocol Error Status                                   
<14>    CTS             R/W1C    0x0         0x0       Completion Timeout Status                                            
<15>    CAS             R/W1C    0x0         0x0       Completer Abort Status                                               
<16>    UCS             R/W1C    0x0         0x0       Unexpected Completion Status                                         
<17>    ROS             R/W1C    0x0         0x0       Receiver Overflow Status                                             
<18>    MTLPS           R/W1C    0x0         0x0       Malformed TLP Status                                                 
<19>    ECRCES          R/W1C    0x0         0x0       ECRC Error Status                                                    
<20>    URES            R/W1C    0x0         0x0       Unsupported Request Error Status                                     
<31:21> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG066 = Sixty-seventh 32-bits of PCIE type 1 config space 
 *                  (Uncorrectable Error Mask Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG066 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     NS              RAZ      NS          NS        Undefined                                                            
                                                         (Was Training Error Mask for PCI Express 1.0a)
<3:1>   NS              RAZ      NS          NS        Reserved                                                             
<4>     DLPEM           R/W      0x0         0x0       Data Link Protocol Error Mask                                        
<5>     SDEM            RO       0x0         0x0       Surprise Down Error Mask (not supported)                             
<11:6>  NS              RAZ      NS          NS        Reserved                                                             
<12>    PTLPM           R/W      0x0         0x0       Poisoned TLP Mask                                                    
<13>    FCPEM           R/W      0x0         0x0       Flow Control Protocol Error Mask                                     
<14>    CTM             R/W      0x0         0x0       Completion Timeout Mask                                              
<15>    CAM             R/W      0x0         0x0       Completer Abort Mask                                                 
<16>    UCM             R/W      0x0         0x0       Unexpected Completion Mask                                           
<17>    ROM             R/W      0x0         0x0       Receiver Overflow Mask                                               
<18>    MTLPM           R/W      0x0         0x0       Malformed TLP Mask                                                   
<19>    ECRCEM          R/W      0x0         0x0       ECRC Error Mask                                                      
<20>    UREM            R/W      0x0         0x0       Unsupported Request Error Mask                                       
<31:21> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG067 = Sixty-eighth 32-bits of PCIE type 1 config space 
 *                  (Uncorrectable Error Severity Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG067 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     NS              RAZ      NS          NS        Undefined                                                            
                                                         (Was Training Error Severity for PCI Express 1.0a)
<3:1>   NS              RAZ      NS          NS        Reserved                                                             
<4>     DLPES           R/W      0x1         0x1       Data Link Protocol Error Severity                                    
<5>     SDES            RO       0x1         0x1       Surprise Down Error Severity (not supported)                         
<11:6>  NS              RAZ      NS          NS        Reserved                                                             
<12>    PTLPS           R/W      0x0         0x0       Poisoned TLP Severity                                                
<13>    FCPES           R/W      0x1         0x1       Flow Control Protocol Error Severity                                 
<14>    CTS             R/W      0x0         0x0       Completion Timeout Severity                                          
<15>    CAS             R/W      0x0         0x0       Completer Abort Severity                                             
<16>    UCS             R/W      0x0         0x0       Unexpected Completion Severity                                       
<17>    ROS             R/W      0x1         0x1       Receiver Overflow Severity                                           
<18>    MTLPS           R/W      0x1         0x1       Malformed TLP Severity                                               
<19>    ECRCES          R/W      0x0         0x0       ECRC Error Severity                                                  
<20>    URES            R/W      0x0         0x0       Unsupported Request Error Severity                                   
<31:21> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG068 = Sixty-ninth 32-bits of PCIE type 1 config space 
 *                  (Correctable Error Status Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG068 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     RES             R/W1C    0x0         0x0       Receiver Error Status                                                
<5:1>   NS              RAZ      NS          NS        Reserved                                                             
<6>     BTLPS           R/W1C    0x0         0x0       Bad TLP Status                                                       
<7>     BDLLPS          R/W1C    0x0         0x0       Bad DLLP Status                                                      
<8>     RNRS            R/W1C    0x0         0x0       REPLAY_NUM Rollover Status                                           
<11:9>  NS              RAZ      NS          NS        Reserved                                                             
<12>    RTTS            R/W1C    0x0         0x0       Replay Timer Timeout Status                                          
<13>    ANFES           R/W1C    0x0         0x0       Advisory Non-Fatal Error Status                                      
<31:14> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG069 = Seventieth 32-bits of PCIE type 1 config space 
 *                  (Correctable Error Mask Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG069 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     REM             R/W      0x0         0x0       Receiver Error Mask                                                  
<5:1>   NS              RAZ      NS          NS        Reserved                                                             
<6>     BTLPM           R/W      0x0         0x0       Bad TLP Mask                                                         
<7>     BDLLPM          R/W      0x0         0x0       Bad DLLP Mask                                                        
<8>     RNRM            R/W      0x0         0x0       REPLAY_NUM Rollover Mask                                             
<11:9>  NS              RAZ      NS          NS        Reserved                                                             
<12>    RTTM            R/W      0x0         0x0       Replay Timer Timeout Mask                                            
<13>    ANFEM           R/W      0x1         0x1       Advisory Non-Fatal Error Mask                                        
<31:14> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG070 = Seventy-first 32-bits of PCIE type 1 config space 
 *                  (Advanced Capabilities and Control Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG070 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<4:0>   FEP             RO       0x00        0x0       First Error Pointer                                                  
<5>     GC              RO       0x1         0x1       ECRC Generation Capability                                           
<6>     GE              R/W      0x0         0x0       ECRC Generation Enable                                               
<7>     CC              RO       0x1         0x1       ECRC Check Capable                                                   
<8>     CE              R/W      0x0         0x0       ECRC Check Enable                                                    
<31:9>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG071 = Seventy-second 32-bits of PCIE type 1 config space 
 *                  (Header Log Register 1) 
 *
 * The Header Log registers collect the header for the TLP corresponding to a detected error.
 *

     ==============================================================
     PCIERC(0..1)_CFG071 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  DWORD1          RO       0x0         0x0       Header Log Register (first DWORD)                                    
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  PCIE_CFG072 = Seventy-third 32-bits of PCIE type 1 config space 
 *                  (Header Log Register 2) 
 *
 * The Header Log registers collect the header for the TLP corresponding to a detected error.
 *

     ==============================================================
     PCIERC(0..1)_CFG072 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  DWORD2          RO       0x0         0x0       Header Log Register (second DWORD)                                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG073 = Seventy-fourth 32-bits of PCIE type 1 config space 
 *                  (Header Log Register 3) 
 *
 * The Header Log registers collect the header for the TLP corresponding to a detected error.
 *

     ==============================================================
     PCIERC(0..1)_CFG073 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  DWORD3          RO       0x0         0x0       Header Log Register (third DWORD)                                    
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG074 = Seventy-fifth 32-bits of PCIE type 1 config space 
 *                  (Header Log Register 4) 
 *
 * The Header Log registers collect the header for the TLP corresponding to a detected error.
 *

     ==============================================================
     PCIERC(0..1)_CFG074 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  DWORD4          RO       0x0         0x0       Header Log Register (fourth DWORD)                                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG075 = Seventy-sixth 32-bits of PCIE type 1 config space 
 *                  (Root Error Command Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG075 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     CERE            R/W      0x0         0x0       Correctable Error Reporting Enable                                   
<1>     NFERE           R/W      0x0         0x0       Non-Fatal Error Reporting Enable                                     
<2>     FERE            R/W      0x0         0x0       Fatal Error Reporting Enable                                         
<31:3>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG076 = Seventy-seventh 32-bits of PCIE type 1 config space 
 *                  (Root Error Status Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG076 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     ECR             R/W1C    0x0         0x0       ERR_COR Received                                                     
<1>     MULTI_ECR       R/W1C    0x0         0x0       Multiple ERR_COR Received                                            
<2>     EFNFR           R/W1C    0x0         0x0       ERR_FATAL/NONFATAL Received                                          
<3>     MULTI_EFNFR     R/W1C    0x0         0x0       Multiple ERR_FATAL/NONFATAL Received                                 
<4>     FUF             R/W1C    0x0         0x0       First Uncorrectable Fatal                                            
<5>     NFEMR           R/W1C    0x0         0x0       Non-Fatal Error Messages Received                                    
<6>     FEMR            R/W1C    0x0         0x0       Fatal Error Messages Received                                        
<26:7>  NS              RAZ      NS          NS        Reserved                                                             
<31:27> AEIMN           R/W      0x0         0x0       Advanced Error Interrupt Message Number,                             
                                                         writable through PESC(0..1)_CFG_WR          
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG077 = Seventy-eighth 32-bits of PCIE type 1 config space
 *                  (Error Source Identification Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG077 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>  ECSI            RO       0x0         0x0       ERR_COR Source Identification                                        
<31:16> EFNFSI          RO       0x0         0x0       ERR_FATAL/NONFATAL Source Identification                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG448 = Four hundred forty-ninth 32-bits of PCIE type 1 config space
 *                  (Ack Latency Timer and Replay Timer Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG448 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>  RTLTL           R/W      0x102F      0x102F    Round Trip Latency Time Limit                                        
                                                         The Ack/Nak latency timer expires when it reaches this limit.
                                                         The default is then updated based on the Negotiated Link Width 
                                                         and Max_Payload_Size.               
<31:16> RTL             R/W      0x308D      0x308D    Replay Time Limit                                                    
                                                         The replay timer expires when it reaches this limit. The PCI 
                                                         Express bus initiates a replay upon reception of a Nak or when 
                                                         the replay timer expires.
                                                         The default is then updated based on the Negotiated Link Width 
                                                         and Max_Payload_Size.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG449 = Four hundred fiftieth 32-bits of PCIE type 1 config space
 *                  (Other Message Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG449 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  OMR             R/W      0xFFFFFFFF  NS        Other Message Register                                               
                                                         This register can be used for either of the following purposes:
                                                         o To send a specific PCI Express Message, the application 
                                                           writes the payload of the Message into this register, then 
                                                           sets bit 0 of the Port Link Control Register to send the 
                                                           Message.
                                                         o To store a corruption pattern for corrupting the LCRC on all 
                                                           TLPs, the application places a 32-bit corruption pattern into 
                                                           this register and enables this function by setting bit 25 of 
                                                           the Port Link Control Register. When enabled, the transmit 
                                                           LCRC result is XOR'd with this pattern before inserting 
                                                           it into the packet.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG450 = Four hundred fifty-first 32-bits of PCIE type 1 config space
 *                  (Port Force Link Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG450 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   LINK_NUM        R/W      0x4         0x4       Link Number                                                          
<14:8>  NS              RAZ      NS          NS        Reserved                                                             
<15>    FORCE_LINK      R/W      0x0         0x0       Force Link                                                           
                                                         Forces the Link to the state specified by the Link State field. 
                                                         The Force Link pulse will trigger Link re-negotiation.
                                                         * As the The Force Link is a pulse, writing a 1 to it does 
                                                           trigger the forced link state event, even thought reading it 
                                                           always returns a 0. 
<21:16> LINK_STATE      R/W      0x00        0x0       Link State                                                           
                                                         The Link state that the PCI Express Bus will be forced to 
                                                         when bit 15 (Force Link) is set.
                                                         State encoding:
                                                         o DETECT_QUIET              00h
                                                         o DETECT_ACT                01h
                                                         o POLL_ACTIVE               02h
                                                         o POLL_COMPLIANCE           03h
                                                         o POLL_CONFIG               04h
                                                         o PRE_DETECT_QUIET          05h
                                                         o DETECT_WAIT               06h
                                                         o CFG_LINKWD_START          07h
                                                         o CFG_LINKWD_ACEPT          08h
                                                         o CFG_LANENUM_WAIT          09h
                                                         o CFG_LANENUM_ACEPT         0Ah
                                                         o CFG_COMPLETE              0Bh
                                                         o CFG_IDLE                  0Ch
                                                         o RCVRY_LOCK                0Dh
                                                         o RCVRY_SPEED               0Eh
                                                         o RCVRY_RCVRCFG             0Fh
                                                         o RCVRY_IDLE                10h
                                                         o L0                        11h
                                                         o L0S                       12h
                                                         o L123_SEND_EIDLE           13h
                                                         o L1_IDLE                   14h
                                                         o L2_IDLE                   15h
                                                         o L2_WAKE                   16h
                                                         o DISABLED_ENTRY            17h
                                                         o DISABLED_IDLE             18h
                                                         o DISABLED                  19h
                                                         o LPBK_ENTRY                1Ah
                                                         o LPBK_ACTIVE               1Bh
                                                         o LPBK_EXIT                 1Ch
                                                         o LPBK_EXIT_TIMEOUT         1Dh
                                                         o HOT_RESET_ENTRY           1Eh
                                                         o HOT_RESET                 1Fh
<23:22> NS              RAZ      NS          NS        Reserved                                                             
<31:24> LPEC            RO       0x7         0x7       Low Power Entrance Count                                             
                                                         The Power Management state will wait for this many clock cycles 
                                                         for the associated completion of a CfgWr to PCIE_CFG017 register
                                                         Power State (PS) field register to go low-power. This register 
                                                         is intended for applications that do not let the PCI Express 
                                                         bus handle a completion for configuration request to the 
                                                         Power Management Control and Status (PCIE_CFG017) register.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG451 = Four hundred fifty-second 32-bits of PCIE type 1 config space
 *                  (Ack Frequency Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG451 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   ACK_FREQ        R/W      0x0         0x0       Ack Frequency                                                        
                                                         The number of pending Ack's specified here (up to 255) before 
                                                         sending an Ack.
<15:8>  N_FTS           R/W      0x80        0x80      N_FTS                                                                
                                                         The number of Fast Training Sequence ordered sets to be 
                                                         transmitted when transitioning from L0s to L0. The maximum 
                                                         number of FTS ordered-sets that a component can request is 255.
                                                         Note: The core does not support a value of zero; a value of 
                                                               zero can cause the LTSSM to go into the recovery state 
                                                               when exiting from L0s.
<23:16> N_FTS_CC        R/W      0x80        0x80      N_FTS when common clock is used.                                     
                                                         The number of Fast Training Sequence ordered sets to be 
                                                         transmitted when transitioning from L0s to L0. The maximum 
                                                         number of FTS ordered-sets that a component can request is 255.
                                                          Note: The core does not support a value of zero; a value of 
                                                                zero can cause the LTSSM to go into the recovery state 
                                                                when exiting from L0s.
<26:24> L0EL            R/W      0x3         0x3       L0s Entrance Latency                                                 
                                                         Values correspond to:
                                                         o 000: 1 ms
                                                         o 001: 2 ms
                                                         o 010: 3 ms
                                                         o 011: 4 ms
                                                         o 100: 5 ms
                                                         o 101: 6 ms
                                                         o 110 or 111: 7 ms
<29:27> L1EL            R/W      0x3         0x3       L1 Entrance Latency                                                  
                                                         Values correspond to:
                                                         o 000: 1 ms
                                                         o 001: 2 ms
                                                         o 010: 4 ms
                                                         o 011: 8 ms
                                                         o 100: 16 ms
                                                         o 101: 32 ms
                                                         o 110 or 111: 64 ms
<31:30> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG452 = Four hundred fifty-third 32-bits of PCIE type 1 config space
 *                  (Port Link Control Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG452 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     OMR             R/W      0x0         0x0       Other Message Request                                                
                                                         When software writes a `1' to this bit, the PCI Express bus
                                                         transmits the Message contained in the Other Message register.
<1>     SD              R/W      0x0         0x0       Scramble Disable                                                     
                                                         Turns off data scrambling.
<2>     LE              R/W      0x0         0x0       Loopback Enable                                                      
                                                         Initiate loopback mode as a master. On a 0->1 transition,
                                                         the PCIe core sends TS ordered sets with the loopback bit set
                                                         to cause the link partner to enter into loopback mode as a
                                                         slave. Normal transmission is not possible when LE=1. To exit
                                                         loopback mode, take the link through a reset sequence.
<3>     RA              R/W      0x0         0x0       Reset Assert                                                         
                                                         Triggers a recovery and forces the LTSSM to the Hot Reset 
                                                         state (downstream port only).
<4>     NS              RAZ      NS          NS        Reserved                                                             
<5>     DLLLE           R/W      0x1         0x1       DLL Link Enable                                                      
                                                         Enables Link initialization. If DLL Link Enable = 0, the PCI 
                                                         Express bus does not transmit InitFC DLLPs and does not
                                                         establish a Link.
<6>     NS              RAZ      NS          NS        Reserved                                                             
<7>     FLM             R/W      0x0         0x0       Fast Link Mode                                                       
                                                         Sets all internal timers to fast mode for simulation purposes.
<11:8>  NS              RO       0x1         0x1       Reserved                                                             
<15:12> NS              RAZ      NS          NS        Reserved                                                             
<21:16> LME             R/W      0xF         0xF       Link Mode Enable                                                     
                                                         o 000001: x1
                                                         o 000011: x2
                                                         o 000111: x4
                                                         o 001111: x8
                                                         o 011111: x16 (not supported)
                                                         o 111111: x32 (not supported)
                                                         This field indicates the MAXIMUM number of lanes supported
                                                         by the PCIe port. It is normally set to 0xF or 0x7 depending
                                                         on the value of the QLM_CFG bits (0xF when QLM_CFG == 0
                                                         otherwise 0x7). The value can be set less than 0xF or 0x7
                                                         to limit the number of lanes the PCIe will attempt to use.
                                                         The programming of this field needs to be done by SW BEFORE
                                                         enabling the link. See also MLW.
                                                         (Note: The value of this field does NOT indicate the number
                                                          of lanes in use by the PCIe. LME sets the max number of lanes
                                                          in the PCIe core that COULD be used. As per the PCIe specs,
                                                          the PCIe core can negotiate a smaller link width, so all
                                                          of x8, x4, x2, and x1 are supported when LME=0xF,
                                                          for example.)
<24:22> NS             RAZ      NS          NS        Reserved                                                              
<25>    ECCRC          R/W      0x0         0x0       Enable Corrupted CRC                                                  
                                                        Causes corrupt LCRC for TLPs when set, 
                                                        using the pattern contained in the Other Message register.
                                                        This is a test feature, not to be used in normal operation.
<31:26> NS             RAZ      NS          NS        Reserved                                                              
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG453 = Four hundred fifty-fourth 32-bits of PCIE type 1 config space
 *                  (Lane Skew Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG453 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<23:0>  ILST            R/W      0x000000    0x0       Insert Lane Skew for Transmit (not supported for x16)                
                                                         Causes skew between lanes for test purposes. There are three 
                                                         bits per Lane. The value is in units of one symbol time. For 
                                                         example, the value 010b for a Lane forces a skew of two symbol 
                                                         times for that Lane. The maximum skew value for any Lane is 5 
                                                         symbol times.
<24>    FCD             R/W      0x0         0x0       Flow Control Disable                                                 
                                                         Prevents the PCI Express bus from sending FC DLLPs.
<25>    ACK_NAK         R/W      0x0         0x0       Ack/Nak Disable                                                      
                                                         Prevents the PCI Express bus from sending Ack and Nak DLLPs.
<30:26> NS              RAZ      NS          NS        Reserved                                                             
<31>    DLLD            R/W      0x0         0x0       Disable Lane-to-Lane Deskew                                          
                                                         Disables the internal Lane-to-Lane deskew logic.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG454 = Four hundred fifty-fifth 32-bits of PCIE type 1 config space
 *                  (Symbol Number Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG454 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>   NTSS            R/W      0xA         0xA       Number of TS Symbols                                                 
                                                         Sets the number of TS identifier symbols that are sent in TS1 
                                                         and TS2 ordered sets.
<7:4>   NS              RO       NS          NS        Reserved                                                             
<10:8>  NSKPS           R/W      0x3         0x3       Number of SKP Symbols                                                
<13:11> NS              RAZ      NS          NS        Reserved                                                             
<18:14> TMRT            R/W      0x8         0x8       Timer Modifier for Replay Timer                                      
                                                         Increases the timer value for the replay timer, in increments 
                                                         of 64 clock cycles.
<23:19> TMANLT          R/W      0x0         0x0       Timer Modifier for Ack/Nak Latency Timer                             
                                                         Increases the timer value for the Ack/Nak latency timer, in 
                                                         increments of 64 clock cycles.
<28:24> TMFCWT          R/W      0x0         0x0       Timer Modifier for Flow Control Watchdog Timer                       
                                                         Increases the timer value for the Flow Control watchdog timer, 
                                                         in increments of 16 clock cycles.
<31:29> NS              RO       NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG455 = Four hundred fifty-sixth 32-bits of PCIE type 1 config space
 *                  (Symbol Timer Register/Filter Mask Register 1)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG455 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<10:0>  SKPIV           R/W      0x500       0x500     SKP Interval Value                                                   
<14:11> NS              RAZ      NS          NS        Reserved                                                             
<15>    DFCWT           R/W      0x0         0x0       Disable FC Watchdog Timer                                            
<16>    M_FUN           R/W      0x0         0x0       Mask function                                                        
<17>    M_POIS_FILT     R/W      0x0         0x0       Mask poisoned TLP filtering                                          
<18>    M_BAR_MATCH     R/W      0x0         0x0       Mask BAR match filtering                                             
<19>    M_CFG1_FILT     R/W      0x0         0x0       Mask Type 1 Configuration Request filtering                          
<20>    M_LK_FILT       R/W      0x0         0x0       Mask Locked Request filtering                                        
<21>    M_CPL_TAG_ERR   R/W      0x0         0x0       Mask Tag error rules for received Completions                        
<22>    M_CPL_RID_ERR   R/W      0x0         0x0       Mask Requester ID mismatch error for received Completions            
<23>    M_CPL_FUN_ERR   R/W      0x0         0x0       Mask function mismatch error for received Completions                
<24>    M_CPL_TC_ERR    R/W      0x0         0x0       Mask Traffic Class mismatch error for received Completions           
<25>    M_CPL_ATTR_ERR  R/W      0x0         0x0       Mask Attributes mismatch error for received Completions              
<26>    M_CPL_LEN_ERR   R/W      0x0         0x0       Mask Length mismatch error for received Completions                  
<27>    M_ECRC_FILT     R/W      0x0         0x0       Mask ECRC error filtering                                            
<28>    M_CPL_ECRC_FILT R/W      0x0         0x0       Mask ECRC error filtering for Completions                            
<29>    MSG_CTRL        R/W      0x0         0x0       Message Control                                                      
                                                         The application must not change this field.
<30>    M_IO_FILT       R/W      0x0         0x0       Mask filtering of received I/O Requests (RC mode only)               
<31>    M_CFG0_FILT     R/W      0x0         0x0       Mask filtering of received Configuration Requests (RC mode only)     
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG456 = Four hundred fifty-seventh 32-bits of PCIE type 1 config space
 *                  (Filter Mask Register 2)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG456 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:2>  NS              RAZ      NS          NS        Reserved                                                             
<1>     M_VEND1_DRP     R/W      0x0         0x0       Mask Vendor MSG Type 1 dropped silently                              
<0>     M_VEND0_DRP     R/W      0x0         0x0       Mask Vendor MSG Type 0 dropped with UR error reporting.              
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG458 = Four hundred fifty-ninth 32-bits of PCIE type 1 config space
 *                  (Debug Register 0) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG458 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  DBG_INFO_L32    RO       0x0         0x0       The value on cxpl_debug_info[31:0].                                  
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG459 = Four hundred sixtieth 32-bits of PCIE type 1 config space
 *                  (Debug Register 1) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG459 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  DBG_INFO_U32    RO       0x0         0x0       The value on cxpl_debug_info[63:32].                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG460 = Four hundred sixty-first 32-bits of PCIE type 1 config space
 *                  (Transmit Posted FC Credit Status)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG460 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>  TPDFCC          RO       0x0         0x0       Transmit Posted Data FC Credits                                      
                                                         The Posted Data credits advertised by the receiver at the other 
                                                         end of the Link, updated with each UpdateFC DLLP.
<19:12> TPHFCC          RO       0x0         0x0       Transmit Posted Header FC Credits                                    
                                                         The Posted Header credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
<31:20> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG461 = Four hundred sixty-second 32-bits of PCIE type 1 config space
 *                  (Transmit Non-Posted FC Credit Status) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG461 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>  TCDFCC          RO       0x0         0x0       Transmit Non-Posted Data FC Credits                                  
                                                         The Non-Posted Data credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
<19:12> TCHFCC          RO       0x0         0x0       Transmit Non-Posted Header FC Credits                                
                                                         The Non-Posted Header credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
<31:20> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG462 = Four hundred sixty-third 32-bits of PCIE type 1 config space
 *                  (Transmit Completion FC Credit Status )
 *
 *  
 *

     ==============================================================
     PCIERC(0..1)_CFG462 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>  TCDFCC          RO       0x0         0x0       Transmit Completion Data FC Credits                                  
                                                         The Completion Data credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
<19:12> TCHFCC          RO       0x0         0x0       Transmit Completion Header FC Credits                                
                                                         The Completion Header credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
<31:20> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG463 = Four hundred sixty-fourth 32-bits of PCIE type 1 config space
 *                  (Queue Status) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG463 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     RTLPFCCNR       RO       0x0         0x0       Received TLP FC Credits Not Returned                                 
                                                         Indicates that the PCI Express bus has sent a TLP but has not 
                                                         yet received an UpdateFC DLLP indicating that the credits for 
                                                         that TLP have been restored by the receiver at the other end of 
                                                         the Link.
<1>     TRBNE           RO       0x0         0x0       Transmit Retry Buffer Not Empty                                      
                                                         Indicates that there is data in the transmit retry buffer.
<2>     RQNE            RO       0x0         0x0       Received Queue Not Empty                                             
                                                         Indicates there is data in one or more of the receive buffers.
<31:3>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG464 = Four hundred sixty-fifth 32-bits of PCIE type 1 config space
 *                  (VC Transmit Arbitration Register 1)
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG464 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   WRR_VC0         RO       0xF         0xF       WRR Weight for VC0                                                   
<15:8>  WRR_VC1         RO       0x0         0x0       WRR Weight for VC1                                                   
<23:16> WRR_VC2         RO       0x0         0x0       WRR Weight for VC2                                                   
<31:24> WRR_VC3         RO       0x0         0x0       WRR Weight for VC3                                                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG465 = Four hundred sixty-sixth 32-bits of config space
 *                  (VC Transmit Arbitration Register 2)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG465 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   WRR_VC4         RO       0x0         0x0       WRR Weight for VC4                                                   
<15:8>  WRR_VC5         RO       0x0         0x0       WRR Weight for VC5                                                   
<23:16> WRR_VC6         RO       0x0         0x0       WRR Weight for VC6                                                   
<31:24> WRR_VC7         RO       0x0         0x0       WRR Weight for VC7                                                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG466 = Four hundred sixty-seventh 32-bits of PCIE type 1 config space
 *                  (VC0 Posted Receive Queue Control)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG466 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>  DATA_CREDITS    R/W      0x048       0x48      VC0 Posted Data Credits                                              
                                                         The number of initial Posted data credits for VC0, used for all 
                                                         receive queue buffer configurations.
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<19:12> HEADER_CREDITS  R/W      0x20        0x20      VC0 Posted Header Credits                                            
                                                         The number of initial Posted header credits for VC0, used for 
                                                         all receive queue buffer configurations.
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<20>    NS              RAZ      NS          NS        Reserved                                                             
<23:21> QUEUE_MODE      R/W      0x2         0x2       VC0 Posted TLP Queue Mode                                            
                                                         The operating mode of the Posted receive queue for VC0, used 
                                                         only in the segmented-buffer configuration, writable through
                                                         PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field. 
                                                         Only one bit can be set at a time:
                                                         o Bit 23: Bypass
                                                         o Bit 22: Cut-through
                                                         o Bit 21: Store-and-forward
<29:24> NS              RAZ      NS          NS        Reserved                                                             
<30>    TYPE_ORDERING   R/W      0x1         0x1       TLP Type Ordering for VC0                                            
                                                         Determines the TLP type ordering rule for VC0 receive queues, 
                                                         used only in the segmented-buffer configuration, writable 
                                                         through PESC(0..1)_CFG_WR:
                                                         o 1: Ordering of received TLPs follows the rules in 
                                                              PCI Express Base Specification, Revision 1.1
                                                         o 0: Strict ordering for received TLPs: Posted, then 
                                                              Completion, then Non-Posted
                                                         However, the application must not change this field.
<31>    RX_QUEUE_ORDER  R/W      0x0         0x0       VC Ordering for Receive Queues                                       
                                                         Determines the VC ordering rule for the receive queues, used 
                                                         only in the segmented-buffer configuration, 
                                                         writable through PESC(0..1)_CFG_WR:
                                                         o 1: Strict ordering, higher numbered VCs have higher priority
                                                         o 0: Round robin
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG467 = Four hundred sixty-eighth 32-bits of PCIE type 1 config space
 *                  (VC0 Non-Posted Receive Queue Control)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG467 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>  DATA_CREDITS    R/W      0x004       0x004      VC0 Non-Posted Data Credits                                         
                                                         The number of initial Non-Posted data credits for VC0, used for 
                                                         all receive queue buffer configurations.
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<19:12> HEADER_CREDITS  R/W      0x08        0x08      VC0 Non-Posted Header Credits                                        
                                                         The number of initial Non-Posted header credits for VC0, used 
                                                         for all receive queue buffer configurations.
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<20>    NS              RAZ      NS          NS        Reserved                                                             
<23:21> QUEUE_MODE      R/W      0x2         0x2       VC0 Non-Posted TLP Queue Mode                                        
                                                         The operating mode of the Non-Posted receive queue for VC0, 
                                                         used only in the segmented-buffer configuration, writable 
                                                         through PESC(0..1)_CFG_WR.
                                                         Only one bit can be set at a time:
                                                         o Bit 23: Bypass
                                                         o Bit 22: Cut-through
                                                         o Bit 21: Store-and-forward
                                                         However, the application must not change this field.
<31:24> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG468 = Four hundred sixty-ninth 32-bits of PCIE type 1 config space
 *                  (VC0 Completion Receive Queue Control)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG468 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>  DATA_CREDITS    R/W      0x080       0x080     VC0 Completion Data Credits                                          
                                                         The number of initial Completion data credits for VC0, used for 
                                                         all receive queue buffer configurations.
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<19:12> HEADER_CREDITS  R/W      0x40        0x40      VC0 Completion Header Credits                                        
                                                         The number of initial Completion header credits for VC0, used 
                                                         for all receive queue buffer configurations.
                                                         This field is writable through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<20>    NS              RAZ      NS          NS        Reserved                                                             
<23:21> QUEUE_MODE      R/W      0x2         0x2       VC0 Completion TLP Queue Mode                                        
                                                         The operating mode of the Completion receive queue for VC0, 
                                                         used only in the segmented-buffer configuration, writable 
                                                         through PESC(0..1)_CFG_WR.
                                                         Only one bit can be set at a time:
                                                         o Bit 23: Bypass
                                                         o Bit 22: Cut-through
                                                         o Bit 21: Store-and-forward
                                                         However, the application must not change this field.
<31:24> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG490 = Four hundred ninety-first 32-bits of PCIE type 1 config space
 *                  (VC0 Posted Buffer Depth)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG490 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>  DATA_DEPTH      R/W      0x00D8      0xD8      VC0 Posted Data Queue Depth                                          
                                                         Sets the number of entries in the Posted data queue for VC0 
                                                         when using the segmented-buffer configuration, writable 
                                                         through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<15:14> NS              RAZ      NS          NS        Reserved                                                             
<25:16> HEADER_DEPTH    R/W      0x026       0x26      VC0 Posted Header Queue Depth                                        
                                                         Sets the number of entries in the Posted header queue for VC0 
                                                         when using the segmented-buffer configuration, writable through 
                                                         PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<31:26> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG491 = Four hundred ninety-second 32-bits of PCIE type 1 config space
 *                  (VC0 Non-Posted Buffer Depth)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG491 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>  DATA_DEPTH      R/W      0x0038      0x38      VC0 Non-Posted Data Queue Depth                                      
                                                         Sets the number of entries in the Non-Posted data queue for VC0 
                                                         when using the segmented-buffer configuration, writable 
                                                         through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<15:14> NS              RAZ      NS          NS        Reserved                                                             
<25:16> HEADER_DEPTH    R/W      0x00E       0xE       VC0 Non-Posted Header Queue Depth                                    
                                                         Sets the number of entries in the Non-Posted header queue for 
                                                         VC0 when using the segmented-buffer configuration, writable 
                                                         through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<31:26> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG492 = Four hundred ninety-third 32-bits of PCIE type 1 config space
 *                  (VC0 Completion Buffer Depth)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG492 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>  DATA_DEPTH      R/W      0x0168      0x168     VC0 Completion Data Queue Depth                                      
                                                         Sets the number of entries in the Completion data queue for VC0 
                                                         when using the segmented-buffer configuration, writable 
                                                         through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<15:14> NS              RAZ      NS          NS        Reserved                                                             
<25:16> HEADER_DEPTH    R/W      0x046       0x46      VC0 Completion Header Queue Depth                                    
                                                         Sets the number of entries in the Completion header queue for 
                                                         VC0 when using the segmented-buffer configuration, writable 
                                                         through PESC(0..1)_CFG_WR.
                                                         However, the application must not change this field.
<31:26> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG516 = Five hundred seventeenth 32-bits of PCIE type 1 config space
 *                  (PHY Status Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG516 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PHY_STAT        RO       0x0         0x0       PHY Status                                                           
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG517 = Five hundred eighteenth 32-bits of PCIE type 1 config space
 *                  (PHY Control Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG517 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PHY_CTRL        R/W      0x0         0x0       PHY Control                                                          
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_INT_REG = Interrupt Register
 *

     ==============================================================
     AGL_GMX_RX(0..0)_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:20> NS       RAZ      NS          NS        Reserved                                           |   
<19>    PAUSE_DRP R/W1C   0x0         0         Pause packet was dropped due to full GMX RX FIFO   |   
<18>    NS       RAZ      0x0         0         Reserved                                           |   
<17>    NS       RAZ      0x0         0         Reserved                                           |   
<16>    NS       RAZ      0x0         0         Reserved                                           |   
<15>    IFGERR   R/W1C    0x0         0         Interframe Gap Violation                           |   
                                                  Does not necessarily indicate a failure           |
<14>    COLDET   R/W1C    0x0         0         Collision Detection                                |   
<13>    FALERR   R/W1C    0x0         0         False carrier error or extend error after slottime |   
<12>    RSVERR   R/W1C    0x0         0         MII reserved opcodes                               |   
<11>    PCTERR   R/W1C    0x0         0         Bad Preamble / Protocol                            |   
<10>    OVRERR   R/W1C    0x0         0         Internal Data Aggregation Overflow                 |   
                                                  This interrupt should never assert                |
<9>     NS       RAZ      0x0         0         Reserved                                           |   
<8>     SKPERR   R/W1C    0x0         0         Skipper error                                      |   
<7>     RCVERR   R/W1C    0x0         0         Frame was received with MII Data reception error   |   
<6>     LENERR   R/W1C    0x0         0         Frame was received with length error               |   
<5>     ALNERR   R/W1C    0x0         0         Frame was received with an alignment error         |   
<4>     FCSERR   R/W1C    0x0         0         Frame was received with FCS/CRC error              |   
<3>     JABBER   R/W1C    0x0         0         Frame was received with length > sys_length        |   
<2>     MAXERR   R/W1C    0x0         0         Frame was received with length > max_length        |   
<1>     NS       RAZ      0x0         0         Reserved                                           |   
<0>     MINERR   R/W1C    0x0         0         Frame was received with length < min_length        |   

Notes:

(1) exceptions will only be raised to the control processor if the
    corresponding bit in the AGL_GMX_RX_INT_EN register is set.

(2) exception conditions 10:0 can also set the rcv/opcode in the received
    packet's workQ entry.  The AGL_GMX_RX_FRM_CHK register provides a bit mask
    for configuring which conditions set the error.

(3) in half duplex operation, the expectation is that collisions will appear
    as MINERRs.

(4) JABBER - An RX Jabber error indicates that a packet was received which
             is longer than the maximum allowed packet as defined by the
             system.  GMX will truncate the packet at the JABBER count.
             Failure to do so could lead to system instabilty.

(6) MAXERR - for untagged frames, the total frame DA+SA+TL+DATA+PAD+FCS >
             AGL_GMX_RX_FRM_MAX.  For tagged frames, DA+SA+VLAN+TL+DATA+PAD+FCS
             > AGL_GMX_RX_FRM_MAX + 4*VLAN_VAL + 4*VLAN_STACKED.

(7) MINERR - total frame DA+SA+TL+DATA+PAD+FCS < AGL_GMX_RX_FRM_MIN.

(8) ALNERR - Indicates that the packet received was not an integer number of
             bytes.  If FCS checking is enabled, ALNERR will only assert if
             the FCS is bad.  If FCS checking is disabled, ALNERR will
             assert in all non-integer frame cases.

(9) Collisions - Collisions can only occur in half-duplex mode.  A collision
                 is assumed by the receiver when the received
                 frame < AGL_GMX_RX_FRM_MIN - this is normally a MINERR

(A) LENERR - Length errors occur when the received packet does not match the
             length field.  LENERR is only checked for packets between 64
             and 1500 bytes.  For untagged frames, the length must exact
             match.  For tagged frames the length or length+4 must match.

(B) PCTERR - checks that the frame transtions from PREAMBLE=>SFD=>DATA.
             Does not check the number of PREAMBLE cycles.

(C) OVRERR - Not to be included in the HRM

             OVRERR is an architectural assertion check internal to GMX to
             make sure no assumption was violated.  In a correctly operating
             system, this interrupt can never fire.

             GMX has an internal arbiter which selects which of 4 ports to
             buffer in the main RX FIFO.  If we normally buffer 8 bytes,
             then each port will typically push a tick every 8 cycles - if
             the packet interface is going as fast as possible.  If there
             are four ports, they push every two cycles.  So that's the
             assumption.  That the inbound module will always be able to
             consume the tick before another is produced.  If that doesn't
             happen - that's when OVRERR will assert.

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 * 
 * AGL_GMX_RX_INT_EN = Interrupt Enable
 *

     ==============================================================
     AGL_GMX_RX(0..0)_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:20> NS       RAZ      NS          NS        Reserved                                           |   
<19>    PAUSE_DRP R/W     0x0         0         Pause packet was dropped due to full GMX RX FIFO   |   
<18>    NS       RAZ      NS          NS        Reserved                                           |   
<17>    NS       RAZ      NS          NS        Reserved                                           |   
<16>    NS       RAZ      NS          NS        Reserved                                           |   
<15>    IFGERR   R/W      0x0         0         Interframe Gap Violation                           |   
<14>    COLDET   R/W      0x0         0         Collision Detection                                |   
<13>    FALERR   R/W      0x0         0         False carrier error or extend error after slottime |   
<12>    RSVERR   R/W      0x0         0         MII reserved opcodes                               |   
<11>    PCTERR   R/W      0x0         0         Bad Preamble / Protocol                            |   
<10>    OVRERR   R/W      0x0         0         Internal Data Aggregation Overflow                 |   
<9>     NS       RAZ      NS          NS        Reserved                                           |   
<8>     SKPERR   R/W      0x0         0         Skipper error                                      |   
<7>     RCVERR   R/W      0x0         0         Frame was received with RMGII Data reception error |   
<6>     LENERR   R/W      0x0         0         Frame was received with length error               |   
<5>     ALNERR   R/W      0x0         0         Frame was received with an alignment error         |   
<4>     FCSERR   R/W      0x0         0         Frame was received with FCS/CRC error              |   
<3>     JABBER   R/W      0x0         0         Frame was received with length > sys_length        |   
<2>     MAXERR   R/W      0x0         0         Frame was received with length > max_length        |   
<1>     NS       RAZ      NS          NS        Reserved                                           |   
<0>     MINERR   R/W      0x0         0         Frame was received with length < min_length        |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_PRT_CFG = Port description
 *

     ==============================================================
     AGL_GMX_PRT(0..0)_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:6> NS        RAZ      NS          NS        Reserved                                           |   
<5>    TX_EN     R/W      0x0         NS        Port enable.  Must be set for Octane to send       |   
                                                  RMGII traffic.   When this bit clear on a given   |
                                                  port, then all MII cycles will appear as          |
                                                  inter-frame cycles.                               |
<4>    RX_EN     R/W      0x0         NS        Port enable.  Must be set for Octane to receive    |   
                                                  RMGII traffic.  When this bit clear on a given    |
                                                  port, then the all MII cycles will appear as      |
                                                  inter-frame cycles.
<3>    SLOTTIME  RO       0x0         0x0       Slot Time for Half-Duplex operation                |   
                                                  0 = 512 bitimes (10/100Mbs operation)             |
                                                  1 = Reserved                                      |
<2>    DUPLEX    R/W      0x1         NS        Duplex                                             |   
                                                  0 = Half Duplex (collisions/extentions/bursts)    |
                                                  1 = Full Duplex                                   |
<1>    SPEED     RO       0x0         0x0       Link Speed                                         |   
                                                  0 = 10/100Mbs operation                           |
                                                  1 = Reserved                                      |
<0>    EN        R/W      0x0         NS        Link Enable                                        |   
                                                  When EN is clear, packets will not be received    |
                                                  or transmitted (including PAUSE and JAM packets). |
                                                  If EN is cleared while a packet is currently      |
                                                  being received or transmitted, the packet will    |
                                                  be allowed to complete before the bus is idled.   |
                                                  On the RX side, subsequent packets in a burst     |
                                                  will be ignored.                                  |

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_FRM_CTL = Frame Control
 *

     ==============================================================
     AGL_GMX_RX(0..0)_FRM_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:10> NS       RAZ      NS          NS        Reserved                                           |   
<9>     PRE_ALIGN R/W     0x1         1         When set, PREAMBLE parser aligns the the SFD byte  |   
                                                  regardless of the number of previous PREAMBLE     |
                                                  nibbles.  In this mode, PREAMBLE can be consumed  |
                                                  by the HW so when PRE_ALIGN is set, PRE_FREE,     |
                                                  PRE_STRP must be set for correct operation.       |
                                                  PRE_CHK must be set to enable this and all        |
                                                  PREAMBLE features.                                |
<8>     PAD_LEN  R/W      0x0         0         When set, disables the length check for non-min    |   
                                                  sized pkts with padding in the client data        |
<7>     VLAN_LEN R/W      0x0         0         When set, disables the length check for VLAN pkts  |   
<6>     PRE_FREE R/W      0x1         1         When set, PREAMBLE checking is  less strict.       |   
                                                  0 - 254 cycles of PREAMBLE followed by SFD        |
                                                  PRE_FREE must be set if PRE_ALIGN is set.         |
                                                  PRE_CHK must be set to enable this and all        |
                                                  PREAMBLE features.                                |
<5>     CTL_SMAC R/W      0x0         0         Control Pause Frames can match station SMAC        |   
<4>     CTL_MCST R/W      0x1         1         Control Pause Frames can match globally assign     |   
                                                  Multicast address                                 |
<3>     CTL_BCK  R/W      0x1         1         Forward pause information to TX block              |   
<2>     CTL_DRP  R/W      0x1         1         Drop Control Pause Frames                          |   
<1>     PRE_STRP R/W      0x1         1         Strip off the preamble (when present)              |   
                                                  0=PREAMBLE+SFD is sent to core as part of frame   |
                                                  1=PREAMBLE+SFD is dropped                         |
                                                  PRE_STRP must be set if PRE_ALIGN is set.         |
                                                  PRE_CHK must be set to enable this and all        |
                                                  PREAMBLE features.                                |
<0>     PRE_CHK  R/W      0x1         1         This port is configured to send PREAMBLE+SFD       |   
                                                  to begin every frame.  GMX checks that the        |
                                                  PREAMBLE is sent correctly                        |

Notes:

* PRE_CHK
  When set, the MII state expects a typical frame consisting of
  INTER_FRAME=>PREAMBLE(x7)=>SFD(x1)=>DAT.  The state machine watches for
  this exact sequence in order to recognize a valid frame and push frame
  data into the Octane.  There must be exactly 7 PREAMBLE cycles followed by
  the single SFD cycle for the frame to be accepted.

  When a problem does occur within the PREAMBLE seqeunce, the frame is
  marked as bad and not sent into the core.  The AGL_GMX_RX_INT_REG[PCTERR]
  interrupt is also raised.

* PRE_STRP
  When PRE_CHK is set (indicating that the PREAMBLE will be sent), PRE_STRP
  determines if the PREAMBLE+SFD bytes are thrown away or sent to the Octane
  core as part of the packet.

  In either mode, the PREAMBLE+SFD bytes are not counted toward the packet
  size when checking against the MIN and MAX bounds.  Furthermore, the bytes
  are skipped when locating the start of the L2 header for DMAC and Control
  frame recognition.

* CTL_BCK/CTL_DRP
  These bits control how the HW handles incoming PAUSE packets.  Here are
  the most common modes of operation:
    CTL_BCK=1,CTL_DRP=1   - HW does it all
    CTL_BCK=0,CTL_DRP=0   - SW sees all pause frames
    CTL_BCK=0,CTL_DRP=1   - all pause frames are completely ignored

  These control bits should be set to CTL_BCK=0,CTL_DRP=0 in halfdup mode.
  Since PAUSE packets only apply to fulldup operation, any PAUSE packet
  would constitute an exception which should be handled by the processing
  cores.  PAUSE packets should not be forwarded.

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_FRM_CHK = Which frame errors will set the ERR bit of the frame
 *

     ==============================================================
     AGL_GMX_RX(0..0)_FRM_CHK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:9>  NS       RAZ      NS          NS        Reserved                                           |   
<8>     SKPERR   R/W      0x1         1         Skipper error                                      |   
<7>     RCVERR   R/W      0x1         1         Frame was received with MII Data reception error   |   
<6>     LENERR   R/W      0x1         1         Frame was received with length error               |   
<5>     ALNERR   R/W      0x1         1         Frame was received with an alignment error         |   
<4>     FCSERR   R/W      0x1         1         Frame was received with FCS/CRC error              |   
<3>     JABBER   R/W      0x1         1         Frame was received with length > sys_length        |   
<2>     MAXERR   R/W      0x1         1         Frame was received with length > max_length        |   
<1>     RSVRD    R/W      0x0         0         Reserved                                           |   
<0>     MINERR   R/W      0x1         1         Frame was received with length < min_length        |   

Notes:

If AGL_GMX_RX_UDD_SKP[LEN] != 0, then LENERR will be forced to zero in HW.

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_FRM_MIN = Frame Min length
 *

     ==============================================================
     AGL_GMX_RX(0..0)_FRM_MIN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> NS       RAZ      NS          NS        Reserved                                           |   
<15:0>  LEN      R/W      0x40        0x40      Byte count for Min-sized frame check               |   
                                                  AGL_GMX_RXn_FRM_CHK[MINERR] enables the check     |
                                                  for port n.                                       |
                                                  If enabled, failing packets set the MINERR        |
                                                  interrupt and the MIX opcode is set to UNDER_FCS  |
                                                  (0x6, if packet has bad FCS) or UNDER_ERR (0x8,   |
                                                  if packet has good FCS).                          |

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_FRM_MAX = Frame Max length
 *

     ==============================================================
     AGL_GMX_RX(0..0)_FRM_MAX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> NS       RAZ      NS          NS        Reserved                                           |   
<15:0>  LEN      R/W      0x600       0x600     Byte count for Max-sized frame check               |   
                                                  AGL_GMX_RXn_FRM_CHK[MAXERR] enables the check     |
                                                  for port n.                                       |
                                                  If enabled, failing packets set the MAXERR        |
                                                  interrupt and the MIX opcode is set to OVER_FCS   |
                                                  (0x3, if packet has bad FCS) or OVER_ERR (0x4, if |
                                                  packet has good FCS).                             |
                                                  LEN <= AGL_GMX_RX_JABBER[CNT]                     |

Notes:

When changing the LEN field, be sure that LEN does not exceed
AGL_GMX_RX_JABBER[CNT]. Failure to meet this constraint will cause packets that
are within the maximum length parameter to be rejected because they exceed
the AGL_GMX_RX_JABBER[CNT] limit.

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_JABBER = The max size packet after which GMX will truncate
 *

     ==============================================================
     AGL_GMX_RX(0..0)_JABBER Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> NS       RAZ      NS          NS        Reserved                                           |   
<15:0>  CNT      R/W      0x2800      0x2800    Byte count for jabber check                        |   
                                                  Failing packets set the JABBER interrupt and are  |
                                                  optionally sent with opcode==JABBER               |
                                                  GMX will truncate the packet to CNT bytes         |
                                                  CNT >= AGL_GMX_RX_FRM_MAX[LEN]                            |

Notes: 

  CNT must be 8-byte aligned such that CNT[2:0] == 0

  The packet that will be sent to the packet input logic will have an
  additionl 8 bytes if AGL_GMX_RX_FRM_CTL[PRE_CHK] is set and
  AGL_GMX_RX_FRM_CTL[PRE_STRP] is clear.  The max packet that will be sent is
  defined as...

       max_sized_packet = AGL_GMX_RX_JABBER[CNT]+((AGL_GMX_RX_FRM_CTL[PRE_CHK] & !AGL_GMX_RX_FRM_CTL[PRE_STRP])*8)

  Be sure the CNT field value is at least as large as the
  AGL_GMX_RX_FRM_MAX[LEN] value. Failure to meet this constraint will cause
  packets that are within the AGL_GMX_RX_FRM_MAX[LEN] length to be rejected
  because they exceed the CNT limit.

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_DECISION = The byte count to decide when to accept or filter a packet
 *

     ==============================================================
     AGL_GMX_RX(0..0)_DECISION Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:5>  NS       RAZ      NS          NS        Reserved                                           |   
<4:0>   CNT      R/W      0x18        0x18      The byte count to decide when to accept or filter  |   
                                                   a packet.                                        |

Notes:
As each byte in a packet is received by GMX, the L2 byte count is compared
against the AGL_GMX_RX_DECISION[CNT].  The L2 byte count is the number of bytes
from the beginning of the L2 header (DMAC).  In normal operation, the L2
header begins after the PREAMBLE+SFD (AGL_GMX_RX_FRM_CTL[PRE_CHK]=1) and any
optional UDD skip data (AGL_GMX_RX_UDD_SKP[LEN]).

When AGL_GMX_RX_FRM_CTL[PRE_CHK] is clear, PREAMBLE+SFD are prepended to the
packet and would require UDD skip length to account for them.

                                                L2 Size
Port Mode             <=AGL_GMX_RX_DECISION bytes (default=24)  >AGL_GMX_RX_DECISION bytes (default=24)

MII/Full Duplex       accept packet                             apply filters
                      no filtering is applied                   accept packet based on DMAC and PAUSE packet filters

MII/Half Duplex       drop packet                               apply filters
                      packet is unconditionally dropped         accept packet based on DMAC

where l2_size = MAX(0, total_packet_size - AGL_GMX_RX_UDD_SKP[LEN] - ((AGL_GMX_RX_FRM_CTL[PRE_CHK]==1)*8)

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_UDD_SKP = Amount of User-defined data before the start of the L2 data
 *

     ==============================================================
     AGL_GMX_RX(0..0)_UDD_SKP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:9> NS        RAZ      NS          NS        Reserved                                           |   
<8>    FCSSEL    R/W      0x0         0         Include the skip bytes in the FCS calculation      |   
                                                  0 = all skip bytes are included in FCS            |
                                                  1 = the skip bytes are not included in FCS        |
<7>    NS        RAZ      NS          NS        Reserved                                           |   
<6:0>  LEN       R/W      0x0         0         Amount of User-defined data before the start of    |   
                                                  the L2 data.  Zero means L2 comes first.          |
                                                  Max value is 64.                                  |

Notes:

(1) The skip bytes are part of the packet and will be sent down the NCB
    packet interface and will be handled by PKI.

(2) The system can determine if the UDD bytes are included in the FCS check
    by using the FCSSEL field - if the FCS check is enabled.

(3) Assume that the preamble/sfd is always at the start of the frame - even
    before UDD bytes.  In most cases, there will be no preamble in these
    cases since it will be MII to MII communication without a PHY
    involved.

(4) We can still do address filtering and control packet filtering is the
    user desires.
 
(5) UDD_SKP must be 0 in half-duplex operation unless
    AGL_GMX_RX_FRM_CTL[PRE_CHK] is clear.  If AGL_GMX_RX_FRM_CTL[PRE_CHK] is set,
    then UDD_SKP will normally be 8.

(6) In all cases, the UDD bytes will be sent down the packet interface as
    part of the packet.  The UDD bytes are never stripped from the actual
    packet.

(7) If LEN != 0, then AGL_GMX_RX_FRM_CHK[LENERR] will be disabled and AGL_GMX_RX_INT_REG[LENERR] will be zero

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_STATS_CTL = RX Stats Control register
 *

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1> NS        RAZ      NS          NS        Reserved                                           |   
<0>    RD_CLR    R/W      0x0         0         RX Stats registers will clear on reads             |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_IFG = RX Min IFG
 *

     ==============================================================
     AGL_GMX_RX(0..0)_IFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>  NS        RAZ      NS         NS        Reserved                                           |   
<3:0>   IFG       R/W      0xC        12        Min IFG between packets used to determine IFGERR   |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_PAUSE_DROP_TIME = The TIME field in a PAUSE Packet which was dropped due to GMX RX FIFO full condition
 *

     ==============================================================
     AGL_GMX_RX(0..0)_PAUSE_DROP_TIME Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16>  RSVRD     RAZ     NS          NS        Reserved                                          |   
<15:0>   STATUS    R/W1C   0x0         NS        Time extracted from the dropped PAUSE packet      |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_RX_STATS_PKTS
 *
 * Count of good received packets - packets that are not recognized as PAUSE
 * packets, dropped due the DMAC filter, dropped due FIFO full status, or
 * have any other OPCODE (FCS, Length, etc).
 *

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_PKTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> NS       RAZ      NS          NS        Reserved                                           |   
<31:0>  CNT      RC/W     0x0         NS        Count of received good packets                     |   

Notes:
- Read and write CSR operations must arbitrate for the STATS resources with the packet receiver
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_OCTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> NS       RAZ      NS          NS        Reserved                                           |   
<47:0>  CNT      RC/W    0x0         NS        Octet count of received good packets               |   

Notes:
- Read and write CSR operations must arbitrate for the STATS resources with the packet receiver
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_RX_STATS_PKTS_CTL
 *
 * Count of all packets received that were recognized as Flow Control or
 * PAUSE packets.  PAUSE packets with any kind of error are counted in
 * AGL_GMX_RX_STATS_PKTS_BAD.  Pause packets can be optionally dropped or
 * forwarded based on the AGL_GMX_RX_FRM_CTL[CTL_DRP] bit.  This count
 * increments regardless of whether the packet is dropped.  Pause packets
 * will never be counted in AGL_GMX_RX_STATS_PKTS.  Packets dropped due the dmac
 * filter will be counted in AGL_GMX_RX_STATS_PKTS_DMAC and not here.
 *

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_PKTS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> NS       RAZ      NS          NS        Reserved                                           |   
<31:0>  CNT      RC/W    0x0         NS        Count of received pause packets                    |   

Notes:
- Read and write CSR operations must arbitrate for the STATS resources with the packet receiver
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_OCTS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> NS       RAZ      NS          NS        Reserved                                           |   
<47:0>  CNT      RC/W    0x0         NS        Octet count of received pause packets              |   

Notes:
- Read and write CSR operations must arbitrate for the STATS resources with the packet receiver
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_RX_STATS_PKTS_DMAC
 *
 * Count of all packets received that were dropped by the dmac filter.
 * Packets that match the DMAC will be dropped and counted here regardless
 * of if they were bad packets.  These packets will never be counted in
 * AGL_GMX_RX_STATS_PKTS.
 *
 * Some packets that were not able to satisify the DECISION_CNT may not
 * actually be dropped by Octeon, but they will be counted here as if they
 * were dropped.
 *

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_PKTS_DMAC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> NS       RAZ      NS          NS        Reserved                                           |   
<31:0>  CNT      RC/W    0x0         NS        Count of filtered dmac packets                     |   

Notes:
- Read and write CSR operations must arbitrate for the STATS resources with the packet receiver
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_OCTS_DMAC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> NS       RAZ      NS          NS        Reserved                                           |   
<47:0>  CNT      RC/W    0x0         NS        Octet count of filtered dmac packets               |   

Notes:
- Read and write CSR operations must arbitrate for the STATS resources with the packet receiver
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_RX_STATS_PKTS_DRP
 *
 * Count of all packets received that were dropped due to a full receive
 * FIFO.  This counts good and bad packets received - all packets dropped by
 * the FIFO.  It does not count packets dropped by the dmac or pause packet
 * filters.
 *

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_PKTS_DRP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> NS       RAZ      NS          NS        Reserved                                           |   
<31:0>  CNT      RC/W    0x0         NS        Count of dropped packets                           |   

Notes:
- Read and write CSR operations must arbitrate for the STATS resources with the packet receiver
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_OCTS_DRP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> NS       RAZ      NS          NS        Reserved                                           |   
<47:0>  CNT      RC/W    0x0         NS        Octet count of dropped packets                     |   

Notes:
- Read and write CSR operations must arbitrate for the STATS resources with the packet receiver
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_RX_STATS_PKTS_BAD
 *
 * Count of all packets received with some error that were not dropped
 * either due to the dmac filter or lack of room in the receive FIFO.
 *

     ==============================================================
     AGL_GMX_RX(0..0)_STATS_PKTS_BAD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> NS       RAZ      NS          NS        Reserved                                           |   
<31:0>  CNT      RC/W    0x0         NS        Count of bad packets                               |   

Notes:
- Read and write CSR operations must arbitrate for the STATS resources with the packet receiver
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_ADR_CTL = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..0)_ADR_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>  NS       RAZ      NS          NS        Reserved                                           |   
<3>     CAM_MODE R/W      0x0         NS        Allow or deny DMAC address filter                  |   
                                                  0 = reject the packet on DMAC address match       |
                                                  1 = accept the packet on DMAC address match       |
<2:1>   MCST     R/W      0x0         NS        Multicast Mode                                     |   
                                                  0 = Use the Address Filter CAM                    |
                                                  1 = Force reject all multicast packets            |
                                                  2 = Force accept all multicast packets            |
                                                  3 = Reserved                                      |
<0>     BCST     R/W      0x1         NS        Accept All Broadcast Packets                       |   

Notes:
* ALGORITHM
  Here is some pseudo code that represents the address filter behavior.

     @verbatim
     bool dmac_addr_filter(uint8 prt, uint48 dmac) {
       ASSERT(prt >= 0 && prt <= 3);
       if (is_bcst(dmac))                               // broadcast accept
         return (AGL_GMX_RX{prt}_ADR_CTL[BCST] ? ACCEPT : REJECT);
       if (is_mcst(dmac) & AGL_GMX_RX{prt}_ADR_CTL[MCST] == 1)   // multicast reject
         return REJECT;
       if (is_mcst(dmac) & AGL_GMX_RX{prt}_ADR_CTL[MCST] == 2)   // multicast accept
         return ACCEPT;

       cam_hit = 0;
     
       for (i=0; i<8; i++) {
         if (AGL_GMX_RX{prt}_ADR_CAM_EN[EN<i>] == 0)
           continue;
         uint48 unswizzled_mac_adr = 0x0;
         for (j=5; j>=0; j--) {
            unswizzled_mac_adr = (unswizzled_mac_adr << 8) | AGL_GMX_RX{prt}_ADR_CAM{j}[ADR<i*8+7:i*8>];
         }
         if (unswizzled_mac_adr == dmac) {
           cam_hit = 1;
           break;
         }
       }
     
       if (cam_hit)
         return (AGL_GMX_RX{prt}_ADR_CTL[CAM_MODE] ? ACCEPT : REJECT);
       else
         return (AGL_GMX_RX{prt}_ADR_CTL[CAM_MODE] ? REJECT : ACCEPT);
     }
     @endverbatim

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_ADR_CAM_EN = Address Filtering Control Enable
 *

     ==============================================================
     AGL_GMX_RX(0..0)_ADR_CAM_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  NS       RAZ      NS          NS        Reserved                                           |   
<7:0>   EN       R/W      0x0         NS        CAM Entry Enables                                  |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 
 *
 * AGL_GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..0)_ADR_CAM0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ADR      R/W      0x0         NS        The DMAC address to match on                       |   
                                                  Each entry contributes 8bits to one of 8 matchers |
                                                  Write transactions to AGL_GMX_RX_ADR_CAM will not     |
                                                  change the CSR when AGL_GMX_PRT_CFG[EN] is enabled    |
                                                  The CAM matches against unicst or multicst DMAC   |
                                                  addresses.                                        |

Notes:

Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 
 *
 * AGL_GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..0)_ADR_CAM1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ADR      R/W      0x0         NS        The DMAC address to match on                       |   
                                                  Each entry contributes 8bits to one of 8 matchers |
                                                  Write transactions to AGL_GMX_RX_ADR_CAM will not     |
                                                  change the CSR when AGL_GMX_PRT_CFG[EN] is enabled    |
                                                  The CAM matches against unicst or multicst DMAC   |
                                                  addresses.                                        |

Notes:

Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 
 *
 * AGL_GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..0)_ADR_CAM2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ADR      R/W      0x0         NS        The DMAC address to match on                       |   
                                                  Each entry contributes 8bits to one of 8 matchers |
                                                  Write transactions to AGL_GMX_RX_ADR_CAM will not     |
                                                  change the CSR when AGL_GMX_PRT_CFG[EN] is enabled    |
                                                  The CAM matches against unicst or multicst DMAC   |
                                                  addresses.                                        |

Notes:

Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 
 *
 * AGL_GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..0)_ADR_CAM3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ADR      R/W      0x0         NS        The DMAC address to match on                       |   
                                                  Each entry contributes 8bits to one of 8 matchers |
                                                  Write transactions to AGL_GMX_RX_ADR_CAM will not     |
                                                  change the CSR when AGL_GMX_PRT_CFG[EN] is enabled    |
                                                  The CAM matches against unicst or multicst DMAC   |
                                                  addresses.                                        |

Notes:

Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 
 *
 * AGL_GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..0)_ADR_CAM4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ADR      R/W      0x0         NS        The DMAC address to match on                       |   
                                                  Each entry contributes 8bits to one of 8 matchers |
                                                  Write transactions to AGL_GMX_RX_ADR_CAM will not     |
                                                  change the CSR when AGL_GMX_PRT_CFG[EN] is enabled    |
                                                  The CAM matches against unicst or multicst DMAC   |
                                                  addresses.                                        |

Notes:

Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 
 *
 * AGL_GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..0)_ADR_CAM5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ADR      R/W      0x0         NS        The DMAC address to match on                       |   
                                                  Each entry contributes 8bits to one of 8 matchers |
                                                  Write transactions to AGL_GMX_RX_ADR_CAM will not     |
                                                  change the CSR when AGL_GMX_PRT_CFG[EN] is enabled    |
                                                  The CAM matches against unicst or multicst DMAC   |
                                                  addresses.                                        |

Notes:

Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===




 *
 * AGL_GMX_BIST = GMX BIST Results
 *

     ==============================================================
     AGL_GMX_BIST Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:10> NS       RAZ      NS          NS        Reserved                                           |   
<9:0>   STATUS   RO       0x0         0         BIST Results.                                      |   
                                                  HW sets a bit in BIST for for memory that fails   |
                                                  0: gmx#.inb.drf64x78m1_bist                       |
                                                  1: gmx#.outb.fif.drf64x71m1_bist                  |
                                                  2: gmx#.csr.gmi0.srf8x64m1_bist                   |
                                                  3: 0                                              |
                                                  4: 0                                              |
                                                  5: 0                                              |
                                                  6: gmx#.csr.drf20x80m1_bist                       |
                                                  7: gmx#.outb.stat.drf16x27m1_bist                 |
                                                  8: gmx#.outb.stat.drf40x64m1_bist                 |
                                                  9: 0                                              |
Notes:

Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_BP_DROP = FIFO mark for packet drop
 *

     ==============================================================
     AGL_GMX_RX_BP_DROP(0..0) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:6> NS       RAZ      NS          NS        Reserved                                            |   
<5:0>  MARK     R/W      2           2         Number of 8B ticks to reserve in the RX FIFO.       |   
                                                 When the FIFO exceeds this count, packets will     |
                                                 be dropped and not buffered.                       |
                                                 MARK should typically be programmed to 2.          |
                                                 Failure to program correctly can lead to system    |
                                                 instability.                                       |

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_BP_ON = Hiwater mark for port/interface backpressure
 *

     ==============================================================
     AGL_GMX_RX_BP_ON(0..0) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:9>  NS       RAZ      NS          NS        Reserved                                           |   
<8:0>   MARK     R/W      0x20        0x20      Hiwater mark (8B ticks) for backpressure.          |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_BP_OFF = Lowater mark for packet drop
 *

     ==============================================================
     AGL_GMX_RX_BP_OFF(0..0) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:6>  NS       RAZ      NS          NS        Reserved                                           |   
<5:0>   MARK     R/W      0x10        0x10      Water mark (8B ticks) to deassert backpressure     |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_THRESH = MII TX Threshold
 *

     ==============================================================
     AGL_GMX_TX(0..0)_THRESH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:6>  NS       RAZ      NS          NS        Reserved                                           |   
<5:0>   CNT      R/W      0x10        0x10      Number of 16B ticks to accumulate in the TX FIFO   |   
                                                  before sending on the MII interface               |
                                                  This register should be large enough to prevent   |
                                                  underflow on the MII interface and must never     |
                                                  be set below 4.  This register cannot exceed the  |
                                                  the TX FIFO depth which is 32 16B entries.        |
Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_APPEND = MII TX Append Control
 *

     ==============================================================
     AGL_GMX_TX(0..0)_APPEND Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>  NS       RAZ      NS          NS        Reserved                                           |   
<3>     FORCE_FCS R/W     0x1         0x1       Append the Ethernet FCS on each pause packet       |   
                                                  when FCS is clear.  Pause packets are normally    |
                                                  padded to 60 bytes.  If                           |
                                                  AGL_GMX_TX_MIN_PKT[MIN_SIZE] exceeds 59, then     |
                                                  FORCE_FCS will not be used.                       |
<2>     FCS      R/W      0x1         0x1       Append the Ethernet FCS on each packet             |   
<1>     PAD      R/W      0x1         0x1       Append PAD bytes such that min sized               |   
<0>     PREAMBLE R/W      0x1         0x1       Prepend the Ethernet preamble on each transfer     |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_SMAC = MII SMAC
 *

     ==============================================================
     AGL_GMX_SMAC(0..0) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> NS       RAZ      NS          NS        Reserved                                           |   
<47:0>  SMAC     R/W      0x0         NS        The SMAC field is used for generating and          |   
                                                  accepting Control Pause packets                   |

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_PAUSE_PKT_TIME = MII TX Pause Packet pause_time field
 *

     ==============================================================
     AGL_GMX_TX(0..0)_PAUSE_PKT_TIME Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> NS       RAZ      NS          NS        Reserved                                           |   
<15:0>  TIME     R/W      0x60        NS        The pause_time field placed is outbnd pause pkts   |   
                                                  pause_time is in 512 bit-times                    |
                                                  Normally, TIME > AGL_GMX_TX_PAUSE_PKT_INTERVAL            |

Notes:

Choosing proper values of AGL_GMX_TX_PAUSE_PKT_TIME[TIME] and
AGL_GMX_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
designer.  It is suggested that TIME be much greater than INTERVAL and
AGL_GMX_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
count and then when the backpressure condition is lifted, a PAUSE packet
with TIME==0 will be sent indicating that Octane is ready for additional
data.

If the system chooses to not set AGL_GMX_TX_PAUSE_ZERO[SEND], then it is
suggested that TIME and INTERVAL are programmed such that they satisify the
following rule...

   INTERVAL <= TIME - (largest_pkt_size + IFG + pause_pkt_size)

where largest_pkt_size is that largest packet that the system can send
(normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
of the PAUSE packet (normally 64B).

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_MIN_PKT = MII TX Min Size Packet (PAD upto min size)
 *

     ==============================================================
     AGL_GMX_TX(0..0)_MIN_PKT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  NS       RAZ      NS          NS        Reserved                                           |   
<7:0>   MIN_SIZE R/W      0x3b        59        Min frame in bytes before the FCS is applied       |   
                                                  Padding is only appened when                      |
                                                  AGL_GMX_TX_APPEND[PAD] for the coresponding MII   |
                                                  port is set. Packets will be padded to            |
                                                  MIN_SIZE+1 The reset value will pad to 60 bytes.  |

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_PAUSE_PKT_INTERVAL = MII TX Pause Packet transmission interval - how often PAUSE packets will be sent
 *

     ==============================================================
     AGL_GMX_TX(0..0)_PAUSE_PKT_INTERVAL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> NS       RAZ      NS          NS        Reserved                                           |   
<15:0>  INTERVAL R/W      0x10        NS        Arbitrate for a pause packet every (INTERVAL*512)  |   
                                                  bit-times.                                        |
                                                  Normally, 0 < INTERVAL < AGL_GMX_TX_PAUSE_PKT_TIME    |
                                                  INTERVAL=0, will only send a single PAUSE packet  |
                                                  for each backpressure event                       |

Notes:

Choosing proper values of AGL_GMX_TX_PAUSE_PKT_TIME[TIME] and
AGL_GMX_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
designer.  It is suggested that TIME be much greater than INTERVAL and
AGL_GMX_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
count and then when the backpressure condition is lifted, a PAUSE packet
with TIME==0 will be sent indicating that Octane is ready for additional
data.

If the system chooses to not set AGL_GMX_TX_PAUSE_ZERO[SEND], then it is
suggested that TIME and INTERVAL are programmed such that they satisify the
following rule...

   INTERVAL <= TIME - (largest_pkt_size + IFG + pause_pkt_size)

where largest_pkt_size is that largest packet that the system can send
(normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
of the PAUSE packet (normally 64B).

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_SOFT_PAUSE = MII TX Software Pause
 *

     ==============================================================
     AGL_GMX_TX(0..0)_SOFT_PAUSE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> NS       RAZ      NS          NS        Reserved                                           |   
<15:0>  TIME     R/W      0x0         NS        Back off the TX bus for (TIME*512) bit-times       |   
                                                  for full-duplex operation only                    |

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_PAUSE_TOGO = MII TX Amount of time remaining to backpressure
 *

     ==============================================================
     AGL_GMX_TX(0..0)_PAUSE_TOGO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> NS       RAZ      NS          NS        Reserved                                           |   
<15:0>  TIME     RO       NS          NS        Amount of time remaining to backpressure           |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_PAUSE_ZERO = MII TX Amount of time remaining to backpressure
 *

     ==============================================================
     AGL_GMX_TX(0..0)_PAUSE_ZERO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  NS       RAZ      NS          NS        Reserved                                           |   
<0>     SEND     R/W      1           1         When backpressure condition clear, send PAUSE      |   
                                                  packet with pause_time of zero to enable the      |
                                                  channel                                           |

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_STATS_CTL = TX Stats Control register
 *

     ==============================================================
     AGL_GMX_TX(0..0)_STATS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1> NS        RAZ      NS          NS        Reserved                                           |   
<0>    RD_CLR    R/W      0x0         0         Stats registers will clear on reads                |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_CTL = TX Control register
 *

     ==============================================================
     AGL_GMX_TX(0..0)_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2> NS        RAZ      NS          NS        Reserved                                           |   
<1>    XSDEF_EN  R/W      0x1         1         Enables the excessive deferral check for stats     |   
                                                  and interrupts                                    |
<0>    XSCOL_EN  R/W      0x1         1         Enables the excessive collision check for stats    |   
                                                  and interrupts                                    |

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 * AGL_GMX_TX_STAT0 = AGL_GMX_TX_STATS_XSDEF / AGL_GMX_TX_STATS_XSCOL

     ==============================================================
     AGL_GMX_TX(0..0)_STAT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> XSDEF    RC/W     0x0         NS        Number of packets dropped (never successfully      |   
                                                  sent) due to excessive deferal                    |
<31:0>  XSCOL    RC/W     0x0         NS        Number of packets dropped (never successfully      |   
                                                  sent) due to excessive collision.  Defined by     |
                                                  AGL_GMX_TX_COL_ATTEMPT[LIMIT].                            |

Notes:
- Read and write CSR operations must arbitrate for the STATS resources with the packet receiver
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT1 = AGL_GMX_TX_STATS_SCOL  / AGL_GMX_TX_STATS_MCOL

     ==============================================================
     AGL_GMX_TX(0..0)_STAT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> SCOL     RC/W     0x0         NS        Number of packets sent with a single collision     |   
<31:0>  MCOL     RC/W     0x0         NS        Number of packets sent with multiple collisions    |   
                                                  but < AGL_GMX_TX_COL_ATTEMPT[LIMIT].              |

Notes:
- Read and write CSR operations must arbitrate for the STATS resources with the packet receiver
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT2 = AGL_GMX_TX_STATS_OCTS

     ==============================================================
     AGL_GMX_TX(0..0)_STAT2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> NS       RAZ      NS          NS        Reserved                                           |   
<47:0>  OCTS     RC/W     0x0         NS        Number of total octets sent on the interface.      |   
                                                  Does not count octets from frames that were       |
                                                  truncated due to collisions in halfdup mode.      |

Notes:
- Octect counts are the sum of all data transmitted on the wire including
  packet data, pad bytes, fcs bytes, pause bytes, and jam bytes.  The octect
  counts do not include PREAMBLE byte or EXTEND cycles.
- Read and write CSR operations must arbitrate for the STATS resources with the packet receiver
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT3 = AGL_GMX_TX_STATS_PKTS

     ==============================================================
     AGL_GMX_TX(0..0)_STAT3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> NS       RAZ      NS          NS        Reserved                                           |   
<31:0>  PKTS     RC/W     0x0         NS        Number of total frames sent on the interface.      |   
                                                  Does not count frames that were truncated due to  |
                                                   collisions in halfdup mode.                      |

Notes:
- Read and write CSR operations must arbitrate for the STATS resources with the packet receiver
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT4 = AGL_GMX_TX_STATS_HIST1 (64) / AGL_GMX_TX_STATS_HIST0 (<64)

     ==============================================================
     AGL_GMX_TX(0..0)_STAT4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> HIST1    RC/W     0x0         NS        Number of packets sent with an octet count of 64.  |   
<31:0>  HIST0    RC/W     0x0         NS        Number of packets sent with an octet count         |   
                                                  of < 64.                                          |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Read and write CSR operations must arbitrate for the STATS resources with the packet receiver
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT5 = AGL_GMX_TX_STATS_HIST3 (128- 255) / AGL_GMX_TX_STATS_HIST2 (65- 127)

     ==============================================================
     AGL_GMX_TX(0..0)_STAT5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> HIST3    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
                                                  128 - 255.                                        |
<31:0>  HIST2    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
                                                  65 - 127.                                         |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Read and write CSR operations must arbitrate for the STATS resources with the packet receiver
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT6 = AGL_GMX_TX_STATS_HIST5 (512-1023) / AGL_GMX_TX_STATS_HIST4 (256-511)

     ==============================================================
     AGL_GMX_TX(0..0)_STAT6 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> HIST5    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
                                                  512 - 1023.                                       |
<31:0>  HIST4    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
                                                  256 - 511.                                        |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Read and write CSR operations must arbitrate for the STATS resources with the packet receiver
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT7 = AGL_GMX_TX_STATS_HIST7 (1024-1518) / AGL_GMX_TX_STATS_HIST6 (>1518)

     ==============================================================
     AGL_GMX_TX(0..0)_STAT7 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> HIST7    RC/W     0x0         NS        Number of packets sent with an octet count         |   
                                                  of > 1518.                                        |
<31:0>  HIST6    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
                                                  1024 - 1518.                                      |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Read and write CSR operations must arbitrate for the STATS resources with the packet receiver
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT8 = AGL_GMX_TX_STATS_MCST  / AGL_GMX_TX_STATS_BCST

     ==============================================================
     AGL_GMX_TX(0..0)_STAT8 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> MCST     RC/W     0x0         NS        Number of packets sent to multicast DMAC.          |   
                                                  Does not include BCST packets.                    |
<31:0>  BCST     RC/W     0x0         NS        Number of packets sent to broadcast DMAC.          |   
                                                  Does not include MCST packets.                    |

Notes:
- Read and write CSR operations must arbitrate for the STATS resources with the packet receiver
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Note, GMX determines if the packet is MCST or BCST from the DMAC of the
  packet.  GMX assumes that the DMAC lies in the first 6 bytes of the packet
  as per the 802.3 frame definition.  If the system requires additional data
  before the L2 header, then the MCST and BCST counters may not reflect
  reality and should be ignored by software.
- Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT9 = AGL_GMX_TX_STATS_UNDFLW / AGL_GMX_TX_STATS_CTL

     ==============================================================
     AGL_GMX_TX(0..0)_STAT9 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> UNDFLW   RC/W     0x0         NS        Number of underflow packets                        |   
<31:0>  CTL      RC/W     0x0         NS        Number of Control packets (PAUSE flow control)     |   
                                                  generated by GMX.  It does not include control    |
                                                  packets forwarded or generated by the PP's.       |

Notes:
- Read and write CSR operations must arbitrate for the STATS resources with the packet receiver
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===



 *
 * Common
 *

 *
 * AGL_GMX_TX_IFG = MII TX Interframe Gap
 *

     ==============================================================
     AGL_GMX_TX_IFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  NS       RAZ      NS          NS        Reserved                                           |   
<7:4>   IFG2     R/W      0x4         NS        1/3 of the interframe gap timing                   |   
                                                  If CRS is detected during IFG2, then the          |
                                                  interFrameSpacing timer is not reset and a frame  |
                                                  is transmited once the timer expires.             |
<3:0>   IFG1     R/W      0x8         NS        2/3 of the interframe gap timing                   |   
                                                  If CRS is detected during IFG1, then the          |
                                                  interFrameSpacing timer is reset and a frame is   |
                                                  not transmited.                                   |

Notes:
* Programming IFG1 and IFG2.

  For half-duplex systems that require IEEE 802.3 compatibility, IFG1 must
  be in the range of 1-8, IFG2 must be in the range of 4-12, and the
  IFG1+IFG2 sum must be 12.

  For full-duplex systems that require IEEE 802.3 compatibility, IFG1 must
  be in the range of 1-11, IFG2 must be in the range of 1-11, and the
  IFG1+IFG2 sum must be 12.

  For all other systems, IFG1 and IFG2 can be any value in the range of
  1-15.  Allowing for a total possible IFG sum of 2-30.

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_JAM = MII TX Jam Pattern
 *

     ==============================================================
     AGL_GMX_TX_JAM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  NS       RAZ      NS          NS        Reserved                                           |   
<7:0>   JAM      R/W      0xEE        NS        Jam pattern                                        |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_COL_ATTEMPT = MII TX collision attempts before dropping frame
 *

     ==============================================================
     AGL_GMX_TX_COL_ATTEMPT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:5>  NS       RAZ      NS          NS        Reserved                                           |   
<4:0>   LIMIT    R/W      0x10        16        Collision Attempts                                 |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_PAUSE_PKT_DMAC = MII TX Pause Packet DMAC field
 *

     ==============================================================
     AGL_GMX_TX_PAUSE_PKT_DMAC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> NS       RAZ      NS          NS        Reserved                                           |   
<47:0>  DMAC     R/W      0x0180c2000001 0x0180c2000001 The DMAC field placed is outbnd pause pkts |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_PAUSE_PKT_TYPE = MII TX Pause Packet TYPE field
 *

     ==============================================================
     AGL_GMX_TX_PAUSE_PKT_TYPE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> NS       RAZ      NS          NS        Reserved                                           |   
<15:0>  TYPE     R/W      0x8808      0x8808    The TYPE field placed is outbnd pause pkts         |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_OVR_BP = MII TX Override BackPressure
 *

     ==============================================================
     AGL_GMX_TX_OVR_BP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:12> NS       RAZ      NS          NS        Reserved                                           |   
<11:9>  SPARE2   R/W      0x0         0         Spare                                              |   
<8>     EN       R/W      0x0         0         Per port Enable back pressure override             |   
<7:5>   SPARE1   R/W      0x0         0         Spare                                              |   
<4>     BP       R/W      0x0         0         Port BackPressure status to use                    |   
                                                  0=Port is available                               |
                                                  1=Port should be back pressured                   |
<3:1>   SPARE0   R/W      0x0         0         Spare                                              |   
<0>     IGN_FULL R/W      0x0         0         Ignore the RX FIFO full when computing BP          |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_BP = MII TX BackPressure Register
 *

     ==============================================================
     AGL_GMX_TX_BP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  NS       RAZ      NS          NS        Reserved                                           |   
<0>     BP       RO       0x0         0         Port BackPressure status                           |   
                                                  0=Port is available                               |
                                                  1=Port should be back pressured                   |

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_PRT_INFO = state information for the ports
 *

     ==============================================================
     AGL_GMX_RX_PRT_INFO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:17> NS       RAZ      NS          NS        Reserved                                           |   
<16>    DROP     RO       0x0         0x0       Port indication that data was dropped              |   
<15:1>  NS       RAZ      NS          NS        Reserved                                           |   
<0>     COMMIT   RO       0x0         0x0       Port indication that SOP was accepted              |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_LFSR = LFSR used to implement truncated binary exponential backoff
 *

     ==============================================================
     AGL_GMX_TX_LFSR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> NS       RAZ      NS          NS        Reserved                                           |   
<15:0>  LFSR     R/W      0xffff      NS        The current state of the LFSR used to feed random  |   
                                                  numbers to compute truncated binary exponential   |
                                                  backoff.                                          |

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_INT_REG = Interrupt Register
 *

     ==============================================================
     AGL_GMX_TX_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:20> NS       RAZ      NS          NS        Reserved                                           |   
<19:17> SPARE4   R/W1C    0x0         0         Spare                                              |   
<16>    LATE_COL R/W1C    0x0         0         TX Late Collision                                  |   
<15:13> SPARE3   R/W1C    0x0         0         Spare                                              |   
<12>    XSDEF    R/W1C    0x0         0         TX Excessive deferral (MII/halfdup mode only)    |     
<11:9>  SPARE2   R/W1C    0x0         0         Spare                                              |   
<8>     XSCOL    R/W1C    0x0         0         TX Excessive collisions (MII/halfdup mode only)  |     
<7:3>   SPARE1   R/W1C    0x0         0         Spare                                              |   
<2>     UNDFLW   R/W1C    0x0         0         TX Underflow (MII mode only)                       |   
<1>     SPARE0   R/W1C    0x0         0         Spare                                              |   
<0>     PKO_NXA  R/W1C    0x0         0         Port address out-of-range from PKO Interface       |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 * 
 * AGL_GMX_TX_INT_EN = Interrupt Enable
 *

     ==============================================================
     AGL_GMX_TX_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:20> NS       RAZ      NS          NS        Reserved                                           |   
<19:17> SPARE4   R/W      0x0         0         Spare                                              |   
<16>    LATE_COL R/W      0x0         0         TX Late Collision                                  |   
<15:13> SPARE3   R/W      0x0         0         Spare                                              |   
<12>    XSDEF    R/W      0x0         0         TX Excessive deferral (MII/halfdup mode only)    |     
<11:9>  SPARE2   R/W      0x0         0         Spare                                              |   
<8>     XSCOL    R/W      0x0         0         TX Excessive collisions (MII/halfdup mode only)  |     
<7:3>   SPARE1   R/W      0x0         0         Spare                                              |   
<2>     UNDFLW   R/W      0x0         0         TX Underflow (MII mode only)                       |   
<1>     SPARE0   R/W      0x0         0         Spare                                              |   
<0>     PKO_NXA  R/W      0x0         0         Port address out-of-range from PKO Interface       |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 * 
 * AGL_GMX_BAD_REG = A collection of things that have gone very, very wrong
 *

     ==============================================================
     AGL_GMX_BAD_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:35> NS       RAZ      NS          NS        Reserved                                           |   
<34>    TXPSH    R/W1C    0x0         0x0       TX FIFO overflow                                   |   
<33>    TXPOP    R/W1C    0x0         0x0       TX FIFO underflow                                  |   
<32>    OVRFLW   R/W1C    0x0         0x0       RX FIFO overflow                                   |   
<31>    NS       RAZ      NS          NS        Reserved                                           |   
<30:27> SPARE3   R/W1C    0x0         0         Spare                                              |   
<26>    STATOVR  R/W1C    0x0         0         TX Statistics overflow                             |   
<25:23> SPARE2   R/W1C    0x0         0         Spare                                              |   
<22>    LOSTSTAT R/W1C    0x0         0         TX Statistics data was over-written                |   
                                                  TX Stats are corrupted                            |
<21:18> NS       RAZ      0x0         0         Write safe / read as zero                          |   
<17:3>  SPARE1   R/W1C    0x0         0         Spare                                              |   
<2>     OUT_OVR  R/W1C    0x0         0         Outbound data FIFO overflow                        |   
<1:0>   SPARE0   R/W1C    0x0         0         Spare                                              |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * 
 * AGL_GMX_STAT_BP = Number of cycles that the TX/Stats block has help up operation
 *

     ==============================================================
     AGL_GMX_STAT_BP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:17> NS       RAZ      NS          NS        Reserved                                           |   
<16>    BP       RO       0x0         0         Current BP state                                   |   
<15:0>  CNT      R/W1C    0x0         0         Number of cycles that BP has been asserted         |   
                                                  Saturating counter                                |

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 * 
 * AGL_GMX_RX_TX_STATUS = GMX RX/TX Status
 *

     ==============================================================
     AGL_GMX_RX_TX_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:5>  NS       RAZ      NS          NS        Reserved                                           |   
<4>     TX       RC       0           0         Transmit data since last read                      |   
<3:1>   NS       RAZ      NS          NS        Reserved                                           |   
<0>     RX       RC       0           0         Receive data since last read                       |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 * 
 * AGL_GMX_DRV_CTL = GMX Drive Control
 *

     ==============================================================
     AGL_GMX_DRV_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:17> NS       RAZ      NS          NS        Reserved                                           |   
<16>    BYP_EN   R/W      0           0         Compensation Controller Bypass Enable              |   
<15:13> NS       RAZ      NS          NS        Reserved                                           |   
<12:8>  PCTL     R/W      0x10        NS        AGL PCTL                                           |   
<7:5>   NS       RAZ      NS          NS        Reserved                                           |   
<4:0>   NCTL     R/W      0x10        NS        AGL NCTL                                           |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 * 
 * AGL_GMX_INF_MODE = Interface Mode
 *

     ==============================================================
     AGL_GMX_INF_MODE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2>  NS       RAZ      NS          NS        Reserved                                           |   
<1>     EN       R/W      0           1         Interface Enable                                   |   
<0>     NS       RAZ      NS          NS        Reserved                                           |   

Notes:

Additionally reset when MIX_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 *                  FPA_FPF0_MARKS = FPA's Queue 0 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 0. The value of FPF_RD and FPF_WR should have at least a 33 diffrence. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75) 
 *

     ==============================================================
     FPA_FPF0_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 
<11:0>  FPF_RD   R/W      0x40        0         When the number of free-page-pointers in a             
                                                 queue drops below this value amd there are                                        
                                                 free-page-pointers in DRAM, the FPA will                                                
                                                 read one page (32 pointers) from DRAM.                                            
                                                 This maximum value for this field should be
                                                 FPA_FPF0_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
<23:12> FPF_WR   R/W      0xC4        0         When the number of free-page-pointers in a             
                                                  queue exceeds this value the FPA will write                                       
                                                  32-page-pointers of that queue to DRAM.
                                                 The MAX value for this field should be
                                                 FPA_FPF0_SIZE[FPF_SIZ]-2.
<63:24> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF1_MARKS = FPA's Queue 1 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 1. The value of FPF_RD and FPF_WR should have at least a 33 diffrence. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75) 
 *

     ==============================================================
     FPA_FPF1_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<10:0>  FPF_RD   R/W      0x40        0         When the number of free-page-pointers in a             
                                                  queue drops below this value amd there are                                      
                                                  free-page-pointers in DRAM, the FPA will                                             
                                                  read one page (32 pointers) from DRAM.                                               
                                                 This maximum value for this field should be
                                                 FPA_FPF0_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
<21:11> FPF_WR   R/W      0xC4        0         When the number of free-page-pointers in a             
                                                  queue exceeds this value the FPA will write                                     
                                                  32-page-pointers of that queue to DRAM.                                              
                                                 The MAX value for this field should be
                                                 FPA_FPF0_SIZE[FPF_SIZ]-2.
<63:22> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF2_MARKS = FPA's Queue 2 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 2. The value of FPF_RD and FPF_WR should have at least a 33 diffrence. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75) 
 *

     ==============================================================
     FPA_FPF2_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<10:0>  FPF_RD   R/W      0x40        0         When the number of free-page-pointers in a             
                                                  queue drops below this value amd there are                                               
                                                  free-page-pointers in DRAM, the FPA will                                                 
                                                  read one page (32 pointers) from DRAM.                                                   
                                                 This maximum value for this field should be
                                                 FPA_FPF0_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
<21:11> FPF_WR   R/W      0xC4        0         When the number of free-page-pointers in a             
                                                  queue exceeds this value the FPA will write                                              
                                                  32-page-pointers of that queue to DRAM.                                                  
                                                 The MAX value for this field should be
                                                 FPA_FPF0_SIZE[FPF_SIZ]-2.
<63:22> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF3_MARKS = FPA's Queue 3 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 3. The value of FPF_RD and FPF_WR should have at least a 33 diffrence. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75) 
 *

     ==============================================================
     FPA_FPF3_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<10:0>  FPF_RD   R/W      0x40        0         When the number of free-page-pointers in a             
                                                  queue drops below this value amd there are                                           
                                                  free-page-pointers in DRAM, the FPA will                                               
                                                  read one page (32 pointers) from DRAM.                                                 
                                                 This maximum value for this field should be
                                                 FPA_FPF0_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
<21:11> FPF_WR   R/W      0xC4        0         When the number of free-page-pointers in a             
                                                  queue exceeds this value the FPA will write                                          
                                                  32-page-pointers of that queue to DRAM.                                                
                                                 The MAX value for this field should be
                                                 FPA_FPF0_SIZE[FPF_SIZ]-2.
<63:22> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF4_MARKS = FPA's Queue 4 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 4. The value of FPF_RD and FPF_WR should have at least a 33 diffrence. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75) 
 *

     ==============================================================
     FPA_FPF4_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<10:0>  FPF_RD   R/W       0x40        0        When the number of free-page-pointers in a             
                                                  queue drops below this value amd there are                                     
                                                  free-page-pointers in DRAM, the FPA will                                       
                                                  read one page (32 pointers) from DRAM.                                             
                                                 This maximum value for this field should be
                                                 FPA_FPF0_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
<21:11> FPF_WR   R/W       0xC4        0        When the number of free-page-pointers in a             
                                                  queue exceeds this value the FPA will write                                    
                                                  32-page-pointers of that queue to DRAM.                                            
                                                 The MAX value for this field should be
                                                 FPA_FPF0_SIZE[FPF_SIZ]-2.
<63:22> NS       RAZ       NS          NS       Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF5_MARKS = FPA's Queue 5 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 5. The value of FPF_RD and FPF_WR should have at least a 33 diffrence. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75) 
 *

     ==============================================================
     FPA_FPF5_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<10:0>  FPF_RD   R/W       0x40        0        When the number of free-page-pointers in a             
                                                  queue drops below this value amd there are                                 
                                                  free-page-pointers in DRAM, the FPA will                                   
                                                  read one page (32 pointers) from DRAM.                                           
                                                 This maximum value for this field should be
                                                 FPA_FPF0_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
<21:11> FPF_WR   R/W       0xC4        0        When the number of free-page-pointers in a             
                                                  queue exceeds this value the FPA will write                                
                                                  32-page-pointers of that queue to DRAM.                                          
                                                 The MAX value for this field should be
                                                 FPA_FPF0_SIZE[FPF_SIZ]-2.
<63:22> NS       RAZ       NS          NS       Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF6_MARKS = FPA's Queue 6 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 6. The value of FPF_RD and FPF_WR should have at least a 33 diffrence. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75) 
 *

     ==============================================================
     FPA_FPF6_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<10:0>   FPF_RD   R/W      0x40        0        When the number of free-page-pointers in a             
                                                  queue drops below this value amd there are                                         
                                                  free-page-pointers in DRAM, the FPA will                                               
                                                  read one page (32 pointers) from DRAM.                                                    
                                                 This maximum value for this field should be
                                                 FPA_FPF0_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
<21:11>  FPF_WR   R/W      0xC4        0        When the number of free-page-pointers in a             
                                                  queue exceeds this value the FPA will write                                        
                                                  32-page-pointers of that queue to DRAM.                                                
                                                 The MAX value for this field should be
                                                 FPA_FPF0_SIZE[FPF_SIZ]-2.
<63:22>  NS       RAZ      NS          NS       Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF7_MARKS = FPA's Queue 7 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 7. The value of FPF_RD and FPF_WR should have at least a 33 diffrence. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75) 
 *

     ==============================================================
     FPA_FPF7_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<10:0>  FPF_RD    R/W     0x40        0         When the number of free-page-pointers in a             
                                                  queue drops below this value amd there are                                            
                                                  free-page-pointers in DRAM, the FPA will                                              
                                                  read one page (32 pointers) from DRAM.                                                
                                                 This maximum value for this field should be
                                                 FPA_FPF0_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
<21:11> FPF_WR    R/W     0xC4        0         When the number of free-page-pointers in a             
                                                  queue exceeds this value the FPA will write                                           
                                                  32-page-pointers of that queue to DRAM.                                               
                                                 The MAX value for this field should be
                                                 FPA_FPF0_SIZE[FPF_SIZ]-2.
<63:22> NS        RAZ      NS         NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_INT_SUM = FPA's Interrupt Summary Register
 *
 * Contains the diffrent interrupt summary bits of the FPA.
 *

     ==============================================================
     FPA_INT_SUM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     FED0_SBE R/W1C     0           0        Set when a Single Bit Error is detected in FPF0.       
<1>     FED0_DBE R/W1C     0           0        Set when a Double Bit Error is detected in FPF0.       
<2>     FED1_SBE R/W1C     0           0        Set when a Single Bit Error is detected in FPF1.       
<3>     FED1_DBE R/W1C     0           0        Set when a Double Bit Error is detected in FPF1.       
<4>     Q0_UND   R/W1C     0           0        Set when a Queue0 page count available goes            
                                                 negative.
<5>     Q0_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and         
                                                 the count available is greater than pointers
                                                 present in the FPA.
<6>     Q0_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in       
                                                 the L2C does not have the FPA owner ship bit set.
<7>     Q1_UND   R/W1C     0           0        Set when a Queue0 page count available goes            
                                                 negative.
<8>     Q1_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and         
                                                 the count available is greater than pointers
                                                 present in the FPA.
<9>     Q1_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in       
                                                 the L2C does not have the FPA owner ship bit set.
<10>    Q2_UND   R/W1C     0           0        Set when a Queue0 page count available goes            
                                                 negative.
<11>    Q2_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and         
                                                 the count available is greater than than pointers
                                                 present in the FPA.
<12>    Q2_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in       
                                                 the L2C does not have the FPA owner ship bit set.
<13>    Q3_UND   R/W1C     0           0        Set when a Queue0 page count available goes            
                                                 negative.
<14>    Q3_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and         
                                                 the count available is greater than than pointers
                                                 present in the FPA.
<15>    Q3_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in       
                                                 the L2C does not have the FPA owner ship bit set.
<16>    Q4_UND   R/W1C     0           0        Set when a Queue0 page count available goes            
                                                 negative.
<17>    Q4_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and         
                                                 the count available is greater than than pointers
                                                 present in the FPA.
<18>    Q4_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in       
                                                 the L2C does not have the FPA owner ship bit set.
<19>    Q5_UND   R/W1C     0           0        Set when a Queue0 page count available goes            
                                                 negative.
<20>    Q5_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and         
                                                 the count available is greater than than pointers
                                                 present in the FPA.
<21>    Q5_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in       
                                                 the L2C does not have the FPA owner ship bit set.
<22>    Q6_UND   R/W1C     0           0        Set when a Queue0 page count available goes            
                                                 negative.
<23>    Q6_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and         
                                                 the count available is greater than than pointers
                                                 present in the FPA.
<24>    Q6_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in       
                                                 the L2C does not have the FPA owner ship bit set.
<25>    Q7_UND   R/W1C     0           0        Set when a Queue0 page count available goes            
                                                 negative.
<26>    Q7_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and         
                                                 the count available is greater than than pointers
                                                 present in the FPA.
<27>    Q7_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in       
                                                 the L2C does not have the FPA owner ship bit set.
<63:28> NS       RAZ       NS          NS       Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_INT_ENB = FPA's Interrupt Enable
 *
 * The FPA's interrupt enable register.
 *

     ==============================================================
     FPA_INT_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     FED0_SBE R/W      0           0         When set (1) and bit 0 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<1>     FED0_DBE R/W      0           0         When set (1) and bit 1 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<2>     FED1_SBE R/W      0           0         When set (1) and bit 2 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<3>     FED1_DBE R/W      0           0         When set (1) and bit 3 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         

<4>     Q0_UND   R/W      0           0         When set (1) and bit 4 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<5>     Q0_COFF  R/W      0           0         When set (1) and bit 5 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<6>     Q0_PERR  R/W      0           0         When set (1) and bit 6 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<7>     Q1_UND   R/W      0           0         When set (1) and bit 7 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<8>     Q1_COFF  R/W      0           0         When set (1) and bit 8 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<9>     Q1_PERR  R/W      0           0         When set (1) and bit 9 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<10>    Q2_UND   R/W      0           0         When set (1) and bit 10 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<11>    Q2_COFF  R/W      0           0         When set (1) and bit 11 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<12>    Q2_PERR  R/W      0           0         When set (1) and bit 12 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<13>    Q3_UND   R/W      0           0         When set (1) and bit 13 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<14>    Q3_COFF  R/W      0           0         When set (1) and bit 14 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<15>    Q3_PERR  R/W      0           0         When set (1) and bit 15 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<16>    Q4_UND   R/W      0           0         When set (1) and bit 16 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<17>    Q4_COFF  R/W      0           0         When set (1) and bit 17 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<18>    Q4_PERR  R/W      0           0         When set (1) and bit 18 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<19>    Q5_UND   R/W      0           0         When set (1) and bit 19 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<20>    Q5_COFF  R/W      0           0         When set (1) and bit 20 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<21>    Q5_PERR  R/W      0           0         When set (1) and bit 21 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<22>    Q6_UND   R/W      0           0         When set (1) and bit 22 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<23>    Q6_COFF  R/W      0           0         When set (1) and bit 23 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<24>    Q6_PERR  R/W      0           0         When set (1) and bit 24 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<25>    Q7_UND   R/W      0           0         When set (1) and bit 25 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<26>    Q7_COFF  R/W      0           0         When set (1) and bit 26 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<27>    Q7_PERR  R/W      0           0         When set (1) and bit 27 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.                                                                         
<63:28> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_CTL_STATUS = FPA's Control/Status Register
 *
 * The FPA's interrupt enable register.
 *

     ==============================================================
     FPA_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<6:0>   MEM0_ERR R/W      0           0         Causes a flip of the ECC bit associated 38:32          
                                                 respective to bit 6:0 of this field, for FPF                                                
                                                 FIFO 0.                                                                                     
<13:7>  MEM1_ERR R/W      0           0         Causes a flip of the ECC bit associated 38:32          
                                                 respective to bit 6:0 of this field, for FPF                                                
                                                 FIFO 1.                                                                                     
<14>    ENB      R/W      0           0         Must be set to 1 AFTER writing all config registers    
                                                 and 10 cycles have past. If any of the config
                                                 register are written after writing this bit the
                                                 FPA may begin to operate incorrectly.
<15>    USE_STT  R/W      0           0         When clear '0' the FPA will use STT to store           
                                                 pointers to the L2C. 
<16>    USE_LDT  R/W      0           0         When clear '0' the FPA will use LDT to load            
                                                 pointers from the L2C.
<17>    RESET    R/W      0           0         When set causes a reset of the FPA with the            
                                                 exception of the RSL.
<63:18> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF0_SIZE = FPA's Queue 0 Free Page FIFO Size
 *
 * The number of page pointers that will be kept local to the FPA for this Queue. FPA Queues are
 * assigned in order from Queue 0 to Queue 7, though only Queue 0 through Queue x can be used.
 * The sum of the 8 (0-7) FPA_FPF#_SIZE registers must be limited to 2048.
 *

     ==============================================================
     FPA_FPF0_SIZE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>  FPF_SIZ  R/W      0x100       0         The number of entries assigned in the FPA FIFO         
                                                 (used to hold page-pointers) for this Queue.                                                     
                                                 The value of this register must divisable by 2,                                                  
                                                 and the FPA will ignore bit [0] of this register.                                                
                                                 The total of the FPF_SIZ field of the 8 (0-7)                                                    
                                                 FPA_FPF#_SIZE registers must not exceed 2048.                                            
                                                 After writing this field the FPA will need 10                                                    
                                                 core clock cycles to be ready for operation. The                                                 
                                                 assignment of location in the FPA FIFO must                                                      
                                                 start with Queue 0, then 1, 2, etc.
                                                 The number of useable entries will be FPF_SIZ-2.
<63:12> NS       RAZ      NS          NS        Reserved                                              
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF@_SIZE = FPA's Queue 1-7 Free Page FIFO Size
 *
 * The number of page pointers that will be kept local to the FPA for this Queue. FPA Queues are
 * assigned in order from Queue 0 to Queue 7, though only Queue 0 through Queue x can be used.
 * The sum of the 8 (0-7) FPA_FPF#_SIZE registers must be limited to 2048.
 *

     ==============================================================
     FPA_FPF(1..7)_SIZE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<10:0>  FPF_SIZ  R/W      0x100       0         The number of entries assigned in the FPA FIFO         
                                                 (used to hold page-pointers) for this Queue.                                                
                                                 The value of this register must divisable by 2,                                             
                                                 and the FPA will ignore bit [0] of this register.                                           
                                                 The total of the FPF_SIZ field of the 8 (0-7)                                               
                                                 FPA_FPF#_SIZE registers must not exceed 2048.                                       
                                                 After writing this field the FPA will need 10                                               
                                                 core clock cycles to be ready for operation. The                                            
                                                 assignment of location in the FPA FIFO must                                                 
                                                 start with Queue 0, then 1, 2, etc.                                                         
                                                 The number of useable entries will be FPF_SIZ-2.
<63:11> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE@_PAGES_AVAILABLE = FPA's Queue 0-7 Free Page Available Register
 *
 * The number of page pointers that are available in the FPA and local DRAM.
 *

     ==============================================================
     FPA_QUE(0..7)_AVAILABLE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<28:0>  QUE_SIZ  RO       0x0         0         The number of free pages available in this Queue.      
<63:29> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_WART_CTL = FPA's WART Control
 *
 * Control and status for the WART block.
 *

     ==============================================================
     FPA_WART_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>  CTL      R/W      NS          0         Control information.                                   
<63:16> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_WART_STATUS = FPA's WART Status
 *
 * Control and status for the WART block.
 *

     ==============================================================
     FPA_WART_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  STATUS   RO       0x0         0         Status information.                                    
<63:32> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_BIST_STATUS = BIST Status of FPA Memories
 *
 * The result of the BIST run on the FPA memories.
 *

     ==============================================================
     FPA_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     FDR      RO       0x0         0         fpa_fdr  memory bist status.                           
<1>     FFR      RO       0x0         0         fpa_ffr  memory bist status.                           
<2>     FPF1     RO       0x0         0         fpa_fpf1 memory bist status.                           
<3>     FPF0     RO       0x0         0         fpa_fpf0 memory bist status.                           
<4>     FRD      RO       0x0         0         fpa_frd  memory bist status.                           
<63:5>  NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE0_PAGE_INDEX = FPA's Queue0 Page Index
 *
 * The present index page for queue 0 of the FPA.
 * This numbr reflests the number of pages of pointers that have been written to memory
 * for this queue.
 *

     ==============================================================
     FPA_QUE0_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<24:0>  PG_NUM   RO       0x0         NS        Page number.                                           
<63:25> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE1_PAGE_INDEX = FPA's Queue1 Page Index
 *
 * The present index page for queue 1 of the FPA.
 * This numbr reflests the number of pages of pointers that have been written to memory
 * for this queue.
 *

     ==============================================================
     FPA_QUE1_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<24:0>  PG_NUM   RO       0x0         NS        Page number.                                           
<63:25> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE2_PAGE_INDEX = FPA's Queue2 Page Index
 *
 * The present index page for queue 2 of the FPA.
 * This numbr reflests the number of pages of pointers that have been written to memory
 * for this queue.
 *

     ==============================================================
     FPA_QUE2_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<24:0>  PG_NUM   RO       0x0         NS        Page number.                                           
<63:25> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE3_PAGE_INDEX = FPA's Queue3 Page Index
 *
 * The present index page for queue 3 of the FPA.
 * This numbr reflests the number of pages of pointers that have been written to memory
 * for this queue.
 *

     ==============================================================
     FPA_QUE3_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<24:0>  PG_NUM   RO       0x0         NS        Page number.                                           
<63:25> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE4_PAGE_INDEX = FPA's Queue4 Page Index
 *
 * The present index page for queue 4 of the FPA.
 * This numbr reflests the number of pages of pointers that have been written to memory
 * for this queue.
 *

     ==============================================================
     FPA_QUE4_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<24:0>  PG_NUM   RO       0x0         NS        Page number.                                           
<63:25> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE5_PAGE_INDEX = FPA's Queue5 Page Index
 *
 * The present index page for queue 5 of the FPA.
 * This numbr reflests the number of pages of pointers that have been written to memory
 * for this queue.
 *

     ==============================================================
     FPA_QUE5_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<24:0>  PG_NUM   RO       0x0         NS        Page number.                                           
<63:25> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE6_PAGE_INDEX = FPA's Queue6 Page Index
 *
 * The present index page for queue 6 of the FPA.
 * This numbr reflests the number of pages of pointers that have been written to memory
 * for this queue.
 *

     ==============================================================
     FPA_QUE6_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<24:0>  PG_NUM   RO       0x0         NS        Page number.                                           
<63:25> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE7_PAGE_INDEX = FPA's Queue7 Page Index
 *
 * The present index page for queue 7 of the FPA.
 * This numbr reflests the number of pages of pointers that have been written to memory
 * for this queue.
 *

     ==============================================================
     FPA_QUE7_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<24:0>  PG_NUM   RO       0x0         NS        Page number.                                           
<63:25> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE_EXP = FPA's Queue# Expected Page Index
 *
 * When a INT_SUM[PERR#] occurs this will be latched with the expected value.
 * This is latched on the first error and will not latch again unitl all errors are cleared.
 *

     ==============================================================
     FPA_QUE_EXP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<25:0>  EXP_INDX RO       0x0         NS        Expected page number read from memory.                 
<28:26> EXP_QUE  RO       0x0         NS        Expected fpa-queue-number read from memory.            
<31:29> RSVD     RO       0x0         0x7       Resered.                                               
<63:32> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE_ACT = FPA's Queue# Actual Page Index
 *
 * When a INT_SUM[PERR#] occurs this will be latched with the value read from L2C.
 * This is latched on the first error and will not latch again unitl all errors are cleared.
 *

     ==============================================================
     FPA_QUE_ACT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<25:0>  ACT_INDX RO       0x0         NS        Page number read from memory.                          
<28:26> ACT_QUE  RO       0x0         NS        FPA-queue-number read from memory.                     
<31:29> RSVD     RO       0x0         0x7       Resered.                                               
<63:32> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===



 *
 * GMX_RX_INT_REG = Interrupt Register
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:27> RSVRD     RAZ     NS          NS        Reserved                                           |   
<26>    UNDAT     R/W1C   0x0         0         Unexpected Data                                    |   
                                                  (XAUI Mode only)                                  |
<25>    UNEOP     R/W1C   0x0         0         Unexpected EOP                                     |   
                                                  (XAUI Mode only)                                  |
<24>    UNSOP     R/W1C   0x0         0         Unexpected SOP                                     |   
                                                  (XAUI Mode only)                                  |
<23>    BAD_TERM  R/W1C   0x0         0         Frame is terminated by control character other     |   
                                                  than /T/.  The error propagation control          |
                                                  character /E/ will be included as part of the     |
                                                  frame and does not cause a frame termination.     |
                                                  (XAUI Mode only)                                  |
<22>    BAD_SEQ   R/W1C   0x0         0         Reserved Sequence Deteted                          |   
                                                  (XAUI Mode only)                                  |
<21>    REM_FAULT R/W1C   0x0         0         Remote Fault Sequence Deteted                      |   
                                                  (XAUI Mode only)                                  |
<20>    LOC_FAULT R/W1C   0x0         0         Local Fault Sequence Deteted                       |   
                                                  (XAUI Mode only)                                  |
<19>    PAUSE_DRP R/W1C   0x0         0         Pause packet was dropped due to full GMX RX FIFO   |   
<18:16> RSVRD     RAZ     NS          NS        Reserved                                           |   
<15>    IFGERR    R/W1C   0x0         0         Interframe Gap Violation                           |   
                                                  Does not necessarily indicate a failure           |
                                                  (SGMII/1000Base-X only)                           |
<14>    COLDET    R/W1C   0x0         0         Collision Detection                                |   
                                                  (SGMII/1000Base-X half-duplex only)               |
<13>    FALERR    R/W1C   0x0         0         False carrier error or extend error after slottime |   
                                                  (SGMII/1000Base-X only)                           |
<12>    RSVERR    R/W1C   0x0         0         Reserved opcodes                                   |   
<11>    PCTERR    R/W1C   0x0         0         Bad Preamble / Protocol                            |   
                                                  In XAUI mode, the column of data that was bad     |
                                                  will be logged in GMX_RX_XAUI_BAD_COL             |
<10>    OVRERR   R/W1C    0x0         0         Internal Data Aggregation Overflow                 |   
                                                  This interrupt should never assert                |
                                                  (SGMII/1000Base-X only)                           |
<9>     RSVRD     RAZ     NS          NS        Reserved                                           |   
<8>     SKPERR    R/W1C   0x0         0         Skipper error                                      |   
<7>     RCVERR    R/W1C   0x0         0         Frame was received with Data reception error       |   
<6:5>   RSVRD     RAZ     NS          NS        Reserved                                           |   
<4>     FCSERR    R/W1C   0x0         0         Frame was received with FCS/CRC error              |   
<3>     JABBER    R/W1C   0x0         0         Frame was received with length > sys_length        |   
<2>     RSVRD     RAZ     NS          NS        Reserved                                           |   
<1>     CAREXT    R/W1C   0x0         0         Carrier extend error                               |   
                                                  (SGMII/1000Base-X only)                           |
<0>     RSVRD     RAZ     NS          NS        Reserved                                           |   

Notes:

(1) exceptions will only be raised to the control processor if the
    corresponding bit in the GMX_RX_INT_EN register is set.

(2) exception conditions 10:0 can also set the rcv/opcode in the received
    packet's workQ entry.  The GMX_RX_FRM_CHK register provides a bit mask
    for configuring which conditions set the error.

(3) in half duplex operation, the expectation is that collisions will appear
    as either MINERR o r CAREXT errors.

(4) JABBER - An RX Jabber error indicates that a packet was received which
             is longer than the maximum allowed packet as defined by the
             system.  GMX will truncate the packet at the JABBER count.
             Failure to do so could lead to system instabilty.

(5) NIBERR - This error is illegal at 1000Mbs speeds
             (GMX_RX_PRT_CFG[SPEED]==0) and will never assert.
 
(6) MAXERR - for untagged frames, the total frame DA+SA+TL+DATA+PAD+FCS >
             GMX_RX_FRM_MAX.  For tagged frames, DA+SA+VLAN+TL+DATA+PAD+FCS
             > GMX_RX_FRM_MAX + 4*VLAN_VAL + 4*VLAN_STACKED.

(7) MINERR - total frame DA+SA+TL+DATA+PAD+FCS < GMX_RX_FRM_MIN.

(8) ALNERR - Indicates that the packet received was not an integer number of
             bytes.  If FCS checking is enabled, ALNERR will only assert if
             the FCS is bad.  If FCS checking is disabled, ALNERR will
             assert in all non-integer frame cases.

(9) Collisions - Collisions can only occur in half-duplex mode.  A collision
                 is assumed by the receiver when the slottime
                 (GMX_PRT_CFG[SLOTTIME]) is not satisfied.  In 10/100 mode,
                 this will result in a frame < SLOTTIME.  In 1000 mode, it
                 could result either in frame < SLOTTIME or a carrier extend
                 error with the SLOTTIME.  These conditions are visible by...

                 . transfer ended before slottime - COLDET
                 . carrier extend error           - CAREXT 

(A) LENERR - Length errors occur when the received packet does not match the
             length field.  LENERR is only checked for packets between 64
             and 1500 bytes.  For untagged frames, the length must exact
             match.  For tagged frames the length or length+4 must match.

(B) PCTERR - checks that the frame transtions from PREAMBLE=>SFD=>DATA.
             Does not check the number of PREAMBLE cycles.

(C) OVRERR - Not to be included in the HRM

             OVRERR is an architectural assertion check internal to GMX to
             make sure no assumption was violated.  In a correctly operating
             system, this interrupt can never fire.

             GMX has an internal arbiter which selects which of 4 ports to
             buffer in the main RX FIFO.  If we normally buffer 8 bytes,
             then each port will typically push a tick every 8 cycles - if
             the packet interface is going as fast as possible.  If there
             are four ports, they push every two cycles.  So that's the
             assumption.  That the inbound module will always be able to
             consume the tick before another is produced.  If that doesn't
             happen - that's when OVRERR will assert.

(D) In XAUI mode prt0 is used for interrupt logging.
----------------------------------------------------------------------------------------------------
===

 * 
 * GMX_RX_INT_EN = Interrupt Enable
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:27> RSVRD     RAZ      NS          NS        Reserved                                          |   
<26>    UNDAT     R/W     0x0         0         Unexpected Data                                    |   
                                                  (XAUI Mode only)                                  |
<25>    UNEOP     R/W     0x0         0         Unexpected EOP                                     |   
                                                  (XAUI Mode only)                                  |
<24>    UNSOP     R/W     0x0         0         Unexpected SOP                                     |   
                                                  (XAUI Mode only)                                  |
<23>    BAD_TERM  R/W     0x0         0         Frame is terminated by control character other     |   
                                                  than /T/.  The error propagation control          |
                                                  character /E/ will be included as part of the     |
                                                  frame and does not cause a frame termination.     |
                                                  (XAUI Mode only)                                  |
<22>    BAD_SEQ   R/W     0x0         0         Reserved Sequence Deteted                          |   
                                                  (XAUI Mode only)                                  |
<21>    REM_FAULT R/W     0x0         0         Remote Fault Sequence Deteted                      |   
                                                  (XAUI Mode only)                                  |
<20>    LOC_FAULT R/W     0x0         0         Local Fault Sequence Deteted                       |   
                                                  (XAUI Mode only)                                  |
<19>    PAUSE_DRP R/W     0x0         0         Pause packet was dropped due to full GMX RX FIFO   |   
<18:16> RSVRD     RAZ     NS          NS        Reserved                                           |   
<15>    IFGERR   R/W      0x0         0         Interframe Gap Violation                           |   
                                                  (SGMII/1000Base-X only)                           |
<14>    COLDET   R/W      0x0         0         Collision Detection                                |   
                                                  (SGMII/1000Base-X half-duplex only)               |
<13>    FALERR   R/W      0x0         0         False carrier error or extend error after slottime |   
                                                  (SGMII/1000Base-X only)                           |
<12>    RSVERR   R/W      0x0         0         Reserved opcodes                                   |   
<11>    PCTERR   R/W      0x0         0         Bad Preamble / Protocol                            |   
<10>    OVRERR   R/W      0x0         0         Internal Data Aggregation Overflow                 |   
                                                  (SGMII/1000Base-X only)                           |
<9>     RSVRD     RAZ     NS          NS        Reserved                                           |   
<8>     SKPERR   R/W      0x0         0         Skipper error                                      |   
<7>     RCVERR   R/W      0x0         0         Frame was received with Data reception error       |   
<6:5>   RSVRD    RAZ      NS          NS        Reserved                                           |   
<4>     FCSERR   R/W      0x0         0         Frame was received with FCS/CRC error              |   
<3>     JABBER   R/W      0x0         0         Frame was received with length > sys_length        |   
<2>     RSVRD    RAZ      NS          NS        Reserved                                           |   
<1>     CAREXT   R/W      0x0         0         Carrier extend error                               |   
                                                  (SGMII/1000Base-X only)                           |
<0>     RSVRD    RAZ      NS          NS        Reserved                                           |   

Notes:
In XAUI mode prt0 is used for checking.
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_PRT_CFG = Port description
 *

     ==============================================================
     GMX(0..1)_PRT(0..3)_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:14> RSVRD    RAZ      NS          NS        Reserved                                           |   
<13>   TX_IDLE   RO       0x1         NS        TX Machine is idle                                 |   
<12>   RX_IDLE   RO       0x1         NS        RX Machine is idle                                 |   
<11:9> RSVRD     RAZ      NS          NS        Reserved                                           |   
<8>    SPEED_MSB R/W      0x0         NS        Link Speed MSB [SPEED_MSB:SPEED]                   |   
                                                  10 = 10Mbs operation                              |
                                                  00 = 100Mbs operation                             |
                                                  01 = 1000Mbs operation                            |
                                                  11 = Reserved                                     |
                                                  (SGMII/1000Base-X only)                           |
<7:4>  RSVRD     RAZ      NS          NS        Reserved                                           |   
<3>    SLOTTIME  R/W      0x1         NS        Slot Time for Half-Duplex operation                |   
                                                  0 = 512 bitimes (10/100Mbs operation)             |
                                                  1 = 4096 bitimes (1000Mbs operation)              |
                                                  (SGMII/1000Base-X only)                           |
<2>    DUPLEX    R/W      0x1         NS        Duplex                                             |   
                                                  0 = Half Duplex (collisions/extentions/bursts)    |
                                                  1 = Full Duplex                                   |
                                                  (SGMII/1000Base-X only)                           |
<1>    SPEED     R/W      0x1         NS        Link Speed LSB [SPEED_MSB:SPEED]                   |   
                                                  10 = 10Mbs operation                              |
                                                  00 = 100Mbs operation                             |
                                                  01 = 1000Mbs operation                            |
                                                  11 = Reserved                                     |
                                                  (SGMII/1000Base-X only)                           |
<0>    EN        R/W      0x0         NS        Link Enable                                        |   
                                                  When EN is clear, packets will not be received    |
                                                  or transmitted (including PAUSE and JAM packets). |
                                                  If EN is cleared while a packet is currently      |
                                                  being received or transmitted, the packet will    |
                                                  be allowed to complete before the bus is idled.   |
                                                  On the RX side, subsequent packets in a burst     |
                                                  will be ignored.                                  |
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_FRM_CTL = Frame Control
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_FRM_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:10> RSVRD    RAZ      NS          NS        Reserved                                           |   
<9>     PRE_ALIGN R/W     0x0         0         When set, PREAMBLE parser aligns the the SFD byte  |   
                                                  regardless of the number of previous PREAMBLE     |
                                                  nibbles.  In this mode, PRE_STRP should be set to |
                                                  account for the variable nature of the PREAMBLE.  |
                                                  PRE_CHK must be set to enable this and all        |
                                                  PREAMBLE features.                                |
                                                  (SGMII at 10/100Mbs only)                         |
<8>     RSVRD    RAZ      NS          NS        Reserved                                           |   
<7>     RSVRD    RAZ      NS          NS        Reserved                                           |   
<6>     PRE_FREE RO       0x1         1         When set, PREAMBLE checking is  less strict.       |   
                                                  0 - 254 cycles of PREAMBLE followed by SFD        |
                                                  PRE_CHK must be set to enable this and all        |
                                                  PREAMBLE features.                                |
                                                  (SGMII/1000Base-X only)                           |
<5>     CTL_SMAC R/W      0x0         0         Control Pause Frames can match station SMAC        |   
<4>     CTL_MCST R/W      0x1         1         Control Pause Frames can match globally assign     |   
                                                  Multicast address                                 |
<3>     CTL_BCK  R/W      0x1         1         Forward pause information to TX block              |   
<2>     CTL_DRP  R/W      0x1         1         Drop Control Pause Frames                          |   
<1>     PRE_STRP R/W      0x1         1         Strip off the preamble (when present)              |   
                                                  0=PREAMBLE+SFD is sent to core as part of frame   |
                                                  1=PREAMBLE+SFD is dropped                         |
                                                  PRE_CHK must be set to enable this and all        |
                                                  PREAMBLE features.                                |
<0>     PRE_CHK  R/W      0x1         1         This port is configured to send PREAMBLE+SFD       |   
                                                  to begin every frame.  GMX checks that the        |
                                                  PREAMBLE is sent correctly.                       |
                                                  When GMX_TX_XAUI_CTL[HG_EN] is set, PRE_CHK       |
                                                  must be zero.                                     |

Notes:
* PRE_CHK
  When set, the RX state expects a typical frame consisting of
  INTER_FRAME=>PREAMBLE(x7)=>SFD(x1)=>DAT.  The state machine watches for
  this exact sequence in order to recognize a valid frame and push frame
  data into the Octane.  There must be exactly 7 PREAMBLE cycles followed by
  the single SFD cycle for the frame to be accepted.

  When a problem does occur within the PREAMBLE seqeunce, the frame is
  marked as bad and not sent into the core.  The GMX_RX_INT_REG[PCTERR]
  interrupt is also raised.

* PRE_STRP
  When PRE_CHK is set (indicating that the PREAMBLE will be sent), PRE_STRP
  determines if the PREAMBLE+SFD bytes are thrown away or sent to the Octane
  core as part of the packet.

  In either mode, the PREAMBLE+SFD bytes are not counted toward the packet
  size when checking against the MIN and MAX bounds.  Furthermore, the bytes
  are skipped when locating the start of the L2 header for DMAC and Control
  frame recognition.

* CTL_BCK/CTL_DRP
  These bits control how the HW handles incoming PAUSE packets.  Here are
  the most common modes of operation:
    CTL_BCK=1,CTL_DRP=1   - HW does it all
    CTL_BCK=0,CTL_DRP=0   - SW sees all pause frames
    CTL_BCK=0,CTL_DRP=1   - all pause frames are completely ignored

  These control bits should be set to CTL_BCK=0,CTL_DRP=0 in halfdup mode.
  Since PAUSE packets only apply to fulldup operation, any PAUSE packet
  would constitute an exception which should be handled by the processing
  cores.  PAUSE packets should not be forwarded.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_FRM_CHK = Which frame errors will set the ERR bit of the frame
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_FRM_CHK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:9>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<8>     SKPERR   R/W      0x1         1         Skipper error                                      |   
<7>     RCVERR   R/W      0x1         1         Frame was received with Data reception error       |   
<6:5>   RSVRD    RAZ      NS          NS        Reserved                                           |   
<4>     FCSERR   R/W      0x1         1         Frame was received with FCS/CRC error              |   
<3>     JABBER   R/W      0x1         1         Frame was received with length > sys_length        |   
<2>     RSVRD    RAZ      NS          NS        Reserved                                           |   
<1>     CAREXT   R/W      0x1         1         Carrier extend error                               |   
                                                  (SGMII/1000Base-X only)                           |
<0>     RSVRD    RAZ      NS          NS        Reserved                                           |   

Notes:
If GMX_RX_UDD_SKP[LEN] != 0, then LENERR will be forced to zero in HW.

In XAUI mode prt0 is used for checking.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_JABBER = The max size packet after which GMX will truncate
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_JABBER Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVRD    RAZ      NS          NS        Reserved                                           |   
<15:0>  CNT      R/W      0x2800      0x2800    Byte count for jabber check                        |   
                                                  Failing packets set the JABBER interrupt and are  |
                                                  optionally sent with opcode==JABBER               |
                                                  GMX will truncate the packet to CNT bytes         |

Notes: 

  CNT must be 8-byte aligned such that CNT[2:0] == 0

  The packet that will be sent to the packet input logic will have an
  additionl 8 bytes if GMX_RX_FRM_CTL[PRE_CHK] is set and
  GMX_RX_FRM_CTL[PRE_STRP] is clear.  The max packet that will be sent is
  defined as...

       max_sized_packet = GMX_RX_JABBER[CNT]+((GMX_RX_FRM_CTL[PRE_CHK] & !GMX_RX_FRM_CTL[PRE_STRP])*8)

  In XAUI mode prt0 is used for checking.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_DECISION = The byte count to decide when to accept or filter a packet
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_DECISION Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:5>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<4:0>   CNT      R/W      0x18        0x18      The byte count to decide when to accept or filter  |   
                                                   a packet.                                        |

Notes:
As each byte in a packet is received by GMX, the L2 byte count is compared
against the GMX_RX_DECISION[CNT].  The L2 byte count is the number of bytes
from the beginning of the L2 header (DMAC).  In normal operation, the L2
header begins after the PREAMBLE+SFD (GMX_RX_FRM_CTL[PRE_CHK]=1) and any
optional UDD skip data (GMX_RX_UDD_SKP[LEN]).

When GMX_RX_FRM_CTL[PRE_CHK] is clear, PREAMBLE+SFD are prepended to the
packet and would require UDD skip length to account for them.

                                                L2 Size
Port Mode             <GMX_RX_DECISION bytes (default=24)       >=GMX_RX_DECISION bytes (default=24)

Full Duplex           accept packet                             apply filters
                      no filtering is applied                   accept packet based on DMAC and PAUSE packet filters

Half Duplex           drop packet                               apply filters
                      packet is unconditionally dropped         accept packet based on DMAC

where l2_size = MAX(0, total_packet_size - GMX_RX_UDD_SKP[LEN] - ((GMX_RX_FRM_CTL[PRE_CHK]==1)*8)
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_UDD_SKP = Amount of User-defined data before the start of the L2 data
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_UDD_SKP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:9> RSVRD     RAZ      NS          NS        Reserved                                           |   
<8>    FCSSEL    R/W      0x0         0         Include the skip bytes in the FCS calculation      |   
                                                  0 = all skip bytes are included in FCS            |
                                                  1 = the skip bytes are not included in FCS        |
                                                  When GMX_TX_XAUI_CTL[HG_EN] is set, FCSSEL must   |
                                                  be zero.                                          |
<7>    RSVRD     RAZ      NS          NS        Reserved                                           |   
<6:0>  LEN       R/W      0x0         0         Amount of User-defined data before the start of    |   
                                                  the L2 data.  Zero means L2 comes first.          |
                                                  Max value is 64.                                  |
                                                  When GMX_TX_XAUI_CTL[HG_EN] is set, LEN must be   |
                                                  set to 12 or 16 (depending on HiGig header size)  |
                                                  to account for the HiGig header. LEN=12 selects   |
                                                  HiGig/HiGig+, and LEN=16 selects HiGig2.          |
Notes:

(1) The skip bytes are part of the packet and will be sent down the NCB
    packet interface and will be handled by PKI.

(2) The system can determine if the UDD bytes are included in the FCS check
    by using the FCSSEL field - if the FCS check is enabled.

(3) Assume that the preamble/sfd is always at the start of the frame - even
    before UDD bytes.  In most cases, there will be no preamble in these
    cases since it will be packet interface in direct communication to
    another packet interface (MAC to MAC) without a PHY involved.

(4) We can still do address filtering and control packet filtering is the
    user desires.
 
(5) UDD_SKP must be 0 in half-duplex operation unless
    GMX_RX_FRM_CTL[PRE_CHK] is clear.  If GMX_RX_FRM_CTL[PRE_CHK] is clear,
    then UDD_SKP will normally be 8.

(6) In all cases, the UDD bytes will be sent down the packet interface as
    part of the packet.  The UDD bytes are never stripped from the actual
    packet.

(7) If LEN != 0, then GMX_RX_FRM_CHK[LENERR] will be disabled and GMX_RX_INT_REG[LENERR] will be zero
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_STATS_CTL = RX Stats Control register
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_STATS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1> RSVRD     RAZ      NS          NS        Reserved                                           |   
<0>    RD_CLR    R/W      0x0         0         RX Stats registers will clear on reads             |   
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_IFG = RX Min IFG
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_IFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>  RSVRD     RAZ      NS         NS        Reserved                                           |   
<3:0>   IFG       R/W      0x8        8         Min IFG (in IFG*8 bits) between packets used to    |   
                                                  determine IFGERR. Normally IFG is 96 bits.        | 
                                                  Note in SGMII mode, IFG cycles can be inserted or |
                                                  removed in order to achieve clock rate            |
                                                  adaptation. For these reasons, the default value  |
                                                  is slightly conservative and does not check upto  |
                                                  the full 96 bits of IFG.                          |
                                                  (SGMII/1000Base-X only)                           |                                             
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_PAUSE_DROP_TIME = The TIME field in a PAUSE Packet which was dropped due to GMX RX FIFO full condition
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_PAUSE_DROP_TIME Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16>  RSVRD     RAZ     NS          NS        Reserved                                          |   
<15:0>   STATUS    R/W1C   0x0         NS        Time extracted from the dropped PAUSE packet      |   
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_STATS_PKTS
 *
 * Count of good received packets - packets that are not recognized as PAUSE
 * packets, dropped due the DMAC filter, dropped due FIFO full status, or
 * have any other OPCODE (FCS, Length, etc).
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_STATS_PKTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVRD    RAZ      NS          NS        Reserved                                           |   
<31:0>  CNT      RC/W     0x0         NS        Count of received good packets                     |   

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     GMX(0..1)_RX(0..3)_STATS_OCTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> RSVRD    RAZ      NS          NS        Reserved                                           |   
<47:0>  CNT      RC/W    0x0         NS        Octet count of received good packets               |   

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_RX_STATS_PKTS_CTL
 *
 * Count of all packets received that were recognized as Flow Control or
 * PAUSE packets.  PAUSE packets with any kind of error are counted in
 * GMX_RX_STATS_PKTS_BAD.  Pause packets can be optionally dropped or
 * forwarded based on the GMX_RX_FRM_CTL[CTL_DRP] bit.  This count
 * increments regardless of whether the packet is dropped.  Pause packets
 * will never be counted in GMX_RX_STATS_PKTS.  Packets dropped due the dmac
 * filter will be counted in GMX_RX_STATS_PKTS_DMAC and not here.
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_STATS_PKTS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVRD    RAZ      NS          NS        Reserved                                           |   
<31:0>  CNT      RC/W    0x0         NS        Count of received pause packets                    |   

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     GMX(0..1)_RX(0..3)_STATS_OCTS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> RSVRD    RAZ      NS          NS        Reserved                                           |   
<47:0>  CNT      RC/W    0x0         NS        Octet count of received pause packets              |   

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_RX_STATS_PKTS_DMAC
 *
 * Count of all packets received that were dropped by the dmac filter.
 * Packets that match the DMAC will be dropped and counted here regardless
 * of if they were bad packets.  These packets will never be counted in
 * GMX_RX_STATS_PKTS.
 *
 * Some packets that were not able to satisify the DECISION_CNT may not
 * actually be dropped by Octeon, but they will be counted here as if they
 * were dropped.
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_STATS_PKTS_DMAC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVRD    RAZ      NS          NS        Reserved                                           |   
<31:0>  CNT      RC/W    0x0         NS        Count of filtered dmac packets                     |   

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     GMX(0..1)_RX(0..3)_STATS_OCTS_DMAC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> RSVRD    RAZ      NS          NS        Reserved                                           |   
<47:0>  CNT      RC/W    0x0         NS        Octet count of filtered dmac packets               |   

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_RX_STATS_PKTS_DRP
 *
 * Count of all packets received that were dropped due to a full receive
 * FIFO.  This counts good and bad packets received - all packets dropped by
 * the FIFO.  It does not count packets dropped by the dmac or pause packet
 * filters.
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_STATS_PKTS_DRP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVRD    RAZ      NS          NS        Reserved                                           |   
<31:0>  CNT      RC/W    0x0         NS        Count of dropped packets                           |   

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     GMX(0..1)_RX(0..3)_STATS_OCTS_DRP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> RSVRD    RAZ      NS          NS        Reserved                                           |   
<47:0>  CNT      RC/W    0x0         NS        Octet count of dropped packets                     |   

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_RX_STATS_PKTS_BAD
 *
 * Count of all packets received with some error that were not dropped
 * either due to the dmac filter or lack of room in the receive FIFO.
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_STATS_PKTS_BAD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVRD    RAZ      NS          NS        Reserved                                           |   
<31:0>  CNT      RC/W    0x0         NS        Count of bad packets                               |   

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_ADR_CTL = Address Filtering Control
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_ADR_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<3>     CAM_MODE R/W      0x0         NS        Allow or deny DMAC address filter                  |   
                                                  0 = reject the packet on DMAC address match       |
                                                  1 = accept the packet on DMAC address match       |
<2:1>   MCST     R/W      0x0         NS        Multicast Mode                                     |   
                                                  0 = Use the Address Filter CAM                    |
                                                  1 = Force reject all multicast packets            |
                                                  2 = Force accept all multicast packets            |
                                                  3 = Reserved                                      |
<0>     BCST     R/W      0x1         NS        Accept All Broadcast Packets                       |   

Notes:
* ALGORITHM
  Here is some pseudo code that represents the address filter behavior.

     @verbatim
     bool dmac_addr_filter(uint8 prt, uint48 dmac) {
       ASSERT(prt >= 0 && prt <= 3);
       if (is_bcst(dmac))                               // broadcast accept
         return (GMX_RX{prt}_ADR_CTL[BCST] ? ACCEPT : REJECT);
       if (is_mcst(dmac) & GMX_RX{prt}_ADR_CTL[MCST] == 1)   // multicast reject
         return REJECT;
       if (is_mcst(dmac) & GMX_RX{prt}_ADR_CTL[MCST] == 2)   // multicast accept
         return ACCEPT;

       cam_hit = 0;
     
       for (i=0; i<8; i++) {
         if (GMX_RX{prt}_ADR_CAM_EN[EN<i>] == 0)
           continue;
         uint48 unswizzled_mac_adr = 0x0;
         for (j=5; j>=0; j--) {
            unswizzled_mac_adr = (unswizzled_mac_adr << 8) | GMX_RX{prt}_ADR_CAM{j}[ADR<i*8+7:i*8>];
         }
         if (unswizzled_mac_adr == dmac) {
           cam_hit = 1;
           break;
         }
       }
     
       if (cam_hit)
         return (GMX_RX{prt}_ADR_CTL[CAM_MODE] ? ACCEPT : REJECT);
       else
         return (GMX_RX{prt}_ADR_CTL[CAM_MODE] ? REJECT : ACCEPT);
     }
     @endverbatim
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_ADR_CAM_EN = Address Filtering Control Enable
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_ADR_CAM_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<7:0>   EN       R/W      0x0         NS        CAM Entry Enables                                  |   
----------------------------------------------------------------------------------------------------
===

 
 *
 * GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_ADR_CAM0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ADR      R/W      0x0         NS        The DMAC address to match on                       |   
                                                  Each entry contributes 8bits to one of 8 matchers |
                                                  Write transactions to GMX_RX_ADR_CAM will not     |
                                                  change the CSR when GMX_PRT_CFG[EN] is enabled    |
                                                  The CAM matches against unicst or multicst DMAC   |
                                                  addresses.                                        |
                                                  In XAUI mode, all ports will reflect the data     |
                                                  written to port0.                                 |
----------------------------------------------------------------------------------------------------
===


 
 *
 * GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_ADR_CAM1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ADR      R/W      0x0         NS        The DMAC address to match on                       |   
                                                  Each entry contributes 8bits to one of 8 matchers |
                                                  Write transactions to GMX_RX_ADR_CAM will not     |
                                                  change the CSR when GMX_PRT_CFG[EN] is enabled    |
                                                  The CAM matches against unicst or multicst DMAC   |
                                                  addresses.                                        |
                                                  In XAUI mode, all ports will reflect the data     |
                                                  written to port0.                                 |
----------------------------------------------------------------------------------------------------
===


 
 *
 * GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_ADR_CAM2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ADR      R/W      0x0         NS        The DMAC address to match on                       |   
                                                  Each entry contributes 8bits to one of 8 matchers |
                                                  Write transactions to GMX_RX_ADR_CAM will not     |
                                                  change the CSR when GMX_PRT_CFG[EN] is enabled    |
                                                  The CAM matches against unicst or multicst DMAC   |
                                                  addresses.                                        |
                                                  In XAUI mode, all ports will reflect the data     |
                                                  written to port0.                                 |
----------------------------------------------------------------------------------------------------
===


 
 *
 * GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_ADR_CAM3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ADR      R/W      0x0         NS        The DMAC address to match on                       |   
                                                  Each entry contributes 8bits to one of 8 matchers |
                                                  Write transactions to GMX_RX_ADR_CAM will not     |
                                                  change the CSR when GMX_PRT_CFG[EN] is enabled    |
                                                  The CAM matches against unicst or multicst DMAC   |
                                                  addresses.                                        |
                                                  In XAUI mode, all ports will reflect the data     |
                                                  written to port0.                                 |
----------------------------------------------------------------------------------------------------
===


 
 *
 * GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_ADR_CAM4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ADR      R/W      0x0         NS        The DMAC address to match on                       |   
                                                  Each entry contributes 8bits to one of 8 matchers |
                                                  Write transactions to GMX_RX_ADR_CAM will not     |
                                                  change the CSR when GMX_PRT_CFG[EN] is enabled    |
                                                  The CAM matches against unicst or multicst DMAC   |
                                                  addresses.                                        |
                                                  In XAUI mode, all ports will reflect the data     |
                                                  written to port0.                                 |
----------------------------------------------------------------------------------------------------
===


 
 *
 * GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     GMX(0..1)_RX(0..3)_ADR_CAM5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ADR      R/W      0x0         NS        The DMAC address to match on                       |   
                                                  Each entry contributes 8bits to one of 8 matchers |
                                                  Write transactions to GMX_RX_ADR_CAM will not     |
                                                  change the CSR when GMX_PRT_CFG[EN] is enabled    |
                                                  The CAM matches against unicst or multicst DMAC   |
                                                  addresses.                                        |
                                                  In XAUI mode, all ports will reflect the data     |
                                                  written to port0.                                 |
----------------------------------------------------------------------------------------------------
===



 *
 * GMX_BIST = GMX BIST Results
 *

     ==============================================================
     GMX(0..1)_BIST Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVRD    RAZ      NS          NS        Reserved                                           |   
<15:0>  STATUS   RO       0x0         0         BIST Results.                                      |   
                                                  HW sets a bit in BIST for for memory that fails   |
                                                   0: gmx#.inb.fif_bnk0                             |
                                                   1: gmx#.inb.fif_bnk1                             |
                                                   2: gmx#.inb.fif_bnk2                             |
                                                   3: gmx#.inb.fif_bnk3                             |
                                                   4: gmx#.outb.fif.fif_bnk0                        |
                                                   5: gmx#.outb.fif.fif_bnk1                        |
                                                   6: gmx#.outb.fif.fif_bnk2                        |
                                                   7: gmx#.outb.fif.fif_bnk3                        |
                                                   8: gmx#.csr.gmi0.srf8x64m1_bist                  |
                                                   9: gmx#.csr.gmi1.srf8x64m1_bist                  |
                                                  10: gmx#.csr.gmi2.srf8x64m1_bist                  |
                                                  11: gmx#.csr.gmi3.srf8x64m1_bist                  |
                                                  12: gmx#.csr.drf20x80m1_bist                      |
                                                  13: gmx#.outb.stat.drf16x27m1_bist                |
                                                  14: gmx#.outb.stat.drf40x64m1_bist                |
                                                  15: xgmii.tx.drf16x38m1_async_bist                |
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_PRTS = Number of FIFOs to carve the RX buffer into
 *

     ==============================================================
     GMX(0..1)_RX_PRTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:3>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<2:0>   PRTS     R/W      0x4         4         In SGMII/1000Base-X mode, the RX buffer can be     |   
                                                  carved into several logical buffers depending on  |
                                                  the number or implemented ports.                  |
                                                  0 or 1 port  = 512ticks / 4096bytes               |
                                                  2 ports      = 256ticks / 2048bytes               |
                                                  3 or 4 ports = 128ticks / 1024bytes               |
Notes:
GMX_RX_PRTS[PRTS] must be set to '1' in XAUI mode.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_BP_DROP = FIFO mark for packet drop
 *

     ==============================================================
     GMX(0..1)_RX_BP_DROP(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:6> RSVRD    RAZ      NS          NS        Reserved                                            |   
<5:0>  MARK     R/W      2           2         Number of 8B ticks to reserve in the RX FIFO.       |   
                                                 When the FIFO exceeds this count, packets will     |
                                                 be dropped and not buffered.                       |
                                                 MARK should typically be programmed to ports+1.    |
                                                 Failure to program correctly can lead to system    |
                                                 instability.                                       |

Notes:
The actual watermark is dynamic with respect to the GMX_RX_PRTS
register.  The GMX_RX_PRTS controls the depth of the port's
FIFO so as ports are added or removed, the drop point may change.

In XAUI mode prt0 is used for checking.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_BP_ON = Hiwater mark for port/interface backpressure
 *

     ==============================================================
     GMX(0..1)_RX_BP_ON(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:9>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<8:0>   MARK     R/W      0x40        0x40      Hiwater mark (8B ticks) for backpressure.          |   
                                                  Each register is for an individual port.  In XAUI |
                                                  mode, prt0 is used for the unified RX FIFO        |
                                                  GMX_RX_BP_ON must satisfy                         |
                                                  BP_OFF <= BP_ON < (FIFO_SIZE - BP_DROP)           |
                                                  A value of zero will immediately assert back      |
                                                  pressure.                                         |

Notes:
In XAUI mode, prt0 is used for checking.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_BP_OFF = Lowater mark for packet drop
 *

     ==============================================================
     GMX(0..1)_RX_BP_OFF(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:6>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<5:0>   MARK     R/W      0x10        0x10      Water mark (8B ticks) to deassert backpressure     |   

Notes:
In XAUI mode, prt0 is used for checking.
----------------------------------------------------------------------------------------------------
===


 *
 * Per Port
 *

 *
 * GMX_TX_THRESH = Packet TX Threshold
 *

     ==============================================================
     GMX(0..1)_TX(0..3)_THRESH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:9>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<8:0>   CNT      R/W      0x20        0x20      Number of 16B ticks to accumulate in the TX FIFO   |   
                                                  before sending on the packet interface            |
                                                  This register should be large enough to prevent   |
                                                  underflow on the packet interface and must never  |
                                                  be set to zero.  This register cannot exceed the  |
                                                  the TX FIFO depth which is...                     |
                                                   GMX_TX_PRTS==0,1:  CNT MAX = 0x100               |
                                                   GMX_TX_PRTS==2  :  CNT MAX = 0x080               |
                                                   GMX_TX_PRTS==3,4:  CNT MAX = 0x040               |

Notes:
In XAUI mode, prt0 is used for checking.  Since XAUI mode uses a single TX FIFO and is higher data rate, recommended value is 0x100.
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_APPEND = Packet TX Append Control
 *

     ==============================================================
     GMX(0..1)_TX(0..3)_APPEND Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<3>     FORCE_FCS R/W     0x1         0x1       Append the Ethernet FCS on each pause packet       |   
                                                  when FCS is clear.  Pause packets are normally    |
                                                  padded to 60 bytes.  If GMX_TX_MIN_PKT[MIN_SIZE]  |
                                                  exceeds 59, then FORCE_FCS will not be used.      |
<2>     FCS      R/W      0x1         0x1       Append the Ethernet FCS on each packet             |   
<1>     PAD      R/W      0x1         0x1       Append PAD bytes such that min sized               |   
<0>     PREAMBLE R/W      0x1         0x1       Prepend the Ethernet preamble on each transfer     |   
                                                  When GMX_TX_XAUI_CTL[HG_EN] is set, PREAMBLE      |
                                                  must be zero.                                     |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_SLOT = Packet TX Slottime Counter
 *

     ==============================================================
     GMX(0..1)_TX(0..3)_SLOT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:10> RSVRD    RAZ      NS          NS        Reserved                                           |   
<9:0>   SLOT     R/W      0x200       0x200     Slottime (refer to 802.3 to set correctly)         |   
                                                  10/100Mbs: 0x40                                   |
                                                  1000Mbs:   0x200                                  |
                                                  (SGMII/1000Base-X only)                           |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_BURST = Packet TX Burst Counter
 *

     ==============================================================
     GMX(0..1)_TX(0..3)_BURST Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVRD    RAZ      NS          NS        Reserved                                           |   
<15:0>  BURST    R/W      0x2000      0x2000    Burst (refer to 802.3 to set correctly)            |   
                                                  Only valid for 1000Mbs half-duplex operation      |
                                                   halfdup / 1000Mbs: 0x2000                        |
                                                   all other modes:   0x0                           |
                                                  (SGMII/1000Base-X only)                           |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_SMAC = Packet SMAC
 *

     ==============================================================
     GMX(0..1)_SMAC(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> RSVRD    RAZ      NS          NS        Reserved                                           |   
<47:0>  SMAC     R/W      0x0         NS        The SMAC field is used for generating and          |   
                                                  accepting Control Pause packets                   |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_PAUSE_PKT_TIME = Packet TX Pause Packet pause_time field
 *

     ==============================================================
     GMX(0..1)_TX(0..3)_PAUSE_PKT_TIME Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVRD    RAZ      NS          NS        Reserved                                           |   
<15:0>  TIME     R/W      0x60        NS        The pause_time field placed is outbnd pause pkts   |   
                                                  pause_time is in 512 bit-times                    |
                                                  Normally, TIME > GMX_TX_PAUSE_PKT_INTERVAL        |

Notes:
Choosing proper values of GMX_TX_PAUSE_PKT_TIME[TIME] and
GMX_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
designer.  It is suggested that TIME be much greater than INTERVAL and
GMX_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
count and then when the backpressure condition is lifted, a PAUSE packet
with TIME==0 will be sent indicating that Octane is ready for additional
data.

If the system chooses to not set GMX_TX_PAUSE_ZERO[SEND], then it is
suggested that TIME and INTERVAL are programmed such that they satisify the
following rule...

   INTERVAL <= TIME - (largest_pkt_size + IFG + pause_pkt_size)

where largest_pkt_size is that largest packet that the system can send
(normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
of the PAUSE packet (normally 64B).
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_MIN_PKT = Packet TX Min Size Packet (PAD upto min size)
 *

     ==============================================================
     GMX(0..1)_TX(0..3)_MIN_PKT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<7:0>   MIN_SIZE R/W      0x3b        59        Min frame in bytes before the FCS is applied       |   
                                                  Padding is only appened when GMX_TX_APPEND[PAD]   |
                                                  for the coresponding port is set.                 |
                                                  In SGMII mode, packets will be padded to          |
                                                   MIN_SIZE+1. The reset value will pad to 60 bytes.|
                                                  In XAUI mode, packets will be padded to           |
                                                   MIN(252,(MIN_SIZE+1 & ~0x3))                     |
                                                  When GMX_TX_XAUI_CTL[HG_EN] is set, the HiGig     |
                                                   header (12B or 16B) is normally added to the     |
                                                   packet, so MIN_SIZE should be 59+12=71B for      |
                                                   HiGig or 59+16=75B for HiGig2.                   |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_PAUSE_PKT_INTERVAL = Packet TX Pause Packet transmission interval - how often PAUSE packets will be sent
 *

     ==============================================================
     GMX(0..1)_TX(0..3)_PAUSE_PKT_INTERVAL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVRD    RAZ      NS          NS        Reserved                                           |   
<15:0>  INTERVAL R/W      0x10        NS        Arbitrate for a pause packet every (INTERVAL*512)  |   
                                                  bit-times.                                        |
                                                  Normally, 0 < INTERVAL < GMX_TX_PAUSE_PKT_TIME    |
                                                  INTERVAL=0, will only send a single PAUSE packet  |
                                                  for each backpressure event                       |

Notes:
Choosing proper values of GMX_TX_PAUSE_PKT_TIME[TIME] and
GMX_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
designer.  It is suggested that TIME be much greater than INTERVAL and
GMX_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
count and then when the backpressure condition is lifted, a PAUSE packet
with TIME==0 will be sent indicating that Octane is ready for additional
data.

If the system chooses to not set GMX_TX_PAUSE_ZERO[SEND], then it is
suggested that TIME and INTERVAL are programmed such that they satisify the
following rule...

   INTERVAL <= TIME - (largest_pkt_size + IFG + pause_pkt_size)

where largest_pkt_size is that largest packet that the system can send
(normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
of the PAUSE packet (normally 64B).
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_SOFT_PAUSE = Packet TX Software Pause
 *

     ==============================================================
     GMX(0..1)_TX(0..3)_SOFT_PAUSE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVRD    RAZ      NS          NS        Reserved                                           |   
<15:0>  TIME     R/W      0x0         NS        Back off the TX bus for (TIME*512) bit-times       |   
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_PAUSE_TOGO = Packet TX Amount of time remaining to backpressure
 *

     ==============================================================
     GMX(0..1)_TX(0..3)_PAUSE_TOGO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVRD    RAZ      NS          NS        Reserved                                           |   
<15:0>  TIME     RO       NS          NS        Amount of time remaining to backpressure           |   
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_PAUSE_ZERO = Packet TX Amount of time remaining to backpressure
 *

     ==============================================================
     GMX(0..1)_TX(0..3)_PAUSE_ZERO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<0>     SEND     R/W      1           1         When backpressure condition clear, send PAUSE      |   
                                                  packet with pause_time of zero to enable the      |
                                                  channel                                           |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_STATS_CTL = TX Stats Control register
 *

     ==============================================================
     GMX(0..1)_TX(0..3)_STATS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1> RSVRD     RAZ      NS          NS        Reserved                                           |   
<0>    RD_CLR    R/W      0x0         0         Stats registers will clear on reads                |   
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_TX_CTL = TX Control register
 *

     ==============================================================
     GMX(0..1)_TX(0..3)_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2> RSVRD     RAZ      NS          NS        Reserved                                           |   
<1>    XSDEF_EN  R/W      0x1         1         Enables the excessive deferral check for stats     |   
                                                  and interrupts                                    |
                                                  (SGMII/1000Base-X half-duplex only)               |
<0>    XSCOL_EN  R/W      0x1         1         Enables the excessive collision check for stats    |   
                                                  and interrupts                                    |
                                                  (SGMII/1000Base-X half-duplex only)               |
----------------------------------------------------------------------------------------------------
===


 * GMX_TX_STAT0 = GMX_TX_STATS_XSDEF / GMX_TX_STATS_XSCOL

     ==============================================================
     GMX(0..1)_TX(0..3)_STAT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> XSDEF    RC/W     0x0         NS        Number of packets dropped (never successfully      |   
                                                  sent) due to excessive deferal                    |
                                                  (SGMII/1000Base-X half-duplex only)               |
<31:0>  XSCOL    RC/W     0x0         NS        Number of packets dropped (never successfully      |   
                                                  sent) due to excessive collision.  Defined by     |
                                                  GMX_TX_COL_ATTEMPT[LIMIT].                        |
                                                  (SGMII/1000Base-X half-duplex only)               |

Notes:
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT1 = GMX_TX_STATS_SCOL  / GMX_TX_STATS_MCOL

     ==============================================================
     GMX(0..1)_TX(0..3)_STAT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> SCOL     RC/W     0x0         NS        Number of packets sent with a single collision     |   
                                                  (SGMII/1000Base-X half-duplex only)               |
<31:0>  MCOL     RC/W     0x0         NS        Number of packets sent with multiple collisions    |   
                                                  but < GMX_TX_COL_ATTEMPT[LIMIT].                  |
                                                  (SGMII/1000Base-X half-duplex only)               |

Notes:
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT2 = GMX_TX_STATS_OCTS

     ==============================================================
     GMX(0..1)_TX(0..3)_STAT2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> RSVRD    RAZ      NS          NS        Reserved                                           |   
<47:0>  OCTS     RC/W     0x0         NS        Number of total octets sent on the interface.      |   
                                                  Does not count octets from frames that were       |
                                                  truncated due to collisions in halfdup mode.      |

Notes:
- Octect counts are the sum of all data transmitted on the wire including
  packet data, pad bytes, fcs bytes, pause bytes, and jam bytes.  The octect
  counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT3 = GMX_TX_STATS_PKTS

     ==============================================================
     GMX(0..1)_TX(0..3)_STAT3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVRD    RAZ      NS          NS        Reserved                                           |   
<31:0>  PKTS     RC/W     0x0         NS        Number of total frames sent on the interface.      |   
                                                  Does not count frames that were truncated due to  |
                                                   collisions in halfdup mode.                      |

Notes:
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT4 = GMX_TX_STATS_HIST1 (64) / GMX_TX_STATS_HIST0 (<64)

     ==============================================================
     GMX(0..1)_TX(0..3)_STAT4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> HIST1    RC/W     0x0         NS        Number of packets sent with an octet count of 64.  |   
<31:0>  HIST0    RC/W     0x0         NS        Number of packets sent with an octet count         |   
                                                  of < 64.                                          |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT5 = GMX_TX_STATS_HIST3 (128- 255) / GMX_TX_STATS_HIST2 (65- 127)

     ==============================================================
     GMX(0..1)_TX(0..3)_STAT5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> HIST3    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
                                                  128 - 255.                                        |
<31:0>  HIST2    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
                                                  65 - 127.                                         |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT6 = GMX_TX_STATS_HIST5 (512-1023) / GMX_TX_STATS_HIST4 (256-511)

     ==============================================================
     GMX(0..1)_TX(0..3)_STAT6 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> HIST5    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
                                                  512 - 1023.                                       |
<31:0>  HIST4    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
                                                  256 - 511.                                        |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT7 = GMX_TX_STATS_HIST7 (1024-1518) / GMX_TX_STATS_HIST6 (>1518)

     ==============================================================
     GMX(0..1)_TX(0..3)_STAT7 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> HIST7    RC/W     0x0         NS        Number of packets sent with an octet count         |   
                                                  of > 1518.                                        |
<31:0>  HIST6    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
                                                  1024 - 1518.                                      |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT8 = GMX_TX_STATS_MCST  / GMX_TX_STATS_BCST

     ==============================================================
     GMX(0..1)_TX(0..3)_STAT8 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> MCST     RC/W     0x0         NS        Number of packets sent to multicast DMAC.          |   
                                                  Does not include BCST packets.                    |
<31:0>  BCST     RC/W     0x0         NS        Number of packets sent to broadcast DMAC.          |   
                                                  Does not include MCST packets.                    |

Notes:
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Note, GMX determines if the packet is MCST or BCST from the DMAC of the
  packet.  GMX assumes that the DMAC lies in the first 6 bytes of the packet
  as per the 802.3 frame definition.  If the system requires additional data
  before the L2 header, then the MCST and BCST counters may not reflect
  reality and should be ignored by software.
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT9 = GMX_TX_STATS_UNDFLW / GMX_TX_STATS_CTL

     ==============================================================
     GMX(0..1)_TX(0..3)_STAT9 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> UNDFLW   RC/W     0x0         NS        Number of underflow packets                        |   
<31:0>  CTL      RC/W     0x0         NS        Number of Control packets (PAUSE flow control)     |   
                                                  generated by GMX.  It does not include control    |
                                                  packets forwarded or generated by the PP's.       |

Notes:
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GMX(0..1)_TX(0..3)_SGMII_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<0>     ALIGN    R/W      0x1         0x1       Align the transmission to even cycles              |   
                                                  0 = Data can be sent on any cycle                 |
                                                      Possible to for the TX PCS machine to drop    |
                                                      first byte of preamble                        |
                                                  1 = Data will only be sent on even cycles         |
                                                      There will be no loss of data                 |
                                                  (SGMII/1000Base-X only)                           |
----------------------------------------------------------------------------------------------------
===



 *
 * Common
 *

 *
 * GMX_TX_PRTS = TX Ports
 *

     ==============================================================
     GMX(0..1)_TX_PRTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:5>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<4:0>   PRTS     R/W      4           NS        Number of ports allowed on the interface           |   
                                                  (SGMII/1000Base-X only)                           |

Notes:
* The value programmed for PRTS is the number of the highest architected
  port number on the interface, plus 1.  For example, if port 2 is the
  highest architected port, then the programmed value should be 3 since
  there are 3 ports in the system - 0, 1, and 2.
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_IFG = Packet TX Interframe Gap
 *

     ==============================================================
     GMX(0..1)_TX_IFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<7:4>   IFG2     R/W      0x4         NS        1/3 of the interframe gap timing (in IFG2*8 bits)  |   
                                                  If CRS is detected during IFG2, then the          |
                                                  interFrameSpacing timer is not reset and a frame  |
                                                  is transmited once the timer expires.             |
<3:0>   IFG1     R/W      0x8         NS        2/3 of the interframe gap timing (in IFG1*8 bits)  |   
                                                  If CRS is detected during IFG1, then the          |
                                                  interFrameSpacing timer is reset and a frame is   |
                                                  not transmited.                                   |

Notes:
* Programming IFG1 and IFG2.

  For 10/100/1000Mbs half-duplex systems that require IEEE 802.3
  compatibility, IFG1 must be in the range of 1-8, IFG2 must be in the range
  of 4-12, and the IFG1+IFG2 sum must be 12.

  For 10/100/1000Mbs full-duplex systems that require IEEE 802.3
  compatibility, IFG1 must be in the range of 1-11, IFG2 must be in the range
  of 1-11, and the IFG1+IFG2 sum must be 12.

  For XAUI/10Gbs systems that require IEEE 802.3 compatibility, the
  IFG1+IFG2 sum must be 12.  IFG1[1:0] and IFG2[1:0] must be zero.

  For all other systems, IFG1 and IFG2 can be any value in the range of
  1-15.  Allowing for a total possible IFG sum of 2-30.
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_JAM = Packet TX Jam Pattern
 *

     ==============================================================
     GMX(0..1)_TX_JAM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<7:0>   JAM      R/W      0xEE        NS        Jam pattern                                        |   
                                                  (SGMII/1000Base-X half-duplex only)                       |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_COL_ATTEMPT = Packet TX collision attempts before dropping frame
 *

     ==============================================================
     GMX(0..1)_TX_COL_ATTEMPT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:5>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<4:0>   LIMIT    R/W      0x10        16        Collision Attempts                                 |   
                                                  (SGMII/1000Base-X half-duplex only)                       |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_PAUSE_PKT_DMAC = Packet TX Pause Packet DMAC field
 *

     ==============================================================
     GMX(0..1)_TX_PAUSE_PKT_DMAC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> RSVRD    RAZ      NS          NS        Reserved                                           |   
<47:0>  DMAC     R/W      0x0180c2000001 0x0180c2000001 The DMAC field placed is outbnd pause pkts |   
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_PAUSE_PKT_TYPE = Packet Interface TX Pause Packet TYPE field
 *

     ==============================================================
     GMX(0..1)_TX_PAUSE_PKT_TYPE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVRD    RAZ      NS          NS        Reserved                                           |   
<15:0>  TYPE     R/W      0x8808      0x8808    The TYPE field placed is outbnd pause pkts         |   
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_TX_OVR_BP = Packet Interface TX Override BackPressure
 *

     ==============================================================
     GMX(0..1)_TX_OVR_BP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> RSVRD    RAZ      NS          NS        Reserved                                           |   
<47:32> TX_PRT_BP R/W     0x0         0x0       Per port BP sent to PKO                            |   
                                                  0=Port is available                               |
                                                  1=Port should be back pressured                   |
                                                  TX_PRT_BP should not be set until                 |
                                                  GMX_INF_MODE[EN] has been enabled                 |
<31:12> RSVRD    RAZ      NS          NS        Reserved                                           |   
<11:8>  EN       R/W      0x0         0         Per port Enable back pressure override             |   
<7:4>   BP       R/W      0x0         0         Per port BackPressure status to use                |   
                                                  0=Port is available                               |
                                                  1=Port should be back pressured                   |
<3:0>   IGN_FULL R/W      0x0         0         Ignore the RX FIFO full when computing BP          |   

Notes:
In XAUI mode, only the lsb (corresponding to port0) of EN, BP, and IGN_FULL are used.

GMX*_TX_OVR_BP[EN<0>] must be set to one and GMX*_TX_OVR_BP[BP<0>] must be cleared to zero
(to forcibly disable HW-automatic 802.3 pause packet generation) with the HiGig2 Protocol.
(The HiGig2 protocol is indicated by
GMX*_TX_XAUI_CTL[HG_EN]=1 and GMX*_RX0_UDD_SKP[LEN]=16.) HW cannot auto-generate backpressure
with the HiGig2 protocol.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_TX_BP = Packet Interface TX BackPressure Register
 *

     ==============================================================
     GMX(0..1)_TX_BP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<3:0>   BP       RO       0x0         0         Per port BackPressure status                       |   
                                                  0=Port is available                               |
                                                  1=Port should be back pressured                   |

Notes:
In XAUI mode, only the lsb (corresponding to port0) of BP is used.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_TX_CORRUPT = TX - Corrupt TX packets with the ERR bit set
 *

     ==============================================================
     GMX(0..1)_TX_CORRUPT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<3:0>   CORRUPT  R/W      0xf         0xf       Per port error propagation                         |   
                                                  0=Never corrupt packets                           |
                                                  1=Corrupt packets with ERR                        |

Notes:
Packets sent from PKO with the ERR wire asserted will be corrupted by
the transmitter if CORRUPT[prt] is set (XAUI uses prt==0).

Corruption means that GMX will send a bad FCS value.  If GMX_TX_APPEND[FCS]
is clear then no FCS is sent and the GMX cannot corrupt it.  The corrupt FCS
value is 0xeeeeeeee for SGMII/1000Base-X and 4 bytes of the error
propagation code in XAUI mode.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_PRT_INFO = Report the RX status for port
 *

     ==============================================================
     GMX(0..1)_RX_PRT_INFO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:20> RSVRD    RAZ      NS          NS        Reserved                                           |   
<19:16> DROP     RO       0x0         0x0       Per port indication that data was dropped          |   
<15:4>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<3:0>   COMMIT   RO       0x0         0x0       Per port indication that SOP was accepted          |   

Notes:
In XAUI mode, only the lsb (corresponding to port0) of DROP and COMMIT are used.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_TX_LFSR = LFSR used to implement truncated binary exponential backoff
 *

     ==============================================================
     GMX(0..1)_TX_LFSR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVRD    RAZ      NS          NS        Reserved                                           |   
<15:0>  LFSR     R/W      0xffff      NS        The current state of the LFSR used to feed random  |   
                                                  numbers to compute truncated binary exponential   |
                                                  backoff.                                          |
                                                  (SGMII/1000Base-X half-duplex only)               |
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_TX_INT_REG = Interrupt Register
 *

     ==============================================================
     GMX(0..1)_TX_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:20> RSVRD    RAZ      NS          NS        Reserved                                           |   
<19:16> LATE_COL R/W1C    0x0         0         TX Late Collision                                  |   
                                                  (SGMII/1000Base-X half-duplex only)               |
<15:12> XSDEF    R/W1C    0x0         0         TX Excessive deferral                              |   
                                                  (SGMII/1000Base-X half-duplex only)               |
<11:8>  XSCOL    R/W1C    0x0         0         TX Excessive collisions                            |   
                                                  (SGMII/1000Base-X half-duplex only)               |
<7:6>   SPARE    R/W1C    0x0         0         Spare                                              |   
<5:2>   UNDFLW   R/W1C    0x0         0         TX Underflow                                       |   
<1>     RSVRD    RAZ      0x0         0         Reserved                                           |   
<0>     PKO_NXA  R/W1C    0x0         0         Port address out-of-range from PKO Interface       |   

Notes:
In XAUI mode, only the lsb (corresponding to port0) of UNDFLW is used.
----------------------------------------------------------------------------------------------------
===


 * 
 * GMX_TX_INT_EN = Interrupt Enable
 *

     ==============================================================
     GMX(0..1)_TX_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:20> RSVRD    RAZ      NS          NS        Reserved                                           |   
<19:16> LATE_COL R/W      0x0         0         TX Late Collision                                  |   
                                                  (SGMII/1000Base-X half-duplex only)               |
<15:12> XSDEF    R/W      0x0         0         TX Excessive deferral                              |   
                                                  (SGMII/1000Base-X half-duplex only)               |
<11:8>  XSCOL    R/W      0x0         0         TX Excessive collisions                            |   
                                                  (SGMII/1000Base-X half-duplex only)               |
<7:6>   SPARE    R/W      0x0         0         Spare                                              |   
<5:2>   UNDFLW   R/W      0x0         0         TX Underflow                                       |   
<1>     RSVRD    RAZ      0x0         0         Reserved                                           |   
<0>     PKO_NXA  R/W      0x0         0         Port address out-of-range from PKO Interface       |   

Notes:
In XAUI mode, only the lsb (corresponding to port0) of UNDFLW is used.
----------------------------------------------------------------------------------------------------
===


 * 
 * GMX_NXA_ADR = NXA Port Address
 *

     ==============================================================
     GMX(0..1)_NXA_ADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:6>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<5:0>   PRT      RO       0x0         NS        Logged address for NXA exceptions                  |   
                                                  The logged address will be from the first         |
                                                  exception that caused the problem.  NCB has       |
                                                  higher priority than PKO and will win.            |
                                                  (only PRT[3:0])                                   |
----------------------------------------------------------------------------------------------------
===

 * 
 * GMX_BAD_REG = A collection of things that have gone very, very wrong
 *

     ==============================================================
     GMX(0..1)_BAD_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:31> RSVRD    RAZ      NS          NS        Reserved                                           |   
<30:27> INB_NXA  R/W1C    0x0         0         Inbound port > GMX_RX_PRTS                         |   
<26>    STATOVR  R/W1C    0x0         0         TX Statistics overflow                             |   
                                                  The common FIFO to SGMII and XAUI had an overflow |
                                                  TX Stats are corrupted                            |
<25:22> LOSTSTAT R/W1C    0x0         0         TX Statistics data was over-written                |   
                                                  In SGMII, one bit per port                        |
                                                  In XAUI, only port0 is used                       |
                                                  TX Stats are corrupted                            |
<21:6>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<5:2>   OUT_OVR  R/W1C    0x0         0         Outbound data FIFO overflow (per port)             |   
<1:0>   RSVRD    RAZ      NS          NS        Reserved                                           |   

Notes:
In XAUI mode, only the lsb (corresponding to port0) of INB_NXA, LOSTSTAT, OUT_OVR, are used.
----------------------------------------------------------------------------------------------------
===

 * 
 * GMX_STAT_BP = Number of cycles that the TX/Stats block has help up operation
 *

     ==============================================================
     GMX(0..1)_STAT_BP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:17> RSVRD    RAZ      NS          NS        Reserved                                           |   
<16>    BP       RO       0x0         0         Current BP state                                   |   
<15:0>  CNT      R/W1C    0x0         0         Number of cycles that BP has been asserted         |   
                                                  Saturating counter                                |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     GMX(0..1)_TX_XAUI_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:11> RSVRD    RAZ      NS          NS        Reserved                                           |   
<10:9>  HG_PAUSE_HGI R/W  0x2         2         HGI Field for HW generated HiGig pause packets     |   
                                                  (XAUI mode only)                                  |
<8>     HG_EN    R/W      0x0         0         Enable HiGig Mode                                  |   
                                                  When HG_EN is set, the following must be set:     |
                                                   GMX_RX_FRM_CTL[PRE_CHK] == 0                     |
                                                   GMX_RX_UDD_SKP[FCSSEL] == 0                      |
                                                   GMX_RX_UDD_SKP[SKIP] == 12 or 16                 |
                                                   GMX_TX_APPEND[PREAMBLE] == 0                     |
                                                    (depending on the HiGig header size)            |
                                                  (XAUI mode only)                                  |
<7>     RSVRD    RAZ      NS          NS        Reserved                                           |   
<6>     LS_BYP   R/W      0x0         0         Bypass the link status as determined by the XGMII  |   
                                                  receiver and set the link status of the           |
                                                  transmitter to LS.                                |
                                                  (XAUI mode only)                                  |
<5:4>   LS       R/W      0x0         0         Link Status                                        |   
                                                  0 = Link Ok                                       |
                                                      Link runs normally. RS passes MAC data to PCS |
                                                  1 = Local Fault                                   |
                                                      RS layer sends continuous remote fault        |
                                                       sequences.                                   |
                                                  2 = Remote Fault                                  |
                                                      RS layer sends continuous idles sequences     |
                                                  (XAUI mode only)                                  |
<3:2>   RSVRD    RAZ      NS          NS        Reserved                                           |   
<1>     UNI_EN   R/W      0x0         0         Enable Unidirectional Mode (IEEE Clause 66)        |   
                                                  (XAUI mode only)                                  |
<0>     DIC_EN   R/W      0x0         1         Enable the deficit idle counter for IFG averaging  |   
                                                  (XAUI mode only)                                  |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     GMX(0..1)_RX_XAUI_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<1:0>   STATUS   RO       0x0         0         Link Status                                        |   
                                                  0=Link OK                                         |
                                                  1=Local Fault                                     |
                                                  2=Remote Fault                                    |
                                                  3=Reserved                                        |
                                                  (XAUI mode only)                                  |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     GMX(0..1)_RX_XAUI_BAD_COL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:40> RSVRD    RAZ      NS          NS        Reserved                                           |   
<39>    VAL      R/W1C    0x0         NS        Set when GMX_RX_INT_REG[PCTERR] is set.            |   
                                                  (XAUI mode only)                                  |
<38:36> STATE    RO       0x0         NS        When GMX_RX_INT_REG[PCTERR] is set, STATE will     |   
                                                  conatin the receive state at the time of the      |
                                                  error.                                            |
                                                  (XAUI mode only)                                  |
<35:32> LANE_RXC RO       0x0         NS        When GMX_RX_INT_REG[PCTERR] is set, LANE_RXC will  |   
                                                  conatin the XAUI column at the time of the error. |
                                                  (XAUI mode only)                                  |
<31:0>  LANE_RXD RO       0x0         NS        When GMX_RX_INT_REG[PCTERR] is set, LANE_RXD will  |   
                                                  conatin the XAUI column at the time of the error. |
                                                  (XAUI mode only)                                  |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GMX(0..1)_XAUI_EXT_LOOPBACK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:5>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<4>     EN       R/W      0x0         0         Loopback enable                                    |   
                                                  Puts the packet interface in external loopback    |
                                                  mode on the XAUI bus in which the RX lines are    |
                                                  reflected on the TX lines.                        |
                                                  (XAUI mode only)                                  |
<3:0>   THRESH   R/W      0x8         8         Threshhold on the TX FIFO                          |   
                                                  SW must only write the typical value.  Any other  |
                                                  value will cause loopback mode not to function    |
                                                  correctly.                                        |
                                                  (XAUI mode only)                                  |
----------------------------------------------------------------------------------------------------
===

 * 
 * GMX_INF_MODE = Interface Mode
 *

     ==============================================================
     GMX(0..1)_INF_MODE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:10> NS       RAZ      NS          NS        Reserved                                           |   
<9:8>   SPEED    RO       NS          NS        Interface Speed                                    |   
                                                  0: 1.250GHz                                       |
                                                  1: 2.500GHz                                       |
                                                  2: 3.125GHz                                       |
                                                  3: 3.750GHz                                       |
<7:6>   NS       RAZ      NS          NS        Reserved                                           |   
<5:4>   MODE     RO       0           NS        Interface Electrical Operating Mode                |   
                                                  0: Disabled (PCIe)                                |
                                                  1: XAUI (IEEE 802.3-2005)                         |
                                                  2: SGMII (v1.8)                                   |
                                                  3: PICMG3.1                                       |
<3:2>   NS       RAZ      NS          NS        Reserved                                           |   
<1>     EN       R/W      0           NS        Interface Enable                                   |   
                                                  Must be set to enable the packet interface.       |
                                                  Should be enabled before any other requests to    |
                                                  GMX including enabling port back pressure with    |
                                                  IPD_CTL_STATUS[PBP_EN]                            |
<0>     TYPE     RO       0           NS        Interface Protocol Type                            |   
                                                  0: SGMII/1000Base-X                               |
                                                  1: XAUI                                           |
----------------------------------------------------------------------------------------------------
===



* 
* DO NOT DOCUMENT THIS REGISTER - IT IS NOT OFFICIAL
*

     ==============================================================
     GMX(0..1)_CLK_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  NS       RAZ      NS          NS        Reserved                                           |   
<0>     CLK_EN   R/W      0           0         Force the clock enables on                         |   
----------------------------------------------------------------------------------------------------
===



 *
 *                  FAU Timeout = Fetch and Add Unit Tag-Switch Timeout
 *
 * How many clokc ticks the FAU unit will wait for a tag-switch before timeing out.
 * for Queue 0.
 *

     ==============================================================
     IOB_FAU_TIMEOUT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>  TOUT_VAL R/W      0x4         0x4       When a tag request arrives from the PP a timer is      
                                                 started associate with that PP. The timer which
                                                 increments every 256 eclks is compared to TOUT_VAL.
                                                 When the two are equal the IOB will flag the tag 
                                                 request to complete as a time-out tag operation.
                                                 The 256 count timer used to increment the PP
                                                 associated timer is always running so the first
                                                 increment of the PP associated timer may occur any
                                                 where within the first 256 eclks.  Note that '0'
                                                 is an illegal value.
<12>    TOUT_ENB R/W      0x1         0         The enable for the FAU timeout feature.                
                                                 '1' will enable the timeout, '0' will disable.                                            
<63:13> NS        RAZ     NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  NCB To CMB Response Priority Counter = NCB to CMB Response Priority Counter Enable and Timer Value
*
* Enables and supplies the timeout count for raising the priority of NCB Responses access to the CMB.
*

     ==============================================================
     IOB_N2C_RSP_PRI_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<14:0>  CNT_VAL   R/W     0x0         0         Number of core clocks to wait before raising           
                                                 the priority for access to CMB.                                                                
<15>    CNT_ENB   R/W     0x0         0         Enables the raising of CMB access priority             
                                                 when CNT_VAL is reached.                                                               
<63:16> NS        RAZ     NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===


*
*                  IPD To CMB Store Priority Counter = IPD to CMB Store Priority Counter Enable and Timer Value
*
* Enables and supplies the timeout count for raising the priority of IPD Store access to the CMB.
*

     ==============================================================
     IOB_I2C_PRI_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<14:0>  CNT_VAL   R/W      0x0         0        Number of core clocks to wait before raising           
                                                 the priority for access to CMB.                                                               
<15>    CNT_ENB   R/W      0x0         0        Enables the raising of CMB access priority             
                                                 when CNT_VAL is reached.                                                               
<63:16> NS        RAZ      NS          NS       Reserved                                               
----------------------------------------------------------------------------------------------------
===


*
*                  PKO To CMB Response Priority Counter = PKO to CMB Response Priority Counter Enable and Timer Value
*
* Enables and supplies the timeout count for raising the priority of PKO Load access to the CMB.
*

     ==============================================================
     IOB_P2C_REQ_PRI_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<14:0>  CNT_VAL   R/W     0x0         0         Number of core clocks to wait before raising           
                                                 the priority for access to CMB.                                                            
<15>    CNT_ENB   R/W     0x0         0         Enables the raising of CMB access priority              
                                                 when CNT_VAL is reached.                                                           
<63:16> NS        RAZ     NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  NCB To CMB L2C Priority Counter = NCB to CMB L2C Priority Counter Enable and Timer Value
*
* Enables and supplies the timeout count for raising the priority of NCB Store/Load access to the CMB.
*

     ==============================================================
     IOB_N2C_L2C_PRI_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<14:0>  CNT_VAL   R/W     0x0         0         Number of core clocks to wait before raising           
                                                 the priority for access to CMB.                                                               
<15>    CNT_ENB   R/W     0x0         0         Enables the raising of CMB access priority              
                                                 when CNT_VAL is reached.                                                              
<63:16> NS        RAZ     NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  DWB To CMB Priority Counter = Don't Write Back to CMB Priority Counter Enable and Timer Value
*
* Enables and supplies the timeout count for raising the priority of Don't Write Back request to the L2C.
*

     ==============================================================
     IOB_DWB_PRI_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<14:0>  CNT_VAL   R/W     0x0         0         Number of core clocks to wait before raising           
                                                 the priority for access to CMB.                                                                  
<15>    CNT_ENB   R/W     0x0         0         Enables the raising of CMB access priority             
                                                 when CNT_VAL is reached.                                                                 
<63:16> NS        RAZ     NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  Request To NCB Priority Counter = Request to NCB Priority Counter Enable and Timer Value
*
* Enables and supplies the timeout count for raising the priority of Request transfers to the Outbound NCB.
*

     ==============================================================
     IOB_OUTB_REQ_PRI_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<14:0>  CNT_VAL   R/W     0x0         0         Number of core clocks to wait before raising           
                                                 the priority for access to NCB.                                                             
<15>    CNT_ENB   R/W     0x0         0         Enables the raising of NCB access priority             
                                                 when CNT_VAL is reached.                                                                    
<63:16> NS        RAZ     NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  Commit To NCB Priority Counter = Commit to NCB Priority Counter Enable and Timer Value
*
* Enables and supplies the timeout count for raising the priority of Commit request to the Outbound NCB.
*

     ==============================================================
     IOB_OUTB_COM_PRI_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<14:0>  CNT_VAL   R/W     0x0         0         Number of core clocks to wait before raising           
                                                 the priority for access to NCB.                                                            
<15>    CNT_ENB   R/W     0x0         0         Enables the raising of NCB access priority             
                                                 when CNT_VAL is reached.                                                                   
<63:16> NS        RAZ     NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  FPA To NCB Priority Counter = FPA Returns to NCB Priority Counter Enable and Timer Value
*
* Enables and supplies the timeout count for raising the priority of FPA Rreturn Page request to the Outbound NCB.
*

     ==============================================================
     IOB_OUTB_FPA_PRI_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<14:0>  CNT_VAL   R/W     0x0         0         Number of core clocks to wait before raising           
                                                 the priority for access to NCB.                                                             
<15>    CNT_ENB   R/W     0x0         0         Enables the raising of NCB access priority             
                                                 when CNT_VAL is reached.                                                                     
<63:16> NS        RAZ     NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  IOB Control Status = IOB Control and Status Register
*
* Provides control for IOB functions.
*

     ==============================================================
     IOB_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     FAU_END   R/W     0x0         0         Toggles the endian style of the FAU. '0' is for        
                                                 big-endian and '1' is for little-endian.
<1>     DWB_ENB   R/W     0x1         1         Enables the DWB function of the IOB.                   
<2>     PKO_ENB   R/W     0x0         0         Toggles the endian style of the FAU for the PKO.       
                                                 '0' is for big-endian and '1' is for little-endian.
<3>     INB_MAT   R/W1C   0x0         0         Was a match on the inbound bus to the inb pattern      
                                                 matchers. PASS2 FIELD.
<4>     OUTB_MAT  R/W1C   0x0         0         Was a match on the outbound bus to the inb pattern     
                                                 matchers. PASS2 FIELD.
<63:5>  NS        RAZ     NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  IOB_INT_SUM = IOB's Interrupt Summary Register
*
* Contains the diffrent interrupt summary bits of the IOB. This is a PASS-2 register.
*

     ==============================================================
     IOB_INT_SUM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     NP_SOP   R/W1C     0           0        Set when a SOP is followed by an SOP for the same      
                                                 port for a non-passthrough packet.
                                                 The first detected error associated with bits [5:0]
                                                 of this register will only be set here. A new bit
                                                 can be set when the previous reported bit is cleared.
<1>     NP_EOP   R/W1C     0           0        Set when a EOP is followed by an EOP for the same      
                                                 port for a non-passthrough packet.
                                                 The first detected error associated with bits [5:0]
                                                 of this register will only be set here. A new bit
                                                 can be set when the previous reported bit is cleared.
<2>     P_SOP    R/W1C     0           0        Set when a SOP is followed by an SOP for the same      
                                                 port for a passthrough packet.
                                                 The first detected error associated with bits [5:0]
                                                 of this register will only be set here. A new bit
                                                 can be set when the previous reported bit is cleared.
<3>     P_EOP   R/W1C      0           0        Set when a EOP is followed by an EOP for the same      
                                                 port for a passthrough packet.
                                                 The first detected error associated with bits [5:0]
                                                 of this register will only be set here. A new bit
                                                 can be set when the previous reported bit is cleared.

<4>     NP_DAT  R/W1C      0           0        Set when a data arrives before a SOP for the same      
                                                 port for a non-passthrough packet.
                                                 The first detected error associated with bits [5:0]
                                                 of this register will only be set here. A new bit
                                                 can be set when the previous reported bit is cleared.
<5>     P_DAT   R/W1C      0           0        Set when a data arrives before a SOP for the same      
                                                 port for a passthrough packet.
                                                 The first detected error associated with bits [5:0]
                                                 of this register will only be set here. A new bit
                                                 can be set when the previous reported bit is cleared.
<63:6>  NS       RAZ       NS          NS       Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_INT_ENB = IOB's Interrupt Enable
 *
 * The IOB's interrupt enable register. This is a PASS-2 register.
 *

     ==============================================================
     IOB_INT_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     NP_SOP   R/W      0           0         When set (1) and bit 0 of the IOB_INT_SUM              
                                                 register is asserted the IOB will assert an                                        
                                                 interrupt.                                                                         
<1>     NP_EOP   R/W      0           0         When set (1) and bit 1 of the IOB_INT_SUM              
                                                 register is asserted the IOB will assert an                                        
                                                 interrupt.                                                                         
<2>     P_SOP    R/W      0           0         When set (1) and bit 2 of the IOB_INT_SUM              
                                                 register is asserted the IOB will assert an                                        
                                                 interrupt.                                                                         
<3>     P_EOP    R/W      0           0         When set (1) and bit 3 of the IOB_INT_SUM              
                                                 register is asserted the IOB will assert an                                        
                                                 interrupt.                                                                         
<4>     NP_DAT   R/W      0           0         When set (1) and bit 4 of the IOB_INT_SUM              
                                                 register is asserted the IOB will assert an                                        
                                                 interrupt.                                                                         
<5>     P_DAT    R/W      0           0         When set (1) and bit 5 of the IOB_INT_SUM              
                                                 register is asserted the IOB will assert an                                        
                                                 interrupt.                                                                         
<63:6>  NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_PKT_ERR = IOB Packet Error Register
 *
 * Provides status about the failing packet recevie error. This is a PASS-2 register.
 *

     ==============================================================
     IOB_PKT_ERR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>   PORT     RO       0x0         NS        When IOB_INT_SUM[3:0] bit is set, this field           
                                                 latches the failing port associate with the
                                                 IOB_INT_SUM[3:0] bit set.
<63:6>  NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===



*
*                  IOB_INB_DATA_MATCH = IOB Inbound Data Match
*
* Match pattern for the inbound data to set the INB_MATCH_BIT. PASS-2 Register
*

     ==============================================================
     IOB_INB_DATA_MATCH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  DATA     R/W      0x0         NS        Pattern to match on the inbound NCB.                   
----------------------------------------------------------------------------------------------------
===

*
*                  IOB_INB_CONTROL_MATCH = IOB Inbound Control Match
*
* Match pattern for the inbound control to set the INB_MATCH_BIT. PASS-2 Register
*

     ==============================================================
     IOB_INB_CONTROL_MATCH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:29> NS        RAZ     NS          NS        Reserved                                               
<28:21> MASK     R/W      0x0         NS        Pattern to match on the inbound NCB.                   
<20:17> OPC      R/W      0x0         NS        Pattern to match on the inbound NCB.                   
<16:8>  DST      R/W      0x0         NS        Pattern to match on the inbound NCB.                   
<7:0>   SRC      R/W      0x0         NS        Pattern to match on the inbound NCB.                   
----------------------------------------------------------------------------------------------------
===

*
*                  IOB_INB_DATA_MATCH_ENB = IOB Inbound Data Match Enable
*
* Enables the match of the corresponding bit in the IOB_INB_DATA_MATCH reister. PASS-2 Register
*

     ==============================================================
     IOB_INB_DATA_MATCH_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  DATA     R/W      0x0         NS        Bit to enable match of.                                
----------------------------------------------------------------------------------------------------
===

*
*                  IOB_INB_CONTROL_MATCH_ENB = IOB Inbound Control Match Enable
*
* Enables the match of the corresponding bit in the IOB_INB_CONTROL_MATCH reister. PASS-2 Register
*

     ==============================================================
     IOB_INB_CONTROL_MATCH_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:29> NS        RAZ     NS          NS        Reserved                                               
<28:21> MASK     R/W      0x0         NS        Pattern to match on the inbound NCB.                   
<20:17> OPC      R/W      0x0         NS        Pattern to match on the inbound NCB.                   
<16:8>  DST      R/W      0x0         NS        Pattern to match on the inbound NCB.                   
<7:0>   SRC      R/W      0x0         NS        Pattern to match on the inbound NCB.                   
----------------------------------------------------------------------------------------------------
===

*
*                  IOB_OUTB_DATA_MATCH = IOB Outbound Data Match
*
* Match pattern for the outbound data to set the OUTB_MATCH_BIT. PASS-2 Register
*

     ==============================================================
     IOB_OUTB_DATA_MATCH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  DATA     R/W      0x0         NS        Pattern to match on the outbound NCB.                   
----------------------------------------------------------------------------------------------------
===

*
*                  IOB_OUTB_CONTROL_MATCH = IOB Outbound Control Match
*
* Match pattern for the outbound control to set the OUTB_MATCH_BIT. PASS-2 Register
*

     ==============================================================
     IOB_OUTB_CONTROL_MATCH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:26> NS        RAZ     NS          NS        Reserved                                               
<25:18> MASK     R/W      0x0         NS        Pattern to match on the outbound NCB.                   
<17>    EOT      R/W      0x0         NS        Pattern to match on the outbound NCB.                   
<16:9>  DST      R/W      0x0         NS        Pattern to match on the outbound NCB.                   
<8:0>   SRC      R/W      0x0         NS        Pattern to match on the outbound NCB.                   
----------------------------------------------------------------------------------------------------
===

*
*                  IOB_OUTB_DATA_MATCH_ENB = IOB Outbound Data Match Enable
*
* Enables the match of the corresponding bit in the IOB_OUTB_DATA_MATCH reister. PASS-2 Register
*

     ==============================================================
     IOB_OUTB_DATA_MATCH_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  DATA     R/W      0x0         NS        Bit to enable match of.                                
----------------------------------------------------------------------------------------------------
===

*
*                  IOB_OUTB_CONTROL_MATCH_ENB = IOB Outbound Control Match Enable
*
* Enables the match of the corresponding bit in the IOB_OUTB_CONTROL_MATCH reister. PASS-2 Register
*

     ==============================================================
     IOB_OUTB_CONTROL_MATCH_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:26> NS        RAZ     NS          NS        Reserved                                               
<25:18> MASK     R/W      0x0         NS        Pattern to match on the outbound NCB.                   
<17>    EOT      R/W      0x0         NS        Pattern to match on the outbound NCB.                   
<16:9>  DST      R/W      0x0         NS        Pattern to match on the outbound NCB.                   
<8:0>   SRC      R/W      0x0         NS        Pattern to match on the outbound NCB.                   
----------------------------------------------------------------------------------------------------
===


*
*                  IOB_BIST_STATUS = BIST Status of IOB Memories
*
* The result of the BIST run on the IOB memories.
*

     ==============================================================
     IOB_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     ICD      RO       0x0         0         icd_ncb_fifo_bist_status                               
<1>     IBD      RO       0x0         0         ibd_bist_mem0_status                                   
<2>     ICRP1    RO       0x0         0         icr_pko_bist_mem1_status                               
<3>     ICRP0    RO       0x0         0         icr_pko_bist_mem0_status                               
<4>     ICRN1    RO       0x0         0         icr_ncb_bist_mem1_status                               
<5>     ICRN0    RO       0x0         0         icr_ncb_bist_mem0_status                               
<6>     IBRQ1    RO       0x0         0         ibrq_bist_req_fifo1_status                             
<7>     IBRQ0    RO       0x0         0         ibrq_bist_req_fifo0_status                             
<8>     ICNRT    RO       0x0         0         icnr_tag_cb_reg_fifo_bist_status                       
<9>     IBR1     RO       0x0         0         ibr_bist_rsp_fifo1_status                              
<10>    IBR0     RO       0x0         0         ibr_bist_rsp_fifo0_status                              
<11>    IBDR1    RO       0x0         0         ibdr_bist_req_fifo1_status                             
<12>    IBDR0    RO       0x0         0         ibdr_bist_req_fifo0_status                             
<13>    ICNR0    RO       0x0         0         icnr_reg_mem0_bist_status                              
<14>    ICNR1    RO       0x0         0         Reserved                                               
<15>    ICR1     RO       0x0         0         icr_bist_req_fifo1_status                              
<16>    ICR0     RO       0x0         0         icr_bist_req_fifo0_status                              
<17>    ICNRCB   RO       0x0         0         icnr_cb_reg_fifo_bist_status                           
<63:18> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_1ST_MBUFF_SKIP = IPD First MBUFF Word Skip Size
 *
 * The number of words that the IPD will skip when writing the first MBUFF.
 *

     ==============================================================
     IPD_1ST_MBUFF_SKIP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>   SKIP_SZ  R/W      0           0         The number of 8-byte words from the top of the         
                                                 1st MBUFF that the IPD will store the next-pointer.
                                                 Legal values are 0 to 32, where the MAX value
                                                 is also limited to:
                                                 IPD_PACKET_MBUFF_SIZE[MB_SIZE] - 18.
<63:6>  NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_NOT_1ST_MBUFF_SKIP = IPD Not First MBUFF Word Skip Size
*
* The number of words that the IPD will skip when writing any MBUFF that is not the first.
*

     ==============================================================
     IPD_NOT_1ST_MBUFF_SKIP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>   SKIP_SZ  R/W      0           0         The number of 8-byte words from the top of any         
                                                 MBUFF, that is not the 1st MBUFF, that the IPD                                                     
                                                 will write the next-pointer.                                                                       
                                                 Legal values are 0 to 32, where the MAX value
                                                 is also limited to:
                                                 IPD_PACKET_MBUFF_SIZE[MB_SIZE] - 16.
<63:6>  NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_PACKET_MBUFF_SIZE = IPD's PACKET MUBUF Size In Words
*
* The number of words in a MBUFF used for packet data store.
*

     ==============================================================
     IPD_PACKET_MBUFF_SIZE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>  MB_SIZE  R/W       32          32       The number of 8-byte words in a MBUF.                 
                                                 This must be a number in the range of 32 to
                                                 2048.
                                                 This is also the size of the FPA's                                                         
                                                 Queue-0 Free-Page.
<63:12> NS       RAZ       NS          NS       Reserved                                               
----------------------------------------------------------------------------------------------------
===


*
*                  IPD_CTL_STATUS = IPS'd Control Status Register
*
* The number of words in a MBUFF used for packet data store.
*

     ==============================================================
     IPD_CTL_STATUS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     IPD_EN   R/W      0           0         When set '1' enable the operation of the IPD.          
                                                 When clear '0', the IPD will appear to the
                                                 IOB-arbiter to be applying backpressure, this
                                                 causes the IOB-Arbiter to not send grants to NCB
                                                 devices requesting to send packet data to the IPD.
<2:1>   OPC_MODE R/W      0           0         0 ==> All packet data (and next buffer pointers)       
                                                 is written through to memory.
                                                 1 ==> All packet data (and next buffer pointers) is
                                                 written into the cache.
                                                 2 ==> The first aligned cache block holding the
                                                 packet data (and initial next buffer pointer) is
                                                 written to the L2 cache, all remaining cache blocks
                                                 are not written to the L2 cache.
                                                 3 ==> The first two aligned cache blocks holding
                                                 the packet data (and initial next buffer pointer)
                                                 are written to the L2 cache, all remaining cache
                                                 blocks are not written to the L2 cache.
<3>     PBP_EN   R/W      0           0         Port back pressure enable. When set '1' enables        
                                                 the sending of port level backpressure to the
                                                 Octane input-ports. Once enabled the sending of
                                                 port-level-backpressure can not be disabled by
                                                 changing the value of this bit.
                                                 GMXX_INF_MODE[EN] must be set to '1' for each
                                                 packet interface which requires port back pressure
                                                 prior to setting PBP_EN to '1'.
<4>     WQE_LEND R/W      0           0         Changes WQE to little endian writes to L2C             
<5>     PKT_LEND R/W      0           0         Changes PKT to little endian writes to L2C             
<6>     NADDBUF  R/W      0           0         When IPD_CTL_STATUS[NADDBUF] is set,                   
                                                 IPD_PORT_BP_COUNTERS_PAIR(port)[CNT_VAL]
                                                 WILL NOT be incremented when IPD allocates a
                                                 buffer for a packet on the port.
                                                 PASS-2 Field.
<7>     ADDPKT   R/W      0           0         When IPD_CTL_STATUS[ADDPKT] is set,                    
                                                 IPD_PORT_BP_COUNTERS_PAIR(port)[CNT_VAL]
                                                 WILL be incremented by one for every work
                                                 queue entry that is sent to POW.
                                                 PASS-2 Field.
<8>     RESET    R/W      0           0         When set '1' causes a reset of the IPD, except         
                                                 RSL.
<9>     LEN_M8   R/W      0           1         Setting of this bit will subtract 8 from the           
                                                 data-length field in the header written wo the
                                                 POW and the top of a MBUFF.
                                                 OCTEAN PASS2 generates a length that includes the
                                                 length of the data + 8 for the header-field. By
                                                 setting this bit the 8 for the instr-field will
                                                 not be included in the length field of the header.
                                                 NOTE: IPD is compliant with the spec when this
                                                 field is '1'.
<10>     PKT_OFF   R/W      0           0        When clear '0' the IPD working normaly,                
                                                 buffering the received packet data. When set '1'
                                                 the IPD will not buffer the received packet data.
<11>     IPD_FULL  R/W      0           0        When clear '0' the IPD acts normaly.                   
                                                 When set '1' the IPD drive the IPD_BUFF_FULL line to
                                                 the IOB-arbiter, telling it to not give grants to
                                                 NCB devices sending packet data.
<12>     PQ_NABUF  R/W      0           0        When set IPD_PORT_QOS_@_CNT WILL NOT be                
                                                 incremented when IPD allocates a buffer for a
                                                 packet.
<13>     PQ_APKT   R/W      0           0        When set IPD_PORT_QOS_@_CNT WILL be incremented        
                                                 by one for every work queue entry that is sent to
                                                 POW.
<14>     NO_WPTR   R/W      0           0        When set '1' the WQE pointers will not be used and     
                                                 the WQE will be located at the front of the packet.
<63:15>  NS        RAZ      NS          NS       Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_WQE_FPA_QUEUE = IPD Work-Queue-Entry FPA Page Size
*
* Which FPA Queue (0-7) to fetch page-pointers from for WQE's
*

     ==============================================================
     IPD_WQE_FPA_QUEUE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<2:0>   WQE_QUE  R/W      1           1         Which FPA Queue to fetch page-pointers                 
                                                 from for WQE's.                                                                              
<63:3>  NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_PORT@_BP_PAGE_CNT = IPD Port Backpressure Page Count
*
* The number of pages in use by the port that when exceeded, backpressure will be applied to the port.
*

     ==============================================================
     IPD_PORT(0..3,16..19)_BP_PAGE_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<16:0>  PAGE_CNT R/W      0x0         0         The number of page pointers assigned to                
                                                 the port, that when exceeded will cause                                                       
                                                 back-pressure to be applied to the port.                                                      
                                                 This value is in 256 page-pointer increments,
                                                 (i.e. 0 = 0-page-ptrs, 1 = 256-page-ptrs,..)
<17>    BP_ENB   R/W      0x0         0         When set '1' BP will be applied, if '0' BP will        
                                                 not be applied to port.
<63:18> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_SUB_PORT_BP_PAGE_CNT = IPD Subtract Port Backpressure Page Count
*
* Will add the value to the indicated port count register, the number of pages supplied. The value added should
* be the 2's complement of the vallue that needs to be subtracted. Users would add 2's compliment values to the
* port-mbuf-count register to return (lower the count) mbufs to the counter in order to avoid port-level
* backpressure being applied to the port. Backpressure is applied when the MBUF used count of a port exceeds the
* value in the IPD_PORT@_BP_PAGE_CNT.
*
* This register can't be written from the PCI via a window write.
*

     ==============================================================
     IPD_SUB_PORT_BP_PAGE_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<24:0>  PAGE_CNT R/W      NS          0         The number of page pointers to add to                  
                                                 the port counter pointed to by the                                                     
                                                 PORT Field.                                                                                    
<30:25> PORT     R/W      NS          0         The port to add the PAGE_CNT field to.                 
<63:31> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_1st_NEXT_PTR_BACK = IPD First Next Pointer Back Values
*
* Contains the Back Field for use in creating the Next Pointer Header for the First MBUF
*

     ==============================================================
     IPD_1st_NEXT_PTR_BACK Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>   BACK     R/W      0x0         0         Used to find head of buffer from the nxt-hdr-ptr.      
<63:4>  NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_2nd_NEXT_PTR_BACK = IPD Second Next Pointer Back Value
*
* Contains the Back Field for use in creating the Next Pointer Header for the First MBUF
*

     ==============================================================
     IPD_2nd_NEXT_PTR_BACK Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>   BACK     R/W      0x0         0         Used to find head of buffer from the nxt-hdr-ptr.      
<63:4>  NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_INTERRUPT_ENB = IPD Interrupt Enable Register
*
* Used to enable the various interrupting conditions of IPD
*

     ==============================================================
     IPD_INT_ENB Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     PRC_PAR0 R/W      0x0         0         Enable parity error interrupts for bits                
                                                 [31:0] of the PBM memory.                                                                          
<1>     PRC_PAR1 R/W      0x0         0         Enable parity error interrupts for bits                
                                                 [63:32] of the PBM memory.                                                                         
<2>     PRC_PAR2 R/W      0x0         0         Enable parity error interrupts for bits                
                                                 [95:64] of the PBM memory.                                                       
<3>     PRC_PAR3 R/W      0x0         0         Enable parity error interrupts for bits                
                                                 [127:96] of the PBM memory.                                                                        
<4>     BP_SUB   R/W      0x0         0         Enables interrupts when a backpressure subtract        
                                                 has an illegal value.
<5>     DC_OVR   R/W      0x0         0         Allows an interrupt to be sent when the                
                                                 corresponding bit in the IPD_INT_SUM is set.
<6>     CC_OVR   R/W      0x0         0         Allows an interrupt to be sent when the                
                                                 corresponding bit in the IPD_INT_SUM is set.
<7>     C_COLL   R/W      0x0         0         Allows an interrupt to be sent when the                
                                                 corresponding bit in the IPD_INT_SUM is set.
<8>     D_COLL   R/W      0x0         0         Allows an interrupt to be sent when the                
                                                 corresponding bit in the IPD_INT_SUM is set.
<9>     BC_OVR   R/W      0x0         0         Allows an interrupt to be sent when the                
                                                 corresponding bit in the IPD_INT_SUM is set.
<10>    PQ_ADD   R/W      0x0         0         Allows an interrupt to be sent when the                
                                                 corresponding bit in the IPD_INT_SUM is set.
<11>    PQ_SUB   R/W      0x0         0         Allows an interrupt to be sent when the                
                                                 corresponding bit in the IPD_INT_SUM is set.
<63:12> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_INTERRUPT_SUM = IPD Interrupt Summary Register
*
* Set when an interrupt condition occurs, write '1' to clear.
*

     ==============================================================
     IPD_INT_SUM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     PRC_PAR0 R/W1C    0x0         0         Set when a parity error is dected for bits             
                                                 [31:0] of the PBM memory.                                                                          
<1>     PRC_PAR1 R/W1C    0x0         0         Set when a parity error is dected for bits             
                                                 [63:32] of the PBM memory.                                                      
<2>     PRC_PAR2 R/W1C    0x0         0         Set when a parity error is dected for bits             
                                                 [95:64] of the PBM memory.                                                      
<3>     PRC_PAR3 R/W1C    0x0         0         Set when a parity error is dected for bits             
                                                 [127:96] of the PBM memory.                                                                        
<4>     BP_SUB   R/W1C    0x0         0         Set when a backpressure subtract is done with a        
                                                 supplied illegal value.
<5>     DC_OVR   R/W1C    0x0         0         Set when the data credits to the IOB overflow.         
<6>     CC_OVR   R/W1C    0x0         0         Set when the command credits to the IOB overflow.      
<7>     C_COLL   R/W1C    0x0         0         Set when the packet/WQE commands to be sent to IOB     
                                                 collides.
<8>     D_COLL   R/W1C    0x0         0         Set when the packet/WQE data to be sent to IOB         
                                                 collides.
<9>     BC_OVR   R/W1C    0x0         0         Set when the byte-count to send to IOB overflows.      
<10>    PQ_ADD   R/W1C    0x0         0         Set when a port-qos does an add to the count           
                                                 that causes the counter to wrap.
<11>    PQ_SUB   R/W1C    0x0         0         Set when a port-qos does an sub to the count           
                                                 that causes the counter to wrap.
<63:12> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===


*
*                  IPD_SUB_PORT_FCS = IPD Subtract Ports FCS Register
*
* When set '1' the port corresponding to the but set will subtract 4 bytes from the end of
* the packet.
*

     ==============================================================
     IPD_SUB_PORT_FCS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PORT_BIT  R/W      0xffffffff  0xffffffff    When set '1', the port corresponding to the bit   
                                                      position set, will subtract the FCS for packets
                                                      on that port. 
<35:32> NS        RAZ      NS           NS           Reserved                                          
<39:36> PORT_BIT2 R/W      0xf          0xf          When set '1', the port corresponding to the bit   
                                                      position set, will subtract the FCS for packets
                                                      on that port. 
<63:40> NS        RAZ      NS           NS           Reserved                                          
----------------------------------------------------------------------------------------------------
===


*
*                  IPD_QOS0_RED_MARKS = IPD QOS 0 Marks Red High Low
*
* Set the pass-drop marks for qos level.
*

     ==============================================================
     IPD_QOS0_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of    
                                                 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
<63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of   
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.                                                     
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_QOS1_RED_MARKS = IPD QOS 1 Marks Red High Low
*
* Set the pass-drop marks for qos level.
*

     ==============================================================
     IPD_QOS1_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of    
                                                 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
<63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of   
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.                                                     
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_QOS2_RED_MARKS = IPD QOS 2 Marks Red High Low
*
* Set the pass-drop marks for qos level.
*

     ==============================================================
     IPD_QOS2_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of    
                                                 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
<63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of   
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.                                                     
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_QOS3_RED_MARKS = IPD QOS 3 Marks Red High Low
*
* Set the pass-drop marks for qos level.
*

     ==============================================================
     IPD_QOS3_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of    
                                                 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
<63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of   
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.                                                     
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_QOS4_RED_MARKS = IPD QOS 4 Marks Red High Low
*
* Set the pass-drop marks for qos level.
*

     ==============================================================
     IPD_QOS4_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of    
                                                 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
<63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of   
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.                                                     
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_QOS5_RED_MARKS = IPD QOS 5 Marks Red High Low
*
* Set the pass-drop marks for qos level.
*

     ==============================================================
     IPD_QOS5_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of    
                                                 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
<63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of   
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.                                                     
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_QOS6_RED_MARKS = IPD QOS 6 Marks Red High Low
*
* Set the pass-drop marks for qos level.
*

     ==============================================================
     IPD_QOS6_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of    
                                                 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
<63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of   
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.                                                     
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_QOS7_RED_MARKS = IPD QOS 7 Marks Red High Low
*
* Set the pass-drop marks for qos level.
*

     ==============================================================
     IPD_QOS7_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of    
                                                 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
<63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of   
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.                                                     
----------------------------------------------------------------------------------------------------
===

*
* IPD_PORT_BP_COUNTERS_PAIR@ = MBUF Counters port Ports used to generate Back Pressure Per Port.
*

     ==============================================================
     IPD_PORT_BP_COUNTERS_PAIR(0..3,16..19) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:25> RSVRD    RAZ      NS          NS        Reserved                                           |   
<24:0>  CNT_VAL  RO       0x0         NS        Number of MBUFs being used by data on this port.   |   
----------------------------------------------------------------------------------------------------
===
   
 *
 *                  IPD_RED_PORT_ENABLE = IPD RED Port Enable
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_RED_PORT_ENABLE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>  PRT_ENB  R/W      0x0         0         The bit position will enable the corresponding      
                                                 Ports ability to have packets dropped by RED
                                                 probability.
<49:36> AVG_DLY  R/W      0x0         NS        Number (core clocks periods + 10) * 8 to wait       
                                                 before caluclating the moving average for wach
                                                 QOS level.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
<63:50> PRB_DLY  R/W      0x0         0         Number (core clocks periods + 68) * 8 to wait       
                                                 before caluclating the new packet drop
                                                 probability for each QOS level.
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_RED_QUE0_PARAM = IPD RED Queue-0 Parameters
*
* Value control the Passing and Dropping of packets by the red engine for QOS Level-0.
*

     ==============================================================
     IPD_RED_QUE0_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being  
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS0_RED_MARKS CSR.
<39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Average Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.                      
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
<47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Actual Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
<48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page     
                                                 Count in place of the Average for RED calculations.
<63:49> NS       RAZ      NS          NS        Reserved                                             
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_RED_QUE1_PARAM = IPD RED Queue-1 Parameters
*
* Value control the Passing and Dropping of packets by the red engine for QOS Level-1.
*

     ==============================================================
     IPD_RED_QUE1_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being  
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS1_RED_MARKS CSR.
<39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Average Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
<47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Actual Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
<48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page     
                                                 Count in place of the Average for RED calculations.
<63:49> NS       RAZ      NS          NS        Reserved                                             
----------------------------------------------------------------------------------------------------
===
*
*                  IPD_RED_QUE2_PARAM = IPD RED Queue-2 Parameters
*
* Value control the Passing and Dropping of packets by the red engine for QOS Level-2.
*

     ==============================================================
     IPD_RED_QUE2_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being  
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS2_RED_MARKS CSR.
<39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Average Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
<47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Actual Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
<48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page     
                                                 Count in place of the Average for RED calculations.
<63:49> NS       RAZ      NS          NS        Reserved                                             
----------------------------------------------------------------------------------------------------
===
*
*                  IPD_RED_QUE3_PARAM = IPD RED Queue-3 Parameters
*
* Value control the Passing and Dropping of packets by the red engine for QOS Level-3.
*

     ==============================================================
     IPD_RED_QUE3_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being  
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS3_RED_MARKS CSR.
<39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Average Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
<47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Actual Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
<48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page     
                                                 Count in place of the Average for RED calculations.
<63:49> NS       RAZ      NS          NS        Reserved                                             
----------------------------------------------------------------------------------------------------
===
*
*                  IPD_RED_QUE4_PARAM = IPD RED Queue-4 Parameters
*
* Value control the Passing and Dropping of packets by the red engine for QOS Level-4.
*

     ==============================================================
     IPD_RED_QUE4_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being  
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS4_RED_MARKS CSR.
<39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Average Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
<47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Actual Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
<48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page     
                                                 Count in place of the Average for RED calculations.
<63:49> NS       RAZ      NS          NS        Reserved                                             
----------------------------------------------------------------------------------------------------
===
*
*                  IPD_RED_QUE5_PARAM = IPD RED Queue-5 Parameters
*
* Value control the Passing and Dropping of packets by the red engine for QOS Level-5.
*

     ==============================================================
     IPD_RED_QUE5_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being  
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS5_RED_MARKS CSR.
<39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Average Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
<47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Actual Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
<48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page     
                                                 Count in place of the Average for RED calculations.
<63:49> NS       RAZ      NS          NS        Reserved                                             
----------------------------------------------------------------------------------------------------
===
*
*                  IPD_RED_QUE6_PARAM = IPD RED Queue-6 Parameters
*
* Value control the Passing and Dropping of packets by the red engine for QOS Level-6.
*

     ==============================================================
     IPD_RED_QUE6_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being  
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS6_RED_MARKS CSR.
<39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Average Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
<47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Actual Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
<48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page     
                                                 Count in place of the Average for RED calculations.
<63:49> NS       RAZ      NS          NS        Reserved                                             
----------------------------------------------------------------------------------------------------
===
*
*                  IPD_RED_QUE7_PARAM = IPD RED Queue-7 Parameters
*
* Value control the Passing and Dropping of packets by the red engine for QOS Level-7.
*

     ==============================================================
     IPD_RED_QUE7_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being  
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS7_RED_MARKS CSR.
<39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Average Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
<47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Actual Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
<48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page     
                                                 Count in place of the Average for RED calculations.
<63:49> NS       RAZ      NS          NS        Reserved                                             
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_PTR_COUNT = IPD Page Pointer Count
*
* Shows the number of WQE and Packet Page Pointers stored in the IPD.
*

     ==============================================================
     IPD_PTR_COUNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<6:0>   WQE_PCNT RO       0x0         0         Number of page pointers for WQE storage that are     
                                                 buffered in the IPD. The total count is the value
                                                 of this buffer plus the field [WQEV_CNT]. For
                                                 PASS-1 (which does not have the WQEV_CNT field)
                                                 when the value of this register is '0' there still
                                                 may be 1 pointer being help by IPD.
<13:7>  PKT_PCNT RO       0x0         0         This value plus PFIF_CNT plus 16 is the number       
                                                 of PKT Page Pointers in IPD.
<16:14> PFIF_CNT RO       0x0         0         See PKT_PCNT.                                        
<17>    WQEV_CNT RO       0x0         0         WQE Ptr Valid. This value is '1' when a WQE          
                                                 is being for use by the IPD. The value of this
                                                 field shoould be added to tha value of the
                                                 WQE_PCNT field, of this register, for a total
                                                 count of the WQE Page Pointers being held by IPD.
                                                 When IPD_CTL_STATUS[NO_WPTR] is set '1' this field
                                                 represents a Packet-Pointer NOT a WQE pointer.
                                                 PASS2 Field.
<18>    PKTV_CNT RO       0x0         0         PKT Ptr Valid. PASS2 Field                           
<63:19> NS       RAZ      NS          NS        Reserved                                             
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_BP_PRT_RED_END = IPD Backpressure Port RED Enable
*
* When IPD applies backpressure to a PORT and the corresponding bit in this register is set,
* the RED Unit will drop packets for that port.
*

     ==============================================================
     IPD_BP_PRT_RED_END Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<39:0>  PRT_ENB  R/W      0x0         0         The port corresponding to the bit position in this   
                                                 field, will allow RED to drop back when port level
                                                 backpressure is applied to the port. The applying
                                                 of port-level backpressure for this RED dropping
                                                 does not take into consideration the value of
                                                 IPD_PORT@_BP_PAGE_CNT[BP_ENB].
<63:40> NS       RAZ      NS          NS        Reserved                                             
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_QUE0_FREE_PAGE_CNT = IPD Queue0 Free Page Count
*
* Number of Free-Page Pointer that are available for use in the FPA for Queue-0.
*

     ==============================================================
     IPD_QUE0_FREE_PAGE_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  Q0_PCNT  RO       0x0         0         Number of Queue-0 Page Pointers Available.           
<63:32> NS       RAZ      NS          NS        Reserved                                             
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_CLK_COUNT = IPD Clock Count
*
* Counts the number of core clocks periods since the de-asserition of reset.
*

     ==============================================================
     IPD_CLK_COUNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  CLK_CNT  RO       0x0         0         This counter will be zeroed when reset is applied   
                                                 and will increment every rising edgge of the
                                                 core-clock. PASS2 FIELD.
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_PWP_PTR_FIFO_CTL = IPD's PWP Pointer FIFO Control
*
* Allows reading of the Page-Pointers stored in the IPD's PWP Fifo.
*

     ==============================================================
     IPD_PWP_PTR_FIFO_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   RADDR    R/W      0x0         0         Sets the address to read from in the pwp_fifo.       
                                                 Addresses 0 through 63 contain Packet-Pointers and
                                                 addresses 64 through 127 contain WQE-Pointers.
                                                 When IPD_CTL_STATUS[NO_WPTR] is set '1' addresses
                                                 64 through 127 are not valid.
<8>     CENA     R/W      0x1         1         Active low Chip Enable to the read port of the       
                                                 pwp_fifo. This bit also controls the MUX-select
                                                 that steers [RADDR] to the pwp_fifo.
                                                 *WARNING - Setting this field to '0' will allow
                                                 reading of the memories thorugh the PTR field,
                                                 but will cause unpredictable operation of the IPD
                                                 under normal operation.
<37:9>  PTR      RO       NS          NS        The output of the pwp_fifo.                          
<45:38> PRADDR   RO       NS          NS        Present FIFO Packet Read address.                    
<53:46> WRADDR   RO       NS          NS        Present FIFO WQE Read address.                       
<60:54> MAX_CNTS RO       0x40        0x40      Maximum number of Packet-Pointers or WQE-Pointers    
                                                 that COULD be in the FIFO.
                                                 When IPD_CTL_STATUS[NO_WPTR] is set '1' this field
                                                 only represents the Max number of Packet-Pointers,
                                                 WQE-Pointers are not used in this mode.
<63:61> NS       RAZ      NS          NS        Reserved                                             
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_PRC_HOLD_PTR_FIFO_CTL = IPD's PRC Holding Pointer FIFO Control
*
* Allows reading of the Page-Pointers stored in the IPD's PRC Holding Fifo.
*

     ==============================================================
     IPD_PRC_HOLD_PTR_FIFO_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<2:0>   RADDR    R/W      0x0         0         Sets the address to read from in the holding.        
                                                 fifo in the PRC. This FIFO holds Packet-Pointers
                                                 to be used for packet data storage.
<3>     CENA     R/W      0x1         1         Active low Chip Enable that controls the             
                                                 MUX-select that steers [RADDR] to the fifo.
                                                 *WARNING - Setting this field to '0' will allow
                                                 reading of the memories thorugh the PTR field,
                                                 but will cause unpredictable operation of the IPD
                                                 under normal operation.
<32:4>  PTR      RO       NS          NS        The output of the prc-holding-fifo.                  
<35:33> PRADDR   RO       NS          NS        Present Packet-Pointer read address.                 
<38:36> MAX_PKT  RO       0x5         0x5       Maximum number of Packet-Pointers that COULD be      
                                                 in the FIFO.
<63:39> NS       RAZ      NS          NS        Reserved                                             
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_PRC_PORT_PTR_FIFO_CTL = IPD's PRC PORT Pointer FIFO Control
*
* Allows reading of the Page-Pointers stored in the IPD's PRC PORT Fifo.
*

     ==============================================================
     IPD_PRC_PORT_PTR_FIFO_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<6:0>   RADDR    R/W      0x0         0         Sets the address to read from in the port            
                                                 fifo in the PRC. This FIFO holds Packet-Pointers
                                                 to be used for packet data storage.
<7>     CENA     R/W      0x1         1         Active low Chip Enable to the read port of the       
                                                 pwp_fifo. This bit also controls the MUX-select
                                                 that steers [RADDR] to the pwp_fifo.
                                                 *WARNING - Setting this field to '0' will allow
                                                 reading of the memories thorugh the PTR field,
                                                 but will cause unpredictable operation of the IPD
                                                 under normal operation.
<36:8>  PTR      RO       NS          NS        The output of the prc-port-ptr-fifo.                 
<43:37> MAX_PKT  RO       0x10        0x10      Maximum number of Packet-Pointers that are in        
                                                 in the FIFO.
<63:44> NS       RAZ      NS          NS        Reserved                                             
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_PKT_PTR_VALID = IPD's Packet Pointer Valid
*
* The value of the packet-pointer fetched and in the valid register.
*

     ==============================================================
     IPD_PKT_PTR_VALID Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<28:0>  PTR      RO       NS          NS        Pointer value.                                       
<63:29> NS       RAZ      NS          NS        Reserved                                             
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_WQE_PTR_VALID = IPD's WQE Pointer Valid
*
* The value of the WQE-pointer fetched and in the valid register.
*

     ==============================================================
     IPD_WQE_PTR_VALID Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<28:0>  PTR      RO       NS          NS        Pointer value.                                       
                                                 When IPD_CTL_STATUS[NO_WPTR] is set '1' this field
                                                 represents a Packet-Pointer NOT a WQE pointer.
<63:29> NS       RAZ      NS          NS        Reserved                                             
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_PORT@_BP_PAGE_CNT2 = IPD Port Backpressure Page Count
*
* The number of pages in use by the port that when exceeded, backpressure will be applied to the port.
*

     ==============================================================
     IPD_PORT(36..39)_BP_PAGE_CNT2 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<16:0>  PAGE_CNT R/W      0x0         0         The number of page pointers assigned to                
                                                 the port, that when exceeded will cause                                                       
                                                 back-pressure to be applied to the port.                                                      
                                                 This value is in 256 page-pointer increments,
                                                 (i.e. 0 = 0-page-ptrs, 1 = 256-page-ptrs,..)
<17>    BP_ENB   R/W      0x0         0         When set '1' BP will be applied, if '0' BP will        
                                                 not be applied to port.
<63:18> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
* IPD_PORT_BP_COUNTERS2_PAIR@ = MBUF Counters port Ports used to generate Back Pressure Per Port.
*

     ==============================================================
     IPD_PORT_BP_COUNTERS2_PAIR(36..39) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:25> RSVRD    RAZ      NS          NS        Reserved                                           |   
<24:0>  CNT_VAL  RO       0x0         NS        Number of MBUFs being used by data on this port.   |   
----------------------------------------------------------------------------------------------------
===
   
 *
 *                  IPD_RED_PORT_ENABLE2 = IPD RED Port Enable2
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_RED_PORT_ENABLE2 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>   PRT_ENB  R/W      0x0         0         Bits 3-0 cooresponds to ports 39-36. These bits      
                                                 have the same meaning as the PRT_ENB field of
                                                 IPD_RED_PORT_ENABLE.
<63:4>  NS       RAZ      NS          NS        Reserved                                             
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_BIST_STATUS = IPD BIST STATUS
*
* BIST Status for IPD's Memories.
*

     ==============================================================
     IPD_BIST_STATUS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     PWP      RO       0x0         0         PWP Memory Bist Status.                              
<1>     IPD_NEW  RO       0x0         0         IPD_NEW Memory Bist Status.                          
<2>     IPD_OLD  RO       0x0         0         IPD_OLD Memory Bist Status.                          
<3>     PRC_OFF  RO       0x0         0         PRC_OFF Memory Bist Status.                          
<4>     PWQ0     RO       0x0         0         PWQ0 Memory Bist Status.                             
<5>     PWQ1     RO       0x0         0         PWQ1 Memory Bist Status.                             
<6>     PBM_WORD RO       0x0         0         PBM_WORD Memory Bist Status.                         
<7>     PBM0     RO       0x0         0         PBM0 Memory Bist Status.                             
<8>     PBM1     RO       0x0         0         PBM1 Memory Bist Status.                             
<9>     PBM2     RO       0x0         0         PBM2 Memory Bist Status.                             
<10>    PBM3     RO       0x0         0         PBM3 Memory Bist Status.                             
<11>    IPQ_PBE0 RO       0x0         0         IPQ PBE0 Memory Bist Status.                         
<12>    IPQ_PBE1 RO       0x0         0         IPQ PBE1 Memory Bist Status.                         
<13>    PWQ_POW  RO       0x0         0         PWQ POW MEM Memory Bist Status.                      
<14>    PWQ_WP1  RO       0x0         0         PWQ WQE PAGE1 PTR Memory Bist Status.                
<15>    PWQ_WQED RO       0x0         0         PWQ PIP WQE DONE Memory Bist Status.                 
<16>    CSR_NCMD RO       0x0         0         CSR NCB Commands Memory Bist Status.                 
<17>    CSR_MEM  RO       0x0         0         CSR Register Memory Bist Status.                     
<63:18> NS       RAZ      NS          NS        Reserved                                             
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_SUB_PORT_QOS_CNT = IPD Subtract Port QOS Count
*
* Will add the value (CNT) to the indicated Port-QOS register (PORT_QOS). The value added must be
* be the 2's complement of the value that needs to be subtracted. 
*
*

     ==============================================================
     IPD_SUB_PORT_QOS_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  CNT      R/W      NS          0         The value to be added to the register selected         
                                                 in the PORT_QOS field.
<40:32> PORT_QOS R/W      NS          0         The port to add the CNT field to.                      
<63:41> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_PORT_QOS_INT@ = IPD PORT-QOS Interrupt
*
* See the description for IPD_PORT_QOS_@_CNT
*
* 0=P0-7; 1=P8-15; 2=P16-23; 3=P24-31; 4=P32-39; 5=P40-47; 6=P48-55; 7=P56-63
* Only ports used are: P0-3, P16-19, and P36-39. Therefore only IPD_PORT_QOS_INT0, IPD_PORT_QOS_INT2,
* and IPD_PORT_QOS_INT4 exist and, furthermore:  <63:32> of IPD_PORT_QOS_INT0 and IPD_PORT_QOS_INT2,
* and <31:0> of IPD_PORT_QOS_INT4 are reserved on O56 pass 1.
*
*

     ==============================================================
     IPD_PORT_QOS_INT(0, 2, 4) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  INT       R/W1C   0           0         Interrupt bits.                                        
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_PORT_QOS_INT_ENB@ = IPD PORT-QOS Interrupt Enable
*
* When the IPD_PORT_QOS_INT@[#] is '1' and IPD_PORT_QOS_INT_ENB@[#] is '1' a interrupt will be generated.
*
*

     ==============================================================
     IPD_PORT_QOS_INT_ENB(0, 2, 4) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ENB      R/W      0           1         Enable bits.                                           
----------------------------------------------------------------------------------------------------
===

*
*                  IPD_PORT_QOS_@_CNT = IPD Port@ QOS-0 Count
*
* A counter per port/qos. Counter are originzed in sequence where the first 8 counter (0-7) belong to Port-0
* QOS 0-7 respectively followed by port 1 at (8-15), etc..
* Ports 0-3, 16-19, 36-39
*

     ==============================================================
     IPD_PORT_QOS_(0..31,128..159,288..319)_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  CNT      RO       0x0         NS        The packet related count that is incremented as    |   
                                                  specified by IPD_SUB_PORT_QOS_CNT.                |
<63:32> WMARK    R/W      0xFFFFFFFF  NS        When the field CNT after being modified is equal to|   
                                                 or crosses this value (i.e. value was greater than |
                                                 then becomes less then, or value was less than and |
                                                 becomes greater than) the cooresponding bit in     |
                                                 IPD_PORT_QOS_INT@ is set.                          |
----------------------------------------------------------------------------------------------------
===






 *
 *                  KEY_INT_SUM = KEY's Interrupt Summary Register
 *
 * Contains the diffrent interrupt summary bits of the KEY.
 *

     ==============================================================
     KEY_INT_SUM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     KED0_SBE R/W1C     0           0                                                               
<1>     KED0_DBE R/W1C     0           0                                                               
<2>     KED1_SBE R/W1C     0           0                                                               
<3>     KED1_DBE R/W1C     0           0                                                               
<63:4>  NS       RAZ       NS          NS       Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  KEY_INT_ENB = KEY's Interrupt Enable
 *
 * The KEY's interrupt enable register.
 *

     ==============================================================
     KEY_INT_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     KED0_SBE R/W      0           0         When set (1) and bit 0 of the KEY_INT_SUM              
                                                 register is asserted the KEY will assert an                                        
                                                 interrupt.                                                                         
<1>     KED0_DBE R/W      0           0         When set (1) and bit 1 of the KEY_INT_SUM              
                                                 register is asserted the KEY will assert an                                        
                                                 interrupt.                                                                         
<2>     KED1_SBE R/W      0           0         When set (1) and bit 2 of the KEY_INT_SUM              
                                                 register is asserted the KEY will assert an                                        
                                                 interrupt.                                                                         
<3>     KED1_DBE R/W      0           0         When set (1) and bit 3 of the KEY_INT_SUM              
                                                 register is asserted the KEY will assert an                                        
                                                 interrupt.                                                                         
<63:4>  NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  KEY_CTL_STATUS = KEY's Control/Status Register
 *
 * The KEY's interrupt enable register.
 *

     ==============================================================
     KEY_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<6:0>   MEM0_ERR R/W      0           0         Causes a flip of the ECC bit associated 38:32          
                                                 respective to bit 6:0 of this field, for FPF                                                
                                                 FIFO 0.                                                                                     
<13:7>  MEM1_ERR R/W      0           0         Causes a flip of the ECC bit associated 38:32          
                                                 respective to bit 13:7 of this field, for FPF                                                       
                                                 FIFO 1.                                                                                     
<63:14> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===


 *
 *                  KEY_BIST_REG = KEY's BIST Status Register
 *
 * The KEY's BIST status for memories.
 *

     ==============================================================
     KEY_BIST_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     MEM0     RO       0           0         MEM - 0 bist status.                                   
<1>     MEM1     RO       0           0         MEM - 1 bist status.                                   
<2>     RRC      RO       0           0         RRC bist status.                                       
<63:3>  NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===


 * Specify the RSL base addresses for the block
 *
 *                  L2C_CFG = L2C Configuration
 *
 * Description: 
 *

     ==============================================================
     L2C_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     LRF_ARB_MODE  R/W  1           1     LRF Arbitration Mode:                                      
                                             0: Fixed Priority -                                                                  
                                                IOB memory requests are higher priority than all PP                              
                                                memory requests. Further, all PP request queues use 
                                                a weighted round robin arbitration scheme. 
                                                The PP memory requests can be programmably assigned to
                                                1(of 3) PP request queues(L2C_PPGRP register) where each 
                                                queue has programmable weighted rounds (L2C_GRPWRR[0/1] 
                                                registers). 
                                                Each weighted round only advances after ALL 'allowable'
                                                requests have been serviced. 
                                              
                                             1: Weighted Round Robin
                                                The IOB and 3 PP request queues use a weighted round robin 
                                                arbitration scheme.
                                                The PP memory requests can be programmably assigned to 
                                                1(of 3) PP request queues(L2C_PPGRP register) where each
                                                queue has programmable weighted rounds (L2C_GRPWRR[0/1] 
                                                registers). The IOB requests also has a programmable 
                                                weighted rounds (L2C_GRPWRR1[ILC_RMSK]).  
                                                Each weighted round only advances after ALL 'allowable' 
                                                requests have been serviced. 

<1>     RFB_ARB_MODE  R/W  1           1     RFB Arbitration Mode:                                      
                                             0: Fixed Priority -                                                                 
                                                IOB->PP requests are higher priority than 
                                                PP->IOB requests                                   
                                             1: Round Robin -                                                                    
                                                I/O requests from PP and IOB are serviced in 
                                                round robin                                     
<2>     RSP_ARB_MODE  R/W  1           1     RSP Arbitration Mode:                                      
                                             0: Fixed Priority [HP=RFB, RMCF, RHCF, STRSP, LP=STRSC]       
                                             1: Round Robin: [RFB(reflected I/O), RMCF(RdMiss),                                  
                                                RHCF(RdHit), STRSP(ST RSP w/ invalidate),                                        
                                                STRSC(ST RSP no invalidate)]                                                     
<6:3>   MWF_CRD       R/W  2           2     MWF Credit Threshold: When the remaining MWF credits       
                                             become less than or equal to the MWF_CRD, the L2C will
                                             assert l2c__lmi_mwd_hiwater_a to signal the LMC to give
                                             writes (victims) higher priority.                                                   

<7>     IDXALIAS      R/W  0           1     L2C Index Alias Enable                                     
                                             When set, the L2 Tag/Data Store will alias the 11-bit 
                                             index with the low order 11-bits of the tag.  
                                                index[17:7] =  (tag[28:18] ^ index[17:7])
                                             NOTE: This bit must only be modified at boot time, 
                                             when it can be guaranteed that no blocks have been 
                                             loaded into the L2 Cache. 

                                             The index aliasing is a performance enhancement feature
                                             which reduces the L2 cache thrashing experienced for
                                             regular stride references. 
 
                                             NOTE: The index alias is stored in the LFB and VAB, and
                                             its effects are reversed for memory references (Victims,
                                             STT-Misses and Read-Misses)
 
<8>     FPEN          R/W  0           0     [CYA] Forward Progress Counter Enable                      
                                             NOTE: Should NOT be exposed to customer! [FOR DEBUG ONLY]
                                             When set, enables the Forward Progress Counter to 
                                             prevent new LFB entries from enqueueing until ALL 
                                             current LFB entries have completed. 

<9>     FPEMPTY       R/W  0           0     [CYA] Forward Progress Counter Empty                       
                                             NOTE: Should NOT be exposed to customer! [FOR DEBUG ONLY]
                                             When set, if the forward progress counter expires,
                                             all new LFB-NQs are stopped UNTIL all current LFB 
                                             entries have completed. 
                                             When clear, if the forward progress counter expires,
                                             all new LFB-NQs are stopped UNTIL either
                                               a) all current LFB entries have completed.   
                                               b) another forward progress interval expires
                                             NOTE: We may want to FREEZE/HANG the system when
                                             we encounter an LFB entry cannot complete, and there
                                             may be times when we want to allow further LFB-NQs
                                             to be permitted to help in further analyzing the
                                             source                                   
 
<13:10> FPEXP         R/W  0           0     [CYA] Forward Progress Counter Exponent                    
                                             NOTE: Should NOT be exposed to customer! [FOR DEBUG ONLY]
                                             When FPEN is enabled and the LFB is empty, the
                                             forward progress counter (FPCNT) is initialized to: 
                                                FPCNT[24:0] = 2^(9+FPEXP)
                                             When the LFB is non-empty the FPCNT is decremented
                                             (every eclk interval). If the FPCNT reaches zero, 
                                             the LFB no longer accepts new requests until either
                                                a) all of the current LFB entries have completed 
                                                   (to ensure forward progress).
                                                b) FPEMPTY=0 and another forward progress count 
                                                   interval timeout expires. 
            
                                             EXAMPLE USE: If FPEXP=2, the FPCNT = 2048 eclks. 
                                             (For eclk=500MHz(2ns), this would be ~4us).  

<14>  DFILL_DIS       R/W  0           0     L2C Dual Fill Disable                                     
                                             When set, the L2C dual-fill performance feature is 
                                             disabled.  
                                             NOTE: This bit is only intended to evaluate the 
                                             effectiveness of the dual-fill feature. For OPTIMAL
                                             performance, this bit should ALWAYS be zero. 
                                             *** NOTE: O9N PASS1 Addition

<15> DPRES0           R/W  0           0     DDR0 Present/LMC0 Enable                                  
                                             When DPRES0 is set, LMC#0 is enabled(DDR0 pins at
                                             the BOTTOM of the chip are active). 

                                             NOTE: When both LMC ports are enabled(DPRES1=1/DPRES0=1), 
                                             see XOR_BANK bit to determine how a reference is 
                                             assigned to a DDR/LMC port. (Also, in dual-LMC configuration,
                                             the address sent to the targeted LMC port is the 
                                             address shifted right by one).
 
                                             NOTE: For power-savings, the DPRES0 is also used to 
                                             disable DDR0/LMC0 clocks. 
 
                                             *** NOTE: O56 PASS1 Addition

<16> DPRES1           R/W  0           0     DDR1 Present/LMC1 Enable                                  
                                             When DPRES1 is set, LMC#1 is enabled(DDR1 pins at
                                             the BOTTOM of the chip are active). 

                                             NOTE: When both LMC ports are enabled(DPRES1=1/DPRES0=1), 
                                             see XOR_BANK bit to determine how a reference is 
                                             assigned to a DDR/LMC port. (Also, in dual-LMC configuration,
                                             the address sent to the targeted LMC port is the 
                                             address shifted right by one).
 
                                             NOTE: For power-savings, the DPRES1 is also used to 
                                             disable DDR1/LMC1 clocks. 

                                             *** NOTE: O56 PASS1 Addition

<17>    XOR_BANK      R/W  0            0    L2C XOR Bank Bit                                          
                                             When both LMC's are enabled(DPRES1=1/DPRES0=1), this 
                                             bit determines how addresses are assigned to 
                                             LMC port(s). 
                                                 
                                                XOR_BANK|  LMC#
                                              ----------+---------------------------------
                                                  0     |   byte address[7] 
                                                  1     |   byte address[7] XOR byte address[12]

                                             Example: If both LMC ports are enabled (DPRES1=1/DPRES0=1) 
                                             and XOR_BANK=1, then addr[7] XOR addr[12] is used to determine 
                                             which LMC Port# a reference is directed to.
                                             
                                             *** NOTE: O56 PASS1 Addition

<18>    LBIST         R/W  0            0    L2C Data Store Long Bist Sequence                          
                                             When the previous state was '0' and SW writes a '1',
                                             the long bist sequence (enhanced 13N March) is performed. 
                                             SW can then read the L2C_CFG[BSTRUN] which will indicate
                                             that the long bist sequence is running. When BSTRUN-=0,
                                             the state of the L2D_BST[0-3] registers contain information 
                                             which reflects the status of the recent long bist sequence. 
                                             NOTE: SW must never write LBIST=0 while Long Bist is running
                                             (ie: when BSTRUN=1 never write LBIST=0).  

                                             NOTE: LBIST is disabled if the MIO_FUS_DAT2.BIST_DIS
                                             Fuse is blown. 
 
                                             *** NOTE: O56 PASS1 Addition

<19>    BSTRUN        RO  0             0    L2 Data Store Bist Running                                
                                             Indicates when the L2C HW Bist sequence(short or long) is
                                             running. [L2C ECC Bist FSM is not in the RESET/DONE state] 
                                             *** NOTE: O56 PASS1 Addition

<63:20> NS            RAZ  NS          NS    RESERVED                                                  
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2T_ERR = L2 Tag Errors
 *
 * Description: L2 Tag ECC SEC/DED Errors and Interrupt Enable
 *

     ==============================================================
     L2T_ERR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     ECC_ENA    R/W     0           1       L2 Tag ECC Enable                                        
                                               When set, enables 6-bit SEC/DED codeword for 19-bit 
                                               L2 Tag Arrays {V,D,L,TAG[33:18]}                                                  
<1>     SEC_INTENA R/W     0           1       L2 Tag ECC Single Error Correct(SEC) Interrupt           
                                               Enable bit. When set, allows interrupts to be
                                               reported on single bit (correctable) errors from
                                               the L2 Tag Arrays.                                                                
<2>     DED_INTENA R/W     0           1       L2 Tag ECC Double Error Detect(DED) Interrupt            
                                               Enable bit. When set, allows interrupts to be 
                                               reported on double bit (uncorrectable) errors from
                                               the L2 Tag Arrays.                                                        
<3>     SEC_ERR    R/W1C   0           0       L2T Single Bit Error corrected (SEC)                     
                                               During every L2 Tag Probe, all 8 sets Tag's (at a
                                               given index) are checked for single bit errors(SBEs). 
                                               This bit is set if ANY of the 8 sets contains an SBE. 
                                               SBEs are auto corrected in HW and generate an 
                                               interrupt(if enabled).                          

<4>     DED_ERR    R/W1C   0           0       L2T Double Bit Error detected (DED)                      
                                               During every L2 Tag Probe, all 8 sets Tag's (at a
                                               given index) are checked for double bit errors(DBEs). 
                                               This bit is set if ANY of the 8 sets contains a DBE. 
                                               DBEs also generated an interrupt(if enabled).                        

<10:5>  FSYN       RO      0           0       When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set,       
                                               the contents of this register contain the 6-bit 
                                               syndrome for the hit set only. 
                                               If (FSYN = 0), the SBE or DBE reported was for one of 
                                               the "non-hit" sets at the failing index(FADR). 

                                               NOTE: During a force-hit (L2T/L2D/L2T=1), the hit set
                                               is specified by the L2C_DBG[SET]. 

                                               If (FSYN != 0), the SBE or DBE reported was for the
                                               hit set at the failing index(FADR) and failing 
                                               set(FSET).

                                               SW NOTE: To determine which "non-hit" set was in error, 
                                               SW can use the L2C_DBG[L2T] debug feature to explicitly
                                               read the other sets at the failing index(FADR). When 
                                               (FSYN !=0), then the FSET contains the failing hit-set. 
                                               
                                               NOTE: A DED Error will always overwrite a SEC Error 
                                               SYNDROME and FADR).                                  

<20:11> FADR       RO      0           0       Failing L2 Tag Address (10-bit Index)                    
                                               When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set,
                                               the FADR contains the lower 10bit cacheline index 
                                               into the L2 Tag Store. 

<23:21> FSET       RO      0           0       Failing L2 Tag Hit Set# (1-of-8)                         
                                               When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set and
                                               (FSYN != 0), the FSET specifies the failing hit-set. 
                                               NOTE: During a force-hit (L2T/L2D/L2T=1), the hit-set
                                               is specified by the L2C_DBG[SET]. 

<24>    LCKERR     R/W1C   0           0       SW attempted to LOCK DOWN the last available set of      
                                               the INDEX (which is ignored by HW - but reported to SW).
                                               The LDD(L1 load-miss) for the LOCK operation is completed 
                                               successfully, however the address is NOT locked.

                                               NOTE: 'Available' sets takes the L2C_SPAR*[UMSK*]
                                               into account. For example, if diagnostic PPx has 
                                               UMSKx defined to only use SETs [1:0], and SET1 had
                                               been previously LOCKED, then an attempt to LOCK the
                                               last available SET0 would result in a LCKERR. (This
                                               is to ensure that at least 1 SET at each INDEX is
                                               not LOCKED for general use by other PPs).

<25>    LCK_INTENA R/W     0           1       L2 Tag Lock Error Interrupt Enable bit                   

<26>    LCKERR2    R/W1C   0           0       HW detected a case where a Rd/Wr Miss from PP#n          
                                               could not find an available/unlocked set (for 
                                               replacement).
                                               Most likely, this is a result of SW mixing SET 
                                               PARTITIONING with ADDRESS LOCKING. If SW allows 
                                               another PP to LOCKDOWN all SETs available to PP#n, 
                                               then a Rd/Wr Miss from PP#n will be unable
                                               to determine a 'valid' replacement set (since LOCKED 
                                               addresses should NEVER be replaced).
                                               If such an event occurs, the HW will select the smallest
                                               available SET(specified by UMSK'x)' as the replacement
                                               set, and the address is unlocked. 
                                               *** NOTE: PASS2 Addition

<27>   LCK_INTENA2 R/W     0           1       L2 Tag Lock Error2 Interrupt Enable bit                  
                                               *** NOTE: PASS2 Addition

<28>   FADRU      RO      0           0        Failing L2 Tag Upper Address Bit (Index[10])             
                                               When L2T_ERR[SEC_ERR] or L2T_ERR[DED_ERR] are set,
                                               the FADRU contains the upper(MSB bit) cacheline index 
                                               into the L2 Tag Store. 

<63:29> NS         RAZ     0           0       RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2D_ERR = L2 Data Errors
 *
 * Description: L2 Data ECC SEC/DED Errors and Interrupt Enable
 *

     ==============================================================
     L2D_ERR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     ECC_ENA     R/W    0           1  L2 Data ECC Enable                                            
                                          When set, enables 10-bit SEC/DED codeword for 128bit L2 
                                          Data Arrays.                                                           
<1>     SEC_INTENA  R/W    0           1  L2 Data ECC Single Error Correct(SEC) Interrupt Enable bit    
                                          When set, allows interrupts to be reported on single bit                                 
                                          (correctable) errors from the L2 Data Arrays.                                         
<2>     DED_INTENA  R/W    0           1  L2 Data ECC Double Error Detect(DED) Interrupt Enable bit     
                                          When set, allows interrupts to be reported on double bit                                 
                                          (uncorrectable) errors from the L2 Data Arrays.                                             
<3>     SEC_ERR     R/W1C  0           0  L2D Single Error corrected (SEC)                              
<4>     DED_ERR     R/W1C  0           0  L2D Double Error detected (DED)                               
                      
<5>     BMHCLSEL    R/W    0           0  L2 Bit Map Half CacheLine ECC Selector                        
                                          *** NOTE: PASS2 Addition
                                          When L2C_DBG[L2T]=1/L2D_ERR[ECC_ENA]=0, the BMHCLSEL selects
                                          which half cacheline to conditionally latch into 
                                          the L2D_FSYN0/L2D_FSYN1 registers when an LDD command
                                          is detected from the diagnostic PP (see L2C_DBG[PPNUM]).
                                          0: OW[0-3] ECC (from first 1/2 cacheline) is selected to
                                             be conditionally latched into the L2D_FSYN0/1 CSRs. 
                                          1: OW[4-7] ECC (from last 1/2 cacheline) is selected to 
                                             be conditionally latched into
                                             the L2D_FSYN0/1 CSRs.
                                               
<63:6>  NS          RAZ    0           0  RESERVED                                                      
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2D_FADR = L2 Failing Address
 *
 * Description: L2 Data ECC SEC/DED Failing Address
 *

     ==============================================================
     L2D_FADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<10:0>  FADR           RO  0           0       Failing L2 Data Store Lower Index bits                    
                                               (NOTE: L2 Data Store Index is for each 1/2 cacheline)
                                                  {FADRU, FADR[10:1]}: cacheline index[17:7]
                                                  FADR[0]: 1/2 cacheline index
                                               NOTE: FADR[1] is used to select between upper/lower 1MB
                                               physical L2 Data Store banks. 
<13:11> FSET           RO  0           0       Failing SET#                                              
<17:14> FOWMSK         RO  0           0       Failing OW Mask (which one of 4 OWs contained SEC/DED     
                                                error)
<18>    FADRU          RO  0           0       Failing L2 Data Store Upper Index bit(MSB)                
<63:19> NS             RAZ 0           0       RESERVED                                                  

NOTES: When L2D_SEC_ERR or L2D_DED_ERR are set, this field contains the failing L2 Data store index. 
       (A DED Error will always overwrite a SEC Error SYNDROME and FADR). 
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2D_FSYN0 = L2 Failing Syndrome [OW0,4 / OW1,5] 
 *
 * Description: L2 Data ECC SEC/DED Failing Syndrome for lower cache line
 *

     ==============================================================
     L2D_FSYN0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<9:0>   FSYN_OW0      RO   0           0         Failing L2 Data Store SYNDROME OW[0,4]                 
                                                 When L2D_ERR[ECC_ENA]=1 and either L2D_ERR[SEC_ERR] 
                                                 or L2D_ERR[DED_ERR] are set, this field represents 
                                                 the failing OWECC syndrome for the half cacheline
                                                 indexed by L2D_FADR[FADR]. 
                                                 NOTE: The L2D_FADR[FOWMSK] further qualifies which
                                                 OW lane(1of4) detected the error.  

                                                 When L2C_DBG[L2T]=1 and L2D_ERR[ECC_ENA]=0, an LDD
                                                 (L1 load-miss) from the diagnostic PP will conditionally 
                                                 latch the raw OWECC for the selected half cacheline.
                                                 (see: L2D_ERR[BMHCLSEL]

<19:10> FSYN_OW1      RO   0           0         Failing L2 Data Store SYNDROME OW[1,5]                 
                                                 When L2D_ERR[ECC_ENA]=1 and either L2D_ERR[SEC_ERR] 
                                                 or L2D_ERR[DED_ERR] are set, this field represents 
                                                 the failing OWECC syndrome for the half cacheline
                                                 indexed by L2D_FADR[FADR].
                                                 NOTE: The L2D_FADR[FOWMSK] further qualifies which
                                                 OW lane(1of4) detected the error.  

                                                 When L2C_DBG[L2T]=1 and L2D_ERR[ECC_ENA]=0, an LDD
                                                 command from the diagnostic PP will conditionally latch
                                                 the raw OWECC for the selected half cacheline.
                                                 (see: L2D_ERR[BMHCLSEL]


<63:20> NS            RAZ  0           0         RESERVED                                               

 NOTES: When L2D_SEC_ERR or L2D_DED_ERR are set, this field contains the failing L2 Data ECC 10b syndrome. 
       (A DED Error will always overwrite a SEC Error SYNDROME and FADR). 
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2D_FSYN1 = L2 Failing Syndrome [OW2,6 / OW3,7]
 *
 * Description: L2 Data ECC SEC/DED Failing Syndrome for upper cache line
 *

     ==============================================================
     L2D_FSYN1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<9:0>   FSYN_OW2   RO      0           0         Failing L2 Data Store SYNDROME OW[2,5]                 
<19:10> FSYN_OW3   RO      0           0         Failing L2 Data Store SYNDROME OW[3,7]                 
<63:20> NS         RAZ     0           0         RESERVED                                               

NOTES: When L2D_SEC_ERR or L2D_DED_ERR are set, this field contains the failing L2 Data ECC 10b syndrome. 
       (A DED Error will always overwrite a SEC Error SYNDROME and FADR). 
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_DBG = L2C DEBUG Register
 *
 * Description: L2C Tag/Data Store Debug Register
 *

     ==============================================================
     L2C_DBG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     L2T           R/W   0           0  When enabled, L2 Tag information {V,D,L,U,phys_addr[33:18]}  
                                           is returned on the data bus starting at +32(and +96) bytes 
                                           offset from the beginning of cacheline when an LDD
                                           (L1 load-miss) command is issued from a PP determined by 
                                           the L2C_DBG[PPNUM] field. 
                                           The selected L2 set# is determined by the L2C_DBG[SET] 
                                           field, and the L2 index is determined from the 
                                           phys_addr[17:7] associated with the LDD command.                 
                                           This 'L2 force-hit' will NOT alter the current L2 Tag
                                           state OR the DuTag state.
                                           NOTE: The diagnostic PP should issue a d-stream load
                                           to an aligned cacheline+0x20(+0x60) in order to have the 
                                           return VDLUTAG information (in OW2/OW6) written directly 
                                           into the proper PP register. The diagnostic PP should also 
                                           flush it's local L1 cache after use(to ensure data 
                                           coherency).
                                           NOTE: The position of the VDLUTAG data in the destination
                                           register is dependent on the endian mode(big/little).  

                                           NOTE: N3K-Pass2 modification. (This bit's functionality 
                                           has changed since Pass1-in the following way). 
                                           NOTE: (For L2C BitMap testing of L2 Data Store OW ECC): 
                                           If L2D_ERR[ECC_ENA]=0, the OW ECC from the selected 
                                           half cacheline (see: L2D_ERR[BMHCLSEL] is also 
                                           conditionally latched into the L2D_FSYN0/1 CSRs if an 
                                           LDD command is detected from the diagnostic PP(L2C_DBG[PPNUM]). 

<1>     L2D           R/W   0           0  When enabled (and L2C_DBG[L2T]=0), fill data is               
                                           returned directly from the L2 Data Store                                                    
                                           (regardless of hit/miss) when an LDD(L1 load-miss) command 
                                           is issued from a PP determined by the L2C_DBG[PPNUM]
                                           field. The selected set# is determined by the                      
                                           L2C_DBG[SET] field, and the index is determined                                             
                                           from the address[17:7] associated with the LDD                             
                                           command.                                                                 
                                           This 'force-hit' will NOT alter the current L2 Tag                                          
                                           state OR the DuTag state.                                                                   
<2>     FINV          R/W   0           0  Flush-Invalidate.                                             
                                           When flush-invalidate is enable (FINV=1), all STF                                           
                                           (L1 store-miss) commands generated from the diagnostic PP
                                           (L2C_DBG[PPNUM]) will invalidate the specified set                           
                                           (L2C_DBG[SET]) at the index specified in the STF                                            
                                           address[17:7]. If a dirty block is detected (D=1), it is                                    
                                           written back to memory. The contents of the invalid                                         
                                           L2 Cache line is also 'scrubbed' with the STF write data.                                   

                                           NOTE: If L2C_CFG[IDXALIAS]=1, the index specified in 
                                           STF address[17:7] refers to the 'aliased' address. 
                                              
                                           NOTE: An STF command with write data=ZEROES can be                                          
                                           generated by SW using the Prefetch instruction with                                         
                                           Hint=30d "prepare for Store", followed by a SYNCW.                                          
                                           What is seen at the L2C as an STF w/wrdcnt=0 with all                           
                                           of its mask bits clear (indicates zero-fill data).                                          
                                           A flush-invalidate will 'force-hit' the L2 cache at                                         
                                           [index,set] and invalidate the entry (V=0/D=0/L=0/U=0).                         
                                           If the cache block is dirty, it is also written back                                  
                                           to memory. The DuTag state is probed/updated as normal                     
                                           for an STF request.

                                           TYPICAL APPLICATIONS:                                                             
                                              1) L2 Tag/Data ECC SW Recovery                                                   
                                              2) Cache Unlocking
                                           
                                           NOTE: If the cacheline had been previously LOCKED(L=1), 
                                           a flush-invalidate operation will explicitly UNLOCK 
                                           (L=0) the set/index specified.  
                         
                                           NOTE: The diagnostic PP cores can generate STF 
                                           commands to the L2 Cache whenever all 128 bytes in a 
                                           block are written. SW must take this into consideration
                                           to avoid 'errant' Flush-Invalidates. 

<5:3>   SET           R/W   0           0  When L2C_DBG[L2T] or L2C_DBG[L2D] or L2C_DBG[FINV]             
                                           is enabled, this field determines 1-of-n targeted                                           
                                           sets to act upon.
                                           NOTE: L2C_DBG[SET] must never equal a crippled or 
                                           unusable set (see UMSK* registers and Cripple mode
                                           fuses). 
                                                                               
<9:6>   PPNUM         R/W   0           0  When L2C_DBG[L2T] or L2C_DBG[L2D] or L2C_DBG[FINV]             
                                           is enabled, this field determines which one-of-12                                           
                                           PPs is selected as the diagnostic PP.
                                           NOTE: Valid Encodings are [0..11] and using [12..15]
                                           is illegal.                 

<10>    LFB_DMP       R/W   0           0  LFB Dump Enable: When written(=1), the contents of             
                                           the LFB specified by LFB_ENUM[3:0] are captured                                             
                                           into the L2C_LFB(0/1/2) registers. 
                                           NOTE: Some fields of the LFB entry are unpredictable
                                           and dependent on usage. This is only intended to be
                                           used for HW debug.                           

<14:11> LFB_ENUM      R/W   0           0  Specifies the LFB Entry# which is to be captured.              
<63:15> NS            RAZ   0           0  RESERVED                                                       

NOTES: 
    (1) When using the L2T, L2D or FINV Debug probe feature, the LDD command WILL NOT update the DuTags.
    (2) L2T, L2D, FINV MUST BE mutually exclusive (only one set)
    (3) Force Invalidate is intended as a means for SW to invalidate the L2 Cache while also writing back
        dirty data to memory to maintain coherency. 
    (4) L2 Cache Lock Down feature MUST BE disabled (L2C_LCKBASE[LCK_ENA]=0) if ANY of the L2C debug
        features (L2T, L2D, FINV) are enabled.
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_LFB0 = L2C LFB DEBUG 0 Register
 *
 * Description: L2C LFB Contents (Status Bits)
 *

     ==============================================================
     L2C_LFB0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     VLD           RO   0           0         LFB Valid                                              
<4:1>   CMD           RO   0           0         LFB Command                                            
<13:5>  SID           RO   0           0         LFB Source ID                                          
<17:14> VABNUM        RO   0           0         VAB# used for LMC Miss Launch(valid only if VAM=1)     
<20:18> SET           RO   0           0         SET# used for DS-OP (hit=hset/miss=rset)               
<21>    IHD           RO   0           0         LFB Head of List Indicator                             
<22>    ITL           RO   0           0         LFB Tail of List Indicator                             
<26:23> INXT          RO   0           0         Next LFB Pointer(invalid if ITL=1)                     
<27>    VAM           RO   0           0         Valid Full Address Match Status                        
<28>    STCFL         RO   0           0         LFB STC=FAIL Status                                    
<29>    STINV         RO   0           0         LFB ST* Invalidate Status                              
<30>    STPND         RO   0           0         LFB ST* Pending Status                                 
<31>    STCPND        RO   0           0         LFB STC Pending Status                                 
<63:32> NS            RAZ  0           0         RESERVED                                               
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_LFB1 = L2C LFB DEBUG 1 Register
 *
 * Description: L2C LFB Contents (Wait Bits)
 *

     ==============================================================
     L2C_LFB1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     VLD           RO     0         0  LFB Valid                                                     
<1>     WTPRB         RO     0         0  LFB Waiting for Probe                                         
<2>     PRBRTY        RO     0         0  Probe-Retry Detected - waiting for probe completion           
<3>     WTMFL         RO     0         0  LFB Waiting for Memory Fill completion to MRB                 
<4>     WTVTM         RO     0         0  LFB Waiting for Victim Read L2 DS-RD completion               
<5>     WTSTRSC       RO     0         0  LFB Waiting for ST RSC-Only to be issued on RSP               
                                          (no-invalidates)                                                     
<6>     WTSTRSP       RO     0         0  LFB Waiting for ST RSC/RSD to be issued on RSP                
                                          (with invalidates)                                                   
<7>     WTSTDT        RO     0         0  LFB Waiting for all ST write Data to arrive on XMD bus        
<8>     WTRDA         RO     0         0  LFB Waiting for Read-Miss L2 DS-WR completion                 
<9>     WTSTM         RO     0         0  LFB Waiting for Write-Miss L2 DS-WR completion                
<10>    WTWRM         RO     0         0  LFB Waiting for Write-Miss L2 DS-WR completion                
<11>    WTWHF         RO     0         0  LFB Waiting for Write-Hit Full L2 DS-WR completion            
<12>    WTWHP         RO     0         0  LFB Waiting for Write-Hit Partial L2 DS-WR completion         
<13>    WTDQ          RO     0         0  LFB Waiting for LFB-DQ                                        
<14>    WTDW          RO     0         0  LFB Waiting for DS-WR completion                              
<15>    WTRSP         RO     0         0  LFB Waiting for RSC Response [FILL,STRSP] completion          
<17:16> BID           RO     0         0  LFB DS Bid#                                                   
<18>    DSGOING       RO     0         0  LFB DS Going (in flight)                                      
<63:19> NS            RAZ    0         0  RESERVED                                                      
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_LFB2 = L2C LFB DEBUG 2 Register
 *
 * Description: L2C LFB Contents Tag/Index
 *

     ==============================================================
     L2C_LFB2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<10:0>  LFB_IDX      RO    0           0         LFB IDX[17:7]                                          
<26:11> LFB_TAG      RO    0           0         LFB TAG[33:18]                                         
<63:27> NS           RAZ   0           0         RESERVED                                               
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_DUT = L2C DUTAG Register
 *
 * Description: L2C Duplicate Tag State Register
 *

     ==============================================================
     L2C_DUT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<28:0>  DT_TAG     RO      0           0      Duplicate L1 Tag[35:7] latched in for previous            
                                              LDD(L1 load-miss) command sourced by diagnostic PP.
 
<29>    DT_VLD     RO      0           0      Duplicate L1 Tag Valid bit latched in for previous        
                                              LDD(L1 load-miss) command sourced by diagnostic PP.                   
 
<30>    NS         RAZ     0           0      RESERVED                                                  
 
<31>    DTENA      R/W     0           0      DuTag Diagnostic read enable.                             
                                              When L2C_DUT[DTENA]=1, all LDD(L1 load-miss) 
                                              commands issued from the diagnostic PP 
                                              (L2C_DBG[PPNUM]) will capture the DuTag state (V|L1TAG)
                                              of the PP#(specified in the LDD address[29:26] into 
                                              the L2C_DUT CSR register. This allows the diagPP to
                                              read ALL DuTags (from any PP). 
                                              The DuTag Set# to capture is extracted from the LDD 
                                              address[25:20]. The diagnostic PP would issue the 
                                              LDD then read the L2C_DUT register (one at a time). 
                                              This LDD 'L2 force-hit' will NOT alter the current L2 
                                              Tag State OR the DuTag state.

                                              NOTE: For O9N(O56) the DuTag SIZE has doubled (to 16KB)
                                              where each DuTag is organized as 2x 64-way entries.
                                              The LDD address[7] determines which 1(of-2) internal 
                                              64-ways to select.
                                               
                                              The fill data is returned directly from the L2 Data 
                                              Store(regardless of hit/miss) when an LDD command
                                              is issued from a PP determined by the L2C_DBG[PPNUM] 
                                              field. The selected L2 Set# is determined by the 
                                              L2C_DBG[SET] field, and the index is determined                                          
                                              from the address[17:7] associated with the LDD                          
                                              command.                                                              
                                              This 'L2 force-hit' will NOT alter the current L2 Tag
                                              state OR the DuTag state. 
 
                                              NOTE: In order for the DiagPP to generate an LDD command
                                              to the L2C, it must first force an L1 Dcache flush. 

<63:32> NS           RAZ   0           0      RESERVED                                                  

NOTES: 
    (1) When using the L2T, L2D or FINV Debug probe feature, an LDD command issued by the diagnostic PP
        WILL NOT update the DuTags.
    (2) L2T, L2D, FINV MUST BE mutually exclusive (only one enabled at a time).
    (3) Force Invalidate is intended as a means for SW to invalidate the L2 Cache while also writing back
        dirty data to memory to maintain coherency. (A side effect of FINV is that an LDD L2 fill is 
        launched which fills data into the L2 DS).
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_LCKBASE = L2C LockDown Base Register
 *
 * Description: L2C LockDown Base Register 
 *

     ==============================================================
     L2C_LCKBASE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     LCK_ENA        R/W    0        0  L2 Cache Lock Enable                                          
                                          When the LCK_ENA=1, all LDI(I-stream Load) or                                           
                                          LDD(L1 load-miss) commands issued from the                                                 
                                          diagnostic PP (specified by the L2C_DBG[PPNUM]),                                        
                                          which fall within a predefined lockdown address                                          
                                          range (specified by: [lck_base:lck_base+lck_offset])                                       
                                          are LOCKED in the L2 cache. The LOCKED state is                                         
                                          denoted using an explicit L2 Tag bit (L=1).

                                          If the LOCK request L2-Hits (on ANY SET), then data is 
                                          returned from the L2 and the hit set is updated to the 
                                          LOCKED state. NOTE: If the Hit Set# is outside the 
                                          available sets for a given PP (see UMSK'x'), the
                                          the LOCK bit is still SET. If the programmer's intent
                                          is to explicitly LOCK addresses into 'available' sets,
                                          care must be taken to flush-invalidate the cache first
                                          (to avoid such situations). Not following this procedure
                                          can lead to LCKERR2 interrupts. 
                                                                                                                                
                                          If the LOCK request L2-Misses, a replacment set is 
                                          chosen(from the available sets (UMSK'x').
                                          If the replacement set contains a dirty-victim it is                                       
                                          written back to memory. Memory read data is then written                              
                                          into the replacement set, and the replacment SET is                                        
                                          updated to the LOCKED state(L=1).   
                                          NOTE: SETs that contain LOCKED addresses are                                               
                                          excluded from the replacement set selection algorithm.
                                
                                          NOTE: The LDD command will allocate the DuTag as normal.

                                          NOTE: If L2C_CFG[IDXALIAS]=1, the address is 'aliased' first
                                          before being checked against the lockdown address                                        
                                          range. To ensure an 'aliased' address is properly locked, 
                                          it is recommmended that SW preload the 'aliased' locked adddress
                                          into the L2C_LCKBASE[LCK_BASE] register (while keeping 
                                          L2C_LCKOFF[LCK_OFFSET]=0). 
                                          
                                          NOTE: The OCTEON(N3) implementation only supports 16GB(MAX) of 
                                          physical memory. Therefore, only byte address[33:0] are used
                                          (ie: address[35:34] are ignored).

<3:1>   NS             RAZ    0        0  RESERVED                                                       

<30:4>  LCK_BASE       R/W    0        0  Base Memory block address[33:7]. Specifies the                 
                                          starting address of the lockdown region.                                          

<63:31> NS             RAZ    0        0  RESERVED                                                       
 
NOTES: 
    (1) SW RESTRICTION #1: SW must manage the L2 Data Store lockdown space such that at least 1
        set per cache line remains in the 'unlocked' (normal) state to allow general caching operations.
        If SW violates this restriction, a status bit is set (LCK_ERR) and an interrupt is posted.  
        [this limits the total lockdown space to 7/8ths of the total L2 data store = 896KB]
    (2) IOB initiated LDI commands are ignored (only PP initiated LDI/LDD commands are considered
        for lockdown). 
    (3) To 'unlock' a locked cache line, SW can use the FLUSH-INVAL CSR mechanism (see L2C_DBG[FINV]). 
    (4) LCK_ENA MUST only be activated when debug modes are disabled (L2C_DBG[L2T], L2C_DBG[L2D], L2C_DBG[FINV]).
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_LCKOFF = L2C LockDown OFFSET Register
 *
 * Description: L2C LockDown OFFSET Register 
 *

     ==============================================================
     L2C_LCKOFF Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<9:0>  LCK_OFFSET  R/W     0           0      LockDown block Offset. Used in determining                
                                                the ending block address of the lockdown                                      
                                                region:                                                                       
                                                End Lockdown block Address[33:7] =                                            
                                                LCK_BASE[33:7]+LCK_OFFSET[9:0]                                        
<63:10> NS         RAZ     0           0      RESERVED                                                  

NOTES: 
    (1) The generation of the end lockdown block address will 'wrap'.
    (2) The minimum granularity for lockdown is 1 cache line (= 128B block)
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_SPAR0 = L2 Set Partitioning Register (PP0-3)
 *
 * Description: L2 Set Partitioning Register 
 *

     ==============================================================
     L2C_SPAR0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   UMSK0     R/W      0           0        PP[0] L2 'DO NOT USE' set partition mask                
<15:8>  UMSK1     R/W      0           0        PP[1] L2 'DO NOT USE' set partition mask                
<23:16> UMSK2     R/W      0           0        PP[2] L2 'DO NOT USE' set partition mask                
<31:24> UMSK3     R/W      0           0        PP[3] L2 'DO NOT USE' set partition mask                
<63:32> NS        RAZ      0           0        RESERVED                                                

 NOTES:
    - When a bit is set in the UMSK'x' register, a memory command issued from PP='x' will NOT select that
      set for replacement.
    - There MUST ALWAYS BE at least 1 bit clear in each UMSK'x' register for proper L2 cache operation 
    - NOTES: When L2C FUSE[136] is blown(CRIP_1024K), then SETS#7-4 are SET in all UMSK'x' registers 
             When L2C FUSE[137] is blown(CRIP_512K), then SETS#7-2 are SET in all UMSK'x' registers 
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_SPAR1 = L2 Set Partitioning Register (PP4-7)
 *
 * Description: L2 Set Partitioning Register 
 *

     ==============================================================
     L2C_SPAR1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   UMSK4      R/W     0           0        PP[4] L2 'DO NOT USE' set partition mask                
<15:8>  UMSK5      R/W     0           0        PP[5] L2 'DO NOT USE' set partition mask                
<23:16> UMSK6      R/W     0           0        PP[6] L2 'DO NOT USE' set partition mask                
<31:24> UMSK7      R/W     0           0        PP[7] L2 'DO NOT USE' set partition mask                
<63:32> NS         RAZ     0           0        RESERVED                                                

 NOTES:
    - When a bit is set in the UMSK'x' register, a memory command issued from PP='x' will NOT select that
      set for replacement.
    - There should ALWAYS BE at least 1 bit clear in each UMSK'x' register for proper L2 cache operation 
    - NOTES: When L2C FUSE[136] is blown(CRIP_1024K), then SETS#7-4 are SET in all UMSK'x' registers 
             When L2C FUSE[137] is blown(CRIP_512K), then SETS#7-2 are SET in all UMSK'x' registers 
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_SPAR2 = L2 Set Partitioning Register (PP8-11)
 *
 * Description: L2 Set Partitioning Register 
 *

     ==============================================================
     L2C_SPAR2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   UMSK8      R/W     0           0         PP[8] L2 'DO NOT USE' set partition mask               
<15:8>  UMSK9      R/W     0           0         PP[9] L2 'DO NOT USE' set partition mask               
<23:16> UMSK10     R/W     0           0         PP[10] L2 'DO NOT USE' set partition mask              
<31:24> UMSK11     R/W     0           0         PP[11] L2 'DO NOT USE' set partition mask              
<63:32> NS         RAZ     0           0         RESERVED                                               

NOTES:
    - When a bit is set in the UMSK'x' register, a memory command issued from PP='x' will NOT select that
      set for replacement.
    - There should ALWAYS BE at least 1 bit clear in each UMSK'x' register for proper L2 cache operation 
    - NOTES: When L2C FUSE[136] is blown(CRIP_1024K), then SETS#7-4 are SET in all UMSK'x' registers 
             When L2C FUSE[137] is blown(CRIP_512K), then SETS#7-2 are SET in all UMSK'x' registers 
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_SPAR4 = L2 Set Partitioning Register (IOB)
 *
 * Description: L2 Set Partitioning Register 
 *

     ==============================================================
     L2C_SPAR4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   UMSKIOB    R/W     0           0         IOB L2 'DO NOT USE' set partition mask                 
<63:8>  NS         RAZ     0           0         RESERVED                                               

NOTES:
    - When a bit is set in the UMSK'x' register, a memory command issued from PP='x' will NOT select that
      set for replacement.
    - There should ALWAYS BE at least 1 bit clear in each UMSK'x' register for proper L2 cache operation 
    - NOTES: When L2C FUSE[136] is blown(CRIP_1024K), then SETS#7-4 are SET in all UMSK'x' registers 
             When L2C FUSE[137] is blown(CRIP_512K), then SETS#7-2 are SET in all UMSK'x' registers 
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_PFCTL = L2 Performance Counter Control Register
 *
 * Description: Controls the actions of the 4 Performance Counters
 *

     ==============================================================
     L2C_PFCTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>   CNT0SEL    R/W     0           0         Performance Counter 0 Event Selector                   
                                                 (see list of selectable events to count in NOTES)   
<6>     CNT0CLR    R/W     0           0         Performance Counter 0 Clear                            
                                                 When the CSR write occurs, if this bit is set,
                                                 the performance counter is cleared. Otherwise,
                                                 it will resume counting from its current value.  
<7>     CNT0ENA    R/W     0           0         Performance Counter 0 Enable                           
                                                 When this bit is set, the performance counter 
                                                 is enabled.   

<13:8>  CNT1SEL    R/W     0           0         Performance Counter 1 Event Selector                   
                                                 (see list of selectable events to count in NOTES)   
<14>    CNT1CLR    R/W     0           0         Performance Counter 1 Clear                            
                                                 When the CSR write occurs, if this bit is set,
                                                 the performance counter is cleared. Otherwise,
                                                 it will resume counting from its current value.  
<15>    CNT1ENA    R/W     0           0         Performance Counter 1 Enable                           
                                                 When this bit is set, the performance counter 
                                                 is enabled.    

<21:16> CNT2SEL    R/W     0           0         Performance Counter 2 Event Selector                   
                                                 (see list of selectable events to count in NOTES)   
<22>    CNT2CLR    R/W     0           0         Performance Counter 2 Clear                            
                                                 When the CSR write occurs, if this bit is set,
                                                 the performance counter is cleared. Otherwise,
                                                 it will resume counting from its current value.  
<23>    CNT2ENA    R/W     0           0         Performance Counter 2 Enable                           
                                                 When this bit is set, the performance counter 
                                                 is enabled.    

<29:24> CNT3SEL    R/W     0           0         Performance Counter 3 Event Selector                   
                                                 (see list of selectable events to count in NOTES)   
<30>    CNT3CLR    R/W     0           0         Performance Counter 3 Clear                            
                                                 When the CSR write occurs, if this bit is set,
                                                 the performance counter is cleared. Otherwise,
                                                 it will resume counting from its current value.  
<31>    CNT3ENA    R/W     0           0         Performance Counter 3 Enable                           
                                                 When this bit is set, the performance counter 
                                                 is enabled.    

<32>    CNT0RDCLR  R/W     0           0         Performance Counter 0 Read Clear                       
                                                 When set, all CSR reads of the L2C_PFC0 
                                                 register will 'auto-clear' the counter. This allows 
                                                 SW to maintain accurate 'cumulative' counters. 
                                                 NOTE: If the CSR read occurs in the same cycle as 
                                                 the 'event' to be counted, the counter will
                                                 properly reflect the event. 
                                                 *** NOTE: PASS2 Addition

<33>    CNT1RDCLR  R/W     0           0         Performance Counter 1 Read Clear                       
                                                 When set, all CSR reads of the L2C_PFC1
                                                 register will auto-clear the counter. This allows 
                                                 SW to maintain 'cumulative' counters in SW. 
                                                 NOTE: If the CSR read occurs in the same cycle as 
                                                 the 'event' to be counted, the counter will
                                                 properly reflect the event. 
                                                 *** NOTE: PASS2 Addition

<34>    CNT2RDCLR  R/W     0           0         Performance Counter 2 Read Clear                       
                                                 When set, all CSR reads of the L2C_PFC2
                                                 register will auto-clear the counter. This allows 
                                                 SW to maintain 'cumulative' counters in SW. 
                                                 NOTE: If the CSR read occurs in the same cycle as 
                                                 the 'event' to be counted, the counter will
                                                 properly reflect the event. 
                                                 *** NOTE: PASS2 Addition

<35>    CNT3RDCLR  R/W     0           0         Performance Counter 3 Read Clear                       
                                                 When set, all CSR reads of the L2C_PFC3
                                                 register will auto-clear the counter. This allows 
                                                 SW to maintain 'cumulative' counters in SW. 
                                                 NOTE: If the CSR read occurs in the same cycle as 
                                                 the 'event' to be counted, the counter will
                                                 properly reflect the event. 
                                                 *** NOTE: PASS2 Addition

<63:36> NS         RAZ     0           0         RESERVED                                               

NOTES:
   - There are four 36b performance counter registers which can simultaneously count events.
     Each Counter's event is programmably selected via the corresponding CNTxSEL field: 

                     |Bus 
        CNTxSEL[5:0] |Dependent| Event
        -------------+-----------------------
                 0   |   no    | Cycles
                  1  |   no    | L2 LDI Command Miss (NOTE: Both PP and IOB are cabable of generating LDI)
                 2   |   no    | L2 LDI Command Hit  (NOTE: Both PP and IOB are cabable of generating LDI)
                 3   |   no    | L2 non-LDI Command Miss
                 4   |   no    | L2 non-LDI Command Hit
                 5   |   no    | L2 Miss (total)
                 6   |   no    | L2 Hit (total)
                 7   |   no    | L2 Victim Buffer Hit (Retry Probe)
                 8   |   no    | LFB-NQ Index Conflict
                 9   |   no    | L2 Tag Probe (issued - could be VB-Retried)
                10   |   no    | L2 Tag Update (completed - note: some CMD types do not update)
                11   |   no    | L2 Tag Probe Completed (beyond VB-RTY window) 
                12   |   no    | L2 Tag Dirty Victim
                13   |   no    | L2 Data Store NOP
                14   |   no    | L2 Data Store READ
                15   |   no    | L2 Data Store WRITE 
                16   |   no    | Memory Fill Data valid (1 strobe/32B) 
                17   |   no    | Memory Write Request
                18   |   no    | Memory Read Request
                19   |   no    | Memory Write Data valid (1 strobe/32B)
                20   |   no    | ADD NOP (ADD Bus Idle)
                21   |   no    | ADD LDT (Load-Through Request)
                22   |   no    | ADD LDI (L2 Load I-Stream Request)
                23   |   no    | ADD LDD (L2 Load D-stream Request)
                24   |   no    | ADD STF (L2 Store Full cacheline Request)
                25   |   no    | ADD STT (L2 Store Through Request)
                26   |   no    | ADD STP (L2 Store Partial Request)
                27   |   no    | ADD STC (L2 Store Conditional Request)
                28   |   no    | ADD DWB (L2 Don't WriteBack Request)
                29   |   no    | ADD PL2 (L2 Prefetch Request)
                30   |   no    | ADD PSL1 (L1 Prefetch Request)
                31   |   no    | ADD IOBLD
                32   |   no    | ADD IOBST
                33   |   no    | ADD IOBDMA
                34   |   no    | ADD IOBRSP
                35   |   no    | STORE Bus valid (all) 
                36   |   no    | STORE Bus valid (DST=L2C) Memory Data
                37   |   no    | STORE Bus valid (DST=IOB) REFL Data
                38   |   no    | STORE Bus valid (DST=PP) IOBRSP Data
                39   |   yes   | COMMIT[0,1] NOP     NOTE: L2C_PFC0,2=COMMIT0  L2C_PFC1,3=COMMIT1    
                40   |   yes   | COMMIT[0,1] STDN    NOTE: L2C_PFC0,2=COMMIT0  L2C_PFC1,3=COMMIT1 
                41   |   yes   | COMMIT[0,1] FILL    NOTE: L2C_PFC0,2=COMMIT0  L2C_PFC1,3=COMMIT1 
                42   |   yes   | COMMIT[0,1] REFL    NOTE: L2C_PFC0,2=COMMIT0  L2C_PFC1,3=COMMIT1 
                43   |   yes   | COMMIT[0,1] STIN    NOTE: L2C_PFC0,2=COMMIT0  L2C_PFC1,3=COMMIT1 
                44   |   yes   | COMMIT[0,1] SCIN    NOTE: L2C_PFC0,2=COMMIT0  L2C_PFC1,3=COMMIT1 
                45   |   yes   | COMMIT[0,1] SCFL    NOTE: L2C_PFC0,2=COMMIT0  L2C_PFC1,3=COMMIT1 
                46   |   yes   | COMMIT[0,1] SCDN    NOTE: L2C_PFC0,2=COMMIT0  L2C_PFC1,3=COMMIT1 
                47   |   yes   | FILL[0,1] Data Valid         NOTE: L2C_PFC0,2=FILL0  L2C_PFC1,3=FILL1 
                48   |   yes   | FILL[0,1] Data Valid (FILL)  NOTE: L2C_PFC0,2=FILL0  L2C_PFC1,3=FILL1 
                49   |   yes   | FILL[0,1] Data Valid (STRSP) NOTE: L2C_PFC0,2=FILL0  L2C_PFC1,3=FILL1 
                50   |   yes   | FILL[0,1] Data Valid (REFL)  NOTE: L2C_PFC0,2=FILL0  L2C_PFC1,3=FILL1 
                51   |   no    | LRF-REQ (LFB-NQ)
                52   |   no    | DT RD-ALLOC (LDD/PSL1 Commands)
                53   |   no    | DT WR-INVAL (ST* Commands)

   - Documentation/Internal Bus Naming equivalence chart: 
        - ADD Bus = XMC Bus
        - STORE Bus = XMD Bus
        - COMMIT Bus = RSC Bus
        - FILL Bus = RSD Bus
   - NOTE: CNTxSEL = [39...50] are Bus dependent based on dual-COMMIT/FILL busses. 
        For instance: 
           + L2C_PFC0/L2C_PFC2 counters track COMMIT0/FILL0 on channel 0 of dual COMMIT/FILL busses. 
           + L2C_PFC1/L2C_PFC3 counters track COMMIT1/FILL1 on channel 1 of dual COMMIT/FILL busses.

----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_PFC0 = L2 Performance Counter #0
 *
 * Description: 
 *

     ==============================================================
     L2C_PFC0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>   PFCNT0    RO      0           0         Performance Counter #0                                 

<63:36>  NS        RAZ     0           0         RESERVED                                               

NOTES:
   - L2C_PFCTL[CNT0SEL]=[39..50] allow L2C_PFC0 counter to track COMMIT0/FILL0 on channel 0 of dual COMMIT/FILL busses. 
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_PFC1 = L2 Performance Counter #1
 *
 * Description: 
 *

     ==============================================================
     L2C_PFC1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>   PFCNT1    RO      0           0         Performance Counter #1                                 
 
<63:36>  NS        RAZ     0           0         RESERVED                                               

NOTES:
   - L2C_PFCTL[CNT1SEL]=[39..50] allow L2C_PFC1 counter to track COMMIT1/FILL1 on channel 1 of dual COMMIT/FILL busses. 
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_PFC2 = L2 Performance Counter #2
 *
 * Description: 
 *

     ==============================================================
     L2C_PFC2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>   PFCNT2    RO      0           0         Performance Counter #2                                 

<63:36>  NS        RAZ     0           0         RESERVED                                               

NOTES:
   - L2C_PFCTL[CNT2SEL]=[39..50] allow L2C_PFC2 counter to track COMMIT0/FILL0 on channel 0 of dual COMMIT/FILL busses. 
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_PFC3 = L2 Performance Counter #3
 *
 * Description: 
 *

     ==============================================================
     L2C_PFC3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>   PFCNT3    RO      0           0         Performance Counter #3                                 
 
<63:36>  NS        RAZ     0           0         RESERVED                                               

NOTES:
   - L2C_PFCTL[CNT3SEL]=[39..50] allow L2C_PFC3 counter to track COMMIT1/FILL1 on channel 1 of dual COMMIT/FILL busses. 
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_LFB3 = L2C LFB DEBUG 3 Register
 *
 * Description: LFB High Water Mark Register
 *

     ==============================================================
     L2C_LFB3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>   LFB_HWM  R/W       0xF        0xF    LFB High Water Mark                                        
                                             Determines #of LFB Entries in use before backpressure
                                             is asserted.
                                                HWM=0:   1 LFB Entry available
                                                           ...  
                                                HWM=15: 16 LFB Entries available
                                             *** NOTE: PASS2 Addition

<4>     STPARTDIS R/W      0x0        0x0    STP/C Performance Enhancement Disable                      
                                             When clear, all STP/C(store partials) will take 2 cycles
                                             to complete (power-on default).   
                                             When set, all STP/C(store partials) will take 4 cycles
                                             to complete. 
                                             NOTE: It is recommended to keep this bit ALWAYS ZERO. 
                                             *** NOTE: PASS2 Addition
                                             
<63:5>  NS       RAZ       0           0     RESERVED                                                   
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_PPGRP = L2C PP Group Number
 *
 * Description: Defines the PP(Packet Processor) PLC Group # (0,1,2)
 *

     ==============================================================
     L2C_PPGRP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<1:0>    PP0GRP   R/W      0x0      0x0       PP0 PLC Group# (0,1,2)                                    
<3:2>    PP1GRP   R/W      0x0      0x0       PP1 PLC Group# (0,1,2)                                    
<5:4>    PP2GRP   R/W      0x0      0x0       PP2 PLC Group# (0,1,2)                                    
<7:6>    PP3GRP   R/W      0x0      0x0       PP3 PLC Group# (0,1,2)                                    
<9:8>    PP4GRP   R/W      0x0      0x0       PP4 PLC Group# (0,1,2)                                    
<11:10>  PP5GRP   R/W      0x0      0x0       PP5 PLC Group# (0,1,2)                                    
<13:12>  PP6GRP   R/W      0x0      0x0       PP6 PLC Group# (0,1,2)                                    
<15:14>  PP7GRP   R/W      0x0      0x0       PP7 PLC Group# (0,1,2)                                    
<17:16>  PP8GRP   R/W      0x0      0x0       PP8 PLC Group# (0,1,2)                                    
<19:18>  PP9GRP   R/W      0x0      0x0       PP9 PLC Group# (0,1,2)                                    
<21:20>  PP10GRP  R/W      0x0      0x0       PP10 PLC Group# (0,1,2)                                   
<23:22>  PP11GRP  R/W      0x0      0x0       PP11 PLC Group# (0,1,2)                                   
<63:24>  NS       RAZ      0        0         RESERVED                                                  
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_GRPWRR0 = L2C PP Weighted Round #0 Register
 *
 * Description: Defines Weighted rounds(32) for Group PLC0,PLC1
 *

     ==============================================================
     L2C_GRPWRR0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>   PLC0RMSK  R/W      0x0000      0x0000   PLC Group#0 Weighted Round Mask                       
                                                 Each bit represents 1 of 32 rounds 
                                                 for Group #0's participation. When a 'round' bit is
                                                 set, Group#0 is 'masked' and DOES NOT participate. 
                                                 When a 'round' bit is clear, Group#0 WILL 
                                                 participate in the arbitration for this round. 
<63:32>  PLC1RMSK  R/W      0x0000      0x0000   PLC1 Group#1 Weighted Round Mask                      
                                                 Each bit represents 1 of 32 rounds 
                                                 for Group #1's participation. When a 'round' bit is
                                                 set, Group#1 is 'masked' and DOES NOT participate. 
                                                 When a 'round' bit is clear, Group#1 WILL 
                                                 participate in the arbitration for this round. 

NOTES:
   - Starvation of a group 'could' occur, unless SW takes the precaution to ensure that each GROUP
     participates in at least 1(of 32) rounds (ie: At least 1 bit(of 32) should be clear). 
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_GRPWRR1 = L2C PP Weighted Round #1 Register
 *
 * Description: Defines Weighted Rounds(32) for Group PLC2,ILC
 *

     ==============================================================
     L2C_GRPWRR1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>   PLC2RMSK  R/W      0x0000      0x0000   PLC Group#2 Weighted Round Mask                       
                                                 Each bit represents 1 of 32 rounds 
                                                 for Group #2's participation. When a 'round' bit is
                                                 set, Group#2 is 'masked' and DOES NOT participate. 
                                                 When a 'round' bit is clear, Group#2 WILL 
                                                 participate in the arbitration for this round. 
<63:32>  ILCRMSK   R/W      0x0000      0x0000   ILC (IOB) Weighted Round Mask                         
                                                 Each bit represents 1 of 32 rounds 
                                                 for IOB participation. When a 'round' bit is
                                                 set, IOB is 'masked' and DOES NOT participate. 
                                                 When a 'round' bit is clear, IOB WILL 
                                                 participate in the arbitration for this round. 

NOTES:
   - Starvation of a group 'could' occur, unless SW takes the precaution to ensure that each GROUP 
     participates in at least 1(of 32) rounds (ie: At least 1 bit(of 32) should be clear). 
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_OOB = L2C Out of Bounds Global Enables
 *
 * Description: Defines DMA "Out of Bounds" global enables. 
 *

     ==============================================================
     L2C_OOB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      STENA    R/W        0           0       DMA Out of Bounds Range Checker for DMA store        
                                                 commands (STF/P/T).
                                                 When enabled, any DMA store commands (STF/P/T) which 
                                                 hit 1-of-3 out of bounds regions will be logged into 
                                                 L2C_INT_STAT[OOB*] CSRs and the DMA store WILL
                                                 NOT occur. If the corresponding L2C_INT_EN[OOB*]
                                                 is enabled, an interrupt will also be reported. 
                         
<1>      DWBENA   R/W        0           0       DMA Out of Bounds Range Checker for DMA DWB          
                                                 commands (Don't WriteBack).
                                                 When enabled, any DMA DWB commands which hit 1-of-3 
                                                 out of bounds regions will be logged into 
                                                 L2C_INT_STAT[OOB*] CSRs and the DMA store WILL
                                                 NOT occur. If the corresponding L2C_INT_EN[OOB*]
                                                 is enabled, an interrupt will also be reported. 
<63:2>   NS       RAZ      0           0         RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_OOB1 = L2C Out of Bounds Range Checker
 *
 * Description: Defines DMA "Out of Bounds" region #1. If a DMA initiated write transaction generates an address
 * within the specified region, the write is 'ignored' and an interrupt is generated to alert software.
 *

     ==============================================================
     L2C_OOB1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>   SIZE     R/W      0x0000      0x0000    DMA Out of Bounds Range Checker Size                 
                                                 (1MB granularity)
                                                 Example: 0: 0MB / 1: 1MB  
                                                 The range check is for: 
                                                     (SADR<<20) <= addr[33:0] < (((SADR+SIZE) & 0x3FFF)<<20)
                                                 SW NOTE: SADR+SIZE could be setup to potentially wrap 
                                                 the 34bit ending bounds address. 

<19:14>  NS       RAZ      0           0         RESERVED                                             
<33:20>  SADR     R/W      0x0000      0x0000    DMA initated Memory Range Checker Starting Address   
                                                 (1MB granularity)
<35:34>  NS       RAZ      0           0         RESERVED                                             
<36>     FSRC     RO       0           0         DMA Out of Bounds Failing Source Command             
                                                 When L2C_INT_STAT[OOB1]=1, this field indicates the
                                                 type of DMA command. 
                                                   0: ST* (STF/P/T)
                                                   1: DWB (Don't WriteBack)
                                                 NOTE: FSRC is locked down until L2C_INT_STAT[OOB1]
                                                 is cleared. 
<63:37>  FADR     RO       0x0000      0x0000    DMA initated Memory Range Checker Failing Address    
                                                 When L2C_INT_STAT[OOB1]=1, this field indicates the
                                                 DMA cacheline address. 
                                                 (addr[33:7] = full cacheline address captured)
                                                 NOTE: FADR is locked down until L2C_INT_STAT[OOB1]
                                                 is cleared. 
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_OOB2 = L2C Out of Bounds Range Checker
 *
 * Description: Defines DMA "Out of Bounds" region #2. If a DMA initiated write transaction generates an address
 * within the specified region, the write is 'ignored' and an interrupt is generated to alert software.   
 *

     ==============================================================
     L2C_OOB2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>   SIZE     R/W      0x0000      0x0000    DMA Out of Bounds Range Checker Size                 
                                                 (1MB granularity)
                                                 Example: 0: 0MB / 1: 1MB  
                                                 The range check is for: 
                                                     (SADR<<20) <= addr[33:0] < (((SADR+SIZE) & 0x3FFF)<<20)
                                                 SW NOTE: SADR+SIZE could be setup to potentially wrap 
                                                 the 34bit ending bounds address. 

<19:14>  NS       RAZ      0           0         RESERVED                                             
<33:20>  SADR     R/W      0x0000      0x0000    DMA initated Memory Range Checker Starting Address   
                                                 (1MB granularity)
<35:34>  NS       RAZ      0           0         RESERVED                                             
<36>     FSRC     RO       0           0         DMA Out of Bounds Failing Source Command             
                                                 When L2C_INT_STAT[OOB2]=1, this field indicates the
                                                 type of DMA command. 
                                                   0: ST* (STF/P/T)
                                                   1: DWB (Don't WriteBack)
                                                 NOTE: FSRC is locked down until L2C_INT_STAT[OOB2]
                                                 is cleared. 
<63:37>  FADR     RO       0x0000      0x0000    DMA initated Memory Range Checker Failing Address    
                                                 When L2C_INT_STAT[OOB2]=1, this field indicates the
                                                 DMA cacheline address. 
                                                 (addr[33:7] = full cacheline address captured)
                                                 NOTE: FADR is locked down until L2C_INT_STAT[OOB2] 
                                                 is cleared. 
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_OOB3 = L2C Out of Bounds Range Checker
 *
 * Description: Defines DMA "Out of Bounds" region #3. If a DMA initiated write transaction generates an address
 * within the specified region, the write is 'ignored' and an interrupt is generated to alert software.   
 *

     ==============================================================
     L2C_OOB3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>   SIZE     R/W      0x0000      0x0000    DMA Out of Bounds Range Checker Size                 
                                                 (1MB granularity)
                                                 Example: 0: 0MB / 1: 1MB  
                                                 The range check is for: 
                                                     (SADR<<20) <= addr[33:0] < (((SADR+SIZE) & 0x3FFF)<<20)
                                                 SW NOTE: SADR+SIZE could be setup to potentially wrap 
                                                 the 34bit ending bounds address. 

<19:14>  NS       RAZ      0           0         RESERVED                                             
<33:20>  SADR     R/W      0x0000      0x0000    DMA initated Memory Range Checker Starting Address   
                                                 (1MB granularity)
<35:34>  NS       RAZ      0           0         RESERVED                                             
<36>     FSRC     RO       0           0         DMA Out of Bounds Failing Source Command             
                                                 When L2C_INT_STAT[OOB3]=1, this field indicates the
                                                 type of DMA command. 
                                                   0: ST* (STF/P/T)
                                                   1: DWB (Don't WriteBack)
                                                 NOTE: FSRC is locked down until L2C_INT_STAT[00B3] 
                                                 is cleared. 
<63:37>  FADR     RO       0x0000      0x0000    DMA initated Memory Range Checker Failing Address    
                                                 When L2C_INT_STAT[OOB3]=1, this field indicates the
                                                 DMA cacheline address. 
                                                 (addr[33:7] = full cacheline address captured)
                                                 NOTE: FADR is locked down until L2C_INT_STAT[00B3]
                                                 is cleared. 
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_INT_STAT = L2C Global Interrupt Status Register
 *
 * Description:  
 *

     ==============================================================
     L2C_INT_STAT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      OOB1     R/W1C    0           0       DMA Out of Bounds Interrupt Status Range#1             
<1>      OOB2     R/W1C    0           0       DMA Out of Bounds Interrupt Status Range#2             
<2>      OOB3     R/W1C    0           0       DMA Out of Bounds Interrupt Status Range#3             
<3>      L2TSEC   R/W1C    0           0       L2T Single Bit Error corrected (SEC) status            
                                               During every L2 Tag Probe, all 8 sets Tag's (at a
                                               given index) are checked for single bit errors(SBEs). 
                                               This bit is set if ANY of the 8 sets contains an SBE. 
                                               SBEs are auto corrected in HW and generate an 
                                               interrupt(if enabled).
                                               NOTE: This is the 'same' bit as L2T_ERR[SEC_ERR]

<4>      L2TDED   R/W1C    0           0       L2T Double Bit Error detected (DED)                    
                                               During every L2 Tag Probe, all 8 sets Tag's (at a
                                               given index) are checked for double bit errors(DBEs). 
                                               This bit is set if ANY of the 8 sets contains a DBE. 
                                               DBEs also generated an interrupt(if enabled).                      
                                               NOTE: This is the 'same' bit as L2T_ERR[DED_ERR]

<5>      L2DSEC   R/W1C    0           0       L2D Single Error corrected (SEC)                       
                                               NOTE: This is the 'same' bit as L2D_ERR[SEC_ERR]

<6>      L2DDED   R/W1C    0           0       L2D Double Error detected (DED)                        
                                               NOTE: This is the 'same' bit as L2D_ERR[DED_ERR]

<7>      LCK      R/W1C    0           0       SW attempted to LOCK DOWN the last available set of    
                                               the INDEX (which is ignored by HW - but reported to SW).
                                               The LDD(L1 load-miss) for the LOCK operation is completed 
                                               successfully, however the address is NOT locked.
                                               NOTE: 'Available' sets takes the L2C_SPAR*[UMSK*]
                                               into account. For example, if diagnostic PPx has 
                                               UMSKx defined to only use SETs [1:0], and SET1 had
                                               been previously LOCKED, then an attempt to LOCK the
                                               last available SET0 would result in a LCKERR. (This
                                               is to ensure that at least 1 SET at each INDEX is
                                               not LOCKED for general use by other PPs).
                                               NOTE: This is the 'same' bit as L2T_ERR[LCKERR]

<8>      LCK2      R/W1C   0           0       HW detected a case where a Rd/Wr Miss from PP#n        
                                               could not find an available/unlocked set (for 
                                               replacement).
                                               Most likely, this is a result of SW mixing SET 
                                               PARTITIONING with ADDRESS LOCKING. If SW allows 
                                               another PP to LOCKDOWN all SETs available to PP#n, 
                                               then a Rd/Wr Miss from PP#n will be unable
                                               to determine a 'valid' replacement set (since LOCKED 
                                               addresses should NEVER be replaced).
                                               If such an event occurs, the HW will select the smallest
                                               available SET(specified by UMSK'x)' as the replacement
                                               set, and the address is unlocked. 
                                               NOTE: This is the 'same' bit as L2T_ERR[LCKERR2]
<63:9>   NS       RAZ      0           0       RESERVED                                               
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_INT_EN = L2C Global Interrupt Enable Register
 *
 * Description:  
 *

     ==============================================================
     L2C_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      OOB1EN    R/W     0       1     DMA Out of Bounds Interrupt Enable Range#1                   
<1>      OOB2EN    R/W     0       1     DMA Out of Bounds Interrupt Enable Range#2                   
<2>      OOB3EN    R/W     0       1     DMA Out of Bounds Interrupt Enable Range#3                   
<3>      L2TSECEN  R/W     0       1     L2 Tag ECC Single Error Correct(SEC) Interrupt               
                                         Enable bit. When set, allows interrupts to be
                                         reported on single bit (correctable) errors from
                                         the L2 Tag Arrays.                                                              
                                         NOTE: This is the 'same' bit as L2T_ERR[SEC_INTENA]
<4>      L2TDEDEN  R/W     0       1     L2 Tag ECC Double Error Detect(DED) Interrupt                
                                         NOTE: This is the 'same' bit as L2T_ERR[DED_INTENA]
<5>      L2DSECEN  R/W     0       1     L2 Data ECC Single Error Correct(SEC) Interrupt Enable bit   
                                         When set, allows interrupts to be reported on single bit                                 
                                         (correctable) errors from the L2 Data Arrays.                                          
                                         NOTE: This is the 'same' bit as L2D_ERR[SEC_INTENA]
<6>      L2DDEDEN  R/W     0       1     L2 Data ECC Double Error Detect(DED) Interrupt Enable bit    
                                         When set, allows interrupts to be reported on double bit                                 
                                         (uncorrectable) errors from the L2 Data Arrays.
                                         NOTE: This is the 'same' bit as L2D_ERR[DED_INTENA]
<7>      LCKENA    R/W     0       1     L2 Tag Lock Error Interrupt Enable bit                       
                                         NOTE: This is the 'same' bit as L2T_ERR[LCK_INTENA]
<8>      LCK2ENA   R/W     0       1     L2 Tag Lock Error2 Interrupt Enable bit                      
                                         NOTE: This is the 'same' bit as L2T_ERR[LCK_INTENA2]
<63:9>   NS        RAZ     0       0     RESERVED                                                     
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2D_BST0 = L2C Data Store QUAD0 BIST Status Register
 *

     ==============================================================
     L2D_BST0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 
<33:0>  Q0STAT     RO      0           0       Bist Results for QUAD0                                   
                                                Failure #1 Status
                                                  [16:14] bad bank 
                                                  [13:7] bad high column 
                                                  [6:0] bad low column
                                                Failure #2 Status
                                                  [33:31] bad bank 
                                                  [30:24] bad high column
                                                  [23:17] bad low column
                                                NOTES: For bad high/low column reporting:  
                                                   0x7f:   No failure 
                                                   0x7e:   Fatal Defect: 2 or more bad columns
                                                   0-0x45: Bad column
                                                NOTE: If there are less than 2 failures then the 
                                                   bad bank will be 0x7. 
 
<34>    FTL        RO      0           0       L2C Data Store Fatal Defect(across all QUADs)            
                                               2 or more columns were detected bad across all
                                               QUADs[0-3]. Please refer to individual quad failures
                                               for bad column = 0x7e to determine which QUAD was in
                                               error.
 
<63:35>  NS        RAZ     0           0       RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2D_BST1 = L2C Data Store QUAD1 BIST Status Register
 *

     ==============================================================
     L2D_BST1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<33:0>  Q1STAT     RO      0           0       Bist Results for QUAD1                                   
                                               Failure #1 Status
                                                  [16:14] bad bank 
                                                  [13:7] bad high column 
                                                  [6:0] bad low column
                                                Failure #2 Status
                                                  [33:31] bad bank 
                                                  [30:24] bad high column
                                                  [23:17] bad low column
                                                NOTES: For bad high/low column reporting:  
                                                   0x7f:   No failure 
                                                   0x7e:   Fatal Defect: 2 or more bad columns
                                                   0-0x45: Bad column
                                                NOTE: If there are less than 2 failures then the 
                                                   bad bank will be 0x7. 

<63:34>  NS       RAZ     0           0        RESERVED                                                
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2D_BST2 = L2C Data Store QUAD2 BIST Status Register
 *

     ==============================================================
     L2D_BST2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<33:0>  Q2STAT     RO      0           0       Bist Results for QUAD2                                   
                                               Failure #1 Status
                                                  [16:14] bad bank 
                                                  [13:7] bad high column 
                                                  [6:0] bad low column
                                                Failure #2 Status
                                                  [33:31] bad bank 
                                                  [30:24] bad high column
                                                  [23:17] bad low column
                                                NOTES: For bad high/low column reporting:  
                                                   0x7f:   No failure 
                                                   0x7e:   Fatal Defect: 2 or more bad columns
                                                   0-0x45: Bad column
                                                NOTE: If there are less than 2 failures then the 
                                                   bad bank will be 0x7. 

<63:34>  NS        RAZ     0           0       RESERVED                                                
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2D_BST3 = L2C Data Store QUAD3 BIST Status Register
 *

     ==============================================================
     L2D_BST3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<33:0>  Q3STAT     RO      0           0       Bist Results for QUAD3                                   
                                               Failure #1 Status
                                                  [16:14] bad bank 
                                                  [13:7] bad high column 
                                                  [6:0] bad low column
                                                Failure #2 Status
                                                  [33:31] bad bank 
                                                  [30:24] bad high column
                                                  [23:17] bad low column
                                                NOTES: For bad high/low column reporting:  
                                                   0x7f:   No failure 
                                                   0x7e:   Fatal Defect: 2 or more bad columns
                                                   0-0x45: Bad column
                                                NOTE: If there are less than 2 failures then the 
                                                   bad bank will be 0x7. 

<63:34>  NS        RAZ     0           0       RESERVED                                                
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2D_FUS0 = L2C Data Store QUAD0 Fuse Register
 *

     ==============================================================
     L2D_FUS0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<33:0>  Q0FUS     RO      0           0       Fuse Register for QUAD0                                   
                                              This is purely for debug and not needed in the general 
                                              manufacturing flow. 
                                              Note that the fuse are complementary (Assigning a 
                                              fuse to 1 will read as a zero). This means the case 
                                              where no fuses are blown result in these csr's showing 
                                              all ones.
                                               Failure #1 Fuse Mapping
                                                  [16:14] bad bank 
                                                  [13:7] bad high column 
                                                  [6:0] bad low column
                                                Failure #2 Fuse Mapping
                                                  [33:31] bad bank 
                                                  [30:24] bad high column
                                                  [23:17] bad low column

<63:34>  NS        RAZ     0           0       RESERVED                                                
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2D_FUS1 = L2C Data Store QUAD1 Fuse Register
 *

     ==============================================================
     L2D_FUS1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<33:0>  Q1FUS     RO      0           0       Fuse Register for QUAD1                                   
                                              This is purely for debug and not needed in the general 
                                              manufacturing flow. 
                                              Note that the fuse are complementary (Assigning a 
                                              fuse to 1 will read as a zero). This means the case 
                                              where no fuses are blown result in these csr's showing 
                                              all ones.
                                               Failure #1 Fuse Mapping
                                                  [16:14] bad bank 
                                                  [13:7] bad high column 
                                                  [6:0] bad low column
                                                Failure #2 Fuse Mapping
                                                  [33:31] bad bank 
                                                  [30:24] bad high column
                                                  [23:17] bad low column

<63:34>  NS        RAZ     0           0       RESERVED                                                
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2D_FUS2 = L2C Data Store QUAD2 Fuse Register
 *

     ==============================================================
     L2D_FUS2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<33:0>  Q2FUS     RO      0           0       Fuse Register for QUAD2                                   
                                              This is purely for debug and not needed in the general 
                                              manufacturing flow. 
                                              Note that the fuse are complementary (Assigning a 
                                              fuse to 1 will read as a zero). This means the case 
                                              where no fuses are blown result in these csr's showing 
                                              all ones.
                                               Failure #1 Fuse Mapping
                                                  [16:14] bad bank 
                                                  [13:7] bad high column 
                                                  [6:0] bad low column
                                                Failure #2 Fuse Mapping
                                                  [33:31] bad bank 
                                                  [30:24] bad high column
                                                  [23:17] bad low column

<63:34>  NS        RAZ     0           0       RESERVED                                                
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2D_FUS3 = L2C Data Store QUAD3 Fuse Register
 *

     ==============================================================
     L2D_FUS3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<33:0>  Q3FUS     RO      0           0       Fuse Register for QUAD3                                   
                                              This is purely for debug and not needed in the general 
                                              manufacturing flow. 
                                              Note that the fuses are complementary (Assigning a 
                                              fuse to 1 will read as a zero). This means the case 
                                              where no fuses are blown result in these csr's showing 
                                              all ones.
                                               Failure #1 Fuse Mapping
                                                  [16:14] bad bank 
                                                  [13:7] bad high column 
                                                  [6:0] bad low column
                                                Failure #2 Fuse Mapping
                                                  [33:31] bad bank 
                                                  [30:24] bad high column
                                                  [23:17] bad low column

<34>     CRIP_1024K RO      0           0    This is purely for debug and not needed in the general    
                                              manufacturing flow. 
                                              If the FUSE is not-blown, then this bit should read 
                                              as 0. If the FUSE is blown, then this bit should read 
                                              as 1.  
                                              *** NOTE: Pass2 Addition 

<35>     CRIP_512K RO      0           0     This is purely for debug and not needed in the general    
                                              manufacturing flow. 
                                              If the FUSE is not-blown, then this bit should read 
                                              as 0. If the FUSE is blown, then this bit should read 
                                              as 1.  
                                              *** NOTE: Pass2 Addition 

<36>     FUS_SPARE RO      0           0     This is purely for debug and not needed in the general    
                                              manufacturing flow. 
                                              If the FUSE is not-blown, then this bit should read 
                                              as 0. If the FUSE is blown, then this bit should read 
                                              as 1.  

<39:37>  EMA_CTL   RO      0           0     L2 Data Store EMA Control                                 
                                              These bits are used to 'observe' the EMA[2:0] inputs
                                              for the L2 Data Store RAMs which are controlled by 
                                              either FUSES[142:140] or by MIO_FUSE_EMA[EMA] CSR. 
                                              From poweron (dc_ok), the EMA_CTL are driven from 
                                              FUSE[141:140]. However after the 1st CSR write to the 
                                              MIO_FUSE_EMA[EMA] bits, the EMA_CTL will source 
                                              from the MIO_FUSE_EMA[EMA] register permanently
                                              (until dc_ok). 
                                              NOTE: O9N Addition

<63:40>  NS        RAZ     0           0     RESERVED                                                  
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_BST2 = L2C BIST 2 CTL/STAT
 *

     ==============================================================
     L2C_BST2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     XRDDAT    RO       0           0         Bist Results for RFB XRD-DAT RAM                       
                                                 0: GOOD (or bist in progress/never run)                                          
                                                 1: BAD                                                                          
 
<1>     XRDMSK    RO       0           0         Bist Results for RFB XRD-MSK RAM                       
                                                 0: GOOD (or bist in progress/never run)                                          
                                                 1: BAD                                                                          
 
<2>     PICBST    RO       0           0         Bist Results for RFB PIC RAM                           
                                                 1: BAD                                                                               
 
<3>     IPCBST    RO       0           0         Bist Results for RFB IPC RAM                           
                                                 1: BAD                                                                          
 
<7:4>   RHDB      RO       0           0         Bist Results for RHDB RAMs                             
                                                 0: GOOD (or bist in progress/never run)                                          
                                                 1: BAD                                                                          
 
<11:8>  RMDB      RO       0           0         Bist Results for RMDB RAMs                             
                                                 0: GOOD (or bist in progress/never run)                                          
                                                 1: BAD                                                                           
 
<15:12> MRB       RO       0           0         Bist Results for MRB RAMs                              
                                                 0: GOOD (or bist in progress/never run)                                         
                                                 1: BAD                                                                          

<63:16> NS        RAZ      0           0         RESERVED                                               
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_BST1 = L2C BIST 1 CTL/STAT
 *

     ==============================================================
     L2C_BST1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<8:0>   L2T        RO      0           0        Bist Results for L2T (USE+8SET RAMs)                    
                                                0: GOOD (or bist in progress/never run)                                           
                                                1: BAD  
                                                                           
<9>     VAB_VWCF0  RO      0           0        Bist Results for VAB VWCF0_MEM                          
                                                0: GOOD (or bist in progress/never run)                                           
                                                1: BAD  

<10>    NS        RAZ      0           0        RESERVED                                                
                                                                                  
<11>    VAB_VWCF1  RO      0           0        Bist Results for VAB VWCF1_MEM                          
    
<15:12> VWDF0      RO      0           0        Bist Results for VWDF0 RAMs                             
                                                0: GOOD (or bist in progress/never run)                                           
                                                1: BAD                                                                            

<19:16> VWDF1      RO      0           0        Bist Results for VWDF1 RAMs                             
                                                0: GOOD (or bist in progress/never run)                                           
                                                1: BAD  
                                                                          
<20>    ILC        RO      0           0        Bist Results for LRF RAMs (ILC)                         
                                                0: GOOD (or bist in progress/never run)                                           
                                                1: BAD

<21>    PLC0       RO      0           0        Bist Results for LRF RAMs (ILC)                         
                                                0: GOOD (or bist in progress/never run)                                           
                                                1: BAD

<22>    PLC1       RO      0           0        Bist Results for LRF RAMs (ILC)                         
                                                0: GOOD (or bist in progress/never run)                                           
                                                1: BAD

<23>    PLC2       RO      0           0        Bist Results for LRF RAMs (ILC)                         
                                                0: GOOD (or bist in progress/never run)                                           
                                                1: BAD
                                                                                  
<63:24> NS         RAZ     0           0        RESERVED                                                
----------------------------------------------------------------------------------------------------
===
 *
 *                  L2C_BST0 = L2C BIST 0 CTL/STAT
 *

     ==============================================================
     L2C_BST0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>   WLB_DAT   RO       0           0     Bist Results for WLB-DAT RAM [DP0-3]                      
                                             0: GOOD (or bist in progress/never run)                                              
                                             1: BAD                                                                               
<4>     STIN_MSK  RO       0           0     Bist Results for STIN-MSK RAM                             
                                             0: GOOD (or bist in progress/never run)                                                
                                             1: BAD                                                                                 

<5>     DT        RO       0           0     Bist Results for DuTAG RAM(s)                             
                                             0: GOOD (or bist in progress/never run)                                                
                                             1: BAD     
                                                                            
<18:6>  DTCNT     RO       0           0     DuTag BiST Counter (used to help isolate the failure)     
                                               [12]:    i (0=FORWARD/1=REVERSE pass)
                                               [11:10]: j (Pattern# 1 of 4)
                                               [9:4]:   k (DT Index 1 of 64)
                                               [3:0]:   l (DT# 1 of 12 DTs)

<22:19> WLB_MSK   RO       0           0     Bist Results for WLB-MSK RAM [DP0-3]                      
                                             0: GOOD (or bist in progress/never run)                                              
                                             1: BAD
                                                                                  
<23>    DTBNK     RO       0           0     DuTag Bank#                                               
                                             When DT=1(BAD), this field provides additional information
                                             about which DuTag Bank (0/1) failed. 
                                             *** NOTE: O9N PASS1 Addition                     

<63:24> NS        RAZ      0           0     RESERVED                                                  
----------------------------------------------------------------------------------------------------
===
 * Specify the RSL base addresses for the block

 *
 *                  LMC_MEM_CFG0 = LMC Memory Configuration Register0
 *
 * This register controls certain parameters of  Memory Configuration 
 *

     ==============================================================
     LMC(0..1)_MEM_CFG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      INIT_START  WR0     0       0      A 0->1 transition starts the DDR memory sequence that is 
                                            selected by LMC_CTL1[SEQUENCE].  This register is a
                                            oneshot and clears itself each time it is set.
 
<1>      ECC_ENA     R/W     0       1      ECC Enable: When set will enable the 8b ECC              
                                            check/correct logic. Should be 1 when used with DIMMs
                                            with ECC. 0, otherwise. 
                                            When this mode is turned on, DQ[71:64]
                                            on writes, will contain the ECC code generated for 
                                            the 64 bits of data which will 
                                            written in the memory and then later on reads, used
                                            to check for Single bit error (which will be auto-
                                            corrected) and Double Bit error (which will be 
                                            reported). When not turned on, DQ[71:64]
                                            are driven to 0.  Please refer to SEC_ERR, DED_ERR, 
                                            LMC_FADR, and LMC_ECC_SYND registers
                                            for diagnostics information when there is an error.
 
<4:2>    ROW_LSB     R/W    0x3     NS      Encoding used to determine which memory address          
                                            bit position represents the low order DDR ROW address.

                                            The processor's memory address[33:7] needs to be 
                                            translated to DRAM addresses (bnk,row,col,rank and dimm)
                                            and that is a function of the following:
                                            1. # Banks (4 or 8) - spec'd by BANK8
                                            2. Datapath Width(64 or 32) - MODE32b 
                                            3. # Ranks in a DIMM - spec'd by BUNK_ENA
                                            4. # DIMM's in the system 
                                            5. # Column Bits of the memory part - spec'd indirectly
                                            by this register.
                                            6. # Row Bits of the memory part - spec'd indirectly
                                            by the register below (PBANK_LSB).
                        
                                            Illustration: For Micron's MT18HTF6472A,512MB DDR2 
                                            Unbuffered DIMM which uses 256Mb parts (8M x 8 x 4), 
                                            # Banks = 4 -> 2 bits of BA
                                            # Columns = 1K -> 10 bits of Col
                                            # Rows = 8K -> 13 bits of Row
                                            Assuming that the total Data width is 128, this is how 
                                            we arrive at row_lsb:
                                            Col Address starts from mem_addr[2] for 32b (4Bytes) 
                                            dq width or from mem_addr[3] for 64b (8Bytes) dq width
                                            # col + # bank = 12. Hence row_lsb is mem_adr[15] for 
                                            64bmode or mem_adr[14] for 32b mode. Hence row_lsb 
                                            parameter should be set to 001 (64b) or 000 (32b).
                                                 110: row_lsb = mem_adr[12]
                                                 111: row_lsb = mem_adr[13]
                                                 000: row_lsb = mem_adr[14]
                                                 001: row_lsb = mem_adr[15] 
                                                 010: row_lsb = mem_adr[16] 
                                                 011: row_lsb = mem_adr[17] 
                                                 100: row_lsb = mem_adr[18]
                                                 101:RESERVED
 
<8:5>   PBANK_LSB    R/W    0x5     NS      Physical Bank address select                             
                                            Reverting to the explanation for ROW_LSB, 
                                            PBank_LSB would be Row_LSB bit + #rowbits
                                            + #rankbits
                                            In the 512MB DIMM Example, assuming no rank bits:
                                            pbank_lsb=mem_addr[15+13] for 64 b mode
                                                     =mem_addr[14+13] for 32b mode
                                            Hence the parameter
                                            
                    1110:pbank[1:0] = mem_adr[26:25]    / rank = mem_adr[24] (if bunk_ena)
                    1111:pbank[1:0] = mem_adr[27:26]    / rank = mem_adr[25] (if bunk_ena)
                    0000:pbank[1:0] = mem_adr[28:27]    / rank = mem_adr[26] (if bunk_ena)
                    0001:pbank[1:0] = mem_adr[29:28]    / rank = mem_adr[27]      "
                    0010:pbank[1:0] = mem_adr[30:29]    / rank = mem_adr[28]      "
                    0011:pbank[1:0] = mem_adr[31:30]    / rank = mem_adr[29]      "
                    0100:pbank[1:0] = mem_adr[32:31]    / rank = mem_adr[30]      "
                    0101:pbank[1:0] = mem_adr[33:32]    / rank = mem_adr[31]      "
                    0110:pbank[1:0] ={1'b0,mem_adr[33]} / rank = mem_adr[32]      "
                    0111:pbank[1:0] ={2'b0}             / rank = mem_adr[33]      "
                    1000-1101: RESERVED
 
<14:9>  REF_INT      R/W    0x1     0x2     Refresh interval represented in #of 512 dclk increments. 
                                            Program this to RND-DN(tREFI/clkPeriod/512)
                                               000000: RESERVED 
                                               000001: 1 * 512  = 512 dclks
                                                ...  
                                               111111: 63 * 512 = 32256 dclks 
 
<18:15>  TCL         R/W    0x3     NS      Not used                                                 

<19>  INTR_SEC_ENA   R/W     0       1      ECC Single Error Correct(SEC) Interrupt Enable bit       
                                            When set, the memory controller raises a processor
                                            interrupt on detecting a correctable Single Bit ECC
                                            error.
 
<20>  INTR_DED_ENA   R/W     0       1      ECC Double Error Detect(DED) Interrupt Enable bit        
                                            When set, the memory controller raises a processor
                                            interrupt on detecting an uncorrectable Dbl Bit ECC
                                            error.
 
<24:21> SEC_ERR     R/W1C   0x0     0x0     Single Error (corrected) of Rd Data                      
                                            In 64b mode, ecc is calculated on 2 cycle worth of data
                                            [0] corresponds to DQ[63:0]_c0_p0
                                            [1] corresponds to DQ[63:0]_c0_p1
                                            [2] corresponds to DQ[63:0]_c1_p0
                                            [3] corresponds to DQ[63:0]_c1_p1
                                            In 32b mode, ecc is calculated on 4 cycle worth of data
                                            [0] corresponds to {DQ[31:0]_c0_p1, DQ[31:0]_c0_p0}
                                            [1] corresponds to {DQ[31:0]_c1_p1, DQ[31:0]_c1_p0}
                                            [2] corresponds to {DQ[31:0]_c2_p1, DQ[31:0]_c2_p0}
                                            [3] corresponds to {DQ[31:0]_c3_p1, DQ[31:0]_c3_p0}
                                              where _cC_pP denotes cycle C and phase P
                                            Write of 1 will clear the corresponding error bit
                                            
<28:25> DED_ERR     R/W1C   0x0     0x0     Double Error detected (DED) of Rd Data                   
                                            In 64b mode, ecc is calculated on 2 cycle worth of data
                                            [0] corresponds to DQ[63:0]_c0_p0
                                            [1] corresponds to DQ[63:0]_c0_p1
                                            [2] corresponds to DQ[63:0]_c1_p0
                                            [3] corresponds to DQ[63:0]_c1_p1
                                            In 32b mode, ecc is calculated on 4 cycle worth of data
                                            [0] corresponds to {DQ[31:0]_c0_p1, DQ[31:0]_c0_p0}
                                            [1] corresponds to {DQ[31:0]_c1_p1, DQ[31:0]_c1_p0}
                                            [2] corresponds to {DQ[31:0]_c2_p1, DQ[31:0]_c2_p0}
                                            [3] corresponds to {DQ[31:0]_c3_p1, DQ[31:0]_c3_p0}
                                              where _cC_pP denotes cycle C and phase P
                                            Write of 1 will clear the corresponding error bit

<29>    BUNK_ENA     R/W     0      NS      Bunk Enable aka RANK ena (for use with dual-rank DIMMs)  
                                            For dual-rank DIMMs, the bunk_ena bit will enable
                                            the drive of the CS_N[1:0] pins based on the 
                                            (pbank_lsb-1) address bit. 
                                            Write 0 for SINGLE ranked DIMM's.

<30>    SILO_QC      R/W    0x0     NS      Adds a Quarter Cycle granularity to generate             
                                            dqs pulse generation for silo. 
                                            Combination of Silo_HC and Silo_QC gives the 
                                            ability to position the read enable with quarter
                                            cycle resolution. This is applied on all the bytes
                                            uniformly.
                                            THIS IS OBSOLETE.  Use READ_LEVEL_RANK instead.

<31>    RESET        RAZ     NS     NS      Reset oneshot pulse for refresh counter,                 
                                            and LMC_OPS_CNT_*, LMC_IFB_CNT_*, and LMC_DCLK_CNT_*
                                            CSR's. SW should write this to a one, then re-write
                                            it to a zero to cause the reset.

<63:32> NS           RAZ     NS     NS      RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *
 *                  LMC_MEM_CFG1 = LMC Memory Configuration Register1
 *
 * This register controls the External Memory Configuration Timing Parameters. Please refer to the
 * appropriate DDR part spec from your memory vendor for the various values in this CSR.
 * The details of each of these timing parameters can be found in the JEDEC spec or the vendor
 * spec of the memory parts.

     ==============================================================
     LMC(0..1)_MEM_CFG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<4:0>    TRAS        R/W    0xc     0xc     tRAS Cycles = RNDUP[tRAS(ns)/tcyc(ns)]                   
                                            (Represented in tCYC cycles == 1 dclk)
                                                00000-0001: RESERVED
                                                00010: 2
                                                ..
                                                11111: 31
 
<8:5>    TRCD        R/W    0x4     0x4     tRCD Cycles = RNDUP[tRCD(ns)/tcyc(ns)]                   
                                            (Represented in tCYC cycles == 1dclk)
                                            TYP=15ns (66MHz=1,167MHz=3,400MHz=6 for TYP)
                                                0000: RESERVED 
                                                0001: 2 (2 is the smallest value allowed)
                                                0002: 2
                                                ..
                                                1001: 9
                                                1010-1111: RESERVED
                                            In 2T mode, make this register TRCD-1, not going
                                            below 2.

<12:9>    TWTR       R/W    0x2     0x2     tWTR Cycles = RNDUP[tWTR(ns)/tcyc(ns)]                   
                                            Last Wr Data to Rd Command time.
                                            (Represented in tCYC cycles == 1dclks)
                                            TYP=15ns (66MHz=1,167MHz=3,400MHz=6, for TYP)
                                                0000: RESERVED
                                                0001: 1
                                                ..
                                                0111: 7
                                                1000-1111: RESERVED 
 
<16:13>  TRP         R/W    0x5     0x4     tRP Cycles = RNDUP[tRP(ns)/tcyc(ns)]                     
                                            (Represented in tCYC cycles == 1dclk)
                                            TYP=15ns (66MHz=1,167MHz=3,400MHz=6 for TYP)
                                                0000: RESERVED
                                                0001: 1
                                                ..
                                                1001: 9
                                                1010-1111: RESERVED 
                                            When using parts with 8 banks (LMC_DDR2_CTL->BANK8 
                                            is 1), load tRP cycles + 1 into this register.
 
<21:17>  TRFC        R/W    0x6     0x7     Indicates tRFC constraints.                            
                                            Set TRFC (CSR field) = RNDUP[tRFC(ns)/4*tcyc(ns)],
                                            where tRFC is from the DDR2 spec, and tcyc(ns)
                                            is the DDR clock frequency (not data rate).
                                            For example, with 2Gb, DDR2-667 parts,
                                            typ tRFC=195ns, so TRFC (CSR field) = 0x11.
                                                
                                                TRFC (binary): Corresponding tRFC Cycles
                                                ----------------------------------------
                                                00000-00001: RESERVED
                                                00010: 0-8
                                                00011: 9-12
                                                00100: 13-16
                                                ...
                                                11110: 117-120
                                                11111: 121-124
  
<24:22>  TMRD        R/W    0x2     0x2     tMRD Cycles                                            
                                            (Represented in dclk tCYC)
                                            For DDR2, its TYP 2*tCYC)
                                                000: RESERVED
                                                001: 1
                                                010: 2
                                                011: 3
                                                100: 4
                                                101-111: RESERVED 
 
<27:25>  CASLAT      R/W    0x4     0x4     CAS Latency Encoding which is loaded into each DDR       
                                            SDRAM device (MRS[6:4]) upon power-up (INIT_START=1). 
                                            (Represented in tCYC cycles == 1 dclks)
                                               000 RESERVED
                                               001 RESERVED
                                               010 2.0 tCYC
                                               011 3.0 tCYC 
                                               100 4.0 tCYC 
                                               101 5.0 tCYC
                                               110 6.0 tCYC
                                               111 RESERVED
                                            eg). The READ_LEVEL_RANK CSRs account for 1/4 cycle
                                            granularity in board/etch delays.
 
 
<30:28>  TRRD        R/W    0x2     0x2     tRRD cycles: ACT-ACT timing parameter for different      
                                            banks. (Represented in tCYC cycles == 1dclks) 
                                            TYP=15ns (66MHz=1,167MHz=3,200MHz=3)
                                            For DDR2, TYP=7.5ns
                                               000: RESERVED 
                                               001: 1 tCYC
                                               010: 2 tCYC
                                               011: 3 tCYC
                                               100: 4 tCYC
                                               101: 5 tCYC
                                               110: 6 tCYC
                                               111: 7 tCYC
 
 
<63:31>  NS          RAZ     NS      NS     RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_CTL = LMC Control
 * This register is an assortment of various control fields needed by the memory controller
 *   

     ==============================================================
     LMC(0..1)_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<1:0>    DIC         R/W     0       0      Drive Strength Control:                                  
                                            DIC[0] is              
                                            loaded into the Extended Mode Register (EMRS) A1 bit
                                            during initialization.
                                                0 = Normal 
                                                1 = Reduced 
                                            DIC[1] is used to load into EMRS
                                            bit 10 - DQSN Enable/Disable field. By default, we
                                            program the DDR's to drive the DQSN also. Set it to
                                            1 if DQSN should be Hi-Z.
                                                0 - DQSN Enable
                                                1 - DQSN Disable

<3:2>    QS_DIC      R/W    0x2      2      DDR2 Termination Resistor Setting                        
                                            When in DDR2, a non Zero value in this register
                                            enables the On Die Termination (ODT) in DDR parts.
                                            These two bits are loaded into the RTT 
                                            portion of the EMRS register bits A6 & A2. If DDR2's
                                            termination (for the memory's DQ/DQS/DM pads) is not 
                                            desired, set it to 00. If it is, chose between 
                                            01 for 75 ohm and 10 for 150 ohm termination.
                                                00 = ODT Disabled
                                                01 = 75 ohm Termination 
                                                10 = 150 ohm Termination
                                                11 = 50 ohm Termination
                                            Octeon, on writes, by default, drives the 4/8 ODT
                                            pins (64/128b mode) based on what the masks 
                                            (LMC_WODT_CTL0 & 1) are programmed to. 
                                            LMC_DDR2_CTL->ODT_ENA enables Octeon to drive ODT pins 
                                            for READS. LMC_RODT_CTL needs to be programmed based
                                            on the system's needs for ODT.
                                           
<5:4>  TSKW          R/W    0x0     0x1     This component is a representation of total BOARD        
                                            DELAY on DQ (used in the controller to determine the
                                            R->W spacing to avoid DQS/DQ bus conflicts). Enter  
                                            the largest of the per byte Board delay
                                                00: 0 dclk
                                                01: 1 dclks
                                                10: 2 dclks
                                                11: 3 dclks
                                            THIS IS OBSOLETE.  Use READ_LEVEL_RANK instead.
 
<7:6>  SIL_LAT       R/W    0x1     0x1     SILO Latency: On reads, determines how many additional   
                                            dclks to wait (on top of TCL+1+TSKW) before pulling 
                                            data out of the pad silos. 
                                                00: illegal
                                                01: 1 dclks
                                                10: 2 dclks
                                                11: illegal
                                            This should always be set to 1.
                                            THIS IS OBSOLETE.  Use READ_LEVEL_RANK instead.
 
<8>    BPRCH         R/W     0       NS     Back Porch Enable: When set, the turn-on time for        
                                            the DDR_DQ/DQS drivers is delayed an additional DCLK 
                                            cycle. This should be set to one whenever both SILO_HC
                                            and SILO_QC are set.
 
<9>    FPRCH2        R/W     0       1      Front Porch Enable: When set, the turn-off               
                                            time for the DDR_DQ/DQS drivers is 1 dclk earlier.

                                            This bit should typically be set.

<10>   MODE32b       R/W     0       0      32b data Path Mode                                      
                                            Set to 1 if we use only 32 DQ pins
                                            0 for 64b DQ mode.

<11>   DRESET        R/W    0x0     0x0     MBZ                                                     
                                            THIS IS OBSOLETE.  Use LMC_DLL_CTL[DRESET] instead.

<12>   INORDER_MRF   R/W     0       0      Always clear to zero                                     
 
<13>   INORDER_MWF   RAZ     0       0      Reads as zero                                            

<14>    R2R_SLOT     R/W     0       0      R2R Slot Enable: When set, all read-to-read trans        
                                            will slot an additional 1 cycle data bus bubble to 
                                            avoid DQ/DQS bus contention. This is only a CYA bit, 
                                            in case the "built-in" DIMM and RANK crossing logic 
                                            which should auto-detect and perfectly slot 
                                            read-to-reads to the same DIMM/RANK. 
 
<15>    RDIMM_ENA    R/W     0       NS     Registered DIMM Enable - When set allows the use         
                                            of JEDEC Registered DIMMs which require Write 
                                            data to be registered in the controller. 

<16>     SPAREF      R/W    0x0     0x0     Keep this as 0.                                          

<17>     SPARE1      R/W    0x0     0x0     Keep this as 0.                                          

<21:18>  MAX_WRITE_BATCH R/W 0x8    0x8     Maximum number of consecutive writes to service before   
                                            allowing reads to interrupt.

<22>     XOR_BANK    R/W    0x0     0x1     If (XOR_BANK == 1), then                                 
                                              bank[n:0]=address[n+7:7] ^ address[n+7+5:7+5]
                                            else
                                              bank[n:0]=address[n+7:7]
                                            where n=1 for a 4 bank part and n=2 for an 8 bank part

<23>     SLOW_SCF    R/W    0x0     0x0     Should be cleared to zero                                

<27:24>  DDR__PCTL   RO      NS      NS     DDR pctl from compensation circuit                       
                                            The encoded value on this will adjust the drive strength
                                            of the DDR DQ pullup.

<31:28>  DDR__NCTL   RO      NS      NS     DDR nctl from compensation circuit                       
                                            The encoded value on this will adjust the drive strength
                                            of the DDR DQ pulldns.

<63:32>  NS          RAZ     NS      NS     RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_DDR2_CTL = LMC DDR2 & DLL Control Register
 *   

     ==============================================================
     LMC(0..1)_DDR2_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      DDR2        R/W    0x1     0x1     Should be set                                            

<1>      RDQS        R/W     0       0      DDR2 RDQS mode. When set, configures memory subsystem to 
                                            use unidirectional DQS pins. RDQS/DM - Rcv & DQS - Xmit                               

<2>      DLL90_BYP   R/W     0       0      MBZ                                                      
                                            THIS IS OBSOLETE.  Use LMC_DLL_CTL[DLL90_BYP] instead.

<7:3>    DLL90_VLU   R/W     0      NS      MBZ                                                      
                                            THIS IS OBSOLETE.  Use LMC_DLL_CTL[DLL90_VLU] instead.


<8>      QDLL_ENA    R/W     0       0      MBZ                                                      
                                            THIS IS OBSOLETE.  Use LMC_DLL_CTL[DLL90_ENA] instead.


<9>     ODT_ENA      R/W     0       0      Enable Obsolete ODT on Reads                             
                                            Obsolete Read ODT wiggles DDR_ODT_* pins on reads.
                                            Should normally be cleared to zero.
                                            When this is on, the following fields must also be 
                                            programmed:
                                                LMC_CTL->QS_DIC - programs the termination value
                                                LMC_RODT_CTL - programs the ODT I/O mask for Reads

<10>      DDR2T      R/W     0      NS      Turn on the DDR 2T mode. 2 cycle window for CMD and      
                                            address. This mode helps relieve setup time pressure
                                            on the Address and command bus which nominally have
                                            a very large fanout. Please refer to Micron's tech 
                                            note tn_47_01 titled "DDR2-533 Memory Design Guide 
                                            for Two Dimm Unbuffered Systems" for physical details.

                                            BURST8 should be used when DDR2T is set to minimize
                                            add/cmd bandwidth loss.
                                            
<11>     CRIP_MODE   R/W     0       0      Cripple Mode - When set, the LMC allows only             
                                            1 inflight transaction (.vs. 8 in normal mode). 
                                            This bit is ONLY to be set at power-on and
                                            should not be set for normal use.

<16:12> TFAW         R/W     0       9      tFAW - Cycles = RNDUP[tFAW(ns)/tcyc(ns)] - 1             
                                            Four Access Window time. Relevant only in in 
                                            8-bank parts. 
                                                tFAW = 5'b0 in DDR2-4bank
                                                tFAW = RNDUP[tFAW(ns)/tcyc(ns)] - 1 
                                                         in DDR2-8bank

<20:17>  DDR_EOF     R/W    0x0      0      Early Fill Counter Init.                                 
                                            L2 needs to know a few cycle before a fill completes so 
                                            it can get its Control pipe started (for better overall 
                                            performance). This counter contains  an init value which 
                                            is a function of Eclk/Dclk ratio to account for the 
                                            asynchronous boundary between L2 cache and the DRAM 
                                            controller. This init value will 
                                            determine when to safely let the L2 know that a fill 
                                            termination is coming up. 
                                            
                                            Set DDR_EOF according to the following rule:
                                            eclkFreq/dclkFreq = dclkPeriod/eclkPeriod = RATIO
                                                   RATIO < 6/6  -> illegal
                                            6/6 <= RATIO < 6/5  -> DDR_EOF=3
                                            6/5 <= RATIO < 6/4  -> DDR_EOF=3
                                            6/4 <= RATIO < 6/3  -> DDR_EOF=2
                                            6/3 <= RATIO < 6/2  -> DDR_EOF=1
                                            6/2 <= RATIO < 6/1  -> DDR_EOF=0
                                            6/1 <= RATIO        -> DDR_EOF=0
                                            
<21>     SILO_HC     R/W    0x1     NS      Delays the read sample window by a Half Cycle.           
                                            THIS IS OBSOLETE.  Use READ_LEVEL_RANK instead.

<24:22>  TWR         R/W    0x3     0x1     DDR Write Recovery time (tWR). Last Wr Brst to Pre delay 
                                            This is not a direct encoding of the value. Its 
                                            programmed as below per DDR2 spec. The decimal number 
                                            on the right is RNDUP(tWR(ns) / tCYC(ns))
                                             TYP=15ns 
                                                000: RESERVED
                                                001: 2
                                                010: 3
                                                011: 4
                                                100: 5
                                                101: 6
                                                110: 7
                                                111: 8

<25>     BWCNT       R/W     0      0x0     Bus utilization counter Clear.                           
                                            Clears the LMC_OPS_CNT_*, LMC_IFB_CNT_*, and
                                            LMC_DCLK_CNT_* registers. SW should first write this
                                            field to a one, then write this field to a zero to
                                            clear the CSR's.

<26>     POCAS       R/W     0       0      Enable the Posted CAS feature of DDR2.                   
                                                
<29:27>  ADDLAT      R/W    0x0     0x0     Additional Latency for posted CAS                        
                                            When Posted CAS is on, this configures the additional
                                            latency. This should be set to
                                                   1 .. LMC_MEM_CFG1[TRCD]-2 
                                            (Note the implication that posted CAS should not
                                            be used when tRCD is two.)

<30>     BURST8      R/W     0       1      8-burst mode.                                            
                                            1 - DDR data transfer happens in burst of 8
                                            0 - DDR data transfer happens in burst of 4

                                            BURST8 should be set when DDR2T is set
                                            to minimize adr/cmd bandwidth loss.
   
<31>     BANK8       R/W     0      NS      For 8 bank DDR2 parts                                    
                                            1 - DDR2 parts have 8 internal banks (BA is 3 bits 
                                            wide).
                                            0 - DDR2 parts have 4 internal banks (BA is 2 bits
                                            wide).
   
<63:32>  UNUSED      RAZ     0       0      Unused                                                   
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_FADR = LMC Failing Address Register (SEC/DED)
 *
 *This register only captures the first transaction with ecc errors. A DBE error can 
 *over-write this register with its failing addresses. If you write
 *LMC_MEM_CFG0->SEC_ERR/DED_ERR then it will clear the error bits and capture the
 *next failing address.
 *The phy mapping is a function of the num Col bits & # row bits
 *
 *If failing dimm is 2 that means the error is in the higher bits dimm.  

     ==============================================================
     LMC(0..1)_FADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>   FCOL        RO      0       0      Failing Column Start Address[11:0]                       
                                            Represents the Failing read's starting column address 
                                            (and not the exact column address in which the SEC/DED
                                            was detected)
 
<25:12>  FROW        RO      0       0      Failing Row Address[13:0]                                

<28:26>  FBANK       RO      0       0      Failing Bank[2:0]                                        
 
<29>     FBUNK       RO      0       0      Failing Rank                                             
 
<31:30>  FDIMM       RO      0       0      Failing DIMM#                                            
 
<63:32>  NS          RAZ     NS      NS     RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_COMP_CTL = LMC Compensation control
 *   

     ==============================================================
     LMC(0..1)_COMP_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  UNUSED     RAZ      0       0      Unused                                                     
<31:28>  NCTL_CSR   R/W     0xf     NS      Compensation control bits                                  
<27:24>  UNUSED24   R/W     0x0     NS      MBZ                                                        
<23:20>  UNUSED20   R/W     0x0     NS      MBZ                                                        
<19:16>  NCTL_DAT   R/W     0x0     NS      Compensation control bits                                  
<15:12>  PCTL_CSR   R/W     0xf     NS      Compensation control bits                                  
<11:8>   UNUSED08   R/W     0x0     NS      MBZ                                                        
<7:5>    UNUSED04   R/W     0x0     NS      MBZ                                                        
<4:0>    PCTL_DAT   R/W     0x0     NS      Compensation control bits                                  
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_WODT_CTL1 = LMC Write OnDieTermination control
 * System designers may desire to terminate DQ/DQS/DM lines for higher frequency DDR operations 
 * (667MHz and faster), especially on a multi-rank system. DDR2 DQ/DM/DQS I/O's have built in 
 * Termination resistor that can be turned on or off by the controller, after meeting tAOND and tAOF
 * timing requirements. Each Rank has its own ODT pin that fans out to all the memory parts
 * in that DIMM. System designers may prefer different combinations of ODT ON's for read and write
 * into different ranks. Octeon supports full programmability by way of the mask register below.
 * Each Rank position has its own 8-bit programmable field.
 * When the controller does a write to that rank, it sets the 8 ODT pins to the MASK pins below.
 * For eg., When doing a write into Rank0, a system designer may desire to terminate the lines
 * with the resistor on Dimm0/Rank1. The mask WODT_D0_R0 would then be {00000010}. 
 * If ODT feature is not desired, the DDR parts can be programmed to not look at these pins by
 * writing 0 in QS_DIC. Octeon drives the appropriate mask values on the ODT pins by default. 
 * If this feature is not required, write 0 in this register.
 * 

     ==============================================================
     LMC(0..1)_WODT_CTL1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------

<63:32>  UNUSED      RAZ    0       0       Unused                                                     
<31:24>  WODT_D3_R1  R/W    0xff    0xff    Write ODT mask DIMM3, RANK1/DIMM3 in SingleRanked          
<23:16>  WODT_D3_R0  R/W    0xff    0xff    Write ODT mask DIMM3, RANK0                                
<15:8>   WODT_D2_R1  R/W    0xff    0xff    Write ODT mask DIMM2, RANK1/DIMM2 in SingleRanked          
<7:0>    WODT_D2_R0  R/W    0xff    0xff    Write ODT mask DIMM2, RANK0                                

Notes:
Together, the LMC_WODT_CTL1 and LMC_WODT_CTL0 CSRs control the write ODT mask.
When a given RANK is selected, the WODT mask for that RANK is used.  The resulting WODT mask is
driven to the DIMMs in the following manner:
           BUNK_ENA=1     BUNK_ENA=0
Mask[7] -> DIMM3, RANK1    DIMM3 
Mask[6] -> DIMM3, RANK0
Mask[5] -> DIMM2, RANK1    DIMM2
Mask[4] -> DIMM2, RANK0
Mask[3] -> DIMM1, RANK1    DIMM1
Mask[2] -> DIMM1, RANK0
Mask[1] -> DIMM0, RANK1    DIMM0
Mask[0] -> DIMM0, RANK0
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_WODT_CTL0 = LMC Write OnDieTermination control
 *  See the description in LMC_WODT_CTL1. 

     ==============================================================
     LMC(0..1)_WODT_CTL0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  UNUSED      RAZ    0        0       Unused                                                     
<31:24>  WODT_D1_R1  R/W    0xff     0xff    Write ODT mask DIMM1, RANK1/DIMM1 in SingleRanked          
<23:16>  WODT_D1_R0  R/W    0xff     0xff    Write ODT mask DIMM1, RANK0                                
<15:8>   WODT_D0_R1  R/W    0xff     0xff    Write ODT mask DIMM0, RANK1/DIMM0 in SingleRanked          
<7:0>    WODT_D0_R0  R/W    0xff     0xff    Write ODT mask DIMM0, RANK0                                

Notes:
Together, the LMC_WODT_CTL1 and LMC_WODT_CTL0 CSRs control the write ODT mask.  See LMC_WODT_CTL1.
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_ECC_SYND = MRD ECC Syndromes
 *   

     ==============================================================
     LMC(0..1)_ECC_SYND Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    MRDSYN0     RO      0       0      MRD ECC Syndrome Quad0                                   


                                            In 64b mode, ecc is calculated on 2 cycle worth of data
                                            MRDSYN0 corresponds to DQ[63:0]_c0_p0
                                            In 32b mode, ecc is calculated on 4 cycle worth of data
                                            MRDSYN0 corresponds to {DQ[31:0]_c0_p1, DQ[31:0]_c0_p0}
                                              where _cC_pP denotes cycle C and phase P 

<15:8>   MRDSYN1     RO      0       0      MRD ECC Syndrome Quad1                                   
                                            In 64b mode, ecc is calculated on 2 cycle worth of data
                                            MRDSYN1 corresponds to DQ[63:0]_c0_p1
                                            In 32b mode, ecc is calculated on 4 cycle worth of data
                                            MRDSYN1 corresponds to {DQ[31:0]_c1_p1, DQ[31:0]_c1_p0}
                                              where _cC_pP denotes cycle C and phase P 

<23:16>  MRDSYN2     RO      0       0      MRD ECC Syndrome Quad2                                   
                                            In 64b mode, ecc is calculated on 2 cycle worth of data
                                            MRDSYN2 corresponds to DQ[63:0]_c1_p0
                                            In 32b mode, ecc is calculated on 4 cycle worth of data
                                            MRDSYN2 corresponds to {DQ[31:0]_c2_p1, DQ[31:0]_c2_p0}
                                              where _cC_pP denotes cycle C and phase P 

<31:24>  MRDSYN3     RO      0       0      MRD ECC Syndrome Quad3                                   
                                            In 64b mode, ecc is calculated on 2 cycle worth of data
                                            MRDSYN3 corresponds to DQ[63:0]_c1_p1
                                            In 32b mode, ecc is calculated on 4 cycle worth of data
                                            MRDSYN3 corresponds to {DQ[31:0]_c3_p1, DQ[31:0]_c3_p0}
                                              where _cC_pP denotes cycle C and phase P 

<63:32>  NS          RAZ     NS      NS       RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *   
 *                  LMC_IFB_CNT_LO  = Performance Counters
 *   

     ==============================================================
     LMC(0..1)_IFB_CNT_LO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>   IFBCNT_LO   RO      0       0      Performance Counter                                      
                                            Low 32-bits of 64-bit counter that increments every
                                            cycle there is something in the in-flight buffer.
<63:32>  NS          RAZ     NS      NS     RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *   
 *                  LMC_IFB_CNT_HI  = Performance Counters
 *   

     ==============================================================
     LMC(0..1)_IFB_CNT_HI Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>   IFBCNT_HI   RO      0       0      Performance Counter to measure Bus Utilization           
                                            Upper 32-bits of 64-bit counter that increments every
                                            cycle there is something in the in-flight buffer.
<63:32>  NS          RAZ     NS      NS     RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *   
 *                  LMC_OPS_CNT_LO  = Performance Counters
 *   

     ==============================================================
     LMC(0..1)_OPS_CNT_LO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>   OPSCNT_LO   RO      0       0      Performance Counter                                      
                                            Low 32-bits of 64-bit counter
                                              DRAM bus utilization = LMC_OPS_CNT_*/LMC_DCLK_CNT_*
<63:32>  NS          RAZ     NS      NS     RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *   
 *                  LMC_OPS_CNT_HI  = Performance Counters
 *   

     ==============================================================
     LMC(0..1)_OPS_CNT_HI Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>   OPSCNT_HI   RO      0       0      Performance Counter to measure Bus Utilization           
                                            Upper 32-bits of 64-bit counter
                                              DRAM bus utilization = LMC_OPS_CNT_*/LMC_DCLK_CNT_*
<63:32>  NS          RAZ     NS      NS     RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *   
 *                  LMC_DCLK_CNT_LO  = Performance Counters
 *   

     ==============================================================
     LMC(0..1)_DCLK_CNT_LO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>   DCLKCNT_LO  RO      0       0      Performance Counter that counts dclks                    
                                            Lower 32-bits of a 64-bit counter.
<63:32>  NS          RAZ     NS      NS     RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *   
 *                  LMC_DCLK_CNT_HI  = Performance Counters
 *   

     ==============================================================
     LMC(0..1)_DCLK_CNT_HI Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>   DCLKCNT_HI  RO      0       0      Performance Counter that counts dclks                    
                                            Upper 32-bits of a 64-bit counter.
<63:32>  NS          RAZ     NS      NS     RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_RODT_CTL = Obsolete LMC Read OnDieTermination control
 *  See the description in LMC_WODT_CTL1. On Reads, Octeon only supports turning on ODT's in
 *  the lower 2 DIMM's with the masks as below. 

     ==============================================================
     LMC(0..1)_RODT_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  UNUSED      RAZ    NS      NS      Unused                                                    
<31:28>  RODT_HI3    R/W    0xf     0x0     Read ODT mask for position 3, data[127:64]                
<27:24>  RODT_HI2    R/W    0xf     0x0     Read ODT mask for position 2, data[127:64]                
<23:20>  RODT_HI1    R/W    0xf     0x0     Read ODT mask for position 1, data[127:64]                
<19:16>  RODT_HI0    R/W    0xf     0x0     Read ODT mask for position 0, data[127:64]                
<15:12>  RODT_LO3    R/W    0xf     0x0     Read ODT mask for position 3, data[ 63: 0]                
<11:8>   RODT_LO2    R/W    0xf     0x0     Read ODT mask for position 2, data[ 63: 0]                
<7:4>    RODT_LO1    R/W    0xf     0x0     Read ODT mask for position 1, data[ 63: 0]                
<3:0>    RODT_LO0    R/W    0xf     0x0     Read ODT mask for position 0, data[ 63: 0]                

Notes:
Due to a pass 1 bug, LMC*_DDR2_CTL[ODT_ENA] does not properly disable this ... LMC*_RODT_CTL
must also be cleared to zero to disable this obsolete read ODT feature.
When a given RANK in position N is selected, the RODT _HI and _LO masks for that position are used.
Mask[3:0] is used for RODT control of the RANKs in positions 3, 2, 1, and 0, respectively.
In  64b mode, DIMMs are assumed to be ordered in the following order:
 position 3: {unused        , DIMM1_RANK1_LO}
 position 2: {unused        , DIMM1_RANK0_LO}
 position 1: {unused        , DIMM0_RANK1_LO}
 position 0: {unused        , DIMM0_RANK0_LO}
In 128b mode, DIMMs are assumed to be ordered in the following order:
 position 3: {DIMM3_RANK1_HI, DIMM1_RANK1_LO}
 position 2: {DIMM3_RANK0_HI, DIMM1_RANK0_LO}
 position 1: {DIMM2_RANK1_HI, DIMM0_RANK1_LO}
 position 0: {DIMM2_RANK0_HI, DIMM0_RANK0_LO}
----------------------------------------------------------------------------------------------------
===
 *
 *                  LMC_DELAY_CFG = Open-loop delay line settings
 *

     ==============================================================
     LMC(0..1)_DELAY_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:15>  UNUSED     RAZ    NS      NS        RESERVED                                                 
<14>     RESERVED14 R/W    0       0         RESERVED.  Must set to 0.                                
<13:10>  DQ         R/W    0       0         Setting for DQ  delay line                               
<9>      RESERVED9  R/W    0       0         RESERVED   Must set to 0.                                
<8:5>    CMD        R/W    0       0         Setting for CMD delay line                               
<4>      RESERVED4  R/W    0       0         RESERVED   Must set to 0.                                
<3:0>    CLK        R/W    0       0         Setting for CLK delay line                               

Notes:
The DQ bits add OUTGOING delay only to dq, dqs_{p,n}, cb, cbs_{p,n}, dqm.  Delay is approximately
50-80ps per setting depending on process/voltage.  There is no need to add incoming delay since by
default all strobe bits are delayed internally by 90 degrees (as was always the case in previous
passes and past chips. 

The CMD add delay to all command bits DDR_RAS, DDR_CAS, DDR_A<15:0>, DDR_BA<2:0>, DDR_n_CS<1:0>_L,
DDR_WE, DDR_CKE and DDR_ODT_<7:0>. Again, delay is 50-80ps per tap. 

The CLK bits add delay to all clock signals DDR_CK_<5:0>_P and DDR_CK_<5:0>_N.  Again, delay is
50-80ps per tap. 

The usage scenario is the following: There is too much delay on command signals and setup on command
is not met. The user can then delay the clock until setup is met. 

At the same time though, dq/dqs should be delayed because there is also a DDR spec tying dqs with
clock. If clock is too much delayed with respect to dqs, writes will start to fail. 

This scheme should eliminate the board need of adding routing delay to clock signals to make high
frequencies work. 
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_CTL1 = LMC Control1
 * This register is an assortment of various control fields needed by the memory controller
 *   

     ==============================================================
     LMC(0..1)_CTL1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:21> UNUSED21     RAZ     NS      NS     RESERVED                                                 
<20>    ECC_ADR      R/W    0x0      1      Include memory reference address in the ECC calculation  
                                            0=disabled, 1=enabled
<19:16> FORCEWRITE   R/W    0x0      0      Force the oldest outstanding write to complete after     
                                            having waited for 2^FORCEWRITE cycles.  0=disabled.
<15:13> IDLEPOWER    R/W    0x0      6      Enter power-down mode after the memory controller has    
                                            been idle for 2^(2+IDLEPOWER) cycles.  0=disabled.
<12:10> SEQUENCE     R/W    0x0      0      Instruction sequence that is run after a 0->1 transition 
                                            on LMC_MEM_CFG0[INIT_START].
                                            0=DDR2 power-up/init, 1=read-leveling
                                            2=self-refresh entry, 3=self-refresh exit,
                                            4=power-down entry, 5=power-down exit, 6=7=illegal
<9>     SIL_MODE     R/W    0x0      1      Read Silo mode.  0=envelope, 1=self-timed.               
<8>     DCC_ENABLE   R/W    0x0      0      Duty Cycle Corrector Enable.                             
                                            0=disable, 1=enable
                                            If the memory part does not support DCC, then this bit
                                            must be set to 0.
<7:0>   RESERVED0    R/W    0x0      NS     MBZ                                                      
----------------------------------------------------------------------------------------------------
===
 *
 *                  LMC_DUAL_MEMCFG = LMC Dual Memory Configuration Register
 *
 * This register controls certain parameters of Dual Memory Configuration 
 *

     ==============================================================
     LMC(0..1)_DUAL_MEMCFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> NS           RAZ     NS     NS      RESERVED                                                 
<31:20> UNUSED20     R/W    0x0     NS      MBZ                                                      
<19>    BANK8        R/W    0x0     NS      See LMC_DDR2_CTL[BANK8]                                  
<18:16> ROW_LSB      R/W    0x3     NS      See LMC_MEM_CFG0[ROW_LSB]                                
<15:8>  UNUSED8      R/W    0x0     NS      MBZ                                                      
<7:0>   CS_MASK      R/W    0x0     NS      Chip select mask.                                        
                                            This mask corresponds to the 8 chip selects for a memory
                                            configuration.  Each reference address will assert one of
                                            the chip selects.  If that chip select has its
                                            corresponding CS_MASK bit set, then the "config1"
                                            parameters are used, otherwise the "config0" parameters
                                            are used.  See additional notes below.

Notes:  
 This register enables the design to have two, separate memory configurations, selected dynamically
 by the reference address.  Note however, that both configurations share LMC_CTL[MODE128b],
 LMC_CTL[XOR_BANK], LMC_MEM_CFG0[PBANK_LSB], LMC_MEM_CFG0[BUNK_ENA], and all timing parameters.
 In this description, "config0" refers to the normal memory configuration that is defined by the
 LMC_MEM_CFG0[ROW_LSB] andLMC_DDR2_CTL[BANK8] parameters and "config1" refers to the dual (or second)
 memory configuration that is defined by this register.  

 Memory config0 must be programmed for the part with the most strict timing requirements.  If a mix of
 4 bank and 8 bank parts is used, then config0 must be used for the 8 bank part (because the timing
 requirements of tFAW and tRP are more strict for 8 bank parts than they are for 4 bank parts).

 Enable mask to chip select mapping is shown below:
   CS_MASK[7] -> DDR_3_CS_<1>
   CS_MASK[6] -> DDR_3_CS_<0>

   CS_MASK[5] -> DDR_2_CS_<1>
   CS_MASK[4] -> DDR_2_CS_<0>

   CS_MASK[3] -> DDR_1_CS_<1>
   CS_MASK[2] -> DDR_1_CS_<0>

   CS_MASK[1] -> DDR_0_CS_<1>
   CS_MASK[0] -> DDR_0_CS_<0>

 the DIMMS are arranged in one of the following arrangements:
   LMC_CTL[MODE128b] == 1                                    LMC_CTL[MODE128b] == 0

   DIMM3_RANK1  | DIMM1_RANK1  highest address               DIMM3_RANK1  highest addres     
   DIMM3_RANK0  | DIMM1_RANK0                                DIMM3_RANK0              
                |                                                                     
   DIMM2_RANK1  | DIMM0_RANK1                                DIMM2_RANK1              
   DIMM2_RANK0  | DIMM0_RANK0  lowest address                DIMM2_RANK0              
                |                                                                     
   data[127:64] | data_[63:0]                                DIMM1_RANK1              
                                                             DIMM1_RANK0              
                                                                                      
                                                             DIMM0_RANK1              
                                                             DIMM0_RANK0  lowest address
                                                                                      
                                                             data_[63:0]                

  DIMM n uses the pair of chip selects DDR_n_CS_<1:0>.  When LMC_CTL[BUNK_ENA] == 1, each
  chip select in the pair asserts independently.  When LMC_CTL[BUNK_ENA] == 0, both chip
  selects in the pair assert together.

  Programming restrictions for CS_MASK:
    when LMC_CTL[BUNK_ENA] == 0, CS_MASK[2n + 1] = CS_MASK[2n], where 0 <= n <= 3
    when LMC_CTL[MODE128b] == 1, CS_MASK[ n + 4] = CS_MASK[ n], where 0 <= n <= 3

----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_RODT_COMP_CTL = LMC Compensation control
 *   

     ==============================================================
     LMC(0..1)_RODT_COMP_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:17>  UNUSED17   R/W     0x0     NS      MBZ                                                        
<16>     ENABLE     R/W     0x0     NS      0=not enabled, 1=enable                                    
<15:12>  UNUSED12   R/W     0x0     NS      MBZ                                                        
<11:8>   NCTL       R/W     0x0     NS      Compensation control bits                                  
<7:5>    UNUSED05   R/W     0x0     NS      MBZ                                                        
<4:0>    PCTL       R/W     0x0     NS      Compensation control bits                                  
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_PLL_CTL = LMC pll control
 *   

     ==============================================================
     LMC(0..1)_PLL_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:28>  UNUSED28   R/W     0x0     NS      MBZ                                                        
<27>     DIV_RESET  R/W     0x1      0      Analog pll divider reset                                   
                                            De-assert at least 500*(CLKR+1) reference clock
                                            cycles following RESET_N de-assertion.
<26>     RESET_N    R/W     0x0      1      Analog pll reset                                           
                                            De-assert at least 5 usec after CLKF, CLKR,
                                            and EN* are set up.
<25:14>  CLKF       R/W      31     NS      Multiply reference by CLKF + 1                             
                                            CLKF must be <= 128
<13:8>   CLKR       R/W     0x0     NS      Divide reference by CLKR + 1                               
<7:6>    UNUSED06   R/W     0x0     NS      MBZ                                                        
<5:5>    EN16       R/W     0x0     NS      Divide output by 16                                        
<4:4>    EN12       R/W     0x0     NS      Divide output by 12                                        
<3:3>    EN8        R/W     0x1     NS      Divide output by 8                                         
<2:2>    EN6        R/W     0x0     NS      Divide output by 6                                         
<1:1>    EN4        R/W     0x0     NS      Divide output by 4                                         
<0:0>    EN2        R/W     0x0     NS      Divide output by 2                                         

Notes:
   This CSR is only relevant for LMC0. LMC1_PLL_CTL is not used.

Exactly one of EN2, EN4, EN6, EN8, EN12, EN16 must be set.

The resultant DDR_CK frequency is the DDR2_REF_CLK
frequency multiplied by:

    (CLKF + 1) / ((CLKR + 1) * EN(2,4,6,8,12,16))

The PLL frequency, which is:

    (DDR2_REF_CLK freq) * ((CLKF + 1) / (CLKR + 1))

must reside between 1.2 and 2.5 GHz. A faster PLL frequency is desirable if there is a choice.

----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_PLL_STATUS = LMC pll status
 *   

     ==============================================================
     LMC(0..1)_PLL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  UNUSED32   RAZ     X       NS      MBZ                                                        
<31:27>  DDR__NCTL  RO      NS      NS      DDR nctl from compensation circuit                         
<26:22>  DDR__PCTL  RO      NS      NS      DDR pctl from compensation circuit                         
<21:2>   UNUSED02   RAZ     X       NS      MBZ                                                        
<1:1>    RFSLIP     R/W1C   0x0     NS      Reference clock slip                                       
<0:0>    FBSLIP     R/W1C   0x0     NS      Feedback clock slip                                        

Notes:
LMC1_PLL_STATUS[FBSLIP] and LMC1_PLL_STATUS[RFSLIP] are extraneous and RAZ.
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_DCLK_CTL = LMC DCLK generation control
 *   

     ==============================================================
     LMC(0..1)_DCLK_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>   UNUSED08   RAZ     X       NS      MBZ                                                        
<7>      OFF90_ENA  R/W     0x0     NS      0=use global DCLK (i.e. the PLL) directly for LMC1         
                                            1=use the 90 degree DCLK DLL to offset LMC1 DCLK
<6>      DCLK90_BYP R/W     0x0     NS      0=90 degree DCLK DLL uses sampled delay from LMC0          
                                            1=90 degree DCLK DLL uses DCLK90_VLU
                                            See DCLK90_VLU.
<5>      DCLK90_LD  R/W     0x0     NS      The 90 degree DCLK DLL samples the delay setting           
                                            from LMC0's DLL when this field transitions 0->1
<4:0>    DCLK90_VLU R/W     0x0     NS      Manual open-loop delay setting.                            
                                            The LMC1 90 degree DCLK DLL uses DCLK90_VLU rather
                                            than the delay setting sampled from LMC0 when
                                            DCLK90_BYP=1.

Notes:
   This CSR is only relevant for LMC1. LMC0_DCLK_CTL is not used.
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_DLL_CTL = LMC DLL control and DCLK reset
 *   

     ==============================================================
     LMC(0..1)_DLL_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>   UNUSED08   RAZ     X       NS      MBZ                                                        
<7>      DRESET      R/W    0x1     0x0     Dclk domain reset.  The reset signal that is used by the   
                                            Dclk domain is (DRESET || ECLK_RESET).
<6>      DLL90_BYP   R/W    0x0     0x0     DDR DLL90 Bypass: When set, the DDR90 DLL is to be         
                                            bypassed and the setting is defined by DLL90_VLU
<5>      DLL90_ENA   R/W    0x0     0x0     DDR Quad DLL Enable: A 0->1 transition on this bit after   
                                            DCLK init sequence resets the DDR 90 DLL. Should                            
                                            happen at startup before any activity in DDR. QDLL_ENA
                                            must not transition 1->0 outside of a DRESET sequence
                                            (i.e. it must remain 1 until the next DRESET).
                                            DRESET should be asserted before and for 10 usec
                                            following the 0->1 transition on QDLL_ENA.
<4:0>    DLL90_VLU   R/W    0x0     NS      Contains the open loop setting value for the DDR90 delay   
                                            line.                                                                                 

Notes:
----------------------------------------------------------------------------------------------------
===
 *   

     ==============================================================
     LMC(0..1)_BIST_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  UNUSED01 RAZ       X           0        MBZ                                                    
<0>     START    R/W       0           0        A 0->1 transition causes BiST to run.                  

Notes:
 This controls BiST only for the memories that operate on DCLK.  The normal, chip-wide BiST flow
 controls BiST for the memories that operate on ECLK.
----------------------------------------------------------------------------------------------------
===
 *   

     ==============================================================
     LMC(0..1)_BIST_RESULT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:11> UNUSED11 RAZ       X           0        MBZ                                                    
<10>    CSRD2E   RO        X           0        BiST result of CSRD2E memory (0=pass, !0=fail)       
<9>     CSRE2D   RO        X           0        BiST result of CSRE2D memory (0=pass, !0=fail)       
<8>     MWF      RO        X           0        BiST result of MWF memories (0=pass, !0=fail)          
<7:5>   MWD      RO        X           0        BiST result of MWD memories (0=pass, !0=fail)          
<4>     MWC      RO        X           0        BiST result of MWC memories (0=pass, !0=fail)          
<3>     MRF      RO        X           0        BiST result of MRF memories (0=pass, !0=fail)          
<2:0>   MRD      RO        X           0        BiST result of MRD memories (0=pass, !0=fail)          

Notes:
 Access to the internal BiST results
 Each bit is the BiST result of an individual memory (per bit, 0=pass and 1=fail).
----------------------------------------------------------------------------------------------------
===

 *   

     ==============================================================
     LMC(0..1)_READ_LEVEL_RANK(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:38> UNUSED38 RAZ       X           0        MBZ                                                    
<37:36> STATUS   RO        0x0         NS       Indicates status of the read-levelling and where       
                                                 the BYTE* programmings in <35:0> came from:
                                                 0 = BYTE* values are their reset value
                                                 1 = BYTE* values were set via a CSR write to this register
                                                 2 = read-leveling sequence currently in progress (BYTE* values are unpredictable)
                                                 3 = BYTE* values came from a complete read-leveling sequence
<35:32> BYTE8    R/W       0x0         NS       Deskew setting                                         
<31:28> BYTE7    R/W       0x0         NS       Deskew setting                                         
<27:24> BYTE6    R/W       0x0         NS       Deskew setting                                         
<23:20> BYTE5    R/W       0x0         NS       Deskew setting                                         
<19:16> BYTE4    R/W       0x0         NS       Deskew setting                                         
<15:12> BYTE3    R/W       0x0         NS       Deskew setting                                         
<11:8>  BYTE2    R/W       0x0         NS       Deskew setting                                         
<7:4>   BYTE1    R/W       0x0         NS       Deskew setting                                         
<3:0>   BYTE0    R/W       0x0         NS       Deskew setting                                         

Notes:
  This is four CSRs per LMC, one per each rank.
  Each CSR is written by HW during a read-leveling sequence for the rank. (HW sets STATUS==3 after HW read-leveling completes for the rank.)
  Each CSR may also be written by SW, but not while a read-leveling sequence is in progress. (HW sets STATUS==1 after a CSR write.)
  Deskew setting is measured in units of 1/4 DCLK, so the above BYTE* values can range over 4 DCLKs.
  SW initiates a HW read-leveling sequence by programming LMC*_READ_LEVEL_CTL and writing INIT_START=1 with SEQUENCE=1.
  See LMC*_READ_LEVEL_CTL.
----------------------------------------------------------------------------------------------------
===

 *   

     ==============================================================
     LMC(0..1)_READ_LEVEL_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:44> UNUSED44 RAZ      0x0         0x0       MBZ                                                    
<43:40> RANKMASK R/W      0x0         0x0       Selects ranks to be leveled                            
                                                 to read-level rank i, set RANKMASK<i>
<39:32> PATTERN  R/W      0xaa        0xaa      All DQ driven to PATTERN[burst], 0 <= burst <= 7       
                                                 All DQ driven to ~PATTERN[burst-8], 8 <= burst <= 15
<31:16> ROW      R/W      0x0         0x0       Row    address used to write/read data pattern         
<15:4>  COL      R/W      0x0         0x0       Column address used to write/read data pattern         
<3>     UNUSED03 R/W      0x0         0x0       MBZ                                                    
<2:0>   BNK      R/W      0x0         0x0       Bank   address used to write/read data pattern         

Notes:
  The HW writes and reads the cache block selected by ROW, COL, BNK and the rank as part of a read-leveling sequence for a rank.
  A cache block write is 16 72-bit words. PATTERN selects the write value. For the first 8
  words, the write value is the bit PATTERN<i> duplicated into a 72-bit vector. The write value of
  the last 8 words is the inverse of the write value of the first 8 words.
  See LMC*_READ_LEVEL_RANK*.
----------------------------------------------------------------------------------------------------
===

 *   

     ==============================================================
     LMC(0..1)_READ_LEVEL_DBG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> UNUSED32 RAZ      0x0         0x0       MBZ                                                    
<31:16> BITMASK  RO       0x0         0x0       Bitmask generated during deskew settings sweep         
                                                 BITMASK[n]=0 means deskew setting n failed
                                                 BITMASK[n]=1 means deskew setting n passed
                                                 for 0 <= n <= 15
<15:4>  UNUSED04 RAZ      0x0         0x0       MBZ                                                    
<3:0>   BYTE     R/W      0x0         0x0       0 <= BYTE <= 8                                         

Notes:
  A given read of LMC*_READ_LEVEL_DBG returns the read-leveling pass/fail results for all possible
  delay settings (i.e. the BITMASK) for only one byte in the last rank that the HW read-leveled.
  LMC*_READ_LEVEL_DBG[BYTE] selects the particular byte.
  To get these pass/fail results for another different rank, you must run the hardware read-leveling
  again. For example, it is possible to get the BITMASK results for every byte of every rank
  if you run read-leveling separately for each rank, probing LMC*_READ_LEVEL_DBG between each
  read-leveling.
----------------------------------------------------------------------------------------------------
===



 *
 * MIO_BOOT_REG_CFG = MIO Boot Region Config Register (1 per region * 8 regions)
 *
 * Contains region enable, region or, region ALE/SAM mode, region width, region size, and region base
 * address parameters.
 *
 * DMACK, if non-zero, will assert the corresponding boot_dmack[n] pin when an access to this region
 * is performed.  DMACK is encoded as follows: 0 = disabled, 1 = boot_dmack[0], 2 = boot_dmack[1],
 * 3 = boot_dmack[2].  This is useful for CF cards in PC card memory mode that support DMA because the
 * -REG and -DMACK pins are shared.  Note: the assertion level of boot_dmack is specified by
 * MIO_BOOT_DMA_TIMn[DMACK_PI].
 *
 * TIM_MULT specifies the timing multiplier for a region.  The timing multiplier applies to all timing
 * parameters, except for WAIT and RD_DLY, which simply count eclks.  TIM_MULT is encoded as follows:
 * 0 = 4x, 1 = 1x, 2 = 2x, 3 = 8x.
 *
 * RD_DLY specifies the read sample delay in eclk cycles for a region.  For reads, the data bus is
 * normally sampled on the same eclk edge that drives boot_oe_n to the inactive state (or the eclk edge
 * that toggles the lower address bits in page mode).  This parameter can delay that sampling edge by up
 * to 7 eclks.  Note: the number of eclk cycles counted by the PAGE and RD_HLD timing parameters must be
 * greater than RD_DLY.
 *
 * Region or bit will assert the given region's chip enable when there is an address hit in the previous
 * region (no function for region 0, since there is no previous region).  This is useful for CF cards
 * because it allows the use of 2 separate timing configurations for common memory and attribute memory.
 *
 * ALE (address latch enable) mode enables the multiplexed address/data bus mode.  The reset value for
 * region 0 is the value of boot_ad[15] on the de-assertion of reset.  This pin has an internal pulldown,
 * so place a pullup on boot_ad[15] to enable this mode out of reset for region 0.
 *
 * SAM (strobe AND mode) internally combines the output enable and write enable strobes into a single
 * strobe that is then driven onto both boot_oe_n and boot_we_n.  This is useful for parts that use a
 * single strobe along with a read/write bit (the read/write bit can be driven from an address pin).
 *
 * Bus width can be specified as either 8 bits (WIDTH low) or 16 bits (WIDTH high).  The reset value for
 * region 0 is the value of boot_ad[14] on the de-assertion of reset.  This pin has an internal pulldown,
 * so place a pullup on boot_ad[14] if a 16 bit bus is desired out of reset for region 0.
 *
 * Region size is in 64k blocks and in -1 notation (i.e. 0 = 1 64k block, 1 = 2 64k blocks, etc.).
 *
 * Base address specifies address bits [31:16] of the first 64k block of the region.
 *

     ==============================================================
     MIO_BOOT_REG_CFG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:44> RSVD     RAZ      NS          NS        Reserved                                           |   
<43:42> DMACK    R/W      0x0         NS        Region 0 DMACK                                     |   
<41:40> TIM_MULT R/W      0x0         NS        Region 0 timing multiplier                         |   
<39:37> RD_DLY   R/W      0x0         NS        Region 0 read sample delay                         |   
<36>    SAM      R/W      0x0         NS        Region 0 SAM                                       |   
<35:34> WE_EXT   R/W      0x0         NS        Region 0 write enable count extension              |   
<33:32> OE_EXT   R/W      0x0         NS        Region 0 output enable count extension             |   
<31>    EN       R/W      0x1         0x1       Region 0 enable                                    |   
<30>    OR       R/W      0x0         0x0       No function for region 0                           |   
<29>    ALE      R/W      0x0         NS        Region 0 ALE mode                                  |   
<28>    WIDTH    R/W      0x0         NS        Region 0 bus width                                 |   
<27:16> SIZE     R/W      0xfff       NS        Region 0 size                                      |   
<15:0>  BASE     R/W      0x1fc0      0x1fc0    Region 0 base address                              |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_BOOT_REG_CFG(0..7) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:44> RSVD     RAZ      NS          NS        Reserved                                           |   
<43:42> DMACK    R/W      0x0         NS        Region @ DMACK                                     |   
<41:40> TIM_MULT R/W      0x0         NS        Region @ timing multiplier                         |   
<39:37> RD_DLY   R/W      0x0         NS        Region @ read sample delay                         |   
<36>    SAM      R/W      0x0         NS        Region @ SAM mode                                  |   
<35:34> WE_EXT   R/W      0x0         NS        Region @ write enable count extension              |   
<33:32> OE_EXT   R/W      0x0         NS        Region @ output enable count extension             |   
<31>    EN       R/W      0x0         NS        Region @ enable                                    |   
<30>    OR       R/W      0x0         NS        Region @ or bit                                    |   
<29>    ALE      R/W      0x0         NS        Region @ ALE mode                                  |   
<28>    WIDTH    R/W      0x0         NS        Region @ bus width                                 |   
<27:16> SIZE     R/W      0x0         NS        Region @ size                                      |   
<15:0>  BASE     R/W      0x0         NS        Region @ base address                              |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_REG_TIM = MIO Boot Region Timing Register (1 per region * 8 regions)
 *
 * Contains page mode, wait mode, page size, and region timing parameters.
 *
 * Page size is encoded as follows: 0 = 8 bytes, 1 = 2 bytes, 2 = 4 bytes, 3 = 8 bytes.
 *
 * Note: OE, WE, PAGE, and ALE must be non-zero to ensure legal transitions on the corresponding boot bus outputs.
 *
 * Note: WAIT must be non-zero if WAITM is set.
 *

     ==============================================================
     MIO_BOOT_REG_TIM0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63>    PAGEM    R/W      0x0         NS        Region 0 page mode                                 |   
<62>    WAITM    R/W      0x0         NS        Region 0 wait mode                                 |   
<61:60> PAGES    R/W      0x0         NS        Region 0 page size                                 |   
<59:54> ALE      R/W      4           NS        Region 0 ALE count                                 |   
<53:48> PAGE     R/W      63          NS        Region 0 page count                                |   
<47:42> WAIT     R/W      63          NS        Region 0 wait count                                |   
<41:36> PAUSE    R/W      17          NS        Region 0 pause count                               |   
<35:30> WR_HLD   R/W      63          NS        Region 0 write hold count                          |   
<29:24> RD_HLD   R/W      5           NS        Region 0 read hold count                           |   
<23:18> WE       R/W      63          NS        Region 0 write enable count                        |   
<17:12> OE       R/W      63          NS        Region 0 output enable count                       |   
<11:6>  CE       R/W      5           NS        Region 0 chip enable count                         |   
<5:0>   ADR      R/W      8           NS        Region 0 address count                             |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_BOOT_REG_TIM(0..7) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63>    PAGEM    R/W      0x0         NS        Region @ page mode                                 |   
<62>    WAITM    R/W      0x0         NS        Region @ wait mode                                 |   
<61:60> PAGES    R/W      0x0         NS        Region @ page size                                 |   
<59:54> ALE      R/W      63          NS        Region @ ALE count                                 |   
<53:48> PAGE     R/W      63          NS        Region @ page count                                |   
<47:42> WAIT     R/W      63          NS        Region @ wait count                                |   
<41:36> PAUSE    R/W      63          NS        Region @ pause count                               |   
<35:30> WR_HLD   R/W      63          NS        Region @ write hold count                          |   
<29:24> RD_HLD   R/W      63          NS        Region @ read hold count                           |   
<23:18> WE       R/W      63          NS        Region @ write enable count                        |   
<17:12> OE       R/W      63          NS        Region @ output enable count                       |   
<11:6>  CE       R/W      63          NS        Region @ chip enable count                         |   
<5:0>   ADR      R/W      63          NS        Region @ address count                             |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_LOC_CFG = MIO Boot Local Region Config Register (1 per region * 2 regions)
 *
 * Contains local region enable and local region base address parameters.  Each local region is 128
 * bytes organized as 16 entries x 8 bytes.
 *
 * Base address specifies address bits [31:7] of the region.
 *

     ==============================================================
     MIO_BOOT_LOC_CFG(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVD2    RAZ      NS          NS        Reserved                                           |   
<31>    EN       R/W      0x0         NS        Local region @ enable                              |   
<30:28> RSVD1    RAZ      NS          NS        Reserved                                           |   
<27:3>  BASE     R/W      0x0         NS        Local region @ base address                        |   
<2:0>   RSVD0    RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_LOC_ADR = MIO Boot Local Memory Address Register
 *
 * Specifies the address for reading or writing the local memory.  This address will post-increment
 * following an access to the MIO Boot Local Memory Data Register (MIO_BOOT_LOC_DAT).
 *
 * Local memory region 0 exists from addresses 0x00 - 0x78.
 * Local memory region 1 exists from addresses 0x80 - 0xf8.
 *

     ==============================================================
     MIO_BOOT_LOC_ADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVD1    RAZ      NS          NS        Reserved                                           |   
<7:3>   ADR      R/W      0x0         NS        Local memory address                               |   
<2:0>   RSVD0    RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_LOC_DAT = MIO Boot Local Memory Data Register
 *
 * This is a pseudo-register that will read/write the local memory at the address specified by the MIO
 * Boot Local Address Register (MIO_BOOT_LOC_ADR) when accessed.
 *

     ==============================================================
     MIO_BOOT_LOC_DAT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  DATA     R/W      NS          NS        Local memory data                                  |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_ERR = MIO Boot Error Register
 *
 * Contains the address decode error and wait mode error bits.  Address decode error is set when a
 * boot bus access does not hit in any of the 8 remote regions or 2 local regions.  Wait mode error is
 * set when wait mode is enabled and the external wait signal is not de-asserted after 32k eclk cycles.
 *

     ==============================================================
     MIO_BOOT_ERR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2>  RSVD     RAZ      NS          NS        Reserved                                           |   
<1>     WAIT_ERR R/W1C    0x0         0x0       Wait mode error                                    |   
<0>     ADR_ERR  R/W1C    0x0         0x0       Address decode error                               |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_INT = MIO Boot Interrupt Register
 *
 * Contains the interrupt enable bits for address decode error and wait mode error.
 *

     ==============================================================
     MIO_BOOT_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2>  RSVD     RAZ      NS          NS        Reserved                                           |   
<1>     WAIT_INT R/W      0x0         NS        Wait mode error interrupt enable                   |   
<0>     ADR_INT  R/W      0x0         NS        Address decode error interrupt enable              |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_THR = MIO Boot Threshold Register
 *
 * Contains MIO Boot threshold values:
 *
 * FIF_THR = Assert ncb__busy when the Boot NCB input FIFO reaches this level (not typically for
 *           customer use).
 *
 * DMA_THR = When non-DMA accesses are pending, perform a DMA access after this value of non-DMA
 *           accesses have completed.  If set to zero, only perform a DMA access when non-DMA
 *           accesses are not pending.
 *

     ==============================================================
     MIO_BOOT_THR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:22> RSVD2    RAZ      NS          NS        Reserved                                           |   
<21:16> DMA_THR  R/W      0x0         NS        DMA threshold                                      |   
<15:14> RSVD1    RAZ      NS          NS        Reserved                                           |   
<13:8>  FIF_CNT  RO       0x0         NS        Current NCB FIFO count                             |   
<7:6>   RSVD0    RAZ      NS          NS        Reserved                                           |   
<5:0>   FIF_THR  R/W      26          26        NCB busy threshold                                 |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_COMP = MIO Boot Compensation Register
 *

     ==============================================================
     MIO_BOOT_COMP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:10> RSVD     RAZ      NS          NS        Reserved                                           |   
<9:5>   PCTL     R/W      0x1f        NS        Boot bus PCTL                                      |   
<4:0>   NCTL     R/W      0x1f        NS        Boot bus NCTL                                      |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_BIST_STAT = MIO Boot BIST Status Register
 *
 * Contains the BIST status for the MIO boot memories.  '0' = pass, '1' = fail.
 *

     ==============================================================
     MIO_BOOT_BIST_STAT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>  RSVD     RAZ      NS          NS        Reserved                                           |   
<3>     NCBO     RO       0x0         0x0       NCB output FIFO BIST status                        |   
<2>     DMA      RO       0x0         0x0       DMA memory BIST status                             |   
<1>     LOC      RO       0x0         0x0       Local memory BIST status                           |   
<0>     NCBI     RO       0x0         0x0       NCB input FIFO BIST status                         |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_DMA_CFG = MIO Boot DMA Config Register (1 per engine * 3 engines)
 *
 * SIZE is specified in number of bus transfers, where one transfer is equal to the following number
 * of bytes dependent on MIO_BOOT_DMA_TIMn[WIDTH] and MIO_BOOT_DMA_TIMn[DDR]:
 *
 * WIDTH     DDR      Transfer Size (bytes)
 * ----------------------------------------
 *   0        0               2
 *   0        1               4
 *   1        0               4
 *   1        1               8
 *
 * Note: ADR must be aligned to the bus width (i.e. 16 bit aligned if WIDTH=0, 32 bit aligned if WIDTH=1).
 *

     ==============================================================
     MIO_BOOT_DMA_CFG(0..2) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63>    EN       R/W      0x0         NS        DMA Engine @ enable                                |   
<62>    RW       R/W      0x0         NS        DMA Engine @ R/W bit (0 = read, 1 = write)         |   
<61>    CLR      R/W      0x0         NS        DMA Engine @ clear EN on device terminated burst   |   
<60>    RSVD     RAZ      NS          NS        Reserved                                           |   
<59>    SWAP32   R/W      0x0         NS        DMA Engine @ 32 bit swap                           |   
<58>    SWAP16   R/W      0x0         NS        DMA Engine @ 16 bit swap                           |   
<57>    SWAP8    R/W      0x0         NS        DMA Engine @ 8 bit swap                            |   
<56>    ENDIAN   R/W      0x0         NS        DMA Engine @ NCB endian mode (0 = big, 1 = little) |   
<55:36> SIZE     R/W      0x0         NS        DMA Engine @ size                                  |   
<35:0>  ADR      R/W      0x0         NS        DMA Engine @ address                               |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_DMA_TIM = MIO Boot DMA Timing Register (1 per engine * 3 engines)
 *
 * DMACK_PI and DMARQ_PI invert the assertion level of boot_dmack[n] and boot_dmarq[n].  The default
 * polarity of boot_dmack[2:0] and boot_dmarq[2:0] is active high, thus setting the polarity
 * inversion bits changes the polarity to active low.  To interface with CF cards in True IDE Mode,
 * the corresponding DMARQ_PI[n] should be clear and DMACK_PI[n] should be set.
 *
 * TIM_MULT specifies the timing multiplier for an engine.  The timing multiplier applies to all timing
 * parameters, except for DMARQ and RD_DLY, which simply count eclks.  TIM_MULT is encoded as follows:
 * 0 = 4x, 1 = 1x, 2 = 2x, 3 = 8x.
 *
 * RD_DLY specifies the read sample delay in eclk cycles for an engine.  For reads, the data bus is
 * normally sampled on the same eclk edge that drives boot_oe_n high (and also low in DDR mode).
 * This parameter can delay that sampling edge by up to 7 eclks.  Note: the number of eclk cycles
 * counted by the OE_A and DMACK_H + PAUSE timing parameters must be greater than RD_DLY.
 *
 * If DDR is set, then WE_N must be less than WE_A.
 *

     ==============================================================
     MIO_BOOT_DMA_TIM(0..2) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63>    DMACK_PI R/W      0x0         NS        DMA Engine @ DMA ack polarity inversion            |   
<62>    DMARQ_PI R/W      0x0         NS        DMA Engine @ DMA request polarity inversion        |   
<61:60> TIM_MULT R/W      0x0         NS        DMA Engine @ timing multiplier                     |   
<59:57> RD_DLY   R/W      0x0         NS        DMA Engine @ read sample delay                     |   
<56>    DDR      R/W      0x0         NS        DMA Engine @ DDR mode                              |   
<55>    WIDTH    R/W      0x0         NS        DMA Engine @ bus width (0 = 16 bits, 1 = 32 bits)  |   
<54:48> RSVD     RAZ      NS          NS        Reserved                                           |   
<47:42> PAUSE    R/W      63          NS        DMA Engine @ pause count                           |   
<41:36> DMACK_H  R/W      63          NS        DMA Engine @ DMA ack hold count                    |   
<35:30> WE_N     R/W      63          NS        DMA Engine @ write enable negated count            |   
<29:24> WE_A     R/W      63          NS        DMA Engine @ write enable asserted count           |   
<23:18> OE_N     R/W      63          NS        DMA Engine @ output enable negated count           |   
<17:12> OE_A     R/W      63          NS        DMA Engine @ output enable asserted count          |   
<11:6>  DMACK_S  R/W      63          NS        DMA Engine @ DMA ack setup count                   |   
<5:0>   DMARQ    R/W      63          NS        DMA Engine @ DMA request count (must be non-zero)  |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_DMA_INT = MIO Boot DMA Interrupt Register (1 per engine * 3 engines)
 *

     ==============================================================
     MIO_BOOT_DMA_INT(0..2) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2>  RSVD     RAZ      NS          NS        Reserved                                           |   
<1>     DMARQ    RO       NS          NS        DMA Engine @ DMARQ asserted interrupt              |   
<0>     DONE     R/W1C    0x0         NS        DMA Engine @ request completion interrupt          |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_DMA_INT_EN = MIO Boot DMA Interrupt Enable Register (1 per engine * 3 engines)
 *

     ==============================================================
     MIO_BOOT_DMA_INT_EN(0..2) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2>  RSVD     RAZ      NS          NS        Reserved                                           |   
<1>     DMARQ    R/W      0x0         NS        DMA Engine @ DMARQ asserted interrupt enable       |   
<0>     DONE     R/W      0x0         NS        DMA Engine @ request completion interrupt enable   |   
----------------------------------------------------------------------------------------------------
===


 *
 * MIO_UART@_RBR = MIO UART@ Receive Buffer Register
 *
 * The Receive Buffer Register (RBR) is a read-only register that contains the data byte received on the
 * serial input port (sin). The data in this register is valid only if the Data Ready (DR) bit in the
 * Line status Register (LSR) is set. When the FIFOs are programmed OFF, the data in the RBR must be
 * read before the next data arrives, otherwise it is overwritten, resulting in an overrun error. When
 * the FIFOs are programmed ON, this register accesses the head of the receive FIFO. If the receive FIFO
 * is full (64 characters) and this register is not read before the next data character arrives, then the
 * data already in the FIFO is preserved, but any incoming data is lost. An overrun error also occurs.
 *
 * Note: The Divisor Latch Address Bit (DLAB) of the Line Control Register (LCR) must be clear to access
 * this register.
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * RBR, THR, and DLL registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_RBR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVD     RAZ      NS          NS        Reserved                                           |   
<7:0>   RBR      RO       0x0         NS        Receive Buffer Register                            |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_THR = MIO UART@ Transmit Holding Register
 *
 * Transmit Holding Register (THR) is a write-only register that contains data to be transmitted on the
 * serial output port (sout). Data can be written to the THR any time that the THR Empty (THRE) bit of
 * the Line Status Register (LSR) is set.
 *
 * If FIFOs are not enabled and THRE is set, writing a single character to the THR clears the THRE. Any
 * additional writes to the THR before the THRE is set again causes the THR data to be overwritten.
 *
 * If FIFOs are enabled and THRE is set (and Programmable THRE mode disabled), 64 characters of data may
 * be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results
 * in the write data being lost.
 *
 * Note: The Divisor Latch Address Bit (DLAB) of the Line Control Register (LCR) must be clear to access
 * this register.
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * RBR, THR, and DLL registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_THR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVD     WO       NS          NS        Reserved                                           |   
<7:0>   THR      WO       0x0         NS        Transmit Holding Register                          |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_DLL = MIO UART@ Divisor Latch Low Register
 *
 * The DLH (Divisor Latch High) register in conjunction with DLL (Divisor Latch Low) register form a
 * 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. It is
 * accessed by first setting the DLAB bit (bit 7) in the Line Control Register (LCR). The output baud
 * rate is equal to eclk frequency divided by sixteen times the value of the baud rate divisor, as
 * follows: baud rate = eclk / (16 * divisor).
 *
 * Note that the BUSY bit (bit 0) of the UART Status Register (USR) must be clear before writing this
 * register. BUSY bit is always clear in PASS3.
 *
 * Note that with the Divisor Latch Registers (DLL and DLH) set to zero, the baud clock is disabled
 * and no serial communications will occur. Also, once the DLL or DLH is set, at least 8 clock cycles
 * of eclk should be allowed to pass before transmitting or receiving data.
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * RBR, THR, and DLL registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_DLL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVD     RAZ      NS          NS        Reserved                                           |   
<7:0>   DLL      R/W      0x0         NS        Divisor Latch Low Register                         |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_IER = MIO UART@ Interrupt Enable Register
 *
 * Interrupt Enable Register (IER) is a read/write register that contains four bits that enable
 * the generation of interrupts. These four bits are the Enable Received Data Available Interrupt
 * (ERBFI), the Enable Transmitter Holding Register Empty Interrupt (ETBEI), the Enable Receiver Line
 * Status Interrupt (ELSI), and the Enable Modem Status Interrupt (EDSSI).
 *
 * The IER also contains an enable bit (PTIME) for the Programmable THRE Interrupt mode.
 *
 * Note: The Divisor Latch Address Bit (DLAB) of the Line Control Register (LCR) must be clear to access
 * this register.
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * IER and DLH registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_IER Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVD1    RAZ      NS          NS        Reserved                                           |   
<7>     PTIME    R/W      0x0         NS        Programmable THRE Interrupt mode enable            |   
<6:4>   RSVD0    RAZ      0x0         NS        Reserved                                           |   
<3>     EDSSI    R/W      0x0         NS        Enable Modem Status Interrupt                      |   
<2>     ELSI     R/W      0x0         NS        Enable Receiver Line Status Interrupt              |   
<1>     ETBEI    R/W      0x0         NS        Enable Transmitter Holding Register Empty Interrupt|   
<0>     ERBFI    R/W      0x0         NS        Enable Received Data Available Interrupt           |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_DLH = MIO UART@ Divisor Latch High Register
 *
 * The DLH (Divisor Latch High) register in conjunction with DLL (Divisor Latch Low) register form a
 * 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. It is
 * accessed by first setting the DLAB bit (bit 7) in the Line Control Register (LCR). The output baud
 * rate is equal to eclk frequency divided by sixteen times the value of the baud rate divisor, as
 * follows: baud rate = eclk / (16 * divisor).
 *
 * Note that the BUSY bit (bit 0) of the UART Status Register (USR) must be clear before writing this
 * register. BUSY bit is always clear in PASS3.
 *
 * Note that with the Divisor Latch Registers (DLL and DLH) set to zero, the baud clock is disabled
 * and no serial communications will occur. Also, once the DLL or DLH is set, at least 8 clock cycles
 * of eclk should be allowed to pass before transmitting or receiving data.
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * IER and DLH registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_DLH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVD     RAZ      NS          NS        Reserved                                           |   
<7:0>   DLH      R/W      0x0         NS        Divisor Latch High Register                        |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_IIR = MIO UART@ Interrupt Identity Register
 *
 * The Interrupt Identity Register (IIR) is a read-only register that identifies the source of an
 * interrupt. The upper two bits of the register are FIFO-enabled bits. These bits are '00' if the FIFOs
 * are disabled, and '11' if they are enabled. The lower four bits identify the highest priority pending
 * interrupt. The following table defines interrupt source decoding, interrupt priority, and interrupt
 * reset control:
 *
 * Interrupt   Priority   Interrupt         Interrupt                                       Interrupt
 * ID          Level      Type              Source                                          Reset By
 * ---------------------------------------------------------------------------------------------------------------------------------
 * 0001        -          None              None                                            -
 *
 * 0110        Highest    Receiver Line     Overrun, parity, or framing errors or break     Reading the Line Status Register
 *                        Status            interrupt
 *
 * 0100        Second     Received Data     Receiver data available (FIFOs disabled) or     Reading the Receiver Buffer Register
 *                        Available         RX FIFO trigger level reached (FIFOs            (FIFOs disabled) or the FIFO drops below
 *                                          enabled)                                        the trigger level (FIFOs enabled)
 *
 * 1100        Second     Character         No characters in or out of the RX FIFO          Reading the Receiver Buffer Register
 *                        Timeout           during the last 4 character times and there
 *                        Indication        is at least 1 character in it during this
 *                                          time
 *
 * 0010        Third      Transmitter       Transmitter Holding Register Empty              Reading the Interrupt Identity Register
 *                        Holding           (Programmable THRE Mode disabled) or TX         (if source of interrupt) or writing into
 *                        Register          FIFO at or below threshold (Programmable        THR (FIFOs or THRE Mode disabled) or TX
 *                        Empty             THRE Mode enabled)                              FIFO above threshold (FIFOs and THRE
 *                                                                                          Mode enabled)
 *
 * 0000        Fourth     Modem Status      Clear To Send (CTS) or Data Set Ready (DSR)     Reading the Modem Status Register
 *                        Changed           or Ring Indicator (RI) or Data Carrier
 *                                          Detect (DCD) changed (note: if auto flow
 *                                          control mode is enabled, a change in CTS
 *                                          will not cause an interrupt)
 *
 * 0111        Fifth      Busy Detect       Software has tried to write to the Line         Reading the UART Status Register
 *                        Indication        Control Register while the BUSY bit of the
 *                                          UART Status Register was set
 *
 * Note: The Busy Detect Indication interrupt has been removed from PASS3 and will never assert.
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * IIR and FCR registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_IIR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVD1    RAZ      NS          NS        Reserved                                           |   
<7:6>   FEN      RO       0x0         NS        FIFO-enabled bits                                  |   
<5:4>   RSVD0    RAZ      0x0         NS        Reserved                                           |   
<3:0>   IID      RO       0x1         NS        Interrupt ID                                       |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_FCR = MIO UART@ FIFO Control Register
 *
 * The FIFO Control Register (FCR) is a write-only register that controls the read and write data FIFO
 * operation. When FIFOs and Programmable THRE Interrupt mode are enabled, this register also controls
 * the THRE Interrupt empty threshold level.
 *
 * Setting bit 0 of the FCR enables the transmit and receive FIFOs. Whenever the value of this bit is
 * changed both the TX and RX FIFOs will be reset.
 *
 * Writing a '1' to bit 1 of the FCR resets and flushes data in the receive FIFO. Note that this bit is
 * self-clearing and it is not necessary to clear this bit.
 *
 * Writing a '1' to bit 2 of the FCR resets and flushes data in the transmit FIFO. Note that this bit is
 * self-clearing and it is not necessary to clear this bit.
 *
 * If the FIFOs and Programmable THRE Interrupt mode are enabled, bits 4 and 5 control the empty
 * threshold level at which THRE Interrupts are generated when the mode is active.  See the following
 * table for encodings:
 *
 * TX Trigger
 * ----------
 * 00 = empty FIFO
 * 01 = 2 chars in FIFO
 * 10 = FIFO 1/4 full
 * 11 = FIFO 1/2 full
 *
 * If the FIFO mode is enabled (bit 0 of the FCR is set to '1') bits 6 and 7 are active. Bit 6 and bit 7
 * set the trigger level in the receiver FIFO for the Enable Received Data Available Interrupt (ERBFI).
 * In auto flow control mode the trigger is used to determine when the rts_n signal will be deasserted.
 * See the following table for encodings:
 *
 * RX Trigger
 * ----------
 * 00 = 1 char in FIFO
 * 01 = FIFO 1/4 full
 * 10 = FIFO 1/2 full
 * 11 = FIFO 2 chars less than full
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * IIR and FCR registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_FCR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVD1    WO       NS          NS        Reserved                                           |   
<7:6>   RXTRIG   WO       0x0         NS        RX Trigger                                         |   
<5:4>   TXTRIG   WO       0x0         NS        TX Trigger                                         |   
<3>     RSVD0    WO       0x0         NS        Reserved                                           |   
<2>     TXFR     WO       0x0         NS        TX FIFO reset                                      |   
<1>     RXFR     WO       0x0         NS        RX FIFO reset                                      |   
<0>     EN       WO       0x0         NS        FIFO enable                                        |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_LCR = MIO UART@ Line Control Register
 *
 * The Line Control Register (LCR) controls the format of the data that is transmitted and received by
 * the UART.
 *
 * LCR bits 0 and 1 are the Character Length Select field. This field is used to select the number of
 * data bits per character that are transmitted and received. See the following table for encodings:
 *
 * CLS
 * ---
 * 00 = 5 bits (bits 0-4 sent)
 * 01 = 6 bits (bits 0-5 sent)
 * 10 = 7 bits (bits 0-6 sent)
 * 11 = 8 bits (all bits sent)
 *
 * LCR bit 2 controls the number of stop bits transmitted. If bit 2 is a '0', one stop bit is transmitted
 * in the serial data. If bit 2 is a '1' and the data bits are set to '00', one and a half stop bits are
 * generated. Otherwise, two stop bits are generated and transmitted in the serial data out. Note that
 * regardless of the number of stop bits selected the receiver will only check the first stop bit.
 *
 * LCR bit 3 is the Parity Enable bit. This bit is used to enable and disable parity generation and
 * detection in transmitted and received serial character respectively.
 *
 * LCR bit 4 is the Even Parity Select bit. If parity is enabled, bit 4 selects between even and odd
 * parity. If bit 4 is a '1', an even number of ones is transmitted or checked. If bit 4 is a '0', an odd
 * number of ones is transmitted or checked.
 *
 * LCR bit 6 is the Break Control bit. Setting the Break bit sends a break signal by holding the sout
 * line low (when not in Loopback mode, as determined by Modem Control Register bit 4). When in Loopback
 * mode, the break condition is internally looped back to the receiver.
 *
 * LCR bit 7 is the Divisor Latch Address bit. Setting this bit enables reading and writing of the
 * Divisor Latch register (DLL and DLH) to set the baud rate of the UART. This bit must be cleared after
 * initial baud rate setup in order to access other registers.
 *
 * Note: The LCR is writeable only when the UART is not busy (when the BUSY bit (bit 0) of the UART
 * Status Register (USR) is clear). The LCR is always readable. In PASS3, the LCR is always writable
 * because the BUSY bit is always clear.
 *

     ==============================================================
     MIO_UART(0..1)_LCR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVD1    RAZ      NS          NS        Reserved                                           |   
<7>     DLAB     R/W      0x0         NS        Divisor Latch Address bit                          |   
<6>     BREAK    R/W      0x0         NS        Break Control bit                                  |   
<5>     RSVD0    RAZ      0x0         NS        Reserved                                           |   
<4>     EPS      R/W      0x0         NS        Even Parity Select bit                             |   
<3>     PEN      R/W      0x0         NS        Parity Enable bit                                  |   
<2>     STOP     R/W      0x0         NS        Stop Control bit                                   |   
<1:0>   CLS      R/W      0x0         NS        Character Length Select                            |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_MCR = MIO UART@ Modem Control Register
 *
 * The lower four bits of the Modem Control Register (MCR) directly manipulate the outputs of the UART.
 * The DTR (bit 0), RTS (bit 1), OUT1 (bit 2), and OUT2 (bit 3) bits are inverted and then drive the
 * corresponding UART outputs, dtr_n, rts_n, out1_n, and out2_n.  In loopback mode, these outputs are
 * driven inactive high while the values in these locations are internally looped back to the inputs.
 *
 * Note: When Auto RTS is enabled, the rts_n output is controlled in the same way, but is also gated
 * with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The
 * rts_n output will be de-asserted whenever RTS (bit 1) is set low.
 *
 * Note: The UART0 out1_n and out2_n outputs are not present on the pins of the chip, but the UART0 OUT1
 * and OUT2 bits still function in Loopback mode.  The UART1 dtr_n, out1_n, and out2_n outputs are not
 * present on the pins of the chip, but the UART1 DTR, OUT1, and OUT2 bits still function in Loopback
 * mode.
 *
 * MCR bit 4 is the Loopback bit. When set, data on the sout line is held high, while serial data output
 * is looped back to the sin line, internally. In this mode all the interrupts are fully functional. This
 * feature is used for diagnostic purposes. Also, in loopback mode, the modem control inputs (dsr_n,
 * cts_n, ri_n, dcd_n) are disconnected and the four modem control outputs (dtr_n, rts_n, out1_n, out1_n)
 * are looped back to the inputs, internally.
 *
 * MCR bit 5 is the Auto Flow Control Enable (AFCE) bit. When FIFOs are enabled and this bit is set,
 * 16750-compatible Auto RTS and Auto CTS serial data flow control features are enabled.
 *
 * Auto RTS becomes active when the following occurs:
 * 1. MCR bit 1 is set
 * 2. FIFOs are enabled by setting FIFO Control Register (FCR) bit 0
 * 3. MCR bit 5 is set (must be set after FCR bit 0)
 *
 * When active, the rts_n output is forced inactive-high when the receiver FIFO level reaches the
 * threshold set by FCR[7:6]. When rts_n is connected to the cts_n input of another UART device, the
 * other UART stops sending serial data until the receiver FIFO has available space.
 *
 * The selectable receiver FIFO threshold values are: 1, 1/4, 1/2, and 2 less than full. Since one
 * additional character may be transmitted to the UART after rts_n has become inactive (due to data
 * already having entered the transmitter block in the other UART), setting the threshold to 2 less
 * than full allows maximum use of the FIFO with a safety zone of one character.
 * 
 * Once the receiver FIFO becomes completely empty by reading the Receiver Buffer Register (RBR), rts_n
 * again becomes active-low, signalling the other UART to continue sending data. It is important to note
 * that, even if everything else is set to Enabled and the correct MCR bits are set, if the FIFOs are
 * disabled through FCR[0], Auto Flow Control is also disabled. When Auto RTS is disabled or inactive,
 * rts_n is controlled solely by MCR[1].
 *
 * Auto CTS becomes active when the following occurs:
 * 1. FIFOs are enabled by setting FIFO Control Register (FCR) bit 0
 * 2. MCR bit 5 is set (must be set after FCR bit 0)
 *
 * When active, the UART transmitter is disabled whenever the cts_n input becomes inactive-high. This
 * prevents overflowing the FIFO of the receiving UART.
 *
 * Note that, if the cts_n input is not inactivated before the middle of the last stop bit, another
 * character is transmitted before the transmitter is disabled. While the transmitter is disabled, the
 * transmitter FIFO can still be written to, and even overflowed. Therefore, when using this mode, either
 * the true FIFO depth (64 characters) must be known to software, or the Programmable THRE Interrupt mode
 * must be enabled to access the FIFO full status through the Line Status Register. When using the FIFO
 * full status, software can poll this before each write to the Transmitter FIFO.
 *
 * Note: FIFO full status is also available in the UART Status Register (USR) or the actual level of the
 * FIFO may be read through the Transmit FIFO Level (TFL) register.
 *
 * When the cts_n input becomes active-low again, transmission resumes. It is important to note that,
 * even if everything else is set to Enabled, Auto Flow Control is also disabled if the FIFOs are
 * disabled through FCR[0]. When Auto CTS is disabled or inactive, the transmitter is unaffected by
 * cts_n.
 *

     ==============================================================
     MIO_UART(0..1)_MCR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVD1    RAZ      NS          NS        Reserved                                           |   
<7:6>   RSVD0    RAZ      0x0         NS        Reserved                                           |   
<5>     AFCE     R/W      0x0         NS        Auto Flow Control Enable bit                       |   
<4>     LOOP     R/W      0x0         NS        Loopback bit                                       |   
<3>     OUT2     R/W      0x0         NS        OUT2 output bit                                    |   
<2>     OUT1     R/W      0x0         NS        OUT1 output bit                                    |   
<1>     RTS      R/W      0x0         NS        Request To Send output bit                         |   
<0>     DTR      R/W      0x0         NS        Data Terminal Ready output bit                     |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_LSR = MIO UART@ Line Status Register
 *
 * The Line Status Register (LSR) contains status of the receiver and transmitter data transfers. This
 * status can be read by the user at anytime.
 *
 * LSR bit 0 is the Data Ready (DR) bit. When set, this bit indicates the receiver contains at least one
 * character in the RBR or the receiver FIFO. This bit is cleared when the RBR is read in the non-FIFO
 * mode, or when the receiver FIFO is empty, in FIFO mode.
 *
 * LSR bit 1 is the Overrun Error (OE) bit. When set, this bit indicates an overrun error has occurred
 * because a new data character was received before the previous data was read. In the non-FIFO mode, the
 * OE bit is set when a new character arrives in the receiver before the previous character was read from
 * the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error
 * occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is
 * retained and the data in the receive shift register is lost.
 *
 * LSR bit 2 is the Parity Error (PE) bit. This bit is set whenever there is a parity error in the
 * receiver if the Parity Enable (PEN) bit in the LCR is set. In the FIFO mode, since the parity error is
 * associated with a character received, it is revealed when the character with the parity error arrives
 * at the top of the FIFO. It should be noted that the Parity Error (PE) bit will be set if a break
 * interrupt has occurred, as indicated by the Break Interrupt (BI) bit.
 *
 * LSR bit 3 is the Framing Error (FE) bit. This bit is set whenever there is a framing error in the
 * receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received
 * data. In the FIFO mode, since the framing error is associated with a character received, it is
 * revealed when the character with the framing error is at the top of the FIFO. When a framing error
 * occurs the UART will try resynchronize. It does this by assuming that the error was due to the start
 * bit of the next character and then continues receiving the other bits (i.e. data and/or parity and
 * stop). It should be noted that the Framing Error (FE) bit will be set if a break interrupt has
 * occurred, as indicated by the Break Interrupt (BI) bit.
 *
 * Note: The OE, PE, and FE bits are reset when a read of the LSR is performed.
 *
 * LSR bit 4 is the Break Interrupt (BI) bit. This bit is set whenever the serial input (sin) is held in
 * a 0 state for longer than the sum of start time + data bits + parity + stop bits. A break condition on
 * sin causes one and only one character, consisting of all zeros, to be received by the UART. In the
 * FIFO mode, the character associated with the break condition is carried through the FIFO and is
 * revealed when the character is at the top of the FIFO. Reading the LSR clears the BI bit. In the non-
 * FIFO mode, the BI indication occurs immediately and persists until the LSR is read.
 *
 * LSR bit 5 is the Transmitter Holding Register Empty (THRE) bit. When Programmable THRE Interrupt mode
 * is disabled, this bit indicates that the UART can accept a new character for transmission. This bit is
 * set whenever data is transferred from the THR (or TX FIFO) to the transmitter shift register and no
 * new data has been written to the THR (or TX FIFO). This also causes a THRE Interrupt to occur, if the
 * THRE Interrupt is enabled. When FIFOs and Programmable THRE Interrupt mode are enabled, LSR bit 5
 * functionality is switched to indicate the transmitter FIFO is full, and no longer controls THRE
 * Interrupts, which are then controlled by the FCR[5:4] threshold setting.
 *
 * LSR bit 6 is the Transmitter Empty (TEMT) bit. In the FIFO mode, this bit is set whenever the
 * Transmitter Shift Register and the FIFO are both empty. In the non-FIFO mode, this bit is set whenever
 * the Transmitter Holding Register and the Transmitter Shift Register are both empty. This bit is
 * typically used to make sure it is safe to change control registers. Changing control registers while
 * the transmitter is busy can result in corrupt data being transmitted.
 *
 * LSR bit 7 is the Error in Receiver FIFO (FERR) bit. This bit is active only when FIFOs are enabled. It
 * is set when there is at least one parity error, framing error, or break indication in the FIFO. This
 * bit is cleared when the LSR is read and the character with the error is at the top of the receiver
 * FIFO and there are no subsequent errors in the FIFO.
 *

     ==============================================================
     MIO_UART(0..1)_LSR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVD     RAZ      NS          NS        Reserved                                           |   
<7>     FERR     RC       0x0         NS        Error in Receiver FIFO bit                         |   
<6>     TEMT     RO       0x1         NS        Transmitter Empty bit                              |   
<5>     THRE     RO       0x1         NS        Transmitter Holding Register Empty bit             |   
<4>     BI       RC       0x0         NS        Break Interrupt bit                                |   
<3>     FE       RC       0x0         NS        Framing Error bit                                  |   
<2>     PE       RC       0x0         NS        Parity Error bit                                   |   
<1>     OE       RC       0x0         NS        Overrun Error bit                                  |   
<0>     DR       RO       0x0         NS        Data Ready bit                                     |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_MSR = MIO UART@ Modem Status Register
 *
 * The Modem Status Register (MSR) contains the current status of the modem control input lines and if
 * they changed.
 *
 * DCTS (bit 0), DDSR (bit 1), and DDCD (bit 3) bits record whether the modem control lines (cts_n,
 * dsr_n, and dcd_n) have changed since the last time the user read the MSR. TERI (bit 2) indicates ri_n
 * has changed from an active-low, to an inactive-high state since the last time the MSR was read. In
 * Loopback mode, DCTS reflects changes on MCR bit 1 (RTS), DDSR reflects changes on MCR bit 0 (DTR), and
 * DDCD reflects changes on MCR bit 3 (Out2), while TERI reflects when MCR bit 2 (Out1) has changed state
 * from a high to a low.
 *
 * Note: if the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software
 * or otherwise), then the DCTS bit will get set when the reset is removed if the cts_n signal remains
 * asserted.
 *
 * The CTS, DSR, RI, and DCD Modem Status bits contain information on the current state of the modem
 * control lines. CTS (bit 4) is the compliment of cts_n, DSR (bit 5) is the compliment of dsr_n, RI
 * (bit 6) is the compliment of ri_n, and DCD (bit 7) is the compliment of dcd_n. In Loopback mode, CTS
 * is the same as MCR bit 1 (RTS), DSR is the same as MCR bit 0 (DTR), RI is the same as MCR bit 2
 * (Out1), and DCD is the same as MCR bit 3 (Out2).
 *
 * Note: The UART0 dsr_n and ri_n inputs are internally tied to power and not present on the pins of chip.
 * Thus the UART0 DSR and RI bits will be '0' when not in Loopback mode.  The UART1 dsr_n, ri_n, and dcd_n
 * inputs are internally tied to power and not present on the pins of chip. Thus the UART1 DSR, RI, and
 * DCD bits will be '0' when not in Loopback mode.
 *

     ==============================================================
     MIO_UART(0..1)_MSR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVD     RAZ      NS          NS        Reserved                                           |   
<7>     DCD      RO       0x0         NS        Data Carrier Detect input bit                      |   
<6>     RI       RO       0x0         NS        Ring Indicator input bit                           |   
<5>     DSR      RO       0x0         NS        Data Set Ready input bit                           |   
<4>     CTS      RO       NS          NS        Clear To Send input bit                            |   
<3>     DDCD     RC       0x0         NS        Delta Data Carrier Detect bit                      |   
<2>     TERI     RC       0x0         NS        Trailing Edge of Ring Indicator bit                |   
<1>     DDSR     RC       0x0         NS        Delta Data Set Ready bit                           |   
<0>     DCTS     RC       0x0         NS        Delta Clear To Send bit                            |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_SCR = MIO UART@ Scratchpad Register
 *
 * The Scratchpad Register (SCR) is an 8-bit read/write register for programmers to use as a temporary
 * storage space.
 *

     ==============================================================
     MIO_UART(0..1)_SCR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVD     RAZ      NS          NS        Reserved                                           |   
<7:0>   SCR      R/W      0x0         NS        Scratchpad Register                                |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_FAR = MIO UART@ FIFO Access Register
 *
 * The FIFO Access Register (FAR) is used to enable a FIFO access mode for testing, so that the receive
 * FIFO can be written by software and the transmit FIFO can be read by software when the FIFOs are
 * enabled. When FIFOs are not enabled it allows the RBR to be written by software and the THR to be read
 * by software. Note, that when the FIFO access mode is enabled/disabled, the control portion of the
 * receive FIFO and transmit FIFO is reset and the FIFOs are treated as empty.
 *

     ==============================================================
     MIO_UART(0..1)_FAR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  RSVD     RAZ      NS          NS        Reserved                                           |   
<0>     FAR      R/W      0x0         NS        FIFO Access Register                               |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_TFR = MIO UART@ Transmit FIFO Read Register
 *
 * The Transmit FIFO Read Register (TFR) is only valid when FIFO access mode is enabled (FAR bit 0 is
 * set). When FIFOs are enabled, reading this register gives the data at the top of the transmit FIFO.
 * Each consecutive read pops the transmit FIFO and gives the next data value that is currently at the
 * top of the FIFO. When FIFOs are not enabled, reading this register gives the data in the THR.
 *

     ==============================================================
     MIO_UART(0..1)_TFR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVD     RAZ      NS          NS        Reserved                                           |   
<7:0>   TFR      RO       0x0         NS        Transmit FIFO Read Register                        |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_RFW = MIO UART@ Receive FIFO Write Register
 *
 * The Receive FIFO Write Register (RFW) is only valid when FIFO access mode is enabled (FAR bit 0 is
 * set). When FIFOs are enabled, this register is used to write data to the receive FIFO. Each
 * consecutive write pushes the new data to the next write location in the receive FIFO. When FIFOs are
 * not enabled, this register is used to write data to the RBR.
 *

     ==============================================================
     MIO_UART(0..1)_RFW Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:10> RSVD     WO       NS          NS        Reserved                                           |   
<9>     RFFE     WO       0x0         NS        Receive FIFO Framing Error                         |   
<8>     RFPE     WO       0x0         NS        Receive FIFO Parity Error                          |   
<7:0>   RFWD     WO       0x0         NS        Receive FIFO Write Data                            |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_USR = MIO UART@ UART Status Register
 *
 * The UART Status Register (USR) contains UART status information.
 *
 * USR bit 0 is the BUSY bit.  When set this bit indicates that a serial transfer is in progress, when
 * clear it indicates that the UART is idle or inactive.
 *
 * Note: In PASS3, the BUSY bit will always be clear.
 *
 * USR bits 1-4 indicate the following FIFO status: TX FIFO Not Full (TFNF), TX FIFO Empty (TFE), RX
 * FIFO Not Empty (RFNE), and RX FIFO Full (RFF).
 *

     ==============================================================
     MIO_UART(0..1)_USR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:5>  RSVD     RAZ      NS          NS        Reserved                                           |   
<4>     RFF      RO       0x0         NS        RX FIFO Full                                       |   
<3>     RFNE     RO       0x0         NS        RX FIFO Not Empty                                  |   
<2>     TFE      RO       0x1         NS        TX FIFO Empty                                      |   
<1>     TFNF     RO       0x1         NS        TX FIFO Not Full                                   |   
<0>     BUSY     RO       0x0         NS        Busy bit (always 0 in PASS3)                       |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_TFL = MIO UART@ Transmit FIFO Level Register
 *
 * The Transmit FIFO Level Register (TFL) indicates the number of data entries in the transmit FIFO.
 *

     ==============================================================
     MIO_UART(0..1)_TFL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:7>  RSVD     RAZ      NS          NS        Reserved                                           |   
<6:0>   TFL      RO       0x0         NS        Transmit FIFO Level Register                       |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_RFL = MIO UART@ Receive FIFO Level Register
 *
 * The Receive FIFO Level Register (RFL) indicates the number of data entries in the receive FIFO.
 *

     ==============================================================
     MIO_UART(0..1)_RFL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:7>  RSVD     RAZ      NS          NS        Reserved                                           |   
<6:0>   RFL      RO       0x0         NS        Receive FIFO Level Register                        |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_SRR = MIO UART@ Software Reset Register
 *
 * The Software Reset Register (SRR) is a write-only register that resets the UART and/or the receive
 * FIFO and/or the transmit FIFO.
 *
 * Bit 0 of the SRR is the UART Soft Reset (USR) bit.  Setting this bit resets the UART.
 *
 * Bit 1 of the SRR is a shadow copy of the RX FIFO Reset bit (FCR bit 1). This can be used to remove
 * the burden on software having to store previously written FCR values (which are pretty static) just
 * to reset the receive FIFO.
 *
 * Bit 2 of the SRR is a shadow copy of the TX FIFO Reset bit (FCR bit 2). This can be used to remove
 * the burden on software having to store previously written FCR values (which are pretty static) just
 * to reset the transmit FIFO.
 *

     ==============================================================
     MIO_UART(0..1)_SRR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:3>  RSVD     WO       NS          NS        Reserved                                           |   
<2>     STFR     WO       0x0         NS        Shadow TX FIFO Reset                               |   
<1>     SRFR     WO       0x0         NS        Shadow RX FIFO Reset                               |   
<0>     USR      WO       0x0         NS        UART Soft Reset                                    |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_SRTS = MIO UART@ Shadow Request To Send Register
 *
 * The Shadow Request To Send Register (SRTS) is a shadow register for the RTS bit (MCR bit 1) that can
 * be used to remove the burden of having to perform a read-modify-write on the MCR.
 *

     ==============================================================
     MIO_UART(0..1)_SRTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  RSVD     RAZ      NS          NS        Reserved                                           |   
<0>     SRTS     R/W      0x0         NS        Shadow Request To Send                             |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_SBCR = MIO UART@ Shadow Break Control Register
 *
 * The Shadow Break Control Register (SBCR) is a shadow register for the BREAK bit (LCR bit 6) that can
 * be used to remove the burden of having to perform a read-modify-write on the LCR.
 *

     ==============================================================
     MIO_UART(0..1)_SBCR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  RSVD     RAZ      NS          NS        Reserved                                           |   
<0>     SBCR     R/W      0x0         NS        Shadow Break Control                               |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_SFE = MIO UART@ Shadow FIFO Enable Register
 *
 * The Shadow FIFO Enable Register (SFE) is a shadow register for the FIFO enable bit (FCR bit 0) that
 * can be used to remove the burden of having to store the previously written value to the FCR in memory
 * and having to mask this value so that only the FIFO enable bit gets updated.
 *

     ==============================================================
     MIO_UART(0..1)_SFE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  RSVD     RAZ      NS          NS        Reserved                                           |   
<0>     SFE      R/W      0x0         NS        Shadow FIFO Enable                                 |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_SRT = MIO UART@ Shadow RX Trigger Register
 *
 * The Shadow RX Trigger Register (SRT) is a shadow register for the RX Trigger bits (FCR bits 7:6) that
 * can be used to remove the burden of having to store the previously written value to the FCR in memory
 * and having to mask this value so that only the RX Trigger bits get updated.
 *

     ==============================================================
     MIO_UART(0..1)_SRT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2>  RSVD     RAZ      NS          NS        Reserved                                           |   
<1:0>   SRT      R/W      0x0         NS        Shadow RX Trigger                                  |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_STT = MIO UART@ Shadow TX Trigger Register
 *
 * The Shadow TX Trigger Register (STT) is a shadow register for the TX Trigger bits (FCR bits 5:4) that
 * can be used to remove the burden of having to store the previously written value to the FCR in memory
 * and having to mask this value so that only the TX Trigger bits get updated.
 *

     ==============================================================
     MIO_UART(0..1)_STT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2>  RSVD     RAZ      NS          NS        Reserved                                           |   
<1:0>   STT      R/W      0x0         NS        Shadow TX Trigger                                  |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_HTX = MIO UART@ Halt TX Register
 *
 * The Halt TX Register (HTX) is used to halt transmissions for testing, so that the transmit FIFO can be
 * filled by software when FIFOs are enabled. If FIFOs are not enabled, setting the HTX register will
 * have no effect.
 *

     ==============================================================
     MIO_UART(0..1)_HTX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  RSVD     RAZ      NS          NS        Reserved                                           |   
<0>     HTX      R/W      0x0         NS        Halt TX                                            |   
----------------------------------------------------------------------------------------------------
===




     ==============================================================
     MIO_FUS_DAT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> NS       RAZ      NS          NS        Reserved                                           |   
<31:0>  MAN_INFO RO       NS          NS        Fuse information - manufacturing info [31:0]       |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_DAT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> NS       RAZ      NS          NS        Reserved                                           |   
<31:0>  MAN_INFO RO       NS          NS        Fuse information - manufacturing info [63:32]      |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_DAT2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:34> NS        RAZ     NS          NS        Reserved                                           |   
<33>    FUS318    RO      NS          NS        Fuse information - a copy of fuse318               |   
<32>    RAID_EN   RO      NS          NS        Fuse information - RAID enabled                    |   
<31:30> SPARE     RO      NS          NS        Spare Fuses                                        |   
<29>    NOKASU    RO      NS          NS        Fuse information - Disable Kasumi                  |   
<28>    NODFA_CP2 RO      NS          NS        Fuse information - DFA Disable (CP2)               |   
<27>    NOMUL     RO      NS          NS        Fuse information - VMUL disable                    |   
<26>    NOCRYPTO  RO      NS          NS        Fuse information - AES/DES/HASH disable            |   
<25>    RST_SHT   RO      NS          NS        Fuse information - When set, use short reset count |   
<24>    BIST_DIS  RO      NS          NS        Fuse information - BIST Disable                    |   
<23:16> CHIP_ID   RO      NS          NS        Fuse information - CHIP_ID                         |   
<15:12> NS        RO      NS          NS        Spare Fuses                                        |   
<11:0>  PP_DIS    RO      NS          NS        Fuse information - PP_DISABLES                     |   

Notes:
CHIP_ID is consumed in several places within Octeon.

   * Core COP0 ProcessorIdentification[Revision]
   * Core EJTAG DeviceIdentification[Version]
   * PCI_CFG02[RID]
   * JTAG controller

Note: The JTAG controller gets CHIP_ID[3:0] solely from the laser fuses.
Modification to the efuses will not change what the JTAG controller reports
for CHIP_ID.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_DAT3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> NS       RAZ      NS          NS        Reserved                                           |   
<31>    SPARE    RO       NS          NS        Spare Fuses                                        |   
<30:29> ZIP_CRIP RO       NS          NS        Fuse information - Zip Cripple                     |   
<28>    BAR2_EN  RO       NS          NS        Fuse information - BAR2 Enable (when blown '1')    |   
<27>    EFUS_LCK RO       NS          NS        Fuse information - efuse lockdown                  |   
<26>    EFUS_IGN RO       NS          NS        Fuse information - efuse ignore                    |   
                                                  This bit only has side effects when blown in      |
                                                  the laser fuses.  It is ignore if only set in     |
                                                  efuse store.                                      |
<25>    NOZIP    RO       NS          NS        Fuse information - ZIP disable                     |   
<24>    NODFA_DTE RO      NS          NS        Fuse information - DFA Disable (DTE)               |   
<23:0>  ICACHE   RO       NS          NS        Fuse information - ICACHE Hard Repair Data         |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_PDF Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  PDF      RO       NS          NS        Fuse information - Product Definition Field        |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_RCMD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:24> NS       RAZ      NS          NS        Reserved                                           |   
<23:16> DAT      RO       NS          NS        8bits of fuse data                                 |   
<15:13> NS       RAZ      NS          NS        Reserved                                           |   
<12>    PEND     R/W      0           0         SW sets this bit on a write to start FUSE read     |   
                                                  operation.  HW clears when read is complete and   |
                                                  the DAT is valid                                  |
<11:9>  NS       RAZ      NS          NS        Reserved                                           |   
<8>     EFUSE    R/W      0           0         When set, return data from the efuse storage       |   
                                                  rather than the local storage for the 320 HW fuses|
<7:0>   ADDR     R/W      0           0         The byte address of the fuse to read               |   

Notes:
To read an efuse, SW writes MIO_FUS_RCMD[ADDR,PEND] with the byte address of
the fuse in question, then SW can poll MIO_FUS_RCMD[PEND].  When PEND is
clear, then MIO_FUS_RCMD[DAT] is valid.  In addition, if the efuse read went
to the efuse banks (e.g. ADDR > (320/8) || EFUSE is set) SW can read
MIO_FUS_BNK_DATX which contains all 256 fuses in the bank associated in
ADDR.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_WADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:3>  NS       RAZ      NS          NS        Reserved                                           |   
<2:0>   ADDR     R/W      NS          NS        Which of the four banks of 256 fuses to blow       |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_PROG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  NS       RAZ      NS          NS        Reserved                                           |   
<0>     PROG     R/W      NS          NS        Blow the fuse bank                                 |   
                                                  SW will set PROG, and then the HW will clear      |
                                                  when the PROG bank is complete                    |

Notes:
To write a bank of fuses, SW must set MIO_FUS_WADR[ADDR] to the bank to be
programmed and then set each bit within MIO_FUS_BNK_DATX to indicate which
fuses to blow.  Once ADDR, and DAT are setup, SW can write to
MIO_FUS_PROG[PROG] to start the bank write and poll on PROG.  Once PROG is
clear, the bank write is complete.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_PROG_TIMES Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:33> NS       RAZ      NS          NS        Reserved                                           |   
<32>    PROG_PIN RO       0           0         efuse program pin                                  |   
<31:24> OUT      R/W      3           NS        efuse timing param (ref_clks to delay 10ns)        |   
<23:20> SCLK_LO  R/W      2           NS        efuse timing param (ref_clks to delay 5ns)         |   
<19:8>  SCLK_HI  R/W      100         NS        efuse timing param (ref_clks to delay 1000ns)      |   
<7:0>   SETUP    R/W      3           NS        efuse timing param (ref_clks to delay 10ns)        |   

Notes:
All values must be > 0 for correct electrical operation.

The reset values are a conservative version for a 50MHz ref_clk.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_BNK_DAT(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  DAT      R/W      NS          NS        Efuse bank store                                   |   
                                                 For reads, the DAT gets the fus bank last read     |
                                                 For write, the DAT determines which fuses to blow  |

Notes:
The intial state of MIO_FUS_BNK_DAT* is as if bank1 was just read i.e. DAT* = fus[511:256]
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_SPR_REPAIR_SUM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  NS       RAZ      NS          NS        Reserved                                           |   
<0>     TOO_MANY RO       0           0         Too Many Defects - cannot repair - bad part        |   

Notes:
Pass3 Only
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_SPR_REPAIR_RES Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:42> NS       RAZ      NS          NS        Reserved                                           |   
<41:28> REPAIR2  RO       0           0         SPR BISR Results                                   |   
<27:14> REPAIR1  RO       0           0         SPR BISR Results                                   |   
<13:0>  REPAIR0  RO       0           0         SPR BISR Results                                   |   

Notes:
Pass3 Only
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_EMA Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:7>  NS       RAZ      NS          NS        Reserved                                           |   
<6:4>   EFF_EMA  RO       NS          0         Effective EMA value                                |   
<3>     NS       RAZ      NS          NS        Reserved                                           |   
<2:0>   EMA      R/W      NS          0         Software override EMA value                        |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_PLL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2>  NS       RAZ      NS          NS        Reserved                                           |   
<1>     RFSLIP   R/W1C    0x0         NS        PLL reference clock slip                           |   
<0>     FBSLIP   R/W1C    0x0         NS        PLL feedback clock slip                            |   
----------------------------------------------------------------------------------------------------
===




     ==============================================================
     CIU_INT(0..23,32)_SUM0 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63>    BOOTDMA  RO       0           0         Boot bus DMA engines Interrupt                     |   
<62>    MII      RO       0           0         MII Interface Interrupt                            |   
<61>    IPDPPTHR RO       0           0         IPD per-port counter threshold interrupt           |   
<60>    POWIQ    RO       0           0         POW IQ interrupt                                   |   
<59>    TWSI2    RO       0           0         2nd TWSI Interrupt                                 |   
<58:57> RESERVED RO       0           0         Reserved for PCM and MPI                           |   
<56>    USB      RO       0           0         USB Interrupt                                      |   
<55:52> TIMER    R/W1C    0           0         General timer interrupts                           |   
<51>    KEY_ZERO R/W1C    0           0         Key Zeroization interrupt                          |   
                                                  KEY_ZERO will be set when the external ZERO_KEYS  |
                                                  pin is sampled high.  KEY_ZERO is cleared by SW   |
<50>    IPD_DRP  R/W1C    0           0         IPD QOS packet drop                                |   
<49:48> GMX_DRP  R/W1C    0           0         GMX packet drop                                    |   
<47>    TRACE    RO       0           0         L2C has the CMB trace buffer                       |   
<46>    RML      RO       0           0         RML Interrupt                                      |   
<45>    TWSI     RO       0           0         TWSI Interrupt                                     |   
<44>    WDOG_SUM RO       0           0         Watchdog summary                                   |   
                                                  PPs use CIU_INTx_SUM0 where x=0-23.               |
                                                  PCI uses the CIU_INTx_SUM0 where x=32.            |
                                                  Even INTx registers report WDOG to IP2            |
                                                  Odd INTx registers report WDOG to IP3             |
<43:40> PCI_MSI  RO       0           0         PCI MSI                                            |   
                                                  Refer to "Receiving Message-Signalled             |
                                                  Interrupts" in the PCIe chapter of the spec       |
<39:36> PCI_INT  RO       0           0         PCI INTA/B/C/D                                     |   
                                                  Refer to "Receiving Emulated INTA/INTB/           | 
                                                  INTC/INTD" in the PCIe chapter of the spec        |
<35:34> UART     RO       0           0         Two UART interrupts                                |   
<33:32> MBOX     RO       0           0         Two mailbox interrupts for entries 0-23            |   
                                                  [33] is the or of <31:16>                         |
                                                  [32] is the or of <15:0>                          |
                                                 Two PCI internal interrupts for entry 32           |
                                                  CIU_PCI_INTA                                      |
<31:16> GPIO     RO       0           0         16 GPIO interrupts                                 |   
<15:0>  WORKQ    RO       0           0         16 work queue interrupts                           |   
                                                  1 bit/group. A copy of the R/W1C bit in the POW.  |
----------------------------------------------------------------------------------------------------
===
   

     ==============================================================
     CIU_INT_SUM1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:12> RSVRD    RAZ      NS          NS        Reserved                                           |   
<11:0>  WDOG     RO       0           0         12 watchdog interrupts                             |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_INT(0..23,32)_EN0 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63>    BOOTDMA  R/W      0           0         Boot bus DMA engines Interrupt                     |   
<62>    MII      R/W      0           0         MII Interface Interrupt                            |   
<61>    IPDPPTHR R/W      0           0         IPD per-port counter threshold interrupt           |   
<60>    POWIQ    R/W      0           0         POW IQ interrupt                                   |   
<59>    TWSI2    R/W      0           0         2nd TWSI Interrupt                                 |   
<58:57> RESERVED R/W      0           0         Reserved for PCM and MPI                           |   
<56>    USB      R/W      0           0         USB Interrupt                                      |   
<55:52> TIMER    R/W      0           0         General timer interrupts                           |   
<51>    KEY_ZERO R/W      0           0         Key Zeroization interrupt                          |   
<50>    IPD_DRP  R/W      0           0         IPD QOS packet drop                                |   
<49:48> GMX_DRP  R/W      0           0         GMX packet drop                                    |   
<47>    TRACE    R/W      0           0         L2C has the CMB trace buffer                       |   
<46>    RML      R/W      0           0         RML Interrupt                                      |   
<45>    TWSI     R/W      0           0         TWSI Interrupt                                     |   
<44>    RSVRD0   RAZ      NS          NS        Reserved                                           |   
<43:40> PCI_MSI  R/W      0           0         PCI MSI                                            |   
<39:36> PCI_INT  R/W      0           0         PCI INTA/B/C/D                                     |   
<35:34> UART     R/W      0           0         Two UART interrupts                                |   
<33:32> MBOX     R/W      0           0         Two mailbox/PCI interrupts                         |   
<31:16> GPIO     R/W      0           0         16 GPIO interrupts                                 |   
<15:0>  WORKQ    R/W      0           0         16 work queue interrupts                           |   

Notes:
CIU_INT0_EN0:  PP0 /IP2
CIU_INT1_EN0:  PP0 /IP3
...
CIU_INT22_EN0: PP11/IP2
CIU_INT23_EN0: PP11/IP3
(hole)
CIU_INT32_EN0: PCI /IP
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_INT(0..23,32)_EN1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:12> RSVRD    RAZ      NS          NS        Reserved                                           |   
<11:0>  WDOG     R/W      0           0         Watchdog summary interrupt enable vectory          |   

Notes:
@verbatim
PPx/IP2 will be raised when...

   n = x*2
   PPx/IP2 = |({CIU_INT_SUM1, CIU_INTn_SUM0} & {CIU_INTn_EN1, CIU_INTn_EN0})

PPx/IP3 will be raised when...

   n = x*2 + 1
   PPx/IP3 =  |({CIU_INT_SUM1, CIU_INTn_SUM0} & {CIU_INTn_EN1, CIU_INTn_EN0})

PCI/INT will be raised when...

   PCI/INT = |({CIU_INT_SUM1, CIU_INT32_SUM0} & {CIU_INT32_EN1, CIU_INT32_EN0})
@endverbatim
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_INT(0..11)_SUM4 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63>    BOOTDMA  RO       0           0         Boot bus DMA engines Interrupt                     |   
<62>    MII      RO       0           0         MII Interface Interrupt                            |   
<61>    IPDPPTHR RO       0           0         IPD per-port counter threshold interrupt           |   
<60>    POWIQ    RO       0           0         POW IQ interrupt                                   |   
<59>    TWSI2    RO       0           0         2nd TWSI Interrupt                                 |   
<58:57> RESERVED RO       0           0         Reserved for PCM and MPI                           |   
<56>    USB      RO       0           0         USB Interrupt                                      |   
<55:52> TIMER    R/W1C    0           0         General timer interrupts                           |   
<51>    KEY_ZERO R/W1C    0           0         Key Zeroization interrupt                          |   
                                                  KEY_ZERO will be set when the external ZERO_KEYS  |
                                                  pin is sampled high.  KEY_ZERO is cleared by SW   |
<50>    IPD_DRP  R/W1C    0           0         IPD QOS packet drop                                |   
<49:48> GMX_DRP  R/W1C    0           0         GMX packet drop                                    |   
<47>    TRACE    RO       0           0         L2C has the CMB trace buffer                       |   
<46>    RML      RO       0           0         RML Interrupt                                      |   
<45>    TWSI     RO       0           0         TWSI Interrupt                                     |   
<44>    WDOG_SUM RO       0           0         Watchdog summary                                   |   
                                                  These registers report WDOG to IP4                |
<43:40> PCI_MSI  RO       0           0         PCI MSI                                            |   
                                                  Refer to "Receiving Message-Signalled             |
                                                  Interrupts" in the PCIe chapter of the spec       |
<39:36> PCI_INT  RO       0           0         PCI INTA/B/C/D                                     |   
                                                  Refer to "Receiving Emulated INTA/INTB/           | 
                                                  INTC/INTD" in the PCIe chapter of the spec        |
<35:34> UART     RO       0           0         Two UART interrupts                                |   
<33:32> MBOX     RO       0           0         Two mailbox interrupts for entries 0-11            |   
                                                  [33] is the or of <31:16>                         |
                                                  [32] is the or of <15:0>                          |
<31:16> GPIO     RO       0           0         16 GPIO interrupts                                 |   
<15:0>  WORKQ    RO       0           0         16 work queue interrupts                           |   
                                                  1 bit/group. A copy of the R/W1C bit in the POW.  |
----------------------------------------------------------------------------------------------------
===
   

     ==============================================================
     CIU_INT(0..11)_EN4_0 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63>    BOOTDMA  R/W      0           0         Boot bus DMA engines Interrupt                     |   
<62>    MII      R/W      0           0         MII Interface Interrupt                            |   
<61>    IPDPPTHR R/W      0           0         IPD per-port counter threshold interrupt           |   
<60>    POWIQ    R/W      0           0         POW IQ interrupt                                   |   
<59>    TWSI2    R/W      0           0         2nd TWSI Interrupt                                 |   
<58:57> RESERVED R/W      0           0         Reserved for PCM and MPI                           |   
<56>    USB      R/W      0           0         USB Interrupt                                      |   
<55:52> TIMER    R/W      0           0         General timer interrupts                           |   
<51>    KEY_ZERO R/W      0           0         Key Zeroization interrupt                          |   
<50>    IPD_DRP  R/W      0           0         IPD QOS packet drop                                |   
<49:48> GMX_DRP  R/W      0           0         GMX packet drop                                    |   
<47>    TRACE    R/W      0           0         L2C has the CMB trace buffer                       |   
<46>    RML      R/W      0           0         RML Interrupt                                      |   
<45>    TWSI     R/W      0           0         TWSI Interrupt                                     |   
<44>    RSVRD0   RAZ      NS          NS        Reserved                                           |   
<43:40> PCI_MSI  R/W      0           0         PCI MSI                                            |   
<39:36> PCI_INT  R/W      0           0         PCI INTA/B/C/D                                     |   
<35:34> UART     R/W      0           0         Two UART interrupts                                |   
<33:32> MBOX     R/W      0           0         Two mailbox/PCI interrupts                         |   
<31:16> GPIO     R/W      0           0         16 GPIO interrupts                                 |   
<15:0>  WORKQ    R/W      0           0         16 work queue interrupts                           |   

Notes:
CIU_INT0_EN4_0:   PP0  /IP4
CIU_INT1_EN4_0:   PP1  /IP4
...
CIU_INT11_EN4_0:  PP11 /IP4
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_INT(0..11)_EN4_1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:12> RSVRD    RAZ      NS          NS        Reserved                                           |   
<11:0>  WDOG     R/W      0           0         Watchdog summary interrupt enable vectory          |   

Notes:
  PPx/IP4 will be raised when...
  PPx/IP4 = |({CIU_INT_SUM1, CIU_INTx_SUM4} & {CIU_INTx_EN4_1, CIU_INTx_EN4_0})
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_TIM(0..3) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:37> RSVRD    RAZ      NS          NS        Reserved                                           |   
<36>    ONE_SHOT R/W      0           0         One-shot mode                                      |   
<35:0>  LEN      R/W      0           0         Timeout length in core clock cycles                |   
                                                  Periodic interrupts will occur every LEN+1 core   |
                                                  clock cycles when ONE_SHOT==0                     |
                                                  Timer disabled when LEN==0                        |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_WDOG(0..11) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:46> RSVRD    RAZ      NS          NS        Reserved                                           |   
<45>    GSTOPEN  R/W      0           0         GSTOPEN                                            |   
<44>    DSTOP    R/W      0           0         DSTOP                                              |   
<43:20> CNT      RO       0           0         Number of 256-cycle intervals until next watchdog  |   
                                                  expiration.  Cleared on write to associated       |
                                                  CIU_PP_POKE register.                             |                                             
<19:4>  LEN      R/W      0           0         Watchdog time expiration length                    |   
                                                  The 16 bits of LEN represent the most significant |
                                                  bits of a 24 bit decrementer that decrements      |
                                                  every 256 cycles.                                 |
                                                  LEN must be set > 0                               |
<3:2>   STATE    RO       0           0         Watchdog state                                     |   
                                                  number of watchdog time expirations since last    |
                                                  PP poke.  Cleared on write to associated          |
                                                  CIU_PP_POKE register.                             |
<1:0>   MODE     R/W      0           0         Watchdog mode                                      |   
                                                  0 = Off                                           |
                                                  1 = Interrupt Only                                |
                                                  2 = Interrupt + NMI                               |
                                                  3 = Interrupt + NMI + Soft-Reset                  |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_PP_POKE(0..11) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  POKE     RAZ      NS          NS        Reserved                                           |   

Notes:
Any write to a CIU_PP_POKE register clears any pending interrupt generated
by the associated watchdog, resets the CIU_WDOG[STATE] field, and set
CIU_WDOG[CNT] to be (CIU_WDOG[LEN] << 8).

Reads to this register will return the associated CIU_WDOG register.
----------------------------------------------------------------------------------------------------
===
 


     ==============================================================
     CIU_MBOX_SET(0..11) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVRD    RAZ      NS          NS        Reserved                                           |   
<31:0>  SET      R/W1     0           0         On writes, set corresponding bit in MBOX register  |   
                                                  on reads, return the MBOX register                |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_MBOX_CLR(0..11) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVRD    RAZ      NS          NS        Reserved                                           |   
<31:0>  CLR      R/W1C    0           0         On writes, clr corresponding bit in MBOX register  |   
                                                  on reads, return the MBOX register                |
----------------------------------------------------------------------------------------------------
===


 * Contains the reset control for each PP.  Value of '1' will hold a PP in reset, '0' will release.
 * Resets to 0xffff when PCI boot is enabled, 0xfffe otherwise. 
 *

     ==============================================================
     CIU_PP_RST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:12> RSVRD    RAZ      NS          NS        Reserved                                           |   
<11:1>  RST      R/W      0x7fff      0         PP Rst for PP's 11-1                               |   
<0>     RST0     R/W      NS          NS        PP Rst for PP0                                     |   
                                                  depends on standalone mode                        |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_PP_DBG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:12> RSVRD    RAZ      NS          NS        Reserved                                           |   
<11:0>  PPDBG    RO       0           0         Debug[DM] value for each PP                        |   
                                                  whether the PP's are in debug mode or not         |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_GSTOP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<0>     GSTOP    R/W      0           0         GSTOP bit                                          |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_NMI Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:12> RSVRD    RAZ      NS          NS        Reserved                                           |   
<11:0>  NMI      WO       0           0         Send NMI pulse to PP vector                        |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_DINT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:12> RSVRD    RAZ      NS          NS        Reserved                                           |   
<11:0>  DINT     WO       0           0         Send DINT pulse to PP vector                       |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_FUSE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:12> RSVRD    RAZ      NS          NS        Reserved                                           |   
<11:0>  FUSE     RO       NS          NS        Physical PP is present                             |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_BIST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4> RSVRD    RAZ      NS          NS        Reserved                                            |   
<3:0>  BIST     RO       0x0         0         BIST Results.                                       |   
                                                  HW sets a bit in BIST for for memory that fails   |
                                                  BIST.                                             |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_SOFT_BIST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1> RSVRD     RAZ      NS          NS        Reserved                                           |   
<0>    SOFT_BIST R/W      0x0         0         Run BIST on soft reset.                            |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_SOFT_RST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1> RSVRD     RAZ      NS          NS        Reserved                                           |   
<0>    SOFT_RST  WO       0x0         0         Resets Octeon                                      |   
                                                  When soft reseting Octeon from a remote PCI host, |
                                                  always read CIU_SOFT_RST (and wait for result)    |
                                                  before writing SOFT_RST to '1'.                   |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_SOFT_PRST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1> RSVRD     RAZ      NS          NS        Reserved                                           |   
<0>    SOFT_PRST R/W      0x1         0         Reset the PCI bus.  Only works when Octane is      |   
                                                 configured as a HOST. When OCTEON is a PCI host    |
                                                 (i.e. when PCI_HOST_MODE = 1), This controls       |
                                                 PCI_RST_L. Refer to section 10.11.1.               |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_PCI_INTA Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2> RSVRD     RAZ      NS          NS        Reserved                                           |   
<1:0>  INT       R/W      0x0         0         PCI interrupt                                      |   
                                                  These bits are observed in CIU_INT32_SUM0<33:32>  |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_SOFT_PRST1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1> RSVRD     RAZ      NS          NS        Reserved                                           |   
<0>    SOFT_PRST R/W      0x1         0         Reset the PCI bus.  Only works when Octane is      |   
                                                 configured as a HOST. When OCTEON is a PCI host    |
                                                 (i.e. when PCI_HOST_MODE = 1), This controls       |
                                                 PCI_RST_L. Refer to section 10.11.1.               |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_QLM_DCOK Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4> RSVRD     RAZ      NS          NS        Reserved                                           |   
<3:0>  QLM_DCOK  R/W      0x1         0x1       Re-assert dcok for each QLM. The value in this     |   
                                                 field is "anded" with the pll_dcok pin and then    |
                                                 sent to each QLM (0..3).                           |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_QLM_JTGC Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:11> RSVD1    RAZ      NS          NS        Reserved                                           |   
<10:8>  CLK_DIV  R/W      0x0         NS        Clock divider for QLM JTAG operations.  eclk is    |   
                                                 divided by 2^(CLK_DIV + 2)                         |
<7:6>   RSVD0    RAZ      NS          NS        Reserved                                           |   
<5:4>   MUX_SEL  R/W      0x0         NS        Selects which QLM JTAG shift out is shifted into   |   
                                                 the QLM JTAG shift register: CIU_QLM_JTGD[SHFT_REG]|
<3:0>   BYPASS   R/W      0x0         NS        Selects which QLM JTAG shift chains are bypassed   |   
                                                 by the QLM JTAG data register (CIU_QLM_JTGD) (one  |
                                                 bit per QLM)                                       |
----------------------------------------------------------------------------------------------------
===
 

     ==============================================================
     CIU_QLM_JTGD Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63>    CAPTURE  R/W      0x0         NS        Perform JTAG capture operation (self-clearing when |   
                                                 op completes)                                      |
<62>    SHIFT    R/W      0x0         NS        Perform JTAG shift operation (self-clearing when   |   
                                                 op completes)                                      |
<61>    UPDATE   R/W      0x0         NS        Perform JTAG update operation (self-clearing when  |   
                                                 op completes)                                      |
<60:37> RSVD     RAZ      NS          NS        Reserved                                           |   
<36:32> SHFT_CNT R/W      0x0         NS        QLM JTAG shift count (encoded in -1 notation)      |   
<31:0>  SHFT_REG R/W      0x0         NS        QLM JTAG shift register                            |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GPIO_BIT_CFG(0..15) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:15> RSVRD    RAZ      NS          NS        Reserved                                           |   
<14>    CLK_GEN  R/W      0x0         0         When TX_OE is set, GPIO pin becomes a clock        |   
<13:12> CLK_SEL  R/W      0x0         0         Selects which of the 4 GPIO clock generators       |   
<11:8>  FIL_SEL  R/W      0x0         0         Global counter bit-select (controls sample rate)   |   
<7:4>   FIL_CNT  R/W      0x0         0         Number of consecutive samples to change state      |   
<3>     INT_TYPE R/W      0x0         0         Type of interrupt                                  |   
                                                  0 = level (default)                               |   
                                                  1 = rising edge                                   |
<2>     INT_EN   R/W      0x0         0         Bit mask to indicate which bits to raise interrupt |   
<1>     RX_XOR   R/W      0x0         0         Invert the GPIO pin                                |   
<0>     TX_OE    R/W      0x0         0         Drive the GPIO pin as an output pin                |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GPIO_RX_DAT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVRD    RAZ      NS          NS        Reserved                                           |   
<15:0>  DAT      RO       0x0         0         GPIO Read Data                                     |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GPIO_TX_SET Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVRD    RAZ      NS          NS        Reserved                                           |   
<15:0>  SET      WO       0x0         0         Bit mask to indicate which bits to drive to '1'.   |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GPIO_TX_CLR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVRD    RAZ      NS          NS        Reserved                                           |   
<15:0>  CLR      WO       0x0         0         Bit mask to indicate which bits to drive to '0'.   |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GPIO_INT_CLR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVRD    RAZ      NS          NS        Reserved                                           |   
<15:0>  TYPE     WO       0x0         0         Clear the interrupt rising edge detector           |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GPIO_CLK_GEN(0..3) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVRD    RAZ      NS          NS        Reserved                                           |   
<31:0>  N        WO       0x0         NS        Determines the frequency of the GPIO clk generator |   
                                                  NOTE: Fgpio_clk = Feclk * N / 2^32                |
                                                        N = (Fgpio_clk / Feclk) * 2^32              |
                                                  NOTE: writing N == 0 stops the clock generator   
                                                  N  should be <= 2^31-1.
----------------------------------------------------------------------------------------------------
===


 *
 * LED_EN = LED Interface Enable
 *

     ==============================================================
     LED_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<0>     EN       R/W      0x0         1         Enable the LED interface shift-chain               |   

Notes:
The LED interface is comprised of a shift chain with a parallel latch.  LED
data is shifted out on each fallingg edge of led_clk and then captured by
led_lat.

The LED shift chain is comprised of the following...

     32  - UDD header
     6x8 - per port status
     17  - debug port
     32  - UDD trailer

for a total of 129 bits.

UDD header is programmable from 0-32 bits (LED_UDD_CNT0) and will shift out
LSB to MSB (LED_UDD_DAT0[0], LED_UDD_DAT0[1],
... LED_UDD_DAT0[LED_UDD_CNT0].

The per port status is also variable.  Systems can control which ports send
data (LED_PRT) as well as the status content (LED_PRT_FMT and
LED_PRT_STATUS*).  When multiple ports are enabled, they come out in lowest
port to highest port (prt0, prt1, ...).

The debug port data can also be added to the LED chain (LED_DBG).  When
enabled, the debug data shifts out LSB to MSB.

The UDD trailer data is identical to the header data, but uses LED_UDD_CNT1
and LED_UDD_DAT1.
----------------------------------------------------------------------------------------------------
===
 

 *
 * LED_CLK_PHASE = LED Clock Phase (in 64 eclks)
 *

     ==============================================================
     LED_CLK_PHASE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:7>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<6:0>   PHASE    R/W      0x4         4         Number of 64 eclks in order to create the led_clk  |   

Notes:
Example:
        Given a 2ns eclk, an LED_CLK_PHASE[PHASE] = 1, indicates that each
        led_clk phase is 64 eclks, or 128ns.  The led_clk period is 2*phase,
        or 256ns which is 3.9MHz.  The default value of 4, yields an led_clk
        period of 64*4*2ns*2 = 1024ns or ~1MHz (977KHz).
----------------------------------------------------------------------------------------------------
===
 

 *
 * LED_PRT = LED Port status information
 *

     ==============================================================
     LED_PRT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<7:0>   PRT_EN   R/W      0x0         NS        Which ports are enabled to display status          |   
                                                  PRT_EN<3:0> coresponds to RGMII ports 3-0 on int0 |
                                                  PRT_EN<7:4> coresponds to RGMII ports 7-4 on int1 |
                                                  Only applies when interface is in RGMII mode      |
                                                  The status format is defined by LED_PRT_FMT       |

Notes:
Note:
        the PRT vector enables information of the 8 RGMII ports connected to
        Octane.  It does not reflect the actual programmed PHY addresses.
----------------------------------------------------------------------------------------------------
===


 *
 * LED_DBG = LED Debug Port information
 *

     ==============================================================
     LED_DBG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<0>     DBG_EN   R/W      0x0         0x0       Add Debug Port Data to the LED shift chain         |   
                                                  Debug Data is shifted out LSB to MSB              |
----------------------------------------------------------------------------------------------------
===


 *
 * LED_UDD_CNT = LED UDD Counts
 *

     ==============================================================
     LED_UDD_CNT(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:6>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<5:0>   CNT      R/W      0x0         0x0       Number of bits of user-defined data to include in  |   
                                                  the LED shift chain.  Legal values: 0-32.         |
----------------------------------------------------------------------------------------------------
===


 *
 * LED_PRT_FMT = LED Port Status Infomation Format
 *

     ==============================================================
     LED_PRT_FMT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<3:0>   FORMAT   R/W      0x0         NS        Port Status Information for each enabled port in   |   
                                                  LED_PRT.  The formats are below                   |
                                                  0x0: { LED_PRT_STATUS[0]            }             |
                                                  0x1: { LED_PRT_STATUS[1:0]          }             |
                                                  0x2: { LED_PRT_STATUS[3:0]          }             |
                                                  0x3: { LED_PRT_STATUS[5:0]          }             |
                                                  0x4: { (RX|TX), LED_PRT_STATUS[0]   }             |
                                                  0x5: { (RX|TX), LED_PRT_STATUS[1:0] }             |
                                                  0x6: { (RX|TX), LED_PRT_STATUS[3:0] }             |
                                                  0x8: { Tx, Rx, LED_PRT_STATUS[0]    }             |
                                                  0x9: { Tx, Rx, LED_PRT_STATUS[1:0]  }             |
                                                  0xa: { Tx, Rx, LED_PRT_STATUS[3:0]  }             |

Notes:
TX: RGMII TX block is sending packet data or extends on the port
RX: RGMII RX block has received non-idle cycle

For short transfers, LEDs will remain on for at least one blink cycle
----------------------------------------------------------------------------------------------------
===


 *
 * LED_UDD_DAT = User defined data (header or trailer)
 *

     ==============================================================
     LED_UDD_DAT(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVRD    RAZ      NS          NS        Reserved                                           |   
<31:0>  DAT      R/W      0x0         NS        Header or trailer UDD data to be displayed on      |   
                                                  the LED shift chain.  Number of bits to include   |
                                                  is controled by LED_UDD_CNT                       |

Notes:
Bits come out LSB to MSB on the shift chain.  If LED_UDD_CNT is set to 4
then the bits comes out LED_UDD_DAT[0], LED_UDD_DAT[1], LED_UDD_DAT[2],
LED_UDD_DAT[3].
----------------------------------------------------------------------------------------------------
===


 *
 * LED_BLINK = LED Blink Rate (in led_clks)
 *

     ==============================================================
     LED_BLINK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8> RSVRD    RAZ       NS          NS        Reserved                                           |   
<7:0>  RATE     R/W       0x4         4         LED Blink rate in led_latch clks                   |   
                                                  RATE must be > 0                                  |
----------------------------------------------------------------------------------------------------
===


 *
 * LED_POLARITY = LED Polarity
 *

     ==============================================================
     LED_POLARITY Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  RSVRD    RAZ       NS          NS        Reserved                                          |   
<0>     POLARITY R/W       0x0         0         LED active polarity                               |   
                                                   0 = active HIGH LED                              |
                                                   1 = active LOW LED (invert led_dat)              |
----------------------------------------------------------------------------------------------------
===


 *
 * LED_PRT_STATUS = LED Port Status information
 *

     ==============================================================
     LED_PRT_STATUS(0..7) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:6>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<5:0>   STATUS   R/W      0x0         0x0       Bits that software can set to be added to the      |   
                                                  LED shift chain - depending on LED_PRT_FMT        |
                                                  LED_PRT_STATUS(3..0) corespond to RGMII ports 3-0 |
                                                   on interface0                                    |
                                                  LED_PRT_STATUS(7..4) corespond to RGMII ports 7-4 |
                                                   on interface1                                    |
                                                  Only applies when interface is in RGMII mode      |
----------------------------------------------------------------------------------------------------
===


 *
 * LED_UDD_DAT_SET = User defined data (header or trailer)
 *

     ==============================================================
     LED_UDD_DAT_SET(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVRD    RAZ      NS          NS        Reserved                                           |   
<31:0>  SET      WO       0x0         NS        Bitwise set for the Header or trailer UDD data to  |   
                                                  be displayed on the LED shift chain.              |
----------------------------------------------------------------------------------------------------
===


 *
 * LED_UDD_DAT_CLR = User defined data (header or trailer)
 *

     ==============================================================
     LED_UDD_DAT_CLR(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVRD    RAZ      NS          NS        Reserved                                           |   
<31:0>  CLR      WO       0x0         NS        Bitwise clear for the Header or trailer UDD data to|   
                                                  be displayed on the LED shift chain.              |
----------------------------------------------------------------------------------------------------
===


 *
 * LED_CYLON = LED CYLON Effect (should remain undocumented)
 *

     ==============================================================
     LED_CYLON Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVRD    RAZ      NS          NS        Reserved                                           |   
<15:0>  RATE     R/W      0x0         0         LED Cylon Effect when RATE!=0                      |   
                                                  Changes at RATE*LATCH period                      |
----------------------------------------------------------------------------------------------------
===


 *
 * SMI_CMD = Force a Read/Write command to the PHY
 *

     ==============================================================
     SMI(0..1)_CMD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:18> RSVRD    RAZ      NS          NS        Reserved                                           |   
<17:16> PHY_OP   R/W      0           NS        PHY Opcode depending on SMI_CLK[MODE]              |   
                                                  SMI_CLK[MODE] == 0 (<=1Gbs / Clause 22)           |
                                                   x0=write                                         |
                                                   x1=read                                          |
                                                  SMI_CLK[MODE] == 1 (>1Gbs / Clause 45)            |
                                                   00=address                                       |
                                                   01=write                                         |
                                                   11=read                                          |
                                                   10=post-read-increment-address                   |
<15:13> RSVRD1   RAZ      NS          NS        Reserved                                           |   
<12:8>  PHY_ADR  R/W      0           NS        PHY Address                                        |   
<7:5>   RSVRD0   RAZ      NS          NS        Reserved                                           |   
<4:0>   REG_ADR  R/W      0           NS        PHY Register Offset                                |   

Notes:
Writes to this register will create SMI xactions.  Software will poll on (depending on the xaction type).
----------------------------------------------------------------------------------------------------
===


 *
 * SMI_WR_DAT = SMI Write Data
 *

     ==============================================================
     SMI(0..1)_WR_DAT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:18> RSVRD    RAZ      NS          NS        Reserved                                           |   
<17>    PENDING  RO       0           NS        Write Xaction Pending                              |   
<16>    VAL      RO       0           NS        Write Data Valid                                   |   
<15:0>  DAT      R/W      0           NS        Write Data                                         |   

Notes:
VAL will assert when the write xaction completes.  A read to this register
will clear VAL.  PENDING indicates that an SMI WR transaction is in flight.
----------------------------------------------------------------------------------------------------
===


 *
 * SMI_RD_DAT = SMI Read Data
 *

     ==============================================================
     SMI(0..1)_RD_DAT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:18> RSVRD    RAZ      NS          NS        Reserved                                           |   
<17>    PENDING  RO       0           NS        Read Xaction Pending                               |   
<16>    VAL      RO       0           NS        Read Data Valid                                    |   
<15:0>  DAT      RO       0           NS        Read Data                                          |   

Notes:
VAL will assert when the read xaction completes.  A read to this register
will clear VAL.  PENDING indicates that an SMI RD transaction is in flight.
----------------------------------------------------------------------------------------------------
===


 *
 * SMI_CLK = Clock Control Register
 *

     ==============================================================
     SMI(0..1)_CLK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:25> NS       RAZ      NS          NS        Reserved                                           |   
<24>    MODE     R/W      0           0         IEEE operating mode                                |   
                                                  0=Clause 22 complient                             |
                                                  1=Clause 45 complient                             |
<23:21> NS       RAZ      NS          NS        Reserved                                           |   
<20:16> SAMPLE_HI R/W     0           0         When to sample read data (extended bits)           |   
<15>    SAMPLE_MODE RAZ   0           0         Read Data sampling mode                            |   
                                                  According to the 802.3 spec, on reads, the STA    |
                                                  transitions MDC and the PHY drives MDIO with      |
                                                  some delay relative to that edge.  This is edge1. |
                                                  The STA then samples MDIO on the next rising edge |
                                                  of MDC.  This is edge2. Octeon can sample the     |
                                                  read data relative to either edge.                |
                                                   0={SAMPLE_HI,SAMPLE} specify the sample time     |
                                                     relative to edge2                              |
                                                   1={SAMPLE_HI,SAMPLE} specify the sample time     |
                                                     relative to edge1                              |
<14>    NS       RAZ      NS          NS        Reserved                                           |   
<13>    CLK_IDLE R/W      0           0         Do not toggle MDC on idle cycles                   |   
<12>    PREAMBLE R/W      1           1         Send PREAMBLE on SMI transacton                    |   
                                                  PREAMBLE must be set 1 when MODE=1 in order       |
                                                  for the receiving PHY to correctly frame the      |
                                                  transaction.                                      |
<11:8>  SAMPLE   R/W      2           2         When to sample read data                           |   
                                                  (number of eclks after the rising edge of mdc)    |
                                                  ( {SAMPLE_HI,SAMPLE} > 1 )                        |
                                                  ( {SAMPLE_HI, SAMPLE} + 3 <= 2*PHASE )            |
<7:0>   PHASE    R/W      100         100       MDC Clock Phase                                    |   
                                                  (number of eclks that make up an mdc phase)       |
                                                  (PHASE > 2)                                       |
----------------------------------------------------------------------------------------------------
===


 *
 * SMI_EN = Enable the SMI interface
 *

     ==============================================================
     SMI(0..1)_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<0>     EN       R/W      0           1         Interface enable                                   |   
                                                  0=SMI Interface is down / no transactions, no MDC |
                                                  1=SMI Interface is up                             |
----------------------------------------------------------------------------------------------------
===
 


 *
 * MIO_TWS@_SW_TWSI = TWS@ Software to TWSI Register
 *
 * This register allows software to
 *    - initiate TWSI interface master-mode operations with a write and read the result with a read
 *    - load four bytes for later retrieval (slave mode) with a write and check validity with a read
 *    - launch a TWSI controller configuration read/write with a write and read the result with a read
 *
 * This register should be read or written by software, and read by the TWSI device. The TWSI device can
 * use either two-byte or five-byte reads to reference this register.
 *
 * The TWSI device considers this register valid when V==1 and SLONLY==1.
 *

     ==============================================================
     MIO_TWS(0..1)_SW_TWSI Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  D        R/W      0x0         NS        Data Field                                         |   
                                                 Used on a write when                               |
                                                   - initiating a master-mode write (SLONLY==0)     |
                                                   - writing a TWSI config register (SLONLY==0)     |
                                                   - a slave mode write (SLONLY==1)                 |
                                                 The read value is updated by                       |
                                                   - a write to this register                       |
                                                   - master mode completion (contains result or     |
                                                     error code)                                    |
                                                   - TWSI config register read (contains result)    |
<34:32> EOP_IA   R/W      0x0         NS        Extra opcode (when OP<3:0> == 0110 and SLONLY==0): |   
                                                   000 => TWSI Slave Address Register               |
                                                   001 => TWSI Data Register                        |
                                                   010 => TWSI Control Register                     |
                                                   011 => TWSI Clock Control Register (when R == 0) |
                                                   011 => TWSI Status Register (when R == 1)        |
                                                   100 => TWSI Extended Slave Register              |
                                                   111 => TWSI Soft Reset Register                  |
                                                 Also the lower 3 bits of Internal Address when     |
                                                   launching a master mode combined read / write    |
                                                   with internal address                            |
<39:35> IA       R/W      0x0         NS        Internal Address - Used when launching a master    |   
                                                   mode combined read / write with internal address |
                                                   (lower 3 bits are contained in the EOP_IA field) |
<49:40> A        R/W      0x0         NS        Address field                                      |   
                                                   - the address of the remote device for a master  |
                                                     mode operation                                 |
                                                   - A<9:7> are only used for 10-bit addressing     |
                                                  Note that when mastering a 7-bit OP, A<6:0> should|
                                                  not take any of the values 0x78, 0x79, 0x7A nor   |
                                                  0x7B (these 7-bit addresses are reserved to       |
                                                  extend to 10-bit addressing).                     |
<51:50> SCR      R/W      0x0         NS        Scratch - unused, but retain state                 |   
<54:52> SIZE     R/W      0x0         NS        Size in bytes of Master Mode Op if the Size        |   
                                                  Override bit is set.  Specified in -1 notation    |
                                                  (i.e. 0 = 1 byte, 1 = 2 bytes ... 7 = 8 bytes)    |
<55>    SOVR     R/W      0x0         NS        Size Override - if set, use the SIZE field to      |   
                                                  determine Master Mode Op size rather than what    |
                                                  the Opcode field specifies.  For operations       |
                                                  greater than 4 bytes, the additional data will be |
                                                  contained in the D field of MIO_TWS_SW_TWSI_EXT   |
<56>    R        R/W      0x0         NS        Read bit or result                                 |   
                                                   - If set on a write when SLONLY==0, the          |
                                                     operation is a read                            |
                                                   - On a read, this bit returns the result         |
                                                     indication for the most recent master mode     |
                                                     operation (1 = success, 0 = fail)              |
<60:57> OP       R/W      0x0         NS        Opcode field - When the register is written with   |   
                                                 SLONLY==0, initiate a read or write:               |
                                                   0000 => 7-bit Byte Master Mode TWSI Op           |
                                                   0001 => 7-bit Byte Combined Read Master Mode Op  |
                                                           7-bit Byte Write w/ IA Master Mode Op    |
                                                   0010 => 10-bit Byte Master Mode TWSI Op          |
                                                   0011 => 10-bit Byte Combined Read Master Mode Op |
                                                           10-bit Byte Write w/ IA Master Mode Op   |
                                                   0100 => TWSI Master Clock Register               |
                                                   0110 => See EOP field                            |
                                                   1000 => 7-bit 4-byte Master Mode TWSI Op         |
                                                   1001 => 7-bit 4-byte Comb. Read Master Mode Op   |
                                                           7-bit 4-byte Write w/ IA Master Mode Op  |
                                                   1010 => 10-bit 4-byte Master Mode TWSI Op        |
                                                   1011 => 10-bit 4-byte Comb. Read Master Mode Op  |
                                                           10-bit 4-byte Write w/ IA Master Mode Op |
<61>    EIA      R/W      0x0         NS        Extended Internal Address - send additional        |   
                                                  internal address byte (MSB of IA is from IA field |
                                                  of MIO_TWS_SW_TWSI_EXT)                           |
<62>    SLONLY   R/W      0x0         NS        Slave Only Mode                                    |   
                                                   - No operation is initiated with a write when    |
                                                     this bit is set - only D field is updated in   |
                                                     this case                                      |
                                                   - When clear, a write initiates either a TWSI    |
                                                     master-mode operation or a TWSI configuration  |
                                                     register access                                |
<63>    V        RC/W     0x0         NS        Valid bit                                          |   
                                                   - Set on a write (should always be written with  |
                                                     a 1)                                           |
                                                   - Cleared when a TWSI master mode op completes   |
                                                   - Cleared when a TWSI configuration register     |
                                                     access completes                               |
                                                   - Cleared when the TWSI device reads the         |
                                                     register if SLONLY==1                          |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_TWS@_TWSI_SW = TWS@ TWSI to Software Register
 *
 * This register allows the TWSI device to transfer data to software and later check that software has
 * received the information.
 *
 * This register should be read or written by the TWSI device, and read by software. The TWSI device can
 * use one-byte or four-byte payload writes, and two-byte payload reads.
 *
 * The TWSI device considers this register valid when V==1.
 *

     ==============================================================
     MIO_TWS(0..1)_TWSI_SW Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  D        R/W      NS          NS        Data Field - updated on a write by the TWSI device |   
<61:32> RSVD     RAZ      NS          NS        Reserved                                           |   
<63:62> V        RC/W     0x0         NS        Valid Bits                                         |   
                                                   - Not directly writable                          |
                                                   - Set to 1 on any write by the TWSI device       |
                                                   - Cleared on any read by software                |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_TWS@_INT = TWS@ Interrupt Register
 *
 * This register contains the TWSI interrupt enable mask and the interrupt source bits.  Note: the
 * interrupt source bit for the TWSI core interrupt (CORE_INT) is read-only, the appropriate sequence
 * must be written to the TWSI core to clear this interrupt.  The other interrupt source bits are write-
 * one-to-clear.  TS_INT is set on the update of the MIO_TWS_TWSI_SW register (i.e. when it is written
 * by a TWSI device).  ST_INT is set whenever the valid bit of the MIO_TWS_SW_TWSI is cleared (see above
 * for reasons).
 *
 * Note: When using the high-level controller, CORE_EN should be clear and CORE_INT should be ignored.
 * Conversely, when the high-level controller is disabled, ST_EN / TS_EN should be clear and ST_INT /
 * TS_INT should be ignored.
 *
 * This register also contains a read-only copy of the TWSI bus (SCL and SDA) as well as control bits to
 * override the current state of the TWSI bus (SCL_OVR and SDA_OVR).  Setting an override bit high will
 * result in the open drain driver being activated, thus driving the corresponding signal low.
 *

     ==============================================================
     MIO_TWS(0..1)_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:12> RSVD2    RAZ      NS          NS        Reserved                                           |   
<11>    SCL      RO       NS          NS        SCL                                                |   
<10>    SDA      RO       NS          NS        SDA                                                |   
<9>     SCL_OVR  R/W      0x0         NS        SCL override                                       |   
<8>     SDA_OVR  R/W      0x0         NS        SDA override                                       |   
<7>     RSVD1    RAZ      NS          NS        Reserved                                           |   
<6>     CORE_EN  R/W      0x0         NS        TWSI core interrupt enable                         |   
<5>     TS_EN    R/W      0x0         NS        MIO_TWS_TWSI_SW register update interrupt enable   |   
<4>     ST_EN    R/W      0x0         NS        MIO_TWS_SW_TWSI register update interrupt enable   |   
<3>     RSVD0    RAZ      NS          NS        Reserved                                           |   
<2>     CORE_INT RO       0x0         NS        TWSI core interrupt                                |   
<1>     TS_INT   R/W1C    0x0         NS        MIO_TWS_TWSI_SW register update interrupt          |   
<0>     ST_INT   R/W1C    0x0         NS        MIO_TWS_SW_TWSI register update interrupt          |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_TWS@_SW_TWSI_EXT = TWS@ Software to TWSI Extension Register
 *
 * This register contains an additional byte of internal address and 4 additional bytes of data to be
 * used with TWSI master mode operations.  IA will be sent as the first byte of internal address when
 * performing master mode combined read / write with internal address operations and the EIA bit of
 * MIO_TWS_SW_TWSI is set.  D extends the data field of MIO_TWS_SW_TWSI for a total of 8 bytes (SOVR
 * must be set to perform operations greater than 4 bytes).
 *

     ==============================================================
     MIO_TWS(0..1)_SW_TWSI_EXT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  D        R/W      0x0         NS        Extended Data Field                                |   
<39:32> IA       R/W      0x0         NS        Extended Internal Address                          |   
<63:40> RSVD     RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  MIX_ORING1 = MIX Outbound Ring Register #1
 * 
 * Description: 
 *  NOTE: To write to the MIX_ORING1 register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_ORING1 register, a device would issue an IOBLD64 directed at the MIO.
 *

     ==============================================================
     MIX(0..0)_ORING1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<2:0>   NS       RAZ      NS          NS        RESERVED                                             
<35:3>  OBASE    R/W      0x0         NS        Represents the 8B-aligned base address of the first  
                                                 Outbound Ring(O-Ring) Entry in system memory. 
                                                 NOTE: SW MUST ONLY write to this register during
                                                 power-on/boot code.                                                      

<39:36> NS       RAZ      NS          NS        RESERVED                                             

<59:40> OSIZE    R/W      0x0         NS        Represents the Outbound Ring Buffer's Size(in 8B     
                                                 words). The ring can be as large as 1M entries.
                                                 NOTE: This CSR MUST BE setup written by SW poweron
                                                 (when ODBELL/ORCNT=0). 

<63:60> NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_ORING2 = MIX Outbound Ring Register #2
 *
 * Description: 
 *  NOTE: To write to the MIX_ORING2 register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_ORING2 register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..0)_ORING2 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<19:0>  ODBELL   R/W      0x0         NS        Represents the cumulative total of pending           
                                                 Outbound Ring(O-Ring) Buffer Entries. Each O-Ring
                                                 Buffer Entry contains 1) an L2/DRAM byte pointer 
                                                 along with a 2) a Byte Length. 

                                                 After SW inserts new entries into the O-Ring Buffer,
                                                 it "rings the doorbell with the count of the newly 
                                                 inserted entries". When the MIX HW receives the 
                                                 doorbell ring, it increments the current doorbell 
                                                 count by the CSR write value. 
                                                 
                                                 SW must never cause the doorbell count for the 
                                                 O-Ring to exceed the size of the ring(OSIZE).  
                                                 A read of the CSR indicates the current doorbell
                                                 count.

<31:20> NS       RAZ      NS          NS        RESERVED                                             

<51:32> OTLPTR   RO      0x0         NS         The Outbound Ring Tail Pointer selects the O-Ring    
                                                 Entry that the HW will process next. After the HW 
                                                 completes sending an outbound packet, it increments 
                                                 the O-Ring Tail Pointer. [NOTE: The O-Ring Tail 
                                                 Pointer HW increment is always modulo 
                                                 MIX_ORING2[OSIZE]. 
                                                 NOTE: This field is 'read-only' to SW. 

<63:52> NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_IRING1 = MIX Inbound Ring Register #1
 * 
 * Description: 
 *  NOTE: To write to the MIX_IRING1 register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_IRING1 register, a device would issue an IOBLD64 directed at the MIO.
 *

     ==============================================================
     MIX(0..0)_IRING1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<2:0>   NS       RAZ      NS          NS        RESERVED                                             

<35:3>  IBASE    R/W      0x0         NS        Represents the 8B-aligned base address of the first  
                                                 Inbound Ring entry in system memory. 
                                                 NOTE: SW MUST ONLY write to this register during
                                                 power-on/boot code. 

<39:36> NS       RAZ      NS          NS        RESERVED                                             

<59:40> ISIZE    R/W      0x0         NS        Represents the Inbound Ring Buffer's Size(in 8B      
                                                 words). The ring can be as large as 1M entries.
                                                 NOTE: This CSR MUST BE setup written by SW poweron
                                                 (when IDBELL/IRCNT=0). 
                                                 
<63:60> NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_IRING2 = MIX Inbound Ring Register #2
 *
 * Description: 
 *  NOTE: To write to the MIX_IRING2 register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_IRING2 register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..0)_IRING2 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<19:0>  IDBELL   R/W      0x0         NS        Represents the cumulative total of pending           
                                                 Inbound Ring Buffer Entries. Each I-Ring
                                                 Buffer Entry contains 1) an L2/DRAM byte pointer 
                                                 along with a 2) a Byte Length. 

                                                 After SW inserts a new entry into the I-Ring Buffer,
                                                 it "rings the doorbell for the inbound ring". When 
                                                 the MIX HW receives the doorbell ring, it advances
                                                 the doorbell count for the I-Ring. 
                                                 
                                                 SW must never cause the doorbell count for the 
                                                 I-Ring to exceed the size of the I-ring(ISIZE).  
                                                 A read of the CSR indicates the current doorbell
                                                 count.

<31:20> NS       RAZ      NS          NS        RESERVED                                             

<51:32> ITLPTR   RO      0x0         NS         The Inbound Ring Tail Pointer selects the I-Ring     
                                                 Entry that the HW will process next. After the HW 
                                                 completes receiving an inbound packet, it increments 
                                                 the I-Ring Tail Pointer. [NOTE: The I-Ring Tail 
                                                 Pointer HW increment is always modulo ISIZE. 
  
                                                 NOTE: This field is 'read-only' to SW. 
<63:52> NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_CTL = MIX Control Register
 *
 * Description: 
 *  NOTE: To write to the MIX_CTL register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_CTL register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..0)_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<1:0>  MRQ_HWM  R/W      0x1         0x1       MIX CB-Request FIFO Programmable High Water Mark.    
                                                The MRQ contains 16 CB-Requests which are CSR Rd/Wr
                                                Requests. If the MRQ backs up with "HWM" entries,
                                                then new CB-Requests are 'stalled'. 
                                                   [0]: HWM = 16
                                                   [1]: HWM = 15
                                                   [2]: HWM = 14
                                                   [3]: HWM = 13                                   
                                                NOTE: This must only be written at power-on/boot time.         
<2>    NBTARB   R/W      0x0         0x0       MIX CB-Request Arbitration Mode.                     
                                                When set to zero, the arbiter is fixed priority with 
                                                the following priority scheme: 
                                                    Highest Priority: I-Ring Packet Write Request
                                                                      O-Ring Packet Read Request
                                                                      I-Ring Entry Write Request
                                                                      I-Ring Entry Read Request
                                                                      O-Ring Entry Read Request
                                                When set to one, the arbiter is round robin.
<3>    LENDIAN  R/W      0x0         0x0       Packet Little Endian Mode                            
                                                (0: Big Endian Mode/1: Little Endian Mode)
                                                When the mode is set, MIX will byte-swap packet data 
                                                loads/stores at the MIX/NCB boundary.
                   
<4>    RESET    RAZ      0x0         0x0       MIX Soft Reset                                       
                                                When SW writes a '1' to MIX_CTL[RESET], the
                                                MIX logic will be soft reset. 
                                                NOTE: The MIX-AGL RSL-CSR accesses are not effected
                                                by soft reset (to allow RSL accesses during soft reset). 
                                                NOTE: The MIX-MIX NCB-direct CSR accesses are not effected
                                                by soft reset (to allow RSL accesses during soft reset).

                                                NOTE: Writing '1' will create a "64 eclk" soft reset
                                                pulse chain used by both MIX/AGL subcomponents to 
                                                soft reset the MIX/AGL. SW should avoid sending any MIX/AGL
                                                CSR R/Ws until after this 64 eclk reset window has
                                                expired (unpredictable results).   
     
                                                NOTE: RESET is intentionally 'read as zero'. 

                                                The intended "soft reset" sequence is: 
                                                   1) Write MIX_CTL[EN]=0
                                                      [To prevent any NEW transactions from being started]
                                                   2) Wait for MIX_CTL[BUSY]=0 
                                                      [To indicate that all inflight transactions have 
                                                       completed]
                                                   3) Write MIX_CTL[RESET]=1, followed by a MIX_CTL CSR read
                                                      and wait for the result. 
                                                      This will generate the soft-reset pulse chain that will
                                                      reset MIX/AGL (except logic to gain access to CSRs). 
                                                   4) Re-Initialize the MIX/AGL just as would be done
                                                      for a hard reset. 

<5>     EN       R/W      0x0         0x0       MIX Enable bit                                       
                                                When EN=0, MIX will no longer arbitrate for 
                                                any new L2/DRAM read/write requests on the NCB Bus. 
                                                MIX will complete any requests that are currently 
                                                pended for the NCB Bus. 
                                   
<6>     BUSY     RO       0x0         0x0       MIX Busy Status bit                                  
                                                MIX will assert busy status any time there are: 
                                                  1) L2/DRAM reads in-flight (NCB-arb to read
                                                     response)
                                                  2) L2/DRAM writes in-flight (NCB-arb to write
                                                     data is sent. 
                                                  3) L2/DRAM write commits in-flight (NCB-arb to write
                                                     commit response). 
                                                NOTE: After MIX_CTL[EN]=0, the MIX will eventually 
                                                complete any "inflight" transactions, at which point the
                                                BUSY will de-assert. 

<7>   CRC_STRIP  R/W      0x0         0x0       HW CRC Strip Enable                                 
                                                When enabled, the last 4 bytes(CRC) of the ingress packet 
                                                are not included in cumulative packet byte length. 
                                                In other words, the cumulative LEN field for all 
                                                I-Ring Buffer Entries associated with a given ingress 
                                                packet will be 4 bytes less (so that the final 4B HW CRC 
                                                packet data is not processed by software).  

<63:8> NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_IRHWM = MIX I-Ring High-Water Mark Threshold Register
 *
 * Description: 
 *  NOTE: To write to the MIX_IHWM register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_IHWM register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..0)_IRHWM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<19:0> IRHWM    R/W       0x0         0x0      I-Ring Entry High Water Mark Threshold.                
                                                Used to determine when the # of Inbound packets 
                                                in system memory(MIX_IRCNT[IRCNT]) exceeds this IRHWM
                                                threshold. 

                                                NOTE: The power-on value of the CIU_INTx_EN*[MII]
                                                interrupt enable bits is zero and must be enabled 
                                                to allow interrupts to be reported.

<39:20> IBPLWM  R/W       0x0         0x0      I-Ring BackPressure Low Water Mark Threshold.         
                                                When the #of available I-Ring Entries (IDBELL) 
                                                is less than IBPLWM, the AGL-MAC will: 
                                                  a) In full-duplex mode: send periodic PAUSE packets. 
                                                  b) In half-duplex mode: Force collisions.
                                                This programmable mechanism is provided as a means
                                                to backpressure input traffic 'early' enough (so 
                                                that packets are not 'dropped' by OCTEON).
                                                
<63:40> NS       RAZ      NS          NS       RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_IRCNT = MIX I-Ring Pending Packet Counter
 *
 * Description: 
 *  NOTE: To write to the MIX_IRCNT register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_IRCNT register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..0)_IRCNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<19:0>  IRCNT     R/W       0x0         0x0    Pending # of I-Ring Packets.                          
                                                Whenever HW writes a completion code of Done, Trunc, 
                                                CRCErr or Err, it increments the IRCNT (to indicate
                                                to SW the # of pending Input packets in system memory). 
                                                NOTE: The HW guarantees that the completion code write
                                                is always visible in system memory BEFORE it increments
                                                the IRCNT. 
                                                Reads of IRCNT return the current inbound packet count. 
                                                Writes of IRCNT decrement the count by the value 
                                                written. 
                                                This register is used to generate interrupts to alert
                                                SW of pending inbound MIX packets in system memory. 

                                                NOTE: In the case of inbound packets that span multiple
                                                I-Ring entries, SW must keep track of the # of I-Ring Entries 
                                                associated with a given inbound packet to reclaim the
                                                proper # of I-Ring Entries for re-use.

<63:20> NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_ORHWM = MIX O-Ring High-Water Mark Threshold Register
 *
 * Description: 
 *  NOTE: To write to the MIX_ORHWM register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_ORHWM register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..0)_ORHWM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<19:0> ORHWM    R/W       0x0         0x0      O-Ring Entry High Water Mark Threshold.               
                                                Used to determine when the # of Outbound packets 
                                                in system memory that can be reclaimed 
                                                (MIX_ORCNT[ORCNT]) exceeds this ORHWM threshold.   

                                                NOTE: The power-on value of the CIU_INTx_EN*[MII]
                                                interrupt enable bits is zero and must be enabled 
                                                to allow interrupts to be reported.

<63:20> NS       RAZ      NS          NS       RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_ORCNT = MIX O-Ring Packets Sent Counter
 *
 * Description: 
 *  NOTE: To write to the MIX_ORCNT register, a device would issue an IOBST directed at the MIO. 
 *        To read the MIX_ORCNT register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..0)_ORCNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<19:0>  ORCNT     R/W       0x0         0x0    Pending # of O-Ring Packets.                          
                                                Whenever HW removes a packet from the O-Ring, it 
                                                increments the ORCNT (to indicate to SW the # of 
                                                Output packets in system memory that can be reclaimed). 
                                                Reads of ORCNT return the current count. 
                                                Writes of ORCNT decrement the count by the value 
                                                written. 
                                                This register is used to generate interrupts to alert
                                                SW of pending outbound MIX packets that have been 
                                                removed from system memory. (see MIX_ISR[ORTHRESH]
                                                description for more details).
                                                NOTE: For outbound packets, the # of O-Ring Packets
                                                is equal to the # of O-Ring Entries. 

<63:20> NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_ISR = MIX Interrupt/Status Register
 *
 * Description: 
 *  NOTE: To write to the MIX_ISR register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_ISR register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..0)_ISR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     ODBLOVF  R/W1C    0x0        0x0       Outbound DoorBell(ODBELL) Overflow Detected           
                                                If SW attempts to write to the MIX_ORING2[ODBELL]
                                                with a value greater than the remaining #of 
                                                O-Ring Buffer Entries (MIX_REMCNT[OREMCNT]), then 
                                                the following occurs: 
                                                1) The  MIX_ORING2[ODBELL] write is IGNORED
                                                2) The ODBLOVF is set and the CIU_INTx_SUM0,4[MII] 
                                                   bits are set if ((MIX_ISR & MIX_INTENA) != 0)). 

                                                If both the global interrupt mask bits (CIU_INTx_EN*[MII])
                                                and the local interrupt mask bit(OVFENA) is set, than an 
                                                interrupt is reported for this event. 
 
                                                SW should keep track of the #I-Ring Entries in use 
                                                (ie: cumulative # of ODBELL writes),  and ensure that 
                                                future ODBELL writes don't exceed the size of the 
                                                O-Ring Buffer (MIX_ORING2[OSIZE]). 
                                                SW must reclaim O-Ring Entries by writing to the 
                                                MIX_ORCNT[ORCNT]. . 

                                                NOTE: There is no recovery from an ODBLOVF Interrupt. 
                                                If it occurs, it's an indication that SW has 
                                                overwritten the O-Ring buffer, and the only recourse
                                                is a HW reset. 

<1>     IDBLOVF  R/W1C    0x0         0x0      Inbound DoorBell(IDBELL) Overflow Detected            
                                                If SW attempts to write to the MIX_IRING2[IDBELL]
                                                with a value greater than the remaining #of 
                                                I-Ring Buffer Entries (MIX_REMCNT[IREMCNT]), then 
                                                the following occurs: 
                                                1) The  MIX_IRING2[IDBELL] write is IGNORED
                                                2) The ODBLOVF is set and the CIU_INTx_SUM0,4[MII] 
                                                   bits are set if ((MIX_ISR & MIX_INTENA) != 0)). 

                                                If both the global interrupt mask bits (CIU_INTx_EN*[MII])
                                                and the local interrupt mask bit(IVFENA) is set, than an 
                                                interrupt is reported for this event. 
 
                                                SW should keep track of the #I-Ring Entries in use 
                                                (ie: cumulative # of IDBELL writes),  and ensure that 
                                                future IDBELL writes don't exceed the size of the 
                                                I-Ring Buffer (MIX_IRING2[ISIZE]). 
                                                SW must reclaim I-Ring Entries by keeping track of the 
                                                #IRing-Entries, and writing to the MIX_IRCNT[IRCNT]. 
                                                NOTE: The MIX_IRCNT[IRCNT] register represents the
                                                total #packets(not IRing Entries) and SW must further 
                                                keep track of the # of I-Ring Entries associated with 
                                                each packet as they are processed. 

                                                NOTE: There is no recovery from an IDBLOVF Interrupt. 
                                                If it occurs, it's an indication that SW has 
                                                overwritten the I-Ring buffer, and the only recourse
                                                is a HW reset. 

<2>     ORTHRESH  RO      0x0         0x0      Outbound Ring Packet Threshold Exceeded                
                                                When the pending #outbound packets in system 
                                                memory(ORCNT) has exceeded a programmable threshold 
                                                (ORHWM), then this bit is set. If this does occur, 
                                                the ORTHRESH is set and the CIU_INTx_SUM0,4[MII] bits 
                                                are set if ((MIX_ISR & MIX_INTENA) != 0)).

                                                If both the global interrupt mask bits (CIU_INTx_EN*[MII])
                                                and the local interrupt mask bit(OTHENA) is set, than an 
                                                interrupt is reported for this event. 

<3>     IRTHRESH  RO      0x0         0x0      Inbound Ring Packet Threshold Exceeded                
                                                When the pending #inbound packets in system 
                                                memory(IRCNT) has exceeded a programmable threshold 
                                                (IRHWM), then this bit is set. If this does occur, 
                                                the IRTHRESH is set and the CIU_INTx_SUM0,4[MII] bits 
                                                are set if ((MIX_ISR & MIX_INTENA) != 0)).

                                                If both the global interrupt mask bits (CIU_INTx_EN*[MII])
                                                and the local interrupt mask bit(ITHENA) is set, than an 
                                                interrupt is reported for this event. 

<4>     DATA_DRP R/W1C    0x0         0x0      Data was dropped due to RX FIFO full                  
                                                If this does occur, the DATA_DRP is set and the 
                                                CIU_INTx_SUM0,4[MII] bits are set.

                                                If both the global interrupt mask bits (CIU_INTx_EN*[MII])
                                                and the local interrupt mask bit(DATA_DRPENA) is set, than an 
                                                interrupt is reported for this event. 

<5>     IRUN     R/W1C    0x0         0x0      IRCNT UnderFlow Detected                             
                                                If SW writes a larger value than what is currently
                                                in the MIX_IRCNT[IRCNT], then HW will report the 
                                                underflow condition. 
                                                NOTE: The MIX_IRCNT[IRCNT] will clamp to to zero.

                                                NOTE: If an IRUN underflow condition is detected, 
                                                the integrity of the MIX/AGL HW state has 
                                                been compromised. To recover, SW must issue a 
                                                software reset sequence (see: MIX_CTL[RESET]

<6>     ORUN     R/W1C    0x0         0x0      ORCNT UnderFlow Detected                             
                                                If SW writes a larger value than what is currently
                                                in the MIX_ORCNT[ORCNT], then HW will report the 
                                                underflow condition. 
                                                NOTE: The MIX_ORCNT[IOCNT] will clamp to to zero.

                                                NOTE: If an ORUN underflow condition is detected, 
                                                the integrity of the MIX/AGL HW state has 
                                                been compromised. To recover, SW must issue a 
                                                software reset sequence (see: MIX_CTL[RESET]

<63:7>  NS       RAZ      NS          NS       RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_INTENA = MIX Local Interrupt Enable Mask Register
 *
 * Description: 
 *  NOTE: To write to the MIX_INTENA register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_INTENA register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..0)_INTENA Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     OVFENA   R/W      0x0         0x0      Outbound DoorBell(ODBELL) Overflow Interrupt Enable   
                                                If both the global interrupt mask bits (CIU_INTx_EN*[MII])
                                                and this local interrupt mask bit is set, than an 
                                                interrupt is reported for an Outbound Doorbell Overflow
                                                event(ODBOVF).

<1>     IVFENA   R/W      0x0         0x0      Inbound DoorBell(IDBELL) Overflow Detected            
                                                If both the global interrupt mask bits (CIU_INTx_EN*[MII])
                                                and this local interrupt mask bit is set, than an 
                                                interrupt is reported for an Inbound Doorbell Overflow
                                                event(IDBOVF). 

<2>     OTHENA   R/W    0x0         0x0        Outbound Ring Threshold Exceeded Interrupt Enable    
                                                If both the global interrupt mask bits (CIU_INTx_EN*[MII])
                                                and this local interrupt mask bit is set, than an 
                                                interrupt is reported for an Outbound Ring Threshold 
                                                Exceeded event(ORTHRESH). 

<3>     ITHENA   R/W    0x0         0x0        Inbound Ring Threshold Exceeded Interrupt Enable     
                                                If both the global interrupt mask bits (CIU_INTx_EN*[MII])
                                                and this local interrupt mask bit is set, than an 
                                                interrupt is reported for an Inbound Ring Threshold 
                                                Exceeded event(IRTHRESH). 

<4> DATA_DRPENA  R/W    0x0         0x0        Data was dropped due to RX FIFO full Interrupt       
                                                enable. If both the global interrupt mask bits 
                                                (CIU_INTx_EN*[MII]) and the local interrupt mask 
                                                bit(DATA_DRPENA) is set, than an interrupt is 
                                                reported for this event. 

<5>     IRUNENA  R/W    0x0         0x0        IRCNT UnderFlow Interrupt Enable                     
                                                If both the global interrupt mask bits (CIU_INTx_EN*[MII])
                                                and this local interrupt mask bit is set, than an 
                                                interrupt is reported for an IRCNT underflow condition
                                                MIX_ISR[IRUN]. 

<6>     ORUNENA  R/W    0x0         0x0        ORCNT UnderFlow Detected                            
                                                If both the global interrupt mask bits (CIU_INTx_EN*[MII])
                                                and this local interrupt mask bit is set, than an 
                                                interrupt is reported for an ORCNT underflow condition
                                                MIX_ISR[ORUN]. 

<63:7>  NS       RAZ      NS          NS       RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_REMCNT = MIX Ring Buffer Remainder Counts (useful for HW debug only)
 *
 * Description: 
 *  NOTE: To read the MIX_REMCNT register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..0)_REMCNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<19:0>  OREMCNT   RO      0x0         0x0      Remaining O-Ring Buffer Count                         
                                                Reflects the # of unused/remaining O-Ring Entries 
                                                that HW  currently detects in the O-Ring Buffer.  
                                                HW uses this value to detect O-Ring Doorbell overflows.                                              
                                                (see: MIX_ISR[ODBLOVF])

                                                When SW writes the MIX_IRING1[OSIZE], the OREMCNT
                                                is loaded with MIX_ORING2[OSIZE] value. (NOTE: OSIZE should only 
                                                be written at power-on, when it's known that there are
                                                no O-Ring Entries currently in use by HW). 
                                                When SW writes to the ODBELL register, the OREMCNT
                                                is decremented by the CSR write value. 
                                                When SW writes to MIX_[OREMCNT], the OREMCNT is decremented
                                                by the CSR write value.  

<31:20> NS       RAZ      NS          NS        RESERVED                                             

<51:32> IREMCNT   RO      0x0         0x0      Remaining I-Ring Buffer Count                         
                                                Reflects the # of unused/remaining I-Ring Entries 
                                                that HW  currently detects in the I-Ring Buffer.  
                                                HW uses this value to detect I-Ring Doorbell overflows.                                              
                                                (see: MIX_ISR[IDBLOVF])

                                                When SW writes the MIX_IRING1[ISIZE], the IREMCNT
                                                is loaded with MIX_IRING2[ISIZE] value. (NOTE: ISIZE should only 
                                                be written at power-on, when it's known that there are
                                                no I-Ring Entries currently in use by HW). 
                                                When SW writes to the IDBELL register, the IREMCNT
                                                is decremented by the CSR write value. 
                                                When HW issues an IRing Write Request(onto NCB Bus),
                                                the IREMCNT is incremented by 1. 

<63:52> NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_BIST = MIX BIST Register
 *
 * Description: 
 *  NOTE: To read the MIX_BIST register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..0)_BIST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     ORFDAT    RO       0           0         Bist Results for MIX O-Ring Entry RAM                
                                                 0: GOOD (or bist in progress/never run)                                          
                                                 1: BAD                                                                          
<1>     IRFDAT    RO       0           0         Bist Results for MIX I-Ring Entry RAM                
                                                 0: GOOD (or bist in progress/never run)                                          
                                                 1: BAD                                                                          
<2>     IPFDAT    RO       0           0         Bist Results for MIX Inbound Packet RAM              
                                                 0: GOOD (or bist in progress/never run)                                          
                                                 1: BAD                                                                          
<3>     MRQDAT    RO       0           0         Bist Results for NBR CSR RdReq RAM                   
                                                 0: GOOD (or bist in progress/never run)                                          
                                                 1: BAD                                                                          
<63:4>  NS        RAZ      0           0         RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 
 * Total Address is 16Kb; 0x0000 - 0x3fff, 0x000 - 0x7fe(Reg, every other 8B)
 *
 * General  5kb; 0x0000 - 0x13ff, 0x000 - 0x27e(Reg-General)
 * PktMem  10Kb; 0x1400 - 0x3bff, 0x280 - 0x77e(Reg-General-Packet)
 * Rsvd     1Kb; 0x3c00 - 0x3fff, 0x780 - 0x7fe(Reg-NCB Only Mode)
 
 *
 *                  NPEI_BAR1_INDEX@ = NPEI BAR1 Index@ Register
 *
 * Contains address index and control bits for access to memory ranges of BAR-1. Index is build from supplied address [25:22].
 * NPEI_BAR1_INDEX0 through NPEI_BAR1_INDEX15 is used for transactions orginating with PCIE-PORT0 and NPEI_BAR1_INDEX16
 * through NPEI_BAR1_INDEX31 is used for transactions originating with PCIE-PORT1.
 * 

     ==============================================================
     NPEI_BAR1_INDEX(0..31) Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 
<31:18> NS       RAZ      NS          NS        Reserved                                               
<17:4>  ADDR_IDX R/W      0x0         NS        Address bits [35:22] sent to L2C                       
<3>     CA       R/W      0x0         0         Set '1' when access is not to be cached in L2.         
<2:1>   END_SWP  R/W      0x0         NS        Endian Swap Mode                                       
<0>     ADDR_V   R/W      0x0         NS        Set '1' when the selected address range is valid.      
----------------------------------------------------------------------------------------------------
===

 *
 *                  NPEI_WIN_WR_ADDR = NPEI Window Write Address Register
 *
 * Contains the address to be writen to when a write operation is started by writing the
 * NPEI_WIN_WR_DATA register (see below).
 *

     ==============================================================
     NPEI_WIN_WR_ADDR Type=PEXP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 
<63:49> NS       RAZ      NS          NS        Reserved                                               
<48>    IOBIT    RAZ      0x0         0x0       A 1 or 0 can be written here but this will always      
                                                 read as '0'.
<47:2>  WR_ADDR  R/W      0x0         NS        The address that will be written to when the           
                                                 NPEI_WIN_WR_DATA register is written.
                                                 [47:40] = NCB_ID
                                                 [39:3]  = Address
                                                 When [47:43] == NPI & [42:0] == 0 bits [39:0] are:
                                                      [39:32] == x, Not Used
                                                      [31:27] == RSL_ID
                                                      [12:2]  == RSL Register Offset
                                                      [1:0]   == x, Not Used
<1:0>   NS       RAZ      NS          NS        Reserved                                               

Notes:
Even though address bit [2] can be set, it should always be kept to '0'.
----------------------------------------------------------------------------------------------------
===

 *
 *                  NPEI_WIN_RD_ADDR = NPEI Window Read Address Register
 *
 * The address to be read when the NPEI_WIN_RD_DATA register is read.
 *

     ==============================================================
     NPEI_WIN_RD_ADDR Type=PEXP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 
<63:51> NS       RAZ      NS          NS        Reserved                                               
<50:49> LD_CMD   R/W      0x0         NS        The load command sent wit hthe read.                   
                                                 0x0 == Load 8-bytes, 0x1 == Load 4-bytes,
                                                 0x2 == Load 2-bytes, 0x3 == Load 1-bytes,
<48>    IOBIT    RAZ      0x0         0x0       A 1 or 0 can be written here but this will always      
                                                 read as '0'.
<47:0>  RD_ADDR  R/W      0x0         NS        The address to be read from. Whenever the LSB of       
                                                 this register is written, the Read Operation will
                                                 take place.
                                                 [47:40] = NCB_ID
                                                 [39:0]  = Address
                                                 When [47:43] == NPI & [42:0] == 0 bits [39:0] are:
                                                      [39:32] == x, Not Used
                                                      [31:27] == RSL_ID
                                                      [12:0]  == RSL Register Offset
----------------------------------------------------------------------------------------------------
===

 *
 *                  NPEI_WIN_WR_DATA = NPEI Window Write Data Register
 *
 * Contains the data to write to the address located in the NPEI_WIN_WR_ADDR Register.
 * Writing the least-significant-byte of this register will cause a write operation to take place.
 *
 *

     ==============================================================
     NPEI_WIN_WR_DATA Type=PEXP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 
<63:0>  WR_DATA  R/W      0x0         NS        The data to be written. Whenever the LSB of this       
                                                 register is written, the Window Write will take
                                                 place.
----------------------------------------------------------------------------------------------------
===

 *
 *                  NPEI_WIN_WR_MASK = NPEI Window Write Mask Register
 *
 * Contains the mask for the data in the NPEI_WIN_WR_DATA Register.
 *

     ==============================================================
     NPEI_WIN_WR_MASK Type=PEXP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 
<63:8>  NS       RAZ      NS          NS        Reserved                                               
<7:0>   WR_MASK  R/W      0x0         0x0       The data to be written. When a bit is '0'              
                                                 the corresponding byte will be written.
----------------------------------------------------------------------------------------------------
===

 *
 *                  NPEI_WIN_RD_DATA = NPEI Window Read Data Register
 *
 * Reading this register causes a window read operation to take place. Address read is taht contained in the NPEI_WIN_RD_ADDR
 * register.
 *

     ==============================================================
     NPEI_WIN_RD_DATA Type=PEXP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 
<63:0>  RD_DATA  RO       0x0         NS        The read data.                                     |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  NPEI_CTL_PORT0 = NPEI's Control Port 0
 *
 * Contains control for access for Port0
 *

     ==============================================================
     NPEI_CTL_PORT0 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     WAIT_COM R/W      0           0         When set '1' casues the NPI to wait for a commit   |   
                                                 from the L2C before sending additional stores to   |
                                                 the L2C from the PCIe.                             |
                                                 Most applications will not notice a difference, so |
                                                 should not set this bit. Setting the bit is more   |
                                                 conservative on ordering, lower performance        |
<1>     BAR2_CAX R/W      0           0         Value will be XORed with pcie-address[38] to       |   
                                                 determine the L2 cache attribute.                  |
                                                 Not cached in L2 if XOR result is 1                |
<3:2>   BAR2_ESX R/W      0           NS        Value will be XORed with pci-address[37:36] to     |   
                                                 determine the endian swap mode.                    |
<4>     BAR2_ENB R/W      0           1         When set '1' BAR2 is enable and will respond when  |   
                                                 clear '0' BAR2 access will cause UR responses.     |
<5>     PTLP_RO  R/W      0           1         Relaxed ordering enable for Posted TLPS.           |   
<6>     RSVD_6   R/W      0           0         Reserved.                                          |   
<7>     CTLP_RO  R/W      0           1         Relaxed ordering enable for Completion TLPS.       |   
<9:8>   INTA_MAP R/W      0           0         Maps INTA to INTA(00), INTB(01), INTC(10) or       |   
                                                 INTD (11).                                         |
<11:10> INTB_MAP R/W      1           1         Maps INTB to INTA(00), INTB(01), INTC(10) or       |   
                                                 INTD (11).                                         |
<13:12> INTC_MAP R/W      2           2         Maps INTC to INTA(00), INTB(01), INTC(10) or       |   
                                                 INTD (11).                                         |
<15:14> INTD_MAP R/W      3           3         Maps INTD to INTA(00), INTB(01), INTC(10) or       |   
                                                 INTD (11).                                         |
<16>    INTA     RO       1           1         When '0' Inta wire asserted. Before mapping.       |   
<17>    INTB     RO       1           1         When '0' Intb wire asserted. Before mapping.       |   
<18>    INTC     RO       1           1         When '0' Intc wire asserted. Before mapping.       |   
<19>    INTD     RO       1           1         When '0' Intd wire asserted. Before mapping.       |   
<20>    WAITL_COM R/W     0           NS        When set '1' casues the NPI to wait for a commit   |   
                                                 from the L2C before sending additional completions |
                                                 to the L2C from the PCIe.                          |
                                                 Set this for more conservative behavior. Clear     |
                                                 this for more aggressive, higher-performance       |
                                                 behavior                                           |
<63:21> NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  NPEI_CTL_PORT1 = NPEI's Control Port1
 *
 * Contains control for access for Port1
 *

     ==============================================================
     NPEI_CTL_PORT1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     WAIT_COM R/W      0           0         When set '1' casues the NPI to wait for a commit   |   
                                                 from the L2C before sending additional stores to   |
                                                 the L2C from the PCIe.                             |
                                                 Most applications will not notice a difference, so |
                                                 should not set this bit. Setting the bit is more   |
                                                 conservative on ordering, lower performance        |
<1>     BAR2_CAX R/W      0           0         Value will be XORed with pcie-address[38] to       |   
                                                 determine the L2 cache attribute.                  |
                                                 Not cached in L2 if XOR result is 1                |
<3:2>   BAR2_ESX R/W      0           NS        Value will be XORed with pci-address[37:36] to     |   
                                                 determine the endian swap mode.                    |
<4>     BAR2_ENB R/W      0           1         When set '1' BAR2 is enable and will respond when  |   
                                                 clear '0' BAR2 access will cause UR responses.     |
<5>     PTLP_RO  R/W      0           1         Relaxed ordering enable for Posted TLPS.           |   
<6>     RSVD_6   R/W      0           0         Reserved.                                          |   
<7>     CTLP_RO  R/W      0           1         Relaxed ordering enable for Completion TLPS.       |   
<9:8>   INTA_MAP R/W      0           0         Maps INTA to INTA(00), INTB(01), INTC(10) or       |   
                                                 INTD (11).                                         |
<11:10> INTB_MAP R/W      1           1         Maps INTB to INTA(00), INTB(01), INTC(10) or       |   
                                                 INTD (11).                                         |
<13:12> INTC_MAP R/W      2           2         Maps INTC to INTA(00), INTB(01), INTC(10) or       |   
                                                 INTD (11).                                         |
<15:14> INTD_MAP R/W      3           3         Maps INTD to INTA(00), INTB(01), INTC(10) or       |   
                                                 INTD (11).                                         |
<16>    INTA     RO       1           1         When '0' Inta wire asserted. Before mapping.       |   
<17>    INTB     RO       1           1         When '0' Intv wire asserted. Before mapping.       |   
<18>    INTC     RO       1           1         When '0' Intc wire asserted. Before mapping.       |   
<19>    INTD     RO       1           1         When '0' Intd wire asserted. Before mapping.       |   
<20>    WAITL_COM R/W     0           NS        When set '1' casues the NPI to wait for a commit   |   
                                                 from the L2C before sending additional completions |
                                                 to the L2C from the PCIe.                          |
                                                 Set this for more conservative behavior. Clear     |
                                                 this for more aggressive, higher-performance       |
<63:21> NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  NPEI_SCRATCH_1 = NPEI's Scratch 1 
 *
 * A general purpose 64 bit register for SW use.
 *

     ==============================================================
     NPEI_SCRATCH_1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  DATA     R/W      0           NS        The value in this register is totaly SW dependent. |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  NPEI_MEM_ACCESS_SUBID@ = NPEI Memory Access Subid@ Register
 *
 * Contains address index and control bits for access to memory from Core PPs.
 * 

     ==============================================================
     NPEI_MEM_ACCESS_SUBID(12..27) Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 
<63:42> NS       RAZ      NS          NS        Reserved                                           |   
<41>    ZERO     R/W      0x0         0         Causes all byte reads to be zero length reads.     |   
                                                 Returns to the EXEC a zero for all read data.      |
<40:39> PORT     R/W      0x0         NS        Port the request is sent to.                       |   
<38>    NMERGE   R/W      0x0         0         No merging is allowed in this window.              |   
<37:36> ESR      R/W      0x0         NS        Endian-swap for Reads.                             |   
<35:34> ESW      R/W      0x0         NS        Endian-swap for Writes.                            |   
<33>    NSR      R/W      0x0         NS        No Snoop for Reads.                                |   
<32>    NSW      R/W      0x0         NS        No Snoop for Writes.                               |   
<31>    ROR      R/W      0x0         NS        Relaxed Ordering for Reads.                        |   
<30>    ROW      R/W      0x0         NS        Relaxed Ordering for Writes.                       |   
<29:0>  BA       R/W      0x0         NS        PCIe Adddress Bits <63:34>.                        |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  NPEI_WINDOW_CTL = NPEI's Window Control
 *
 * The name of this register is misleading. The timeout value is used for BAR0 access from PCIE0 and PCIE1.
 * Any access to the regigisters on the RML will timeout as 0xFFFF clock cycle. At time of timeout the next
 * RML access will start, and interrupt will be set, and in the case of reads no data will be returned.
 *
 * The value of this register should be set to a minimum of 0x200000 to ensure that a timeout to an RML register
 * occurs on the RML 0xFFFF timer before the timeout for a BAR0 access from the PCIE#.
 * 

     ==============================================================
     NPEI_WINDOW_CTL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  TIME     R/W      0x0         0x200000  Time to wait in core clocks to wait for a          |   
                                                 BAR0 access to completeon the NCB                  |
                                                 before timing out. A value of 0 will cause no      |
                                                 timeouts. A minimum value of 0x200000 should be    |
                                                 used when this register is not set to 0x0.         |
<63:32> NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  NPEI_DMA_CONTROL = DMA Control Register
 *
 * Controls operation of the DMA IN/OUT.
 *

     ==============================================================
     NPEI_DMA_CONTROL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>  CSIZE    R/W      0x0         NS        The size in words of the DMA Instruction Chunk.        
                                                 This value should only be written once. After
                                                 writing this value a new value will not be
                                                 recognized until the end of the DMA I-Chunk is
                                                 reached.
<14>    O_MODE   R/W      0x0         1         Select PCI_POINTER MODE to be used.                    
                                                 '1' use pointer values for address and register
                                                 values for RO, ES, and NS, '0' use register
                                                 values for address and pointer values for
                                                 RO, ES, and NS.
<16:15> O_ES     R/W      0x0         NS        Endian Swap Mode for DMA.                              
<17>    O_NS     R/W      0x0         NS        Nosnoop For DMA.                                       
<18>    O_RO     R/W      0x0         NS        Relaxed Ordering Mode for DMA.                         
<19>    O_ADD1   R/W      0x0         1         When set '1' 1 will be added to the DMA counters,      
                                                 if '0' then the number of bytes in the dma transfer
                                                 will be added to the count register.
<22:20> FPA_QUE  R/W      0x0         NS        The FPA queue that the instruction-chunk page will     
                                                 be returned to when used.
<31:23> DWB_ICHK R/W      0x0         NS        When Instruction Chunks for DMA operations are freed   
                                                 this value is used for the DWB field of the
                                                 operation.
<32>    DWB_DENB R/W      0x0         1         When set '1' the NPEI will send a value in the DWB     
                                                 field for a free page operation for the memory
                                                 that contained the data.
<33>    B0_LEND  R/W      0x0         0         When set '1' and the NPEI is in the mode to write      
                                                 0 to L2C memory when a DMA is done, the address
                                                 to be written to will be treated as a Little
                                                 Endian address.
<34>    DMA0_ENB R/W      0x0         1         DMA# enable. Enables the operation of the DMA          
                                                 engine. After being enabled a DMA engine should not
                                                 be dis-abled while processing instructions.
<35>    DMA1_ENB R/W      0x0         1         DMA# enable. Enables the operation of the DMA          
                                                 engine. After being enabled a DMA engine should not
                                                 be dis-abled while processing instructions.
<36>    DMA2_ENB R/W      0x0         1         DMA# enable. Enables the operation of the DMA          
                                                 engine. After being enabled a DMA engine should not
                                                 be dis-abled while processing instructions.
<37>    DMA3_ENB R/W      0x0         1         DMA# enable. Enables the operation of the DMA          
                                                 engine. After being enabled a DMA engine should not
                                                 be dis-abled while processing instructions.
<38>    DMA4_ENB R/W      0x0         1         DMA# enable. Enables the operation of the DMA          
                                                 engine. After being enabled a DMA engine should not
                                                 be dis-abled while processing instructions.
<63:39> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_DMA_DBELL[0..4] = DMA Door Bell
*
* The door bell register for DMA[0..4] queue.
*

     ==============================================================
     NPEI_DMA(0..4)_DBELL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>  DBELL    R/W      0x0         NS        The value written to this register is added to the     
                                                 number of 8byte words to be read and processes for
                                                 the low priority dma queue.
<31:16> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_DMA[0..4]_IBUFF_SADDR = DMA Instruction Buffer Starting Address
*
* The address to start reading Instructions from for DMA[0..4].
*

     ==============================================================
     NPEI_DMA(0..4)_IBUFF_SADDR Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<6:0>   NS       RAZ      NS          NS        Reserved                                           |   
<35:7>  SADDR    R/W      0x0         NS        The 128 byte aligned starting address to read the  |   
                                                 first instruction. SADDR is address bit 35:7 of the|
                                                 first instructions address.                        |
<63:36> NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_DMA[0..4]_COUNTS = DMA Instruction Counts
*
* Values for determing the number of instructions for DMA[0..4] in the NPEI.
*

     ==============================================================
     NPEI_DMA(0..4)_COUNTS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  DBELL    RO       0x0         0         Number of available words of Instructions to read.     
<38:32> FCNT     RO       0x0         0         Number of words in the Instruction FIFO.               
<63:39> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_DMA[0..4]_NADDR = DMA Next Ichunk Address
*
* Place NPEI will read the next Ichunk data from. This is valid when state is 0
*

     ==============================================================
     NPEI_DMA(0..4)_NADDR Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>  ADDR     RO       0x0         NS        The next L2C address to read DMA# instructions         
                                                 from.
<63:36> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_MEM_ACCESS_CTL = NPEI's Memory Access Control
*
* Contains control for access to the PCIe address space.
*

     ==============================================================
     NPEI_MEM_ACCESS_CTL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<9:0>   TIMER    R/W      0           50        When the NPEI starts a PP to PCIe write it waits       
                                                 no longer than the value of TIMER in eclks to
                                                 merge additional writes from the PPs into 1
                                                 large write. The values for this field is 1 to
                                                 1024 where a value of '0' is treated as 1024.
<13:10> MAX_WORD R/W      0           0         The maximum number of words to merge into a single     
                                                 write operation from the PPs to the PCIe. Legal 
                                                 values are 1 to 16, where a '0' is treated as 16.
<63:14> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  NPEI_DBG_SELECT = Debug Select Register
 *
 * Contains the debug select value last written to the RSLs.
 *

     ==============================================================
     NPEI_DBG_SELECT Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>  DBG_SEL  R/W      0           NS        When this register is written its value is sent to     
                                                 all RSLs.
<63:16> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_DBG_DATA = NPEI Debug Data Register
*
* Value returned on the debug-data lines from the RSLs
*

     ==============================================================
     NPEI_DBG_DATA Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<16:0>  DATA      RO       0x0         NS        Value on the debug data lines.                         
<17>    DSEL_EXT  R/W      1           0         Allows changes in the external pins to set the         
                                                  debug select value.
<22:18>  C_MUL     RO       NS          NS        PLL_MUL pins sampled at DCOK assertion                 
                                                  Core frequency = 50MHz*C_MUL
<24:23>  QLM1_SPD  RO       NS          NS        Sets the QLM1 frequency                                
                                                  0=1.25 Gbaud
                                                  1=2.5 Gbaud
                                                  2=3.125 Gbaud
                                                  3=3.75 Gbaud
<26:25>  QLM3_SPD  RO       NS          NS        Sets the QLM3 frequency                                
                                                  0=1.25 Gbaud
                                                  1=2.5 Gbaud
                                                  2=3.125 Gbaud
                                                  3=3.75 Gbaud
<27> QLM0_REV_LANES RO      NS          NS        Lane reversal for PCIe port 0                          
<28> QLM2_REV_LANES RO      NS          NS        Lane reversal for PCIe port 1                          
<63:29>  NS        RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_RSL_INT_BLOCKS = NPEI RSL Interrupt Blocks Register
*
* Reading this register will return a vector with a bit set '1' for a corresponding RSL block
* that presently has an interrupt pending. The Field Description below supplies the name of the
* register that software should read to find out why that intterupt bit is set.
*
*

     ==============================================================
     NPEI_RSL_INT_BLOCKS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     MIO      RO       0x0         0         MIO_BOOT_ERR                                           
<1>     GMX0     RO       0x0         0         GMX0_RX*_INT_REG & GMX0_TX_INT_REG                     
<2>     GMX1     RO       0x0         0         GMX1_RX*_INT_REG & GMX1_TX_INT_REG                     
<3>     NPEI     RO       0x0         0         NPEI_INT_SUM                                           
<4>     KEY      RO       0x0         0         KEY_INT_SUM                                            
<5>     FPA      RO       0x0         0         FPA_INT_SUM                                            
<6>     DFA      RAZ      0x0         0         Always reads as zero                                   
<7>     ZIP      RO       0x0         0         ZIP_ERROR                                              
<8>     NS       RAZ      0x0         0         Always reads as zero (RNG/RNM)                         
<9>     IPD      RO       0x0         0         IPD_INT_SUM                                            
<10>    PKO      RO       0x0         0         PKO_REG_ERROR                                          
<11>    TIM      RO       0x0         0         TIM_REG_ERROR                                          
<12>    POW      RO       0x0         0         POW_ECC_ERR                                            
<13>    USB      RO       0x0         0         USBN0_INT_SUM                                          
<14>    RAD      RO       0x0         0         RAD_REG_ERROR                                          
<15>    USB1     RAZ      0x0         0         Always reads as zero                                   
<16>    L2C      RO       0x0         0         L2C_INT_STAT                                           
<17>    LMC0     RO       0x0         0         LMC0_MEM_CFG0                                          
<18>    SPX0     RAZ      0x0         0         Always reads as zero                                   
<19>    SPX1     RAZ      0x0         0         Always reads as zero                                   
<20>    PIP      RO       0x0         0         PIP_INT_REG.                                           
<21>    NS       RAZ      0x0         0         Always reads as zero (TRA)                             
<22>    ASXPCS0  RO       0x0         0         PCS0_INT*_REG                                          
<23>    ASXPCS1  RO       0x0         0         PCS1_INT*_REG                                          
<24>    NS       RAZ      0x0         0         Always reads as zero (PNI)                             
<25>    NS       RAZ      0x0         0         Always reads as zero (PESC0)                           
<26>    NS       RAZ      0x0         0         Always reads as zero (PESC1)                           
<27>    NS       RAZ      0x0         0         Always reads as zero                                   
<28>    AGL      RO       0x0         0         AGL_GMX_RX0_INT_REG & AGL_GMX_TX_INT_REG               
<29>    LMC1     RO       0x0         0         LMC1_MEM_CFG0                                          
<30>    IOB      RO       0x0         0         IOB_INT_SUM                                            
<31>    NS       RAZ      0x0         0         Always reads as zero                                   
<63:32> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_INTERRUPT_SUM = NPI Interrupt Summary Register
*
* Set when an interrupt condition occurs, write '1' to clear.
*

     ==============================================================
     NPEI_INT_SUM Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     RML_RTO  R/W1C    0x0         0         RML read did not return data in 0xffff core clocks.|   
<1>     RML_WTO  R/W1C    0x0         0         RML write did not get commit in 0xffff core clocks.|   
<2>     BAR0_TO  R/W1C    0x0         0         BAR0 R/W to a NCB device did not receive           |   
                                                 read-data/commit in 0xffff core clocks.            |
<3>     IOB2BIG  R/W1C    0x0         0         A requested IOBDMA is to large.                    |   
<4>     DMA0DBO  R/W1C    0x0         0         DMA0 doorbell overflow.                            |   
                                                 Bit[32] of the doorbell count was set.             |
<5>     DMA1DBO  R/W1C    0x0         0         DMA1 doorbell overflow.                            |   
                                                 Bit[32] of the doorbell count was set.             |
<6>     DMA2DBO  R/W1C    0x0         0         DMA2 doorbell overflow.                            |   
                                                 Bit[32] of the doorbell count was set.             |
<7>     DMA3DBO  R/W1C    0x0         0         DMA3 doorbell overflow.                            |   
                                                 Bit[32] of the doorbell count was set.             |
<8>     DMA4DBO  R/W1C    0x0         0         DMA4 doorbell overflow.                            |   
                                                 Bit[32] of the doorbell count was set.             |
<9>     DMA0FI   R/W1C    0x0         0         DMA0 set Forced Interrupt.                         |   
<10>    DMA1FI   R/W1C    0x0         0         DMA0 set Forced Interrupt.                         |   
<11>    DCNT0    R/W1C    0x0         0         This bit indicates that NPEI_DMA_CNTS[DMA0] was/is |   
                                                 greater than NPEI_DMA0_INT_LEVEL[CNT].             |
<12>    DCNT1    R/W1C    0x0         0         This bit indicates that NPEI_DMA_CNTS[DMA1] was/is |   
                                                 greater than NPEI_DMA1_INT_LEVEL[CNT].             |
<13>    DTIME0   R/W1C    0x0         0         Whenever NPEI_DMA_CNTS[DMA0] is not 0, the         |    
                                                 DMA_CNT0 timer increments every core clock. When   |
                                                 DMA_CNT0 timer exceeds NPEI_DMA0_INT_LEVEL[TIME],  |
                                                 this bit is set. Writing a '1' to this bit also    |
                                                 clears the DMA_CNT0 timer.                         |
<14>    DTIME1   R/W1C    0x0         0         Whenever NPEI_DMA_CNTS[DMA1] is not 0, the         |    
                                                 DMA_CNT1 timer increments every core clock. When   |
                                                 DMA_CNT1 timer exceeds NPEI_DMA1_INT_LEVEL[TIME],  |
                                                 this bit is set. Writing a '1' to this bit also    |
                                                 clears the DMA_CNT1 timer.                         |
<18:15> NS       RAZ      0           0         Reserved. MBZ.                                     |   
<19>    C0_AERI  RO       0x0         0         Advanced Error Reporting Interrupt, RC Mode Only.  |   
                                                 Pcie Core 0 (cfg_aer_rc_err_int).                  |
<20>    RSVD_20  R/W1C    0x0         0         Reserved.                                          |   
<21>    C0_SE    R/W1C    0x0         0         System Error, RC Mode Only.                        |   
                                                 Pcie Core 0. (cfg_sys_err_rc)                      |
<22>    RSVD_22  R/W1C    0x0         0         Reserved.                                          |   
<23>    C0_WAKE  R/W1C    0x0         0         Wake up from Power Management Unit.                |   
                                                 Pcie Core 0. (wake_n)                              |
                                                 Octeon will never generate this interrupt.         |
<24>    C0_PMEI  RO       0x0         0         PME Interrupt.                                     |   
                                                 Pcie Core 0. (cfg_pme_int)                         |
<25>    C0_HPINT RO       0x0         0         Hot-Plug Interrupt.                                |   
                                                 Pcie Core 0 (hp_int).                              |
                                                 This interrupt will only be generated when         |
                                                 PCIERC0_CFG034[DLLS_C] is generated. Hot plug is   |
                                                 not supported.                                     |
<26>    C1_AERI  RO       0x0         0         Advanced Error Reporting Interrupt, RC Mode Only.  |   
                                                 Pcie Core 1.                                       |
<27>    RSVD_27  R/W1C    0x0         0         Reserved                                           |   
<28>    C1_SE    R/W1C    0x0         0         System Error, RC Mode Only.                        |   
                                                 Pcie Core 1. (cfg_sys_err_rc)                      |
<29>    RSVD_29  R/W1C    0x0         0         Reserved.                                          |   
<30>    C1_WAKE  R/W1C    0x0         0         Wake up from Power Management Unit.                |   
                                                 Pcie Core 1. (wake_n)                              |
                                                 Octeon will never generate this interrupt.         |
<31>    C1_PMEI  RO       0x0         0         PME Interrupt.                                     |   
                                                 Pcie Core 1. (cfg_pme_int)                         |
<32>    C1_HPINT RO       0x0         0         Hot-Plug Interrupt.                                |   
                                                 Pcie Core 1 (hp_int).                              |
                                                 This interrupt will only be generated when         |
                                                 PCIERC1_CFG034[DLLS_C] is generated. Hot plug is   |
                                                 not supported.                                     |
<33>    C0_UP_B0 R/W1C    0x0         0         Received Unsupported P-TLP for Bar0.               |   
                                                 Core 0.                                            |
<34>    C0_UP_B1 R/W1C    0x0         0         Received Unsupported P-TLP for Bar1.               |   
                                                 Core 0.                                            |
<35>    C0_UP_B2 R/W1C    0x0         0         Received Unsupported P-TLP for Bar2.               |   
                                                 Core 0.                                            |
<36>    C0_UP_WI R/W1C    0x0         0         Received Unsupported P-TLP for Window Register.    |   
                                                 Core 0.                                            |
<37>    C0_UP_BX R/W1C    0x0         0         Received Unsupported P-TLP for unknown Bar.        |   
                                                 Core 0.                                            |
<38>    C0_UN_B0 R/W1C    0x0         0         Received Unsupported N-TLP for Bar0.               |   
                                                 Core 0.                                            |
<39>    C0_UN_B1 R/W1C    0x0         0         Received Unsupported N-TLP for Bar1.               |   
                                                 Core 0.                                            |
<40>    C0_UN_B2 R/W1C    0x0         0         Received Unsupported N-TLP for Bar2.               |   
                                                 Core 0.                                            |
<41>    C0_UN_WI R/W1C    0x0         0         Received Unsupported N-TLP for Window Register.    |   
                                                 Core 0.                                            |
<42>    C0_UN_BX R/W1C    0x0         0         Received Unsupported N-TLP for unknown Bar.        |   
                                                 Core 0.                                            |
<43>    C1_UP_B0 R/W1C    0x0         0         Received Unsupported P-TLP for Bar0.               |   
                                                 Core 1.                                            |
<44>    C1_UP_B1 R/W1C    0x0         0         Received Unsupported P-TLP for Bar1.               |   
                                                 Core 1.                                            |
<45>    C1_UP_B2 R/W1C    0x0         0         Received Unsupported P-TLP for Bar2.               |   
                                                 Core 1.                                            |
<46>    C1_UP_WI R/W1C    0x0         0         Received Unsupported P-TLP for Window Register.    |   
                                                 Core 1.                                            |
<47>    C1_UP_BX R/W1C    0x0         0         Received Unsupported P-TLP for unknown Bar.        |   
                                                 Core 1.                                            |
<48>    C1_UN_B0 R/W1C    0x0         0         Received Unsupported N-TLP for Bar0.               |   
                                                 Core 1.                                            |
<49>    C1_UN_B1 R/W1C    0x0         0         Received Unsupported N-TLP for Bar1.               |   
                                                 Core 1.                                            |
<50>    C1_UN_B2 R/W1C    0x0         0         Received Unsupported N-TLP for Bar2.               |   
                                                 Core 1.                                            |
<51>    C1_UN_WI R/W1C    0x0         0         Received Unsupported N-TLP for Window Register.    |   
                                                 Core 1.                                            |
<52>    C1_UN_BX R/W1C    0x0         0         Received Unsupported N-TLP for unknown Bar.        |   
                                                 Core 1.                                            |
<53>    C0_UN_WF R/W1C    0x0         0         Received Unsupported N-TLP for filtered window     |   
                                                 register. Core0.                                   |
<54>    C1_UN_WF R/W1C    0x0         0         Received Unsupported N-TLP for filtered window     |   
                                                 register. Core1.                                   |
<55>    C0_UP_WF R/W1C    0x0         0         Received Unsupported P-TLP for filtered window     |   
                                                 register. Core0.                                   |
<56>    C1_UP_WF R/W1C    0x0         0         Received Unsupported P-TLP for filtered window     |   
                                                 register. Core1.                                   |
<57>    C0_EXC   RO       0x0         0         Set when the PESC0_DBG_INFO register has a bit     |   
                                                 set and its cooresponding PESC0_DBG_INFO_EN bit    |
                                                 is set.                                            |
<58>    C1_EXC   RO       0x0         0         Set when the PESC1_DBG_INFO register has a bit     |   
                                                 set and its cooresponding PESC1_DBG_INFO_EN bit    |
                                                 is set.                                            |
<59>    C0_LDWN  R/W1C    0x0         0         Reset request due to link0 down status.            |   
<60>    C1_LDWN  R/W1C    0x0         0         Reset request due to link1 down status.            |   
<62:61> RSVD     RAZ      0x0         0         Reserved                                           |   
<63>    MIO_INTA RO       0x0         0         Interrupt from MIO.                                |   
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_INTERRUPT_ENB = NPI's Interrupt Enable Register
*
* Used to allow the generation of interrupts (MSI/INTA) to the PCIe CoresUsed to enable the various interrupting conditions of NPI
*

     ==============================================================
     NPEI_INT_ENB Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     RML_RTO  R/W      0x0         1         Enables NPEI_INT_SUM[0] to generate an             |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<1>     RML_WTO  R/W      0x0         1         Enables NPEI_INT_SUM[1] to generate an             |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<2>     BAR0_TO  R/W      0x0         1         Enables NPEI_INT_SUM[2] to generate an             |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<3>     IOB2BIG  R/W      0x0         1         Enables NPEI_INT_SUM[3] to generate an             |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<4>     DMA0DBO  R/W      0x0         1         Enables NPEI_INT_SUM[4] to generate an             |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<5>     DMA1DBO  R/W      0x0         1         Enables NPEI_INT_SUM[5] to generate an             |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<6>     DMA2DBO  R/W      0x0         1         Enables NPEI_INT_SUM[6] to generate an             |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<7>     DMA3DBO  R/W      0x0         1         Enables NPEI_INT_SUM[7] to generate an             |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<8>     DMA4DBO  R/W      0x0         1         Enables NPEI_INT_SUM[8] to generate an             |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<9>     DMA0FI   R/W      0x0         1         Enables NPEI_INT_SUM[9] to generate an             |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<10>    DMA1FI   R/W      0x0         1         Enables NPEI_INT_SUM[10] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<11>    DCNT0    R/W      0x0         1         Enables NPEI_INT_SUM[11] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<12>    DCNT1    R/W      0x0         1         Enables NPEI_INT_SUM[12] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<13>    DTIME0   R/W      0x0         1         Enables NPEI_INT_SUM[13] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<14>    DTIME1   R/W      0x0         1         Enables NPEI_INT_SUM[14] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<15>    PSLDBOF  R/W      0x0         1         Enables NPEI_INT_SUM[15] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<16>    PIDBOF   R/W      0x0         1         Enables NPEI_INT_SUM[16] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<17>    PCNT     R/W      0x0         1         Enables NPEI_INT_SUM[17] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<18>    PTIME    R/W      0x0         1         Enables NPEI_INT_SUM[18] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<19>    C0_AERI  R/W      0x0         1         Enables NPEI_INT_SUM[19] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<20>    RSVD_20  R/W      0x0         1         Enables NPEI_INT_SUM[20] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<21>    C0_SE    R/W      0x0         1         Enables NPEI_INT_SUM[21] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<22>    RSVD_22  R/W      0x0         1         Enables NPEI_INT_SUM[22] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<23>    C0_WAKE  R/W      0x0         1         Enables NPEI_INT_SUM[23] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<24>    C0_PMEI  R/W      0x0         1         Enables NPEI_INT_SUM[24] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<25>    C0_HPINT R/W      0x0         1         Enables NPEI_INT_SUM[25] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<26>    C1_AERI  R/W      0x0         1         Enables NPEI_INT_SUM[26] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<27>    RSVD_27  R/W      0x0         1         Enables NPEI_INT_SUM[27] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<28>    C1_SE    R/W      0x0         1         Enables NPEI_INT_SUM[28] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<29>    RSVD_29  R/W      0x0         1         Enables NPEI_INT_SUM[29] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<30>    C1_WAKE  R/W      0x0         1         Enables NPEI_INT_SUM[30] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<31>    C1_PMEI  R/W      0x0         1         Enables NPEI_INT_SUM[31] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<32>    C1_HPINT R/W      0x0         1         Enables NPEI_INT_SUM[32] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<33>    C0_UP_B0 R/W      0x0         1         Enables NPEI_INT_SUM[33] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<34>    C0_UP_B1 R/W      0x0         1         Enables NPEI_INT_SUM[34] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<35>    C0_UP_B2 R/W      0x0         1         Enables NPEI_INT_SUM[35] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<36>    C0_UP_WI R/W      0x0         1         Enables NPEI_INT_SUM[36] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<37>    C0_UP_BX R/W      0x0         1         Enables NPEI_INT_SUM[37] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<38>    C0_UN_B0 R/W      0x0         1         Enables NPEI_INT_SUM[38] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<39>    C0_UN_B1 R/W      0x0         1         Enables NPEI_INT_SUM[39] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<40>    C0_UN_B2 R/W      0x0         1         Enables NPEI_INT_SUM[40] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<41>    C0_UN_WI R/W      0x0         1         Enables NPEI_INT_SUM[41] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<42>    C0_UN_BX R/W      0x0         1         Enables NPEI_INT_SUM[42] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<43>    C1_UP_B0 R/W      0x0         1         Enables NPEI_INT_SUM[43] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<44>    C1_UP_B1 R/W      0x0         1         Enables NPEI_INT_SUM[44] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<45>    C1_UP_B2 R/W      0x0         1         Enables NPEI_INT_SUM[45] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<46>    C1_UP_WI R/W      0x0         1         Enables NPEI_INT_SUM[46] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<47>    C1_UP_BX R/W      0x0         1         Enables NPEI_INT_SUM[47] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<48>    C1_UN_B0 R/W      0x0         1         Enables NPEI_INT_SUM[48] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<49>    C1_UN_B1 R/W      0x0         1         Enables NPEI_INT_SUM[49] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<50>    C1_UN_B2 R/W      0x0         1         Enables NPEI_INT_SUM[50] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<51>    C1_UN_WI R/W      0x0         1         Enables NPEI_INT_SUM[51] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<52>    C1_UN_BX R/W      0x0         1         Enables NPEI_INT_SUM[52] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<53>    C0_UN_WF R/W      0x0         1         Enables NPEI_INT_SUM[53] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<54>    C1_UN_WF R/W      0x0         1         Enables NPEI_INT_SUM[54] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<55>    C0_UP_WF R/W      0x0         1         Enables NPEI_INT_SUM[55] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<56>    C1_UP_WF R/W      0x0         1         Enables NPEI_INT_SUM[56] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<57>    C0_EXC   R/W      0x0         1         Enables NPEI_INT_SUM[57] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<58>    C1_EXC   R/W      0x0         1         Enables NPEI_INT_SUM[58] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<59>    C0_LDWN  R/W      0x0         1         Enables NPEI_INT_SUM[59] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<60>    C1_LDWN  R/W      0x0         1         Enables NPEI_INT_SUM[60] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
<62:61> RSVD     R/W      0x0         NS        Reserved                                           |    
<63>    MIO_INTA R/W      0x0         1         Enables NPEI_INT_SUM[63] to generate an            |    
                                                 interrupt to the PCIE core for MSI/inta.           |
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_CTL_STATUS = NPEI Control Status Register
*
* Contains control and status for NPEI. Writes to this register are not oSrdered with writes/reads to the PCIe Memory space.
* To ensure that a write has completed the user must read the register before making an access(i.e. PCIe memory space)
* that requires the value of this register to be updated.
*

     ==============================================================
     NPEI_CTL_STATUS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   CHIP_REV  RO      NS          NS        The chip revision.                                 |   
<8>     HOST_MODE RO      NS          NS        Host mode                                          |   
<12:9>  PKT_BP    R/W     0xF         0xF       Unused                                             |   
<13>    ARB       R/W     0x0         0x1       PCIe switch arbitration mode. '0' == fixed priority|   
                                                 NPEI, PCIe0, then PCIe1. '1' == round robin.       |
<14>    LNK_RST   R/W1C   0x0         0x0       Set when PCIe Core 0 request a link reset due to   |   
                                                 link down state. This bit is only reset on raw     |
                                                 reset so it can be read for state to determine if  |
                                                 a reset occured. Bit is cleared when a '1' is      |
                                                 written to this field.                             |
<63:15> NS        RAZ     NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  NPEI_BIST_STATUS = NPI's BIST Status Register
 *
 * Results from BIST runs of NPEI's memories.
 *

     ==============================================================
     NPEI_BIST_STATUS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     NCB_CMD  RO       0x0         0         BIST Status for NCB Outbound Commands                  
<1>     MSI      RO       0x0         0         BIST Status for MSI Memory Map                         
<2>     DIF4     RO       0x0         0         BIST Status for DMA Instr0                             
<3>     DIF3     RO       0x0         0         BIST Status for DMA Instr0                             
<4>     DIF2     RO       0x0         0         BIST Status for DMA Instr0                             
<5>     DIF1     RO       0x0         0         BIST Status for DMA Instr0                             
<6>     DIF0     RO       0x0         0         BIST Status for DMA Instr0                             
<7>     CSM1     RO       0x0         0         BIST Status for CSM1                                   
<8>     CSM0     RO       0x0         0         BIST Status for CSM0                                   
<9>     P2N1_P1  RO       0x0         0         BIST Status for P2N Port1 P1                           
<10>    P2N1_P0  RO       0x0         0         BIST Status for P2N Port1 P0                           
<11>    P2N1_N   RO       0x0         0         BIST Status for P2N Port1 N                            
<12>    P2N1_C1  RO       0x0         0         BIST Status for P2N Port1 C1                           
<13>    P2N1_C0  RO       0x0         0         BIST Status for P2N Port1 C0                           
<14>    P2N0_P1  RO       0x0         0         BIST Status for P2N Port0 P1                           
<15>    P2N0_P0  RO       0x0         0         BIST Status for P2N Port0 P0                           
<16>    P2N0_N   RO       0x0         0         BIST Status for P2N Port0 N                            
<17>    P2N0_C1  RO       0x0         0         BIST Status for P2N Port0 C1                           
<18>    P2N0_C0  RO       0x0         0         BIST Status for P2N Port0 C0                           
<19>    P2N0_CO  RO       0x0         0         BIST Status for P2N Port0 C Order                      
<20>    P2N0_NO  RO       0x0         0         BIST Status for P2N Port0 N Order                      
<21>    P2N0_PO  RO       0x0         0         BIST Status for P2N Port0 P Order                      
<22>    P2N1_CO  RO       0x0         0         BIST Status for P2N Port1 C Order                      
<23>    P2N1_NO  RO       0x0         0         BIST Status for P2N Port1 N Order                      
<24>    P2N1_PO  RO       0x0         0         BIST Status for P2N Port1 P Order                      
<25>    CPL_P1   RO       0x0         0         BIST Status for CPL Port 1                             
<26>    CPL_P0   RO       0x0         0         BIST Status for CPL Port 0                             
<27>    N2P1_O   RO       0x0         0         BIST Status for N2P Port1 Data                         
<28>    N2P1_C   RO       0x0         0         BIST Status for N2P Port1 Cmd                          
<29>    N2P0_O   RO       0x0         0         BIST Status for N2P Port0 Data                         
<30>    N2P0_C   RO       0x0         0         BIST Status for N2P Port0 Cmd                          
<31>    D4_PST   RO       0x0         0         BIST Status for DMA4 Pcie Store                        
<32>    D3_PST   RO       0x0         0         BIST Status for DMA3 Pcie Store                        
<33>    D2_PST   RO       0x0         0         BIST Status for DMA2 Pcie Store                        
<34>    D1_PST   RO       0x0         0         BIST Status for DMA1 Pcie Store                        
<35>    D0_PST   RO       0x0         0         BIST Status for DMA0 Pcie Store                        
<36>    D4_MEM   RO       0x0         0         BIST Status for DMA4 Memory                            
<37>    D3_MEM   RO       0x0         0         BIST Status for DMA3 Memory                            
<38>    D2_MEM   RO       0x0         0         BIST Status for DMA2 Memory                            
<39>    D1_MEM   RO       0x0         0         BIST Status for DMA1 Memory                            
<40>    D0_MEM   RO       0x0         0         BIST Status for DMA0 Memory                            
<41>    PKT_S1   RO       0x0         0         BIST Status for PKT Slist1                             
<42>    PKT_S0   RO       0x0         0         BIST Status for PKT Slist0                             
<43>    PKT_I1   RO       0x0         0         BIST Status for PKT Instr1                             
<44>    PKT_I0   RO       0x0         0         BIST Status for PKT Instr0                             
<45>    PKT_OUT  RO       0x0         0         BIST Status for PKT Output FIFO                        
<46>    PKT_OIF  RO       0x0         0         BIST Status for PKT Output INFO FIFO                   
<47>    PKT_ODF  RO       0x0         0         BIST Status for PKT Output Data FIFO                   
<48>    PKT_SLM  RO       0x0         0         BIST Status for PKT SList MEM                          
<49>    PKT_IND  RO       0x0         0         BIST Status for PKT Instruction Done MEM               
<50>    PKT_CNTM RO       0x0         0         BIST Status for PKT Count MEM                          
<51>    PKT_IMEM RO       0x0         0         BIST Status for PKT Instruction MEM                    
<52>    PKT_POUT RO       0x0         0         BIST Status for PKT OUT Count MEM                      
<53>    PCSR_SL  RO       0x0         0         BIST Status for PKT pcsr_slist_bstatus                 
<54>    PCSR_ID  RO       0x0         0         BIST Status for PKT pcsr_in_done_bstatus               
<55>    PCSR_CNT RO       0x0         0         BIST Status for PKT pin_cnt_bstatus                    
<56>    PCSR_IM  RO       0x0         0         BIST Status for PKT pcsr_instr_mem_bstatus             
<57>    PCSR_INT RO       0x0         0         BIST Status for PKT pout_int_bstatus                   
<63:58> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_INT_INFO = NPI Interrupt Information
*
* Contains information about some of the interrupt condition that can occur in the NPEI_INTERRUPT_SUM register.
*

     ==============================================================
     NPEI_INT_INFO Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>   PSLDBOF  RO       0x0         NS        Field set when the NPEI_INTERRUPT_SUM[PSLDBOF] bit |   
                                                 is set. This field when set will not change again  |
                                                 unitl NPEI_INTERRUPT_SUM[PSLDBOF] is cleared.      |
<11:6>  PIDBOF   RO       0x0         NS        Field set when the NPEI_INTERRUPT_SUM[PIDBOF] bit  |   
                                                 is set. This field when set will not change again  |
                                                 unitl NPEI_INTERRUPT_SUM[PIDBOF] is cleared.       |
<63:12> NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_DMA0_INT_LEVEL = NPEI DMA0 Interrupt Level
*
* Thresholds for DMA count and timer interrupts for DMA0.
*

     ==============================================================
     NPEI_DMA0_INT_LEVEL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>   CNT     R/W      0x0         NS        Whenever NPEI_DMA_CNTS[DMA0] exceeds this value,   |   
                                                 NPEI_INT_SUM[DCNT0] is set.                        |
<63:32>  TIME    R/W      0x0         NS        Whenever the DMA_CNT0 timer exceeds                |   
                                                 this value, NPEI_INT_SUM[DTIME0] is set.           |
                                                 The DMA_CNT0 timer increments every core clock     |
                                                 whenever NPEI_DMA_CNTS[DMA0]!=0, and is cleared    |
                                                 when NPEI_INT_SUM[DTIME0] is written with one.     |
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_DMA1_INT_LEVEL = NPEI DMA1 Interrupt Level
*
* Thresholds for DMA count and timer interrupts for DMA1.
*

     ==============================================================
     NPEI_DMA1_INT_LEVEL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>   CNT     R/W      0x0         NS        Whenever NPEI_DMA_CNTS[DMA1] exceeds this value,   |   
                                                 NPEI_INT_SUM[DCNT1] is set.                        |
<63:32>  TIME    R/W      0x0         NS        Whenever the DMA_CNT1 timer exceeds                |   
                                                 this value, NPEI_INT_SUM[DTIME1] is set.           |
                                                 The DMA_CNT1 timer increments every core clock     |
                                                 whenever NPEI_DMA_CNTS[DMA1]!=0, and is cleared    |
                                                 when NPEI_INT_SUM[DTIME1] is written with one.     |
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_DMA_CNTS = NPEI DMA Count
*
* The DMA Count values for DMA0 and DMA1.
*

     ==============================================================
     NPEI_DMA_CNTS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>   DMA0    R/W      0x0         NS        The DMA counter 0.                                 |   
                                                 Writing this field will cause the written value to |
                                                 be subtracted from DMA0. SW should use a 4-byte    |
                                                 write to access this field so as not to change the |
                                                 value of other fields in this register.            |
                                                 HW will optionally increment this field after      |
                                                 it completes an OUTBOUND or EXTERNAL-ONLY DMA      |
                                                 instruction. These increments may cause interrupts.|
                                                 Refer to NPEI_DMA0_INT_LEVEL and                   |
                                                 NPEI_INT_SUM[DCNT0,DTIME0].                        |
<63:32>  DMA1    R/W      0x0         NS        The DMA counter 1.                                 |   
                                                 Writing this field will cause the written value to |
                                                 be subtracted from DMA1. SW should use a 4-byte    |
                                                 write to access this field so as not to change the |
                                                 value of other fields in this register.            |
                                                 HW will optionally increment this field after      |
                                                 it completes an OUTBOUND or EXTERNAL-ONLY DMA      |
                                                 instruction. These increments may cause interrupts.|
                                                 Refer to NPEI_DMA1_INT_LEVEL and                   |
                                                 NPEI_INT_SUM[DCNT1,DTIME1].                        |
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_DMA_STATE1_P1 = NPEI DMA Request and Instruction State
*
* DMA engine Debug information.
*

     ==============================================================
     NPEI_DMA_STATE1_P1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<4:0>   D4_REQST RO        0          NS        DMA engine 4 request data state                    |   
<9:5>   D3_REQST RO        0          NS        DMA engine 3 request data state                    |   
<14:10> D2_REQST RO        0          NS        DMA engine 2 request data state                    |   
<19:15> D1_REQST RO        0          NS        DMA engine 1 request data state                    |   
<24:20> D0_REQST RO        0          NS        DMA engine 0 request data state                    |   
<31:25> D4_DIFST RO        0          NS        DMA engine 4 dif instruction read state            |   
<38:32> D3_DIFST RO        0          NS        DMA engine 3 dif instruction read state            |   
<45:39> D2_DIFST RO        0          NS        DMA engine 2 dif instruction read state            |   
<52:46> D1_DIFST RO        0          NS        DMA engine 1 dif instruction read state            |   
<59:53> D0_DIFST RO        0          NS        DMA engine 0 dif instruction read state            |   
<63:60> NS       RAZ       0          0         Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_DMA_STATE2_P1 = NPEI DMA Instruction Fetch State
*
* DMA engine Debug information.
*

     ==============================================================
     NPEI_DMA_STATE2_P1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<8:0>   D4_DFFST RO        0          NS        DMA engine 4 dif instruction fetch state           |   
<17:9>  D3_DFFST RO        0          NS        DMA engine 3 dif instruction fetch state           |   
<26:18> D2_DFFST RO        0          NS        DMA engine 2 dif instruction fetch state           |   
<35:27> D1_DFFST RO        0          NS        DMA engine 1 dif instruction fetch state           |   
<44:36> D0_DFFST RO        0          NS        DMA engine 0 dif instruction fetch state           |   
<63:45> NS       RAZ       0          0         Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_DMA_STATE3_P1 = NPEI DMA DRE State
*
* DMA engine Debug information.
*

     ==============================================================
     NPEI_DMA_STATE3_P1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<14:0>  D3_DREST RO        0          NS        DMA engine 3 dre state                             |   
<29:15> D2_DREST RO        0          NS        DMA engine 2 dre state                             |   
<44:30> D1_DREST RO        0          NS        DMA engine 1 dre state                             |   
<59:45> D0_DREST RO        0          NS        DMA engine 0 dre state                             |   
<63:60> NS       RAZ       0          0         Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_DMA_STATE4_P1 = NPEI DMA DWE State
*
* DMA engine Debug information.
*

     ==============================================================
     NPEI_DMA_STATE4_P1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<12:0>  D3_DWEST RO        0          NS        DMA engine 3 dwe state                             |   
<25:13> D2_DWEST RO        0          NS        DMA engine 2 dwe state                             |   
<38:26> D1_DWEST RO        0          NS        DMA engine 1 dwe state                             |   
<51:39> D0_DWEST RO        0          NS        DMA engine 0 dwe state                             |   
<63:52> NS       RAZ       0          0         Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_DMA_STATE5_P1 = NPEI DMA DWE and DRE State
*
* DMA engine Debug information.
*

     ==============================================================
     NPEI_DMA_STATE5_P1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<12:0>  D4_DWEST RO        0          NS        DMA engine 4 dwe state                             |   
<27:13> D4_DREST RO        0          NS        DMA engine 4 dre state                             |   
<63:28> NS       RAZ       0          0         Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_DATA_OUT_CNT = NPEI DATA OUT COUNT
*
* The EXEC data out fifo-count and the data unload counter.
*

     ==============================================================
     NPEI_DATA_OUT_CNT Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>   P0_FCNT  RO       0x0         NS        PCIE-Port0 Data Out Fifo Count. Number of address  |   
                                                 data words to be sent out the PCIe port presently  |
                                                 buffered in the FIFO.                              |
<21:6>  P0_UCNT  RO       0x0         NS        PCIE-Port0 Fifo Unload Count. This counter is      |   
                                                 incremented by '1' every time a word is removed    |
                                                 from the Data Out FIFO, whose count is shown in    |
                                                 P0_FCNT.                                           |
<27:22> P1_FCNT  RO       0x0         NS        PCIE-Port1 Data Out Fifo Count. Number of address  |   
                                                 data words to be sent out the PCIe port presently  |
                                                 buffered in the FIFO.                              |
<43:28> P1_UCNT  RO       0x0         NS        PCIE-Port1 Fifo Unload Count. This counter is      |   
                                                 incremented by '1' every time a word is removed    |
                                                 from the Data Out FIFO, whose count is shown in    |
                                                 P0_FCNT.                                           |
<63:44> NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_LAST_WIN_RDATA0 = NPEI Last Window Read Data Port0
*
* The data from the last initiated window read.
*

     ==============================================================
     NPEI_LAST_WIN_RDATA0 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   DATA     RO       0x0         NS        Last window read data.                             |   
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_LAST_WIN_RDATA1 = NPEI Last Window Read Data Port1
*
* The data from the last initiated window read.
*

     ==============================================================
     NPEI_LAST_WIN_RDATA1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   DATA     RO       0x0         NS        Last window read data.                             |   
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_STATE1 = NPEI State 1
*
* State machines in NPEI. For debug.
*

     ==============================================================
     NPEI_STATE1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<38:0>  CSR      RO       0x1         NS        CSR State                                          |   
<39>    ARB      RO       0x0         NS        ARB State                                          |   
<51:40> CPL0     RO       0x1         NS        CPL0 State                                         |   
<63:52> CPL1     RO       0x1         NS        CPL1 State                                         |   
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_STATE2 = NPEI State 2
*
* State machines in NPEI. For debug.
*

     ==============================================================
     NPEI_STATE2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   NND      RO       0x1         NS        NND State                                          |   
<15:8>  NNP0     RO       0x1         NS        NNP0 State                                         |   
<30:16> CSM0     RO       0x1         NS        CSM0 State                                         |   
<45:31> CSM1     RO       0x1         NS        CSM1 State                                         |   
<46>    RAC      RO       0x1         NS        RAC State                                          |   
<47>    NPEI     RO       0x1         NS        NPEI State                                         |   
<63:48> NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_STATE3 = NPEI State 3
*
* State machines in NPEI. For debug.
*

     ==============================================================
     NPEI_STATE3 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<12:0>  NSM0     RO       0x1         NS        NSM0 State                                         |   
<25:13> NSM1     RO       0x1         NS        NSM1 State                                         |   
<40:26> PSM0     RO       0x1         NS        PSM0 State                                         |   
<55:41> PSM1     RO       0x1         NS        PSM1 State                                         |   
<63:56> NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_PCIE_MSI_RCV_B1 = NPEI PCIe MSI Receive Byte 1
*
* Register where MSI writes are directed from the PCIe.
*

     ==============================================================
     NPEI_PCIE_MSI_RCV_B1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    NS       RAZ      NS          NS        Reserved                                          |   
<15:8>   INT      R/W      0x0         NS       A write to this register will result in a bit in   |   
                                                 one of the NPEI_MSI_RCV# registers being set.      |
                                                 Which bit is set is dependent on the previously    |
                                                 written using the NPEI_MSI_WR_MAP register or if   |
                                                 not previously written the reset value of the MAP. |
<63:16> NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_PCIE_MSI_RCV_B2 = NPEI PCIe MSI Receive Byte 2
*
* Register where MSI writes are directed from the PCIe.
*

     ==============================================================
     NPEI_PCIE_MSI_RCV_B2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>  NS       RAZ      NS          NS        Reserved                                           |   
<23:16> INT      R/W      0x0         NS        A write to this register will result in a bit in   |   
                                                 one of the NPEI_MSI_RCV# registers being set.      |
                                                 Which bit is set is dependent on the previously    |
                                                 written using the NPEI_MSI_WR_MAP register or if   |
                                                 not previously written the reset value of the MAP. |
<63:24> NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_PCIE_MSI_RCV_B3 = NPEI PCIe MSI Receive Byte 3
*
* Register where MSI writes are directed from the PCIe.
*

     ==============================================================
     NPEI_PCIE_MSI_RCV_B3 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<23:0>   NS       RAZ      NS          NS       Reserved                                           |   
<31:24>  INT      R/W      0x0         NS       A write to this register will result in a bit in   |   
                                                 one of the NPEI_MSI_RCV# registers being set.      |
                                                 Which bit is set is dependent on the previously    |
                                                 written using the NPEI_MSI_WR_MAP register or if   |
                                                 not previously written the reset value of the MAP. |
<63:32> NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===


*
*                  NPEI_CTL_STATUS2 = NPEI's Control Status2 Register
*
* Contains control and status for NPEI.
* Writes to this register are not ordered with writes/reads to the PCI Memory space.
* To ensure that a write has completed the user must read the register before
* making an access(i.e. PCI memory space) that requires the value of this register to be updated.
*

     ==============================================================
     NPEI_CTL_STATUS2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     C0_B0_D  R/W      0           0         When set '1' disables access from PCIe-Port0 to    |   
                                                 BAR-0 address offsets: Less Than 0x270,            |
                                                 Greater than 0x270 AND less than 0x0520, 0x3BC0,   |
                                                 0x3CD0.                                            |
<1>     C0_WI_D  R/W      0           0         When set '1' disables access to the Window         |   
                                                 Registers from the PCIe-Port0.                     |
<2>     C1_B0_D  R/W      0           0         When set '1' disables access from PCIe-Port1 to    |   
                                                 BAR-0 address offsets: Less Than 0x270,            |
                                                 Greater than 0x270 AND less than 0x0520, 0x3BC0,   |
                                                 0x3CD0.                                            |
<3>     C1_WI_D  R/W      0           0         When set '1' disables access to the Window         |   
                                                 Registers from the PCIe-Port1.                     |
<6:4>   C0_B1_S  R/W      1           1         Pcie-Port0, Bar1 Size. 1 == 64MB, 2 == 128MB,      |   
                                                 3 == 256MB, 4 == 512MB, 5 == 1024MB, 6 == 2048MB,  |
                                                 0 and 7 are reserved.                              |
<9:7>   C1_B1_S  R/W      1           1         Pcie-Port1, Bar1 Size. 1 == 64MB, 2 == 128MB,      |   
                                                 3 == 256MB, 4 == 512MB, 5 == 1024MB, 6 == 2048MB,  |
                                                 0 and 7 are reserved.                              |
<10>    C0_W_FLT R/W      0           0         When '1' enables the window filter for reads and   |   
                                                 writes using the window registers.                 |
                                                 PCIE-Port0.                                        |
                                                 Unfilter writes are:                               |
                                                 MIO,   SubId0                                      |
                                                 MIO,   SubId7                                      |
                                                 NPEI,  SubId0                                      |
                                                 NPEI,  SubId7                                      |
                                                 POW,   SubId7                                      |
                                                 IPD,   SubId7                                      |
                                                 USBN0, SubId7                                      |
                                                 Unfiltered Reads are:                              |
                                                 MIO,   SubId0                                      |
                                                 MIO,   SubId7                                      |
                                                 NPEI,  SubId0                                      |
                                                 NPEI,  SubId7                                      |
                                                 POW,   SubId1                                      |
                                                 POW,   SubId2                                      |
                                                 POW,   SubId3                                      |
                                                 POW,   SubId7                                      |
                                                 IPD,   SubId7                                      |
                                                 USBN0, SubId7                                      |
<11>    C1_W_FLT R/W      0           0         When '1' enables the window filter for reads and   |   
                                                 writes using the window registers.                 |
                                                 PCIE-Port1.                                        |
                                                 Unfilter writes are:                               |
                                                 MIO,   SubId0                                      |
                                                 MIO,   SubId7                                      |
                                                 NPEI,  SubId0                                      |
                                                 NPEI,  SubId7                                      |
                                                 POW,   SubId7                                      |
                                                 IPD,   SubId7                                      |
                                                 USBN0, SubId7                                      |
                                                 Unfiltered Reads are:                              |
                                                 MIO,   SubId0                                      |
                                                 MIO,   SubId7                                      |
                                                 NPEI,  SubId0                                      |
                                                 NPEI,  SubId7                                      |
                                                 POW,   SubId1                                      |
                                                 POW,   SubId2                                      |
                                                 POW,   SubId3                                      |
                                                 POW,   SubId7                                      |
                                                 IPD,   SubId7                                      |
                                                 USBN0, SubId7                                      |
<14:12> MRRS     R/W      2           2         Max Read Request Size                              |   
                                                         0 = 128B                                   |
                                                         1 = 256B                                   |
                                                         2 = 512B                                   |
                                                         3 = 1024B                                  |
                                                         4 = 2048B                                  |
                                                         5 = 4096B                                  |
                                                 Note: This field must not exceed the desired       |
                                                       max read request size. This means this field |
                                                       should not exceed PCIE*_CFG030[MRRS].        |
<15>    MPS      R/W      0           0         Max Payload Size                                   |   
                                                          0  = 128B                                 |
                                                          1  = 256B                                 |
                                                 Note: PCIE*_CFG030[MPS] must be set to the same    |
                                                       value for proper function.                   |
<63:16> NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  NPEI_MSI_RCV0 = NPEI MSI Receive0
 *
 * Contains bits [63:0] of the 256 bits oof MSI interrupts.
 *

     ==============================================================
     NPEI_MSI_RCV0 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  INT      R/W1C    0x0         0         Bits 63-0 of the 256 bits of MSI interrupt.            
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_MSI_RCV1 = NPEI MSI Receive1
*
* Contains bits [127:64] of the 256 bits oof MSI interrupts.
*

     ==============================================================
     NPEI_MSI_RCV1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  INT      R/W1C    0x0         0         Bits 127-64 of the 256 bits of MSI interrupt.          
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_MSI_RCV2 = NPEI MSI Receive2
*
* Contains bits [191:128] of the 256 bits oof MSI interrupts.
*

     ==============================================================
     NPEI_MSI_RCV2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  INT      R/W1C    0x0         0         Bits 191-128 of the 256 bits of MSI interrupt.         
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_MSI_RCV3 = NPEI MSI Receive3
*
* Contains bits [255:192] of the 256 bits oof MSI interrupts.
*

     ==============================================================
     NPEI_MSI_RCV3 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  INT      R/W1C    0x0         0         Bits 255-192 of the 256 bits of MSI interrupt.         
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_MSI_ENB0 = NPEI MSI Enable0
*
* Used to enable the interrupt generation for the bits in the NPEI_MSI_RCV0.
*

     ==============================================================
     NPEI_MSI_ENB0 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ENB      R/W      0x0 0xffffffffffffffff Enables bit [63:0] of NPEI_MSI_RCV0.                  
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_MSI_ENB1 = NPEI MSI Enable1
*
* Used to enable the interrupt generation for the bits in the NPEI_MSI_RCV1.
*

     ==============================================================
     NPEI_MSI_ENB1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ENB      R/W      0x0 0xffffffffffffffff Enables bit [63:0] of NPEI_MSI_RCV1.                  
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_MSI_ENB2 = NPEI MSI Enable2
*
* Used to enable the interrupt generation for the bits in the NPEI_MSI_RCV2.
*

     ==============================================================
     NPEI_MSI_ENB2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ENB      R/W      0x0 0xffffffffffffffff Enables bit [63:0] of NPEI_MSI_RCV2.                  
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_MSI_ENB3 = NPEI MSI Enable3
*
* Used to enable the interrupt generation for the bits in the NPEI_MSI_RCV3.
*

     ==============================================================
     NPEI_MSI_ENB3 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ENB      R/W      0x0 0xffffffffffffffff Enables bit [63:0] of NPEI_MSI_RCV3.                  
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_MSI_WR_MAP = NPEI MSI Write MAP
*
* Used to write the mapping function of the NPEI_PCIE_MSI_RCV to NPEI_MSI_RCV registers.
*

     ==============================================================
     NPEI_MSI_WR_MAP Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   MSI_INT  R/W      0x0         NS        Selects the value that would be received when the  |   
                                                 NPEI_PCIE_MSI_RCV register is written.             |
<15:8>  CIU_INT  R/W      0x0         NS        Selects which bit in the NPEI_MSI_RCV# (0-255)     |   
                                                 will be set when the value specified in the        |
                                                 MSI_INT of this register is recevied during a      |
                                                 write to the NPEI_PCIE_MSI_RCV register.           |
<63:16> NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_MSI_RD_MAP = NPEI MSI Read MAP
*
* Used to read the mapping function of the NPEI_PCIE_MSI_RCV to NPEI_MSI_RCV registers.
*

     ==============================================================
     NPEI_MSI_RD_MAP Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   MSI_INT  R/W      0x0         NS        Selects the value that would be received when the  |   
                                                 NPEI_PCIE_MSI_RCV register is written.             |
<15:8>  RD_INT   RO       0x0         NS        The value of the map at the location PREVIOUSLY    |   
                                                 written to the MSI_INT field of this register.     |
<63:16> NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_PCIE_MSI_RCV = NPEI PCIe MSI Receive
*
* Register where MSI writes are directed from the PCIe.
*

     ==============================================================
     NPEI_PCIE_MSI_RCV Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   INT      R/W      0x0         NS        A write to this register will result in a bit in   |   
                                                 one of the NPEI_MSI_RCV# registers being set.      |
                                                 Which bit is set is dependent on the previously    |
                                                 written using the NPEI_MSI_WR_MAP register or if   |
                                                 not previously written the reset value of the MAP. |
<63:8>  NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

*
*                  NPEI_INTERRUPT_ENB2 = NPI's Interrupt Enable2 Register
*
* Used to enable the various interrupting conditions of NPI
*

     ==============================================================
     NPEI_INT_ENB2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     RML_RTO  R/W      0x0         1         Enables NPEI_INT_UM[0] to generate an              |   
                                                 interrupt on the RSL.                              |
<1>     RML_WTO  R/W      0x0         1         Enables NPEI_INT_SUM[1] to generate an             |   
                                                 interrupt on the RSL.                              |
<2>     BAR0_TO  R/W      0x0         1         Enables NPEI_INT_SUM[2] to generate an             |   
                                                 interrupt on the RSL.                              |
<3>     IOB2BIG  R/W      0x0         1         Enables NPEI_INT_SUM[3] to generate an             |   
                                                 interrupt on the RSL.                              |
<4>     DMA0DBO  R/W      0x0         1         Enables NPEI_INT_SUM[4] to generate an             |   
                                                 interrupt on the RSL.                              |
<5>     DMA1DBO  R/W      0x0         1         Enables NPEI_INT_SUM[5] to generate an             |   
                                                 interrupt on the RSL.                              |
<6>     DMA2DBO  R/W      0x0         1         Enables NPEI_INT_SUM[6] to generate an             |   
                                                 interrupt on the RSL.                              |
<7>     DMA3DBO  R/W      0x0         1         Enables NPEI_INT_SUM[7] to generate an             |    
                                                 interrupt on the RSL.                              |
<8>     DMA4DBO  R/W      0x0         1         Enables NPEI_INT_SUM[8] to generate an             |    
                                                 interrupt on the RSL.                              |
<9>     DMA0FI   R/W      0x0         1         Enables NPEI_INT_SUM[9] to generate an             |    
                                                 interrupt on the RSL.                              |
<10>    DMA1FI   R/W      0x0         1         Enables NPEI_INT_SUM[10] to generate an            |    
                                                 interrupt on the RSL.                              |
<11>    DCNT0    R/W      0x0         1         Enables NPEI_INT_SUM[11] to generate an            |    
                                                 interrupt on the RSL.                              |
<12>    DCNT1    R/W      0x0         1         Enables NPEI_INT_SUM[12] to generate an            |    
                                                 interrupt on the RSL.                              |
<13>    DTIME0   R/W      0x0         1         Enables NPEI_INT_SUM[13] to generate an            |    
                                                 interrupt on the RSL.                              |
<14>    DTIME1   R/W      0x0         1         Enables NPEI_INT_SUM[14] to generate an            |    
                                                 interrupt on the RSL.                              |
<15>    PSLDBOF  R/W      0x0         1         Enables NPEI_INT_SUM[15] to generate an            |    
                                                 interrupt on the RSL.                              |
<16>    PIDBOF   R/W      0x0         1         Enables NPEI_INT_SUM[16] to generate an            |    
                                                 interrupt on the RSL.                              |
<17>    PCNT     R/W      0x0         1         Enables NPEI_INT_SUM[17] to generate an            |    
                                                 interrupt on the RSL.                              |
<18>    PTIME    R/W      0x0         1         Enables NPEI_INT_SUM[18] to generate an            |    
                                                 interrupt on the RSL.                              |
<19>    C0_AERI  R/W      0x0         1         Enables NPEI_INT_SUM[19] to generate an            |    
                                                 interrupt on the RSL.                              |
<20>    RSVD_20  R/W      0x0         1         Enables NPEI_INT_SUM[20] to generate an            |    
                                                 interrupt on the RSL.                              |
<21>    C0_SE    R/W      0x0         1         Enables NPEI_INT_SUM[21] to generate an            |    
                                                 interrupt on the RSL.                              |
<22>    RSVD_22  R/W      0x0         1         Enables NPEI_INT_SUM[22] to generate an            |    
                                                 interrupt on the RSL.                              |
<23>    C0_WAKE  R/W      0x0         1         Enables NPEI_INT_SUM[23] to generate an            |    
                                                 interrupt on the RSL.                              |
<24>    C0_PMEI  R/W      0x0         1         Enables NPEI_INT_SUM[24] to generate an            |    
                                                 interrupt on the RSL.                              |
<25>    C0_HPINT R/W      0x0         1         Enables NPEI_INT_SUM[25] to generate an            |    
                                                 interrupt on the RSL.                              |
<26>    C1_AERI  R/W      0x0         1         Enables NPEI_INT_SUM[26] to generate an            |    
                                                 interrupt on the RSL.                              |
<27>    RSVD_27  R/W      0x0         1         Enables NPEI_INT_SUM[27] to generate an            |    
                                                 interrupt on the RSL.                              |
<28>    C1_SE    R/W      0x0         1         Enables NPEI_INT_SUM[28] to generate an            |    
                                                 interrupt on the RSL.                              |
<29>    RSVD_29  R/W      0x0         1         Enables NPEI_INT_SUM[29] to generate an            |    
                                                 interrupt on the RSL.                              |
<30>    C1_WAKE  R/W      0x0         1         Enables NPEI_INT_SUM[30] to generate an            |    
                                                 interrupt on the RSL.                              |
<31>    C1_PMEI  R/W      0x0         1         Enables NPEI_INT_SUM[31] to generate an            |    
                                                 interrupt on the RSL.                              |
<32>    C1_HPINT R/W      0x0         1         Enables NPEI_INT_SUM[32] to generate an            |    
                                                 interrupt on the RSL.                              |
<33>    C0_UP_B0 R/W      0x0         1         Enables NPEI_INT_SUM[33] to generate an            |    
                                                 interrupt on the RSL.                              |
<34>    C0_UP_B1 R/W      0x0         1         Enables NPEI_INT_SUM[34] to generate an            |    
                                                 interrupt on the RSL.                              |
<35>    C0_UP_B2 R/W      0x0         1         Enables NPEI_INT_SUM[35] to generate an            |    
                                                 interrupt on the RSL.                              |
<36>    C0_UP_WI R/W      0x0         1         Enables NPEI_INT_SUM[36] to generate an            |    
                                                 interrupt on the RSL.                              |
<37>    C0_UP_BX R/W      0x0         1         Enables NPEI_INT_SUM[37] to generate an            |    
                                                 interrupt on the RSL.                              |
<38>    C0_UN_B0 R/W      0x0         1         Enables NPEI_INT_SUM[38] to generate an            |    
                                                 interrupt on the RSL.                              |
<39>    C0_UN_B1 R/W      0x0         1         Enables NPEI_INT_SUM[39] to generate an            |    
                                                 interrupt on the RSL.                              |
<40>    C0_UN_B2 R/W      0x0         1         Enables NPEI_INT_SUM[40] to generate an            |    
                                                 interrupt on the RSL.                              |
<41>    C0_UN_WI R/W      0x0         1         Enables NPEI_INT_SUM[41] to generate an            |    
                                                 interrupt on the RSL.                              |
<42>    C0_UN_BX R/W      0x0         1         Enables NPEI_INT_SUM[42] to generate an            |    
                                                 interrupt on the RSL.                              |
<43>    C1_UP_B0 R/W      0x0         1         Enables NPEI_INT_SUM[43] to generate an            |    
                                                 interrupt on the RSL.                              |
<44>    C1_UP_B1 R/W      0x0         1         Enables NPEI_INT_SUM[44] to generate an            |    
                                                 interrupt on the RSL.                              |
<45>    C1_UP_B2 R/W      0x0         1         Enables NPEI_INT_SUM[45] to generate an            |    
                                                 interrupt on the RSL.                              |
<46>    C1_UP_WI R/W      0x0         1         Enables NPEI_INT_SUM[46] to generate an            |    
                                                 interrupt on the RSL.                              |
<47>    C1_UP_BX R/W      0x0         1         Enables NPEI_INT_SUM[47] to generate an            |    
                                                 interrupt on the RSL.                              |
<48>    C1_UN_B0 R/W      0x0         1         Enables NPEI_INT_SUM[48] to generate an            |    
                                                 interrupt on the RSL.                              |
<49>    C1_UN_B1 R/W      0x0         1         Enables NPEI_INT_SUM[49] to generate an            |    
                                                 interrupt on the RSL.                              |
<50>    C1_UN_B2 R/W      0x0         1         Enables NPEI_INT_SUM[50] to generate an            |    
                                                 interrupt on the RSL.                              |
<51>    C1_UN_WI R/W      0x0         1         Enables NPEI_INT_SUM[51] to generate an            |    
                                                 interrupt on the RSL.                              |
<52>    C1_UN_BX R/W      0x0         1         Enables NPEI_INT_SUM[52] to generate an            |    
                                                 interrupt on the RSL.                              |
<53>    C0_UN_WF R/W      0x0         1         Enables NPEI_INT_SUM[53] to generate an            |    
                                                 interrupt on the RSL.                              |
<54>    C1_UN_WF R/W      0x0         1         Enables NPEI_INT_SUM[54] to generate an            |    
                                                 interrupt on the RSL.                              |
<55>    C0_UP_WF R/W      0x0         1         Enables NPEI_INT_SUM[55] to generate an            |    
                                                 interrupt on the RSL.                              |
<56>    C1_UP_WF R/W      0x0         1         Enables NPEI_INT_SUM[56] to generate an            |    
                                                 interrupt on the RSL.                              |
<57>    C0_EXC   R/W      0x0         1         Enables NPEI_INT_SUM[57] to generate an            |    
                                                 interrupt on the RSL.                              |
<58>    C1_EXC   R/W      0x0         1         Enables NPEI_INT_SUM[58] to generate an            |    
                                                 interrupt on the RSL.                              |
<59>    C0_LDWN  R/W      0x0         1         Enables NPEI_INT_SUM[59] to generate an            |    
                                                 interrupt on the RSL.                              |
<60>    C1_LDWN  R/W      0x0         1         Enables NPEI_INT_SUM[60] to generate an            |    
                                                 interrupt on the RSL.                              |
<63:61> RSVD     R/W      0x0         NS        Reserved                                           |    
----------------------------------------------------------------------------------------------------
===





 *
 * PCS_MR_CONTROL_REG = Control Register0
 *
 *

     ==============================================================
     PCS(0..1)_MR(0..3)_CONTROL_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVD     RAZ      NS          NS        Reserved                                           |   
<15>    RESET    R/W      0x0         0         1=SW Reset, the bit will return to 0 after pcs has |   
                                                 been reset. Takes 32 eclk cycles to reset pcs      |
<14>    LOOPBCK1 R/W      0x0         0         0=normal operation, 1=loopback. The loopback mode  |   
                                                 will return(loopback) tx data from GMII tx back to |
                                                 GMII rx interface. The loopback happens in the pcs |
                                                 module. Auto Negotiation will be disabled even if  |
                                                 the AN_EN bit is set, during loopback              |
<13>    SPDLSB   R/W      0x0         0         See bit 6 description                              |   
<12>    AN_EN    R/W      0x0         0         1=AN Enable, 0=AN Disable                          |   
<11>    PWR_DN   R/W      0x1         0         1=Power Down(HW reset), 0=Normal operation         |   
<10>    RSVD     RAZ      NS          NS        Reserved                                           |   
<9>     RST_AN   R/W      0x0         0         If bit 12 is set and bit 3 of status reg is 1      |   
                                                 Auto Negotiation begins. Else,SW writes are ignored|
                                                 and this bit remians at 0. This bit clears itself  |
                                                 to 0, when AN starts.                              |
<8>     DUP      R/W      0x1         1         1=full duplex, 0=half duplex; effective only if AN |   
                                                 disabled. If status register bits [15:9] and and   | 
                                                 extended status reg bits [15:12] allow only one    |
                                                 duplex mode|, this bit will correspond to that     |
                                                 value and any attempt to write will be ignored.    |
<7>     COLTST   R/W      0x0         0         1=enable COL signal test, 0=disable test           |   
                                                 During COL test, the COL signal will reflect the   |
                                                 GMII TX_EN signal with less than 16BT delay        |
<6>     SPDMSB   R/W      0x1         0x1       {<6>, <13>}Link Speed effective only if AN disabled|   
                                                   0    0  10Mb/s                                   |
                                                   0    1  100Mb/s                                  |
                                                   1    0  1000Mb/s                                 |
                                                   1    1  RSVD                                     |
<5>     UNI      R/W      0x0         0x0        Unidirectional (Std 802.3-2005, Clause 66.2)      |   
                                                  This bit will override the AN_EN bit and disable  |
                                                  auto-negotiation variable mr_an_enable, when set  |                                                     
                                                  Used in both 1000Base-X and SGMII modes           |
<4:0>   RSVD     RAZ      NS          NS         Reserved                                          |   
----------------------------------------------------------------------------------------------------
===
 * NOTE:
 *Whenever AN_EN bit[12] is set, Auto negotiation is allowed to happen. The results
 *of the auto negotiation process set the fields in the AN_RESULTS reg. When AN_EN is not set,
 *AN_RESULTS reg is don't care. The effective SPD, DUP etc.. get their values
 *from the pcs_mr_ctrl reg.



 *
 * PCS_MR_STATUS_REG = Status Register1
 *
 *

     ==============================================================
     PCS(0..1)_MR(0..3)_STATUS_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVD     RAZ      NS          NS        Reserved                                           |    
<15>    HUN_T4   RO       0x0         0         1 means 100Base-T4 capable                         |    
<14>    HUN_XFD  RO       0x0         0         1 means 100Base-X Full Duplex                      |    
<13>    HUN_XHD  RO       0x0         0         1 means 100Base-X Half Duplex                      |    
<12>    TEN_FD   RO       0x0         0         1 means 10Mb/s Full Duplex                         |    
<11>    TEN_HD   RO       0x0         0         1 means 10Mb/s Half Duplex                         |    
<10>    HUN_T2FD RO       0x0         0         1 means 100Base-T2 Full Duplex                     |    
<9>     HUN_T2HD RO       0x0         0         1 means 100Base-T2 Half Duplex                     |    
<8>     EXT_ST   RO       0x1         1         1 means extended status info in reg15              |    
<7>     RSVD     RAZ      0x0         0         Reserved                                           |    
<6>     PRB_SUP  RO       0x1         1         1 means able to work without preamble bytes at the |    
                                                 beginning of frames. 0 means not able to accept    |
                                                 frames without preamble bytes preceding them.      |
<5>     AN_CPT   RO       0x0         0         1 means Auto Negotiation is complete and the       |    
                                                 contents of the an_results_reg are valid.          |
<4>     RM_FLT   RO       0x0         0         Set to 1 when remote flt condition occurs. This bit|    
                                                 implements a latching Hi behavior. It is cleared by|
                                                 SW read of this reg or when reset bit [15] in      |
                                                 Control Reg is asserted.                           |
                                                 See an adv reg[13:12] for flt conditions           | 
<3>     AN_ABIL  RO       0x1         1         1 means Auto Negotiation capable                   |    
<2>     LNK_ST   RO       0x0         1         1=link up, 0=link down. Set during AN process      |    
                                                 Set whenever XMIT=DATA. Latching Lo behavior when  |
                                                 link goes down. Link down value of the bit stays   |
                                                 low until SW reads the reg.                        |
<1>     RSVD     RAZ      0x0         0         Reserved                                           |    
<0>     EXTND    RO       0x0         0         Always 0, no extended capability regs present      |    
----------------------------------------------------------------------------------------------------
===
* Bits [15:9] in the Status Register indicate ability to operate as per those signalling specification,
* when misc ctl reg MAC_PHY bit is set to MAC mode. Bits [15:9] will all, always read 1'b0, indicating
* that the chip cannot operate in the corresponding modes.
*
* Bit [4] RM_FLT is a don't care when the selected mode is SGMII.
*
*


*
* PCS_AN_ADV_REG = AN Advertisement Register4
*
*

     ==============================================================
     PCS(0..1)_AN(0..3)_ADV_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVD     RAZ      NS          NS        Reserved                                           |   
<15>    NP       RO       0x0         0         Always 0, no next page capability supported        |   
<14>    RSVD     RAZ      0x0         0         Reserved                                           |   
<13:12> REM_FLT  R/W      0x0         0x0       {<13>,<12>}                                        |   
                                                   0    0  Link OK  XMIT=DATA                       |
                                                   0    1  Link failure (loss of sync, XMIT!= DATA) |
                                                   1    0  local device Offline                     |
                                                   1    1  AN Error failure to complete AN          |
                                                           AN Error is set if resolution function   |
                                                           precludes operation with link partner    |
<11:9>  RSVD     RAZ      0x0         0x0       reserved                                           |   
<8:7>   PAUSE    R/W      0x0         0x0       {<8>, <7>} Pause frame flow capability across link |   
                                                            Exchanged during Auto Negotiation       |
                                                   0    0  No Pause                                 |
                                                   0    1  Symmetric pause                          |
                                                   1    0  Asymmetric Pause                         |
                                                   1    1  Both symm and asymm pause to local device|
<6>     HFD      R/W      0x1         1         1 means local device Half Duplex capable           |   
<5>     FD       R/W      0x1         1         1 means local device Full Duplex capable           |   
<4:0>   RSVD     RAZ      0x0         0         reserved                                           |   
----------------------------------------------------------------------------------------------------
===




*
* PCS_AN_LP_ABIL_REG = AN link Partner Ability Register5
* as per IEEE802.3 Clause 37
*

     ==============================================================
     PCS(0..1)_AN(0..3)_LP_ABIL_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVD     RAZ      NS          NS        Reserved                                           |   
<15>    NP       RO       0x0         0         1=lp next page capable, 0=lp not next page capable |   
<14>    ACK      RO       0x0         NS        1=Acknowledgement received                         |   
<13:12> REM_FLT  RO       0x0         0         {<13>,<12>} Link Partner's link status             |   
                                                   0    0  Link OK                                  |
                                                   0    1  Offline                                  |
                                                   1    0  Link failure                             |
                                                   1    1  AN Error                                 | 
<11:9>  RSVD     RAZ      0x0         0         Reserved                                           |   
<8:7>   PAUSE    RO       0x0         0         {<8>, <7>} Link Partner Pause setting              |   
                                                   0    0  No Pause                                 |
                                                   0    1  Symmetric pause                          |
                                                   1    0  Asymmetric Pause                         |
                                                   1    1  Both symm and asymm pause to local device|
<6>     HFD      RO       0x0         0         1 means link partner Half Duplex capable           |   
<5>     FD       RO       0x0         0         1 means link partner Full Duplex capable           |   
<4:0>   RSVD     RAZ      0x0         0         reserved                                           |   
----------------------------------------------------------------------------------------------------
===




*
* PCS_AN_RESULTS_REG = AN Results Register
* 
*

     ==============================================================
     PCS(0..1)_AN(0..3)_RESULTS_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:7>  RSVD     RAZ      NS          NS        Reserved                                           |   
<6:5>   PAUSE    RO       0x00        0x00      {<6>, <5>} PAUSE Selection (Don't care for SGMII)  |   
                                                   0    0  Disable Pause, TX and RX                 |
                                                   0    1  Enable pause frames RX only              |
                                                   1    0  Enable Pause frames TX only              |
                                                   1    1  Enable pause frames TX and RX            |
<4:3>   SPD      RO       0x0         0x0      {<4>, <3>} Link Speed Selection                     |   
                                                   0    0  10Mb/s                                   |
                                                   0    1  100Mb/s                                  |
                                                   1    0  1000Mb/s                                 |
                                                   1    1  RSVD                                     |
<2>     AN_CPT   RO       0x0         1         1=AN Completed, 0=AN not completed or failed       |   
<1>     DUP      RO       0x0         0         1=Full Duplex, 0=Half Duplex                       |   
<0>     LINK_OK  RO       0x0         0         1=Link up(OK), 0=Link down                         |   
----------------------------------------------------------------------------------------------------
===
 * NOTE:
 * an_results_reg is don't care when AN_OVRD is set to 1. If AN_OVRD=0 and AN_CPT=1
 * the an_results_reg is valid.
 * 



*
* PCS_AN_EXT_ST_REG = AN Extended Status Register15
* as per IEEE802.3 Clause 22
*

     ==============================================================
     PCS(0..1)_AN(0..3)_EXT_ST_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVD     RAZ      NS          NS        Reserved                                           |   
<15>    THOU_XFD RO       0x1         1         1 means PHY is 1000BASE-X Full Dup capable         |   
<14>    THOU_XHD RO       0x1         1         1 means PHY is 1000BASE-X Half Dup capable         |   
<13>    THOU_TFD RO       0x0         0         1 means PHY is 1000BASE-T Full Dup capable         |   
<12>    THOU_THD RO       0x0         0         1 means PHY is 1000BASE-T Half Dup capable         |   
<11:0>  RSVD     RO       0x0         0         Reserved                                           |   
----------------------------------------------------------------------------------------------------
===




*
* PCS_LINK_TIMER_COUNT_REG = 1.6ms nominal link timer register
*

     ==============================================================
     PCS(0..1)_LINK(0..3)_TIMER_COUNT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVD     RAZ      NS          NS        Reserved                                           |   
<15:0>  COUNT    R/W      0x446       NS        (core clock period times 1024) times "COUNT" should|   
                                                 be 1.6ms(SGMII)/10ms(otherwise) which is the link  | 
                                                 timer used in auto negotiation.                    |
                                                 Reset assums a 700MHz eclk for 1.6ms link timer    |
----------------------------------------------------------------------------------------------------
===



*
* PCS_POLARITY_REG = TX_RX polarity reg
*

     ==============================================================
     PCS(0..1)_TX_RX(0..3)_POLARITY_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>  RSVD     RAZ      NS          NS        Reserved                                           |   
<3>     RXOVRD   R/W      0x0         0         When 0, <2> determines polarity                    |   
                                                 when 1, <1> determines polarity                    |
<2>     AUTORXPL RO       0x0         0         Auto RX polarity detected. 1=inverted, 0=normal    |   
                                                 This bit always represents the correct rx polarity |
                                                 setting needed for successful rx path operartion,  |
                                                 once a successful code group sync is obtained      |
<1>     RXPLRT   R/W      0x0         0         1 is inverted polarity, 0 is normal polarity       |   
<0>     TXPLRT   R/W      0x0         0         1 is inverted polarity, 0 is normal polarity       |   
----------------------------------------------------------------------------------------------------
===
*
*Note:
*r_tx_rx_polarity_reg bit [2] will show correct polarity needed on the link receive path after code grp synchronization is achieved.
*




*
* PCS_RX_SYNC_REG = Code Group synchronization reg
*

     ==============================================================
     PCS(0..1)_RX(0..3)_SYNC_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2>  RSVD     RAZ      NS          NS        Reserved                                           |   
<1>     SYNC     RO       0x0         0         1 means code group synchronization achieved        |   
<0>     BIT_LOCK RO       0x0         0         1 means bit lock achieved                          |   
----------------------------------------------------------------------------------------------------
===



*
* PCS_RX_STATES_REG = RX State Machines states register
*

     ==============================================================
     PCS(0..1)_RX(0..3)_STATES_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVD     RAZ      NS          NS        Reserved                                           |   
<15>    RX_BAD   RO       0x0         0         Receive state machine in an illegal state          |   
<14:10> RX_ST    RO       0x0         0         Receive state machine state                        |   
<9>     SYNC_BAD RO       0x0         0         Receive synchronization SM in an illegal state     |   
<8:5>   SYNC     RO       0x0         0         Receive synchronization SM state                   |   
<4>     AN_BAD   RO       0x0         0         Auto Negotiation state machine in an illegal state |   
<3:0>   AN_ST    RO       0x0         0         Auto Negotiation state machine state               |   
----------------------------------------------------------------------------------------------------
===



*
* PCS_TX_STATES_REG = TX State Machines states register
*

     ==============================================================
     PCS(0..1)_TX(0..3)_STATES_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:7>  RSVD     RAZ      NS          NS        Reserved                                           |   
<6:5>   XMIT     RO       0x00        NS        0=undefined, 1=config, 2=idle, 3=data              |   
<4>     TX_BAD   RO       0x0         0         Xmit state machine in a bad state                  |   
<3:0>   ORD_ST   RO       0x0         0         Xmit ordered set state machine state               |   
----------------------------------------------------------------------------------------------------
===



*
* SGMII AN Advertisement Register (sent out as tx_config_reg)
*

     ==============================================================
     PCS(0..1)_SGM(0..3)_AN_ADV_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVD     RAZ      NS          NS        Reserved                                           |   
<15>    LINK     R/W      0x0         1         Link status 1 Link Up, 0 Link Down                 |   
<14>    ACK      RO       0x0         0         Auto negotiation ack                               |   
<13>    RSVD     RAZ      0x0         NS        Reserved for future use                            |   
<12>    DUP      R/W      0x1         1         Duplex mode 1=full duplex, 0=half duplex           |   
<11:10> SPEED    R/W      0x2         0x2       Link Speed                                         |   
                                                   0    0  10Mb/s                                   |
                                                   0    1  100Mb/s                                  |
                                                   1    0  1000Mb/s                                 |
                                                   1    1  RSVD                                     |
<9:1>   RSVD     RAZ      0x0         NS        Reserved for future use                            |   
<0>     ONE      RO       0x1         1         Always set to match tx_config_reg<0>               |   
----------------------------------------------------------------------------------------------------
===

* NOTE: The SGMII AN Advertisement Register above will be sent during Auto Negotiation if the MAC_PHY mode bit in misc_ctl_reg
* is set (1=PHY mode). If the bit is not set (0=MAC mode), the tx_config_reg[14] becomes ACK bit and [0] is always 1.
* All other bits in tx_config_reg sent will be 0. The PHY dictates the Auto Negotiation results.





*
* SGMII LP Advertisement Register (received as rx_config_reg)
*

     ==============================================================
     PCS(0..1)_SGM(0..3)_LP_ADV_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVD     RAZ      NS          NS        Reserved                                           |   
<15>    LINK     RO       0x0         1         Link status 1 Link Up, 0 Link Down                 |   
<14>    RSVD     RO       0x0         NS        Reserved for auto negotiation ack                  |   
<13>    RSVD     RAZ      0x0         NS        Reserved for future use                            |   
<12>    DUP      RO       0x0         1         Duplex mode 1=full duplex, 0=half duplex           |   
<11:10> SPEED    RO       0x0         2         Link Speed                                         |   
                                                   0    0  10Mb/s                                   |
                                                   0    1  100Mb/s                                  |
                                                   1    0  1000Mb/s                                 |
                                                   1    1  RSVD                                     |
<9:1>   RSVD     RAZ      0x0         NS        Reserved for future use                            |   
<0>     ONE      RO       0x1         1         Always set to match tx_config_reg<0>               |   
----------------------------------------------------------------------------------------------------
===



*
* SGMII Misc Control Register
*

     ==============================================================
     PCS(0..1)_MISC(0..3)_CTL_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:13> RSVD     RAZ      NS          NS        Reserved                                           |   
<12>    SGMII    RO       NS          NS        1=SGMII or 1000Base-X mode selected,               |   
                                                 0=XAUI or PCIE mode selected                       |
                                                 This bit represents pi_qlm1/3_cfg[1:0] pin status  |
<11>    GMXENO   R/W      0x0         0x0       GMX Enable override. When set to 1, forces GMX to  |   
                                                 appear disabled. The enable/disable status of GMX  |
                                                 is checked only at SOP of every packet.            |
<10>    LOOPBCK2 R/W      0x0         0         Sets external loopback mode to return rx data back |   
                                                 out via tx data path. 0=no loopback, 1=loopback    |
<9>     MAC_PHY  R/W      0x0         0         0=MAC, 1=PHY decides the tx_config_reg value to be |   
                                                 sent during auto negotiation.                      |
                                                 See SGMII spec ENG-46158 from CISCO                |
<8>     MODE     R/W      0x0         0         0=SGMII or 1= 1000 Base X                          |   
<7>     AN_OVRD  R/W      0x0         0         0=disable, 1= enable over ride AN results          |   
                                                 Auto negotiation is allowed to happen but the      |
                                                 results are ignored when set. Duplex and Link speed|
                                                 values are set from the pcs_mr_ctrl reg                |
<6:0>   SAMP_PT  R/W      0x1         NS        Byte# in elongated frames for 10/100Mb/s operation |   
                                                 for data sampling on RX side in PCS.               |
                                                 Recommended values are 0x5 for 100Mb/s operation   |
                                                 and 0x32 for 10Mb/s operation.                     |
                                                 For 10Mb/s operaton this field should be set to a  |
                                                 value less than 99 and greater than 0. If set out  |
                                                 of this range a value of 50 will be used for actual|
                                                 sampling internally without affecting the CSR field|
                                                 For 100Mb/s operation this field should be set to a|
                                                 value less than 9 and greater than 0. If set out of|
                                                 this range a value of 5 will be used for actual    |
                                                 sampling internally without affecting the CSR field|
----------------------------------------------------------------------------------------------------
===
*
* SGMII bit [12] is really a misnomer, it is a decode  of pi_qlm_cfg pins to indicate SGMII or 1000Base-X modes.
*

* Note: MODE bit
* When MODE=1,  1000Base-X mode is selected. Auto negotiation will follow IEEE 802.3 clause 37.
* When MODE=0,  SGMII mode is selected and the following note will apply.

* Repeat note from SGM_AN_ADV register
* NOTE: The SGMII AN Advertisement Register above will be sent during Auto Negotiation if the MAC_PHY mode bit in misc_ctl_reg
* is set (1=PHY mode). If the bit is not set (0=MAC mode), the tx_config_reg[14] becomes ACK bit and [0] is always 1.
* All other bits in tx_config_reg sent will be 0. The PHY dictates the Auto Negotiation results.



*
* PCS Interrupt Register
*

     ==============================================================
     PCS(0..1)_INT(0..3)_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:12> RSVD     RAZ      NS          NS        Reserved                                           |   
<11>    DUP      R/W1C    0x0         0         Set whenever Duplex mode changes on the link       |   
<10>    SYNC_BAD R/W1C    0x0         0         Set by HW whenever rx sync st machine reaches a bad|   
                                                 state. Should never be set during normal operation |
<9>     AN_BAD   R/W1C    0x0         0         Set by HW whenever AN st machine reaches a bad     |   
                                                 state. Should never be set during normal operation |
<8>     RXLOCK   R/W1C    0x0         0         Set by HW whenever code group Sync or bit lock     |   
                                                 failure occurs                                     |
                                                 Cannot fire in loopback1 mode                      |
<7>     RXBAD    R/W1C    0x0         0         Set by HW whenever rx st machine reaches a  bad    |   
                                                 state. Should never be set during normal operation |
<6>     RXERR    R/W1C    0x0         0         Set whenever RX receives a code group error in     |   
                                                 10 bit to 8 bit decode logic                       |
                                                 Cannot fire in loopback1 mode                      |
<5>     TXBAD    R/W1C    0x0         0         Set by HW whenever tx st machine reaches a bad     |   
                                                 state. Should never be set during normal operation | 
<4>     TXFIFO   R/W1C    0x0         0         Set whenever HW detects a TX fifo overflow         |   
                                                 condition                                          |
<3>     TXFIFU   R/W1C    0x0         0         Set whenever HW detects a TX fifo underflowflow    |   
                                                 condition                                          |
<2>     AN_ERR   R/W1C    0x0         0         AN Error, AN resolution function failed            |   
<1>     XMIT     R/W1C    0x0         0         Set whenever HW detects a change in the XMIT       |   
                                                 variable. XMIT variable states are IDLE, CONFIG and|
                                                 DATA                                               |
<0>     LNKSPD   R/W1C    0x0         0         Set by HW whenever Link Speed has changed          |   
----------------------------------------------------------------------------------------------------
===

*
*NOTE: RXERR and TXERR conditions to be discussed with Dan before finalising
*


*
* PCS Interrupt Enable Register
*

     ==============================================================
     PCS(0..1)_INT(0..3)_EN_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:12> RSVD         RAZ      NS          NS        Reserved                                              |   
<11>    DUP          R/W      0x0         0x1       Enable duplex mode changed interrupt                  |   
<10>    SYNC_BAD_EN  R/W      0x0         0x1       Enable rx sync st machine in bad state interrupt      |   
<9>     AN_BAD_EN    R/W      0x0         0x1       Enable AN state machine bad state interrupt           |   
<8>     RXLOCK_EN    R/W      0x0         0x1       Enable rx code group sync/bit lock failure interrupt  |   
<7>     RXBAD_EN     R/W      0x0         0x1       Enable rx state machine in bad state interrupt        |   
<6>     RXERR_EN     R/W      0x0         0x1       Enable RX error condition interrupt                   |   
<5>     TXBAD_EN     R/W      0x0         0x1       Enable tx state machine in bad state interrupt        |   
<4>     TXFIFO_EN    R/W      0x0         0x1       Enable tx fifo overflow condition interrupt           |   
<3>     TXFIFU_EN    R/W      0x0         0x1       Enable tx fifo underflow condition intrrupt           |   
<2>     AN_ERR_EN    R/W      0x0         0x1       Enable AN Error condition interrupt                   |   
<1>     XMIT_EN      R/W      0x0         0x1       Enable XMIT variable state change interrupt           |   
<0>     LNKSPD_EN    R/W      0x0         0x1       Enable Link Speed has changed interrupt               |   
----------------------------------------------------------------------------------------------------
===



*
* PCS Logic Analyzer Register
*

     ==============================================================
     PCS(0..1)_LOG_ANL(0..3)_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>  RSVD         RAZ      NS          NS        Reserved                                              |   
<3>     LAFIFOVFL    R/W1C    0x0         0x0       1=logic analyser fif overflowed during packetization  |   
                                                     Write 1 to clear this bit                             |
<2>     LA_EN        R/W      0x0         0x0       1= Logic Analyzer enabled, 0=Logic Analyzer disabled  |   
<1:0>   PKT_SZ       R/W      0x0         0x0       {<1>, <0>}  Logic Analyzer Packet Size                |   
                                                      0    0   Packet size 1k bytes                        |
                                                      0    1   Packet size 4k bytes                        |
                                                      1    0   Packet size 8k bytes                        |
                                                      1    1   Packet size 16k bytes                       |
----------------------------------------------------------------------------------------------------
===

*NOTE: Logic Analyzer is enabled with LA_EN for the specified PCS lane only. PKT_SZ is effective only when LA_EN=1
*For normal operation(sgmii or 1000Base-X), this bit must be 0.
*See pcsx.csr for xaui logic analyzer mode.
*For full description see document at .../rtl/pcs/readme_logic_analyzer.txt
*




 
*
* PCSX regs follow IEEE Std 802.3-2005, Section: 45.2.3
*


 *
 * PCSX_CONTROL1_REG = Control Register1
 *
 *

     ==============================================================
     PCSX(0..1)_CONTROL1_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVD     RAZ      NS          NS        Reserved                                           |   
<15>    RESET    R/W      0x1         0         1=SW PCSX Reset, the bit will return to 0 after pcs|   
                                                 has been reset. Takes 32 eclk cycles to reset pcs  |
                                                 0=Normal operation                                 |
<14>    LOOPBCK1 R/W      0x0         0         0=normal operation, 1=internal loopback mode       |   
                                                 xgmii tx data received from gmx tx port is returned|
                                                 back into gmx, xgmii rx port.                      |
<13>    SPDSEL1  RO       0x1         1         See bit 6 description                              |   
<12>    RSVD     RAZ      NS          NS        Reserved                                           |   
<11>    LO_PWR   R/W      0x0         0         The status of this bit has no effect on operation  |   
                                                 of the PCS sublayer.                               |
<10:7>  RSVD     RAZ      NS          NS        Reserved                                           |   
<6>     SPDSEL0  RO       0x1         0x1       SPDSEL1 and SPDSEL0 are always at 1'b1. Write has  |   
                                                 no effect.                                         |
                                                 {<6>, <13>}Link Speed selection                    |
                                                   1    1   Bits 5:2 select speed                   |
<5:2>   SPD      RO       0x0         0x0       Always select 10Gb/s, writes have no effect        |   
<1:0>   RSVD     RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===



 *
 * PCSX_STATUS1_REG = Status Register1
 *
 *

     ==============================================================
     PCSX(0..1)_STATUS1_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVD      RAZ      NS          NS        Reserved                                          |   
<7>     FLT       RO       0x0         0x0       1=Fault condition detected, 0=No fault condition  |   
                                                  This bit is a logical OR of Status2 reg bits 11,10|
<6:3>   RSVD      RAZ      NS          NS        Reserved                                          |   
<2>     RCV_LNK   RO       0x0         0x1       1=Receive Link up, 0=Receive Link down            |   
                                                  Latching Low version of r_10gbx_status_reg[12],   |
                                                  Link down status continues until SW read.         | 
<1>     LPABLE    RO       0x1         0x1       Always set to 1 for Low Power ablility indication |   
<0>     RSVD      RAZ      NS          NS        Reserved                                          |   
----------------------------------------------------------------------------------------------------
===




 *
 * PCSX_SPD_ABIL_REG = Speed ability register
 *
 *

     ==============================================================
     PCSX(0..1)_SPD_ABIL_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2> RSVD      RAZ      NS          NS        Reserved                                           |   
<1>    TENPASST  RO       0x0         0x0       Always 0, no 10PASS-TS/2BASE-TL capability support |   
<0>    TENGB     RO       0x1         0x1       Always 1, 10Gb/s supported                         |   
----------------------------------------------------------------------------------------------------
===



 *
 * PCSX_CONTROL2_REG = Control Register2
 *
 *

     ==============================================================
     PCSX(0..1)_CONTROL2_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2>  RSVD      RAZ      NS          NS       Reserved                                           |   
<1:0>   TYPE      RO       0x1         0x1      Always 2'b01, 10GBASE-X only supported             |   
----------------------------------------------------------------------------------------------------
===



 *
 * PCSX_STATUS2_REG = Status Register2
 *
 *

     ==============================================================
     PCSX(0..1)_STATUS2_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVD      RAZ      NS          NS       Reserved                                           |   
<15:14> DEV       RO       0x2         0x2      Always at 2'b10, means a Device present at the addr|   
<13:12> RSVD      RAZ      NS          NS       Reserved                                           |   
<11>    XMTFLT    RC       0x0         0x0      0=No xmit fault, 1=xmit fault. Implements latching |   
                                                 High function until SW read.                       |
<10>    RCVFLT    RC       0x0         0x0      0=No rcv fault, 1=rcv fault. Implements latching   |   
                                                 High function until SW read                        |
<9:3>   RSVD      RAZ      NS          NS       Reserved                                           |   
<2>     TENGB_W   RO       0x0         0x0      Always 0, no 10GBASE-W capability                  |   
<1>     TENGB_X   RO       0x1         0x1      Always 1, 10GBASE-X capable                        |   
<0>     TENGB_R   RO       0x0         0x0      Always 0, no 10GBASE-R capability                  |   
----------------------------------------------------------------------------------------------------
===



 *
 * PCSX_10GBX_STATUS_REG = 10gbx_status_reg
 *
 *

     ==============================================================
     PCSX(0..1)_10GBX_STATUS_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:13> RSVD      RAZ      NS          NS       Reserved                                           |   
<12>    ALIGND    RO       0x0         0x1      1=Lane alignment achieved, 0=Lanes not aligned     |   
<11>    PATTST    RO       0x0         0x0      Always at 0, no pattern testing capability         |   
<10:4>  RSVD      RAZ      NS          NS       Reserved                                           |   
<3>     L3SYNC    RO       0x0         0x1      1=Rcv lane 3 code grp synchronized, 0=not sync'ed  |   
<2>     L2SYNC    RO       0x0         0x1      1=Rcv lane 2 code grp synchronized, 0=not sync'ed  |   
<1>     L1SYNC    RO       0x0         0x1      1=Rcv lane 1 code grp synchronized, 0=not sync'ed  |   
<0>     L0SYNC    RO       0x0         0x1      1=Rcv lane 0 code grp synchronized, 0=not sync'ed  |   
----------------------------------------------------------------------------------------------------
===




 *
 * PCSX_TX_RX_STATES_REG = Transmit Receive States Register
 *
 *

     ==============================================================
     PCSX(0..1)_TX_RX_STATES_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:13> RSVD      RAZ      NS          NS       Reserved                                           |   
<12>    SYN3BAD   RO       0x0         0x0      1=lane 3 code grp sync state machine in bad state  |   
<11>    SYN2BAD   RO       0x0         0x0      1=lane 2 code grp sync state machine in bad state  |   
<10>    SYN1BAD   RO       0x0         0x0      1=lane 1 code grp sync state machine in bad state  |   
<9>     SYN0BAD   RO       0x0         0x0      1=lane 0 code grp sync state machine in bad state  |   
<8>     RXBAD     RO       0x0         0x0      1=Rcv state machine in a bad state, HW malfunction |   
<7:5>   ALGN_ST   RO       0x0         NS       Lane alignment state machine state state           |   
<4:3>   RX_ST     RO       0x0         NS       Receive state machine state state                  |   
<2:0>   TX_ST     RO       0x0         NS       Transmit state machine state state                 |   
----------------------------------------------------------------------------------------------------
===


*
 * PCSX_RX_SYNC_STATES_REG = Receive Sync States Register
 *
 *

     ==============================================================
     PCSX(0..1)_RX_SYNC_STATES_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16>  RSVD      RAZ      NS          NS       Reserved                                          |   
<15:12>  SYNC3ST   RO       0x0         NS       Receive lane 3 code grp sync state machine state  |   
<11:8>   SYNC2ST   RO       0x0         NS       Receive lane 2 code grp sync state machine state  |   
<7:4>    SYNC1ST   RO       0x0         NS       Receive lane 1 code grp sync state machine state  |   
<3:0>    SYNC0ST   RO       0x0         NS       Receive lane 0 code grp sync state machine state  |   
----------------------------------------------------------------------------------------------------
===


*
* PCSX_POLARITY_REG = TX_RX polarity reg
*

     ==============================================================
     PCSX(0..1)_TX_RX_POLARITY_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2>  RSVD     RAZ      NS          NS        Reserved                                           |   
<1>     RXPLRT   R/W      0x0         0         1 is inverted polarity, 0 is normal polarity       |   
<0>     TXPLRT   R/W      0x0         0         1 is inverted polarity, 0 is normal polarity       |   
----------------------------------------------------------------------------------------------------
===




*
* PCSX Misc Control Register
*

     ==============================================================
     PCSX(0..1)_MISC_CTL_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>  RSVD     RAZ      NS          NS        Reserved                                           |   
<3>     TX_SWAP  R/W      0x0         NS        0=do not swap xaui lanes going out to qlm's        |   
                                                 1=swap lanes 3 <-> 0   and   2 <-> 1               |
<2>     RX_SWAP  R/W      0x0         NS        0=do not swap xaui lanes coming in from qlm's      |   
                                                 1=swap lanes 3 <-> 0   and   2 <-> 1               |
<1>     XAUI     RO       NS          NS        1=XAUI mode selected, 0=not XAUI mode selected     |   
                                                 This bit represents pi_qlm1/3_cfg[1:0] pin status  |
<0>     GMXENO   R/W      0x0         0x0       GMX port enable override, GMX en/dis status is held|   
                                                 during data packet reception.                      |
----------------------------------------------------------------------------------------------------
===
*
*LN_SWAP for XAUI is to simplify interconnection layout between devices
*


*
* PCSX Bit Lock Status Register
*

     ==============================================================
     PCSX(0..1)_BIT_LOCK_STATUS_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>  RSVD     RAZ      NS          NS        Reserved                                           |   
<3>     BITLCK3  RO       0x0         NS        Receive Lane 3 bit lock status                     |   
<2>     BITLCK2  RO       0x0         NS        Receive Lane 2 bit lock status                     |   
<1>     BITLCK1  RO       0x0         NS        Receive Lane 1 bit lock status                     |   
<0>     BITLCK0  RO       0x0         NS        Receive Lane 0 bit lock status                     |   
----------------------------------------------------------------------------------------------------
===
*
*
*



*
* PCSX Interrupt Register
*

     ==============================================================
     PCSX(0..1)_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:6>  RSVD     RAZ      NS          NS        Reserved                                           |   
<5>     ALGNLOS  R/W1C    0x0         0         Set when XAUI lanes lose alignment                 |   
<4>     SYNLOS   R/W1C    0x0         0         Set when Code group sync lost on 1 or more  lanes  |   
<3>     BITLCKLS R/W1C    0x0         0         Set when Bit lock lost on 1 or more xaui lanes     |   
<2>     RXSYNBAD R/W1C    0x0         0         Set when RX code grp sync st machine in bad state  |   
                                                 in one of the 4 xaui lanes                         |
<1>     RXBAD    R/W1C    0x0         0         Set when RX state machine in bad state             |   
<0>     TXFLT    R/W1C    0x0         0         None defined at this time, always 0x0              |   
----------------------------------------------------------------------------------------------------
===

*
*
*


*
* PCSX Interrupt Enable Register
*

     ==============================================================
     PCSX(0..1)_INT_EN_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:6>  RSVD         RAZ      NS          NS        Reserved                                              |   
<5>     ALGNLOS_EN   R/W      0x0         1         Enable ALGNLOS interrupt                              |   
<4>     SYNLOS_EN    R/W      0x0         1         Enable SYNLOS interrupt                               |   
<3>     BITLCKLS_EN  R/W      0x0         1         Enable BITLCKLS interrupt                             |   
<2>     RXSYNBAD_EN  R/W      0x0         1         Enable RXSYNBAD  interrupt                            |   
<1>     RXBAD_EN     R/W      0x0         1         Enable RXBAD  interrupt                               |   
<0>     TXFLT_EN     R/W      0x0         1         Enable TXFLT   interrupt                              |   
----------------------------------------------------------------------------------------------------
===


*
* PCSX Logic Analyzer Register
*

     ==============================================================
     PCSX(0..1)_LOG_ANL_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:7>  RSVD         RAZ      NS          NS        Reserved                                              |   
<6>     ENC_MODE     R/W      0x0         0         1=send xaui encoded data, 0=send xaui raw data to GMX |   
                                                     See .../rtl/pcs/readme_logic_analyzer.txt for details |
<5:4>   DROP_LN      R/W      0x0         0         xaui lane# to drop from logic analyzer packets        |   
                                                     {<5>, <4>}  Drop lane #                               |
                                                      0    0   Drop lane 0 data                            |
                                                      0    1   Drop lane 1 data                            |
                                                      1    0   Drop lane 2 data                            |
                                                      1    1   Drop lane 3 data                            |
<3>     LAFIFOVFL    R/W1C    0x0         0         1=logic analyser fif overflowed one or more times     |   
                                                     during packetization.                                 |
                                                     Write 1 to clear this bit                             |
<2>     LA_EN        R/W      0x0         0         1= Logic Analyzer enabled, 0=Logic Analyzer disabled  |   
<1:0>   PKT_SZ       R/W      0x0         0         {<1>, <0>}  Logic Analyzer Packet Size                |   
                                                      0    0   Packet size 1k bytes                        |
                                                      0    1   Packet size 4k bytes                        |
                                                      1    0   Packet size 8k bytes                        |
                                                      1    1   Packet size 16k bytes                       |
----------------------------------------------------------------------------------------------------
===

*NOTE: Logic Analyzer is enabled with LA_EN for xaui only. PKT_SZ is effective only when LA_EN=1
*For normal operation(xaui), this bit must be 0. The dropped lane is used to send rxc[3:0].
*See pcs.csr  for sgmii/1000Base-X logic analyzer mode.
*For full description see document at .../rtl/pcs/readme_logic_analyzer.txt
*

*
* PCSX Bist Status Register
*

     ==============================================================
     PCSX(0..1)_BIST_STATUS_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  RSVD         RAZ      NS          NS        Reserved                                              |   
<0>     BIST_STATUS  RO       0x0         0         1=bist failure, 0=bisted memory ok or bist in progress|   
                                                     pcsx.tx_sm.drf8x36m1_async_bist                       |
----------------------------------------------------------------------------------------------------
===



 *
 *                  PESC_CTL_STATUS = PESC Control Status
 *
 * General control and status of the PESC.
 *

     ==============================================================
     PESC(0..1)_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     INV_LCRC R/W      0x0         0         When '1' causes the LSB of the LCRC to be inverted.|   
<1>     INV_ECRC R/W      0x0         0         When '1' causes the LSB of the ECRC to be inverted.|   
<2>     RSVD2    R/W      0x0         0         Reserved.                                          |   
<3>     RO_CTLP  R/W      0x0         0         When set '1' C-TLPs that have the RO bit set will  |   
                                                 not wait for P-TLPs that normaly would be sent     |
                                                 first.                                             |
<4>     LNK_ENB  R/W      0x0         0         When set '1' the link is enabled when '0' the      |   
                                                 link is disabled. This bit only is active when in  |
                                                 RC mode.                                           |
<5>     DLY_ONE  R/W      0x0         0         When set the output client state machines will     |   
                                                 wait one cycle before starting a new TLP out.      |
<6>     NF_ECRC  R/W      0x0         0         Do not forward peer-to-peer ECRC TLPs.             |   
<7>     RSVD7    R/W      0x0         0         Reserved.                                          |   
<8>     RSVD8    R/W      0x0         0         Reserved.                                          |   
<9>     OB_P_CMD R/W      0x0         0         When WRITTEN with a '1' a single cycle pulse is    |   
                                                 to the PCIe core outband_pwrup_cmd port. EP mode.  |
<10>    PM_XPME  R/W      0x0         0         When WRITTEN with a '1' a single cycle pulse is    |   
                                                 to the PCIe core pm_xmt_pme port. EP mode.         |
<11>    PM_XTOFF R/W      0x0         0         When WRITTEN with a '1' a single cycle pulse is    |   
                                                 to the PCIe core pm_xmt_turnoff port. RC mode.     |
<12>    RSVD12   R/W      0x0         0         Reserved.                                          |   
<14:13> QLM_CFG  RO       NS          NS        The QLM configuration pad bits.                    |   
<22:15> PBUS     RO       NS          NS        Primary bus number.                                |   
<27:23> DNUM     RO       NS          NS        Primary bus device number.                         |   
<63:28> RSVD     RAZ      NS          NS        Reserved.                                          |   
----------------------------------------------------------------------------------------------------
===

*
*                  PESC(0..1)_DBG_INFO = PESC Debug Information
*
* General debug info.
*

     ==============================================================
     PESC(0..1)_DBG_INFO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     SPOISON  R/W1C    0x0         0         Poisoned TLP sent                                  |   
                                                 peai__client0_tlp_ep & peai__client0_tlp_hv        |
<1>     RTLPMAL  R/W1C    0x0         0         Received TLP is malformed or a message.            |   
                                                 pedc_radm_trgt1_tlp_abort & pedc__radm_trgt1_eot   |
                                                 If the core receives a MSG (or Vendor Message)     |
                                                 this bit will be set.                              |
<2>     RTLPLLE  R/W1C    0x0         0         Received TLP has link layer error                  |   
                                                 pedc_radm_trgt1_dllp_abort & pedc__radm_trgt1_eot  |
<3>     RECRCE   R/W1C    0x0         0         Received ECRC Error                                |   
                                                 pedc_radm_trgt1_ecrc_err & pedc__radm_trgt1_eot    |
<4>     RPOISON  R/W1C    0x0         0         Received Poisoned TLP                              |   
                                                 pedc__radm_trgt1_poisoned & pedc__radm_trgt1_hv    |
<5>     RCEMRC   R/W1C    0x0         0         Received Correctable Error Message (RC Mode only)  |   
                                                 pedc_radm_correctable_err                          |
<6>     RNFEMRC  R/W1C    0x0         0         Received Non-Fatal Error Message (RC Mode only)    |   
                                                 pedc_radm_nonfatal_err                             |
<7>     RFEMRC   R/W1C    0x0         0         Received Fatal Error Message (RC Mode only)        |   
                                                 pedc_radm_fatal_err                                |
                                                 Bit set when a message with ERR_FATAL is set.      |
<8>     RPMERC   R/W1C    0x0         0         Received PME Message (RC Mode only)                |   
                                                 pedc_radm_pm_pme                                   |
<9>     RPTAMRC  R/W1C    0x0         0         Received PME Turnoff Acknowledge Message           |   
                                                 (RC Mode only)                                     |
                                                 pedc_radm_pm_to_ack                                |
<10>    RUMEP    R/W1C    0x0         0         Received Unlock Message (EP Mode Only)             |   
                                                 pedc_radm_msg_unlock                               |
<11>    RVDM     R/W1C    0x0         0         Received Vendor-Defined Message                    |   
                                                 pedc_radm_vendor_msg                               |
<12>    ACTO     R/W1C    0x0         0         A Completion Timeout Occured                       |   
                                                 pedc_radm_cpl_timeout                              |
<13>    RTE      R/W1C    0x0         0         Replay Timer Expired                               |   
                                                 xdlh_replay_timeout_err                            |
                                                 This bit is set when the REPLAY_TIMER expires in   |
                                                 the PCIE core. The probability of this bit being   |
                                                 set will increase with the traffic load.           |
<14>    MRE      R/W1C    0x0         0         Max Retries Exceeded                               |   
                                                 xdlh_replay_num_rlover_err                         |
<15>    RDWDLE   R/W1C    0x0         0         Received DLLP with DataLink Layer Error            |   
                                                 rdlh_bad_dllp_err                                  |
<16>    RTWDLE   R/W1C    0x0         0         Received TLP with DataLink Layer Error             |   
                                                 rdlh_bad_tlp_err                                   |
<17>    DPEOOSD  R/W1C    0x0         0         DLLP protocol error (out of sequence DLLP)         |   
                                                 rdlh_prot_err                                      |
<18>    FCPVWT   R/W1C    0x0         0         Flow Control Protocol Violation (Watchdog Timer)   |   
                                                 rtlh_fc_prot_err                                   |
<19>    RPE      R/W1C    0x0         0         When the PHY reports 8B/10B decode error           |   
                                                 (RxStatus = 3b100) or disparity error              |
                                                 (RxStatus = 3b111), the signal rmlh_rcvd_err will  |
                                                 be asserted.                                       |
                                                 rmlh_rcvd_err                                      |
<20>    FCUV     R/W1C    0x0         0         Flow Control Update Violation (opt. checks)        |   
                                                 int_xadm_fc_prot_err                               |
<21>    RQO      R/W1C    0x0         0         Receive queue overflow. Normally happens only when |   
                                                 flow control advertisements are ignored            |
                                                 radm_qoverflow                                     |
<22>    RAUC     R/W1C    0x0         0         Received an unexpected completion                  |   
                                                 radm_unexp_cpl_err                                 |
<23>    RACUR    R/W1C    0x0         0         Received a completion with UR status               |   
                                                 radm_rcvd_cpl_ur                                   |
<24>    RACCA    R/W1C    0x0         0         Received a completion with CA status               |   
                                                 radm_rcvd_cpl_ca                                   |
<25>    CAAR     R/W1C    0x0         0         Completer aborted a request                        |   
                                                 radm_rcvd_ca_req                                   |
                                                 This bit will never be set because Octeon does     |
                                                 not generate Completer Aborts.                     |
<26>    RARWDNS  R/W1C    0x0         0         Recieved a request which device does not support   |   
                                                 radm_rcvd_ur_req                                   |
<27>    RAMTLP   R/W1C    0x0         0         Received a malformed TLP                           |   
                                                 radm_mlf_tlp_err                                   |
<28>    RACPP    R/W1C    0x0         0         Received a completion with poisoned payload        |   
                                                 radm_rcvd_cpl_poisoned                             |
<29>    RAWWPP   R/W1C    0x0         0         Received a write with poisoned payload             |   
                                                 radm_rcvd_wreq_poisoned                            |
<30>    ECRC_E   R/W1C    0x0         0         Received a ECRC error.                             |   
                                                 radm_ecrc_err                                      |
<63:31> RSVD     RAZ      NS          NS        Reserved.                                          |   
----------------------------------------------------------------------------------------------------
===

*
*                  PESC_BIST_STATUS = PESC Bist Status
*
* Contains the diffrent interrupt summary bits of the PESC.
*

     ==============================================================
     PESC(0..1)_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     SOT      RO        0           0        SOT Buffer.                                        |   
<1>     RQHDR0   RO        0           0        Rx Queue Header0.                                  |   
<2>     RQHDR1   RO        0           0        Rx Queue Header1.                                  |   
<3>     RQDATA4  RO        0           0        Rx Queue Data Memory4.                             |   
<4>     RQDATA3  RO        0           0        Rx Queue Data Memory3.                             |   
<5>     RQDATA2  RO        0           0        Rx Queue Data Memory2.                             |   
<6>     RQDATA1  RO        0           0        Rx Queue Data Memory1.                             |   
<7>     RQDATA0  RO        0           0        Rx Queue Data Memory0.                             |   
<8>     RETRY    RO        0           0        Retry Buffer.                                      |   
<9>     PTLP_OR  RO        0           0        P-TLP Order Fifo.                                  |   
<10>    NTLP_OR  RO        0           0        N-TLP Order Fifo.                                  |   
<11>    CTLP_OR  RO        0           0        C-TLP Order Fifo.                                  |   
<63:12> NS       RAZ       NS          NS       Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PESC_DIAG_STATUS = PESC Diagnostic Status
 *
 * Selection control for the cores diagnostic bus.
 *

     ==============================================================
     PESC(0..1)_DIAG_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     AUX_EN   RO        0           0        Auxilary Power Enable.                             |   
<1>     PM_EN    RO        0           0        Power Management Event Enable.                     |   
<2>     PM_STAT  RO        0           0        Power Management Status.                           |   
<3>     PM_DST   RO        0           0        Current power management DSTATE.                   |   
<63:4>  NS       RO        NS          NS       Reserved                                           |   
----------------------------------------------------------------------------------------------------
===


 *
 *                  PESC_CFG_WR = PESC Configuration Write
 *
 * Allows write access to the configuration in the PCIe Core.
 *

     ==============================================================
     PESC(0..1)_CFG_WR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  ADDR     R/W      0           NS        Address to write. A write to this register starts  |   
                                                 a write operation.                                 |
<63:32> DATA     R/W      0           NS        Data to write. A write to this register starts     |   
                                                 a write operation.                                 |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PESC_CFG_RD = PESC Configuration Read
 *
 * Allows read access to the configuration in the PCIe Core.
 *

     ==============================================================
     PESC(0..1)_CFG_RD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  ADDR     R/W      0           NS        Address to read. A write to this register          |   
                                                 starts a read operation.                           |
<63:32> DATA     R/W      0           NS        Data.                                              |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PESC_TLP_CREDITS = PESC TLP Credits
 *
 * Specifies the number of credits the PESC for use in moving TLPs.
 *

     ==============================================================
     PESC(0..1)_TLP_CREDITS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<4:0>   NPEI_P   R/W      2           2         TLP credits for Posted TLPs in the NPEI.           |   
<9:5>   NPEI_NP  R/W      2           2         TLP credits for Non-Posted TLPs in the NPEI.       |   
<14:10> NPEI_CPL R/W      2           2         TLP credits for Completion TLPs in the NPEI.       |   
<19:15> PESC_P   R/W      2           2         TLP credits for Posted TLPs in the Peer.           |   
<24:20> PESC_NP  R/W      2           2         TLP credits for Non-Posted TLPs in the Peer.       |   
<29:25> PESC_CPL R/W      2           2         TLP credits for Completion TLPs in the Peer.       |   
<37:30> PEAI_PPF R/W      3           3         TLP credits for Completion TLPs in the Peer.       |   
<63:38> NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PESC_P2P_BAR#_START = PESC Peer-To-Peer BAR0 Start
 *
 * The starting address and enable for addresses to forwarded to the PCIe peer port.
 *

     ==============================================================
     PESC(0..1)_P2P_BAR(0..3)_START Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>  RSVD     RAZ      NS                NS        Reserved.                                          | 
<63:12> ADDR     R/W      0xfffffffffffff   NS        The starting address of the address window created | 
                                                       this field and the PESC_P2P_BAR0_END[63:12] field. |
                                                       The full 64-bits of address are created by:        |
                                                       {ADDR[63:12], 12'b0}.                              |       
----------------------------------------------------------------------------------------------------
===

 *
 *                  PESC_P2P_BAR#_END = PESC Peer-To-Peer BAR0 End
 *
 * The ending address for addresses to forwarded to the PCIe peer port.
 *

     ==============================================================
     PESC(0..1)_P2P_BAR(0..3)_END Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>  RSVD     RAZ      NS                NS        Reserved                                           | 
<63:12> ADDR     R/W      0xfffffffffffff   NS        The ending address of the address window created   | 
                                                       this field and the PESC_P2P_BAR0_START[63:12]      |
                                                       field. The full 64-bits of address are created by: |
                                                       {ADDR[63:12], 12'b0}.                              |       
----------------------------------------------------------------------------------------------------
===

 *
 *                  PESC_P2N_BAR0_START = PESC PCIe to Npei BAR0 Start
 *
 * The starting address for addresses to forwarded to the NPEI in RC Mode.
 *

     ==============================================================
     PESC(0..1)_P2N_BAR0_START Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 
<13:0>  NS       RAZ      NS          NS        Reserved                                           |   
<63:14> ADDR     R/W      0x0         0         The starting address of the 16KB address space that|   
                                                 is the BAR0 address space.                         |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PESC_P2N_BAR1_START = PESC PCIe to Npei BAR1 Start
 *
 * The starting address for addresses to forwarded to the NPEI in RC Mode.
 *

     ==============================================================
     PESC(0..1)_P2N_BAR1_START Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 
<25:0>  NS       RAZ      NS          NS        Reserved                                           |   
<63:26> ADDR     R/W      0x0         0         The starting address of the 64KB address space     |   
                                                 that is the BAR1 address space.                    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PESC_P2N_BAR2_START = PESC PCIe to Npei BAR2 Start
 *
 * The starting address for addresses to forwarded to the NPEI in RC Mode.
 *

     ==============================================================
     PESC(0..1)_P2N_BAR2_START Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<38:0>  NS       RAZ      NS          NS        Reserved                                           |   
<63:39> ADDR     R/W      0x0         0         The starting address of the 2^39 address space     |   
                                                 that is the BAR2 address space.                    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PESC_CPL_LUT_VALID = PESC Cmpletion Lookup Table Valid
 *
 * Bit set for outstanding tag read.
 *

     ==============================================================
     PESC(0..1)_CPL_LUT_VALID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  TAG      RO       0x0         0         Bit vector set cooresponds to an outstanding tag   |   
                                                 expecting a completion.                            |
<63:32> NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PESC(0..1)_DBG_INFO_EN = PESC Debug Information Enable
 *
 * Allows PESC_DBG_INFO to generate interrupts when cooresponding enable bit is set.
 *

     ==============================================================
     PESC(0..1)_DBG_INFO_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     SPOISON  R/W      0x0         0         Allows PESC_DBG_INFO[0] to generate an interrupt.  |   
<1>     RTLPMAL  R/W      0x0         0         Allows PESC_DBG_INFO[1] to generate an interrupt.  |   
<2>     RTLPLLE  R/W      0x0         0         Allows PESC_DBG_INFO[2] to generate an interrupt.  |   
<3>     RECRCE   R/W      0x0         0         Allows PESC_DBG_INFO[3] to generate an interrupt.  |   
<4>     RPOISON  R/W      0x0         0         Allows PESC_DBG_INFO[4] to generate an interrupt.  |   
<5>     RCEMRC   R/W      0x0         0         Allows PESC_DBG_INFO[5] to generate an interrupt.  |   
<6>     RNFEMRC  R/W      0x0         0         Allows PESC_DBG_INFO[6] to generate an interrupt.  |   
<7>     RFEMRC   R/W      0x0         0         Allows PESC_DBG_INFO[7] to generate an interrupt.  |   
<8>     RPMERC   R/W      0x0         0         Allows PESC_DBG_INFO[8] to generate an interrupt.  |   
<9>     RPTAMRC  R/W      0x0         0         Allows PESC_DBG_INFO[9] to generate an interrupt.  |   
<10>    RUMEP    R/W      0x0         0         Allows PESC_DBG_INFO[10] to generate an interrupt. |   
<11>    RVDM     R/W      0x0         0         Allows PESC_DBG_INFO[11] to generate an interrupt. |   
<12>    ACTO     R/W      0x0         0         Allows PESC_DBG_INFO[12] to generate an interrupt. |   
<13>    RTE      R/W      0x0         0         Allows PESC_DBG_INFO[13] to generate an interrupt. |   
<14>    MRE      R/W      0x0         0         Allows PESC_DBG_INFO[14] to generate an interrupt. |   
<15>    RDWDLE   R/W      0x0         0         Allows PESC_DBG_INFO[15] to generate an interrupt. |   
<16>    RTWDLE   R/W      0x0         0         Allows PESC_DBG_INFO[16] to generate an interrupt. |   
<17>    DPEOOSD  R/W      0x0         0         Allows PESC_DBG_INFO[17] to generate an interrupt. |   
<18>    FCPVWT   R/W      0x0         0         Allows PESC_DBG_INFO[18] to generate an interrupt. |   
<19>    RPE      R/W      0x0         0         Allows PESC_DBG_INFO[19] to generate an interrupt. |   
<20>    FCUV     R/W      0x0         0         Allows PESC_DBG_INFO[20] to generate an interrupt. |   
<21>    RQO      R/W      0x0         0         Allows PESC_DBG_INFO[21] to generate an interrupt. |   
<22>    RAUC     R/W      0x0         0         Allows PESC_DBG_INFO[22] to generate an interrupt. |   
<23>    RACUR    R/W      0x0         0         Allows PESC_DBG_INFO[23] to generate an interrupt. |   
<24>    RACCA    R/W      0x0         0         Allows PESC_DBG_INFO[24] to generate an interrupt. |   
<25>    CAAR     R/W      0x0         0         Allows PESC_DBG_INFO[25] to generate an interrupt. |   
<26>    RARWDNS  R/W      0x0         0         Allows PESC_DBG_INFO[26] to generate an interrupt. |   
<27>    RAMTLP   R/W      0x0         0         Allows PESC_DBG_INFO[27] to generate an interrupt. |   
<28>    RACPP    R/W      0x0         0         Allows PESC_DBG_INFO[28] to generate an interrupt. |   
<29>    RAWWPP   R/W      0x0         0         Allows PESC_DBG_INFO[29] to generate an interrupt. |   
<30>    ECRC_E   R/W      0x0         0         Allows PESC_DBG_INFO[30] to generate an interrupt. |   
<63:31> RSVD     RAZ      NS          NS        Reserved.                                          |   
----------------------------------------------------------------------------------------------------
===


* Below are in PESC
*
*                  PESC(0..1)_BIST_STATUS2 = PESC BIST Status Register
*
* Results from BIST runs of PESC's memories.
*

     ==============================================================
     PESC(0..1)_CTL_STATUS2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     PCIERST  RO       0x0         0         Set to '1' when PCIe is in reset.                  |   
<63:1>  NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===
*
*                  PESC(0..1)_BIST_STATUS2 = PESC BIST Status Register
*
* Results from BIST runs of PESC's memories.
*

     ==============================================================
     PESC(0..1)_BIST_STATUS2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     PPF      RO       0x0         0         BIST Status for the ppf_fifo                       |   
<1>     PEF_TC0  RO       0x0         0         BIST Status for the pef_tlp_cpl_fifo0              |   
<2>     PEF_TCF1 RO       0x0         0         BIST Status for the pef_tlp_cpl_fifo1              |   
<3>     PEF_TNF  RO       0x0         0         BIST Status for the pef_tlp_n_fifo                 |   
<4>     PEF_TPF0 RO       0x0         0         BIST Status for the pef_tlp_p_fifo0                |   
<5>     PEF_TPF1 RO       0x0         0         BIST Status for the pef_tlp_p_fifo1                |   
<6>     RSL_P2E  RO       0x0         0         BIST Status for the rsl_p2e_fifo                   |   
<7>     PEAI_P2E RO       0x0         0         BIST Status for the peai__pesc_fifo                |   
<8>     DBG_P2E  RO       0x0         0         BIST Status for the dbg_p2e_fifo                   |   
<9>     E2P_RSL  RO       0x0         0         BIST Status for the e2p_rsl__fifo                  |   
<10>    E2P_P    RO       0x0         0         BIST Status for the e2p_p_fifo                     |   
<11>    E2P_N    RO       0x0         0         BIST Status for the e2p_n_fifo                     |   
<12>    E2P_CPL  RO       0x0         0         BIST Status for the e2p_cpl_fifo                   |   
<13>    CTO_P2E  RO       0x0         0         BIST Status for the cto_p2e_fifo                   |   
<63:14> NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===




 *
 * PIP_BIST_STATUS = PIP's BIST Results
 *

     ==============================================================
     PIP_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:18> RSVRD    RAZ      NS          NS        Reserved                                           |   
<17:0>  BIST     RO       0x0         0         BIST Results.                                      |   
                                                  HW sets a bit in BIST for for memory that fails   |
                                                  BIST.                                             |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_INT_REG = PIP's Interrupt Register
 *
 * Any exception event that occurs is captured in the PIP_INT_REG.
 * PIP_INT_REG will set the exception bit regardless of the value
 * of PIP_INT_EN.  PIP_INT_EN only controls if an interrupt is
 * raised to software.
 *

     ==============================================================
     PIP_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:12> RSVRD    RAZ      NS          NS        Reserved                                           |   
<11>    LENERR   R/W1C    0x0         0         Frame was received with length error               |   
<10>    MAXERR   R/W1C    0x0         0         Frame was received with length > max_length        |   
<9>     MINERR   R/W1C    0x0         0         Frame was received with length < min_length        |   
<8>     BEPERR   R/W1C    0x0         0         Parity Error in back end memory                    |   
<7>     FEPERR   R/W1C    0x0         0         Parity Error in front end memory                   |   
<6>     TODOOVR  R/W1C    0x0         0         Todo list overflow (see PIP_BCK_PRS[HIWATER])      |   
<5>     SKPRUNT  R/W1C    0x0         0         Packet was engulfed by skipper                     |   
                                                  This interrupt can occur with received PARTIAL    |
                                                  packets that are truncated to SKIP bytes or       |
                                                  smaller.                                          |
<4>     BADTAG   R/W1C    0x0         0         A bad tag was sent from IPD                        |   
<3>     PRTNXA   R/W1C    0x0         0         Non-existent port                                  |   
<2>     BCKPRS   R/W1C    0x0         0         PIP asserted backpressure                          |   
<1>     CRCERR   R/W1C    0x0         0         PIP calculated bad CRC                             |   
                                                  (Disabled in 56xx)                                |
<0>     PKTDRP   R/W1C    0x0         0         Packet Dropped due to QOS                          |   

Notes:
* TODOOVR
  The PIP Todo list stores packets that have been received and require work
  queue entry generation.  PIP will normally assert backpressure when the
  list fills up such that any error is normally is result of a programming
  the PIP_BCK_PRS[HIWATER] incorrectly.  PIP itself can handle 29M
  packets/sec @500MHz or 15Gbs @ 64B packets.

* SKPRUNT
  If a packet size is less then the amount programmed in the per port
  skippers, then there will be nothing to parse and the entire packet will
  basically be skipped over.  This is probably not what the user desired, so
  there is an indication to software.

* BADTAG
  A tag is considered bad when it is resued by a new packet before it was
  released by PIP.  PIP considers a tag released by one of two methods.
  . QOS dropped so that it is released over the pip__ipd_release bus.
  . WorkQ entry is validated by the pip__ipd_done signal

* PRTNXA
  If PIP receives a packet that is not in the valid port range, the port
  processed will be mapped into the valid port space (the mapping is
  currently unpredictable) and the PRTNXA bit will be set.  PRTNXA will be
  set for packets received under the following conditions:

  * packet ports (ports 0-31)
    - GMX_INF_MODE[TYPE]==0 (SGMII), received port is 4-15 or 20-31
    - GMX_INF_MODE[TYPE]==1 (XAUI),  received port is 1-15 or 17-31
  * upper ports (pci and loopback ports 32-63)
    - received port is 40-47 or 52-63

* BCKPRS
  PIP can assert backpressure to the receive logic when the todo list
  exceeds a high-water mark (see PIP_BCK_PRS for more details).  When this
  occurs, PIP can raise an interrupt to software.

* CRCERR
  Octane can compute CRC in two places.  Each RGMII port will compute its
  own CRC, but PIP can provide an additional check or check loopback or
  PCI ports. If PIP computes a bad CRC, then PIP will raise an interrupt.

* PKTDRP
  PIP can drop packets based on QOS results received from IPD.  If the QOS
  algorithm decides to drop a packet, PIP will assert an interrupt.
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_INT_EN = PIP's Interrupt Enable Register
 *
 * Determines if hardward should raise an interrupt to software
 * when an exception event occurs.
 *

     ==============================================================
     PIP_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:12> RSVRD    RAZ      NS          NS        Reserved                                           |   
<11>    LENERR   R/W      0x0         0         Frame was received with length error               |   
<10>    MAXERR   R/W      0x0         0         Frame was received with length > max_length        |   
<9>     MINERR   R/W      0x0         0         Frame was received with length < min_length        |   
<8>     BEPERR   R/W      0x0         0         Parity Error in back end memory                    |   
<7>     FEPERR   R/W      0x0         0         Parity Error in front end memory                   |   
<6>     TODOOVR  R/W      0x0         0         Todo list overflow (see PIP_BCK_PRS[HIWATER])      |   
<5>     SKPRUNT  R/W      0x0         0         Packet was engulfed by skipper                     |   
<4>     BADTAG   R/W      0x0         0         A bad tag was sent from IPD                        |   
<3>     PRTNXA   R/W      0x0         0         Non-existent port                                  |   
<2>     BCKPRS   R/W      0x0         0         PIP asserted backpressure                          |   
<1>     CRCERR   R/W      0x0         0         PIP calculated bad CRC                             |   
                                                  (Disabled in 56xx)                                |
<0>     PKTDRP   R/W      0x0         0         Packet Dropped due to QOS                          |   
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_STAT_CTL = PIP's Stat Control Register
 *
 * Controls how the PIP statistics counters are handled.
 *

     ==============================================================
     PIP_STAT_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<0>     RDCLR    R/W      0x1         1         Stat registers are read and clear                  |   
                                                  0 = stat registers hold value when read           |
                                                  1 = stat registers are cleared when read          |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_GBL_CTL = PIP's Global Control Register
 *
 * Global control information.  These are the global checker enables for
 * IPv4/IPv6 and TCP/UDP parsing.  The enables effect all ports.
 *

     ==============================================================
     PIP_GBL_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:21> RSVRD    RAZ      NS          NS        Reserved                                           |   
<20>    RING_EN  R/W      0           1         Enable PCIe ring information in WQE                |   
<19:17> SPARE    R/W      0           0         Spare Bits                                         |   
<16>    IGNRS    R/W      0           0         Ignore the PKT_INST_HDR[RS] bit when set           |   
                                                  Does not apply to PCI ports (32-35)               |
                                                  When using 2-byte instruction header words,       |
                                                  either PIP_PRT_CFG[DYN_RS] or IGNRS should be set |
<15>    VS_WQE   R/W      0           0         Which VLAN CFI and ID to use when VLAN Stacking    |   
                                                  0=use the 1st (network order) VLAN                |
                                                  1=use the 2nd (network order) VLAN                |
<14>    VS_QOS   R/W      0           0         Which VLAN priority to use when VLAN Stacking      |   
                                                  0=use the 1st (network order) VLAN                |
                                                  1=use the 2nd (network order) VLAN                |
<13>    L2_MAL   R/W      1           1         Enable L2 malformed packet check                   |   
<12>    TCP_FLAG R/W      1           1         Enable TCP flags checks                            |   
<11>    L4_LEN   R/W      1           1         Enable TCP/UDP length check                        |   
<10>    L4_CHK   R/W      1           1         Enable TCP/UDP checksum check                      |   
<9>     L4_PRT   R/W      1           1         Enable TCP/UDP illegal port check                  |   
<8>     L4_MAL   R/W      1           1         Enable TCP/UDP malformed packet check              |   
<7:6>   RSVRD    RAZ      NS          NS        Reserved                                           |   
<5:4>   IP6_EEXT R/W      1           3         Enable IPv6 early extension headers                |   
<3>     IP4_OPTS R/W      1           1         Enable IPv4 options check                          |   
<2>     IP_HOP   R/W      1           1         Enable TTL (IPv4) / hop (IPv6) check               |   
<1>     IP_MAL   R/W      1           1         Enable malformed check                             |   
<0>     IP_CHK   R/W      1           1         Enable IPv4 header checksum check                  |   

Notes:
The following text describes the conditions in which each checker will
assert and flag an exception.  By disabling the checker, the exception will
not be flagged and the packet will be parsed as best it can.  Note, by
disabling conditions, packets can be parsed incorrectly (.i.e. IP_MAL and
L4_MAL could cause bits to be seen in the wrong place.  IP_CHK and L4_CHK
means that the packet was corrupted).

* IP_CHK
  Indicates that an IPv4 packet contained an IPv4 header checksum
  violations.  Only applies to packets classified as IPv4.

* IP_MAL
  Indicates that the packet was malformed.  Malformed packets are defined as
  packets that are not long enough to cover the IP header or not long enough
  to cover the length in the IP header.

* IP_HOP
  Indicates that the IPv4 TTL field or IPv6 HOP field is zero.

* IP4_OPTS
  Indicates the presence of IPv4 options.  It is set when the length != 5.
  This only applies to packets classified as IPv4.

* IP6_EEXT
  Indicate the presence of IPv6 early extension headers.  These bits only
  apply to packets classified as IPv6.  Bit 0 will flag early extensions
  when next_header is any one of the following...

        - hop-by-hop (0)
        - destination (60)
        - routing (43)

  Bit 1 will flag early extentions when next_header is NOT any of the
  following...

        - TCP (6)
        - UDP (17)
        - fragmentation (44)
        - ICMP (58)
        - IPSEC ESP (50)
        - IPSEC AH (51)
        - IPCOMP

* L4_MAL
  Indicates that a TCP or UDP packet is not long enough to cover the TCP or
  UDP header.

* L4_PRT
  Indicates that a TCP or UDP packet has an illegal port number - either the
  source or destination port is zero.

* L4_CHK
  Indicates that a packet classified as either TCP or UDP contains an L4
  checksum failure

* L4_LEN
  Indicates that the TCP or UDP length does not match the the IP length.

* TCP_FLAG
  Indicates any of the following conditions...

        {URG, ACK, PSH, RST, SYN, FIN} : tcp_flag
        6'b000001: (FIN only)
        6'b000000: (0)
        6'bxxx1x1: (RST+FIN+*)
        6'b1xxx1x: (URG+SYN+*)
        6'bxxx11x: (RST+SYN+*)
        6'bxxxx11: (SYN+FIN+*)
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_GBL_CFG = PIP's Global Config Register
 *
 * Global config information that applies to all ports.
 *

     ==============================================================
     PIP_GBL_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:19> RSVRD2   RAZ      NS          NS        Reserved                                           |   
<18>    TAG_SYN  R/W      0           0         Do not include src_crc for TCP/SYN&!ACK packets    |   
                                                  0 = include src_crc                               |
                                                  1 = tag hash is dst_crc for TCP/SYN&!ACK packets  |
<17>    IP6_UDP  R/W      1           1         IPv6/UDP checksum is not optional                  |   
                                                  0 = Allow optional checksum code                  |
                                                  1 = Do not allow optional checksum code           |
<16>    MAX_L2   R/W      0           0         Config bit to choose the largest L2 frame size     |   
                                                  Chooses the value of the L2 Type/Length field     |
                                                  to classify the frame as length.                  |
                                                  0 = 1500 / 0x5dc                                  |
                                                  1 = 1535 / 0x5ff                                  |
<15:11> RSVRD1   RAZ      NS          NS        Reserved                                           |   
<10:8>  RAW_SHF  R/W      0           0         RAW Packet shift amount                            |   
                                                  Number of bytes to pad a RAW packet.              |
<7:3>   RSVRD0   RAZ      NS          NS        Reserved                                           |   
<2:0>   NIP_SHF  R/W      0           0         Non-IP shift amount                                |   
                                                  Number of bytes to pad a packet that has been     |
                                                  classified as not IP.                             |

Notes:
* IP6_UDP
  IPv4 allows optional UDP checksum by sending the all 0's patterns.  IPv6
  outlaws this and the spec says to always check UDP checksum.  This mode
  bit allows the user to treat IPv6 as IPv4, meaning that the all 0's
  pattern will cause a UDP checksum pass.
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_SFT_RST = PIP Soft Reset
 *
 * When written to a '1', resets the pip block
 *

     ==============================================================
     PIP_SFT_RST Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  NS       RAZ      NS          NS        Reserved                                           |   
<0>     RST      R/W      0x0         0x0       Soft Reset                                         |   

Notes:
When RST is set to a '1' by SW, PIP will get a short reset pulse (3 cycles
in duration).  Although this will reset much of PIP's internal state, some
CSRs will not reset.

. PIP_BIST_STATUS
. PIP_STAT0_PRT*
. PIP_STAT1_PRT*
. PIP_STAT2_PRT*
. PIP_STAT3_PRT*
. PIP_STAT4_PRT*
. PIP_STAT5_PRT*
. PIP_STAT6_PRT*
. PIP_STAT7_PRT*
. PIP_STAT8_PRT*
. PIP_STAT9_PRT*
. PIP_STAT_INB_PKTS*
. PIP_STAT_INB_OCTS*
. PIP_STAT_INB_ERRS*
. PIP_TAG_INC*
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_BCK_PRS = PIP's Back Pressure Register
 *
 * When to assert backpressure based on the todo list filling up
 *

     ==============================================================
     PIP_BCK_PRS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63>    BCKPRS   RO       0           0         PIP is currently asserting backpressure to IOB     |   
                                                  Backpressure from PIP will assert when the        |
                                                  entries to the todo list exceed HIWATER.          |
                                                  Backpressure will be held until the todo entries  |
                                                  is less than or equal to LOWATER.                 |
<62:13> RSVRD1   RAZ      0           NS        Reserved                                           |   
<12:8>  HIWATER  R/W      24          24        Water mark in the todo list to assert backpressure |   
                                                  Legal values are 1-26.  A 0 value will deadlock   |
                                                  the machine.  A value > 26, will trash memory     |
<7:5>   RSVRD0   RAZ      0           NS        Reserved                                           |   
<4:0>   LOWATER  R/W      4           4         Water mark in the todo list to release backpressure|   
                                                  The LOWATER value should be < HIWATER.            |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_IP_OFFSET = Location of the IP in the workQ entry
 *
 * An 8-byte offset to find the start of the IP header in the data portion of IP workQ entires
 *

     ==============================================================
     PIP_IP_OFFSET Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:3>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<2:0>   OFFSET   R/W      0x0         0x0       Number of 8B ticks to include in workQ entry       |   
                                                  prior to IP data                                  |
                                                  0:  0 Bytes / IP start at WORD4 of workQ entry    |
                                                  1:  8 Bytes / IP start at WORD5 of workQ entry    |
                                                  2: 16 Bytes / IP start at WORD6 of workQ entry    |
                                                  3: 24 Bytes / IP start at WORD7 of workQ entry    |
                                                  4: 32 Bytes / IP start at WORD8 of workQ entry    |
                                                  5: 40 Bytes / IP start at WORD9 of workQ entry    |
                                                  6: 48 Bytes / IP start at WORD10 of workQ entry   |
                                                  7: 56 Bytes / IP start at WORD11 of workQ entry   |

Notes:
In normal configurations, OFFSET must be set in the 0..4 range to allow the
entire IP and TCP/UDP headers to be buffered in HW and calculate the L4
checksum for TCP/UDP packets.

The MAX value of OFFSET is determined by the the types of packets that can
be sent to PIP as follows...

Packet Type              MAX OFFSET
IPv4/TCP/UDP             7
IPv6/TCP/UDP             5
IPv6/without L4 parsing  6

If the L4 can be ignored, then the MAX OFFSET for IPv6 packets can increase
to 6.  Here are the following programming restrictions for IPv6 packets and
OFFSET==6:

 . PIP_GBL_CTL[TCP_FLAG] == 0
 . PIP_GBL_CTL[L4_LEN]   == 0
 . PIP_GBL_CTL[L4_CHK]   == 0
 . PIP_GBL_CTL[L4_PRT]   == 0
 . PIP_GBL_CTL[L4_MAL]   == 0
 . PIP_DEC_IPSEC[TCP]    == 0
 . PIP_DEC_IPSEC[UDP]    == 0
 . PIP_PRT_TAG[IP6_DPRT] == 0
 . PIP_PRT_TAG[IP6_SPRT] == 0
 . PIP_PRT_TAG[TCP6_TAG] == 0
 . PIP_GBL_CFG[TAG_SYN]  == 0
----------------------------------------------------------------------------------------------------
===


 *
 * PIP_TAG_SECRET = Initial value in tag generation
 *
 * The source and destination IV's provide a mechanism for each Octeon to be unique.
 *

     ==============================================================
     PIP_TAG_SECRET Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVRD    RAZ      NS          NS        Reserved                                           |   
<31:16> DST      R/W      0x0         0x0       Secret for the destination tuple tag CRC calc      |   
<15:0>  SRC      R/W      0x0         0x0       Secret for the source tuple tag CRC calc           |   
----------------------------------------------------------------------------------------------------
===


 *
 * PIP_TAG_MASK = Mask bit in the tag generation
 *

     ==============================================================
     PIP_TAG_MASK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVRD    RAZ      NS          NS        Reserved                                           |   
<15:0>  MASK     R/W      0x0         0x0       When set, MASK clears individual bits of lower 16  |   
                                                  bits of the computed tag.  Does not effect RAW    |
                                                  or INSTR HDR packets.                             |
----------------------------------------------------------------------------------------------------
===


 *
 * PIP_TODO_ENTRY = Head entry of the Todo list (debug only)
 *
 * Summary of the current packet that has completed and waiting to be processed
 *

     ==============================================================
     PIP_TODO_ENTRY Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63>    VAL      RO       NS          NS        Entry is valid                                     |   
<62>    RSVRD    RAZ      NS          NS        Reserved                                           |   
<61:0>  ENTRY    RO       NS          NS        Todo list entry summary                            |   
----------------------------------------------------------------------------------------------------
===

 
 *
 * PIP_DEC_IPSEC = UDP or TCP ports to watch for DEC IPSEC
 *
 * PIP sets the dec_ipsec based on TCP or UDP destination port.
 *

     ==============================================================
     PIP_DEC_IPSEC(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:18> RSVRD    RAZ      NS          NS        Reserved                                           |   
<17>    TCP      R/W      0x0         0x0       This DPRT should be used for TCP packets           |   
<16>    UDP      R/W      0x0         0x0       This DPRT should be used for UDP packets           |   
<15:0>  DPRT     R/W      0x0000      0x0000    UDP or TCP destination port to match on            |   
----------------------------------------------------------------------------------------------------
===


 *
 * PIP_RAW_WORD = The RAW Word2 of the workQ entry.
 *
 * The RAW Word2 to be inserted into the workQ entry of RAWFULL packets.
 *

     ==============================================================
     PIP_RAW_WORD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:56> RSVRD    RAZ      NS          NS        Reserved                                           |   
<55:0>  WORD     R/W      0x0         0x0       Word2 of the workQ entry                           |   
                                                  The 8-bit bufs field is still set by HW (IPD)     |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_QOS_VLAN@ = QOS VLAN Tables
 *
 * If the PIP indentifies a packet to be VLAN tagged, then the QOS
 * can be set based on the VLAN user priority.  These eight register
 * comprise the QOS values for all VLAN user priority values.
 * 

     ==============================================================
     PIP_QOS_VLAN(0..7) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:3>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<2:0>   QOS      R/W      0x0         0x0       VLAN QOS level                                     |   
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_QOS_WATCH@ = QOS Watcher Tables
 * 
 * Sets up the Configuration CSRs for the four QOS Watchers.
 * Each Watcher can be set to look for a specific protocol,
 * TCP/UDP destination port, or Ethertype to override the
 * default QOS value.
 * 

     ==============================================================
     PIP_QOS_WATCH(0..7) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> RSVRD3   RAZ      NS          NS        Reserved                                           |   
<47:32> MASK     R/W      0x0         0x0       Mask off a range of values                         |   
<31:28> RSVRD2   RAZ      NS          NS        Reserved                                           |   
<27:24> GRP      R/W      0x0         0x0       The GRP number of the watcher                      |   
<23>    RSVRD1   RAZ      NS          NS        Reserved                                           |   
<22:20> WATCHER  R/W      0x0         0x0       The QOS level of the watcher                       |   
<19>    RSVRD0   RAZ      NS          NS        Reserved                                           |   
<18:16> TYPE     R/W      0x0         0x0       The field for the watcher match against            |   
                                                  0   = disable across all ports                    |
                                                  1   = protocol (ipv4)                             |
                                                      = next_header (ipv6)                          |
                                                  2   = TCP destination port                        |
                                                  3   = UDP destination port                        |
                                                  4   = Ether type                                  |
                                                  5-7 = Reserved                                    |
<15:0>  MATCH    R/W      0x0000      0x0000    The value to watch for                             |   
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PIP_FRM_LEN_CHK(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVRD    RAZ      NS          NS        Reserved                                           |   
<31:16> MAXLEN   R/W      0x600       0x600    Byte count for Max-sized frame check                |   
                                                  PIP_PRT_CFGn[MAXERR_EN] enables the check for     |
                                                  port n.                                           |
                                                  If enabled, failing packets set the MAXERR        |
                                                  interrupt and work-queue entry WORD2[opcode] is   |
                                                  set to OVER_FCS (0x3, if packet has bad FCS) or   |
                                                  OVER_ERR (0x4, if packet has good FCS).           |
                                                  The effective MAXLEN used by HW is                |
                                                  PIP_FRM_LEN_CHK[MAXLEN] + 4*VV + 4*VS             |
<15:0>  MINLEN   R/W      0x40        0x40      Byte count for Min-sized frame check               |   
                                                  PIP_PRT_CFGn[MINERR_EN] enables the check for     |
                                                  port n.                                           |
                                                  If enabled, failing packets set the MINERR        |
                                                  interrupt and work-queue entry WORD2[opcode] is   |
                                                  set to UNDER_FCS (0x6, if packet has bad FCS) or  |
                                                  UNDER_ERR (0x8, if packet has good FCS).          |

Notes:
PIP_FRM_LEN_CHK0 is used for packets on packet interface0, PCI, PCI RAW, and PKO loopback ports.
PIP_FRM_LEN_CHK1 is used for packets on packet interface1.
----------------------------------------------------------------------------------------------------
===


 *
 * PIP_PRT_CFG@ = Per port config information
 *

     ==============================================================
     PIP_PRT_CFG(0..3,16..19,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:53> RSVRD6   RAZ      NS          NS        Reserved                                           |   
<52>    PAD_LEN  R/W      0x0         0         When set, disables the length check for pkts with  |   
                                                  padding in the client data                        |
<51>    VLAN_LEN R/W      0x0         0         When set, disables the length check for VLAN pkts  |   
<50>    LENERR_EN R/W     0x1         1         L2 length error check enable                       |   
                                                  Frame was received with length error              |
<49>    MAXERR_EN R/W     0x1         1         Max frame error check enable                       |   
                                                  Frame was received with length > max_length       |
<48>    MINERR_EN R/W     0x1         1         Min frame error check enable                       |   
                                                  Frame was received with length < min_length       |
<47:44> GRP_WAT_47 R/W    0x0         0x0       GRP Watcher enable                                 |   
                                                  (Watchers 4-7)                                    |
<43:40> QOS_WAT_47 R/W    0x0         0x0       QOS Watcher enable                                 |   
                                                  (Watchers 4-7)                                    |
<39:37> RSVRD5   RAZ      NS          NS        Reserved                                           |   
<36>    RAWDRP   R/W      0x0         0x0       Allow the IPD to RED drop a packet.                |   
                                                  Normally, IPD will never drop a packet that PIP   |
                                                  indicates is RAW.                                 |
                                                  0=never drop RAW packets based on RED algorithm   |
                                                  1=allow RAW packet drops based on RED algorithm   |
<35:34> TAG_INC  R/W      0x0         0x0       Which of the 4 PIP_TAG_INC to use when             |   
                                                  calculating mask tag hash                         |
<33>    DYN_RS   R/W      0x0         0x0       Dynamically calculate RS based on pkt size and     |   
                                                  configuration.  If DYN_RS is set then             |
                                                  PKT_INST_HDR[RS] is not used.  When using 2-byte  |
                                                  instruction header words, either DYN_RS or        |
                                                  PIP_GBL_CTL[IGNRS] should be set.                 |
<32>    INST_HDR R/W      0x0         0x0       8-byte INST_HDR is present on all packets          |   
                                                  (not for PCI prts, 32-35)                         |
<31:28> GRP_WAT  R/W      0x0         0x0       GRP Watcher enable                                 |   
<27>    RSVRD4   RAZ      NS          NS        Reserved                                           |   
<26:24> QOS      R/W      0x0         0x0       Default QOS level of the port                      |   
<23:20> QOS_WAT  R/W      0x0         0x0       QOS Watcher enable                                 |   
                                                  (Watchers 0-3)                                    |
<19>    RSVRD3   RAZ      NS          NS        Reserved                                           |   
<18>    QOS_VOD  R/W      0x0         0x0       QOS VLAN over Diffserv                             |   
                                                  if VLAN exists, it is used                        |
                                                  else if IP exists, Diffserv is used               |
                                                  else the per port default is used                 |
                                                  Watchers are still highest priority               |
<17>    QOS_DIFF R/W      0x0         0x0       QOS Diffserv                                       |   
<16>    QOS_VLAN R/W      0x0         0x0       QOS VLAN                                           |   
<15:13> RSVRD2   RAZ      NS          NS        Reserved                                           |   
<12>    CRC_EN   RO       0x0         0x0       CRC Checking enabled                               |   
                                                  (Disabled in 56xx)                                |
<11:10> RSVRD1   RAZ      NS          NS        Reserved                                           |   
<9:8>   MODE     R/W      0x0         0x0       Parse Mode                                         |   
                                                  0 = no packet inspection (Uninterpreted)          |
                                                  1 = L2 parsing / skip to L2                       |
                                                  2 = IP parsing / skip to L3                       |
                                                  3 = (illegal)                                     |
<7>     RSVRD0   RAZ      NS          NS        Reserved                                           |   
<6:0>   SKIP     R/W      0x0         0x0       Optional Skip I amount for packets.  Does not      |   
                                                  apply to packets on PCI ports when a PKT_INST_HDR |
                                                  is present.  See section 7.2.7 - Legal Skip       |
                                                  Values for further details.                       |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_PRT_TAG@ = Per port config information
 *

     ==============================================================
     PIP_PRT_TAG(0..3,16..19,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:40> RSVRD    RAZ      NS          NS        Reserved                                           |   
<39:36> GRPTAGBASE R/W    0           0         Offset to use when computing group from tag bits   |   
                                                  when GRPTAG is set.                               |
<35:32> GRPTAGMASK R/W    0           0         Which bits of the tag to exclude when computing    |   
                                                  group when GRPTAG is set.                         |
<31>    GRPTAG   R/W      0x0         0x0       When set, use the lower bit of the tag to compute  |   
                                                  the group in the work queue entry                 |
                                                  GRP = WQE[TAG[3:0]] & ~GRPTAGMASK + GRPTAGBASE    |
<30>    GRPTAG_MSKIP R/W  0x0         0x0       When set, GRPTAG will be used regardless if the    |   
                                                  packet IS_IP.                                     |
<29:28> TAG_MODE R/W      0x0         0x0       Which tag algorithm to use                         |   
                                                  0 = always use tuple tag algorithm                |
                                                  1 = always use mask tag algorithm                 |
                                                  2 = if packet is IP, use tuple else use mask      |
                                                  3 = tuple XOR mask                                |
<27:26> INC_VS   R/W      0x0         0x0       determines the VLAN ID (VID) to be included in     |   
                                                  tuple tag when VLAN stacking is detected          |
                                                  0 = do not include VID in tuple tag generation    |
                                                  1 = include VID (VLAN0) in hash                   |
                                                  2 = include VID (VLAN1) in hash                   |
                                                  3 = include VID ({VLAN0,VLAN1}) in hash           |
<25>    INC_VLAN R/W      0x0         0x0       when set, the VLAN ID is included in tuple tag     |   
                                                  when VLAN stacking is not detected                |
                                                  0 = do not include VID in tuple tag generation    |
                                                  1 = include VID in hash                           |
<24>    INC_PRT  R/W      0x0         0x0       sets whether the port is included in tuple tag     |   
<23>    IP6_DPRT R/W      0x0         0x0       sets whether the TCP/UDP dst port is               |   
                                                  included in tuple tag for IPv6 packets            |
<22>    IP4_DPRT R/W      0x0         0x0       sets whether the TCP/UDP dst port is               |   
                                                  included in tuple tag for IPv4                    |
<21>    IP6_SPRT R/W      0x0         0x0       sets whether the TCP/UDP src port is               |   
                                                  included in tuple tag for IPv6 packets            |
<20>    IP4_SPRT R/W      0x0         0x0       sets whether the TCP/UDP src port is               |   
                                                  included in tuple tag for IPv4                    |
<19>    IP6_NXTH R/W      0x0         0x0       sets whether ipv6 includes next header in tuple    |   
                                                  tag hash                                          |
<18>    IP4_PCTL R/W      0x0         0x0       sets whether ipv4 includes protocol in tuple       |   
                                                  tag hash                                          |
<17>    IP6_DST  R/W      0x0         0x0       sets whether ipv6 includes dst address in tuple    |   
                                                  tag hash                                          |
<16>    IP4_DST  R/W      0x0         0x0       sets whether ipv4 includes dst address in tuple    |   
                                                  tag hash                                          |
<15>    IP6_SRC  R/W      0x0         0x0       sets whether ipv6 includes src address in tuple    |   
                                                  tag hash                                          |
<14>    IP4_SRC  R/W      0x0         0x0       sets whether ipv4 includes src address in tuple    |   
                                                  tag hash                                          |
<13:12> TCP6_TAG R/W      0x0         0x0       sets the tag_type of a TCP packet (IPv6)           |   
                                                  0 = ordered tags                                  |
                                                  1 = atomic tags                                   |
                                                  2 = Null tags                                     |
<11:10> TCP4_TAG R/W      0x0         0x0       sets the tag_type of a TCP packet (IPv4)           |   
                                                  0 = ordered tags                                  |
                                                  1 = atomic tags                                   |
                                                  2 = Null tags                                     |
<9:8>   IP6_TAG  R/W      0x0         0x0       sets whether IPv6 packet tag type                  |   
                                                  0 = ordered tags                                  |
                                                  1 = atomic tags                                   |
                                                  2 = Null tags                                     |
<7:6>   IP4_TAG  R/W      0x0         0x0       sets whether IPv4 packet tag type                  |   
                                                  0 = ordered tags                                  |
                                                  1 = atomic tags                                   |
                                                  2 = Null tags                                     |
<5:4>   NON_TAG  R/W      0x0         0x0       sets whether non-IP packet tag type                |   
                                                  0 = ordered tags                                  |
                                                  1 = atomic tags                                   |
                                                  2 = Null tags                                     |
<3:0>   GRP      R/W      0x0         0x0       4-bit value indicating the group to schedule to    |   
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_QOS_DIFF@ = QOS Diffserv Tables
 *

     ==============================================================
     PIP_QOS_DIFF(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:3>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<2:0>   QOS      R/W      0x0         0x0       Diffserv QOS level                                 |   
----------------------------------------------------------------------------------------------------
===

 *
 *          PIP Statistics Counters
 *
 * Note: special stat counter behavior
 *
 * 1) Read and write operations must arbitrate for the statistics resources
 *     along with the packet engines which are incrementing the counters.
 *     In order to not drop packet information, the packet HW is always a
 *     higher priority and the CSR requests will only be satisified when
 *     there are idle cycles.  This can potentially cause long delays if the
 *     system becomes full.
 *
 * 2) stat counters can be cleared in two ways.  If PIP_STAT_CTL[RDCLR] is
 *     set, then all read accesses will clear the register.  In addition,
 *     any write to a stats register will also reset the register to zero.
 *     Please note that the clearing operations must obey rule #1 above.
 *
 * 3) all counters are wrapping - software must ensure they are read periodically


 * PIP_STAT0_PRT = PIP_STAT_DRP_PKTS / PIP_STAT_DRP_OCTS

     ==============================================================
     PIP_STAT0_PRT(0..3,16..19,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> DRP_PKTS R/W      0x0         NS        Inbound packets marked to be dropped by the IPD    |   
                                                 QOS widget per port                                |
<31:0>  DRP_OCTS R/W      0x0         NS        Inbound octets marked to be dropped by the IPD     |   
                                                 QOS widget per port                                |
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT1_PRT@ = PIP_STAT_OCTS

     ==============================================================
     PIP_STAT1_PRT(0..3,16..19,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> RSVRD    RAZ      NS          NS        Reserved                                           |   
<47:0>  OCTS     R/W      0x0         NS        Number of octets received by PIP (good and bad)    |   
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT2_PRT@ = PIP_STAT_PKTS     / PIP_STAT_RAW

     ==============================================================
     PIP_STAT2_PRT(0..3,16..19,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> PKTS     R/W      0x0         NS        Number of packets processed by PIP                 |   
<31:0>  RAW      R/W      0x0         NS        RAWFULL + RAWSCH Packets without an L1/L2 error    |   
                                                  received by PIP per port                          |
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT3_PRT@ = PIP_STAT_BCST     / PIP_STAT_MCST

     ==============================================================
     PIP_STAT3_PRT(0..3,16..19,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> BCST     R/W      0x0         NS        Number of indentified L2 broadcast packets         |   
                                                  Does not include multicast packets                |
                                                  Only includes packets whose parse mode is         |
                                                  SKIP_TO_L2.                                       |
<31:0>  MCST     R/W      0x0         NS        Number of indentified L2 multicast packets         |   
                                                  Does not include broadcast packets                |
                                                  Only includes packets whose parse mode is         |
                                                  SKIP_TO_L2.                                       |
----------------------------------------------------------------------------------------------------
===
 
 * PIP_STAT4_PRT@ = PIP_STAT_HIST1    / PIP_STAT_HIST0

     ==============================================================
     PIP_STAT4_PRT(0..3,16..19,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> H65to127 R/W      0x0         NS        Number of 65-127B packets                          |   
<31:0>  H64      R/W      0x0         NS        Number of 1-64B packets                            |   
----------------------------------------------------------------------------------------------------
===
 
 * PIP_STAT5_PRT@ = PIP_STAT_HIST3    / PIP_STAT_HIST2

     ==============================================================
     PIP_STAT5_PRT(0..3,16..19,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> H256to511 R/W     0x0         NS        Number of 256-511B packets                         |   
<31:0>  H128to255 R/W     0x0         NS        Number of 128-255B packets                         |   
----------------------------------------------------------------------------------------------------
===
 
 * PIP_STAT6_PRT@ = PIP_STAT_HIST5    / PIP_STAT_HIST4

     ==============================================================
     PIP_STAT6_PRT(0..3,16..19,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> H1024to1518 R/W   0x0         NS        Number of 1024-1518B packets                       |   
<31:0>  H512to1023  R/W   0x0         NS        Number of 512-1023B packets                        |   
----------------------------------------------------------------------------------------------------
===
 
 * PIP_STAT7_PRT@ = PIP_STAT_FCS      / PIP_STAT_HIST6

     ==============================================================
     PIP_STAT7_PRT(0..3,16..19,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> FCS      R/W      0x0         NS        Number of packets with FCS or Align opcode errors    |   
<31:0>  H1519    R/W      0x0         NS        Number of 1519-max packets                           |   
----------------------------------------------------------------------------------------------------
===
 
 * PIP_STAT8_PRT@ = PIP_STAT_FRAG     / PIP_STAT_UNDER

     ==============================================================
     PIP_STAT8_PRT(0..3,16..19,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> FRAG     R/W     0x0          NS        Number of packets with length < min and FCS error  |   
<31:0>  UNDERSZ  R/W     0x0          NS        Number of packets with length < min                |   
----------------------------------------------------------------------------------------------------
===
 
 * PIP_STAT9_PRT@ = PIP_STAT_JABBER   / PIP_STAT_OVER

     ==============================================================
     PIP_STAT9_PRT(0..3,16..19,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> JABBER   R/W     0x0          NS        Number of packets with length > max and FCS error  |   
<31:0>  OVERSZ   R/W     0x0          NS        Number of packets with length > max                |   
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT10_PRT@ = PIP_STAT_L2_MCAST / PIP_STAT_L2_BCAST
 * CISCO-SPECIFIC CSR

     ==============================================================
     PIP_STAT10_PRT(0..3,16..19,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> BCAST    R/W     0x0          NS        Number of packets with L2 Broadcast DMAC           |   
                                                  that were dropped due to RED.                     |
                                                  The HW will consider a packet to be an L2         |
                                                  broadcast packet when the 48-bit DMAC is all 1's. |
                                                  Only applies when the parse mode for the packet   |
                                                  is SKIP-TO-L2.                                    |
<31:0>  MCAST    R/W     0x0          NS        Number of packets with L2 Mulitcast DMAC           |   
                                                  that were dropped due to RED.                     |
                                                  The HW will consider a packet to be an L2         |
                                                  multicast packet when the least-significant bit   |
                                                  of the first byte of the DMAC is set and the      |
                                                  packet is not an L2 broadcast packet.             |
                                                  Only applies when the parse mode for the packet   |
                                                  is SKIP-TO-L2.                                    |
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT11_PRT@ = PIP_STAT_L3_MCAST / PIP_STAT_L3_BCAST
 * CISCO-SPECIFIC CSR

     ==============================================================
     PIP_STAT11_PRT(0..3,16..19,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> BCAST    R/W     0x0          NS        Number of packets with L3 Broadcast Dest Address   |   
                                                  that were dropped due to RED.                     |
                                                  The HW considers an IPv4 packet to be broadcast   |
                                                  when all bits are set in the MSB of the           |
                                                  destination address. IPv6 does not have the       |
                                                  concept of a broadcast packets.                   |
                                                  Only applies when the parse mode for the packet   |
                                                  is SKIP-TO-L2 and the packet is IP or the parse   |
                                                  mode for the packet is SKIP-TO-IP.                |
<31:0>  MCAST    R/W     0x0          NS        Number of packets with L3 Multicast Dest Address   |   
                                                  that were dropped due to RED.                     |
                                                  The HW considers an IPv4 packet to be multicast   |
                                                  when the most-significant nibble of the 32-bit    |
                                                  destination address is 0xE (i.e. it is a class D  |
                                                  address). The HW considers an IPv6 packet to be   |
                                                  multicast when the most-significant byte of the   |
                                                  128-bit destination address is all 1's.           |
                                                  Only applies when the parse mode for the packet   |
                                                  is SKIP-TO-L2 and the packet is IP or the parse   |
                                                  mode for the packet is SKIP-TO-IP.                |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_STAT_INB_PKTS@ = Inbound packets received by PIP per port 
 *
 * Inbound stats collect all data sent to PIP from all packet interfaces.
 * Its the raw counts of everything that comes into the block.  The counts
 * will reflect all error packets and packets dropped by the PKI RED engine.
 * These counts are intended for system debug, but could convey useful
 * information in production systems.
 *

     ==============================================================
     PIP_STAT_INB_PKTS(0..3,16..19,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVRD    RAZ      NS          NS        Reserved                                           |   
<31:0>  PKTS     R/W      0x0         NS        Number of packets without errors                   |   
                                                  received by PIP                                   |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_STAT_INB_OCTS@ = Inbound octets received by PIP per port
 *
 * Inbound stats collect all data sent to PIP from all packet interfaces.
 * Its the raw counts of everything that comes into the block.  The counts
 * will reflect all error packets and packets dropped by the PKI RED engine.
 * These counts are intended for system debug, but could convey useful
 * information in production systems.
 *

     ==============================================================
     PIP_STAT_INB_OCTS(0..3,16..19,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> RSVRD    RAZ      NS          NS        Reserved                                           |   
<47:0>  OCTS     R/W      0x0         NS        Total number of octets from all packets received   |   
                                                  by PIP                                            |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_STAT_INB_ERRS@ = Inbound error packets received by PIP per port
 *
 * Inbound stats collect all data sent to PIP from all packet interfaces.
 * Its the raw counts of everything that comes into the block.  The counts
 * will reflect all error packets and packets dropped by the PKI RED engine.
 * These counts are intended for system debug, but could convey useful
 * information in production systems.
 *

     ==============================================================
     PIP_STAT_INB_ERRS(0..3,16..19,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> RSVRD    RAZ      NS          NS        Reserved                                           |   
<15:0>  ERRS     R/W      0x0         NS        Number of packets with errors                      |   
                                                  received by PIP                                   |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_TAG_INC = Which bytes to include in the new tag hash algorithm
 *
*# $PIP_TAG_INC@ = 0x300+@ @=(0..63) RegType=(RSL) RtlReg=(pip_tag_inc_csr_direct_TestbuilderTask)

     ==============================================================
     PIP_TAG_INC(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVRD    RAZ      NS          NS        Reserved                                           |   
<7:0>   EN       R/W      0x0         0x0       Which bytes to include in mask tag algorithm       |   
                                                  Broken into 4, 16-entry masks to cover 128B       |
                                                  PIP_PRT_CFG[TAG_INC] selects 1 of 4 to use        |
                                                  registers  0-15 map to PIP_PRT_CFG[TAG_INC] == 0  |
                                                  registers 16-31 map to PIP_PRT_CFG[TAG_INC] == 1  |
                                                  registers 32-47 map to PIP_PRT_CFG[TAG_INC] == 2  |
                                                  registers 48-63 map to PIP_PRT_CFG[TAG_INC] == 3  |
                                                  [7] coresponds to the MSB of the 8B word          |
                                                  [0] coresponds to the LSB of the 8B word          |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_FLAGS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>  NS       RAZ       NS          NS       RESERVED                                               
<3>     RESET    RAZ       0           0        Reset oneshot pulse                                    
<2>     STORE_BE R/W       0           0        Force STORE0 byte write address to big endian          
<1>     ENA_DWB  R/W       0           0        Set to enable DontWriteBacks                           
<0>     ENA_PKO  R/W       0           0        Set to enable the PKO picker                           

Notes:
 When set, ENA_PKO enables the PKO picker and places the PKO in normal operation.  When set, ENA_DWB
 enables the use of DontWriteBacks during the buffer freeing operations.  When not set, STORE_BE inverts
 bits[2:0] of the STORE0 byte write address.  When set, RESET causes a 4-cycle reset pulse to the
 entire box.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PKO_REG_READ_IDX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> NS       RAZ      NS          NS        RESERVED                                               
<15:8>  INC      R/W      0           0         Increment to add to current index for next index       
<7:0>   IDX      R/W      0           0         Index to use for next memory CSR read                  

Notes:
 Provides the read index during a CSR read operation to any of the CSRs that are physically stored
 as memories.  The names of these CSRs begin with the prefix "PKO_MEM_".
 IDX[7:0] is the read index.  INC[7:0] is an increment that is added to IDX[7:0] after any CSR read.
 The intended use is to initially write this CSR such that IDX=0 and INC=1.  Then, the entire
 contents of a CSR memory can be read with consecutive CSR read commands.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_CMD_BUF Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:23> NS       RAZ      NS          NS        RESERVED                                               
<22:20> POOL     R/W      0           0         Free list used to free command buffer segments         
<19:13> NS       R/W      0           0         MBZ                                                    
<12:0>  SIZE     R/W      0           0         Number of uint64s per command buffer segment           

Notes:
 Sets the command buffer parameters
 The size of the command buffer segments is measured in uint64s.  The pool specifies (1 of 8 free
 lists to be used when freeing command buffer segments.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_GMX_PORT_MODE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:6>  NS       RAZ      NS          NS        RESERVED                                               
<5:3>   MODE1    R/W      2           2         # of GM1 ports = 16 >> MODE1, 0 <= MODE1 <= 5          
<2:0>   MODE0    R/W      2           2         # of GM0 ports = 16 >> MODE0, 0 <= MODE0 <= 5          

Notes:
 The system has a total of 4 + 4 + 4 + 4 ports and 4 + 4 + 1 + 1 engines (GM0 + GM1 + PCI + LOOP).
 This CSR sets the number of GMX ports and amount of local storage per engine independently for
 GM0 and GM1.  It has no effect on the number of ports or amount of local storage per engine for
 PCI or LOOP.  When all GMX ports are used (MODE0=2, MODE1=2), each GMX engine has 2.5kB of local
 storage.  Increasing the value of MODEn by 1 decreases the number of GMX ports by a power of 2 and
 increases the local storage per PKO GMX engine by a power of 2.  If one of the modes is 5, then only
 one of interfaces GM0 or GM1 is present and the storage per engine of the existing interface is
 doubled.  Modes 0 and 1 are illegal and, if selected, are treated as mode 2.

 MODE[n] GM[n] PCI   LOOP  GM[n]                      PCI            LOOP
         ports ports ports storage/engine             storage/engine storage/engine  
 0       4     4     4     ( 2.5kB << (MODE[1-n]==5)) 2.5kB          2.5kB          
 1       4     4     4     ( 2.5kB << (MODE[1-n]==5)) 2.5kB          2.5kB          
 2       4     4     4     ( 2.5kB << (MODE[1-n]==5)) 2.5kB          2.5kB          
 3       2     4     4     ( 5.0kB << (MODE[1-n]==5)) 2.5kB          2.5kB          
 4       1     4     4     (10.0kB << (MODE[1-n]==5)) 2.5kB          2.5kB          
 5       0     4     4     (   0kB                  ) 2.5kB          2.5kB          
 where 0 <= n <= 1
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PKO_REG_QUEUE_MODE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2>  NS       RAZ      NS          NS        RESERVED                                               
<1:0>   MODE     R/W      0           0         # of queues = 256 >> MODE, 0 <= MODE <=2               

Notes:
 Sets the number of queues and amount of local storage per queue
 The system has a total of 256 queues and (256*8) words of local command storage.  This CSR sets the
 number of queues that are used.  Increasing the value of MODE by 1 decreases the number of queues
 by a power of 2 and increases the local storage per queue by a power of 2.
 MODEn queues storage/queue
 0     256     64B ( 8 words)
 1     128    128B (16 words)
 2      64    256B (32 words)
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_ENGINE_INFLIGHT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:40> NS       RAZ      NS          NS        RESERVED                                               
<39:36> ENGINE9  R/W      4           4         Maximum number of inflight packets for engine9         
<35:32> ENGINE8  R/W      4           4         Maximum number of inflight packets for engine8         
<31:28> ENGINE7  R/W      4           4         Maximum number of inflight packets for engine7         
<27:24> ENGINE6  R/W      4           4         Maximum number of inflight packets for engine6         
<23:20> ENGINE5  R/W      4           4         Maximum number of inflight packets for engine5         
<19:16> ENGINE4  R/W      4           4         Maximum number of inflight packets for engine4         
<15:12> ENGINE3  R/W      4           4         Maximum number of inflight packets for engine3         
<11:8>  ENGINE2  R/W      4           4         Maximum number of inflight packets for engine2         
<7:4>   ENGINE1  R/W      4           4         Maximum number of inflight packets for engine1         
<3:0>   ENGINE0  R/W      4           4         Maximum number of inflight packets for engine0         

Notes:
 Sets the maximum number of inflight packets, per engine.  Values greater than 4 are illegal.
 Setting an engine's value to 0 effectively stops the engine.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_ENGINE_THRESH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:10> NS       RAZ      NS          NS        RESERVED                                               
<9:0>   MASK     R/W      0           0         Mask[n]=0 disables packet send threshold for engine n  
                                                 Mask[n]=1 enables  packet send threshold for engine n  $PR       NS              

Notes:
 When not enabled, packet data may be sent as soon as it is written into PKO's internal buffers.
 When enabled and the packet fits entirely in the PKO's internal buffer, none of the packet data will
 be sent until all of it has been written into the PKO's internal buffer.  Note that a packet is
 considered to fit entirely only if the packet's size is <= BUFFER_SIZE-8.  When enabled and the
 packet does not fit entirely in the PKO's internal buffer, none of the packet data will be sent until
 at least BUFFER_SIZE-256 bytes of the packet have been written into the PKO's internal buffer
 (note that BUFFER_SIZE is a function of PKO_REG_GMX_PORT_MODE above).
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_BIST_RESULT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:35> NS       RAZ       NS          NS       RESERVED                                               
<34:34> CSR      RO        X           0        BiST result of CSR      memories (0=pass, !0=fail)     
<33:33> IOB      RO        X           0        BiST result of IOB      memories (0=pass, !0=fail)     
<32:32> OUT_DAT  RO        X           0        BiST result of OUT_DAT  memories (0=pass, !0=fail)     
<31:29> OUT_CTL  RO        X           0        BiST result of OUT_CTL  memories (0=pass, !0=fail)     
<28:28> OUT_STA  RO        X           0        BiST result of OUT_STA  memories (0=pass, !0=fail)     
<27:27> OUT_WIF  RO        X           0        BiST result of OUT_WIF  memories (0=pass, !0=fail)     
<26:24> PRT_CHK  RO        X           0        BiST result of PRT_CHK  memories (0=pass, !0=fail)     
<23:23> PRT_NXT  RO        X           0        BiST result of PRT_NXT  memories (0=pass, !0=fail)     
<22:15> PRT_PSB  RO        X           0        BiST result of PRT_PSB  memories (0=pass, !0=fail)     
<14:13> NCB_INB  RO        X           0        BiST result of NCB_INB  memories (0=pass, !0=fail)     
<12:11> PRT_QCB  RO        X           0        BiST result of PRT_QCB  memories (0=pass, !0=fail)     
<10:8>  PRT_QSB  RO        X           0        BiST result of PRT_QSB  memories (0=pass, !0=fail)     
<7:6>   PRT_CTL  RO        X           0        BiST result of PRT_CTL  memories (0=pass, !0=fail)     
<5:4>   DAT_DAT  RO        X           0        BiST result of DAT_DAT  memories (0=pass, !0=fail)     
<3:0>   DAT_PTR  RO        X           0        BiST result of DAT_PTR  memories (0=pass, !0=fail)     

Notes:
 Access to the internal BiST results
 Each bit is the BiST result of an individual memory (per bit, 0=pass and 1=fail).
----------------------------------------------------------------------------------------------------
===

 

     ==============================================================
     PKO_REG_ERROR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:3>  NS       RAZ      NS          NS        RESERVED                                               
<2>     CURRZERO R/W1C    0           0         A packet data pointer has size=0                       
<1>     DOORBELL R/W1C    0           0         A doorbell count has overflowed                        
<0>     PARITY   R/W1C    0           0         Read parity error at port data buffer                  

Notes:
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_INT_MASK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:3>  NS       RAZ      NS          NS        RESERVED                                               
<2>     CURRZERO R/W      0           0         Bit mask corresponding to PKO_REG_ERROR[2] above       
<1>     DOORBELL R/W      0           0         Bit mask corresponding to PKO_REG_ERROR[1] above       
<0>     PARITY   R/W      0           0         Bit mask corresponding to PKO_REG_ERROR[0] above       

Notes:
 When a mask bit is set, the corresponding interrupt is enabled.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_DEBUG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ASSERTS  RO       0           0         Various assertion checks                               

Notes:
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_DEBUG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ASSERTS  RO       0           0         Various assertion checks                               

Notes:
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_DEBUG2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ASSERTS  RO       0           0         Various assertion checks                               

Notes:
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_DEBUG3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  ASSERTS  RO       0           0         Various assertion checks                               

Notes:
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_QUEUE_PTRS1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2>  NS       RAZ       NS          NS       RESERVED                                               
<1>     IDX3     R/W       0           0        [3] of Index (distance from head) in the queue array   
<0>     QID7     R/W       0           0        [7] of Queue ID                                        

Notes:
 This CSR is used with PKO_MEM_QUEUE_PTRS and PKO_MEM_QUEUE_QOS to allow access to queues 128-255
 and to allow up mapping of up to 16 queues per port.  When programming queues 128-255, the
 programming sequence must first write PKO_REG_QUEUE_PTRS1 and then write PKO_MEM_QUEUE_PTRS or
 PKO_MEM_QUEUE_QOS for each queue.
 See the descriptions of PKO_MEM_QUEUE_PTRS and PKO_MEM_QUEUE_QOS for further explanation of queue
 programming.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_QUEUE_PREEMPT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2> NS        RAZ      NS           NS       RESERVED                                               
<1>    PREEMPTEE R/W      0            0        Allow this QID to be preempted.                        
                                                 0=cannot be preempted, 1=can be preempted
<0>    PREEMPTER R/W      0            0        Preempts the servicing of packet on PID to             
                                                 allow this QID immediate servicing.  0=do not cause
                                                 preemption, 1=cause preemption.  Per PID, at most
                                                 1 QID can have this bit set.

Notes:
 CISCO-SPECIFIC CSR
 Per QID, setting both PREEMPTER=1 and PREEMPTEE=1 is illegal and sets only PREEMPTER=1.
 This CSR is used with PKO_MEM_QUEUE_PTRS and PKO_REG_QUEUE_PTRS1.  When programming queues, the
 programming sequence must first write PKO_REG_QUEUE_PREEMPT, then PKO_REG_QUEUE_PTRS1 and then
 PKO_MEM_QUEUE_PTRS for each queue.  Preemption is supported only on queues that are ultimately
 mapped to engines 0-7.  It is illegal to set preemptee or preempter for a queue that is ultimately
 mapped to engines 8-9.
 
 See the descriptions of PKO_MEM_QUEUE_PTRS for further explanation of queue programming.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_PREEMPT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> NS       RAZ      NS           NS       RESERVED                                               
<15:0>  MIN_SIZE R/W      0            0        Threshhold for packet preemption, measured in bytes.   
                                                 Only packets which have at least MIN_SIZE bytes    
                                                 remaining to be read can be preempted.
Notes:
 CISCO-SPECIFIC CSR
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_QUEUE_PTRS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63>    S_TAIL   R/W       X           0        Set if this QID is the tail of the static queues       
<62>    STATIC_P R/W       X           0        Set if any QID in this PID has static priority         
<61>    STATIC_Q R/W       X           0        Set if this QID has static priority                    
<60:53> QOS_MASK R/W       X           0        Mask to control priority across 8 QOS rounds           
<52:17> BUF_PTR  R/W       X           0        Command buffer pointer, <23:17> MBZ                    
<16:16> TAIL     R/W       X           0        Set if this QID is the tail of the queue array         
<15:13> IDX      WR0       X           0        Index[2:0] (distance from head) in the queue array     
<12:7>  PID      WR0       X           0        Port ID to which this queue is mapped                  
<6:0>   QID      R/W       X           0        Queue ID[6:0]                                          

Notes:
 Sets the queue to port mapping and the initial command buffer pointer, per queue
 Each queue may map to at most one port.  No more than 16 queues may map to a port.  The set of
 queues that is mapped to a port must be a contiguous array of queues.  The port to which queue QID
 is mapped is port PID.  The index of queue QID in port PID's queue list is IDX.  The last queue in
 port PID's queue array must have its TAIL bit set.  Unused queues must be mapped to port 63.
 STATIC_Q marks queue QID as having static priority.  STATIC_P marks the port PID to which QID is
 mapped as having at least one queue with static priority.  If any QID that maps to PID has static
 priority, then all QID that map to PID must have STATIC_P set.  Queues marked as static priority
 must be contiguous and begin at IDX 0.  The last queue that is marked as having static priority
 must have its S_TAIL bit set.  
 This CSR is a memory of 256 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_QUEUE_QOS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:61> NS       RAZ       NS          NS       RESERVED                                               
<60:53> QOS_MASK R/W       X           0        Mask to control priority across 8 QOS rounds           
<52:13> NS       RAZ       NS          NS       RESERVED                                               
<12:7>  PID      WR0       X           0        Port ID to which this queue is mapped                  
<6:0>   QID      R/W       X           0        Queue ID                                               

Notes:
 Sets the QOS mask, per queue.  These QOS_MASK bits are logically and physically the same QOS_MASK
 bits in PKO_MEM_QUEUE_PTRS.  This CSR address allows the QOS_MASK bits to be written during PKO
 operation without affecting any other queue state.  The port to which queue QID is mapped is port
 PID.  Note that the queue to port mapping must be the same as was previously programmed via the
 PKO_MEM_QUEUE_PTRS CSR.
 This CSR is a memory of 256 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_PORT_PTRS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:62> NS        RAZ      NS          NS       RESERVED                                               
<61>    STATIC_P  R/W      X           0        Set if this PID has static priority                    
<60:53> QOS_MASK  R/W      X           0        Mask to control priority across 8 QOS rounds           
<52:16> NS        RAZ      NS          NS       RESERVED                                               
<15:10> BP_PORT   R/W      X           0        PID listens to BP_PORT for per-packet backpressure     
                                                 Legal BP_PORTs: 0-39, 63 (63 means no BP)
<9:6>   EID       R/W      X           0        Engine ID to which this port is mapped                 
                                                 Legal EIDs: 0-9, 15 (15 only if port not used)
<5:0>   PID       R/W      X           0        Port ID[5:0]                                           

Notes:
 Sets the port to engine mapping, per port.  Ports marked as static priority need not be contiguous,
 but they must be the lowest numbered PIDs mapped to this EID and must have QOS_MASK=0xff.  If EID==8
 or EID==9, then PID[1:0] is used to direct the packet to the correct port on that interface.
 EID==15 can be used for unused PKO-internal ports.
 BP_PORT==63 means that the PKO-internal port is not backpressured.
 BP_PORTs are assumed to belong to an interface as follows:
   36 <= BP_PORT < 40 -> loopback   interface
   32 <= BP_PORT < 36 -> PCIe       interface
   16 <= BP_PORT < 32 -> SGMII/Xaui interface 1
   0  <= BP_PORT < 16 -> SGMII/Xaui interface 0
 The reset configuration is the following:
   PID EID(ext port) BP_PORT QOS_MASK STATIC_P
   -------------------------------------------
     0   0( 0)             0     0xff        0
     1   1( 1)             1     0xff        0
     2   2( 2)             2     0xff        0
     3   3( 3)             3     0xff        0
     4   0( 0)             4     0xff        0
     5   1( 1)             5     0xff        0
     6   2( 2)             6     0xff        0
     7   3( 3)             7     0xff        0
     8   0( 0)             8     0xff        0
     9   1( 1)             9     0xff        0
    10   2( 2)            10     0xff        0
    11   3( 3)            11     0xff        0
    12   0( 0)            12     0xff        0
    13   1( 1)            13     0xff        0
    14   2( 2)            14     0xff        0
    15   3( 3)            15     0xff        0
   -------------------------------------------
    16   4(16)            16     0xff        0
    17   5(17)            17     0xff        0
    18   6(18)            18     0xff        0
    19   7(19)            19     0xff        0
    20   4(16)            20     0xff        0
    21   5(17)            21     0xff        0
    22   6(18)            22     0xff        0
    23   7(19)            23     0xff        0
    24   4(16)            24     0xff        0
    25   5(17)            25     0xff        0
    26   6(18)            26     0xff        0
    27   7(19)            27     0xff        0
    28   4(16)            28     0xff        0
    29   5(17)            29     0xff        0
    30   6(18)            30     0xff        0
    31   7(19)            31     0xff        0
   -------------------------------------------
    32   8(32)            32     0xff        0
    33   8(33)            33     0xff        0
    34   8(34)            34     0xff        0
    35   8(35)            35     0xff        0
   -------------------------------------------
    36   9(36)            36     0xff        0
    37   9(37)            37     0xff        0
    38   9(38)            38     0xff        0
    39   9(39)            39     0xff        0

 This CSR is a memory of 40 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_PORT_QOS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:61> NS        RAZ      NS          NS       RESERVED                                               
<60:53> QOS_MASK  R/W      X           0        Mask to control priority across 8 QOS rounds           
<52:10> NS        RAZ      NS          NS       RESERVED                                               
<9:6>   EID       R/W      X           0        Engine ID to which this port is mapped                 
                                                 Legal EIDs: 0-9
<5:0>   PID       R/W      X           0        Port ID[5:0]                                           

Notes:
 Sets the QOS mask, per port.  These QOS_MASK bits are logically and physically the same QOS_MASK
 bits in PKO_MEM_PORT_PTRS.  This CSR address allows the QOS_MASK bits to be written during PKO
 operation without affecting any other port state.  The engine to which port PID is mapped is engine
 EID.  Note that the port to engine mapping must be the same as was previously programmed via the
 PKO_MEM_PORT_PTRS CSR.
 This CSR is a memory of 40 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_PORT_RATE0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:51> NS        RAZ      NS          NS       RESERVED                                               
<50:32> RATE_WORD R/W      X           0        Rate limiting adder per 8 byte                         
<31:8>  RATE_PKT  R/W      X           0        Rate limiting adder per packet                         
<7:6>   NS        RAZ      NS          NS       RESERVED                                               
<5:0>   PID       R/W      X           0        Port ID[5:0]                                           

Notes:
 This CSR is a memory of 40 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_PORT_RATE1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> NS        RAZ      NS          NS       RESERVED                                               
<31:8>  RATE_LIM  R/W      X           0        Rate limiting accumulator limit                        
<7:6>   NS        RAZ      NS          NS       RESERVED                                               
<5:0>   PID       R/W      X           0        Port ID[5:0]                                           

Notes:
 Writing PKO_MEM_PORT_RATE1[PID,RATE_LIM] has the side effect of setting the corresponding
 accumulator to zero.
 This CSR is a memory of 40 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_COUNT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVRD    RAZ      NS          NS        Reserved                                           |   
<31:0>  COUNT    R/W1C    X           0         Total number of packets seen by PKO                |   

Notes:
 Total number of packets seen by PKO, per port
 A write to this address will clear the entry whose index is specified as COUNT[5:0].
 This CSR is a memory of 40 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_COUNT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> RSVRD    RAZ      NS          NS        Reserved                                           |   
<47:0>  COUNT    R/W1C    X           0         Total number of bytes seen by PKO                  |   

Notes:
 Total number of bytes seen by PKO, per port
 A write to this address will clear the entry whose index is specified as COUNT[5:0].
 This CSR is a memory of 40 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:36> FAU      RO        X           0        Fetch and add command words                            
<35:22> CMD      RO        X           0        Command word                                           
<21:16> SEGS     RO        X           0        Number of segments/gather size                         
<15:0>  SIZE     RO        X           0        Packet length in bytes                                 

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.cmnd[63:0]
 This CSR is a memory of 10 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PKO_MEM_DEBUG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:63> I        RO        X           0        "I"  value used for free operation                     
<62:59> BACK     RO        X           0        Back value used for free operation                     
<58:56> POOL     RO        X           0        Pool value used for free operation                     
<55:40> SIZE     RO        X           0        Size in bytes                                          
<39:0>  PTR      RO        X           0        Data pointer                                           

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.curr[63:0]
 This CSR is a memory of 10 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:63> I        RO        X           0        "I"  value used for free operation                     
<62:59> BACK     RO        X           0        Back value used for free operation                     
<58:56> POOL     RO        X           0        Pool value used for free operation                     
<55:40> SIZE     RO        X           0        Size in bytes                                          
<39:0>  PTR      RO        X           0        Data pointer                                           

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.head[63:0]
 This CSR is a memory of 10 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  DATA     RO        X           0        WorkQ data or Store0 pointer                           

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.resp[63:0]
 This CSR is a memory of 10 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:56> CURR_SIZ    RO     X           0        Internal state                                         
<55:40> CURR_OFF    RO     X           0        Internal state                                         
<39:34> CMND_SEGS   RO     X           0        Internal state                                         
<33:18> CMND_SIZ    RO     X           0        Internal state                                         
<17:12> CMND_OFF    RO     X           0        Internal state                                         
<11:10> UID         RO     X           0        Internal state                                         
<9:9>   DREAD_SOP   RO     X           0        Internal state                                         
<8:8>   INIT_DWRITE RO     X           0        Internal state                                         
<7:7>   CHK_ONCE    RO     X           0        Internal state                                         
<6:6>   CHK_MODE    RO     X           0        Internal state                                         
<5:5>   WAIT        RO     X           0        Internal state                                         
<4:3>   MINOR       RO     X           0        Internal state                                         
<2:0>   MAJOR       RO     X           0        Internal state                                         

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.state[63:0]
 This CSR is a memory of 10 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:54> NS        RAZ      NS          NS       RESERVED                                               
<53:48> NXT_INFLT RO       X           0        Internal state                                         
<47:8>  CURR_PTR  RO       X           0        Internal state                                         
<7:0>   CURR_SIZ  RO       X           0        Internal state                                         

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.state[127:64]
 This CSR is a memory of 10 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG6 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:37> NS         RO       X           0        Internal state                                         
<36:33> QID_OFFRES RO       X           0        Internal state                                         
<32:29> QID_OFFTHS RO       X           0        Internal state                                         
<28:28> PREEMPTER  RO       X           0        Internal state                                         
<27:27> PREEMPTEE  RO       X           0        Internal state                                         
<26:26> PREEMPTED  RO       X           0        Internal state                                         
<25:25> ACTIVE     RO       X           0        Internal state                                         
<24:24> STATIC     RO       X           0        Internal state                                         
<23:21> QOS        RO       X           0        Internal state                                         
<20:16> QCB_RIDX   RO       X           0        Internal state                                         
<15:12> QID_OFFMAX RO       X           0        Internal state                                         
<11:8>  QID_OFF    RO       X           0        Internal state                                         
<7:0>   QID_BASE   RO       X           0        Internal state                                         

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.port[63:0]
 This CSR is a memory of 40 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG7 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:59> QOS      RO        X           0        QOS mask to enable the queue when set                  
<58:58> TAIL     RO        X           0        This queue is the last (tail) in the queue array       
<57:45> BUF_SIZ  RO        X           0        Command buffer remaining size in words                 
<44:12> BUF_PTR  RO        X           0        Command word pointer                                   
<11:6>  QCB_WIDX RO        X           0        Buffer write index for QCB                             
<5:0>   QCB_RIDX RO        X           0        Buffer read  index for QCB                             

Notes:
 Internal per-queue state intended for debug use only - pko_prt_qsb.state[63:0]
 This CSR is a memory of 256 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG8 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:29> NS        RAZ      NS          NS       RESERVED                                               
<28>    PREEMPTER RO       X           0        Preempter                                              
<27:8>  DOORBELL  RO       X           0        Doorbell count                                         
<7>     NS        RAZ      NS          NS       RESERVED                                               
<6>     PREEMPTEE RO       X           0        Preemptee                                              
<5>     STATIC_P  RO       X           0        Static priority                                        
<4>     S_TAIL    RO       X           0        Static tail                                            
<3>     STATIC_Q  RO       X           0        Static priority                                        
<2:0>   QOS       RO       X           0        QOS mask to enable the queue when set                  

Notes:
 Internal per-queue state intended for debug use only - pko_prt_qsb.state[91:64]
 This CSR is a memory of 256 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG9 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:49> NS       RAZ       NS          NS       RESERVED                                               
<48:32> PTRS0    RO        X           0        Internal state                                         
<31:17> NS       RAZ       NS          NS       RESERVED                                               
<16:0>  PTRS3    RO        X           0        Internal state                                         

Notes:
 Internal per-port state intended for debug use only - pko.dat.ptr.ptrs0, pko.dat.ptr.ptrs3
 This CSR is a memory of 40 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG10 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:49> NS       RAZ       NS          NS       RESERVED                                               
<48:32> PTRS1    RO        X           0        Internal state                                         
<31:17> NS       RAZ       NS          NS       RESERVED                                               
<16:0>  PTRS2    RO        X           0        Internal state                                         

Notes:
 Internal per-port state intended for debug use only - pko.dat.ptr.ptrs1, pko.dat.ptr.ptrs2
 This CSR is a memory of 40 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG11 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:23> NS       RAZ       NS          NS       RESERVED                                               
<22:22> MAJ      RO        X           0        Internal state                                         
<21:19> UID      RO        X           0        Internal state                                         
<18:18> SOP      RO        X           0        Internal state                                         
<17:17> LEN      RO        X           0        Internal state                                         
<16:16> CHK      RO        X           0        Internal state                                         
<15:3>  CNT      RO        X           0        Internal state                                         
<2:0>   MOD      RO        X           0        Internal state                                         

Notes:
 Internal per-port state intended for debug use only - pko.out.sta.state[22:0]
 This CSR is a memory of 40 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PKO_MEM_DEBUG12 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:36> FAU      RO        X           0        Fetch and add command words                            
<35:22> CMD      RO        X           0        Command word                                           
<21:16> SEGS     RO        X           0        Number of segments/gather size                         
<15:0>  SIZE     RO        X           0        Packet length in bytes                                 

Notes:
 Internal per-port state intended for debug use only - pko.out.ctl.cmnd[63:0]
 This CSR is a memory of 40 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PKO_MEM_DEBUG13 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:63> I        RO        X           0        "I"  value used for free operation                     
<62:59> BACK     RO        X           0        Back value used for free operation                     
<58:56> POOL     RO        X           0        Pool value used for free operation                     
<55:40> SIZE     RO        X           0        Size in bytes                                          
<39:0>  PTR      RO        X           0        Data pointer                                           

Notes:
 Internal per-port state intended for debug use only - pko.out.ctl.head[63:0]
 This CSR is a memory of 40 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG14 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  DATA     RO        X           0        Command words                                          

Notes:
 Internal per-port state intended for debug use only - pko.prt.psb.save[63:0]
 This CSR is a memory of 120 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===




 *
 * POW_PP_GRP_MSK@ = POW PP Group Mask Register (1 per PP)
 *
 * Selects which group(s) a PP belongs to.  A '1' in any bit position sets the PP's membership in
 * the corresponding group.  A value of 0x0 will prevent the PP from receiving new work.  Note:
 * disabled or non-existent PP's should have this field set to 0xffff (the reset value) in order to
 * maximize POW performance.
 *
 * Also contains the QOS level priorities for each PP.  0x0 is highest priority, and 0x7 the lowest.
 * Setting the priority to 0xf will prevent that PP from receiving work from that QOS level.
 * Priority values 0x8 through 0xe are reserved and should not be used.  For a given PP, priorities
 * should begin at 0x0 and remain contiguous throughout the range.
 *

     ==============================================================
     POW_PP_GRP_MSK(0..11) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> RSVD     RAZ      NS          NS        Reserved                                           |   
<47:44> QOS7_PRI R/W      0x0         NS        PP@ priority for QOS level 7                       |   
<43:40> QOS6_PRI R/W      0x0         NS        PP@ priority for QOS level 6                       |   
<39:36> QOS5_PRI R/W      0x0         NS        PP@ priority for QOS level 5                       |   
<35:32> QOS4_PRI R/W      0x0         NS        PP@ priority for QOS level 4                       |   
<31:28> QOS3_PRI R/W      0x0         NS        PP@ priority for QOS level 3                       |   
<27:24> QOS2_PRI R/W      0x0         NS        PP@ priority for QOS level 2                       |   
<23:20> QOS1_PRI R/W      0x0         NS        PP@ priority for QOS level 1                       |   
<19:16> QOS0_PRI R/W      0x0         NS        PP@ priority for QOS level 0                       |   
<15:0>  GRP_MSK  R/W      0xffff      0xffff    PP@ group mask                                     |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_WQ_INT_THR@ = POW Work Queue Interrupt Threshold Register (1 per group)
 *
 * Contains the thresholds for enabling and setting work queue interrupts.  For more information
 * regarding this register, see the interrupt section.
 *
 * Note: Up to 16 of the POW's internal storage buffers can be allocated for hardware use and are
 * therefore not available for incoming work queue entries.  Additionally, any PP that is not in the
 * NULL_NULL state consumes a buffer.  Thus in a 12 PP system, it is not advisable to set either
 * IQ_THR or DS_THR to greater than 2048 - 16 - 12 = 2020.  Doing so may prevent the interrupt from
 * ever triggering.
 *

     ==============================================================
     POW_WQ_INT_THR(0..15) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:29> RSVD2    RAZ      NS          NS        Reserved                                           |   
<28>    TC_EN    R/W      0x0         NS        Time counter interrupt enable for group @          |   
                                                  TC_EN must be zero when TC_THR==0                 |
<27:24> TC_THR   R/W      0x0         NS        Time counter interrupt threshold for group @       |   
                                                  When TC_THR==0, POW_WQ_INT_CNT*[TC_CNT] is zero   |
<23>    RSVD1    RAZ      NS          NS        Reserved                                           |   
<22:12> DS_THR   R/W      0x0         NS        De-schedule count threshold for group @            |   
                                                  DS_THR==0 disables the threshold interrupt        |
<11>    RSVD0    RAZ      NS          NS        Reserved                                           |   
<10:0>  IQ_THR   R/W      0x0         NS        Input queue count threshold for group @            |   
                                                  IQ_THR==0 disables the threshold interrupt        |
----------------------------------------------------------------------------------------------------
===

 *
 * POW_WQ_INT_CNT@ = POW Work Queue Interrupt Count Register (1 per group)
 *
 * Contains a read-only copy of the counts used to trigger work queue interrupts.  For more
 * information regarding this register, see the interrupt section.
 *

     ==============================================================
     POW_WQ_INT_CNT(0..15) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:28> RSVD     RAZ      NS          NS        Reserved                                           |   
<27:24> TC_CNT   RO       0x0         NS        Time counter current value for group @             |   
                                                 HW sets TC_CNT to POW_WQ_INT_THR*[TC_THR] whenever:|
                                                  - corresponding POW_WQ_INT_CNT*[IQ_CNT]==0 and    |
                                                    corresponding POW_WQ_INT_CNT*[DS_CNT]==0        |
                                                  - corresponding POW_WQ_INT[WQ_INT<*>] is written  |
                                                    with a 1 by SW                                  |
                                                  - corresponding POW_WQ_INT[IQ_DIS<*>] is written  |
                                                    with a 1 by SW                                  |
                                                  - corresponding POW_WQ_INT_THR* is written by SW  |
                                                  - TC_CNT==1 and periodic counter                  |
                                                    POW_WQ_INT_PC[PC]==0                            |
                                                 Otherwise, HW decrements TC_CNT whenever the       |
                                                 periodic counter POW_WQ_INT_PC[PC]==0.             |
                                                 TC_CNT is 0 whenever POW_WQ_INT_THR*[TC_THR]==0.   |
<23:12> DS_CNT   RO       0x0         NS        De-schedule executable count for group @           |   
<11:0>  IQ_CNT   RO       0x0         NS        Input queue executable count for group @           |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_QOS_THR@ = POW QOS Threshold Register (1 per QOS level)
 *
 * Contains the thresholds for allocating POW internal storage buffers.  If the number of remaining
 * free buffers drops below the minimum threshold (MIN_THR) or the number of allocated buffers for
 * this QOS level rises above the maximum threshold (MAX_THR), future incoming work queue entries
 * will be buffered externally rather than internally.  This register also contains a read-only count
 * of the current number of free buffers (FREE_CNT), the number of internal buffers currently
 * allocated to this QOS level (BUF_CNT), and the total number of buffers on the de-schedule list
 * (DES_CNT) (which is not the same as the total number of de-scheduled buffers).
 *

     ==============================================================
     POW_QOS_THR(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:60> RSVD2    RAZ      NS          NS        Reserved                                           |   
<59:48> DES_CNT  RO       0x0         NS        # of buffers on de-schedule list                   |   
<47:36> BUF_CNT  RO       0x0         NS        # of internal buffers allocated to QOS level @     |   
<35:24> FREE_CNT RO       0x7eb       NS        # of total free buffers                            |   
<23>    RSVD1    RAZ      NS          NS        Reserved                                           |   
<22:12> MAX_THR  R/W      0x7ff       NS        Max threshold for QOS level @                      |   
<11>    RSVD0    RAZ      NS          NS        Reserved                                           |   
<10:0>  MIN_THR  R/W      0x0         NS        Min threshold for QOS level @                      |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_QOS_RND@ = POW QOS Issue Round Register (4 rounds per register x 8 registers = 32 rounds)
 *
 * Contains the round definitions for issuing new work.  Each round consists of 8 bits with each bit
 * corresponding to a QOS level.  There are 4 rounds contained in each register for a total of 32
 * rounds.  The issue logic traverses through the rounds sequentially (lowest round to highest round)
 * in an attempt to find new work for each PP.  Within each round, the issue logic traverses through
 * the QOS levels sequentially (highest QOS to lowest QOS) skipping over each QOS level with a clear
 * bit in the round mask.  Note: setting a QOS level to all zeroes in all issue round registers will
 * prevent work from being issued from that QOS level.
 *

     ==============================================================
     POW_QOS_RND(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVD     RAZ      NS          NS        Reserved                                           |   
<31:24> RND_P3   R/W      0xff        NS        Round mask for round @x4+3                         |   
<23:16> RND_P2   R/W      0xff        NS        Round mask for round @x4+2                         |   
<15:8>  RND_P1   R/W      0xff        NS        Round mask for round @x4+1                         |   
<7:0>   RND      R/W      0xff        NS        Round mask for round @x4                           |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_WQ_INT = POW Work Queue Interrupt Register
 *
 * Contains the bits (1 per group) that set work queue interrupts and are used to clear these
 * interrupts.  Also contains the input queue interrupt temporary disable bits (1 per group).  For
 * more information regarding this register, see the interrupt section.
 *

     ==============================================================
     POW_WQ_INT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVD     RAZ      NS          NS        Reserved                                           |   
<31:16> IQ_DIS   R/W1     0x0         NS        Input queue interrupt temporary disable mask       |   
                                                 Corresponding WQ_INT<*> bit cannot be set due to   |
                                                 IQ_CNT/IQ_THR check when this bit is set.          |
                                                 Corresponding IQ_DIS bit is cleared by HW whenever:|
                                                  - POW_WQ_INT_CNT*[IQ_CNT] is zero, or             |
                                                  - POW_WQ_INT_CNT*[TC_CNT]==1 when periodic        |
                                                    counter POW_WQ_INT_PC[PC]==0                    |
<15:0>  WQ_INT   R/W1C    0x0         NS        Work queue interrupt bits                          |   
                                                 Corresponding WQ_INT bit is set by HW whenever:    |
                                                  - POW_WQ_INT_CNT*[IQ_CNT] >=                      |
                                                    POW_WQ_INT_THR*[IQ_THR] and the threshold       |
                                                    interrupt is not disabled.                      |
                                                    IQ_DIS<*>==1 disables the interrupt.            |
                                                    POW_WQ_INT_THR*[IQ_THR]==0 disables the int.    |
                                                  - POW_WQ_INT_CNT*[DS_CNT] >=                      |
                                                    POW_WQ_INT_THR*[DS_THR] and the threshold       |
                                                    interrupt is not disabled                       |
                                                    POW_WQ_INT_THR*[DS_THR]==0 disables the int.    |
                                                  - POW_WQ_INT_CNT*[TC_CNT]==1 when periodic        |
                                                    counter POW_WQ_INT_PC[PC]==0 and                |
                                                    POW_WQ_INT_THR*[TC_EN]==1 and at least one of:  |
                                                    - POW_WQ_INT_CNT*[IQ_CNT] > 0                   |
                                                    - POW_WQ_INT_CNT*[DS_CNT] > 0                   |
----------------------------------------------------------------------------------------------------
===

 *
 * POW_WQ_INT_PC = POW Work Queue Interrupt Periodic Counter Register
 *
 * Contains the threshold value for the work queue interrupt periodic counter and also a read-only
 * copy of the periodic counter.  For more information regarding this register, see the interrupt
 * section.
 *

     ==============================================================
     POW_WQ_INT_PC Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:60> RSVD2    RAZ      NS          NS        Reserved                                           |   
<59:32> PC       RO       0x0         NS        Work queue interrupt periodic counter              |   
<31:28> RSVD1    RAZ      NS          NS        Reserved                                           |   
<27:8>  PC_THR   R/W      0x0         NS        Work queue interrupt periodic counter threshold    |   
<7:0>   RSVD0    RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_NW_TIM = POW New Work Timer Period Register
 *
 * Sets the minimum period for a new work request timeout.  Period is specified in n-1 notation
 * where the increment value is 1024 clock cycles.  Thus, a value of 0x0 in this register translates
 * to 1024 cycles, 0x1 translates to 2048 cycles, 0x2 translates to 3072 cycles, etc...  Note: the
 * maximum period for a new work request timeout is 2 times the minimum period.  Note: the new work
 * request timeout counter is reset when this register is written.
 *
 * There are two new work request timeout cases:
 *
 * - WAIT bit clear.  The new work request can timeout if the timer expires before the pre-fetch
 *   engine has reached the end of all work queues.  This can occur if the executable work queue
 *   entry is deep in the queue and the pre-fetch engine is subject to many resets (i.e. high switch,
 *   de-schedule, or new work load from other PP's).  Thus, it is possible for a PP to receive a work
 *   response with the NO_WORK bit set even though there was at least one executable entry in the
 *   work queues.  The other (and typical) scenario for receiving a NO_WORK response with the WAIT
 *   bit clear is that the pre-fetch engine has reached the end of all work queues without finding
 *   executable work.
 *
 * - WAIT bit set.  The new work request can timeout if the timer expires before the pre-fetch
 *   engine has found executable work.  In this case, the only scenario where the PP will receive a
 *   work response with the NO_WORK bit set is if the timer expires.  Note: it is still possible for
 *   a PP to receive a NO_WORK response even though there was at least one executable entry in the
 *   work queues.
 *
 * In either case, it's important to note that switches and de-schedules are higher priority
 * operations that can cause the pre-fetch engine to reset.  Thus in a system with many switches or
 * de-schedules occuring, it's possible for the new work timer to expire (resulting in NO_WORK
 * responses) before the pre-fetch engine is able to get very deep into the work queues.
 *

     ==============================================================
     POW_NW_TIM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:10> RSVD     RAZ      NS          NS        Reserved                                           |   
<9:0>   NW_TIM   R/W      0x0         0x3ff     New work timer period                              |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_ECC_ERR = POW ECC Error Register
 *
 * Contains the single and double error bits and the corresponding interrupt enables for the ECC-
 * protected POW index memory.  Also contains the syndrome value in the event of an ECC error.
 *
 * Also contains the remote pointer error bit and interrupt enable.  RPE is set when the POW detected
 * corruption on one or more of the input queue lists in L2/DRAM (POW's local copy of the tail pointer
 * for the L2/DRAM input queue did not match the last entry on the the list).   This is caused by
 * L2/DRAM corruption, and is generally a fatal error because it likely caused POW to load bad work
 * queue entries.
 *
 * This register also contains the illegal operation error bits and the corresponding interrupt
 * enables as follows:
 *
 *  <0> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/DESCH/UPD_WQP from PP in NULL_NULL state
 *  <1> Received SWTAG/SWTAG_DESCH/DESCH/UPD_WQP from PP in NULL state
 *  <2> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/GET_WORK from PP with pending tag switch to ORDERED or ATOMIC
 *  <3> Received SWTAG/SWTAG_FULL/SWTAG_DESCH from PP with tag specified as NULL_NULL
 *  <4> Received SWTAG_FULL/SWTAG_DESCH from PP with tag specified as NULL
 *  <5> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/DESCH/UPD_WQP/GET_WORK/NULL_RD from PP with GET_WORK pending
 *  <6> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/DESCH/UPD_WQP/GET_WORK/NULL_RD from PP with NULL_RD pending
 *  <7> Received CLR_NSCHED from PP with SWTAG_DESCH/DESCH/CLR_NSCHED pending
 *  <8> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/DESCH/UPD_WQP/GET_WORK/NULL_RD from PP with CLR_NSCHED pending
 *  <9> Received illegal opcode
 * <10> Received ADD_WORK with tag specified as NULL_NULL
 * <11> Received DBG load from PP with DBG load pending
 * <12> Received CSR load from PP with CSR load pending
 *

     ==============================================================
     POW_ECC_ERR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:45> RSVD3    RAZ      NS          NS        Reserved                                           |   
<44:32> IOP_IE   R/W      0x0         NS        Illegal operation interrupt enables                |   
<31:29> RSVD2    RAZ      NS          NS        Reserved                                           |   
<28:16> IOP      R/W1C    0x0         0x0       Illegal operation errors                           |   
<15:14> RSVD1    RAZ      NS          NS        Reserved                                           |   
<13>    RPE_IE   R/W      0x0         NS        Remote pointer error interrupt enable              |   
<12>    RPE      R/W1C    0x0         0x0       Remote pointer error                               |   
<11:9>  RSVD0    RAZ      NS          NS        Reserved                                           |   
<8:4>   SYN      RO       NS          NS        Syndrome value (only valid when DBE or SBE is set) |   
<3>     DBE_IE   R/W      0x0         NS        Double bit error interrupt enable                  |   
<2>     SBE_IE   R/W      0x0         NS        Single bit error interrupt enable                  |   
<1>     DBE      R/W1C    0x0         0x0       Double bit error                                   |   
<0>     SBE      R/W1C    0x0         0x0       Single bit error                                   |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_INT_CTL = POW Internal Control Register
 *
 * Contains POW internal control values (for internal use, not typically for customer use):
 *
 * PFR_DIS = Disable high-performance pre-fetch reset mode.
 *
 * NBR_THR = Assert ncb__busy when the number of remaining coherent bus NBR credits equals is less
 * than or equal to this value.
 *

     ==============================================================
     POW_INT_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:6>  RSVD     RAZ      NS          NS        Reserved                                           |   
<5>     PFR_DIS  R/W      0x0         0x0       High-perf pre-fetch reset mode disable             |   
<4:0>   NBR_THR  R/W      0x2         0x2       NBR busy threshold                                 |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_NOS_CNT = POW No-schedule Count Register
 *
 * Contains the number of work queue entries on the no-schedule list.
 *

     ==============================================================
     POW_NOS_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:12> RSVD     RAZ      NS          NS        Reserved                                           |   
<11:0>  NOS_CNT  RO       0x0         NS        # of work queue entries on the no-schedule list    |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_PF_RST_MSK = POW Prefetch Reset Mask
 *
 * Resets the work prefetch engine when work is stored in an internal buffer (either when the add
 * work arrives or when the work is reloaded from an external buffer) for an enabled QOS level
 * (1 bit per QOS level).
 *

     ==============================================================
     POW_PF_RST_MSK Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVD     RAZ      NS          NS        Reserved                                           |   
<7:0>   RST_MSK  R/W      0x0         NS        Prefetch engine reset mask                         |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_IQ_INT = POW Input Queue Interrupt Register
 *
 * Contains the bits (1 per QOS level) that can trigger the input queue interrupt.  An IQ_INT bit
 * will be set if POW_IQ_CNT#QOS# changes and the resulting value is equal to POW_IQ_THR#QOS#.
 *

     ==============================================================
     POW_IQ_INT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVD     RAZ      NS          NS        Reserved                                           |   
<7:0>   IQ_INT   R/W1C    0x0         NS        Input queue interrupt bits                         |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_IQ_INT_EN = POW Input Queue Interrupt Enable Register
 *
 * Contains the bits (1 per QOS level) that enable the input queue interrupt.
 *

     ==============================================================
     POW_IQ_INT_EN Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  RSVD     RAZ      NS          NS        Reserved                                           |   
<7:0>   INT_EN   R/W      0x0         NS        Input queue interrupt enable bits                  |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_WS_PC@ = POW Work Schedule Performance Counter (1 per group)
 *
 * Counts the number of work schedules for each group.  Write to clear.
 *

     ==============================================================
     POW_WS_PC(0..15) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVD     RAZ      NS          NS        Reserved                                           |   
<31:0>  WS_PC    R/W1C    0x0         NS        Work schedule performance counter for group @      |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_WA_PC@ = POW Work Add Performance Counter (1 per QOS level)
 *
 * Counts the number of add new work requests for each QOS level.  Write to clear.
 *

     ==============================================================
     POW_WA_PC(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVD     RAZ      NS          NS        Reserved                                           |   
<31:0>  WA_PC    R/W1C    0x0         NS        Work add performance counter for QOS level @       |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_IQ_CNT@ = POW Input Queue Count Register (1 per QOS level)
 *
 * Contains a read-only count of the number of work queue entries for each QOS level.
 *

     ==============================================================
     POW_IQ_CNT(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVD     RAZ      NS          NS        Reserved                                           |   
<31:0>  IQ_CNT   RO       0x0         NS        Input queue count for QOS level @                  |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_WA_COM_PC = POW Work Add Combined Performance Counter
 *
 * Counts the number of add new work requests for all QOS levels.  Write to clear.
 *

     ==============================================================
     POW_WA_COM_PC Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVD     RAZ      NS          NS        Reserved                                           |   
<31:0>  WA_PC    R/W1C    0x0         NS        Work add combined performance counter              |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_IQ_COM_CNT = POW Input Queue Combined Count Register
 *
 * Contains a read-only count of the total number of work queue entries in all QOS levels.
 *

     ==============================================================
     POW_IQ_COM_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVD     RAZ      NS          NS        Reserved                                           |   
<31:0>  IQ_CNT   RO       0x0         NS        Input queue combined count                         |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_TS_PC = POW Tag Switch Performance Counter
 *
 * Counts the number of tag switch requests.  Write to clear.
 *

     ==============================================================
     POW_TS_PC Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVD     RAZ      NS          NS        Reserved                                           |   
<31:0>  TS_PC    R/W1C    0x0         NS        Tag switch performance counter                     |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_DS_PC = POW De-Schedule Performance Counter
 *
 * Counts the number of de-schedule requests.  Write to clear.
 *

     ==============================================================
     POW_DS_PC Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVD     RAZ      NS          NS        Reserved                                           |   
<31:0>  DS_PC    R/W1C    0x0         NS        De-schedule performance counter                    |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_IQ_THR@ = POW Input Queue Threshold Register (1 per QOS level)
 *
 * Threshold value for triggering input queue interrupts.
 *

     ==============================================================
     POW_IQ_THR(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> RSVD     RAZ      NS          NS        Reserved                                           |   
<31:0>  IQ_THR   R/W      0xffffffff  NS        Input queue threshold for QOS level @              |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_BIST_STAT = POW BIST Status Register
 *
 * Contains the BIST status for the POW memories ('0' = pass, '1' = fail).
 *
 * Also contains the BIST status for the PP's.  Each bit in the PP field is the OR of all BIST
 * results for the corresponding physical PP ('0' = pass, '1' = fail).
 *

     ==============================================================
     POW_BIST_STAT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:28> RSVD1    RAZ      NS          NS        Reserved                                           |   
<27:16> PP       RO       0x0         0x0       Physical PP BIST status                            |   
<15:10> RSVD0    RAZ      NS          NS        Reserved                                           |   
<9>     CAM      RO       0x0         0x0       POW CAM BIST status                                |   
<8>     NBT      RO       0x0         0x0       NCB transmitter memory BIST status                 |   
<7>     IDX      RO       0x0         0x0       Index memory BIST status                           |   
<6>     FIDX     RO       0x0         0x0       Forward index memory BIST status                   |   
<5>     NBR1     RO       0x0         0x0       NCB receiver memory 1 BIST status                  |   
<4>     NBR0     RO       0x0         0x0       NCB receiver memory 0 BIST status                  |   
<3>     PEND1    RO       0x0         0x0       Pending switch memory 1 BIST status                |   
<2>     PEND0    RO       0x0         0x0       Pending switch memory 0 BIST status                |   
<1>     ADR1     RO       0x0         0x0       Address memory 1 BIST status                       |   
<0>     ADR0     RO       0x0         0x0       Address memory 0 BIST status                       |   
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:6>  NS       RAZ       0           0        RESERVED                                               
<5:2>   MAX_READ R/W       8           8        Maximum number of outstanding data read commands       
<1>     STORE_LE R/W       0           0        Force STORE0 byte write address to little endian       
<0>     RESET    RAZ       0           0        Reset oneshot pulse (lasts for 4 cycles)               

Notes:
 MAX_READ is a throttle to control NCB usage.  Values >8 are illegal.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_CMD_BUF Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:58> NS       RAZ       0           0        RESERVED                                               
<57:49> DWB      R/W       0           NS       Number of DontWriteBacks                               
<48:46> POOL     R/W       0           NS       Free list used to free command buffer segments         
<45:33> SIZE     R/W       0           NS       Number of uint64s per command buffer segment           
<32:0>  PTR      R/W       0           NS       Initial command buffer pointer[39:7] (128B-aligned)    

Notes:
 Sets the command buffer parameters
 The size of the command buffer segments is measured in uint64s.  The pool specifies 1 of 8 free
 lists to be used when freeing command buffer segments.  The PTR field is overwritten with the next
 pointer each time that the command buffer segment is exhausted.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_POLYNOMIAL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:8>  NS       RAZ       0           0        RESERVED                                               
<7:0>   COEFFS   R/W       0x1d        0x1d     coefficients of GF(2^8) irreducible polynomial         

Notes:
 The polynomial is x^8 + C7*x^7 + C6*x^6 + C5*x^5 + C4*x^4 + C3*x^3 + C2*x^2 + C1*x^1 + C0.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_READ_IDX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32> NS       RAZ      NS          NS        RESERVED                                               
<31:16> INC      R/W      0           0         Increment to add to current index for next index       
<15:0>  IDX      R/W      0           0         Index to use for next memory CSR read                  

Notes:
 Provides the read index during a CSR read operation to any of the CSRs that are physically stored
 as memories.  The names of these CSRs begin with the prefix "RAD_MEM_".
 IDX[15:0] is the read index.  INC[15:0] is an increment that is added to IDX[15:0] after any CSR read.
 The intended use is to initially write this CSR such that IDX=0 and INC=1.  Then, the entire
 contents of a CSR memory can be read with consecutive CSR read commands.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_BIST_RESULT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:6>  NS       RAZ       NS          NS       RESERVED                                               
<5>     STA      RO        X           0        BiST result of the STA     memories                    
<4>     NCB_OUB  RO        X           0        BiST result of the NCB_OUB memories                    
<3:2>   NCB_INB  RO        X           0        BiST result of the NCB_INB memories                    
<1:0>   DAT      RO        X           0        BiST result of the DAT     memories                    

Notes:
 Access to the internal BiST results
 Each bit is the BiST result of an individual memory (per bit, 0=pass and 1=fail).
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_ERROR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  NS       RAZ      NS          NS        RESERVED                                               
<0>     DOORBELL R/W1C    0           0         A doorbell count has overflowed                        
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_INT_MASK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  NS       RAZ      NS          NS        RESERVED                                               
<0>     DOORBELL R/W      0           0         Bit mask corresponding to RAD_REG_ERROR[0] above       

Notes:
 When a mask bit is set, the corresponding interrupt is enabled.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:57> NS       RO       NS          NS        RESERVED                                               
<56:32> LOOP     RO       NS          NS        Loop offset                                            
<31:24> NS       RO       NS          NS        RESERVED                                               
<23:22> NS       RO       NS          NS        RESERVED                                               
<21:16> IRIDX    RO       NS          NS        IWords read index                                      
<15:14> NS       RO       NS          NS        RESERVED                                               
<13:8>  IWIDX    RO       NS          NS        IWords write index                                     
<7>     OWORDQV  RO       NS          NS        Valid for OWORDQ                                       
<6>     OWORDPV  RO       NS          NS        Valid for OWORDP                                       
<5>     COMMIT   RO       NS          NS        Waiting for write commit                               
<4:0>   STATE    RO       NS          NS        Main state                                             
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  CWORD    RO       NS          NS        CWord                                                  
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  OWORDP   RO       NS          NS        OWordP                                                 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  OWORDQ   RO       NS          NS        OWordQ                                                 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  RWORD    RO       NS          NS        RWord                                                  
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:53> NS       RAZ      NS          NS        RESERVED                                               
<52:50> NIROPC7  RO       NS          NS        NCBI ropc (stage7 grant)                               
<49:48> NIRQUE7  RO       NS          NS        NCBI rque (stage7 grant)                               
<47:43> NIRVAL7  RO       NS          NS        NCBI rval (stage7 grant)                               
<42:40> NIROPC6  RO       NS          NS        NCBI ropc (stage6 arb)                                 
<39:38> NIRQUE6  RO       NS          NS        NCBI rque (stage6 arb)                                 
<37>    NIRARB6  RO       NS          NS        NCBI rarb (stage6 arb)                                 
<36:32> NIRVAL6  RO       NS          NS        NCBI rval (stage6 arb)                                 
<31:28> NIRIDX1  RO       NS          NS        NCBI ridx1                                             
<27:24> NIWIDX1  RO       NS          NS        NCBI widx1                                             
<23:20> NIRIDX0  RO       NS          NS        NCBI ridx0                                             
<19:16> NIWIDX0  RO       NS          NS        NCBI widx0                                             
<15:14> WCCREDS  RO       0           0         WC credits                                             
<13:12> FPACREDS RO       1           0         POW credits                                            
<11:10> NS       RAZ      NS          NS        RESERVED                                               
<9:8>   POWCREDS RO       2           0         POW credits                                            
<7:4>   N1CREDS  RO       8           0         NCBI1 credits                                          
<3:0>   N0CREDS  RO       8           0         NCBI0 credits                                          
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG6 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:56> CNT      RO       NS          NS        CCTL count[7:0] (bytes)                                
<55:40> SIZE     RO       NS          NS        CCTL size (bytes)                                      
<39:0>  PTR      RO       NS          NS        CCTL pointer                                           
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG7 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:15> NS       RAZ      NS          NS        RESERVED                                               
<14:0>  CNT      RO       NS          NS        CCTL count[22:8] (bytes)                               
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG8 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:56> FLAGS    RO       NS          NS        ICTL flags                                             
<55:40> SIZE     RO       NS          NS        ICTL size (bytes)                                      
<39:0>  PTR      RO       NS          NS        ICTL pointer                                           
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG9 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:20> NS       RAZ      NS          NS        RESERVED                                               
<19>    EOD      RO       NS          NS        ICTL eod flag                                          
<18>    INI      RO       NS          NS        ICTL init flag                                         
<17>    Q        RO       NS          NS        ICTL q enable                                          
<16>    P        RO       NS          NS        ICTL p enable                                          
<15:8>  MUL      RO       NS          NS        ICTL multiplier                                        
<7:0>   IDX      RO       NS          NS        ICTL index                                             
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG10 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:56> FLAGS    RO       NS          NS        OCTL flags                                             
<55:40> SIZE     RO       NS          NS        OCTL size (bytes)                                      
<39:0>  PTR      RO       NS          NS        OCTL pointer                                           
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG11 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:13> NS       RAZ      NS          NS        RESERVED                                               
<12>    Q        RO       NS          NS        OCTL q flag                                            
<11>    P        RO       NS          NS        OCTL p flag                                            
<10>    WC       RO       NS          NS        OCTL write commit flag                                 
<9>     EOD      RO       NS          NS        OCTL eod flag                                          
<8>     SOD      RO       NS          NS        OCTL sod flag                                          
<7:0>   IDX      RO       NS          NS        OCTL index                                             
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG12 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:15> NS       RAZ      NS          NS        RESERVED                                               
<14:0>  ASSERTS  RO       NS          NS        Various assertion checks                               
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_MEM_DEBUG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  IWORD    RO       NS          NS        IWord                                                  

Notes:
 This CSR is a memory of 32 entries, and thus, the RAD_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_MEM_DEBUG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  P_DAT    RO       NS          NS        P data                                                 

Notes:
 This CSR is a memory of 256 entries, and thus, the RAD_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_MEM_DEBUG2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>  Q_DAT    RO       NS          NS        Q data                                                 

Notes:
 This CSR is a memory of 256 entries, and thus, the RAD_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===


 *
 *                  RNM_CTL_STATUS = RNM's Control/Status Register
 *
 * The RNM's interrupt enable register.
 *

     ==============================================================
     RNM_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     ENT_EN   R/W      0           0         Entropy enable for random number generator.            
<1>     RNG_EN   R/W      0           0         Enable the output of the RNG.                          
<2>     RNM_RST  R/W      0           0         Reset the RNM as core reset except for register        
                                                 logic.
<3>     RNG_RST  R/W      0           0         Reset RNG as core reset.                               
<4>     EXP_ENT  R/W      0           0         Exported entropy enable for random number generator    
<8:5>   ENT_SEL  R/W      0           0         ?                                                      
<63:9>  NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  RNM_BIST_STATUS = RNM's BIST Status Register
 *
 * The RNM's Memory Bist Status register.
 *

     ==============================================================
     RNM_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     MEM      RO       0           0         Status of MEM block bist.                              
<1>     RRC      RO       0           0         Status of RRC block bist.                              
<63:2>  NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     TIM_REG_FLAGS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:3>  NS       RAZ       NS          NS       RESERVED                                               
<2>   RESET    RAZ       0           0        Reset oneshot pulse for free-running structures        
<1>   ENA_DWB  R/W       0           0        Enables non-zero DonwWriteBacks when set               
                                                 When set, enables the use of
                                                 DontWriteBacks during the buffer freeing
                                                 operations.
<0>   ENA_TIM  R/W       0           0        Enables the TIM section when set                       
                                                 When set, TIM is in normal operation.
                                                 When clear, time is effectively stopped for all
                                                 rings in TIM.

Notes:
 TIM has a counter that causes a periodic tick every 1024 cycles. This counter is shared by all
 rings. (Each tick causes the HW to decrement the time offset (i.e. COUNT) for all enabled rings.)
 When ENA_TIM==0, the HW stops this shared periodic counter, so there are no more ticks, and there
 are no more new bucket traversals (for any ring).

 If ENA_TIM transitions 1->0, TIM will no longer create new bucket traversals, but there may
 have been previous ones. If there are ring bucket traversals that were already pending but
 not currently active (i.e. bucket traversals that need to be done by the HW, but haven't been yet)
 during this ENA_TIM 1->0 transition, then these bucket traversals will remain pending until
 ENA_TIM is later set to one. Bucket traversals that were already in progress will complete
 after the 1->0 ENA_TIM transition, though.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_REG_READ_IDX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> NS       RAZ      NS          NS        RESERVED                                               
<15:8>  INC      R/W      0           0         Increment to add to current index for next index       
<7:0>   IDX      R/W      0           0         Index to use for next memory CSR read                  

Notes:
 Provides the read index during a CSR read operation to any of the CSRs that are physically stored
 as memories.  The names of these CSRs begin with the prefix "TIM_MEM_".
 IDX[7:0] is the read index.  INC[7:0] is an increment that is added to IDX[7:0] after any CSR read.
 The intended use is to initially write this CSR such that IDX=0 and INC=1.  Then, the entire
 contents of a CSR memory can be read with consecutive CSR read commands.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_REG_BIST_RESULT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>  NS       RAZ       NS          NS       RESERVED                                               
<3:2>   STA      RO        X           0        BiST result of the STA   memories (0=pass, !0=fail)    
<1:1>   NCB      RO        X           0        BiST result of the NCB   memories (0=pass, !0=fail)    
<0:0>   CTL      RO        X           0        BiST result of the CTL   memories (0=pass, !0=fail)    

Notes:
 Access to the internal BiST results
 Each bit is the BiST result of an individual memory (per bit, 0=pass and 1=fail).
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_REG_ERROR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> NS       RAZ      NS          NS        RESERVED                                               
<15:0>  MASK     R/W1C    0           0         Bit mask indicating the rings in error                 

Notes:
 A ring is in error if its interval has elapsed more than once without having been serviced.
 During a CSR write to this register, the write data is used as a mask to clear the selected mask
 bits (mask'[15:0] = mask[15:0] & ~write_data[15:0]).
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_REG_INT_MASK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16> NS       RAZ      NS          NS        RESERVED                                               
<15:0>  MASK     R/W      0           0         Bit mask corresponding to TIM_REG_ERROR.MASK above     

Notes:
 Note that this CSR is present only in chip revisions beginning with pass2.
 When mask bit is set, the interrupt is enabled.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_MEM_RING0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:55> NS       RAZ      NS          NS        RESERVED                                               
<54:24> BASE     R/W      0           0         Pointer[35:5] to bucket[0]                             
<23:4>  BSIZE    R/W      0           0         Number of buckets - 1                                  
<3:0>   RID      R/W      0           0         Ring ID                                                

Notes:
 TIM_MEM_RING0 must not be written for a ring when TIM_MEM_RING1[ENA] is set for the ring.
 Every write to TIM_MEM_RING0 clears the current bucket for the ring. (The current bucket is
 readable via TIM_MEM_DEBUG2[BUCKET],TIM_MEM_DEBUG1[BUCKET].)
 BASE is a 32-byte aligned pointer[35:0].  Only pointer[35:5] are stored because pointer[4:0] = 0.
 This CSR is a memory of 16 entries, and thus, the TIM_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_MEM_RING1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:43> NS       RAZ      NS          NS        RESERVED                                               
<42:42> ENA      R/W      0           0         Ring timer enable                                      
                                                 When clear, the ring is disabled and TIM
                                                 will not traverse any new buckets for the ring.
<41:39> CPOOL    R/W      0           0         Free list used to free chunks                          
<38:26> CSIZE    R/W      0           0         Number of words per chunk                              
<25:4>  INTERVAL R/W      0           0         Timer interval - 1, measured in 1024 cycle ticks       
<3:0>   RID      R/W      0           0         Ring ID                                                

Notes:
 After a 1->0 transition on ENA, the HW will still complete a bucket traversal for the ring
 if it was pending or active prior to the transition. (SW must delay to ensure the completion
 of the traversal before reprogramming the ring.)
 Every write to TIM_MEM_RING1 resets the current time offset for the ring to the INTERVAL value.
 (The current time offset for the ring is readable via TIM_MEM_DEBUG0[COUNT].)
 CSIZE must be at least 16.  It is illegal to program CSIZE to a value that is less than 16.
 This CSR is a memory of 16 entries, and thus, the TIM_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_MEM_DEBUG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> NS       RAZ       NS          NS       RESERVED                                               
<47:47> ENA      RO        X           0        Ring timer enable                                      
<46:46> NS       RAZ       NS          NS       RESERVED                                               
<45:24> COUNT    RO        X           0        Time offset for the ring                               
                                                 Set to INTERVAL and counts down by 1 every 1024
                                                 cycles when ENA==1. The HW forces a bucket
                                                 traversal (and resets COUNT to INTERVAL) whenever
                                                 the decrement would cause COUNT to go negative.
                                                 COUNT is unpredictable whenever ENA==0.
                                                 COUNT is reset to INTERVAL whenever TIM_MEM_RING1
                                                 is written for the ring.
<23:22> NS       RAZ       NS          NS       RESERVED                                               
<21:0>  INTERVAL RO        X           0        Timer interval - 1                                     

Notes:
 Internal per-ring state intended for debug use only - tim.ctl[47:0]
 This CSR is a memory of 16 entries, and thus, the TIM_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_MEM_DEBUG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:51> BUCKET   RO        X           0        Current bucket[12:0]                                   
                                                 Reset to 0 whenever TIM_MEM_RING0 is written for
                                                 the ring. Incremented (modulo BSIZE) once per
                                                 bucket traversal.
                                                 See TIM_MEM_DEBUG2[BUCKET].
<50:20> BASE     RO        X           0        Pointer[35:5] to bucket[0]                             
<19:0>  BSIZE    RO        X           0        Number of buckets - 1                                  

Notes:
 Internal per-ring state intended for debug use only - tim.sta[63:0]
 This CSR is a memory of 16 entries, and thus, the TIM_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_MEM_DEBUG2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:24> NS       RAZ       NS          NS       RESERVED                                               
<23:21> CPOOL    RO        X           0        Free list used to free chunks                          
<20:8>  CSIZE    RO        X           0        Number of words per chunk                              
<7>     UNUSED   RO        X           0        Unused                                                 
<6:0>   BUCKET   RO        X           0        Current bucket[19:13]                                  
                                                 See TIM_MEM_DEBUG1[BUCKET].

Notes:
 Internal per-ring state intended for debug use only - tim.sta[95:64]
 This CSR is a memory of 16 entries, and thus, the TIM_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===

 *
 *                  TRA(0)_CTL = Trace Buffer Control
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:15>  NS       RAZ      0           0         RESERVED                                               
<14>     IGNORE_O R/W      0           0         Ignore overflow during wrap mode                       
                                                   If set and wrapping mode is enabled, then tracing
                                                   will not stop at the overflow condition.  Each
                                                   write during an overflow will overwrite the
                                                   oldest, unread entry and the read pointer is
                                                   incremented by one entry.  This bit has no effect
                                                   if WRAP=0.
<13>     MCD0_ENA R/W      0           0         MCD0 enable                                            
                                                   If set and any PP sends the MCD0 signal, the
                                                   tracing is disabled.
<12>     MCD0_THR R/W      0           0         MCD0_threshold                                         
                                                   At a fill threshold event, sends an MCD0
                                                   wire pulse that can cause cores to enter debug
                                                   mode, if enabled.  This MCD0 wire pulse will not
                                                   occur while (TRA(0)_INT_STATUS.MCD0_THR == 1).
<11>     MCD0_TRG R/W      0           0         MCD0_trigger                                           
                                                   At an end trigger event, sends an MCD0
                                                   wire pulse that can cause cores to enter debug
                                                   mode, if enabled.  This MCD0 wire pulse will not
                                                   occur while (TRA(0)_INT_STATUS.MCD0_TRG == 1).
<10>     CIU_THR R/W      0           0          CIU_threshold                                          
                                                   When set during a fill threshold event,
                                                   TRA(0)_INT_STATUS[CIU_THR] is set, which can cause
                                                   core interrupts, if enabled.
<9>      CIU_TRG R/W      0           0          CIU_trigger                                            
                                                   When set during an end trigger event,
                                                   TRA(0)_INT_STATUS[CIU_TRG] is set, which can cause
                                                   core interrupts, if enabled.
<8:7>    FULL_THR R/W      0           0         Full Threshhold                                        
                                                   0=none
                                                   1=1/2 full
                                                   2=3/4 full
                                                   3=4/4 full
<6:4>    TIME_GRN R/W      0           0         Timestamp granularity                                  
                                                   granularity=8^n cycles, n=0,1,2,3,4,5,6,7
<3:2>    TRIG_CTL R/W      0           0         Trigger Control                                        
                                                   Note: trigger events are written to the trace
                                                   0=no triggers
                                                   1=trigger0=start trigger, trigger1=stop trigger
                                                   2=(trigger0 || trigger1)=start trigger
                                                   3=(trigger0 || trigger1)=stop trigger
<1>      WRAP     R/W      0           0         Wrap mode                                              
                                                   When WRAP=0, the trace buffer will disable itself
                                                   after having logged 1024 entries.  When WRAP=1,
                                                   the trace buffer will never disable itself.
                                                   In this case, tracing may or may not be
                                                   temporarily suspended during the overflow
                                                   condition (see IGNORE_O above).
                                                   0=do not wrap
                                                   1=wrap
<0>      ENA      R/W      0           0         Enable Trace                                           
                                                   Master enable.  Tracing only happens when ENA=1.
                                                   When ENA changes from 0 to 1, the read and write
                                                   pointers are reset to 0x00 to begin a new trace.
                                                   The MCD0 event may set ENA=0 (see MCD0_ENA
                                                   above).  When using triggers, tracing occurs only
                                                   between start and stop triggers (including the
                                                   triggers themselves).
                                                   0=disable
                                                   1=enable

Notes:
 It is illegal to change the values of WRAP, TRIG_CTL, IGNORE_O while tracing (i.e. when ENA=1).
 Note that the following fields are present only in chip revisions beginning with pass2: IGNORE_O
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA(0)_INT_STATUS = Trace Buffer Interrupt Status
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_INT_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>   NS       RAZ      0           0         RESERVED                                               
<3>      MCD0_THR R/W1C    0           0         MCD0 full threshold interrupt status                   
                                                   0=trace buffer did not generate MCD0 wire pulse
                                                   1=trace buffer did     generate MCD0 wire pulse
                                                     and prevents additional MCD0_THR MCD0 wire pulses
<2>      MCD0_TRG R/W1C    0           0         MCD0 end trigger interrupt status                      
                                                   0=trace buffer did not generate interrupt
                                                   1=trace buffer did     generate interrupt
                                                     and prevents additional MCD0_TRG MCD0 wire pulses
<1>      CIU_THR  R/W1C    0           0         CIU full threshold interrupt status                    
                                                   0=trace buffer did not generate interrupt
                                                   1=trace buffer did     generate interrupt
<0>      CIU_TRG  R/W1C    0           0         CIU end trigger interrupt status                       
                                                   0=trace buffer did not generate interrupt
                                                   1=trace buffer did     generate interrupt

Notes:
 During a CSR write to this register, the write data is used as a mask to clear the selected status
 bits (status'[3:0] = status[3:0] & ~write_data[3:0]).
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA(0)_BIST_STATUS = Trace Buffer BiST Status
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:3>   NS       RAZ      0           0         RESERVED                                               
<2>      TCF      RO       0           0         Bist Results for TCF memory                            
                                                   0: GOOD (or bist in progress/never run)
                                                   1: BAD
<1>      TDF1     RO       0           0         Bist Results for TDF memory 1                          
                                                   0: GOOD (or bist in progress/never run)
                                                   1: BAD
<0>      TDF0     RO       0           0         Bist Results for TCF memory 0                          
                                                   0: GOOD (or bist in progress/never run)
                                                   1: BAD
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA(0)_CYCLES_SINCE = Trace Buffer Cycles Since Last Write, Read/Write pointers
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_CYCLES_SINCE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16>  CYCLES   RO       0           0         Cycles since the last entry was written                
<15:8>   RPTR     RO       0           0         Read pointer                                           
<7:0>    WPTR     RO       0           0         Write pointer                                          

Notes:
 This CSR is obsolete.  Use TRA(0)_CYCLES_SINCE1 instead.
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA(0)_READ_DAT = Trace Buffer Read Data
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_READ_DAT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   DATA     RO       0           0         Trace buffer data for current entry                    

Notes:
 This CSR is a memory of 1024 entries.  When the trace was enabled, the read pointer was set to entry
 0 by hardware.  Each read to this address increments the read pointer.
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA(0)_CYCLES_SINCE1 = Trace Buffer Cycles Since Last Write, Read/Write pointers
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_CYCLES_SINCE1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:24>  CYCLES   RO       0           0         Cycles since the last entry was written                
<23:22>  NS       RAZ      NS          NS        RESERVED                                               
<21:12>  RPTR     RO       0           0         Read pointer                                           
<11:10>  NS       RAZ      NS          NS        RESERVED                                               
<9:0>    WPTR     RO       0           0         Write pointer                                          
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA(0)_FILT_CMD = Trace Buffer Filter Command Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_FILT_CMD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:17>  NS       RAZ      0           0         RESERVED                                               
<16>     SAA      R/W      0           1         Enable SAA     tracing                                 
                                                   0=disable, 1=enable
<15>     IOBDMA   R/W      0           1         Enable IOBDMA  tracing                                 
                                                   0=disable, 1=enable
<14>     IOBST    R/W      0           1         Enable IOBST   tracing                                 
                                                   0=disable, 1=enable
<13>     IOBLD64  R/W      0           1         Enable IOBLD64 tracing                                 
                                                   0=disable, 1=enable
<12>     IOBLD32  R/W      0           1         Enable IOBLD32 tracing                                 
                                                   0=disable, 1=enable
<11>     IOBLD16  R/W      0           1         Enable IOBLD16 tracing                                 
                                                   0=disable, 1=enable
<10>     IOBLD8   R/W      0           1         Enable IOBLD8  tracing                                 
                                                   0=disable, 1=enable
<9>      STT      R/W      0           1         Enable STT     tracing                                 
                                                   0=disable, 1=enable
<8>      STP      R/W      0           1         Enable STP     tracing                                 
                                                   0=disable, 1=enable
<7>      STC      R/W      0           1         Enable STC     tracing                                 
                                                   0=disable, 1=enable
<6>      STF      R/W      0           1         Enable STF     tracing                                 
                                                   0=disable, 1=enable
<5>      LDT      R/W      0           1         Enable LDT     tracing                                 
                                                   0=disable, 1=enable
<4>      LDI      R/W      0           1         Enable LDI     tracing                                 
                                                   0=disable, 1=enable
<3>      LDD      R/W      0           1         Enable LDD     tracing                                 
                                                   0=disable, 1=enable
<2>      PSL1     R/W      0           1         Enable PSL1    tracing                                 
                                                   0=disable, 1=enable
<1>      PL2      R/W      0           1         Enable PL2     tracing                                 
                                                   0=disable, 1=enable
<0>      DWB      R/W      0           1         Enable DWB     tracing                                 
                                                   0=disable, 1=enable

Notes:
Note that the trace buffer does not do proper IOBDMA address compares.  Thus, if IOBDMA is set, then
the address compare must be disabled (i.e. TRA(0)_FILT_ADR_MSK set to zero) to guarantee that IOBDMAs
enter the trace.
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA(0)_FILT_SID = Trace Buffer Filter SourceId Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_FILT_SID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  NS       RAZ      NS          NS        RESERVED                                               
<31:20>  UNUSED   R/W      0           0         Unused                                                 
<19>     DWB      R/W      0           0         Enable tracing of requests from the IOB DWB engine     
<18>     IOBREQ   R/W      0           0         Enable tracing of requests from FPA,TIM,DFA,           
                                                 PCI,ZIP,POW, and PKO (writes)
<17>     PKO      R/W      0           0         Enable tracing of read requests from PKO               
<16>     PKI      R/W      0           0         Enable tracing of write requests from PIP/IPD          
<15:0>   PP       R/W      0           0         Enable tracing from PP[N] with matching SourceID       
                                                   0=disable, 1=enableper bit N where  0<=N<=15
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA(0)_FILT_DID = Trace Buffer Filter DestinationId Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_FILT_DID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  NS       RAZ      0           0         RESERVED                                               
<31:13>  ILLEGAL  R/W      0           0x7FFFF   Illegal destinations                                   
<12>     POW      R/W      0           1         Enable tracing of requests to POW                      
                                                 (get work, add work, status/memory/index
                                                 loads, NULLRd loads, CSR's)
<11:9>   ILLEGAL2 R/W      0           0x7       Illegal destinations                                   
<8>      RNG      R/W      0           1         Enable tracing of requests to RNG                      
                                                 (loads/IOBDMA's are legal)
<7>      ZIP      R/W      0           1         Enable tracing of requests to ZIP                      
                                                 (doorbell stores are legal)
<6>      DFA      R/W      0           1         Enable tracing of requests to DFA                      
                                                 (CSR's and operations are legal)
<5>      FPA      R/W      0           1         Enable tracing of requests to FPA                      
                                                 (alloc's (loads/IOBDMA's), frees (stores) are legal)
<4>      KEY      R/W      0           1         Enable tracing of requests to KEY memory               
                                                 (loads/IOBDMA's/stores are legal)
<3>      PCI      R/W      0           1         Enable tracing of requests to PCI and RSL-type         
                                                 CSR's (RSL CSR's, PCI bus operations, PCI
                                                 CSR's)
<2:1>    ILLEGAL3 R/W      0           0x3       Illegal destinations                                   
<0>      MIO      R/W      0           1         Enable tracing of CIU and GPIO CSR's                   
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA(0)_FILT_ADR_ADR = Trace Buffer Filter Address Address
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_FILT_ADR_ADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:36>  NS       RAZ      0           0         RESERVED                                               
<35:0>   ADR      R/W      0           NS        Unmasked Address                                       
                                                   The combination of TRA(0)_FILT_ADR_ADR and
                                                   TRA(0)_FILT_ADR_MSK is a masked address to
                                                   enable tracing of only those commands whose
                                                   masked address matches
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA(0)_FILT_ADR_MSK = Trace Buffer Filter Address Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_FILT_ADR_MSK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:36>  NS       RAZ      0           0         RESERVED                                               
<35:0>   ADR      R/W      0           0         Address Mask                                           
                                                   The combination of TRA(0)_FILT_ADR_ADR and
                                                   TRA(0)_FILT_ADR_MSK is a masked address to
                                                   enable tracing of only those commands whose
                                                   masked address matches.  When a mask bit is not
                                                   set, the corresponding address bits are assumed
                                                   to match.  Also, note that IOBDMAs do not have
                                                   proper addresses, so when TRA(0)_FILT_CMD[IOBDMA]
                                                   is set, TRA(0)_FILT_ADR_MSK must be zero to
                                                   guarantee that any IOBDMAs enter the trace.
----------------------------------------------------------------------------------------------------
===

 *
 *                  TRA(0)_TRIG0_CMD = Trace Buffer Filter Command Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_TRIG0_CMD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:17>  NS       RAZ      0           0         RESERVED                                               
<16>     SAA      R/W      0           1         Enable SAA     tracing                                 
                                                   0=disable, 1=enable
<15>     IOBDMA   R/W      0           1         Enable IOBDMA  tracing                                 
                                                   0=disable, 1=enable
<14>     IOBST    R/W      0           1         Enable IOBST   tracing                                 
                                                   0=disable, 1=enable
<13>     IOBLD64  R/W      0           1         Enable IOBLD64 tracing                                 
                                                   0=disable, 1=enable
<12>     IOBLD32  R/W      0           1         Enable IOBLD32 tracing                                 
                                                   0=disable, 1=enable
<11>     IOBLD16  R/W      0           1         Enable IOBLD16 tracing                                 
                                                   0=disable, 1=enable
<10>     IOBLD8   R/W      0           1         Enable IOBLD8  tracing                                 
                                                   0=disable, 1=enable
<9>      STT      R/W      0           1         Enable STT     tracing                                 
                                                   0=disable, 1=enable
<8>      STP      R/W      0           1         Enable STP     tracing                                 
                                                   0=disable, 1=enable
<7>      STC      R/W      0           1         Enable STC     tracing                                 
                                                   0=disable, 1=enable
<6>      STF      R/W      0           1         Enable STF     tracing                                 
                                                   0=disable, 1=enable
<5>      LDT      R/W      0           1         Enable LDT     tracing                                 
                                                   0=disable, 1=enable
<4>      LDI      R/W      0           1         Enable LDI     tracing                                 
                                                   0=disable, 1=enable
<3>      LDD      R/W      0           1         Enable LDD     tracing                                 
                                                   0=disable, 1=enable
<2>      PSL1     R/W      0           1         Enable PSL1    tracing                                 
                                                   0=disable, 1=enable
<1>      PL2      R/W      0           1         Enable PL2     tracing                                 
                                                   0=disable, 1=enable
<0>      DWB      R/W      0           1         Enable DWB     tracing                                 
                                                   0=disable, 1=enable

Notes:
Note that the trace buffer does not do proper IOBDMA address compares.  Thus, if IOBDMA is set, then
the address compare must be disabled (i.e. TRA(0)_TRIG0_ADR_MSK set to zero) to guarantee that IOBDMAs
are recognized as triggers.
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA(0)_TRIG0_SID = Trace Buffer Filter SourceId Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_TRIG0_SID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  NS       RAZ      NS          NS        RESERVED                                               
<31:20>  UNUSED   R/W      0           0         Unused                                                 
<19>     DWB      R/W      0           0         Enable triggering on requests from the IOB DWB engine  
<18>     IOBREQ   R/W      0           0         Enable triggering on requests from FPA,TIM,DFA,        
                                                 PCI,ZIP,POW, and PKO (writes)
<17>     PKO      R/W      0           0         Enable triggering on read requests from PKO            
<16>     PKI      R/W      0           0         Enable triggering on write requests from PIP/IPD       
<15:0>   PP       R/W      0           0         Enable triggering from PP[N] with matching SourceID    
                                                   0=disable, 1=enableper bit N where  0<=N<=15
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA(0)_TRIG0_DID = Trace Buffer Filter DestinationId Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_TRIG0_DID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  NS       RAZ      0           0         RESERVED                                               
<31:13>  ILLEGAL  R/W      0           0x7FFFF   Illegal destinations                                   
<12>     POW      R/W      0           1         Enable triggering on requests to POW                   
                                                 (get work, add work, status/memory/index
                                                 loads, NULLRd loads, CSR's)
<11:9>   ILLEGAL2 R/W      0           0x7       Illegal destinations                                   
<8>      RNG      R/W      0           1         Enable triggering on requests to RNG                   
                                                 (loads/IOBDMA's are legal)
<7>      ZIP      R/W      0           1         Enable triggering on requests to ZIP                   
                                                 (doorbell stores are legal)
<6>      DFA      R/W      0           1         Enable triggering on requests to DFA                   
                                                 (CSR's and operations are legal)
<5>      FPA      R/W      0           1         Enable triggering on requests to FPA                   
                                                 (alloc's (loads/IOBDMA's), frees (stores) are legal)
<4>      KEY      R/W      0           1         Enable triggering on requests to KEY memory            
                                                 (loads/IOBDMA's/stores are legal)
<3>      PCI      R/W      0           1         Enable triggering on requests to PCI and RSL-type      
                                                 CSR's (RSL CSR's, PCI bus operations, PCI
                                                 CSR's)
<2:1>    ILLEGAL3 R/W      0           0x3       Illegal destinations                                   
<0>      MIO      R/W      0           1         Enable triggering on CIU and GPIO CSR's                
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA(0)_TRIG0_ADR_ADR = Trace Buffer Filter Address Address
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_TRIG0_ADR_ADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:36>  NS       RAZ      0           0         RESERVED                                               
<35:0>   ADR      R/W      0           NS        Unmasked Address                                       
                                                   The combination of TRA(0)_TRIG0_ADR_ADR and
                                                   TRA(0)_TRIG0_ADR_MSK is a masked address to
                                                   enable tracing of only those commands whose
                                                   masked address matches
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA(0)_TRIG0_ADR_MSK = Trace Buffer Filter Address Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_TRIG0_ADR_MSK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:36>  NS       RAZ      0           0         RESERVED                                               
<35:0>   ADR      R/W      0           0         Address Mask                                           
                                                   The combination of TRA(0)_TRIG0_ADR_ADR and
                                                   TRA(0)_TRIG0_ADR_MSK is a masked address to
                                                   enable tracing of only those commands whose
                                                   masked address matches.  When a mask bit is not
                                                   set, the corresponding address bits are assumed
                                                   to match.  Also, note that IOBDMAs do not have
                                                   proper addresses, so when TRA(0)_TRIG0_CMD[IOBDMA]
                                                   is set, TRA(0)_FILT_TRIG0_MSK must be zero to
                                                   guarantee that any IOBDMAs are recognized as
                                                   triggers.
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA(0)_TRIG1_CMD = Trace Buffer Filter Command Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_TRIG1_CMD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:17>  NS       RAZ      0           0         RESERVED                                               
<16>     SAA      R/W      0           1         Enable SAA     tracing                                 
                                                   0=disable, 1=enable
<15>     IOBDMA   R/W      0           1         Enable IOBDMA  tracing                                 
                                                   0=disable, 1=enable
<14>     IOBST    R/W      0           1         Enable IOBST   tracing                                 
                                                   0=disable, 1=enable
<13>     IOBLD64  R/W      0           1         Enable IOBLD64 tracing                                 
                                                   0=disable, 1=enable
<12>     IOBLD32  R/W      0           1         Enable IOBLD32 tracing                                 
                                                   0=disable, 1=enable
<11>     IOBLD16  R/W      0           1         Enable IOBLD16 tracing                                 
                                                   0=disable, 1=enable
<10>     IOBLD8   R/W      0           1         Enable IOBLD8  tracing                                 
                                                   0=disable, 1=enable
<9>      STT      R/W      0           1         Enable STT     tracing                                 
                                                   0=disable, 1=enable
<8>      STP      R/W      0           1         Enable STP     tracing                                 
                                                   0=disable, 1=enable
<7>      STC      R/W      0           1         Enable STC     tracing                                 
                                                   0=disable, 1=enable
<6>      STF      R/W      0           1         Enable STF     tracing                                 
                                                   0=disable, 1=enable
<5>      LDT      R/W      0           1         Enable LDT     tracing                                 
                                                   0=disable, 1=enable
<4>      LDI      R/W      0           1         Enable LDI     tracing                                 
                                                   0=disable, 1=enable
<3>      LDD      R/W      0           1         Enable LDD     tracing                                 
                                                   0=disable, 1=enable
<2>      PSL1     R/W      0           1         Enable PSL1    tracing                                 
                                                   0=disable, 1=enable
<1>      PL2      R/W      0           1         Enable PL2     tracing                                 
                                                   0=disable, 1=enable
<0>      DWB      R/W      0           1         Enable DWB     tracing                                 
                                                   0=disable, 1=enable

Notes:
Note that the trace buffer does not do proper IOBDMA address compares.  Thus, if IOBDMA is set, then
the address compare must be disabled (i.e. TRA(0)_TRIG1_ADR_MSK set to zero) to guarantee that IOBDMAs
are recognized as triggers.
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA(0)_TRIG1_SID = Trace Buffer Filter SourceId Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_TRIG1_SID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  NS       RAZ      NS          NS        RESERVED                                               
<31:20>  UNUSED   R/W      0           0         Unused                                                 
<19>     DWB      R/W      0           0         Enable triggering on requests from the IOB DWB engine  
<18>     IOBREQ   R/W      0           0         Enable triggering on requests from FPA,TIM,DFA,        
                                                 PCI,ZIP,POW, and PKO (writes)
<17>     PKO      R/W      0           0         Enable triggering on read requests from PKO            
<16>     PKI      R/W      0           0         Enable triggering on write requests from PIP/IPD       

<15:0>   PP       R/W      0           0         Enable trigering from PP[N] with matching SourceID     
                                                   0=disable, 1=enableper bit N where  0<=N<=15
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA(0)_TRIG1_DID = Trace Buffer Filter DestinationId Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_TRIG1_DID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  NS       RAZ      0           0         RESERVED                                               
<31:13>  ILLEGAL  R/W      0           0x7FFFF   Illegal destinations                                   
<12>     POW      R/W      0           1         Enable triggering on requests to POW                   
                                                 (get work, add work, status/memory/index
                                                 loads, NULLRd loads, CSR's)
<11:9>   ILLEGAL2 R/W      0           0x7       Illegal destinations                                   
<8>      RNG      R/W      0           1         Enable triggering on requests to RNG                   
                                                 (loads/IOBDMA's are legal)
<7>      ZIP      R/W      0           1         Enable triggering on requests to ZIP                   
                                                 (doorbell stores are legal)
<6>      DFA      R/W      0           1         Enable triggering on requests to DFA                   
                                                 (CSR's and operations are legal)
<5>      FPA      R/W      0           1         Enable triggering on requests to FPA                   
                                                 (alloc's (loads/IOBDMA's), frees (stores) are legal)
<4>      KEY      R/W      0           1         Enable triggering on requests to KEY memory            
                                                 (loads/IOBDMA's/stores are legal)
<3>      PCI      R/W      0           1         Enable triggering on requests to PCI and RSL-type      
                                                 CSR's (RSL CSR's, PCI bus operations, PCI
                                                 CSR's)
<2:1>    ILLEGAL3 R/W      0           0x3       Illegal destinations                                   
<0>      MIO      R/W      0           1         Enable triggering on CIU and GPIO CSR's                
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA(0)_TRIG1_ADR_ADR = Trace Buffer Filter Address Address
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_TRIG1_ADR_ADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:36>  NS       RAZ      0           0         RESERVED                                               
<35:0>   ADR      R/W      0           NS        Unmasked Address                                       
                                                   The combination of TRA(0)_TRIG1_ADR_ADR and
                                                   TRA(0)_TRIG1_ADR_MSK is a masked address to
                                                   enable tracing of only those commands whose
                                                   masked address matches
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA(0)_TRIG1_ADR_MSK = Trace Buffer Filter Address Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0)_TRIG1_ADR_MSK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:36>  NS       RAZ      0           0         RESERVED                                               
<35:0>   ADR      R/W      0           0         Address Mask                                           
                                                   The combination of TRA(0)_TRIG1_ADR_ADR and
                                                   TRA(0)_TRIG1_ADR_MSK is a masked address to
                                                   enable tracing of only those commands whose
                                                   masked address matches.  When a mask bit is not
                                                   set, the corresponding address bits are assumed
                                                   to match.  Also, note that IOBDMAs do not have
                                                   proper addresses, so when TRA(0)_TRIG1_CMD[IOBDMA]
                                                   is set, TRA(0)_FILT_TRIG1_MSK must be zero to
                                                   guarantee that any IOBDMAs are recognized as
                                                   triggers.
----------------------------------------------------------------------------------------------------
===


 *
 *                  OTG Control and Status Register (GOTGCTL)
 *
 * The OTG Control and Status register controls the behavior and reflects the status of the OTG function of the core.: 
 *

     ==============================================================
     USBC(0)_GOTGCTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:21> Reserved        RO       NS          NS        Reserved                                                                      
<20>    Reserved1       RO       NS          NS        Present release of code incorrectly attaches this to the device-mode          
                                                        status bit. SW should disregard the value of this bit.
<19>    BSesVld         RO       NS          NS        B-Session Valid (BSesVld)                                                     
                                                        Valid only when O2P USB core is configured as a USB device.
                                                        Indicates the Device mode transceiver status.
                                                        * 1'b0: B-session is not valid.
                                                        * 1'b1: B-session is valid.
<18>    ASesVld         RO       NS          NS        A-Session Valid (ASesVld)                                                     
                                                        Valid only when O2P USB core is configured as a USB host.
                                                        Indicates the Host mode transceiver status.
                                                        * 1'b0: A-session is not valid
                                                        * 1'b1: A-session is valid
<17>    DbncTime        RO       0x0         0x0       Long/Short Debounce Time (DbncTime)                                           
                                                        In the present version of the core this bit will only read as '0'.
<16>    ConIDSts        RO       NS          NS        Connector ID Status (ConIDSts)                                                
                                                        Indicates the connector ID status on a connect event.
                                                        * 1'b0: The O2P USB core is in A-device mode
                                                        * 1'b1: The O2P USB core is in B-device mode
<15:12> Reserved2       RO       NS          NS        Reserved                                                                      
<11>    DevHNPEn        R/W      0x0         0x0       Device HNP Enabled (DevHNPEn)                                                 
                                                        Since O2P USB core is not HNP capable this bit is 0x0.
<10>    HstSetHNPEn     R/W      0x0         0x0       Host Set HNP Enable (HstSetHNPEn)                                             
                                                        Since O2P USB core is not HNP capable this bit is 0x0.
<9>     HNPReq          R/W      0x0         0x0       HNP Request (HNPReq)                                                          
                                                        Since O2P USB core is not HNP capable this bit is 0x0.
<8>     HstNegScs       R/W      0x0         0x0       Host Negotiation Success (HstNegScs)                                          
                                                        Since O2P USB core is not HNP capable this bit is 0x0.
<7:2>   Reserved3       RO       NS          NS        Reserved                                                                      
<1>     SesReq          R/W      0x0         0x0       Session Request (SesReq)                                                      
                                                        Since O2P USB core is not SRP capable this bit is 0x0.
<0>     SesReqScs       R/W      0x0         0x0       Session Request Success (SesReqScs)                                           
                                                        Since O2P USB core is not SRP capable this bit is 0x0.
----------------------------------------------------------------------------------------------------
===

 *
 *                  OTG Interrupt Register (GOTGINT)
 *
 * The application reads this register whenever there is an OTG interrupt and clears the bits in this register 
 * to clear the OTG interrupt. It is shown in Interrupt .: 
 *

     ==============================================================
     USBC(0)_GOTGINT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:20> Reserved        RO       NS          NS        Reserved                                                                      
<19>    DbnceDone       R/W1C    0x0         0x0       Debounce Done (DbnceDone)                                                     
                                                        In the present version of the code this bit is tied to '0'.
<18>    ADevTOUTChg     R/W1C    0x0         0x0       A-Device Timeout Change (ADevTOUTChg)                                         
                                                        Since O2P USB core is not HNP or SRP capable this bit is always 0x0.
<17>    HstNegDet       R/W1C    0x0         0x0       Host Negotiation Detected (HstNegDet)                                         
                                                        Since O2P USB core is not HNP or SRP capable this bit is always 0x0.
<16:10> Reserved1       RO       NS          NS        Reserved                                                                      
<9>     HstNegSucStsChng R/W1C   0x0         0x0       Host Negotiation Success Status Change (HstNegSucStsChng)                     
                                                        Since O2P USB core is not HNP or SRP capable this bit is always 0x0.
<8>     SesReqSucStsChng R/W1C   0x0         0x0       Session Request Success Status Change                                         
                                                        Since O2P USB core is not HNP or SRP capable this bit is always 0x0.
<7:3>   Reserved2       RO       NS          NS        Reserved                                                                      
<2>     SesEndDet       R/W1C    0x0         0x0       Session End Detected (SesEndDet)                                              
                                                        Since O2P USB core is not HNP or SRP capable this bit is always 0x0.
<1>     Reserved3       RO       NS          NS        Reserved                                                                      
<0>     Reserved4       RO       NS          NS        Reserved4- Present version of the code ties this to device-mode.              
                                                        SW should disregard the value of this bit.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Core AHB Configuration Register (GAHBCFG)
 *
 * This register can be used to configure the core after power-on or a change in mode of operation. 
 * This register mainly contains AHB system-related configuration parameters. The AHB is the processor
 * interface to the O2P USB core. In general, software need not know about this interface except to 
 * program the values as specified.
 * 
 * The application must program this register as part of the O2P USB core initialization.
 * Do not change this register after the initial programming. 
 *

     ==============================================================
     USBC(0)_GAHBCFG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:9>  Reserved        RO       NS          NS        Reserved                                                                      
<8>     PTxFEmpLvl      R/W      0x0         0x1       Periodic TxFIFO Empty Level (PTxFEmpLvl)                                      
                                                        Software should set this bit to 0x1.
                                                        Indicates when the Periodic TxFIFO Empty Interrupt bit in the 
                                                        Core Interrupt register (GINTSTS.PTxFEmp) is triggered. This 
                                                        bit is used only in Slave mode.
                                                        * 1'b0: GINTSTS.PTxFEmp interrupt indicates that the Periodic 
                                                          TxFIFO is half empty
                                                        * 1'b1: GINTSTS.PTxFEmp interrupt indicates that the Periodic 
                                                          TxFIFO is completely empty
<7>     NPTxFEmpLvl     R/W      0x0         0x1       Non-Periodic TxFIFO Empty Level (NPTxFEmpLvl)                                 
                                                        Software should set this bit to 0x1.
                                                        Indicates when the Non-Periodic TxFIFO Empty Interrupt bit in 
                                                        the Core Interrupt register (GINTSTS.NPTxFEmp) is triggered. 
                                                        This bit is used only in Slave mode.
                                                        * 1'b0: GINTSTS.NPTxFEmp interrupt indicates that the Non-
                                                           Periodic TxFIFO is half empty
                                                        * 1'b1: GINTSTS.NPTxFEmp interrupt indicates that the Non-
                                                           Periodic TxFIFO is completely empty
<6>     Reserved1       RO       NS          NS        Reserved                                                                      
<5>     DMAEn           R/W      0x0         0x0       DMA Enable (DMAEn)                                                            
                                                        * 1'b0: Core operates in Slave mode
                                                        * 1'b1: Core operates in a DMA mode
<4:1>   HBstLen         R/W      0x0         0x0       Burst Length/Type (HBstLen)                                                   
                                                        This field has not effect and should be left as 0x0.
<0>     GlblIntrMsk     R/W      0x0         0x1       Global Interrupt Mask (GlblIntrMsk)                                           
                                                        Software should set this field to 0x1.
                                                        The application uses this bit to mask  or unmask the interrupt 
                                                        line assertion to itself. Irrespective of this bit's setting, the 
                                                        interrupt status registers are updated by the core.
                                                        * 1'b0: Mask the interrupt assertion to the application.
                                                        * 1'b1: Unmask the interrupt assertion to the application.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Core USB Configuration Register (GUSBCFG)
 *
 * This register can be used to configure the core after power-on or a changing to Host mode or Device mode. 
 * It contains USB and USB-PHY related configuration parameters. The application must program this register 
 * before starting any transactions on either the AHB or the USB. 
 * Do not make changes to this register after the initial programming.
 *

     ==============================================================
     USBC(0)_GUSBCFG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:17> Reserved        RO       NS          NS        Reserved                                                                      
<16>    OtgI2CSel       RO       0x0         0x0       UTMIFS or I2C Interface Select (OtgI2CSel)                                    
                                                        This bit is always 0x0.
<15>    PhyLPwrClkSel   R/W      0x0         0x0       PHY Low-Power Clock Select (PhyLPwrClkSel)                                    
                                                        Software should set this bit to 0x0.
                                                        Selects either 480-MHz or 48-MHz (low-power) PHY mode. In 
                                                        FS and LS modes, the PHY can usually operate on a 48-MHz 
                                                        clock to save power.
                                                        * 1'b0: 480-MHz Internal PLL clock
                                                        * 1'b1: 48-MHz External Clock
                                                        In 480 MHz mode, the UTMI interface operates at either 60 or 
                                                        30-MHz, depending upon whether 8- or 16-bit data width is 
                                                        selected. In 48-MHz mode, the UTMI interface operates at 48 
                                                        MHz in FS mode and at either 48 or 6 MHz in LS mode 
                                                        (depending on the PHY vendor).
                                                        This bit drives the utmi_fsls_low_power core output signal, and 
                                                        is valid only for UTMI+ PHYs.
<14>    Reserved_       RO       NS          NS        Reserved                                                                      
<13:10> USBTrdTim       R/W      0x5         0x5       USB Turnaround Time (USBTrdTim)                                               
                                                        Sets the turnaround time in PHY clocks.
                                                        Specifies the response time for a MAC request to the Packet 
                                                        FIFO Controller (PFC) to fetch data from the DFIFO (SPRAM).
                                                        This must be programmed to 0x5.
<9>     HNPCap          RO       0x0         0x0       HNP-Capable (HNPCap)                                                          
                                                        This bit is always 0x0.
<8>     SRPCap          RO       0x0         0x0       SRP-Capable (SRPCap)                                                          
                                                        This bit is always 0x0.
<7>     DDRSel          R/W      0x0         0x0       ULPI DDR Select (DDRSel)                                                      
                                                        Software should set this bit to 0x0.
<6>     PHYSel          WO       0x0         0x0       USB 2.0 High-Speed PHY or USB 1.1 Full-Speed Serial                           
                                                        Software should set this bit to 0x0.
<5>     FSIntf          WO       0x0         0x0       Full-Speed Serial Interface Select (FSIntf)                                   
                                                        Software should set this bit to 0x0.
<4>     ULPI_UTMI_Sel   RO       0x0         0x0       ULPI or UTMI+ Select (ULPI_UTMI_Sel)                                          
                                                        This bit is always 0x0.
<3>     PHYIf           RO       0x1         0x1       PHY Interface (PHYIf)                                                         
                                                        This bit is always 0x1.
<2:0>   TOutCal         R/W      0x0         0x0       HS/FS Timeout Calibration (TOutCal)                                           
                                                        The number of PHY clocks that the application programs in this 
                                                        field is added to the high-speed/full-speed interpacket timeout 
                                                        duration in the core to account for any additional delays 
                                                        introduced by the PHY. This may be required, since the delay 
                                                        introduced by the PHY in generating the linestate condition may 
                                                        vary from one PHY to another. 
                                                        The USB standard timeout value for high-speed operation is 
                                                        736 to 816 (inclusive) bit times. The USB standard timeout 
                                                        value for full-speed operation is 16 to 18 (inclusive) bit times. 
                                                        The application must program this field based on the speed of 
                                                        enumeration. The number of bit times added per PHY clock are:
                                                        High-speed operation:
                                                        * One 30-MHz PHY clock = 16 bit times
                                                        * One 60-MHz PHY clock = 8 bit times
                                                        Full-speed operation:
                                                        * One 30-MHz PHY clock = 0.4 bit times
                                                        * One 60-MHz PHY clock = 0.2 bit times
                                                        * One 48-MHz PHY clock = 0.25 bit times
----------------------------------------------------------------------------------------------------
===

 *
 *                  Core Reset Register (GRSTCTL)
 *
 * The application uses this register to reset various hardware features inside the core.
 *

     ==============================================================
     USBC(0)_GRSTCTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31>    AHBIdle         RO       0x1         0x1       AHB Master Idle (AHBIdle)                                                     
                                                        Indicates that the AHB Master State Machine is in the IDLE 
                                                        condition.
<30>    DMAReq          RO       0x0         0x0       DMA Request Signal (DMAReq)                                                   
                                                        Indicates that the DMA request is in progress. Used for debug.
<29:11> Reserved        RO       NS          NS        Reserved                                                                      
<10:6>  TxFNum          R/W      0x0         0x0       TxFIFO Number (TxFNum)                                                        
                                                        This is the FIFO number that must be flushed using the TxFIFO 
                                                        Flush bit. This field must not be changed until the core clears 
                                                        the TxFIFO Flush bit.
                                                        * 5'h0: Non-Periodic TxFIFO flush
                                                        * 5'h1: Periodic TxFIFO 1 flush in Device mode or Periodic 
                                                        TxFIFO flush in Host mode
                                                        * 5'h2: Periodic TxFIFO 2 flush in Device mode
                                                        ...
                                                        * 5'hF: Periodic TxFIFO 15 flush in Device mode
                                                        * 5'h10: Flush all the Periodic and Non-Periodic TxFIFOs in the 
                                                        core
<5>     TxFFlsh         R/W      0x0         0x0       TxFIFO Flush (TxFFlsh)                                                        
                                                        This bit selectively flushes a single or all transmit FIFOs, but 
                                                        cannot do so if the core is in the midst of a transaction.
                                                        The application must only write this bit after checking that the 
                                                        core is neither writing to the TxFIFO nor reading from the 
                                                        TxFIFO.
                                                        The application must wait until the core clears this bit before 
                                                        performing any operations. This bit takes 8 clocks (of phy_clk or 
                                                        hclk, whichever is slower) to clear.
<4>     RxFFlsh         R/W      0x0         0x0       RxFIFO Flush (RxFFlsh)                                                        
                                                        The application can flush the entire RxFIFO using this bit, but 
                                                        must first ensure that the core is not in the middle of a 
                                                        transaction.
                                                        The application must only write to this bit after checking that the 
                                                        core is neither reading from the RxFIFO nor writing to the 
                                                        RxFIFO.
                                                        The application must wait until the bit is cleared before 
                                                        performing any other operations. This bit will take 8 clocks 
                                                        (slowest of PHY or AHB clock) to clear.
<3>     INTknQFlsh      R/W      0x0         0x0       IN Token Sequence Learning Queue Flush (INTknQFlsh)                           
                                                        The application writes this bit to flush the IN Token Sequence 
                                                        Learning Queue.
<2>     FrmCntrRst      R/W      0x0         0x0       Host Frame Counter Reset (FrmCntrRst)                                         
                                                        The application writes this bit to reset the (micro)frame number 
                                                        counter inside the core. When the (micro)frame counter is reset, 
                                                        the subsequent SOF sent out by the core will have a 
                                                        (micro)frame number of 0.
<1>     HSftRst         R/W      0x0         0x0       HClk Soft Reset (HSftRst)                                                     
                                                        The application uses this bit to flush the control logic in the AHB 
                                                        Clock domain. Only AHB Clock Domain pipelines are reset.
                                                        * FIFOs are not flushed with this bit.
                                                        * All state machines in the AHB clock domain are reset to the 
                                                          Idle state after terminating the transactions on the AHB, 
                                                          following the protocol.
                                                        * CSR control bits used by the AHB clock domain state 
                                                          machines are cleared.
                                                        * To clear this interrupt, status mask bits that control the 
                                                          interrupt status and are generated by the AHB clock domain 
                                                          state machine are cleared.
                                                        * Because interrupt status bits are not cleared, the application 
                                                          can get the status of any core events that occurred after it set 
                                                          this bit.
                                                          This is a self-clearing bit that the core clears after all necessary 
                                                          logic is reset in the core. This may take several clocks, 
                                                          depending on the core's current state.
<0>     CSftRst         R/W      0x0         0x0       Core Soft Reset (CSftRst)                                                     
                                                        Resets the hclk and phy_clock domains as follows:
                                                        * Clears the interrupts and all the CSR registers except the 
                                                          following register bits:
                                                          - PCGCCTL.RstPdwnModule
                                                          - PCGCCTL.GateHclk
                                                          - PCGCCTL.PwrClmp
                                                          - PCGCCTL.StopPPhyLPwrClkSelclk
                                                          - GUSBCFG.PhyLPwrClkSel
                                                          - GUSBCFG.DDRSel
                                                          - GUSBCFG.PHYSel
                                                          - GUSBCFG.FSIntf
                                                          - GUSBCFG.ULPI_UTMI_Sel
                                                          - GUSBCFG.PHYIf
                                                          - HCFG.FSLSPclkSel
                                                          - DCFG.DevSpd
                                                        * All module state machines (except the AHB Slave Unit) are 
                                                          reset to the IDLE state, and all the transmit FIFOs and the 
                                                          receive FIFO are flushed.
                                                        * Any transactions on the AHB Master are terminated as soon 
                                                          as possible, after gracefully completing the last data phase of 
                                                          an AHB transfer. Any transactions on the USB are terminated 
                                                          immediately.
                                                          The application can write to this bit any time it wants to reset 
                                                          the core. This is a self-clearing bit and the core clears this bit 
                                                          after all the necessary logic is reset in the core, which may take 
                                                          several clocks, depending on the current state of the core. 
                                                          Once this bit is cleared software should wait at least 3 PHY 
                                                          clocks before doing any access to the PHY domain 
                                                          (synchronization delay). Software should also should check that 
                                                          bit 31 of this register is 1 (AHB Master is IDLE) before starting 
                                                          any operation.
                                                          Typically software reset is used during software development 
                                                          and also when you dynamically change the PHY selection bits 
                                                          in the USB configuration registers listed above. When you 
                                                          change the PHY, the corresponding clock for the PHY is 
                                                          selected and used in the PHY domain. Once a new clock is 
                                                          selected, the PHY domain has to be reset for proper operation.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Core Interrupt Register (GINTSTS)
 *
 * This register interrupts the application for system-level events in the current mode of operation 
 * (Device mode or Host mode). It is shown in Interrupt. Some of the bits in this register are valid only in Host mode, 
 * while others are valid in Device mode only. This register also indicates the current mode of operation. 
 * In order to clear the interrupt status bits of type R_SS_WC, the application must write 1'b1 into the bit. 
 * The FIFO status interrupts are read only; once software reads from or writes to the FIFO while servicing these 
 * interrupts, FIFO interrupt conditions are cleared automatically.
 *

     ==============================================================
     USBC(0)_GINTSTS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31>    WkUpInt         R/W1C    0x0         0x0       Resume/Remote Wakeup Detected Interrupt (WkUpInt)                             
                                                        In Device mode, this interrupt is asserted when a resume is 
                                                        detected on the USB. In Host mode, this interrupt is asserted 
                                                        when a remote wakeup is detected on the USB.
                                                        For more information on how to use this interrupt, see "Partial 
                                                        Power-Down and Clock Gating Programming Model" on 
                                                        page 353.
<30>    SessReqInt      R/W1C    0x0         0x0       Session Request/New Session Detected Interrupt (SessReqInt)                   
                                                        In Host mode, this interrupt is asserted when a session request 
                                                        is detected from the device. In Device mode, this interrupt is 
                                                        asserted when the utmiotg_bvalid signal goes high.
                                                        For more information on how to use this interrupt, see "Partial 
                                                        Power-Down and Clock Gating Programming Model" on 
                                                        page 353.
<29>    DisconnInt      R/W1C    0x0         0x0       Disconnect Detected Interrupt (DisconnInt)                                    
                                                        Asserted when a device disconnect is detected.
<28>    ConIDStsChng    R/W1C    0x0         0x0       Connector ID Status Change (ConIDStsChng)                                     
                                                        The core sets this bit when there is a change in connector ID 
                                                        status.
<27>    Reserved        RO       NS          NS        Reserved                                                                      
<26>    PTxFEmp         RO       0x0         0x0       Periodic TxFIFO Empty (PTxFEmp)                                               
                                                        Asserted when the Periodic Transmit FIFO is either half or 
                                                        completely empty and there is space for at least one entry to be 
                                                        written in the Periodic Request Queue. The half or completely 
                                                        empty status is determined by the Periodic TxFIFO Empty Level 
                                                        bit in the Core AHB Configuration register 
                                                        (GAHBCFG.PTxFEmpLvl).
<25>    HChInt          RO       0x0         0x0       Host Channels Interrupt (HChInt)                                              
                                                        The core sets this bit to indicate that an interrupt is pending on 
                                                        one of the channels of the core (in Host mode). The application 
                                                        must read the Host All Channels Interrupt (HAINT) register to 
                                                        determine the exact number of the channel on which the 
                                                        interrupt occurred, and then read the corresponding Host 
                                                        Channel-n Interrupt (HCINTn) register to determine the exact 
                                                        cause of the interrupt. The application must clear the 
                                                        appropriate status bit in the HCINTn register to clear this bit.
<24>    PrtInt          RO       0x0         0x0       Host Port Interrupt (PrtInt)                                                  
                                                        The core sets this bit to indicate a change in port status of one 
                                                        of the O2P USB core ports in Host mode. The application must 
                                                        read the Host Port Control and Status (HPRT) register to 
                                                        determine the exact event that caused this interrupt. The 
                                                        application must clear the appropriate status bit in the Host Port 
                                                        Control and Status register to clear this bit.
<23>    Reserved1       RO       NS          NS        Reserved                                                                      
<22>    FetSusp         R/W1C    0x0         0x0       Data Fetch Suspended (FetSusp)                                                
                                                        This interrupt is valid only in DMA mode. This interrupt indicates 
                                                        that the core has stopped fetching data for IN endpoints due to 
                                                        the unavailability of TxFIFO space or Request Queue space. 
                                                        This interrupt is used by the application for an endpoint 
                                                        mismatch algorithm.
<21>    incomplP        R/W1C    0x0         0x0       Incomplete Periodic Transfer (incomplP)                                       
                                                        In Host mode, the core sets this interrupt bit when there are 
                                                        incomplete periodic transactions still pending which are 
                                                        scheduled for the current microframe.
                                                        Incomplete Isochronous OUT Transfer (incompISOOUT) 
                                                        The Device mode, the core sets this interrupt to indicate that 
                                                        there is at least one isochronous OUT endpoint on which the 
                                                        transfer is not completed in the current microframe. This 
                                                        interrupt is asserted along with the End of Periodic Frame 
                                                        Interrupt (EOPF) bit in this register.
<20>    incompISOIN     R/W1C    0x0         0x0       Incomplete Isochronous IN Transfer (incompISOIN)                              
                                                        The core sets this interrupt to indicate that there is at least one 
                                                        isochronous IN endpoint on which the transfer is not completed 
                                                        in the current microframe. This interrupt is asserted along with 
                                                        the End of Periodic Frame Interrupt (EOPF) bit in this register.
<19>    OEPInt          RO       0x0         0x0       OUT Endpoints Interrupt (OEPInt)                                              
                                                        The core sets this bit to indicate that an interrupt is pending on 
                                                        one of the OUT endpoints of the core (in Device mode). The 
                                                        application must read the Device All Endpoints Interrupt 
                                                        (DAINT) register to determine the exact number of the OUT 
                                                        endpoint on which the interrupt occurred, and then read the 
                                                        corresponding Device OUT Endpoint-n Interrupt (DOEPINTn) 
                                                        register to determine the exact cause of the interrupt. The 
                                                        application must clear the appropriate status bit in the 
                                                        corresponding DOEPINTn register to clear this bit.
<18>    IEPInt          RO       0x0         0x0       IN Endpoints Interrupt (IEPInt)                                               
                                                        The core sets this bit to indicate that an interrupt is pending on 
                                                        one of the IN endpoints of the core (in Device mode). The 
                                                        application must read the Device All Endpoints Interrupt 
                                                        (DAINT) register to determine the exact number of the IN 
                                                        endpoint on which the interrupt occurred, and then read the 
                                                        corresponding Device IN Endpoint-n Interrupt (DIEPINTn) 
                                                        register to determine the exact cause of the interrupt. The 
                                                        application must clear the appropriate status bit in the 
                                                        corresponding DIEPINTn register to clear this bit.
<17>    EPMis           R/W1C    0x0         0x0       Endpoint Mismatch Interrupt (EPMis)                                           
                                                        Indicates that an IN token has been received for a non-periodic 
                                                        endpoint, but the data for another endpoint is present in the top 
                                                        of the Non-Periodic Transmit FIFO and the IN endpoint 
                                                        mismatch count programmed by the application has expired.
<16>    Reserved2       RO       NS          NS        Reserved                                                                      
<15>    EOPF            R/W1C    0x0         0x0       End of Periodic Frame Interrupt (EOPF)                                        
                                                        Indicates that the period specified in the Periodic Frame Interval 
                                                        field of the Device Configuration register (DCFG.PerFrInt) has 
                                                        been reached in the current microframe.
<14>    ISOOutDrop      R/W1C    0x0         0x0       Isochronous OUT Packet Dropped Interrupt (ISOOutDrop)                         
                                                        The core sets this bit when it fails to write an isochronous OUT 
                                                        packet into the RxFIFO because the RxFIFO doesn't have 
                                                        enough space to accommodate a maximum packet size packet 
                                                        for the isochronous OUT endpoint.
<13>    EnumDone        R/W1C    0x0         0x0       Enumeration Done (EnumDone)                                                   
                                                        The core sets this bit to indicate that speed enumeration is 
                                                        complete. The application must read the Device Status (DSTS) 
                                                        register to obtain the enumerated speed.
<12>    USBRst          R/W1C    0x0         0x0       USB Reset (USBRst)                                                            
                                                        The core sets this bit to indicate that a reset is detected on the 
                                                        USB.
<11>    USBSusp         R/W1C    0x0         0x0       USB Suspend (USBSusp)                                                         
                                                        The core sets this bit to indicate that a suspend was detected 
                                                        on the USB. The core enters the Suspended state when there 
                                                        is no activity on the phy_line_state_i signal for an extended 
                                                        period of time.
<10>    ErlySusp        R/W1C    0x0         0x0       Early Suspend (ErlySusp)                                                      
                                                        The core sets this bit to indicate that an Idle state has been 
                                                        detected on the USB for 3 ms.
<9>     I2CINT          R/W1C    0x0         0x0       I2C Interrupt (I2CINT)                                                        
                                                        This bit is always 0x0.
<8>     ULPICKINT       R/W1C    0x0         0x0       ULPI Carkit Interrupt (ULPICKINT)                                             
                                                        This bit is always 0x0.
<7>     GOUTNakEff      RO       0x0         0x0       Global OUT NAK Effective (GOUTNakEff)                                         
                                                        Indicates that the Set Global OUT NAK bit in the Device Control 
                                                        register (DCTL.SGOUTNak), set by the application, has taken 
                                                        effect in the core. This bit can be cleared by writing the Clear 
                                                        Global OUT NAK bit in the Device Control register 
                                                        (DCTL.CGOUTNak).
<6>     GINNakEff       RO       0x0         0x0       Global IN Non-Periodic NAK Effective (GINNakEff)                              
                                                        Indicates that the Set Global Non-Periodic IN NAK bit in the 
                                                        Device Control register (DCTL.SGNPInNak), set by the 
                                                        application, has taken effect in the core. That is, the core has 
                                                        sampled the Global IN NAK bit set by the application. This bit 
                                                        can be cleared by clearing the Clear Global Non-Periodic IN 
                                                        NAK bit in the Device Control register (DCTL.CGNPInNak).
                                                        This interrupt does not necessarily mean that a NAK handshake 
                                                        is sent out on the USB. The STALL bit takes precedence over 
                                                        the NAK bit.
<5>     NPTxFEmp        RO       0x0         0x0       Non-Periodic TxFIFO Empty (NPTxFEmp)                                          
                                                        This interrupt is asserted when the Non-Periodic TxFIFO is 
                                                        either half or completely empty, and there is space for at least 
                                                        one entry to be written to the Non-Periodic Transmit Request 
                                                        Queue. The half or completely empty status is determined by 
                                                        the Non-Periodic TxFIFO Empty Level bit in the Core AHB 
                                                        Configuration register (GAHBCFG.NPTxFEmpLvl).
<4>     RxFLvl          RO       0x0         0x0       RxFIFO Non-Empty (RxFLvl)                                                     
                                                        Indicates that there is at least one packet pending to be read 
                                                        from the RxFIFO.
<3>     Sof             R/W1C    0x0         0x0       Start of (micro)Frame (Sof)                                                   
                                                        In Host mode, the core sets this bit to indicate that an SOF 
                                                        (FS), micro-SOF (HS), or Keep-Alive (LS) is transmitted on the 
                                                        USB. The application must write a 1 to this bit to clear the 
                                                        interrupt.
                                                        In Device mode, in the core sets this bit to indicate that an SOF 
                                                        token has been received on the USB. The application can read 
                                                        the Device Status register to get the current (micro)frame 
                                                        number. This interrupt is seen only when the core is operating 
                                                        at either HS or FS.
<2>     OTGInt          RO       0x0         0x0       OTG Interrupt (OTGInt)                                                        
                                                        The core sets this bit to indicate an OTG protocol event. The 
                                                        application must read the OTG Interrupt Status (GOTGINT) 
                                                        register to determine the exact event that caused this interrupt. 
                                                        The application must clear the appropriate status bit in the 
                                                        GOTGINT register to clear this bit.
<1>     ModeMis         R/W1C    0x0         0x0       Mode Mismatch Interrupt (ModeMis)                                             
                                                        The core sets this bit when the application is trying to access:
                                                        * A Host mode register, when the core is operating in Device 
                                                        mode
                                                        * A Device mode register, when the core is operating in Host 
                                                          mode
                                                          The register access is completed on the AHB with an OKAY 
                                                          response, but is ignored by the core internally and doesn't 
                                                        affect the operation of the core.
<0>     CurMod          RO       0x0         0x0       Current Mode of Operation (CurMod)                                            
                                                        Indicates the current mode of operation.
                                                        * 1'b0: Device mode
                                                        * 1'b1: Host mode
----------------------------------------------------------------------------------------------------
===

 *
 *                  Core Interrupt Mask Register (GINTMSK)
 *
 * This register works with the Core Interrupt register to interrupt the application. 
 * When an interrupt bit is masked, the interrupt associated with that bit will not be generated. 
 * However, the Core Interrupt (GINTSTS) register bit corresponding to that interrupt will still be set.
 * Mask interrupt: 1'b0, Unmask interrupt: 1'b1
 *

     ==============================================================
     USBC(0)_GINTMSK Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31>    WkUpIntMsk      R/W      0x0         0x0       Resume/Remote Wakeup Detected Interrupt Mask                                  
                                                        (WkUpIntMsk)
<30>    SessReqIntMsk   R/W      0x0         0x0       Session Request/New Session Detected Interrupt Mask                           
                                                        (SessReqIntMsk)
<29>    DisconnIntMsk   R/W      0x0         0x0       Disconnect Detected Interrupt Mask (DisconnIntMsk)                            
<28>    ConIDStsChngMsk R/W      0x0         0x0       Connector ID Status Change Mask (ConIDStsChngMsk)                             
<27>    Reserved        RO       NS          NS        Reserved                                                                      
<26>    PTxFEmpMsk      R/W      0x0         0x0       Periodic TxFIFO Empty Mask (PTxFEmpMsk)                                       
<25>    HChIntMsk       R/W      0x0         0x0       Host Channels Interrupt Mask (HChIntMsk)                                      
<24>    PrtIntMsk       R/W      0x0         0x0       Host Port Interrupt Mask (PrtIntMsk)                                          
<23>    Reserved1       RO       NS          NS        Reserved                                                                      
<22>    FetSuspMsk      R/W      0x0         0x0       Data Fetch Suspended Mask (FetSuspMsk)                                        
<21>    incomplPMsk     R/W      0x0         0x0       Incomplete Periodic Transfer Mask (incomplPMsk)                               
                                                        Incomplete Isochronous OUT Transfer Mask 
                                                        (incompISOOUTMsk)
<20>    incompISOINMsk  R/W      0x0         0x0       Incomplete Isochronous IN Transfer Mask (incompISOINMsk)                      
<19>    OEPIntMsk       R/W      0x0         0x0       OUT Endpoints Interrupt Mask (OEPIntMsk)                                      
<18>    INEPIntMsk      R/W      0x0         0x0       IN Endpoints Interrupt Mask (INEPIntMsk)                                      
<17>    EPMisMsk        R/W      0x0         0x0       Endpoint Mismatch Interrupt Mask (EPMisMsk)                                   
<16>    Reserved2       RO       NS          NS        Reserved                                                                      
<15>    EOPFMsk         R/W      0x0         0x0       End of Periodic Frame Interrupt Mask (EOPFMsk)                                
<14>    ISOOutDropMsk   R/W      0x0         0x0       Isochronous OUT Packet Dropped Interrupt Mask                                 
                                                        (ISOOutDropMsk) 
<13>    EnumDoneMsk     R/W      0x0         0x0       Enumeration Done Mask (EnumDoneMsk)                                           
<12>    USBRstMsk       R/W      0x0         0x0       USB Reset Mask (USBRstMsk)                                                    
<11>    USBSuspMsk      R/W      0x0         0x0       USB Suspend Mask (USBSuspMsk)                                                 
<10>    ErlySuspMsk     R/W      0x0         0x0       Early Suspend Mask (ErlySuspMsk)                                              
<9>     I2CINT          R/W      0x0         0x0       I2C Interrupt Mask (I2CINT)                                                   
<8>     ULPICKINTMsk    R/W      0x0         0x0       ULPI Carkit Interrupt Mask (ULPICKINTMsk)                                     
                                                        I2C Carkit Interrupt Mask (I2CCKINTMsk)
<7>     GOUTNakEffMsk   R/W      0x0         0x0       Global OUT NAK Effective Mask (GOUTNakEffMsk)                                 
<6>     GINNakEffMsk    R/W      0x0         0x0       Global Non-Periodic IN NAK Effective Mask (GINNakEffMsk)                      
<5>     NPTxFEmpMsk     R/W      0x0         0x0       Non-Periodic TxFIFO Empty Mask (NPTxFEmpMsk)                                  
<4>     RxFLvlMsk       R/W      0x0         0x0       Receive FIFO Non-Empty Mask (RxFLvlMsk)                                       
<3>     SofMsk          R/W      0x0         0x0       Start of (micro)Frame Mask (SofMsk)                                           
<2>     OTGIntMsk       R/W      0x0         0x0       OTG Interrupt Mask (OTGIntMsk)                                                
<1>     ModeMisMsk      R/W      0x0         0x0       Mode Mismatch Interrupt Mask (ModeMisMsk)                                     
<0>     Reserved3       RO       NS          NS        Reserved                                                                      
----------------------------------------------------------------------------------------------------
===


 *
 *                  Receive Status Debug Read Register, Host Mode (GRXSTSRH)
 *
 * A read to the Receive Status Debug Read register returns the contents of the top of the Receive FIFO.  
 * This Description is only valid when the core is in Host Mode.  For Device Mode use USBC_GRXSTSRD instead.
 * NOTE: GRXSTSRH and GRXSTSRD are physically the same register and share the same offset in the O2P USB core.
 *       The offset difference shown in this document is for software clarity and is actually ignored by the
 *       hardware.
 *

     ==============================================================
     USBC(0)_GRXSTSRH Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:21> Reserved        RO       NS          NS        Reserved                                                                      
<20:17> PktSts          RO       0x0         0x0       Packet Status (PktSts)                                                        
                                                        Indicates the status of the received packet
                                                        * 4'b0010: IN data packet received
                                                        * 4'b0011: IN transfer completed (triggers an interrupt)
                                                        * 4'b0101: Data toggle error (triggers an interrupt)
                                                        * 4'b0111: Channel halted (triggers an interrupt)
                                                        * Others: Reserved
<16:15> DPID            RO       0x0         0x0       Data PID (DPID)                                                               
                                                        * 2'b00: DATA0
                                                        * 2'b10: DATA1
                                                        * 2'b01: DATA2
                                                        * 2'b11: MDATA
<14:4>  BCnt            RO       0x0         0x0       Byte Count (BCnt)                                                             
                                                        Indicates the byte count of the received IN data packet
<3:0>   ChNum           RO       0x0         0x0       Channel Number (ChNum)                                                        
                                                        Indicates the channel number to which the current received
                                                        packet belongs.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Receive Status Read and Pop Register, Host Mode (GRXSTSPH)
 *
 * A read to the Receive Status Read and Pop register returns and additionally pops the top data entry out of the RxFIFO.  
 * This Description is only valid when the core is in Host Mode.  For Device Mode use USBC_GRXSTSPD instead.
 * NOTE: GRXSTSPH and GRXSTSPD are physically the same register and share the same offset in the O2P USB core.
 *       The offset difference shown in this document is for software clarity and is actually ignored by the
 *       hardware.
 *

     ==============================================================
     USBC(0)_GRXSTSPH Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:21> Reserved        RO       NS          NS        Reserved                                                                      
<20:17> PktSts          RO       0x0         0x0       Packet Status (PktSts)                                                        
                                                        Indicates the status of the received packet
                                                        * 4'b0010: IN data packet received
                                                        * 4'b0011: IN transfer completed (triggers an interrupt)
                                                        * 4'b0101: Data toggle error (triggers an interrupt)
                                                        * 4'b0111: Channel halted (triggers an interrupt)
                                                        * Others: Reserved
<16:15> DPID            RO       0x0         0x0       Data PID (DPID)                                                               
                                                        * 2'b00: DATA0
                                                        * 2'b10: DATA1
                                                        * 2'b01: DATA2
                                                        * 2'b11: MDATA
<14:4>  BCnt            RO       0x0         0x0       Byte Count (BCnt)                                                             
                                                        Indicates the byte count of the received IN data packet
<3:0>   ChNum           RO       0x0         0x0       Channel Number (ChNum)                                                        
                                                        Indicates the channel number to which the current received
                                                        packet belongs.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Receive Status Debug Read Register, Device Mode (GRXSTSRD)
 *
 * A read to the Receive Status Debug Read register returns the contents of the top of the Receive FIFO.  
 * This Description is only valid when the core is in Device Mode.  For Host Mode use USBC_GRXSTSRH instead.  
 * NOTE: GRXSTSRH and GRXSTSRD are physically the same register and share the same offset in the O2P USB core.
 *       The offset difference shown in this document is for software clarity and is actually ignored by the
 *       hardware.
 *

     ==============================================================
     USBC(0)_GRXSTSRD Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:25> Reserved        RO       NS          NS        Reserved                                                                      
<24:21> FN              RO       0x0         0x0       Frame Number (FN)                                                             
                                                        This is the least significant 4 bits of the (micro)frame number in
                                                        which the packet is received on the USB.  This field is supported
                                                        only when the isochronous OUT endpoints are supported.  
<20:17> PktSts          RO       0x0         0x0       Packet Status (PktSts)                                                        
                                                        Indicates the status of the received packet
                                                        * 4'b0001: Glogal OUT NAK (triggers an interrupt)
                                                        * 4'b0010: OUT data packet received
                                                        * 4'b0100: SETUP transaction completed (triggers an interrupt)
                                                        * 4'b0110: SETUP data packet received
                                                        * Others: Reserved
<16:15> DPID            RO       0x0         0x0       Data PID (DPID)                                                               
                                                        * 2'b00: DATA0
                                                        * 2'b10: DATA1
                                                        * 2'b01: DATA2
                                                        * 2'b11: MDATA
<14:4>  BCnt            RO       0x0         0x0       Byte Count (BCnt)                                                             
                                                        Indicates the byte count of the received data packet
<3:0>   EPNum           RO       0x0         0x0       Endpoint Number (EPNum)                                                       
                                                        Indicates the endpoint number to which the current received
                                                        packet belongs.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Receive Status Debug Read Register, Device Mode (GRXSTSPD)
 *
 * A read to the Receive Status Read and Pop register returns and additionally pops the top data entry out of the RxFIFO.  
 * This Description is only valid when the core is in Device Mode.  For Host Mode use USBC_GRXSTSPH instead.  
 * NOTE: GRXSTSPH and GRXSTSPD are physically the same register and share the same offset in the O2P USB core.
 *       The offset difference shown in this document is for software clarity and is actually ignored by the
 *       hardware.
 *

     ==============================================================
     USBC(0)_GRXSTSPD Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:25> Reserved        RO       NS          NS        Reserved                                                                      
<24:21> FN              RO       0x0         0x0       Frame Number (FN)                                                             
                                                        This is the least significant 4 bits of the (micro)frame number in
                                                        which the packet is received on the USB.  This field is supported
                                                        only when the isochronous OUT endpoints are supported.  
<20:17> PktSts          RO       0x0         0x0       Packet Status (PktSts)                                                        
                                                        Indicates the status of the received packet
                                                        * 4'b0001: Glogal OUT NAK (triggers an interrupt)
                                                        * 4'b0010: OUT data packet received
                                                        * 4'b0100: SETUP transaction completed (triggers an interrupt)
                                                        * 4'b0110: SETUP data packet received
                                                        * Others: Reserved
<16:15> DPID            RO       0x0         0x0       Data PID (DPID)                                                               
                                                        * 2'b00: DATA0
                                                        * 2'b10: DATA1
                                                        * 2'b01: DATA2
                                                        * 2'b11: MDATA
<14:4>  BCnt            RO       0x0         0x0       Byte Count (BCnt)                                                             
                                                        Indicates the byte count of the received data packet
<3:0>   EPNum           RO       0x0         0x0       Endpoint Number (EPNum)                                                       
                                                        Indicates the endpoint number to which the current received
                                                        packet belongs.
----------------------------------------------------------------------------------------------------
===


 *
 *                  Receive FIFO Size Register (GRXFSIZ)
 *
 * The application can program the RAM size that must be allocated to the RxFIFO.
 *

     ==============================================================
     USBC(0)_GRXFSIZ Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:16> Reserved        RO       NS          NS        Reserved                                                                      
<15:0>  RxFDep          R/W      0x720       0x1C8     RxFIFO Depth (RxFDep)                                                         
                                                        This value is in terms of 32-bit words.
                                                        * Minimum value is 16
                                                        * Maximum value is 32768
----------------------------------------------------------------------------------------------------
===

 *
 *                  Non-Periodic Transmit FIFO Size Register (GNPTXFSIZ)
 *
 * The application can program the RAM size and the memory start address for the Non-Periodic TxFIFO.
 *

     ==============================================================
     USBC(0)_GNPTXFSIZ Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:16> NPTxFDep        R/W      0x720        0x390    Non-Periodic TxFIFO Depth (NPTxFDep)                                          
                                                        This value is in terms of 32-bit words.
                                                        Minimum value is 16
                                                        Maximum value is 32768
<15:0>   NPTxFStAddr     R/W     0x720        0x1C8    Non-Periodic Transmit RAM Start Address (NPTxFStAddr)                         
                                                        This field contains the memory start address for Non-Periodic 
                                                        Transmit FIFO RAM.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Non-Periodic Transmit FIFO/Queue Status Register (GNPTXSTS)
 *
 * This read-only register contains the free space information for the Non-Periodic TxFIFO and 
 * the Non-Periodic Transmit Request Queue..
 *

     ==============================================================
     USBC(0)_GNPTXSTS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31>    Reserved        RO       NS          NS        Reserved                                                                      
<30:24> NPTxQTop        RO       0x0         0x0       Top of the Non-Periodic Transmit Request Queue (NPTxQTop)                     
                                                        Entry in the Non-Periodic Tx Request Queue that is currently 
                                                        being processed by the MAC.
                                                        * Bits [30:27]: Channel/endpoint number
                                                        * Bits [26:25]: 
                                                          - 2'b00: IN/OUT token
                                                          - 2'b01: Zero-length transmit packet (device IN/host OUT)
                                                          - 2'b10: PING/CSPLIT token
                                                          - 2'b11: Channel halt command
                                                        * Bit [24]: Terminate (last entry for selected channel/endpoint)
<23:16> NPTxQSpcAvail   RO       0x0         0x0       Non-Periodic Transmit Request Queue Space Available                           
                                                        (NPTxQSpcAvail)
                                                        Indicates the amount of free space available in the Non-
                                                        Periodic Transmit Request Queue. This queue holds both IN 
                                                        and OUT requests in Host mode. Device mode has only IN 
                                                        requests.
                                                        * 8'h0: Non-Periodic Transmit Request Queue is full
                                                        * 8'h1: 1 location available
                                                        * 8'h2: 2 locations available
                                                        * n: n locations available (0..8)
                                                        * Others: Reserved
<15:0>  NPTxFSpcAvail   RO       0x0         0x0       Non-Periodic TxFIFO Space Avail (NPTxFSpcAvail)                               
                                                        Indicates the amount of free space available in the Non-
                                                        Periodic TxFIFO.
                                                        Values are in terms of 32-bit words.
                                                        * 16'h0: Non-Periodic TxFIFO is full
                                                        * 16'h1: 1 word available
                                                        * 16'h2: 2 words available
                                                        * 16'hn: n words available (where 0..32768)
                                                        * 16'h8000: 32768 words available
                                                        * Others: Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  Synopsys ID Register (GSNPSID)
 *
 * This is a read-only register that contains the release number of the core being used.
 *

     ==============================================================
     USBC(0)_GSNPSID Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  SynopsysID      RO       NS          NS         0x4F54<version>A, release number of the core being used.                      
                                                         0x4F54220A => pass1.x,  0x4F54240A => pass2.x
----------------------------------------------------------------------------------------------------
===

 *
 *                  User HW Config1 Register (GHWCFG1)
 *
 * This register contains the logical endpoint direction(s) of the O2P USB core.
 *

     ==============================================================
     USBC(0)_GHWCFG1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  epdir           RO       0x0         0x0       Endpoint Direction (epdir)                                                    
                                                        Two bits per endpoint represent the direction.
                                                        * 2'b00: BIDIR (IN and OUT) endpoint
                                                        * 2'b01: IN endpoint
                                                        * 2'b10: OUT endpoint
                                                        * 2'b11: Reserved
                                                        
                                                        Bits [31:30]: Endpoint 15 direction
                                                        Bits [29:28]: Endpoint 14 direction
                                                        ...
                                                        Bits [3:2]: Endpoint 1 direction
                                                        Bits[1:0]: Endpoint 0 direction (always BIDIR)
----------------------------------------------------------------------------------------------------
===

 *
 *                  User HW Config2 Register (GHWCFG2)
 *
 * This register contains configuration options of the O2P USB core.
 *

     ==============================================================
     USBC(0)_GHWCFG2 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:31> Reserved        RO       NS          NS        Reserved                                                                      
<30:26> TknQDepth       RO       0x1E        0x1E      Device Mode IN Token Sequence Learning Queue Depth                            
                                                        (TknQDepth)
                                                        Range: 0-30
<25:24> PTxQDepth       RO       0x2         0x2       Host Mode Periodic Request Queue Depth (PTxQDepth)                            
                                                        * 2'b00: 2
                                                        * 2'b01: 4
                                                        * 2'b10: 8
                                                        * Others: Reserved
<23:22> NPTxQDepth      RO       0x2         0x2       Non-Periodic Request Queue Depth (NPTxQDepth)                                 
                                                        * 2'b00: 2
                                                        * 2'b01: 4
                                                        * 2'b10: 8
                                                        * Others: Reserved
<21:20> Reserved1       RO       NS          NS        Reserved                                                                      
<19>    DynFifoSizing   RO       0x1         0x1       Dynamic FIFO Sizing Enabled (DynFifoSizing)                                   
                                                        * 1'b0: No
                                                        * 1'b1: Yes
<18>    PerioSupport    RO       0x1         0x1       Periodic OUT Channels Supported in Host Mode                                  
                                                        (PerioSupport)
                                                        * 1'b0: No
                                                        * 1'b1: Yes
<17:14> NumHstChnl      RO       0x7         0x7       Number of Host Channels (NumHstChnl)                                          
                                                        Indicates the number of host channels supported by the core in 
                                                        Host mode. The range of this field is 0-15: 0 specifies 1
                                                        channel, 15 specifies 16 channels.
<13:10> NumDevEps       RO       0x4         0x4       Number of Device Endpoints (NumDevEps)                                        
                                                        Indicates the number of device endpoints supported by the core 
                                                        in Device mode in addition to control endpoint 0. The range of 
                                                        this field is 1-15.
<9:8>   FSPhyType       RO       0x0         0x0       Full-Speed PHY Interface Type (FSPhyType)                                     
                                                        * 2'b00: Full-speed interface not supported
                                                        * 2'b01: Dedicated full-speed interface
                                                        * 2'b10: FS pins shared with UTMI+ pins
                                                        * 2'b11: FS pins shared with ULPI pins
<7:6>   HSPhyType       RO       0x1         0x1       High-Speed PHY Interface Type (HSPhyType)                                     
                                                        * 2'b00: High-Speed interface not supported
                                                        * 2'b01: UTMI+
                                                        * 2'b10: ULPI
                                                        * 2'b11: UTMI+ and ULPI
<5>     SingPnt         RO       0x0         0x0       Point-to-Point (SingPnt)                                                      
                                                        * 1'b0: Multi-point application
                                                        * 1'b1: Single-point application
<4:3>   OtgArch         RO       0x1         0x1       Architecture (OtgArch)                                                        
                                                        * 2'b00: Slave-Only
                                                        * 2'b01: External DMA
                                                        * 2'b10: Internal DMA
                                                        * Others: Reserved
<2:0>   OtgMode         RO       0x2         0x2       Mode of Operation (OtgMode)                                                   
                                                        * 3'b000: HNP- and SRP-Capable OTG (Host & Device)
                                                        * 3'b001: SRP-Capable OTG (Host & Device)
                                                        * 3'b010: Non-HNP and Non-SRP Capable OTG (Host & 
                                                        Device)
                                                        * 3'b011: SRP-Capable Device
                                                        * 3'b100: Non-OTG Device
                                                        * 3'b101: SRP-Capable Host
                                                        * 3'b110: Non-OTG Host
                                                        * Others: Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  User HW Config3 Register (GHWCFG3)
 *
 * This register contains the configuration options of the O2P USB core.
 *

     ==============================================================
     USBC(0)_GHWCFG3 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:16> DfifoDepth      RO       0x720       0x720     DFIFO Depth (DfifoDepth)                                                      
                                                        This value is in terms of 32-bit words.
                                                        * Minimum value is 32
                                                        * Maximum value is 32768
<15:13> Reserved        RO       NS          NS        Reserved                                                                      
<12>    AhbPhySync      RO       0x0         0x0       AHB and PHY Synchronous (AhbPhySync)                                          
                                                        Indicates whether AHB and PHY clocks are synchronous to 
                                                        each other.
                                                        * 1'b0: No
                                                        * 1'b1: Yes
                                                        This bit is tied to 1.
<11>    RstType         RO       0x1         0x1       Reset Style for Clocked always Blocks in RTL (RstType)                        
                                                        * 1'b0: Asynchronous reset is used in the core
                                                        * 1'b1: Synchronous reset is used in the core
<10>    OptFeature      RO       0x1         0x1       Optional Features Removed (OptFeature)                                        
                                                        Indicates whether the User ID register, GPIO interface ports, 
                                                        and SOF toggle and counter ports were removed for gate count 
                                                        optimization. 
<9>     Vendor_Control_Interface_Support RO       0x0         0x0       Vendor Control Interface Support                                              
                                                        * 1'b0: Vendor Control Interface is not available on the core.
                                                        * 1'b1: Vendor Control Interface is available.
<8>     I2C_Selection   RO       0x0         0x0       I2C Selection                                                                 
                                                        * 1'b0: I2C Interface is not available on the core.
                                                        * 1'b1: I2C Interface is available on the core.
<7>     OtgEn           RO       0x1         0x1       OTG Function Enabled (OtgEn)                                                  
                                                        The application uses this bit to indicate the O2P USB core's 
                                                        OTG capabilities. 
                                                        * 1'b0: Not OTG capable
                                                        * 1'b1: OTG Capable
<6:4>   PktSizeWidth    RO       0x6         0x6       Width of Packet Size Counters (PktSizeWidth)                                  
                                                        * 3'b000: 4 bits
                                                        * 3'b001: 5 bits
                                                        * 3'b010: 6 bits
                                                        * 3'b011: 7 bits
                                                        * 3'b100: 8 bits
                                                        * 3'b101: 9 bits
                                                        * 3'b110: 10 bits
                                                        * Others: Reserved
<3:0>   XferSizeWidth   RO       0x8         0x8       Width of Transfer Size Counters (XferSizeWidth)                               
                                                        * 4'b0000: 11 bits
                                                        * 4'b0001: 12 bits
                                                        ...
                                                        * 4'b1000: 19 bits
                                                        * Others: Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  User HW Config4 Register (GHWCFG4)
 *
 * This register contains the configuration options of the O2P USB core.
 *

     ==============================================================
     USBC(0)_GHWCFG4 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:30> Reserved        RO       NS          NS        Reserved                                                                      
<29:26> NumDevModInEnd  RO       0x2         0x2       Enable dedicatd transmit FIFO for device IN endpoints.                        
<25>    EnDedTrFifo     RO       0x0         0x0       Enable dedicatd transmit FIFO for device IN endpoints.                        
<24>    SessEndFltr     RO       0x0         0x0       "session_end" Filter Enabled (SessEndFltr)                                    
                                                        * 1'b0: No filter
                                                        * 1'b1: Filter
<23>    BValidFltr      RO       0x0         0x0       "b_valid" Filter Enabled (BValidFltr)                                         
                                                        * 1'b0: No filter
                                                        * 1'b1: Filter
<22>    AValidFltr      RO       0x0         0x0       "a_valid" Filter Enabled (AValidFltr)                                         
                                                        * 1'b0: No filter
                                                        * 1'b1: Filter
<21>    VBusValidFltr   RO       0x1         0x1       "vbus_valid" Filter Enabled (VBusValidFltr)                                   
                                                        * 1'b0: No filter
                                                        * 1'b1: Filter
<20>    IddgFltr        RO       0x1         0x1       "iddig" Filter Enable (IddgFltr)                                              
                                                        * 1'b0: No filter
                                                        * 1'b1: Filter
<19:16> NumCtlEps       RO       0x4         0x4       Number of Device Mode Control Endpoints in Addition to                        
                                                        Endpoint 0 (NumCtlEps)
                                                        Range: 1-15
<15:14> PhyDataWidth    RO       0x1         0x1       UTMI+ PHY/ULPI-to-Internal UTMI+ Wrapper Data Width                           
                                                        (PhyDataWidth)
                                                        When a ULPI PHY is used, an internal wrapper converts ULPI 
                                                        to UTMI+.
                                                        * 2'b00: 8 bits
                                                        * 2'b01: 16 bits
                                                        * 2'b10: 8/16 bits, software selectable
                                                        * Others: Reserved
<13:6>  Reserved1       RO       NS          NS        Reserved                                                                      
<5>     AhbFreq         RO       0x1         0x1       Minimum AHB Frequency Less Than 60 MHz (AhbFreq)                              
                                                        * 1'b0: No
                                                        * 1'b1: Yes
<4>     EnablePwrOpt    RO       0x0         0x0       Enable Power Optimization? (EnablePwrOpt)                                     
                                                        * 1'b0: No
                                                        * 1'b1: Yes
<3:0>   NumDevPerioEps  RO       0x4         0x4       Number of Device Mode Periodic IN Endpoints                                   
                                                        (NumDevPerioEps)
                                                        Range: 0-15
----------------------------------------------------------------------------------------------------
===

 *
 *                  Host Periodic Transmit FIFO Size Register (HPTXFSIZ)
 *
 * This register holds the size and the memory start address of the Periodic TxFIFO, as shown in Figures 310 and 311.
 *

     ==============================================================
     USBC(0)_HPTXFSIZ Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:16> PTxFSize        R/W      0x100       0x1C8     Host Periodic TxFIFO Depth (PTxFSize)                                         
                                                        This value is in terms of 32-bit words.
                                                        * Minimum value is 16
                                                        * Maximum value is 32768
<15:0>  PTxFStAddr      R/W      0xE40       0x390     Host Periodic TxFIFO Start Address (PTxFStAddr)                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device Periodic Transmit FIFO-n Size Register (DPTXFSIZ)
 *
 * This register holds the memory start address of each periodic TxFIFO to implemented 
 * in Device mode. Each periodic FIFO holds the data for one periodic IN endpoint. 
 * This register is repeated for each periodic FIFO instantiated.
 *

     ==============================================================
     USBC(0)_DPTXFSIZ(1..4) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:16> DPTxFSize       RO       0x768       0x768     Device Periodic TxFIFO Size (DPTxFSize)                                       
                                                        This value is in terms of 32-bit words.
                                                        * Minimum value is 4
                                                        * Maximum value is 768
<15:0>  DPTxFStAddr     RO       0x0         0x0       Device Periodic TxFIFO RAM Start Address (DPTxFStAddr)                        
                                                        Holds the start address in the RAM for this periodic FIFO.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Host Configuration Register (HCFG)
 *
 * This register configures the core after power-on. Do not make changes to this register after initializing the host.
 *

     ==============================================================
     USBC(0)_HCFG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:3>  Reserved        RO       NS          NS        Reserved                                                                      
<2>     FSLSSupp        R/W      0x0         0x0       FS- and LS-Only Support (FSLSSupp)                                            
                                                        The application uses this bit to control the core's enumeration 
                                                        speed. Using this bit, the application can make the core 
                                                        enumerate as a FS host, even if the connected device supports 
                                                        HS traffic. Do not make changes to this field after initial 
                                                        programming.
                                                        * 1'b0: HS/FS/LS, based on the maximum speed supported by 
                                                          the connected device
                                                        * 1'b1: FS/LS-only, even if the connected device can support HS
<1:0>   FSLSPclkSel     R/W      0x0         0x0       FS/LS PHY Clock Select (FSLSPclkSel)                                          
                                                        When the core is in FS Host mode
                                                        * 2'b00: PHY clock is running at 30/60 MHz
                                                        * 2'b01: PHY clock is running at 48 MHz
                                                        * Others: Reserved
                                                        When the core is in LS Host mode
                                                        * 2'b00: PHY clock is running at 30/60 MHz. When the 
                                                                 UTMI+/ULPI PHY Low Power mode is not selected, use 
                                                                 30/60 MHz.
                                                        * 2'b01: PHY clock is running at 48 MHz. When the UTMI+ 
                                                                 PHY Low Power mode is selected, use 48MHz if the PHY 
                                                                 supplies a 48 MHz clock during LS mode.
                                                        * 2'b10: PHY clock is running at 6 MHz. In USB 1.1 FS mode, 
                                                                 use 6 MHz when the UTMI+ PHY Low Power mode is 
                                                                 selected and the PHY supplies a 6 MHz clock during LS 
                                                                 mode. If you select a 6 MHz clock during LS mode, you must 
                                                                 do a soft reset.
                                                        * 2'b11: Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  Host Frame Interval Register (HFIR)
 *
 * This register stores the frame interval information for the current speed to which the O2P USB core has enumerated.
 *

     ==============================================================
     USBC(0)_HFIR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:16> Reserved        RO       NS          NS        Reserved                                                                      
<15:0>  FrInt           R/W      0x0B8F      0xEA6     Frame Interval (FrInt)                                                        
                                                        The value that the application programs to this field specifies 
                                                        the interval between two consecutive SOFs (FS) or micro-
                                                        SOFs (HS) or Keep-Alive tokens (HS). This field contains the 
                                                        number of PHY clocks that constitute the required frame 
                                                        interval. The default value set in this field for a FS operation 
                                                        when the PHY clock frequency is 60 MHz. The application can 
                                                        write a value to this register only after the Port Enable bit of 
                                                        the Host Port Control and Status register (HPRT.PrtEnaPort) 
                                                        has been set. If no value is programmed, the core calculates 
                                                        the value based on the PHY clock specified in the FS/LS PHY 
                                                        Clock Select field of the Host Configuration register 
                                                        (HCFG.FSLSPclkSel). Do not change the value of this field 
                                                        after the initial configuration.
                                                        * 125 us (PHY clock frequency for HS)
                                                        * 1 ms (PHY clock frequency for FS/LS)
----------------------------------------------------------------------------------------------------
===

 *
 *                  Host Frame Number/Frame Time Remaining Register (HFNUM)
 *
 * This register indicates the current frame number. 
 * It also indicates the time remaining (in terms of the number of PHY clocks) 
 * in the current (micro)frame.
 *

     ==============================================================
     USBC(0)_HFNUM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:16> FrRem           RO       0x0         0x0       Frame Time Remaining (FrRem)                                                  
                                                        Indicates the amount of time remaining in the current 
                                                        microframe (HS) or frame (FS/LS), in terms of PHY clocks. 
                                                        This field decrements on each PHY clock. When it reaches 
                                                        zero, this field is reloaded with the value in the Frame Interval 
                                                        register and a new SOF is transmitted on the USB.
<15:0>  FrNum           RO       0x3FFF      0x0       Frame Number (FrNum)                                                          
                                                        This field increments when a new SOF is transmitted on the 
                                                        USB, and is reset to 0 when it reaches 16'h3FFF.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Host Periodic Transmit FIFO/Queue Status Register (HPTXSTS)
 *
 * This read-only register contains the free space information for the Periodic TxFIFO and 
 * the Periodic Transmit Request Queue..
 *

     ==============================================================
     USBC(0)_HPTXSTS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:24> PTxQTop         RO       0x0         0x0       Top of the Periodic Transmit Request Queue (PTxQTop)                          
                                                        This indicates the entry in the Periodic Tx Request Queue that 
                                                        is currently being processes by the MAC.
                                                        This register is used for debugging.
                                                        * Bit [31]: Odd/Even (micro)frame
                                                          - 1'b0: send in even (micro)frame
                                                          - 1'b1: send in odd (micro)frame
                                                        * Bits [30:27]: Channel/endpoint number
                                                        * Bits [26:25]: Type
                                                          - 2'b00: IN/OUT
                                                          - 2'b01: Zero-length packet
                                                          - 2'b10: CSPLIT
                                                          - 2'b11: Disable channel command
                                                        * Bit [24]: Terminate (last entry for the selected 
                                                          channel/endpoint)
<23:16> PTxQSpcAvail    RO       0x0         0x0       Periodic Transmit Request Queue Space Available                               
                                                        (PTxQSpcAvail)
                                                        Indicates the number of free locations available to be written in 
                                                        the Periodic Transmit Request Queue. This queue holds both 
                                                        IN and OUT requests.
                                                        * 8'h0: Periodic Transmit Request Queue is full
                                                        * 8'h1: 1 location available
                                                        * 8'h2: 2 locations available
                                                        * n: n locations available (0..8)
                                                        * Others: Reserved
<15:0>  PTxFSpcAvail    RO       0x0         0x0       Periodic Transmit Data FIFO Space Available (PTxFSpcAvail)                    
                                                        Indicates the number of free locations available to be written to 
                                                        in the Periodic TxFIFO.
                                                        Values are in terms of 32-bit words
                                                        * 16'h0: Periodic TxFIFO is full
                                                        * 16'h1: 1 word available
                                                        * 16'h2: 2 words available
                                                        * 16'hn: n words available (where 0..32768)
                                                        * 16'h8000: 32768 words available
                                                        * Others: Reserved
----------------------------------------------------------------------------------------------------
===

 *
 *                  Host All Channels Interrupt Register (HAINT)
 *
 * When a significant event occurs on a channel, the Host All Channels Interrupt register 
 * interrupts the application using the Host Channels Interrupt bit of the Core Interrupt 
 * register (GINTSTS.HChInt). This is shown in Interrupt . There is one interrupt bit per 
 * channel, up to a maximum of 16 bits. Bits in this register are set and cleared when the 
 * application sets and clears bits in the corresponding Host Channel-n Interrupt register.
 *

     ==============================================================
     USBC(0)_HAINT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:16> Reserved        RO       NS          NS        Reserved                                                                      
<15:0>  HAINT           RO       0x0         0x0       Channel Interrupts (HAINT)                                                    
                                                        One bit per channel: Bit 0 for Channel 0, bit 15 for Channel 15
----------------------------------------------------------------------------------------------------
===

 *
 *                  Host All Channels Interrupt Mask Register (HAINTMSK)
 *
 * The Host All Channel Interrupt Mask register works with the Host All Channel Interrupt 
 * register to interrupt the application when an event occurs on a channel. There is one 
 * interrupt mask bit per channel, up to a maximum of 16 bits.          
 * Mask interrupt: 1'b0 Unmask interrupt: 1'b1
 *

     ==============================================================
     USBC(0)_HAINTMSK Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:16> Reserved        RO       NS          NS        Reserved                                                                      
<15:0>  HAINTMsk        R/W      0x0         0x0       Channel Interrupt Mask (HAINTMsk)                                             
                                                        One bit per channel: Bit 0 for channel 0, bit 15 for channel 15
----------------------------------------------------------------------------------------------------
===

 *
 *                  Host Port Control and Status Register (HPRT)
 *
 * This register is available in both Host and Device modes. 
 * Currently, the OTG Host supports only one port.
 * A single register holds USB port-related information such as USB reset, enable, suspend, resume, 
 * connect status, and test mode for each port. The R_SS_WC bits in this register can trigger an 
 * interrupt to the application through the Host Port Interrupt bit of the Core Interrupt 
 * register (GINTSTS.PrtInt). On a Port Interrupt, the application must read this register and clear 
 * the bit that caused the interrupt. For the R_SS_WC bits, the application must write a 1 to the bit 
 * to clear the interrupt. 
 *

     ==============================================================
     USBC(0)_HPRT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:19> Reserved        RO       NS          NS        Reserved                                                                      
<18:17> PrtSpd          RO       0x0         0x0       Port Speed (PrtSpd)                                                           
                                                        Indicates the speed of the device attached to this port.
                                                        * 2'b00: High speed
                                                        * 2'b01: Full speed
                                                        * 2'b10: Low speed
                                                        * 2'b11: Reserved
<16:13> PrtTstCtl       R/W      0x0         0x0       Port Test Control (PrtTstCtl)                                                 
                                                        The application writes a nonzero value to this field to put 
                                                        the port into a Test mode, and the corresponding pattern is 
                                                        signaled on the port.
                                                        * 4'b0000: Test mode disabled
                                                        * 4'b0001: Test_J mode
                                                        * 4'b0010: Test_K mode
                                                        * 4'b0011: Test_SE0_NAK mode
                                                        * 4'b0100: Test_Packet mode
                                                        * 4'b0101: Test_Force_Enable
                                                        * Others: Reserved

                                                        PrtSpd must be zero (i.e. the interface must be in high-speed
                                                        mode) to use the PrtTstCtl test modes.
<12>    PrtPwr          R/W      0x0         0x0       Port Power (PrtPwr)                                                           
                                                        The application uses this field to control power to this port, 
                                                        and the core clears this bit on an overcurrent condition.
                                                        * 1'b0: Power off
                                                        * 1'b1: Power on
<11:10> PrtLnSts        RO       0x0         0x0       Port Line Status (PrtLnSts)                                                   
                                                        Indicates the current logic level USB data lines
                                                        * Bit [10]: Logic level of D-
                                                        * Bit [11]: Logic level of D+
<9>     Reserved1       RO       NS          NS        Reserved                                                                      
<8>     PrtRst          R/W      0x0         0x0       Port Reset (PrtRst)                                                           
                                                        When the application sets this bit, a reset sequence is 
                                                        started on this port. The application must time the reset 
                                                        period and clear this bit after the reset sequence is 
                                                        complete.
                                                        * 1'b0: Port not in reset
                                                        * 1'b1: Port in reset
                                                        The application must leave this bit set for at least a 
                                                        minimum duration mentioned below to start a reset on the 
                                                        port. The application can leave it set for another 10 ms in 
                                                        addition to the required minimum duration, before clearing 
                                                        the bit, even though there is no maximum limit set by the 
                                                        USB standard.
                                                        * High speed: 50 ms
                                                        * Full speed/Low speed: 10 ms
<7>     PrtSusp         R/W      0x0         0x0       Port Suspend (PrtSusp)                                                        
                                                        The application sets this bit to put this port in Suspend 
                                                        mode. The core only stops sending SOFs when this is set. 
                                                        To stop the PHY clock, the application must set the Port 
                                                        Clock Stop bit, which will assert the suspend input pin of 
                                                        the PHY.
                                                        The read value of this bit reflects the current suspend 
                                                        status of the port. This bit is cleared by the core after a 
                                                        remote wakeup signal is detected or the application sets 
                                                        the Port Reset bit or Port Resume bit in this register or the 
                                                        Resume/Remote Wakeup Detected Interrupt bit or 
                                                        Disconnect Detected Interrupt bit in the Core Interrupt 
                                                        register (GINTSTS.WkUpInt or GINTSTS.DisconnInt, 
                                                        respectively).
                                                        * 1'b0: Port not in Suspend mode
                                                        * 1'b1: Port in Suspend mode
<6>     PrtRes          R/W      0x0         0x0       Port Resume (PrtRes)                                                          
                                                        The application sets this bit to drive resume signaling on 
                                                        the port. The core continues to drive the resume signal 
                                                        until the application clears this bit.
                                                        If the core detects a USB remote wakeup sequence, as 
                                                        indicated by the Port Resume/Remote Wakeup Detected 
                                                        Interrupt bit of the Core Interrupt register 
                                                        (GINTSTS.WkUpInt), the core starts driving resume 
                                                        signaling without application intervention and clears this bit 
                                                        when it detects a disconnect condition. The read value of 
                                                        this bit indicates whether the core is currently driving 
                                                        resume signaling.
                                                        * 1'b0: No resume driven
                                                        * 1'b1: Resume driven
<5>     PrtOvrCurrChng  R/W1C    0x0         0x0       Port Overcurrent Change (PrtOvrCurrChng)                                      
                                                        The core sets this bit when the status of the Port 
                                                        Overcurrent Active bit (bit 4) in this register changes.
<4>     PrtOvrCurrAct   RO       0x0         0x0       Port Overcurrent Active (PrtOvrCurrAct)                                       
                                                        Indicates the overcurrent condition of the port.
                                                        * 1'b0: No overcurrent condition
                                                        * 1'b1: Overcurrent condition
<3>     PrtEnChng       R/W1C    0x0         0x0       Port Enable/Disable Change (PrtEnChng)                                        
                                                        The core sets this bit when the status of the Port Enable bit 
                                                        [2] of this register changes. 
<2>     PrtEna          R/W1C    0x0         0x0       Port Enable (PrtEna)                                                          
                                                        A port is enabled only by the core after a reset sequence, 
                                                        and is disabled by an overcurrent condition, a disconnect 
                                                        condition, or by the application clearing this bit. The 
                                                        application cannot set this bit by a register write. It can only 
                                                        clear it to disable the port. This bit does not trigger any 
                                                        interrupt to the application.
                                                        * 1'b0: Port disabled
                                                        * 1'b1: Port enabled
<1>     PrtConnDet      R/W1C    0x0         0x0       Port Connect Detected (PrtConnDet)                                            
                                                        The core sets this bit when a device connection is detected 
                                                        to trigger an interrupt to the application using the Host Port 
                                                        Interrupt bit of the Core Interrupt register (GINTSTS.PrtInt). 
                                                        The application must write a 1 to this bit to clear the 
                                                        interrupt.
<0>     PrtConnSts      RO       0x0         0x0       Port Connect Status (PrtConnSts)                                              
                                                        * 0: No device is attached to the port.
                                                        * 1: A device is attached to the port.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Host Channel-n Characteristics Register (HCCHAR)
 *
 * 
 *

     ==============================================================
     USBC(0)_HCCHAR(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31>    ChEna           R/W      0x0         0x0       Channel Enable (ChEna)                                                        
                                                        This field is set by the application and cleared by the OTG host.
                                                        * 1'b0: Channel disabled
                                                        * 1'b1: Channel enabled
<30>    ChDis           R/W      0x0         0x0       Channel Disable (ChDis)                                                       
                                                        The application sets this bit to stop transmitting/receiving data 
                                                        on a channel, even before the transfer for that channel is 
                                                        complete. The application must wait for the Channel Disabled 
                                                        interrupt before treating the channel as disabled.
<29>    OddFrm          R/W      0x0         0x0       Odd Frame (OddFrm)                                                            
                                                        This field is set (reset) by the application to indicate that the 
                                                        OTG host must perform a transfer in an odd (micro)frame. This 
                                                        field is applicable for only periodic (isochronous and interrupt) 
                                                        transactions.
                                                        * 1'b0: Even (micro)frame
                                                        * 1'b1: Odd (micro)frame
<28:22> DevAddr         R/W      0x0         0x0       Device Address (DevAddr)                                                      
                                                        This field selects the specific device serving as the data source 
                                                        or sink.
<21:20> EC              R/W      0x0         0x0       Multi Count (MC) / Error Count (EC)                                           
                                                        When the Split Enable bit of the Host Channel-n Split Control 
                                                        register (HCSPLTn.SpltEna) is reset (1'b0), this field indicates 
                                                        to the host the number of transactions that should be executed 
                                                        per microframe for this endpoint.
                                                        * 2'b00: Reserved. This field yields undefined results.
                                                        * 2'b01: 1 transaction
                                                        * 2'b10: 2 transactions to be issued for this endpoint per 
                                                                 microframe
                                                        * 2'b11: 3 transactions to be issued for this endpoint per 
                                                                 microframe
                                                        When HCSPLTn.SpltEna is set (1'b1), this field indicates the 
                                                        number of immediate retries to be performed for a periodic split 
                                                        transactions on transaction errors. This field must be set to at 
                                                        least 2'b01.
<19:18> EPType          R/W      0x0         0x0       Endpoint Type (EPType)                                                        
                                                        Indicates the transfer type selected.
                                                        * 2'b00: Control
                                                        * 2'b01: Isochronous
                                                        * 2'b10: Bulk
                                                        * 2'b11: Interrupt
<17>    LSpdDev         R/W      0x0         0x0       Low-Speed Device (LSpdDev)                                                    
                                                        This field is set by the application to indicate that this channel is 
                                                        communicating to a low-speed device.
<16>    Reserved        RO       NS          NS        Reserved                                                                      
<15>    EPDir           R/W      0x0         0x0       Endpoint Direction (EPDir)                                                    
                                                        Indicates whether the transaction is IN or OUT.
                                                        * 1'b0: OUT
                                                        * 1'b1: IN
<14:11> EPNum           R/W      0x0         0x0       Endpoint Number (EPNum)                                                       
                                                        Indicates the endpoint number on the device serving as the 
                                                        data source or sink.
<10:0>  MPS             R/W      0x0         0x0       Maximum Packet Size (MPS)                                                     
                                                        Indicates the maximum packet size of the associated endpoint.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Host Channel-n Split Control Register (HCSPLT)
 *
 * 
 *

     ==============================================================
     USBC(0)_HCSPLT(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31>    SpltEna         R/W      0x0         0x0       Split Enable (SpltEna)                                                        
                                                        The application sets this field to indicate that this channel is 
                                                        enabled to perform split transactions.
<30:17> Reserved        RO       NS          NS        Reserved                                                                      
<16>    CompSplt        R/W      0x0         0x0       Do Complete Split (CompSplt)                                                  
                                                        The application sets this field to request the OTG host to 
                                                        perform a complete split transaction.
<15:14> XactPos         R/W      0x0         0x0       Transaction Position (XactPos)                                                
                                                        This field is used to determine whether to send all, first, middle, 
                                                        or last payloads with each OUT transaction. 
                                                        * 2'b11: All. This is the entire data payload is of this transaction 
                                                                 (which is less than or equal to 188 bytes).
                                                        * 2'b10: Begin. This is the first data payload of this transaction 
                                                                 (which is larger than 188 bytes).
                                                        * 2'b00: Mid. This is the middle payload of this transaction 
                                                                 (which is larger than 188 bytes).
                                                        * 2'b01: End. This is the last payload of this transaction (which 
                                                                 is larger than 188 bytes).
<13:7>  HubAddr         R/W      0x0         0x0       Hub Address (HubAddr)                                                         
                                                        This field holds the device address of the transaction 
                                                        translator's hub.
<6:0>   PrtAddr         R/W      0x0         0x0       Port Address (PrtAddr)                                                        
                                                        This field is the port number of the recipient transaction 
                                                        translator.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Host Channel-n Interrupt Register (HCINT)
 *
 * This register indicates the status of a channel with respect to USB- and AHB-related events. 
 * The application must read this register when the Host Channels Interrupt bit of the Core Interrupt
 * register (GINTSTS.HChInt) is set. Before the application can read this register, it must first read 
 * the Host All Channels Interrupt (HAINT) register to get the exact channel number for the Host Channel-n 
 * Interrupt register. The application must clear the appropriate bit in this register to clear the 
 * corresponding bits in the HAINT and GINTSTS registers.
 *

     ==============================================================
     USBC(0)_HCINT(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:11> Reserved        RO       NS          NS        Reserved                                                                      
<10>    DataTglErr      R/W1C    0x0         0x0       Data Toggle Error (DataTglErr)                                                
<9>     FrmOvrun        R/W1C    0x0         0x0       Frame Overrun (FrmOvrun)                                                      
<8>     BblErr          R/W1C    0x0         0x0       Babble Error (BblErr)                                                         
<7>     XactErr         R/W1C    0x0         0x0       Transaction Error (XactErr)                                                   
<6>     NYET            R/W1C    0x0         0x0       NYET Response Received Interrupt (NYET)                                       
<5>     ACK             R/W1C    0x0         0x0       ACK Response Received Interrupt (ACK)                                         
<4>     NAK             R/W1C    0x0         0x0       NAK Response Received Interrupt (NAK)                                         
<3>     STALL           R/W1C    0x0         0x0       STALL Response Received Interrupt (STALL)                                     
<2>     AHBErr          R/W1C    0x0         0x0       This bit is always 0x0.                                                       
<1>     ChHltd          R/W1C    0x0         0x0       Channel Halted (ChHltd)                                                       
                                                        Indicates the transfer completed abnormally either because of 
                                                        any USB transaction error or in response to disable request by 
                                                        the application.
<0>     XferCompl       R/W1C    0x0         0x0       Transfer Completed (XferCompl)                                                
                                                        Transfer completed normally without any errors.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Host Channel-n Interrupt Mask Register (HCINTMSKn)
 *
 * This register reflects the mask for each channel status described in the previous section. 
 * Mask interrupt: 1'b0 Unmask interrupt: 1'b1
 *

     ==============================================================
     USBC(0)_HCINTMSK(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:11> Reserved        RO       NS          NS        Reserved                                                                      
<10>    DataTglErrMsk   R/W      0x0         0x0       Data Toggle Error Mask (DataTglErrMsk)                                        
<9>     FrmOvrunMsk     R/W      0x0         0x0       Frame Overrun Mask (FrmOvrunMsk)                                              
<8>     BblErrMsk       R/W      0x0         0x0       Babble Error Mask (BblErrMsk)                                                 
<7>     XactErrMsk      R/W      0x0         0x0       Transaction Error Mask (XactErrMsk)                                           
<6>     NyetMsk         R/W      0x0         0x0       NYET Response Received Interrupt Mask (NyetMsk)                               
<5>     AckMsk          R/W      0x0         0x0       ACK Response Received Interrupt Mask (AckMsk)                                 
<4>     NakMsk          R/W      0x0         0x0       NAK Response Received Interrupt Mask (NakMsk)                                 
<3>     StallMsk        R/W      0x0         0x0       STALL Response Received Interrupt Mask (StallMsk)                             
<2>     AHBErrMsk       R/W      0x0         0x0       AHB Error Mask (AHBErrMsk)                                                    
<1>     ChHltdMsk       R/W      0x0         0x0       Channel Halted Mask (ChHltdMsk)                                               
<0>     XferComplMsk    R/W      0x0         0x0       Transfer Completed Mask (XferComplMsk)                                        
----------------------------------------------------------------------------------------------------
===

 *
 *                  Host Channel-n Transfer Size Register (HCTSIZ)
 *
 * 
 *

     ==============================================================
     USBC(0)_HCTSIZ(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31>    DoPng           R/W      0x0         0x0       Do Ping (DoPng)                                                               
                                                        Setting this field to 1 directs the host to do PING protocol.
<30:29> Pid             R/W      0x0         0x0       PID (Pid)                                                                     
                                                        The application programs this field with the type of PID to use 
                                                        for the initial transaction. The host will maintain this field for the 
                                                        rest of the transfer.
                                                        * 2'b00: DATA0
                                                        * 2'b01: DATA2
                                                        * 2'b10: DATA1
                                                        * 2'b11: MDATA (non-control)/SETUP (control)
<28:19> PktCnt          R/W      0x0         0x0       Packet Count (PktCnt)                                                         
                                                        This field is programmed by the application with the expected 
                                                        number of packets to be transmitted (OUT) or received (IN).
                                                        The host decrements this count on every successful 
                                                        transmission or reception of an OUT/IN packet. Once this count 
                                                        reaches zero, the application is interrupted to indicate normal 
                                                        completion.
<18:0>  XferSize        R/W      0x0         0x0       Transfer Size (XferSize)                                                      
                                                        For an OUT, this field is the number of data bytes the host will 
                                                        send during the transfer.
                                                        For an IN, this field is the buffer size that the application has 
                                                        reserved for the transfer. The application is expected to 
                                                        program this field as an integer multiple of the maximum packet 
                                                        size for IN transactions (periodic and non-periodic).
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device Configuration Register (DCFG)
 *
 * This register configures the core in Device mode after power-on or after certain control 
 * commands or enumeration. Do not make changes to this register after initial programming.
 *

     ==============================================================
     USBC(0)_DCFG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:23> Reserved        RO       NS          NS        Reserved                                                                      
<22:18> EPMisCnt        R/W      0x8         0x0       IN Endpoint Mismatch Count (EPMisCnt)                                         
                                                        The application programs this filed with a count that determines 
                                                        when the core generates an Endpoint Mismatch interrupt 
                                                        (GINTSTS.EPMis). The core loads this value into an internal 
                                                        counter and decrements it. The counter is reloaded whenever 
                                                        there is a match or when the counter expires. The width of this 
                                                        counter depends on the depth of the Token Queue.
<17:13> Reserved1       RO       NS          NS        Reserved                                                                      
<12:11> PerFrInt        R/W      0x0         0x0       Periodic Frame Interval (PerFrInt)                                            
                                                        Indicates the time within a (micro)frame at which the application 
                                                        must be notified using the End Of Periodic Frame Interrupt. This 
                                                        can be used to determine if all the isochronous traffic for that 
                                                        (micro)frame is complete.
                                                        * 2'b00: 80% of the (micro)frame interval
                                                        * 2'b01: 85%
                                                        * 2'b10: 90%
                                                        * 2'b11: 95%
<10:4>  DevAddr         R/W      0x0         0x0       Device Address (DevAddr)                                                      
                                                        The application must program this field after every SetAddress 
                                                        control command.
<3>     Reserved2       RO       NS          NS        Reserved                                                                      
<2>     NZStsOUTHShk    R/W      0x0         0x0       Non-Zero-Length Status OUT Handshake (NZStsOUTHShk)                           
                                                        The application can use this field to select the handshake the 
                                                        core sends on receiving a nonzero-length data packet during 
                                                        the OUT transaction of a control transfer's Status stage.
                                                        * 1'b1: Send a STALL handshake on a nonzero-length status 
                                                                OUT transaction and do not send the received OUT packet to 
                                                                the application.
                                                        * 1'b0: Send the received OUT packet to the application (zero-
                                                                length or nonzero-length) and send a handshake based on 
                                                                the NAK and STALL bits for the endpoint in the Device 
                                                                Endpoint Control register.
<1:0>   DevSpd          R/W      0x0         0x0       Device Speed (DevSpd)                                                         
                                                        Indicates the speed at which the application requires the core to 
                                                        enumerate, or the maximum speed the application can support. 
                                                        However, the actual bus speed is determined only after the 
                                                        chirp sequence is completed, and is based on the speed of the 
                                                        USB host to which the core is connected. See "Device 
                                                        Initialization" on page 249 for details.
                                                        * 2'b00: High speed (USB 2.0 PHY clock is 30 MHz or 60 MHz)
                                                        * 2'b01: Full speed (USB 2.0 PHY clock is 30 MHz or 60 MHz)
                                                        * 2'b10: Low speed (USB 1.1 transceiver clock is 6 MHz). If 
                                                                 you select 6 MHz LS mode, you must do a soft reset.
                                                        * 2'b11: Full speed (USB 1.1 transceiver clock is 48 MHz)
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device Control Register (DCTL)
 *
 * 
 *

     ==============================================================
     USBC(0)_DCTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:12> Reserved        RO       NS          NS        Reserved                                                                      
<11>    PWROnPrgDone    R/W      0x0         0x0       Power-On Programming Done (PWROnPrgDone)                                      
                                                        The application uses this bit to indicate that register 
                                                        programming is completed after a wake-up from Power Down 
                                                        mode. For more information, see "Device Mode Suspend and 
                                                        Resume With Partial Power-Down" on page 357.
<10>    CGOUTNak        WO       0x0         0x0       Clear Global OUT NAK (CGOUTNak)                                               
                                                        A write to this field clears the Global OUT NAK.
<9>     SGOUTNak        WO       0x0         0x0       Set Global OUT NAK (SGOUTNak)                                                 
                                                        A write to this field sets the Global OUT NAK.
                                                        The application uses this bit to send a NAK handshake on all 
                                                        OUT endpoints.
                                                        The application should set the this bit only after making sure 
                                                        that the Global OUT NAK Effective bit in the Core Interrupt 
                                                        Register (GINTSTS.GOUTNakEff) is cleared.
<8>     CGNPInNak       WO       0x0         0x0       Clear Global Non-Periodic IN NAK (CGNPInNak)                                  
                                                        A write to this field clears the Global Non-Periodic IN NAK.
<7>     SGNPInNak       WO       0x0         0x0       Set Global Non-Periodic IN NAK (SGNPInNak)                                    
                                                        A write to this field sets the Global Non-Periodic IN NAK.The 
                                                        application uses this bit to send a NAK handshake on all non-
                                                        periodic IN endpoints. The core can also set this bit when a 
                                                        timeout condition is detected on a non-periodic endpoint.
                                                        The application should set this bit only after making sure that 
                                                        the Global IN NAK Effective bit in the Core Interrupt Register 
                                                        (GINTSTS.GINNakEff) is cleared.
<6:4>   TstCtl          R/W      0x0         0x0       Test Control (TstCtl)                                                         
                                                        * 3'b000: Test mode disabled
                                                        * 3'b001: Test_J mode
                                                        * 3'b010: Test_K mode
                                                        * 3'b011: Test_SE0_NAK mode
                                                        * 3'b100: Test_Packet mode
                                                        * 3'b101: Test_Force_Enable
                                                        * Others: Reserved
<3>     GOUTNakSts      RO       0x0         0x0       Global OUT NAK Status (GOUTNakSts)                                            
                                                        * 1'b0: A handshake is sent based on the FIFO Status and the 
                                                                NAK and STALL bit settings.
                                                        * 1'b1: No data is written to the RxFIFO, irrespective of space 
                                                                availability. Sends a NAK handshake on all packets, except 
                                                                on SETUP transactions. All isochronous OUT packets are 
                                                                dropped.
<2>     GNPINNakSts     RO       0x0         0x0       Global Non-Periodic IN NAK Status (GNPINNakSts)                               
                                                        * 1'b0: A handshake is sent out based on the data availability 
                                                                in the transmit FIFO.
                                                        * 1'b1: A NAK handshake is sent out on all non-periodic IN 
                                                                endpoints, irrespective of the data availability in the transmit 
                                                                FIFO.
<1>     SftDiscon       R/W      0x0         0x0       Soft Disconnect (SftDiscon)                                                   
                                                        The application uses this bit to signal the O2P USB core to do a 
                                                        soft disconnect. As long as this bit is set, the host will not see 
                                                        that the device is connected, and the device will not receive 
                                                        signals on the USB. The core stays in the disconnected state 
                                                        until the application clears this bit.
                                                        The minimum duration for which the core must keep this bit set 
                                                        is specified in Minimum Duration for Soft Disconnect  .
                                                        * 1'b0: Normal operation. When this bit is cleared after a soft 
                                                        disconnect, the core drives the phy_opmode_o signal on the 
                                                        UTMI+ to 2'b00, which generates a device connect event to 
                                                        the USB host. When the device is reconnected, the USB host 
                                                        restarts device enumeration.
                                                        * 1'b1: The core drives the phy_opmode_o signal on the 
                                                        UTMI+ to 2'b01, which generates a device disconnect event 
                                                        to the USB host.
<0>     RmtWkUpSig      R/W      0x0         0x0       Remote Wakeup Signaling (RmtWkUpSig)                                          
                                                        When the application sets this bit, the core initiates remote 
                                                        signaling to wake up the USB host.The application must set this 
                                                        bit to get the core out of Suspended state and must clear this bit 
                                                        after the core comes out of Suspended state.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device Status Register (DSTS)
 *
 * This register indicates the status of the core with respect to USB-related events. 
 * It must be read on interrupts from Device All Interrupts (DAINT) register.
 *

     ==============================================================
     USBC(0)_DSTS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:22> Reserved        RO       NS          NS        Reserved                                                                      
<21:8>  SOFFN           RO       0x0         0x0       Frame or Microframe Number of the Received SOF (SOFFN)                        
                                                        When the core is operating at high speed, this field contains a 
                                                        microframe number. When the core is operating at full or low 
                                                        speed, this field contains a frame number.
<7:4>   Reserved1       RO       NS          NS        Reserved                                                                      
<3>     ErrticErr       RO       0x0         0x0       Erratic Error (ErrticErr)                                                     
                                                        The core sets this bit to report any erratic errors 
                                                        (phy_rxvalid_i/phy_rxvldh_i or phy_rxactive_i is asserted for at 
                                                        least 2 ms, due to PHY error) seen on the UTMI+.
                                                        Due to erratic errors, the O2P USB core goes into Suspended 
                                                        state and an interrupt is generated to the application with Early 
                                                        Suspend bit of the Core Interrupt register (GINTSTS.ErlySusp). 
                                                        If the early suspend is asserted due to an erratic error, the 
                                                        application can only perform a soft disconnect recover. 
<2:1>   EnumSpd         RO       0x0         0x0       Enumerated Speed (EnumSpd)                                                    
                                                        Indicates the speed at which the O2P USB core has come up 
                                                        after speed detection through a chirp sequence. 
                                                        * 2'b00: High speed (PHY clock is running at 30 or 60 MHz)
                                                        * 2'b01: Full speed (PHY clock is running at 30 or 60 MHz)
                                                        * 2'b10: Low speed (PHY clock is running at 6 MHz)
                                                        * 2'b11: Full speed (PHY clock is running at 48 MHz)
                                                        Low speed is not supported for devices using a UTMI+ PHY.
<0>     SuspSts         RO       0x0         0x0       Suspend Status (SuspSts)                                                      
                                                        In Device mode, this bit is set as long as a Suspend condition is 
                                                        detected on the USB. The core enters the Suspended state 
                                                        when there is no activity on the phy_line_state_i signal for an 
                                                        extended period of time. The core comes out of the suspend:
                                                        * When there is any activity on the phy_line_state_i signal
                                                        * When the application writes to the Remote Wakeup Signaling 
                                                          bit in the Device Control register (DCTL.RmtWkUpSig).
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device IN Endpoint Common Interrupt Mask Register (DIEPMSK)
 *
 * This register works with each of the Device IN Endpoint Interrupt (DIEPINTn) registers 
 * for all endpoints to generate an interrupt per IN endpoint. The IN endpoint interrupt 
 * for a specific status in the DIEPINTn register can be masked by writing to the corresponding 
 * bit in this register. Status bits are masked by default.
 * Mask interrupt: 1'b0 Unmask interrupt: 1'b1
 *

     ==============================================================
     USBC(0)_DIEPMSK Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:7>  Reserved        RO       NS          NS        Reserved                                                                      
<6>     INEPNakEffMsk   R/W      0x0         0x0       IN Endpoint NAK Effective Mask (INEPNakEffMsk)                                
<5>     INTknEPMisMsk   R/W      0x0         0x0       IN Token received with EP Mismatch Mask (INTknEPMisMsk)                       
<4>     INTknTXFEmpMsk  R/W      0x0         0x0       IN Token Received When TxFIFO Empty Mask                                      
                                                        (INTknTXFEmpMsk) 
<3>     TimeOUTMsk      R/W      0x0         0x0       Timeout Condition Mask (TimeOUTMsk)                                           
                                                        (Non-isochronous endpoints)
<2>     AHBErrMsk       R/W      0x0         0x0       AHB Error Mask (AHBErrMsk)                                                    
<1>     EPDisbldMsk     R/W      0x0         0x0       Endpoint Disabled Interrupt Mask (EPDisbldMsk)                                
<0>     XferComplMsk    R/W      0x0         0x0       Transfer Completed Interrupt Mask (XferComplMsk)                              
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device OUT Endpoint Common Interrupt Mask Register (DOEPMSK)
 *
 * This register works with each of the Device OUT Endpoint Interrupt (DOEPINTn) registers 
 * for all endpoints to generate an interrupt per OUT endpoint. The OUT endpoint interrupt 
 * for a specific status in the DOEPINTn register can be masked by writing into the 
 * corresponding bit in this register. Status bits are masked by default.
 * Mask interrupt: 1'b0 Unmask interrupt: 1'b1
 *

     ==============================================================
     USBC(0)_DOEPMSK Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:5>  Reserved        RO       NS          NS        Reserved                                                                      
<4>     OUTTknEPdisMsk  R/W      0x0         0x0       OUT Token Received when Endpoint Disabled Mask                                
                                                        (OUTTknEPdisMsk)
                                                        Applies to control OUT endpoints only.
<3>     SetUPMsk        R/W      0x0         0x0       SETUP Phase Done Mask (SetUPMsk)                                              
                                                        Applies to control endpoints only.
<2>     AHBErrMsk       R/W      0x0         0x0       AHB Error (AHBErrMsk)                                                         
<1>     EPDisbldMsk     R/W      0x0         0x0       Endpoint Disabled Interrupt Mask (EPDisbldMsk)                                
<0>     XferComplMsk    R/W      0x0         0x0       Transfer Completed Interrupt Mask (XferComplMsk)                              
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device All Endpoints Interrupt Register (DAINT)
 *
 * When a significant event occurs on an endpoint, a Device All Endpoints Interrupt register 
 * interrupts the application using the Device OUT Endpoints Interrupt bit or Device IN Endpoints 
 * Interrupt bit of the Core Interrupt register (GINTSTS.OEPInt or GINTSTS.IEPInt, respectively). 
 * There is one interrupt bit per endpoint, up to a maximum of 16 bits for OUT endpoints and 16 
 * bits for IN endpoints. For a bidirectional endpoint, the corresponding IN and OUT interrupt 
 * bits are used. Bits in this register are set and cleared when the application sets and clears 
 * bits in the corresponding Device Endpoint-n Interrupt register (DIEPINTn/DOEPINTn).
 *

     ==============================================================
     USBC(0)_DAINT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:16> OutEPInt        RO       0x0         0x0       OUT Endpoint Interrupt Bits (OutEPInt)                                        
                                                        One bit per OUT endpoint:  
                                                        Bit 16 for OUT endpoint 0, bit 31 for OUT endpoint 15
<15:0>  InEpInt         RO       0x0         0x0       IN Endpoint Interrupt Bits (InEpInt)                                          
                                                        One bit per IN Endpoint:  
                                                        Bit 0 for IN endpoint 0, bit 15 for endpoint 15
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device All Endpoints Interrupt Mask Register (DAINTMSK)
 *
 * The Device Endpoint Interrupt Mask register works with the Device Endpoint Interrupt register 
 * to interrupt the application when an event occurs on a device endpoint. However, the Device 
 * All Endpoints Interrupt (DAINT) register bit corresponding to that interrupt will still be set.
 * Mask Interrupt: 1'b0 Unmask Interrupt: 1'b1
 *

     ==============================================================
     USBC(0)_DAINTMSK Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:16> OutEpMsk        R/W      0x0         0x0       OUT EP Interrupt Mask Bits (OutEpMsk)                                         
                                                        One per OUT Endpoint:
                                                        Bit 16 for OUT EP 0, bit 31 for OUT EP 15
<15:0>  InEpMsk         R/W      0x0         0x0       IN EP Interrupt Mask Bits (InEpMsk)                                           
                                                        One bit per IN Endpoint:
                                                        Bit 0 for IN EP 0, bit 15 for IN EP 15
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device IN Token Sequence Learning Queue Read Register 1 (DTKNQR1)
 *
 * The depth of the IN Token Sequence Learning Queue is specified for Device Mode IN Token 
 * Sequence Learning Queue Depth. The queue is 4 bits wide to store the endpoint number. 
 * A read from this register returns the first 5 endpoint entries of the IN Token Sequence 
 * Learning Queue. When the queue is full, the new token is pushed into the queue and oldest 
 * token is discarded.
 *

     ==============================================================
     USBC(0)_DTKNQR1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:8>  EPTkn           RO       0x0         0x0       Endpoint Token (EPTkn)                                                        
                                                        Four bits per token represent the endpoint number of the token:
                                                        * Bits [31:28]: Endpoint number of Token 5
                                                        * Bits [27:24]: Endpoint number of Token 4
                                                        .......
                                                        * Bits [15:12]: Endpoint number of Token 1
                                                        * Bits [11:8]: Endpoint number of Token 0
<7>     WrapBit         RO       0x0         0x0       Wrap Bit (WrapBit)                                                            
                                                        This bit is set when the write pointer wraps. It is cleared when 
                                                        the learning queue is cleared.
<6:5>   Reserved        RO       NS          NS        Reserved                                                                      
<4:0>   INTknWPtr       RO       0x0         0x0       IN Token Queue Write Pointer (INTknWPtr)                                      
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device IN Token Sequence Learning Queue Read Register 2 (DTKNQR2)
 *
 * A read from this register returns the next 8 endpoint entries of the learning queue.
 *

     ==============================================================
     USBC(0)_DTKNQR2 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  EPTkn           RO       0x0         0x0       Endpoint Token (EPTkn)                                                        
                                                        Four bits per token represent the endpoint number of the token:
                                                        * Bits [31:28]: Endpoint number of Token 13
                                                        * Bits [27:24]: Endpoint number of Token 12
                                                        .......
                                                        * Bits [7:4]: Endpoint number of Token 7
                                                        * Bits [3:0]: Endpoint number of Token 6
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device IN Token Sequence Learning Queue Read Register 3 (DTKNQR3)
 *
 * A read from this register returns the next 8 endpoint entries of the learning queue.
 *

     ==============================================================
     USBC(0)_DTKNQR3 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  EPTkn           RO       0x0         0x0       Endpoint Token (EPTkn)                                                        
                                                        Four bits per token represent the endpoint number of the token:
                                                        * Bits [31:28]: Endpoint number of Token 21
                                                        * Bits [27:24]: Endpoint number of Token 20
                                                        .......
                                                        * Bits [7:4]: Endpoint number of Token 15
                                                        * Bits [3:0]: Endpoint number of Token 14
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device IN Token Sequence Learning Queue Read Register 4 (DTKNQR4)
 *
 * A read from this register returns the last 8 endpoint entries of the learning queue.
 *

     ==============================================================
     USBC(0)_DTKNQR4 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  EPTkn           RO       0x0         0x0       Endpoint Token (EPTkn)                                                        
                                                        Four bits per token represent the endpoint number of the token:
                                                        * Bits [31:28]: Endpoint number of Token 29
                                                        * Bits [27:24]: Endpoint number of Token 28
                                                        .......
                                                        * Bits [7:4]: Endpoint number of Token 23
                                                        * Bits [3:0]: Endpoint number of Token 22
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device Control IN Endpoint 0 Control Register (DIEPCTL0)
 *
 * This section describes the Control IN Endpoint 0 Control register. Nonzero control 
 * endpoints use registers for endpoints 1-15.
 *

     ==============================================================
     USBC(0)_DIEPCTL0 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31>    EPEna           R/W      0x0         0x0       Endpoint Enable (EPEna)                                                       
                                                        Indicates that data is ready to be transmitted on the endpoint.
                                                        The core clears this bit before setting any of the following 
                                                        interrupts on this endpoint:
                                                        * Endpoint Disabled
                                                        * Transfer Completed
<30>    EPDis           R/W      0x0         0x0       Endpoint Disable (EPDis)                                                      
                                                        The application sets this bit to stop transmitting data on an 
                                                        endpoint, even before the transfer for that endpoint is complete. 
                                                        The application must wait for the Endpoint Disabled interrupt 
                                                        before treating the endpoint as disabled. The core clears this bit 
                                                        before setting the Endpoint Disabled Interrupt. The application 
                                                        should set this bit only if Endpoint Enable is already set for this 
                                                        endpoint.
<29:28> Reserved        RO       NS          NS        Reserved                                                                      
<27>    SNAK            WO       0x0         0x0       Set NAK (SNAK)                                                                
                                                        A write to this bit sets the NAK bit for the endpoint.
                                                        Using this bit, the application can control the transmission of 
                                                        NAK handshakes on an endpoint. The core can also set this bit 
                                                        for an endpoint after a SETUP packet is received on that 
                                                        endpoint.
<26>    CNAK            WO       0x0         0x0       Clear NAK (CNAK)                                                              
                                                        A write to this bit clears the NAK bit for the endpoint.
<25:22> TxFNum          RO       0x0         0x0       TxFIFO Number (TxFNum)                                                        
                                                        This value is always set to 0, indicating that control IN endpoint 
                                                        0 data is always written in the Non-Periodic Transmit FIFO.
<21>    Stall           R/W      0x0         0x0       STALL Handshake (Stall)                                                       
                                                        The application can only set this bit, and the core clears it, 
                                                        when a SETUP token is received for this endpoint. If a NAK bit, 
                                                        Global Non-Periodic IN NAK, or Global OUT NAK is set along 
                                                        with this bit, the STALL bit takes priority.
<20>    Reserved1       RO       NS          NS        Reserved                                                                      
<19:18> EPType          RO       0x0         0x0       Endpoint Type (EPType)                                                        
                                                        Hardcoded to 00 for control.
<17>    NAKSts          RO       0x0         0x0       NAK Status (NAKSts)                                                           
                                                        Indicates the following:
                                                        * 1'b0: The core is transmitting non-NAK handshakes based 
                                                                on the FIFO status
                                                        * 1'b1: The core is transmitting NAK handshakes on this 
                                                                endpoint.
                                                        When this bit is set, either by the application or core, the core 
                                                        stops transmitting data, even if there is data available in the 
                                                        TxFIFO. Irrespective of this bit's setting, the core always 
                                                        responds to SETUP data packets with an ACK handshake.
<16>    Reserved2       RO       NS          NS        Reserved                                                                      
<15>    USBActEP        RO       0x1         0x0       USB Active Endpoint (USBActEP)                                                
                                                        This bit is always set to 1, indicating that control endpoint 0 is 
                                                        always active in all configurations and interfaces.
<14:11> NextEp          R/W      0x0         0x0       Next Endpoint (NextEp)                                                        
                                                        Applies to non-periodic IN endpoints only.
                                                        Indicates the endpoint number to be fetched after the data for 
                                                        the current endpoint is fetched. The core can access this field, 
                                                        even when the Endpoint Enable (EPEna) bit is not set. This 
                                                        field is not valid in Slave mode.
<10:2>  Reserved3       RO       NS          NS        Reserved                                                                      
<1:0>   MPS             R/W      0x0         0x0       Maximum Packet Size (MPS)                                                     
                                                        Applies to IN and OUT endpoints.
                                                        The application must program this field with the maximum 
                                                        packet size for the current logical endpoint.
                                                        * 2'b00: 64 bytes
                                                        * 2'b01: 32 bytes
                                                        * 2'b10: 16 bytes
                                                        * 2'b11: 8 bytes
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device IN Endpoint-n Control Register (DIEPCTLn)
 *
 * The application uses the register to control the behaviour of each logical endpoint other than endpoint 0.
 *

     ==============================================================
     USBC(0)_DIEPCTL(0..4) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31>    EPEna           R/W      0x0         0x0       Endpoint Enable (EPEna)                                                       
                                                        Indicates that data is ready to be transmitted on the endpoint.
                                                        The core clears this bit before setting any of the following 
                                                        interrupts on this endpoint:
                                                        * Endpoint Disabled
                                                        * Transfer Completed

<30>    EPDis           R/W      0x0         0x0       Endpoint Disable (EPDis)                                                      
                                                        The application sets this bit to stop transmitting data on an 
                                                        endpoint, even before the transfer for that endpoint is complete. 
                                                        The application must wait for the Endpoint Disabled interrupt 
                                                        before treating the endpoint as disabled. The core clears this bit 
                                                        before setting the Endpoint Disabled Interrupt. The application 
                                                        should set this bit only if Endpoint Enable is already set for this 
                                                        endpoint.

<29>    SetD1PID        WO       0x0         0x0       For Interrupt/BULK enpoints:                                                  
                                                         Set DATA1 PID (SetD1PID)
                                                         Writing to this field sets the Endpoint Data Pid (DPID) field in
                                                         this register to DATA1.
                                                        For Isochronous endpoints:
                                                         Set Odd (micro)frame (SetOddFr)
                                                         Writing to this field sets the Even/Odd (micro)frame (EO_FrNum)
                                                         field to odd (micro)frame.

<28>    SetD0PID        WO       0x0         0x0       For Interrupt/BULK enpoints:                                                  
                                                         Writing to this field sets the Endpoint Data Pid (DPID) field in
                                                         this register to DATA0.
                                                        For Isochronous endpoints:
                                                         Set Odd (micro)frame (SetEvenFr)
                                                         Writing to this field sets the Even/Odd (micro)frame (EO_FrNum)
                                                         field to even (micro)frame.

<27>    SNAK            WO       0x0         0x0       Set NAK (SNAK)                                                                
                                                        A write to this bit sets the NAK bit for the endpoint.
                                                        Using this bit, the application can control the transmission of 
                                                        NAK handshakes on an endpoint. The core can also set this bit 
                                                        for an endpoint after a SETUP packet is received on the 
                                                        endpoint.

<26>    CNAK            WO       0x0         0x0       Clear NAK (CNAK)                                                              
                                                        A write to this bit clears the NAK bit for the endpoint.

<25:22> TxFNum          R/W      0x0         0x0       TxFIFO Number (TxFNum)                                                        
                                                        Non-periodic endpoints must set this bit to zero.  Periodic
                                                        endpoints must map this to the corresponding Periodic TxFIFO
                                                        number.
                                                        * 4'h0: Non-Periodic TxFIFO
                                                        * Others: Specified Periodic TxFIFO number

<21>    Stall           R/W      0x0         0x0       STALL Handshake (Stall)                                                       
                                                        For non-control, non-isochronous endpoints:
                                                         The application sets this bit to stall all tokens from the USB host
                                                         to this endpoint.  If a NAK bit, Global Non-Periodic IN NAK, or
                                                         Global OUT NAK is set along with this bit, the STALL bit takes
                                                         priority.  Only the application can clear this bit, never the core.
                                                        For control endpoints:
                                                         The application can only set this bit, and the core clears it, when
                                                         a SETUP token i received for this endpoint.  If a NAK bit, Global
                                                         Non-Periodic IN NAK, or Global OUT NAK is set along with this
                                                         bit, the STALL bit takes priority.  Irrespective of this bit's setting,
                                                         the core always responds to SETUP data packets with an ACK handshake.

<20>    Reserved1       RO       NS          NS        Reserved                                                                      

<19:18> EPType          R/W      0x0         0x0       Endpoint Type (EPType)                                                        
                                                        This is the transfer type supported by this logical endpoint.
                                                        * 2'b00: Control
                                                        * 2'b01: Isochronous
                                                        * 2'b10: Bulk
                                                        * 2'b11: Interrupt

<17>    NAKSts          RO       0x0         0x0       NAK Status (NAKSts)                                                           
                                                        Indicates the following:
                                                        * 1'b0: The core is transmitting non-NAK handshakes based 
                                                                on the FIFO status
                                                        * 1'b1: The core is transmitting NAK handshakes on this 
                                                                endpoint.
                                                        When either the application or the core sets this bit:
                                                        * For non-isochronous IN endpoints: The core stops
                                                          transmitting any data on an IN endpoint, even if data is
                                                          available in the TxFIFO.
                                                        * For isochronous IN endpoints: The core sends out a zero-
                                                          length data packet, even if data is available in the TxFIFO.
                                                        Irrespective of this bit's setting, the core always responds to
                                                        SETUP data packets with an ACK handshake.

<16>    DPID            RO       0x0         0x0       For interrupt/bulk IN and OUT endpoints:                                      
                                                         Endpoint Data PID (DPID)
                                                         Contains the PID of the packet to be received or transmitted on
                                                         this endpoint.  The application should program the PID of the first
                                                         packet to be received or transmitted on this endpoint, after the
                                                         endpoint is activated.  Applications use the SetD1PID and 
                                                         SetD0PID fields of this register to program either DATA0 or
                                                         DATA1 PID.
                                                         * 1'b0: DATA0
                                                         * 1'b1: DATA1
                                                        For isochronous IN and OUT endpoints:
                                                         Even/Odd (Micro)Frame (EO_FrNum)
                                                         Indicates the (micro)frame number in which the core transmits/
                                                         receives isochronous data for this endpoint.  The application
                                                         should program the even/odd (micro) frame number in which it
                                                         intends to transmit/receive isochronous data for this endpoint
                                                         using the SetEvnFr and SetOddFr fields in this register.
                                                         * 1'b0: Even (micro)frame
                                                         * 1'b1: Odd (micro)frame

<15>    USBActEP        R/W      0x1         0x0       USB Active Endpoint (USBActEP)                                                
                                                        Indicates whether this endpoint is active in the current
                                                        configuration and interface.  The core clears this bit for all
                                                        endpoints (other than EP 0) after detecting a USB reset.  After
                                                        receiving the SetConfiguration and SetInterface commands, the 
                                                        application must program endpoint registers accordingly and set
                                                        this bit.

<14:11> NextEp          R/W      0x0         0x0       Next Endpoint (NextEp)                                                        
                                                        Applies to non-periodic IN endpoints only.
                                                        Indicates the endpoint number to be fetched after the data for 
                                                        the current endpoint is fetched. The core can access this field, 
                                                        even when the Endpoint Enable (EPEna) bit is not set. This 
                                                        field is not valid in Slave mode.

<10:0>  MPS             R/W      0x0         0x0       Maximum Packet Size (MPS)                                                     
                                                        Applies to IN and OUT endpoints.
                                                        The application must program this field with the maximum 
                                                        packet size for the current logical endpoint.  This value is in
                                                        bytes.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device Control OUT Endpoint 0 Control Register (DOEPCTL0)
 *
 * This section describes the Control OUT Endpoint 0 Control register. 
 * Nonzero control endpoints use registers for endpoints 1-15.
 *

     ==============================================================
     USBC(0)_DOEPCTL0 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31>    EPEna           R/W      0x0         0x0       Endpoint Enable (EPEna)                                                       
                                                        Indicates that the application has allocated the memory to start 
                                                        receiving data from the USB.
                                                        The core clears this bit before setting any of the following 
                                                        interrupts on this endpoint:
                                                        * SETUP Phase Done
                                                        * Endpoint Disabled
                                                        * Transfer Completed
                                                        Note: In DMA mode, this bit must be set for the core to transfer 
                                                        SETUP data packets into memory.
<30>    EPDis           RO       0x0         0x0       Endpoint Disable (EPDis)                                                      
                                                        The application cannot disable control OUT endpoint 0.
<29:28> Reserved        RO       NS          NS        Reserved                                                                      
<27>    SNAK            WO       0x0         0x0       Set NAK (SNAK)                                                                
                                                        A write to this bit sets the NAK bit for the endpoint.
                                                        Using this bit, the application can control the transmission of 
                                                        NAK handshakes on an endpoint. The core can also set bit on a 
                                                        Transfer Completed interrupt, or after a SETUP is received on 
                                                        the endpoint.
<26>    CNAK            WO       0x0         0x0       Clear NAK (CNAK)                                                              
                                                        A write to this bit clears the NAK bit for the endpoint.
<25:22> Reserved1       RO       NS          NS        Reserved                                                                      
<21>    Stall           R/W      0x0         0x0       STALL Handshake (Stall)                                                       
                                                        The application can only set this bit, and the core clears it, 
                                                        when a SETUP token is received for this endpoint. If a NAK bit 
                                                        or Global OUT NAK is set along with this bit, the STALL bit 
                                                        takes priority. Irrespective of this bit's setting, the core always 
                                                        responds to SETUP data packets with an ACK handshake.
<20>    Snp             R/W      0x0         0x0       Snoop Mode (Snp)                                                              
                                                        This bit configures the endpoint to Snoop mode. In Snoop 
                                                        mode, the core does not check the correctness of OUT packets 
                                                        before transferring them to application memory.
<19:18> EPType          RO       0x0         0x0       Endpoint Type (EPType)                                                        
                                                        Hardcoded to 2'b00 for control.
<17>    NAKSts          RO       0x0         0x0       NAK Status (NAKSts)                                                           
                                                        Indicates the following:
                                                        * 1'b0: The core is transmitting non-NAK handshakes based 
                                                                on the FIFO status.
                                                        * 1'b1: The core is transmitting NAK handshakes on this 
                                                                endpoint.
                                                        When either the application or the core sets this bit, the core 
                                                        stops receiving data, even if there is space in the RxFIFO to 
                                                        accommodate the incoming packet. Irrespective of this bit's 
                                                        setting, the core always responds to SETUP data packets with 
                                                        an ACK handshake.
<16>    Reserved2       RO       NS          NS        Reserved                                                                      
<15>    USBActEP        RO       0x1         0x0       USB Active Endpoint (USBActEP)                                                
                                                        This bit is always set to 1, indicating that a control endpoint 0 is 
                                                        always active in all configurations and interfaces.
<14:2>  Reserved3       RO       NS          NS        Reserved                                                                      
<1:0>   MPS             RO       0x0         0x0       Maximum Packet Size (MPS)                                                     
                                                        The maximum packet size for control OUT endpoint 0 is the 
                                                        same as what is programmed in control IN Endpoint 0.
                                                        * 2'b00: 64 bytes
                                                        * 2'b01: 32 bytes
                                                        * 2'b10: 16 bytes
                                                        * 2'b11: 8 bytes
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device OUT Endpoint-n Control Register (DOEPCTLn)
 *
 * The application uses the register to control the behaviour of each logical endpoint other than endpoint 0.
 *

     ==============================================================
     USBC(0)_DOEPCTL(0..4) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31>    EPEna           R/W      0x0         0x0       Endpoint Enable (EPEna)                                                       
                                                        Indicates that the application has allocated the memory tp start
                                                        receiving data from the USB.
                                                        The core clears this bit before setting any of the following 
                                                        interrupts on this endpoint:
                                                        * SETUP Phase Done
                                                        * Endpoint Disabled
                                                        * Transfer Completed
                                                        For control OUT endpoints in DMA mode, this bit must be set
                                                        to be able to transfer SETUP data packets in memory.

<30>    EPDis           R/W      0x0         0x0       Endpoint Disable (EPDis)                                                      
                                                        The application sets this bit to stop transmitting data on an 
                                                        endpoint, even before the transfer for that endpoint is complete. 
                                                        The application must wait for the Endpoint Disabled interrupt 
                                                        before treating the endpoint as disabled. The core clears this bit 
                                                        before setting the Endpoint Disabled Interrupt. The application 
                                                        should set this bit only if Endpoint Enable is already set for this 
                                                        endpoint.

<29>    SetD1PID        WO       0x0         0x0       For Interrupt/BULK enpoints:                                                  
                                                         Set DATA1 PID (SetD1PID)
                                                         Writing to this field sets the Endpoint Data Pid (DPID) field in
                                                         this register to DATA1.
                                                        For Isochronous endpoints:
                                                         Set Odd (micro)frame (SetOddFr)
                                                         Writing to this field sets the Even/Odd (micro)frame (EO_FrNum)
                                                         field to odd (micro)frame.

<28>    SetD0PID        WO       0x0         0x0       For Interrupt/BULK enpoints:                                                  
                                                         Writing to this field sets the Endpoint Data Pid (DPID) field in
                                                         this register to DATA0.
                                                        For Isochronous endpoints:
                                                         Set Odd (micro)frame (SetEvenFr)
                                                         Writing to this field sets the Even/Odd (micro)frame (EO_FrNum)
                                                         field to even (micro)frame.

<27>    SNAK            WO       0x0         0x0       Set NAK (SNAK)                                                                
                                                        A write to this bit sets the NAK bit for the endpoint.
                                                        Using this bit, the application can control the transmission of 
                                                        NAK handshakes on an endpoint. The core can also set this bit 
                                                        for an endpoint after a SETUP packet is received on the 
                                                        endpoint.

<26>    CNAK            WO       0x0         0x0       Clear NAK (CNAK)                                                              
                                                        A write to this bit clears the NAK bit for the endpoint.

<25:22> Reserved1       RO       NS          NS        Reserved                                                                      

<21>    Stall           R/W      0x0         0x0       STALL Handshake (Stall)                                                       
                                                        For non-control, non-isochronous endpoints:
                                                         The application sets this bit to stall all tokens from the USB host
                                                         to this endpoint.  If a NAK bit, Global Non-Periodic IN NAK, or
                                                         Global OUT NAK is set along with this bit, the STALL bit takes
                                                         priority.  Only the application can clear this bit, never the core.
                                                        For control endpoints:
                                                         The application can only set this bit, and the core clears it, when
                                                         a SETUP token i received for this endpoint.  If a NAK bit, Global
                                                         Non-Periodic IN NAK, or Global OUT NAK is set along with this
                                                         bit, the STALL bit takes priority.  Irrespective of this bit's setting,
                                                         the core always responds to SETUP data packets with an ACK handshake.

<20>    Snp             R/W      0x0         0x0       Snoop Mode (Snp)                                                              
                                                        This bit configures the endpoint to Snoop mode.  In Snoop mode,
                                                        the core does not check the correctness of OUT packets before
                                                        transferring them to application memory.

<19:18> EPType          R/W      0x0         0x0       Endpoint Type (EPType)                                                        
                                                        This is the transfer type supported by this logical endpoint.
                                                        * 2'b00: Control
                                                        * 2'b01: Isochronous
                                                        * 2'b10: Bulk
                                                        * 2'b11: Interrupt

<17>    NAKSts          RO       0x0         0x0       NAK Status (NAKSts)                                                           
                                                        Indicates the following:
                                                        * 1'b0: The core is transmitting non-NAK handshakes based 
                                                                on the FIFO status
                                                        * 1'b1: The core is transmitting NAK handshakes on this 
                                                                endpoint.
                                                        When either the application or the core sets this bit:
                                                        * The core stops receiving any data on an OUT endpoint, even
                                                          if there is space in the RxFIFO to accomodate the incoming
                                                          packet.

<16>    DPID            RO       0x0         0x0       For interrupt/bulk IN and OUT endpoints:                                      
                                                         Endpoint Data PID (DPID)
                                                         Contains the PID of the packet to be received or transmitted on
                                                         this endpoint.  The application should program the PID of the first
                                                         packet to be received or transmitted on this endpoint, after the
                                                         endpoint is activated.  Applications use the SetD1PID and 
                                                         SetD0PID fields of this register to program either DATA0 or
                                                         DATA1 PID.
                                                         * 1'b0: DATA0
                                                         * 1'b1: DATA1
                                                        For isochronous IN and OUT endpoints:
                                                         Even/Odd (Micro)Frame (EO_FrNum)
                                                         Indicates the (micro)frame number in which the core transmits/
                                                         receives isochronous data for this endpoint.  The application
                                                         should program the even/odd (micro) frame number in which it
                                                         intends to transmit/receive isochronous data for this endpoint
                                                         using the SetEvnFr and SetOddFr fields in this register.
                                                         * 1'b0: Even (micro)frame
                                                         * 1'b1: Odd (micro)frame

<15>    USBActEP        R/W      0x1         0x0       USB Active Endpoint (USBActEP)                                                
                                                        Indicates whether this endpoint is active in the current
                                                        configuration and interface.  The core clears this bit for all
                                                        endpoints (other than EP 0) after detecting a USB reset.  After
                                                        receiving the SetConfiguration and SetInterface commands, the 
                                                        application must program endpoint registers accordingly and set
                                                        this bit.

<14:11> Reserved2       R/W      0x0         0x0       Reserved                                                                      

<10:0>  MPS             R/W      0x0         0x0       Maximum Packet Size (MPS)                                                     
                                                        Applies to IN and OUT endpoints.
                                                        The application must program this field with the maximum 
                                                        packet size for the current logical endpoint.  This value is in
                                                        bytes.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device Endpoint-n Interrupt Register (DIEPINTn)
 *
 * This register indicates the status of an endpoint with respect to 
 * USB- and AHB-related events. The application must read this register 
 * when the OUT Endpoints Interrupt bit or IN Endpoints Interrupt bit of 
 * the Core Interrupt register (GINTSTS.OEPInt or GINTSTS.IEPInt, 
 * respectively) is set. Before the application can read this register, 
 * it must first read the Device All Endpoints Interrupt (DAINT) register 
 * to get the exact endpoint number for the Device Endpoint-n Interrupt 
 * register. The application must clear the appropriate bit in this register 
 * to clear the corresponding bits in the DAINT and GINTSTS registers.
 *

     ==============================================================
     USBC(0)_DIEPINT(0..4) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:7>  Reserved        RO       NS          NS        Reserved                                                                      
<6>     INEPNakEff      RO       0x0         0x0       IN Endpoint NAK Effective (INEPNakEff)                                        
                                                        Applies to periodic IN endpoints only.
                                                        Indicates that the IN endpoint NAK bit set by the application has 
                                                        taken effect in the core. This bit can be cleared when the 
                                                        application clears the IN endpoint NAK by writing to 
                                                        DIEPCTLn.CNAK.
                                                        This interrupt indicates that the core has sampled the NAK bit 
                                                        set (either by the application or by the core).
                                                        This interrupt does not necessarily mean that a NAK handshake 
                                                        is sent on the USB. A STALL bit takes priority over a NAK bit.
<5>     INTknEPMis      R/W1C    0x0         0x0       IN Token Received with EP Mismatch (INTknEPMis)                               
                                                        Applies to non-periodic IN endpoints only. 
                                                        Indicates that the data in the top of the non-periodic TxFIFO 
                                                        belongs to an endpoint other than the one for which the IN 
                                                        token was received. This interrupt is asserted on the endpoint 
                                                        for which the IN token was received.
<4>     INTknTXFEmp     R/W1C    0x0         0x0       IN Token Received When TxFIFO is Empty (INTknTXFEmp)                          
                                                        Applies only to non-periodic IN endpoints.
                                                        Indicates that an IN token was received when the associated 
                                                        TxFIFO (periodic/non-periodic) was empty. This interrupt is 
                                                        asserted on the endpoint for which the IN token was received.
<3>     TimeOUT         R/W1C    0x0         0x0       Timeout Condition (TimeOUT)                                                   
                                                        Applies to non-isochronous IN endpoints only.
                                                        Indicates that the core has detected a timeout condition on the 
                                                        USB for the last IN token on this endpoint.
<2>     AHBErr          R/W1C    0x0         0x0       AHB Error (AHBErr)                                                            
                                                        This is generated only in Internal DMA mode when there is an 
                                                        AHB error during an AHB read/write. The application can read 
                                                        the corresponding endpoint DMA address register to get the 
                                                        error address.
<1>     EPDisbld        R/W1C    0x0         0x0       Endpoint Disabled Interrupt (EPDisbld)                                        
                                                        This bit indicates that the endpoint is disabled per the 
                                                        application's request.
<0>     XferCompl       R/W1C    0x0         0x0       Transfer Completed Interrupt (XferCompl)                                      
                                                        Indicates that the programmed transfer is complete on the AHB 
                                                        as well as on the USB, for this endpoint.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device Endpoint-n Interrupt Register (DOEPINTn)
 *
 * This register indicates the status of an endpoint with respect to USB- and AHB-related events.
 * The application must read this register when the OUT Endpoints Interrupt bit or IN Endpoints 
 * Interrupt bit of the Core Interrupt register (GINTSTS.OEPInt or GINTSTS.IEPInt, respectively) 
 * is set. Before the application can read this register, it must first read the Device All 
 * Endpoints Interrupt (DAINT) register to get the exact endpoint number for the Device Endpoint-n 
 * Interrupt register. The application must clear the appropriate bit in this register to clear the 
 * corresponding bits in the DAINT and GINTSTS registers.
 *

     ==============================================================
     USBC(0)_DOEPINT(0..4) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:5>  Reserved        RO       NS          NS        Reserved                                                                      
<4>     OUTTknEPdis     R/W1C    0x0         0x0       OUT Token Received When Endpoint Disabled (OUTTknEPdis)                       
                                                        Applies only to control OUT endpoints.
                                                        Indicates that an OUT token was received when the endpoint 
                                                        was not yet enabled. This interrupt is asserted on the endpoint 
                                                        for which the OUT token was received.
<3>     SetUp           R/W1C    0x0         0x0       SETUP Phase Done (SetUp)                                                      
                                                        Applies to control OUT endpoints only.
                                                        Indicates that the SETUP phase for the control endpoint is 
                                                        complete and no more back-to-back SETUP packets were 
                                                        received for the current control transfer. On this interrupt, the 
                                                        application can decode the received SETUP data packet.
<2>     AHBErr          R/W1C    0x0         0x0       AHB Error (AHBErr)                                                            
                                                        This is generated only in Internal DMA mode when there is an 
                                                        AHB error during an AHB read/write. The application can read 
                                                        the corresponding endpoint DMA address register to get the 
                                                        error address.
<1>     EPDisbld        R/W1C    0x0         0x0       Endpoint Disabled Interrupt (EPDisbld)                                        
                                                        This bit indicates that the endpoint is disabled per the 
                                                        application's request.
<0>     XferCompl       R/W1C    0x0         0x0       Transfer Completed Interrupt (XferCompl)                                      
                                                        Indicates that the programmed transfer is complete on the AHB 
                                                        as well as on the USB, for this endpoint.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device Endpoint 0 Transfer Size Register (DIEPTSIZ0)
 *
 * The application must modify this register before enabling endpoint 0. 
 * Once endpoint 0 is enabled using Endpoint Enable bit of the Device Control Endpoint 0 
 * Control registers (DIEPCTL0.EPEna/DOEPCTL0.EPEna), the core modifies this register. 
 * The application can only read this register once the core has cleared the Endpoint Enable bit.
 * Nonzero endpoints use the registers for endpoints 1-15.
 *

     ==============================================================
     USBC(0)_DIEPTSIZ0 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:20> Reserved        RO       NS          NS        Reserved                                                                      
<19>    PktCnt          R/W      0x0         0x0       Packet Count (PktCnt)                                                         
                                                        Indicates the total number of USB packets that constitute the 
                                                        Transfer Size amount of data for endpoint 0.
                                                        This field is decremented every time a packet (maximum size or 
                                                        short packet) is read from the TxFIFO.
<18:7>  Reserved1       RO       NS          NS        Reserved                                                                      
<6:0>   XferSize        R/W      0x0         0x0       Transfer Size (XferSize)                                                      
                                                        Indicates the transfer size in bytes for endpoint 0. The core 
                                                        interrupts the application only after it has exhausted the transfer 
                                                        size amount of data. The transfer size can be set to the 
                                                        maximum packet size of the endpoint, to be interrupted at the 
                                                        end of each packet.
                                                        The core decrements this field every time a packet from the 
                                                        external memory is written to the TxFIFO.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device Endpoint 0 Transfer Size Register (DOEPTSIZ0)
 *
 * The application must modify this register before enabling endpoint 0. 
 * Once endpoint 0 is enabled using Endpoint Enable bit of the Device Control Endpoint 0 
 * Control registers (DOEPCTL0.EPEna/DOEPCTL0.EPEna), the core modifies this register. 
 * The application can only read this register once the core has cleared the Endpoint Enable bit.
 * Nonzero endpoints use the registers for endpoints 1-15.
 *

     ==============================================================
     USBC(0)_DOEPTSIZ0 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31>    Reserved        RO       NS          NS        Reserved                                                                      
<30:29> SUPCnt          R/W      0x0         0x0       This field specifies the number of back-to-back SETUP data packets            
                                                        the endpoint can receive.
                                                        * 2'b01: 1 packet
                                                        * 2'b10: 2 packets
                                                        * 2'b11: 3 packets
<28:20> Reserved2       RO       NS          NS        Reserved                                                                      
<19>    PktCnt          R/W      0x0         0x0       Packet Count (PktCnt)                                                         
                                                        Indicates the total number of USB packets that constitute the 
                                                        Transfer Size amount of data for endpoint 0.
                                                        This field is decremented every time a packet (maximum size or 
                                                        short packet) is read from the TxFIFO.
<18:7>  Reserved1       RO       NS          NS        Reserved                                                                      
<6:0>   XferSize        R/W      0x0         0x0       Transfer Size (XferSize)                                                      
                                                        Indicates the transfer size in bytes for endpoint 0. The core 
                                                        interrupts the application only after it has exhausted the transfer 
                                                        size amount of data. The transfer size can be set to the 
                                                        maximum packet size of the endpoint, to be interrupted at the 
                                                        end of each packet.
                                                        The core decrements this field every time a packet from the 
                                                        external memory is written to the TxFIFO.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device Endpoint-n Transfer Size Register (DIEPTSIZn)
 *
 * The application must modify this register before enabling the endpoint. 
 * Once the endpoint is enabled using Endpoint Enable bit of the Device Endpoint-n Control registers (DIEPCTLn.EPEna/DOEPCTLn.EPEna), 
 * the core modifies this register. The application can only read this register once the core has cleared the Endpoint Enable bit.
 * This register is used only for endpoints other than Endpoint 0.
 *

     ==============================================================
     USBC(0)_DIEPTSIZ(0..4) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31>    Reserved        RO       NS          NS        Reserved                                                                      
<30:29> MC              R/W      0x0         0x0       Multi Count (MC)                                                              
                                                        Applies to IN endpoints only.
                                                        For periodic IN endpoints, this field indicates the number of 
                                                        packets that must be transmitted per microframe on the USB. 
                                                        The core uses this field to calculate the data PID for 
                                                        isochronous IN endpoints.
                                                        * 2'b01: 1 packet
                                                        * 2'b10: 2 packets
                                                        * 2'b11: 3 packets
                                                        For non-periodic IN endpoints, this field is valid only in Internal 
                                                        DMA mode. It specifies the number of packets the core should 
                                                        fetch for an IN endpoint before it switches to the endpoint 
                                                        pointed to by the Next Endpoint field of the Device Endpoint-n
                                                        Control register (DIEPCTLn.NextEp)
<28:19>  PktCnt         R/W      0x0         0x0       Packet Count (PktCnt)                                                         
                                                        Indicates the total number of USB packets that constitute the 
                                                        Transfer Size amount of data for this endpoint. 
                                                        IN Endpoints: This field is decremented every time a packet 
                                                        (maximum size or short packet) is read from the TxFIFO.
<18:0>   XferSize       R/W      0x0         0x0       Transfer Size (XferSize)                                                      
                                                        This field contains the transfer size in bytes for the current 
                                                        endpoint. 
                                                        The core only interrupts the application after it has exhausted 
                                                        the transfer size amount of data. The transfer size can be set to 
                                                        the maximum packet size of the endpoint, to be interrupted at 
                                                        the end of each packet.
                                                        IN Endpoints: The core decrements this field every time a 
                                                        packet from the external memory is written to the TxFIFO.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Device Endpoint-n Transfer Size Register (DOEPTSIZn)
 *
 * The application must modify this register before enabling the endpoint. 
 * Once the endpoint is enabled using Endpoint Enable bit of the Device Endpoint-n Control 
 * registers (DOEPCTLn.EPEna/DOEPCTLn.EPEna), the core modifies this register. The application 
 * can only read this register once the core has cleared the Endpoint Enable bit.
 * This register is used only for endpoints other than Endpoint 0.
 *

     ==============================================================
     USBC(0)_DOEPTSIZ(0..4) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31>    Reserved        RO       NS          NS        Reserved                                                                      
<30:29> MC              R/W      0x0         0x0       Multi Count (MC)                                                              
                                                        Received Data PID (RxDPID) 
                                                        Applies to isochronous OUT endpoints only.
                                                        This is the data PID received in the last packet for this endpoint.
                                                        2'b00: DATA0
                                                        2'b01: DATA1
                                                        2'b10: DATA2
                                                        2'b11: MDATA
                                                        SETUP Packet Count (SUPCnt)
                                                        Applies to control OUT Endpoints only.
                                                        This field specifies the number of back-to-back SETUP data 
                                                        packets the endpoint can receive.
                                                        2'b01: 1 packet
                                                        2'b10: 2 packets
                                                        2'b11: 3 packets
<28:19>  PktCnt         R/W      0x0         0x0       Packet Count (PktCnt)                                                         
                                                        Indicates the total number of USB packets that constitute the 
                                                        Transfer Size amount of data for this endpoint. 
                                                        OUT Endpoints: This field is decremented every time a 
                                                        packet (maximum size or short packet) is written to the 
                                                        RxFIFO.
<18:0>   XferSize       R/W      0x0         0x0       Transfer Size (XferSize)                                                      
                                                        This field contains the transfer size in bytes for the current 
                                                        endpoint. 
                                                        The core only interrupts the application after it has exhausted 
                                                        the transfer size amount of data. The transfer size can be set to 
                                                        the maximum packet size of the endpoint, to be interrupted at 
                                                        the end of each packet.
                                                        OUT Endpoints: The core decrements this field every time a 
                                                        packet is read from the RxFIFO and written to the external 
                                                        memory.
----------------------------------------------------------------------------------------------------
===

 *
 *                  Power and Clock Gating Control Register (PCGCCTL)
 *
 * The application can use this register to control the core's power-down and clock gating features. 
 *

     ==============================================================
     USBC(0)_PCGCCTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:5>  Reserved        RO       NS          NS        Reserved                                                                      
<4>     PhySuspended    RO       0x0         0x0       PHY Suspended. (PhySuspended)                                                 
                                                        Indicates that the PHY has been suspended. After the 
                                                        application sets the Stop Pclk bit (bit 0), this bit is updated once 
                                                        the PHY is suspended. 
                                                        Since the UTMI+ PHY suspend is controlled through a port, the 
                                                        UTMI+ PHY is suspended immediately after Stop Pclk is set. 
                                                        However, the ULPI PHY takes a few clocks to suspend, 
                                                        because the suspend information is conveyed through the ULPI 
                                                        protocol to the ULPI PHY.
<3>     RstPdwnModule   R/W      0x0         0x0       Reset Power-Down Modules (RstPdwnModule)                                      
                                                        This bit is valid only in Partial Power-Down mode. The 
                                                        application sets this bit when the power is turned off. The 
                                                        application clears this bit after the power is turned on and the 
                                                        PHY clock is up.
<2>     PwrClmp         R/W      0x0         0x0       Power Clamp (PwrClmp)                                                         
                                                        This bit is only valid in Partial Power-Down mode. The 
                                                        application sets this bit before the power is turned off to clamp 
                                                        the signals between the power-on modules and the power-off 
                                                        modules. The application clears the bit to disable the clamping 
                                                        before the power is turned on.
<1>     GateHclk        R/W      0x0         0x0       Gate Hclk (GateHclk)                                                          
                                                        The application sets this bit to gate hclk to modules other than 
                                                        the AHB Slave and Master and wakeup logic when the USB is 
                                                        suspended or the session is not valid. The application clears 
                                                        this bit when the USB is resumed or a new session starts.
<0>     StopPclk        R/W      0x0         0x0       Stop Pclk (StopPclk)                                                          
                                                        The application sets this bit to stop the PHY clock (phy_clk) 
                                                        when the USB is suspended, the session is not valid, or the 
                                                        device is disconnected. The application clears this bit when the 
                                                        USB is resumed or a new session starts.
----------------------------------------------------------------------------------------------------
===

 *
 *                  NPTX Data Fifo (NPTXDFIFO)
 *
 * A slave mode application uses this register to access the Tx FIFO for channel n.
 *

     ==============================================================
     USBC(0)_NPTXDFIFO(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  Data             R/W      0x0         0x0       Reserved                                                                      
----------------------------------------------------------------------------------------------------
===



 *
 *                  USBN_INT_SUM = USBN's Interrupt Summary Register
 *
 * Contains the diffrent interrupt summary bits of the USBN.
 *

     ==============================================================
     USBN(0)_INT_SUM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     PR_PO_E  R/W1C     0           0        PP  Request Fifo Popped When Empty.                    
<1>     PR_PU_F  R/W1C     0           0        PP  Request Fifo Pushed When Full.                     
<2>     NR_PO_E  R/W1C     0           0        NPI Request Fifo Popped When Empty.                    
<3>     NR_PU_F  R/W1C     0           0        NPI Request Fifo Pushed When Full.                     
<4>     LR_PO_E  R/W1C     0           0        L2C Request Fifo Popped When Empty.                    
<5>     LR_PU_F  R/W1C     0           0        L2C Request Fifo Pushed When Full.                     
<6>     PT_PO_E  R/W1C     0           0        PP  Trasaction Fifo Popped When Full.                  
<7>     PT_PU_F  R/W1C     0           0        PP  Trasaction Fifo Pushed When Full.                  
<8>     NT_PO_E  R/W1C     0           0        NPI Trasaction Fifo Popped When Full.                  
<9>     NT_PU_F  R/W1C     0           0        NPI Trasaction Fifo Pushed When Full.                  
<10>    LT_PO_E  R/W1C     0           0        L2C Trasaction Fifo Popped When Full.                  
<11>    LT_PU_F  R/W1C     0           0        L2C Trasaction Fifo Pushed When Full.                  
<12>    DCRED_E  R/W1C     0           0        Data Credit Fifo Pushed When Full.                     
<13>    DCRED_F  R/W1C     0           0        Data CreditFifo Pushed When Full.                      
<14>    L2C_S_E  R/W1C     NS          0        L2C Credit Count Subtracted When Empty.                
<15>    L2C_A_F  R/W1C     NS          0        L2C Credit Count Added When Full.                      
<16>    LT_FI_E  R/W1C     0           0        L2C Request Fifo Pushed When Full.                     
<17>    LT_FI_F  R/W1C     0           0        L2C Request Fifo Pushed When Full.                     
<18>    RG_FI_E  R/W1C     0           0        Register Request Fifo Pushed When Full.                
<19>    RG_FI_F  R/W1C     0           0        Register Request Fifo Pushed When Full.                
<20>    RQ_Q2_F  R/W1C     0           0        Request Queue-2 Fifo Pushed When Full.                 
<21>    RQ_Q2_E  R/W1C     0           0        Request Queue-2 Fifo Pushed When Full.                 
<22>    RQ_Q3_F  R/W1C     0           0        Request Queue-3 Fifo Pushed When Full.                 
<23>    RQ_Q3_E  R/W1C     0           0        Request Queue-3 Fifo Pushed When Full.                 
<24>    UOD_PE   R/W1C     NS          0        UOD Fifo Pop Empty.                                    
<25>    UOD_PF   R/W1C     NS          0        UOD Fifo Push Full.                                    
<26>    RSVD26   R/W1C     NS          0        Reserved 26.                                           
<27>    RSVD27   R/W1C     NS          0        Reserved 27.                                           
<28>    RSVD28   R/W1C     NS          0        Reserved 28.                                           
<29>    RSVD29   R/W1C     NS          0        Reserved 29.                                           
<30>    RSVD30   R/W1C     NS          0        Reserved 30.                                           
<31>    RSVD31   R/W1C     NS          0        Reserved 31.                                           
<32>    LTL_F_PE R/W1C     0           0        L2C Transfer Length Fifo Pop Empty.                    
<33>    LTL_F_PF R/W1C     0           0        L2C Transfer Length Fifo Push Full.                    
<34>    ND4O_RPE R/W1C     NS          0        NCB DMA Out Request Fifo Pop Empty.                    
<35>    ND4O_RPF R/W1C     NS          0        NCB DMA Out Request Fifo Push Full.                    
<36>    ND4O_DPE R/W1C     NS          0        NCB DMA Out Data Fifo Pop Empty.                       
<37>    ND4O_DPF R/W1C     NS          0        NCB DMA Out Data Fifo Push Full.                       
<63:38> NS       RAZ       NS          NS       Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_INT_ENB = USBN's Interrupt Enable
 *
 * The USBN's interrupt enable register.
 *

     ==============================================================
     USBN(0)_INT_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     PR_PO_E  R/W      0           0         When set (1) and bit 0 of the USBN_INT_SUM              
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<1>     PR_PU_F  R/W      0           0         When set (1) and bit 1 of the USBN_INT_SUM              
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<2>     NR_PO_E  R/W      0           0         When set (1) and bit 2 of the USBN_INT_SUM              
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<3>     NR_PU_F  R/W      0           0         When set (1) and bit 3 of the USBN_INT_SUM              
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.
<4>     LR_PO_E  R/W      0           0         When set (1) and bit 4 of the USBN_INT_SUM              
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<5>     LR_PU_F  R/W      0           0         When set (1) and bit 5 of the USBN_INT_SUM              
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<6>     PT_PO_E  R/W      0           0         When set (1) and bit 6 of the USBN_INT_SUM              
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<7>     PT_PU_F  R/W      0           0         When set (1) and bit 7 of the USBN_INT_SUM              
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<8>     NT_PO_E  R/W      0           0         When set (1) and bit 8 of the USBN_INT_SUM              
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<9>     NT_PU_F  R/W      0           0         When set (1) and bit 9 of the USBN_INT_SUM              
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<10>    LT_PO_E  R/W      0           0         When set (1) and bit 10 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<11>    LT_PU_F  R/W      0           0         When set (1) and bit 11 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<12>    DCRED_E  R/W      0           0         When set (1) and bit 12 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<13>    DCRED_F  R/W      0           0         When set (1) and bit 13 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<14>    L2C_S_E  R/W      0           0         When set (1) and bit 14 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<15>    L2C_A_F  R/W      0           0         When set (1) and bit 15 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<16>    L2_FI_E  R/W      0           0         When set (1) and bit 16 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<17>    L2_FI_F  R/W      0           0         When set (1) and bit 17 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<18>    RG_FI_E  R/W      0           0         When set (1) and bit 18 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<19>    RG_FI_F  R/W      0           0         When set (1) and bit 19 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<20>    RQ_Q2_F  R/W      0           0         When set (1) and bit 20 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<21>    RQ_Q2_E  R/W      0           0         When set (1) and bit 21 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<22>    RQ_Q3_F  R/W      0           0         When set (1) and bit 22 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<23>    RQ_Q3_E  R/W      0           0         When set (1) and bit 23 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<24>    UOD_PE   R/W      0           0         When set (1) and bit 24 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<25>    UOD_PF   R/W      0           0         When set (1) and bit 25 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<26>    RSVD26   R/W      0           0         When set (1) and bit 26 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<27>    RSVD27   R/W      0           0         When set (1) and bit 27 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<28>    RSVD28   R/W      0           0         When set (1) and bit 28 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<29>    RSVD29   R/W      0           0         When set (1) and bit 29 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<30>    RSVD30   R/W      0           0         When set (1) and bit 30 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<31>    RSVD31   R/W      0           0         When set (1) and bit 31 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<32>    LTL_F_PE R/W      0           0         When set (1) and bit 32 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<33>    LTL_F_PF R/W      0           0         When set (1) and bit 33 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<34>    ND4O_RPE R/W      0           0         When set (1) and bit 34 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<35>    ND4O_RPF R/W      0           0         When set (1) and bit 35 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<36>    ND4O_DPE R/W      0           0         When set (1) and bit 36 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<37>    ND4O_DPF R/W      0           0         When set (1) and bit 37 of the USBN_INT_SUM             
                                                 register is asserted the USBN will assert an                                        
                                                 interrupt.                                                                         
<63:38> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_CLK_CTL = USBN's Clock Control
 *
 * This register is used to control the frequency of the hclk and the hreset and phy_rst signals.
 *

     ==============================================================
     USBN(0)_CLK_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<2:0>   DIVIDE   R/W      0x4         0x0       The frequency of 'hclk' used by the USB subsystem      
                                                 is the eclk frequency divided by the value of 
                                                 (DIVIDE2 + 1) * (DIVIDE + 1), also see the field 
                                                 DIVIDE2 of this register.
                                                 The hclk frequency should be less than 125Mhz. 
                                                 After writing a value to this field the SW should 
                                                 read the field for the value written. 
                                                 The ENABLE field of this register should not be set 
                                                 until AFTER this field is set and then read.
<3>     HRST     R/W      0x0         0x1       When this field is '0' the reset associated with        
                                                 the hclk functioanlity in the USB Subsystem is
                                                 held in reset.This bit should not be set to '1'
                                                 until 12ms after phy_clk is stable. Under normal
                                                 operation, once this bit is set to '1' it should
                                                 not be set to '0'.
<4>     PRST     R/W      0x0         0x1       When this field is '0' the reset associated with        
                                                 the phy_clk functionality in the USB Subsystem is
                                                 help in reset. This bit should not be set to '1'
                                                 until the time it takes 6 clocks (hclk or phy_clk,
                                                 whichever is slower) has passed. Under normal
                                                 operation once this bit is set to '1' it should not
                                                 be set to '0'.
<5>     ENABLE   R/W      0x1         0x1       When '1' allows the generation of the hclk. When        
                                                 '0' the hclk will not be generated. SEE DIVIDE
                                                 field of this register.
<6>     POR      R/W      0x1         0x0       Power On Reset for the PHY.                             
                                                 Resets all the PHYS registers and state machines.
<7>     S_BIST   R/W      0x0         0x1       Starts bist on the hclk memories, during the '0'        
                                                 to '1' transition.
<9:8>   SD_MODE  R/W      0x0         0x0       Scaledown mode for the USBC. Control timing events      
                                                 in the USBC, for normal operation this must be '0'.
<10>    CDIV_BYP R/W      0x0         0x0       Used to enable the bypass input to the USB_CLK_DIV.     
<12:11> P_C_SEL  R/W      0x2         0x0       Phy clock speed select.                                 
                                                 Selects the reference clock / crystal frequency.
                                                 '11': Reserved
                                                 '10': 48 MHz (reserved when a crystal is used)
                                                 '01': 24 MHz (reserved when a crystal is used)
                                                 '00': 12 MHz
                                                 The value of this field must be set while POR is
                                                 active.
                                                 NOTE: if a crystal is used as a reference clock,
                                                 this field must be set to 12 MHz.
<13>    P_COM_ON R/W      0x1         0x1       '0' Force USB-PHY XO Bias, Bandgap and PLL to           
                                                     remain powered in Suspend Mode.
                                                 '1' The USB-PHY XO Bias, Bandgap and PLL are
                                                     powered down in suspend mode.
                                                 The value of this field must be set while POR is
                                                 active.
<15:14> P_RTYPE  R/W      0x0         0x0       PHY reference clock type                                
                                                 '0' The USB-PHY uses a 12MHz crystal as a clock
                                                     source at the USB_XO and USB_XI pins
                                                 '1' Reserved
                                                 '2' The USB_PHY uses 12/24/48MHz 2.5V board clock
                                                     at the USB_XO pin. USB_XI should be tied to
                                                     ground in this case.
                                                 '3' Reserved
                                                 (bit 14 was P_XENBN on 3xxx)
                                                 (bit 15 was P_RCLK on 3xxx)
<16>    NS       RAZ      NS          NS        Reserved (was P_X_ON)                                   
<17>    HCLK_RST R/W      0x1         0x1       When this field is '0' the HCLK-DIVIDER used to         
                                                 generate the hclk in the USB Subsystem is held
                                                 in reset. This bit must be set to '0' before
                                                 changing the value os DIVIDE in this register.
                                                 The reset to the HCLK_DIVIDERis also asserted
                                                 when core reset is asserted.
<19:18> DIVIDE2  R/W      0x0         0x1       The 'hclk' used by the USB subsystem is derived         
                                                 from the eclk.
                                                 Also see the field DIVIDE. DIVIDE2<1> must currently 
                                                 be zero because it is not implemented, so the maximum
                                                 ratio of eclk/hclk is currently 16.
                                                 The actual divide number for hclk is:
                                                 (DIVIDE2 + 1) * (DIVIDE + 1)
<63:20> NS       RAZ      NS          NS        Reserved                                                
----------------------------------------------------------------------------------------------------
===
 *
 *                  USBN_USBP_CTL_STATUS = USBP Control And Status Register
 *
 * Contains general control and status information for the USBN block.
 *

     ==============================================================
     USBN(0)_USBP_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     ATE_RESET          R/W      0x0         0         Reset input from automatic test equipment.            
                                                           This is a test signal. When the USB Core is
                                                           powered up (not in Susned Mode), an automatic
                                                           tester can use this to disable phy_clock and
                                                           free_clk, then re-eanable them with an aligned
                                                           phase.
                                                           '1': The phy_clk and free_clk outputs are
                                                           disabled. "0": The phy_clock and free_clk outputs
                                                           are available within a specific period after the
                                                           de-assertion.
<8:1>   TDATA_IN           R/W      0x0         0         Internal Testing Register Input Data and Select       
                                                           This is a test bus. Data is present on [3:0],
                                                           and its corresponding select (enable) is present
                                                           on bits [7:4].
<12:9>  TADDR_IN           R/W      0x0         0         Mode Address for Test Interface.                      
                                                           Specifies the register address for writing to or
                                                           reading from the PHY test interface register.
<13>    TDATA_SEL          R/W      0x0         0         Test Data Out Select.                                 
                                                           '1' test_data_out[3:0] (PHY) register contents
                                                           are output. '0' internaly generated signals are
                                                           output.
<14>    BIST_ENB           R/W      0x0         0         Built-In Self Test Enable.                            
                                                           Used to activate BIST in the PHY.
<15>    VTEST_ENB          R/W      0x0         0         Analog Test Pin Enable.                               
                                                           '1' The PHY's analog_test pin is enabled for the
                                                           input and output of applicable analog test signals.
                                                           '0' THe analog_test pin is disabled.
<16>    LOOP_ENB           R/W      0x0         0         PHY Loopback Test Enable.                             
                                                           '1': During data transmission the receive is
                                                           enabled.
                                                           '0': During data transmission the receive is
                                                           disabled.
                                                           Must be '0' for normal operation.
<17>    TX_BS_EN           R/W      0x0         0         Transmit Bit Stuffing on [7:0].                       
                                                           Enables or disables bit stuffing on data[7:0]
                                                           when bit-stuffing is enabled.
<18>    TX_BS_ENH          R/W      0x0         0         Transmit Bit Stuffing on [15:8].                      
                                                           Enables or disables bit stuffing on data[15:8]
                                                           when bit-stuffing is enabled.
<22:19> SPARES0            R/W      0x0         0x0       Spares signals for future use.                        
                                                           further as compared to the 01 setting.
<23>    HST_MODE           R/W      0x0         0         When '0' the USB is acting as HOST, when '1'          
                                                           USB is acting as device. This field needs to be
                                                           set while the USB is in reset.
<24>    DM_PULLD           R/W      0x1         1         PHY DM_PULLDOWN input to the USB-PHY.                 
                                                           This signal enables the pull-down resistance on
                                                           the D- line. '1' pull down-resistance is connected
                                                           to D-. '0' pull down resistance is not connected
                                                           to D-. When an A/B device is acting as a host
                                                           (downstream-facing port), dp_pulldown and
                                                           dm_pulldown are enabled. This must not toggle
                                                           during normal opeartion.                                                  
<25>    DP_PULLD           R/W      0x1         1         PHY DP_PULLDOWN input to the USB-PHY.                 
                                                           This signal enables the pull-down resistance on
                                                           the D+ line. '1' pull down-resistance is connected
                                                           to D+/ '0' pull down resistance is not connected
                                                           to D+. When an A/B device is acting as a host
                                                           (downstream-facing port), dp_pulldown and
                                                           dm_pulldown are enabled. This must not toggle
                                                           during normal opeartion.
<26>    TCLK               R/W      0x0         0         PHY Test Clock, used to load TDATA_IN to the USBP.    
<27>    USBP_BIST          R/W      0x1         1         PHY, This is cleared '0' to run BIST on the USBP.     
<28>    USBC_END           R/W      0x0         0         Bigendian input to the USB Core. This should be       
                                                           set to '0' for operation.
<29>    DMA_BMODE          R/W      0x0         0         When set to 1 the L2C DMA address will be updated     
                                                           with byte-counts between packets. When set to 0
                                                           the L2C DMA address is incremented to the next
                                                           4-byte aligned address after adding byte-count.
<30>    TXPREEMPHASISTUNE  R/W      0x0         0x0       HS Transmitter Pre-Emphasis Enable                    
<31>    SPARES1            R/W      0x0         0         Spares signals for future use.                        
<35:32> TDATA_OUT          RO       NS          NS        PHY Test Data Out.                                    
                                                           Presents either internaly generated signals or
                                                           test register contents, based upon the value of
                                                           test_data_out_sel.
<36>    BIST_ERR           RO       0x0         0         PHY Bist Error.                                       
                                                           Indicates an internal error was detected during
                                                           the BIST sequence.
<37>    BIST_DONE          RO       0x0         0         PHY Bist Done.                                        
                                                           Asserted at the end of the PHY BIST sequence.
<38>    HSBIST             R/W      0x0         0         High-Speed BIST Enable.                               
<39>    FSBIST             R/W      0x0         0         Full-Speed BIST Enable.                               
<40>    LSBIST             R/W      0x0         0         Low-Speed BIST Enable.                                
<41>    DRVVBUS            R/W      0x0         0         Drive VBUS                                            
<42>    PORTRESET          R/W      0x0         0         Per_Port Reset                                        
<43>    OTGDISABLE         R/W      0x1         1         OTG Block Disable                                     
<46:44> OTGTUNE            R/W      0x2         0x2       VBUS Valid Threshold Adjustment                       
<49:47> COMPDISTUNE        R/W      0x2         0x2       Disconnect Threshold Adjustment                       
<52:50> SQRXTUNE           R/W      0x3         0x3       Squelch Threshold Adjustment                          
<54:53> TXHSXVTUNE         R/W      0x0         0x0       Transmitter High-Speed Crossover Adjustment           
<58:55> TXFSLSTUNE         R/W      0x3         0x3       FS/LS Source Impedence Adjustment                     
<62:59> TXVREFTUNE         R/W      0x7         0x7       HS DC Voltage Level Adjustment                        
<63>    TXRISETUNE         R/W      0x0         0x0       HS Transmitter Rise/Fall Time Adjustment              
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_BIST_STATUS = USBN's Control and Status
 *
 * Contain general control bits and status information for the USBN.
 *

     ==============================================================
     USBN(0)_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     NOF_BIS  RO       0x0         0         Bist status for Outbound Memory.                       
<1>     NIF_BIS  RO       0x0         0         Bist status for Inbound Memory.                        
<2>     USBC_BIS RO       0x0         0         Bist status USBC FIFO Memory.                          
<3>     N2UF_BIS RO       0x0         0         Bist status N2U  FIFO Memory.                          
<4>     E2HC_BIS RO       0x0         0         Bist status E2H CTL FIFO Memory.                       
<5>     U2NF_BIS RO       0x0         0         Bist status U2N FIFO Memory.                           
<6>     U2NC_BIS RO       0x0         0         Bist status U2N CTL FIFO Memory.                       
<63:7>  NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_CTL_STATUS = USBN's Control And Status Register
 *
 * Contains general control and status information for the USBN block.
 *

     ==============================================================
     USBN(0)_CTL_STATUS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<1:0>   L2C_EMOD R/W      0x1         1         Endian format for data from/to the L2C.                
                                                 IN:   A-B-C-D-E-F-G-H
                                                 OUT0: A-B-C-D-E-F-G-H
                                                 OUT1: H-G-F-E-D-C-B-A
                                                 OUT2: D-C-B-A-H-G-F-E
                                                 OUT3: E-F-G-H-A-B-C-D
<2>     INV_A2   R/W      0x0         0         When '1' causes the address[2] driven on the AHB       
                                                 for USB-CORE FIFO access to be inverted. Also data
                                                 writen to and read from the AHB will have it byte
                                                 order swapped. If the orginal order was A-B-C-D the
                                                 new byte order will be D-C-B-A.
<3>     DMA_TEST R/W      0x0         0         When '1' sets the DMA engine into Test-Mode.           
                                                 For normal operation this bit should be '0'.
<4>     DMA_STT  R/W      0x0         0         When '1' sets the DMA engine to use STT operations.    
<5>     DMA_0PAG R/W      0x0         0         When '1' sets the DMA engine will set the zero-Page    
                                                 bit in the L2C store operation to the IOB.

<63:6>  NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_DMA_TEST = USBN's DMA TestRegister
 *
 * This register can cause the external DMA engine to the USB-Core to make transfers from/to L2C/USB-FIFOs
 *

     ==============================================================
     USBN(0)_DMA_TEST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>   BURST    R/W      0x0         0         DMA Burst Size.                                        
<8:4>   CHANNEL  R/W      0x0         0         DMA Channel/Enpoint.                                   
<19:9>  COUNT    R/W      0x0         0         DMA Request Count.                                     
<37:20> F_ADDR   R/W      0x0         0x0       The address to read from in the Data-Fifo.             
<38>    REQ      R/W1C    0x0         0         DMA Request. Writing a 1 to this register              
                                                 will cause a DMA request as specified in the other
                                                 fields of this register to take place. This field
                                                 will always read as '0'.
<39>    DONE     R/W1C    0x0         0         This field is set when a DMA completes. Writing a      
                                                 '1' to this field clears this bit.
<63:40> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_DMA0_INB_CHN0 = USBN's Inbound DMA for USB0 Channel0
 *
 * Contains the starting address for use when USB0 writes to L2C via Channel0.
 * Writing of this register sets the base address.
 *

     ==============================================================
     USBN(0)_DMA0_INB_CHN0 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>  ADDR     R/W      0x0         NS        Base address for DMA Write to L2C.                     
<63:36> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_DMA0_INB_CHN1 = USBN's Inbound DMA for USB0 Channel1
 *
 * Contains the starting address for use when USB0 writes to L2C via Channel1.
 * Writing of this register sets the base address.
 *

     ==============================================================
     USBN(0)_DMA0_INB_CHN1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>  ADDR     R/W      0x0         NS        Base address for DMA Write to L2C.                     
<63:36> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_DMA0_INB_CHN2 = USBN's Inbound DMA for USB0 Channel2
 *
 * Contains the starting address for use when USB0 writes to L2C via Channel2.
 * Writing of this register sets the base address.
 *

     ==============================================================
     USBN(0)_DMA0_INB_CHN2 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>  ADDR     R/W      0x0         NS        Base address for DMA Write to L2C.                     
<63:36> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_DMA0_INB_CHN3 = USBN's Inbound DMA for USB0 Channel3
 *
 * Contains the starting address for use when USB0 writes to L2C via Channel3.
 * Writing of this register sets the base address.
 *

     ==============================================================
     USBN(0)_DMA0_INB_CHN3 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>  ADDR     R/W      0x0         NS        Base address for DMA Write to L2C.                     
<63:36> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_DMA0_INB_CHN4 = USBN's Inbound DMA for USB0 Channel4
 *
 * Contains the starting address for use when USB0 writes to L2C via Channel4.
 * Writing of this register sets the base address.
 *

     ==============================================================
     USBN(0)_DMA0_INB_CHN4 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>  ADDR     R/W      0x0         NS        Base address for DMA Write to L2C.                     
<63:36> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_DMA0_INB_CHN5 = USBN's Inbound DMA for USB0 Channel5
 *
 * Contains the starting address for use when USB0 writes to L2C via Channel5.
 * Writing of this register sets the base address.
 *

     ==============================================================
     USBN(0)_DMA0_INB_CHN5 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>  ADDR     R/W      0x0         NS        Base address for DMA Write to L2C.                     
<63:36> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_DMA0_INB_CHN6 = USBN's Inbound DMA for USB0 Channel6
 *
 * Contains the starting address for use when USB0 writes to L2C via Channel6.
 * Writing of this register sets the base address.
 *

     ==============================================================
     USBN(0)_DMA0_INB_CHN6 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>  ADDR     R/W      0x0         NS        Base address for DMA Write to L2C.                     
<63:36> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_DMA0_INB_CHN7 = USBN's Inbound DMA for USB0 Channel7
 *
 * Contains the starting address for use when USB0 writes to L2C via Channel7.
 * Writing of this register sets the base address.
 *

     ==============================================================
     USBN(0)_DMA0_INB_CHN7 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>  ADDR     R/W      0x0         NS        Base address for DMA Write to L2C.                     
<63:36> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_DMA0_OUTB_CHN0 = USBN's Outbound DMA for USB0 Channel0
 *
 * Contains the starting address for use when USB0 reads from L2C via Channel0.
 * Writing of this register sets the base address.
 *

     ==============================================================
     USBN(0)_DMA0_OUTB_CHN0 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>  ADDR     R/W      0x0         NS        Base address for DMA Read from L2C.                    
<63:36> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_DMA0_OUTB_CHN1 = USBN's Outbound DMA for USB0 Channel1
 *
 * Contains the starting address for use when USB0 reads from L2C via Channel1.
 * Writing of this register sets the base address.
 *

     ==============================================================
     USBN(0)_DMA0_OUTB_CHN1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>  ADDR     R/W      0x0         NS        Base address for DMA Read from L2C.                    
<63:36> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_DMA0_OUTB_CHN2 = USBN's Outbound DMA for USB0 Channel2
 *
 * Contains the starting address for use when USB0 reads from L2C via Channel2.
 * Writing of this register sets the base address.
 *

     ==============================================================
     USBN(0)_DMA0_OUTB_CHN2 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>  ADDR     R/W      0x0         NS        Base address for DMA Read from L2C.                    
<63:36> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_DMA0_OUTB_CHN3 = USBN's Outbound DMA for USB0 Channel3
 *
 * Contains the starting address for use when USB0 reads from L2C via Channel3.
 * Writing of this register sets the base address.
 *

     ==============================================================
     USBN(0)_DMA0_OUTB_CHN3 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>  ADDR     R/W      0x0         NS        Base address for DMA Read from L2C.                    
<63:36> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_DMA0_OUTB_CHN4 = USBN's Outbound DMA for USB0 Channel4
 *
 * Contains the starting address for use when USB0 reads from L2C via Channel4.
 * Writing of this register sets the base address.
 *

     ==============================================================
     USBN(0)_DMA0_OUTB_CHN4 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>  ADDR     R/W      0x0         NS        Base address for DMA Read from L2C.                    
<63:36> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_DMA0_OUTB_CHN5 = USBN's Outbound DMA for USB0 Channel5
 *
 * Contains the starting address for use when USB0 reads from L2C via Channel5.
 * Writing of this register sets the base address.
 *

     ==============================================================
     USBN(0)_DMA0_OUTB_CHN5 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>  ADDR     R/W      0x0         NS        Base address for DMA Read from L2C.                    
<63:36> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_DMA0_OUTB_CHN6 = USBN's Outbound DMA for USB0 Channel6
 *
 * Contains the starting address for use when USB0 reads from L2C via Channel6.
 * Writing of this register sets the base address.
 *

     ==============================================================
     USBN(0)_DMA0_OUTB_CHN6 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>  ADDR     R/W      0x0         NS        Base address for DMA Read from L2C.                    
<63:36> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  USBN_DMA0_OUTB_CHN7 = USBN's Outbound DMA for USB0 Channel7
 *
 * Contains the starting address for use when USB0 reads from L2C via Channel7.
 * Writing of this register sets the base address.
 *

     ==============================================================
     USBN(0)_DMA0_OUTB_CHN7 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<35:0>  ADDR     R/W      0x0         NS        Base address for DMA Read from L2C.                    
<63:36> NS       RAZ      NS          NS        Reserved                                               
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     ZIP_CMD_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:2>  NS       RAZ       NS          NS       RESERVED                                               
<1>     FORCECLK R/W       0           0        Force zip_ctl__clock_on_b == 1 when set                
<0>     RESET    RAZ       0           0        Reset oneshot pulse for zip core                       
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     ZIP_CMD_BUF Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:58> NS       RAZ       NS          NS       RESERVED                                               
<57:49> DWB      R/W       0           0        Number of DontWriteBacks                               
<48:46> POOL     R/W       0           0        Free list used to free command buffer segments         
<45:33> SIZE     R/W       0           0        Number of uint64s per command buffer segment           
<32:0>  PTR      R/W       0           0        Initial command buffer pointer[39:7] (128B-aligned)    

Notes:
 Sets the command buffer parameters
 The size of the command buffer segments is measured in uint64s.  The pool specifies (1 of 8 free
 lists to be used when freeing command buffer segments.  The PTR field is overwritten with the next
 pointer each time that the command buffer segment is exhausted.
 When quiescent (i.e. outstanding doorbell count is 0), it is safe to rewrite
 this register to effectively reset the command buffer state machine.  New commands will then be
 read from the newly specified command buffer pointer.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     ZIP_CMD_BIST_RESULT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:31> NS       RAZ       NS          NS       RESERVED                                               
<30:4>  ZIP_CORE RO        X           0        BiST result of the ZIP_CORE memories                   
<3:0>   ZIP_CTL  RO        X           0        BiST result of the ZIP_CTL  memories                   

Notes:
 Access to the internal BiST results
 Each bit is the BiST result of an individual memory (per bit, 0=pass and 1=fail).
----------------------------------------------------------------------------------------------------
===

 

     ==============================================================
     ZIP_ERROR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  NS       RAZ      NS          NS        RESERVED                                               
<0>     DOORBELL R/W1C    0           0         A doorbell count has overflowed                        

Notes:
  Note that this CSR is present only in chip revisions beginning with pass2.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     ZIP_INT_MASK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>  NS       RAZ      NS          NS        RESERVED                                               
<0>     DOORBELL R/W      0           0         Bit mask corresponding to ZIP_ERROR[0] above           

Notes:
 Note that this CSR is present only in chip revisions beginning with pass2.
 When a mask bit is set, the corresponding interrupt is enabled.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ZIP_DEBUG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:14> NS       RAZ      NS          NS        RESERVED                                               
<13:0>  ASSERTS  RO       0           0         FIFO assertion checks                                  

Notes:
 Note that this CSR is present only in chip revisions beginning with pass2.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ZIP_CONSTANTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48> NS       RAZ      NS          NS        RESERVED                                               
<47:32> DEPTH    RO       31744       31744     Maximum search depth for compression                   
<31:20> ONFSIZE  RO       512         512       Output near full threshhold in bytes                   
<19:8>  CTXSIZE  RO       1536        1536      Context size in bytes                                  
<7:1>   NS       RAZ      NS          NS        unused                                                 
<0>     DISABLED RO       0           0         1=zip unit isdisabled, 0=zip unit not disabled         

Notes:
 Note that this CSR is present only in chip revisions beginning with pass2.
----------------------------------------------------------------------------------------------------
===

CSR                            Address            CSR Type     Address            CSR_Type
------------------------------------------------------------------------------------------
AGL_GMX_BAD_REG                0x00011800E0000518  RSL        
AGL_GMX_BIST                   0x00011800E0000400  RSL        
AGL_GMX_DRV_CTL                0x00011800E00007F0  RSL        
AGL_GMX_INF_MODE               0x00011800E00007F8  RSL        
AGL_GMX_PRT0_CFG               0x00011800E0000010  RSL        
AGL_GMX_RX0_ADR_CAM0           0x00011800E0000180  RSL        
AGL_GMX_RX0_ADR_CAM1           0x00011800E0000188  RSL        
AGL_GMX_RX0_ADR_CAM2           0x00011800E0000190  RSL        
AGL_GMX_RX0_ADR_CAM3           0x00011800E0000198  RSL        
AGL_GMX_RX0_ADR_CAM4           0x00011800E00001A0  RSL        
AGL_GMX_RX0_ADR_CAM5           0x00011800E00001A8  RSL        
AGL_GMX_RX0_ADR_CAM_EN         0x00011800E0000108  RSL        
AGL_GMX_RX0_ADR_CTL            0x00011800E0000100  RSL        
AGL_GMX_RX0_DECISION           0x00011800E0000040  RSL        
AGL_GMX_RX0_FRM_CHK            0x00011800E0000020  RSL        
AGL_GMX_RX0_FRM_CTL            0x00011800E0000018  RSL        
AGL_GMX_RX0_FRM_MAX            0x00011800E0000030  RSL        
AGL_GMX_RX0_FRM_MIN            0x00011800E0000028  RSL        
AGL_GMX_RX0_IFG                0x00011800E0000058  RSL        
AGL_GMX_RX0_INT_EN             0x00011800E0000008  RSL        
AGL_GMX_RX0_INT_REG            0x00011800E0000000  RSL        
AGL_GMX_RX0_JABBER             0x00011800E0000038  RSL        
AGL_GMX_RX0_PAUSE_DROP_TIME    0x00011800E0000068  RSL        
AGL_GMX_RX0_STATS_CTL          0x00011800E0000050  RSL        
AGL_GMX_RX0_STATS_OCTS         0x00011800E0000088  RSL        
AGL_GMX_RX0_STATS_OCTS_CTL     0x00011800E0000098  RSL        
AGL_GMX_RX0_STATS_OCTS_DMAC    0x00011800E00000A8  RSL        
AGL_GMX_RX0_STATS_OCTS_DRP     0x00011800E00000B8  RSL        
AGL_GMX_RX0_STATS_PKTS         0x00011800E0000080  RSL        
AGL_GMX_RX0_STATS_PKTS_BAD     0x00011800E00000C0  RSL        
AGL_GMX_RX0_STATS_PKTS_CTL     0x00011800E0000090  RSL        
AGL_GMX_RX0_STATS_PKTS_DMAC    0x00011800E00000A0  RSL        
AGL_GMX_RX0_STATS_PKTS_DRP     0x00011800E00000B0  RSL        
AGL_GMX_RX0_UDD_SKP            0x00011800E0000048  RSL        
AGL_GMX_RX_BP_DROP0            0x00011800E0000420  RSL        
AGL_GMX_RX_BP_OFF0             0x00011800E0000460  RSL        
AGL_GMX_RX_BP_ON0              0x00011800E0000440  RSL        
AGL_GMX_RX_PRT_INFO            0x00011800E00004E8  RSL        
AGL_GMX_RX_TX_STATUS           0x00011800E00007E8  RSL        
AGL_GMX_SMAC0                  0x00011800E0000230  RSL        
AGL_GMX_STAT_BP                0x00011800E0000520  RSL        
AGL_GMX_TX0_APPEND             0x00011800E0000218  RSL        
AGL_GMX_TX0_CTL                0x00011800E0000270  RSL        
AGL_GMX_TX0_MIN_PKT            0x00011800E0000240  RSL        
AGL_GMX_TX0_PAUSE_PKT_INTERVAL 0x00011800E0000248  RSL        
AGL_GMX_TX0_PAUSE_PKT_TIME     0x00011800E0000238  RSL        
AGL_GMX_TX0_PAUSE_TOGO         0x00011800E0000258  RSL        
AGL_GMX_TX0_PAUSE_ZERO         0x00011800E0000260  RSL        
AGL_GMX_TX0_SOFT_PAUSE         0x00011800E0000250  RSL        
AGL_GMX_TX0_STAT0              0x00011800E0000280  RSL        
AGL_GMX_TX0_STAT1              0x00011800E0000288  RSL        
AGL_GMX_TX0_STAT2              0x00011800E0000290  RSL        
AGL_GMX_TX0_STAT3              0x00011800E0000298  RSL        
AGL_GMX_TX0_STAT4              0x00011800E00002A0  RSL        
AGL_GMX_TX0_STAT5              0x00011800E00002A8  RSL        
AGL_GMX_TX0_STAT6              0x00011800E00002B0  RSL        
AGL_GMX_TX0_STAT7              0x00011800E00002B8  RSL        
AGL_GMX_TX0_STAT8              0x00011800E00002C0  RSL        
AGL_GMX_TX0_STAT9              0x00011800E00002C8  RSL        
AGL_GMX_TX0_STATS_CTL          0x00011800E0000268  RSL        
AGL_GMX_TX0_THRESH             0x00011800E0000210  RSL        
AGL_GMX_TX_BP                  0x00011800E00004D0  RSL        
AGL_GMX_TX_COL_ATTEMPT         0x00011800E0000498  RSL        
AGL_GMX_TX_IFG                 0x00011800E0000488  RSL        
AGL_GMX_TX_INT_EN              0x00011800E0000508  RSL        
AGL_GMX_TX_INT_REG             0x00011800E0000500  RSL        
AGL_GMX_TX_JAM                 0x00011800E0000490  RSL        
AGL_GMX_TX_LFSR                0x00011800E00004F8  RSL        
AGL_GMX_TX_OVR_BP              0x00011800E00004C8  RSL        
AGL_GMX_TX_PAUSE_PKT_DMAC      0x00011800E00004A0  RSL        
AGL_GMX_TX_PAUSE_PKT_TYPE      0x00011800E00004A8  RSL        
CIU_BIST                       0x0001070000000730  NCB        
CIU_DINT                       0x0001070000000720  NCB        
CIU_FUSE                       0x0001070000000728  NCB        
CIU_GSTOP                      0x0001070000000710  NCB        
CIU_INT0_EN0                   0x0001070000000200  NCB        
CIU_INT0_EN1                   0x0001070000000208  NCB        
CIU_INT0_EN4_0                 0x0001070000000C80  NCB        
CIU_INT0_EN4_1                 0x0001070000000C88  NCB        
CIU_INT0_SUM0                  0x0001070000000000  NCB        
CIU_INT0_SUM4                  0x0001070000000C00  NCB        
CIU_INT1_EN0                   0x0001070000000210  NCB        
CIU_INT1_EN1                   0x0001070000000218  NCB        
CIU_INT1_EN4_0                 0x0001070000000C90  NCB        
CIU_INT1_EN4_1                 0x0001070000000C98  NCB        
CIU_INT1_SUM0                  0x0001070000000008  NCB        
CIU_INT1_SUM4                  0x0001070000000C08  NCB        
CIU_INT2_EN0                   0x0001070000000220  NCB        
CIU_INT2_EN1                   0x0001070000000228  NCB        
CIU_INT2_EN4_0                 0x0001070000000CA0  NCB        
CIU_INT2_EN4_1                 0x0001070000000CA8  NCB        
CIU_INT2_SUM0                  0x0001070000000010  NCB        
CIU_INT2_SUM4                  0x0001070000000C10  NCB        
CIU_INT3_EN0                   0x0001070000000230  NCB        
CIU_INT3_EN1                   0x0001070000000238  NCB        
CIU_INT3_EN4_0                 0x0001070000000CB0  NCB        
CIU_INT3_EN4_1                 0x0001070000000CB8  NCB        
CIU_INT3_SUM0                  0x0001070000000018  NCB        
CIU_INT3_SUM4                  0x0001070000000C18  NCB        
CIU_INT4_EN0                   0x0001070000000240  NCB        
CIU_INT4_EN1                   0x0001070000000248  NCB        
CIU_INT4_EN4_0                 0x0001070000000CC0  NCB        
CIU_INT4_EN4_1                 0x0001070000000CC8  NCB        
CIU_INT4_SUM0                  0x0001070000000020  NCB        
CIU_INT4_SUM4                  0x0001070000000C20  NCB        
CIU_INT5_EN0                   0x0001070000000250  NCB        
CIU_INT5_EN1                   0x0001070000000258  NCB        
CIU_INT5_EN4_0                 0x0001070000000CD0  NCB        
CIU_INT5_EN4_1                 0x0001070000000CD8  NCB        
CIU_INT5_SUM0                  0x0001070000000028  NCB        
CIU_INT5_SUM4                  0x0001070000000C28  NCB        
CIU_INT6_EN0                   0x0001070000000260  NCB        
CIU_INT6_EN1                   0x0001070000000268  NCB        
CIU_INT6_EN4_0                 0x0001070000000CE0  NCB        
CIU_INT6_EN4_1                 0x0001070000000CE8  NCB        
CIU_INT6_SUM0                  0x0001070000000030  NCB        
CIU_INT6_SUM4                  0x0001070000000C30  NCB        
CIU_INT7_EN0                   0x0001070000000270  NCB        
CIU_INT7_EN1                   0x0001070000000278  NCB        
CIU_INT7_EN4_0                 0x0001070000000CF0  NCB        
CIU_INT7_EN4_1                 0x0001070000000CF8  NCB        
CIU_INT7_SUM0                  0x0001070000000038  NCB        
CIU_INT7_SUM4                  0x0001070000000C38  NCB        
CIU_INT8_EN0                   0x0001070000000280  NCB        
CIU_INT8_EN1                   0x0001070000000288  NCB        
CIU_INT8_EN4_0                 0x0001070000000D00  NCB        
CIU_INT8_EN4_1                 0x0001070000000D08  NCB        
CIU_INT8_SUM0                  0x0001070000000040  NCB        
CIU_INT8_SUM4                  0x0001070000000C40  NCB        
CIU_INT9_EN0                   0x0001070000000290  NCB        
CIU_INT9_EN1                   0x0001070000000298  NCB        
CIU_INT9_EN4_0                 0x0001070000000D10  NCB        
CIU_INT9_EN4_1                 0x0001070000000D18  NCB        
CIU_INT9_SUM0                  0x0001070000000048  NCB        
CIU_INT9_SUM4                  0x0001070000000C48  NCB        
CIU_INT10_EN0                  0x00010700000002A0  NCB        
CIU_INT10_EN1                  0x00010700000002A8  NCB        
CIU_INT10_EN4_0                0x0001070000000D20  NCB        
CIU_INT10_EN4_1                0x0001070000000D28  NCB        
CIU_INT10_SUM0                 0x0001070000000050  NCB        
CIU_INT10_SUM4                 0x0001070000000C50  NCB        
CIU_INT11_EN0                  0x00010700000002B0  NCB        
CIU_INT11_EN1                  0x00010700000002B8  NCB        
CIU_INT11_EN4_0                0x0001070000000D30  NCB        
CIU_INT11_EN4_1                0x0001070000000D38  NCB        
CIU_INT11_SUM0                 0x0001070000000058  NCB        
CIU_INT11_SUM4                 0x0001070000000C58  NCB        
CIU_INT12_EN0                  0x00010700000002C0  NCB        
CIU_INT12_EN1                  0x00010700000002C8  NCB        
CIU_INT12_SUM0                 0x0001070000000060  NCB        
CIU_INT13_EN0                  0x00010700000002D0  NCB        
CIU_INT13_EN1                  0x00010700000002D8  NCB        
CIU_INT13_SUM0                 0x0001070000000068  NCB        
CIU_INT14_EN0                  0x00010700000002E0  NCB        
CIU_INT14_EN1                  0x00010700000002E8  NCB        
CIU_INT14_SUM0                 0x0001070000000070  NCB        
CIU_INT15_EN0                  0x00010700000002F0  NCB        
CIU_INT15_EN1                  0x00010700000002F8  NCB        
CIU_INT15_SUM0                 0x0001070000000078  NCB        
CIU_INT16_EN0                  0x0001070000000300  NCB        
CIU_INT16_EN1                  0x0001070000000308  NCB        
CIU_INT16_SUM0                 0x0001070000000080  NCB        
CIU_INT17_EN0                  0x0001070000000310  NCB        
CIU_INT17_EN1                  0x0001070000000318  NCB        
CIU_INT17_SUM0                 0x0001070000000088  NCB        
CIU_INT18_EN0                  0x0001070000000320  NCB        
CIU_INT18_EN1                  0x0001070000000328  NCB        
CIU_INT18_SUM0                 0x0001070000000090  NCB        
CIU_INT19_EN0                  0x0001070000000330  NCB        
CIU_INT19_EN1                  0x0001070000000338  NCB        
CIU_INT19_SUM0                 0x0001070000000098  NCB        
CIU_INT20_EN0                  0x0001070000000340  NCB        
CIU_INT20_EN1                  0x0001070000000348  NCB        
CIU_INT20_SUM0                 0x00010700000000A0  NCB        
CIU_INT21_EN0                  0x0001070000000350  NCB        
CIU_INT21_EN1                  0x0001070000000358  NCB        
CIU_INT21_SUM0                 0x00010700000000A8  NCB        
CIU_INT22_EN0                  0x0001070000000360  NCB        
CIU_INT22_EN1                  0x0001070000000368  NCB        
CIU_INT22_SUM0                 0x00010700000000B0  NCB        
CIU_INT23_EN0                  0x0001070000000370  NCB        
CIU_INT23_EN1                  0x0001070000000378  NCB        
CIU_INT23_SUM0                 0x00010700000000B8  NCB        
CIU_INT32_EN0                  0x0001070000000400  NCB        
CIU_INT32_EN1                  0x0001070000000408  NCB        
CIU_INT32_SUM0                 0x0001070000000100  NCB        
CIU_INT_SUM1                   0x0001070000000108  NCB        
CIU_MBOX_CLR0                  0x0001070000000680  NCB        
CIU_MBOX_CLR1                  0x0001070000000688  NCB        
CIU_MBOX_CLR2                  0x0001070000000690  NCB        
CIU_MBOX_CLR3                  0x0001070000000698  NCB        
CIU_MBOX_CLR4                  0x00010700000006A0  NCB        
CIU_MBOX_CLR5                  0x00010700000006A8  NCB        
CIU_MBOX_CLR6                  0x00010700000006B0  NCB        
CIU_MBOX_CLR7                  0x00010700000006B8  NCB        
CIU_MBOX_CLR8                  0x00010700000006C0  NCB        
CIU_MBOX_CLR9                  0x00010700000006C8  NCB        
CIU_MBOX_CLR10                 0x00010700000006D0  NCB        
CIU_MBOX_CLR11                 0x00010700000006D8  NCB        
CIU_MBOX_SET0                  0x0001070000000600  NCB        
CIU_MBOX_SET1                  0x0001070000000608  NCB        
CIU_MBOX_SET2                  0x0001070000000610  NCB        
CIU_MBOX_SET3                  0x0001070000000618  NCB        
CIU_MBOX_SET4                  0x0001070000000620  NCB        
CIU_MBOX_SET5                  0x0001070000000628  NCB        
CIU_MBOX_SET6                  0x0001070000000630  NCB        
CIU_MBOX_SET7                  0x0001070000000638  NCB        
CIU_MBOX_SET8                  0x0001070000000640  NCB        
CIU_MBOX_SET9                  0x0001070000000648  NCB        
CIU_MBOX_SET10                 0x0001070000000650  NCB        
CIU_MBOX_SET11                 0x0001070000000658  NCB        
CIU_NMI                        0x0001070000000718  NCB        
CIU_PCI_INTA                   0x0001070000000750  NCB        
CIU_PP_DBG                     0x0001070000000708  NCB        
CIU_PP_POKE0                   0x0001070000000580  NCB        
CIU_PP_POKE1                   0x0001070000000588  NCB        
CIU_PP_POKE2                   0x0001070000000590  NCB        
CIU_PP_POKE3                   0x0001070000000598  NCB        
CIU_PP_POKE4                   0x00010700000005A0  NCB        
CIU_PP_POKE5                   0x00010700000005A8  NCB        
CIU_PP_POKE6                   0x00010700000005B0  NCB        
CIU_PP_POKE7                   0x00010700000005B8  NCB        
CIU_PP_POKE8                   0x00010700000005C0  NCB        
CIU_PP_POKE9                   0x00010700000005C8  NCB        
CIU_PP_POKE10                  0x00010700000005D0  NCB        
CIU_PP_POKE11                  0x00010700000005D8  NCB        
CIU_PP_RST                     0x0001070000000700  NCB        
CIU_QLM_DCOK                   0x0001070000000760  NCB        
CIU_QLM_JTGC                   0x0001070000000768  NCB        
CIU_QLM_JTGD                   0x0001070000000770  NCB        
CIU_SOFT_BIST                  0x0001070000000738  NCB        
CIU_SOFT_PRST                  0x0001070000000748  NCB        
CIU_SOFT_PRST1                 0x0001070000000758  NCB        
CIU_SOFT_RST                   0x0001070000000740  NCB        
CIU_TIM0                       0x0001070000000480  NCB        
CIU_TIM1                       0x0001070000000488  NCB        
CIU_TIM2                       0x0001070000000490  NCB        
CIU_TIM3                       0x0001070000000498  NCB        
CIU_WDOG0                      0x0001070000000500  NCB        
CIU_WDOG1                      0x0001070000000508  NCB        
CIU_WDOG2                      0x0001070000000510  NCB        
CIU_WDOG3                      0x0001070000000518  NCB        
CIU_WDOG4                      0x0001070000000520  NCB        
CIU_WDOG5                      0x0001070000000528  NCB        
CIU_WDOG6                      0x0001070000000530  NCB        
CIU_WDOG7                      0x0001070000000538  NCB        
CIU_WDOG8                      0x0001070000000540  NCB        
CIU_WDOG9                      0x0001070000000548  NCB        
CIU_WDOG10                     0x0001070000000550  NCB        
CIU_WDOG11                     0x0001070000000558  NCB        
FPA_BIST_STATUS                0x00011800280000E8  RSL        
FPA_CTL_STATUS                 0x0001180028000050  RSL        
FPA_FPF1_SIZE                  0x0001180028000060  RSL        
FPA_FPF2_SIZE                  0x0001180028000068  RSL        
FPA_FPF3_SIZE                  0x0001180028000070  RSL        
FPA_FPF4_SIZE                  0x0001180028000078  RSL        
FPA_FPF5_SIZE                  0x0001180028000080  RSL        
FPA_FPF6_SIZE                  0x0001180028000088  RSL        
FPA_FPF7_SIZE                  0x0001180028000090  RSL        
FPA_FPF0_MARKS                 0x0001180028000000  RSL        
FPA_FPF0_SIZE                  0x0001180028000058  RSL        
FPA_FPF1_MARKS                 0x0001180028000008  RSL        
FPA_FPF2_MARKS                 0x0001180028000010  RSL        
FPA_FPF3_MARKS                 0x0001180028000018  RSL        
FPA_FPF4_MARKS                 0x0001180028000020  RSL        
FPA_FPF5_MARKS                 0x0001180028000028  RSL        
FPA_FPF6_MARKS                 0x0001180028000030  RSL        
FPA_FPF7_MARKS                 0x0001180028000038  RSL        
FPA_INT_ENB                    0x0001180028000048  RSL        
FPA_INT_SUM                    0x0001180028000040  RSL        
FPA_QUE0_AVAILABLE             0x0001180028000098  RSL        
FPA_QUE1_AVAILABLE             0x00011800280000A0  RSL        
FPA_QUE2_AVAILABLE             0x00011800280000A8  RSL        
FPA_QUE3_AVAILABLE             0x00011800280000B0  RSL        
FPA_QUE4_AVAILABLE             0x00011800280000B8  RSL        
FPA_QUE5_AVAILABLE             0x00011800280000C0  RSL        
FPA_QUE6_AVAILABLE             0x00011800280000C8  RSL        
FPA_QUE7_AVAILABLE             0x00011800280000D0  RSL        
FPA_QUE0_PAGE_INDEX            0x00011800280000F0  RSL        
FPA_QUE1_PAGE_INDEX            0x00011800280000F8  RSL        
FPA_QUE2_PAGE_INDEX            0x0001180028000100  RSL        
FPA_QUE3_PAGE_INDEX            0x0001180028000108  RSL        
FPA_QUE4_PAGE_INDEX            0x0001180028000110  RSL        
FPA_QUE5_PAGE_INDEX            0x0001180028000118  RSL        
FPA_QUE6_PAGE_INDEX            0x0001180028000120  RSL        
FPA_QUE7_PAGE_INDEX            0x0001180028000128  RSL        
FPA_QUE_ACT                    0x0001180028000138  RSL        
FPA_QUE_EXP                    0x0001180028000130  RSL        
FPA_WART_CTL                   0x00011800280000D8  RSL        
FPA_WART_STATUS                0x00011800280000E0  RSL        
GMX0_BAD_REG                   0x0001180008000518  RSL        
GMX0_BIST                      0x0001180008000400  RSL        
GMX0_CLK_EN                    0x00011800080007F0  RSL        
GMX0_INF_MODE                  0x00011800080007F8  RSL        
GMX0_NXA_ADR                   0x0001180008000510  RSL        
GMX0_PRT000_CFG                0x0001180008000010  RSL        
GMX0_PRT001_CFG                0x0001180008000810  RSL        
GMX0_PRT002_CFG                0x0001180008001010  RSL        
GMX0_PRT003_CFG                0x0001180008001810  RSL        
GMX0_RX000_ADR_CAM0            0x0001180008000180  RSL        
GMX0_RX000_ADR_CAM1            0x0001180008000188  RSL        
GMX0_RX000_ADR_CAM2            0x0001180008000190  RSL        
GMX0_RX000_ADR_CAM3            0x0001180008000198  RSL        
GMX0_RX000_ADR_CAM4            0x00011800080001A0  RSL        
GMX0_RX000_ADR_CAM5            0x00011800080001A8  RSL        
GMX0_RX000_ADR_CAM_EN          0x0001180008000108  RSL        
GMX0_RX000_ADR_CTL             0x0001180008000100  RSL        
GMX0_RX000_DECISION            0x0001180008000040  RSL        
GMX0_RX000_FRM_CHK             0x0001180008000020  RSL        
GMX0_RX000_FRM_CTL             0x0001180008000018  RSL        
GMX0_RX000_IFG                 0x0001180008000058  RSL        
GMX0_RX000_INT_EN              0x0001180008000008  RSL        
GMX0_RX000_INT_REG             0x0001180008000000  RSL        
GMX0_RX000_JABBER              0x0001180008000038  RSL        
GMX0_RX000_PAUSE_DROP_TIME     0x0001180008000068  RSL        
GMX0_RX000_STATS_CTL           0x0001180008000050  RSL        
GMX0_RX000_STATS_OCTS          0x0001180008000088  RSL        
GMX0_RX000_STATS_OCTS_CTL      0x0001180008000098  RSL        
GMX0_RX000_STATS_OCTS_DMAC     0x00011800080000A8  RSL        
GMX0_RX000_STATS_OCTS_DRP      0x00011800080000B8  RSL        
GMX0_RX000_STATS_PKTS          0x0001180008000080  RSL        
GMX0_RX000_STATS_PKTS_BAD      0x00011800080000C0  RSL        
GMX0_RX000_STATS_PKTS_CTL      0x0001180008000090  RSL        
GMX0_RX000_STATS_PKTS_DMAC     0x00011800080000A0  RSL        
GMX0_RX000_STATS_PKTS_DRP      0x00011800080000B0  RSL        
GMX0_RX000_UDD_SKP             0x0001180008000048  RSL        
GMX0_RX001_ADR_CAM0            0x0001180008000980  RSL        
GMX0_RX001_ADR_CAM1            0x0001180008000988  RSL        
GMX0_RX001_ADR_CAM2            0x0001180008000990  RSL        
GMX0_RX001_ADR_CAM3            0x0001180008000998  RSL        
GMX0_RX001_ADR_CAM4            0x00011800080009A0  RSL        
GMX0_RX001_ADR_CAM5            0x00011800080009A8  RSL        
GMX0_RX001_ADR_CAM_EN          0x0001180008000908  RSL        
GMX0_RX001_ADR_CTL             0x0001180008000900  RSL        
GMX0_RX001_DECISION            0x0001180008000840  RSL        
GMX0_RX001_FRM_CHK             0x0001180008000820  RSL        
GMX0_RX001_FRM_CTL             0x0001180008000818  RSL        
GMX0_RX001_IFG                 0x0001180008000858  RSL        
GMX0_RX001_INT_EN              0x0001180008000808  RSL        
GMX0_RX001_INT_REG             0x0001180008000800  RSL        
GMX0_RX001_JABBER              0x0001180008000838  RSL        
GMX0_RX001_PAUSE_DROP_TIME     0x0001180008000868  RSL        
GMX0_RX001_STATS_CTL           0x0001180008000850  RSL        
GMX0_RX001_STATS_OCTS          0x0001180008000888  RSL        
GMX0_RX001_STATS_OCTS_CTL      0x0001180008000898  RSL        
GMX0_RX001_STATS_OCTS_DMAC     0x00011800080008A8  RSL        
GMX0_RX001_STATS_OCTS_DRP      0x00011800080008B8  RSL        
GMX0_RX001_STATS_PKTS          0x0001180008000880  RSL        
GMX0_RX001_STATS_PKTS_BAD      0x00011800080008C0  RSL        
GMX0_RX001_STATS_PKTS_CTL      0x0001180008000890  RSL        
GMX0_RX001_STATS_PKTS_DMAC     0x00011800080008A0  RSL        
GMX0_RX001_STATS_PKTS_DRP      0x00011800080008B0  RSL        
GMX0_RX001_UDD_SKP             0x0001180008000848  RSL        
GMX0_RX002_ADR_CAM0            0x0001180008001180  RSL        
GMX0_RX002_ADR_CAM1            0x0001180008001188  RSL        
GMX0_RX002_ADR_CAM2            0x0001180008001190  RSL        
GMX0_RX002_ADR_CAM3            0x0001180008001198  RSL        
GMX0_RX002_ADR_CAM4            0x00011800080011A0  RSL        
GMX0_RX002_ADR_CAM5            0x00011800080011A8  RSL        
GMX0_RX002_ADR_CAM_EN          0x0001180008001108  RSL        
GMX0_RX002_ADR_CTL             0x0001180008001100  RSL        
GMX0_RX002_DECISION            0x0001180008001040  RSL        
GMX0_RX002_FRM_CHK             0x0001180008001020  RSL        
GMX0_RX002_FRM_CTL             0x0001180008001018  RSL        
GMX0_RX002_IFG                 0x0001180008001058  RSL        
GMX0_RX002_INT_EN              0x0001180008001008  RSL        
GMX0_RX002_INT_REG             0x0001180008001000  RSL        
GMX0_RX002_JABBER              0x0001180008001038  RSL        
GMX0_RX002_PAUSE_DROP_TIME     0x0001180008001068  RSL        
GMX0_RX002_STATS_CTL           0x0001180008001050  RSL        
GMX0_RX002_STATS_OCTS          0x0001180008001088  RSL        
GMX0_RX002_STATS_OCTS_CTL      0x0001180008001098  RSL        
GMX0_RX002_STATS_OCTS_DMAC     0x00011800080010A8  RSL        
GMX0_RX002_STATS_OCTS_DRP      0x00011800080010B8  RSL        
GMX0_RX002_STATS_PKTS          0x0001180008001080  RSL        
GMX0_RX002_STATS_PKTS_BAD      0x00011800080010C0  RSL        
GMX0_RX002_STATS_PKTS_CTL      0x0001180008001090  RSL        
GMX0_RX002_STATS_PKTS_DMAC     0x00011800080010A0  RSL        
GMX0_RX002_STATS_PKTS_DRP      0x00011800080010B0  RSL        
GMX0_RX002_UDD_SKP             0x0001180008001048  RSL        
GMX0_RX003_ADR_CAM0            0x0001180008001980  RSL        
GMX0_RX003_ADR_CAM1            0x0001180008001988  RSL        
GMX0_RX003_ADR_CAM2            0x0001180008001990  RSL        
GMX0_RX003_ADR_CAM3            0x0001180008001998  RSL        
GMX0_RX003_ADR_CAM4            0x00011800080019A0  RSL        
GMX0_RX003_ADR_CAM5            0x00011800080019A8  RSL        
GMX0_RX003_ADR_CAM_EN          0x0001180008001908  RSL        
GMX0_RX003_ADR_CTL             0x0001180008001900  RSL        
GMX0_RX003_DECISION            0x0001180008001840  RSL        
GMX0_RX003_FRM_CHK             0x0001180008001820  RSL        
GMX0_RX003_FRM_CTL             0x0001180008001818  RSL        
GMX0_RX003_IFG                 0x0001180008001858  RSL        
GMX0_RX003_INT_EN              0x0001180008001808  RSL        
GMX0_RX003_INT_REG             0x0001180008001800  RSL        
GMX0_RX003_JABBER              0x0001180008001838  RSL        
GMX0_RX003_PAUSE_DROP_TIME     0x0001180008001868  RSL        
GMX0_RX003_STATS_CTL           0x0001180008001850  RSL        
GMX0_RX003_STATS_OCTS          0x0001180008001888  RSL        
GMX0_RX003_STATS_OCTS_CTL      0x0001180008001898  RSL        
GMX0_RX003_STATS_OCTS_DMAC     0x00011800080018A8  RSL        
GMX0_RX003_STATS_OCTS_DRP      0x00011800080018B8  RSL        
GMX0_RX003_STATS_PKTS          0x0001180008001880  RSL        
GMX0_RX003_STATS_PKTS_BAD      0x00011800080018C0  RSL        
GMX0_RX003_STATS_PKTS_CTL      0x0001180008001890  RSL        
GMX0_RX003_STATS_PKTS_DMAC     0x00011800080018A0  RSL        
GMX0_RX003_STATS_PKTS_DRP      0x00011800080018B0  RSL        
GMX0_RX003_UDD_SKP             0x0001180008001848  RSL        
GMX0_RX_BP_DROP000             0x0001180008000420  RSL        
GMX0_RX_BP_DROP001             0x0001180008000428  RSL        
GMX0_RX_BP_DROP002             0x0001180008000430  RSL        
GMX0_RX_BP_DROP003             0x0001180008000438  RSL        
GMX0_RX_BP_OFF000              0x0001180008000460  RSL        
GMX0_RX_BP_OFF001              0x0001180008000468  RSL        
GMX0_RX_BP_OFF002              0x0001180008000470  RSL        
GMX0_RX_BP_OFF003              0x0001180008000478  RSL        
GMX0_RX_BP_ON000               0x0001180008000440  RSL        
GMX0_RX_BP_ON001               0x0001180008000448  RSL        
GMX0_RX_BP_ON002               0x0001180008000450  RSL        
GMX0_RX_BP_ON003               0x0001180008000458  RSL        
GMX0_RX_PRTS                   0x0001180008000410  RSL        
GMX0_RX_PRT_INFO               0x00011800080004E8  RSL        
GMX0_RX_XAUI_BAD_COL           0x0001180008000538  RSL        
GMX0_RX_XAUI_CTL               0x0001180008000530  RSL        
GMX0_SMAC000                   0x0001180008000230  RSL        
GMX0_SMAC001                   0x0001180008000A30  RSL        
GMX0_SMAC002                   0x0001180008001230  RSL        
GMX0_SMAC003                   0x0001180008001A30  RSL        
GMX0_STAT_BP                   0x0001180008000520  RSL        
GMX0_TX000_APPEND              0x0001180008000218  RSL        
GMX0_TX000_BURST               0x0001180008000228  RSL        
GMX0_TX000_CTL                 0x0001180008000270  RSL        
GMX0_TX000_MIN_PKT             0x0001180008000240  RSL        
GMX0_TX000_PAUSE_PKT_INTERVAL  0x0001180008000248  RSL        
GMX0_TX000_PAUSE_PKT_TIME      0x0001180008000238  RSL        
GMX0_TX000_PAUSE_TOGO          0x0001180008000258  RSL        
GMX0_TX000_PAUSE_ZERO          0x0001180008000260  RSL        
GMX0_TX000_SGMII_CTL           0x0001180008000300  RSL        
GMX0_TX000_SLOT                0x0001180008000220  RSL        
GMX0_TX000_SOFT_PAUSE          0x0001180008000250  RSL        
GMX0_TX000_STAT0               0x0001180008000280  RSL        
GMX0_TX000_STAT1               0x0001180008000288  RSL        
GMX0_TX000_STAT2               0x0001180008000290  RSL        
GMX0_TX000_STAT3               0x0001180008000298  RSL        
GMX0_TX000_STAT4               0x00011800080002A0  RSL        
GMX0_TX000_STAT5               0x00011800080002A8  RSL        
GMX0_TX000_STAT6               0x00011800080002B0  RSL        
GMX0_TX000_STAT7               0x00011800080002B8  RSL        
GMX0_TX000_STAT8               0x00011800080002C0  RSL        
GMX0_TX000_STAT9               0x00011800080002C8  RSL        
GMX0_TX000_STATS_CTL           0x0001180008000268  RSL        
GMX0_TX000_THRESH              0x0001180008000210  RSL        
GMX0_TX001_APPEND              0x0001180008000A18  RSL        
GMX0_TX001_BURST               0x0001180008000A28  RSL        
GMX0_TX001_CTL                 0x0001180008000A70  RSL        
GMX0_TX001_MIN_PKT             0x0001180008000A40  RSL        
GMX0_TX001_PAUSE_PKT_INTERVAL  0x0001180008000A48  RSL        
GMX0_TX001_PAUSE_PKT_TIME      0x0001180008000A38  RSL        
GMX0_TX001_PAUSE_TOGO          0x0001180008000A58  RSL        
GMX0_TX001_PAUSE_ZERO          0x0001180008000A60  RSL        
GMX0_TX001_SGMII_CTL           0x0001180008000B00  RSL        
GMX0_TX001_SLOT                0x0001180008000A20  RSL        
GMX0_TX001_SOFT_PAUSE          0x0001180008000A50  RSL        
GMX0_TX001_STAT0               0x0001180008000A80  RSL        
GMX0_TX001_STAT1               0x0001180008000A88  RSL        
GMX0_TX001_STAT2               0x0001180008000A90  RSL        
GMX0_TX001_STAT3               0x0001180008000A98  RSL        
GMX0_TX001_STAT4               0x0001180008000AA0  RSL        
GMX0_TX001_STAT5               0x0001180008000AA8  RSL        
GMX0_TX001_STAT6               0x0001180008000AB0  RSL        
GMX0_TX001_STAT7               0x0001180008000AB8  RSL        
GMX0_TX001_STAT8               0x0001180008000AC0  RSL        
GMX0_TX001_STAT9               0x0001180008000AC8  RSL        
GMX0_TX001_STATS_CTL           0x0001180008000A68  RSL        
GMX0_TX001_THRESH              0x0001180008000A10  RSL        
GMX0_TX002_APPEND              0x0001180008001218  RSL        
GMX0_TX002_BURST               0x0001180008001228  RSL        
GMX0_TX002_CTL                 0x0001180008001270  RSL        
GMX0_TX002_MIN_PKT             0x0001180008001240  RSL        
GMX0_TX002_PAUSE_PKT_INTERVAL  0x0001180008001248  RSL        
GMX0_TX002_PAUSE_PKT_TIME      0x0001180008001238  RSL        
GMX0_TX002_PAUSE_TOGO          0x0001180008001258  RSL        
GMX0_TX002_PAUSE_ZERO          0x0001180008001260  RSL        
GMX0_TX002_SGMII_CTL           0x0001180008001300  RSL        
GMX0_TX002_SLOT                0x0001180008001220  RSL        
GMX0_TX002_SOFT_PAUSE          0x0001180008001250  RSL        
GMX0_TX002_STAT0               0x0001180008001280  RSL        
GMX0_TX002_STAT1               0x0001180008001288  RSL        
GMX0_TX002_STAT2               0x0001180008001290  RSL        
GMX0_TX002_STAT3               0x0001180008001298  RSL        
GMX0_TX002_STAT4               0x00011800080012A0  RSL        
GMX0_TX002_STAT5               0x00011800080012A8  RSL        
GMX0_TX002_STAT6               0x00011800080012B0  RSL        
GMX0_TX002_STAT7               0x00011800080012B8  RSL        
GMX0_TX002_STAT8               0x00011800080012C0  RSL        
GMX0_TX002_STAT9               0x00011800080012C8  RSL        
GMX0_TX002_STATS_CTL           0x0001180008001268  RSL        
GMX0_TX002_THRESH              0x0001180008001210  RSL        
GMX0_TX003_APPEND              0x0001180008001A18  RSL        
GMX0_TX003_BURST               0x0001180008001A28  RSL        
GMX0_TX003_CTL                 0x0001180008001A70  RSL        
GMX0_TX003_MIN_PKT             0x0001180008001A40  RSL        
GMX0_TX003_PAUSE_PKT_INTERVAL  0x0001180008001A48  RSL        
GMX0_TX003_PAUSE_PKT_TIME      0x0001180008001A38  RSL        
GMX0_TX003_PAUSE_TOGO          0x0001180008001A58  RSL        
GMX0_TX003_PAUSE_ZERO          0x0001180008001A60  RSL        
GMX0_TX003_SGMII_CTL           0x0001180008001B00  RSL        
GMX0_TX003_SLOT                0x0001180008001A20  RSL        
GMX0_TX003_SOFT_PAUSE          0x0001180008001A50  RSL        
GMX0_TX003_STAT0               0x0001180008001A80  RSL        
GMX0_TX003_STAT1               0x0001180008001A88  RSL        
GMX0_TX003_STAT2               0x0001180008001A90  RSL        
GMX0_TX003_STAT3               0x0001180008001A98  RSL        
GMX0_TX003_STAT4               0x0001180008001AA0  RSL        
GMX0_TX003_STAT5               0x0001180008001AA8  RSL        
GMX0_TX003_STAT6               0x0001180008001AB0  RSL        
GMX0_TX003_STAT7               0x0001180008001AB8  RSL        
GMX0_TX003_STAT8               0x0001180008001AC0  RSL        
GMX0_TX003_STAT9               0x0001180008001AC8  RSL        
GMX0_TX003_STATS_CTL           0x0001180008001A68  RSL        
GMX0_TX003_THRESH              0x0001180008001A10  RSL        
GMX0_TX_BP                     0x00011800080004D0  RSL        
GMX0_TX_COL_ATTEMPT            0x0001180008000498  RSL        
GMX0_TX_CORRUPT                0x00011800080004D8  RSL        
GMX0_TX_IFG                    0x0001180008000488  RSL        
GMX0_TX_INT_EN                 0x0001180008000508  RSL        
GMX0_TX_INT_REG                0x0001180008000500  RSL        
GMX0_TX_JAM                    0x0001180008000490  RSL        
GMX0_TX_LFSR                   0x00011800080004F8  RSL        
GMX0_TX_OVR_BP                 0x00011800080004C8  RSL        
GMX0_TX_PAUSE_PKT_DMAC         0x00011800080004A0  RSL        
GMX0_TX_PAUSE_PKT_TYPE         0x00011800080004A8  RSL        
GMX0_TX_PRTS                   0x0001180008000480  RSL        
GMX0_TX_XAUI_CTL               0x0001180008000528  RSL        
GMX0_XAUI_EXT_LOOPBACK         0x0001180008000540  RSL        
GMX1_BAD_REG                   0x0001180010000518  RSL        
GMX1_BIST                      0x0001180010000400  RSL        
GMX1_CLK_EN                    0x00011800100007F0  RSL        
GMX1_INF_MODE                  0x00011800100007F8  RSL        
GMX1_NXA_ADR                   0x0001180010000510  RSL        
GMX1_PRT000_CFG                0x0001180010000010  RSL        
GMX1_PRT001_CFG                0x0001180010000810  RSL        
GMX1_PRT002_CFG                0x0001180010001010  RSL        
GMX1_PRT003_CFG                0x0001180010001810  RSL        
GMX1_RX000_ADR_CAM0            0x0001180010000180  RSL        
GMX1_RX000_ADR_CAM1            0x0001180010000188  RSL        
GMX1_RX000_ADR_CAM2            0x0001180010000190  RSL        
GMX1_RX000_ADR_CAM3            0x0001180010000198  RSL        
GMX1_RX000_ADR_CAM4            0x00011800100001A0  RSL        
GMX1_RX000_ADR_CAM5            0x00011800100001A8  RSL        
GMX1_RX000_ADR_CAM_EN          0x0001180010000108  RSL        
GMX1_RX000_ADR_CTL             0x0001180010000100  RSL        
GMX1_RX000_DECISION            0x0001180010000040  RSL        
GMX1_RX000_FRM_CHK             0x0001180010000020  RSL        
GMX1_RX000_FRM_CTL             0x0001180010000018  RSL        
GMX1_RX000_IFG                 0x0001180010000058  RSL        
GMX1_RX000_INT_EN              0x0001180010000008  RSL        
GMX1_RX000_INT_REG             0x0001180010000000  RSL        
GMX1_RX000_JABBER              0x0001180010000038  RSL        
GMX1_RX000_PAUSE_DROP_TIME     0x0001180010000068  RSL        
GMX1_RX000_STATS_CTL           0x0001180010000050  RSL        
GMX1_RX000_STATS_OCTS          0x0001180010000088  RSL        
GMX1_RX000_STATS_OCTS_CTL      0x0001180010000098  RSL        
GMX1_RX000_STATS_OCTS_DMAC     0x00011800100000A8  RSL        
GMX1_RX000_STATS_OCTS_DRP      0x00011800100000B8  RSL        
GMX1_RX000_STATS_PKTS          0x0001180010000080  RSL        
GMX1_RX000_STATS_PKTS_BAD      0x00011800100000C0  RSL        
GMX1_RX000_STATS_PKTS_CTL      0x0001180010000090  RSL        
GMX1_RX000_STATS_PKTS_DMAC     0x00011800100000A0  RSL        
GMX1_RX000_STATS_PKTS_DRP      0x00011800100000B0  RSL        
GMX1_RX000_UDD_SKP             0x0001180010000048  RSL        
GMX1_RX001_ADR_CAM0            0x0001180010000980  RSL        
GMX1_RX001_ADR_CAM1            0x0001180010000988  RSL        
GMX1_RX001_ADR_CAM2            0x0001180010000990  RSL        
GMX1_RX001_ADR_CAM3            0x0001180010000998  RSL        
GMX1_RX001_ADR_CAM4            0x00011800100009A0  RSL        
GMX1_RX001_ADR_CAM5            0x00011800100009A8  RSL        
GMX1_RX001_ADR_CAM_EN          0x0001180010000908  RSL        
GMX1_RX001_ADR_CTL             0x0001180010000900  RSL        
GMX1_RX001_DECISION            0x0001180010000840  RSL        
GMX1_RX001_FRM_CHK             0x0001180010000820  RSL        
GMX1_RX001_FRM_CTL             0x0001180010000818  RSL        
GMX1_RX001_IFG                 0x0001180010000858  RSL        
GMX1_RX001_INT_EN              0x0001180010000808  RSL        
GMX1_RX001_INT_REG             0x0001180010000800  RSL        
GMX1_RX001_JABBER              0x0001180010000838  RSL        
GMX1_RX001_PAUSE_DROP_TIME     0x0001180010000868  RSL        
GMX1_RX001_STATS_CTL           0x0001180010000850  RSL        
GMX1_RX001_STATS_OCTS          0x0001180010000888  RSL        
GMX1_RX001_STATS_OCTS_CTL      0x0001180010000898  RSL        
GMX1_RX001_STATS_OCTS_DMAC     0x00011800100008A8  RSL        
GMX1_RX001_STATS_OCTS_DRP      0x00011800100008B8  RSL        
GMX1_RX001_STATS_PKTS          0x0001180010000880  RSL        
GMX1_RX001_STATS_PKTS_BAD      0x00011800100008C0  RSL        
GMX1_RX001_STATS_PKTS_CTL      0x0001180010000890  RSL        
GMX1_RX001_STATS_PKTS_DMAC     0x00011800100008A0  RSL        
GMX1_RX001_STATS_PKTS_DRP      0x00011800100008B0  RSL        
GMX1_RX001_UDD_SKP             0x0001180010000848  RSL        
GMX1_RX002_ADR_CAM0            0x0001180010001180  RSL        
GMX1_RX002_ADR_CAM1            0x0001180010001188  RSL        
GMX1_RX002_ADR_CAM2            0x0001180010001190  RSL        
GMX1_RX002_ADR_CAM3            0x0001180010001198  RSL        
GMX1_RX002_ADR_CAM4            0x00011800100011A0  RSL        
GMX1_RX002_ADR_CAM5            0x00011800100011A8  RSL        
GMX1_RX002_ADR_CAM_EN          0x0001180010001108  RSL        
GMX1_RX002_ADR_CTL             0x0001180010001100  RSL        
GMX1_RX002_DECISION            0x0001180010001040  RSL        
GMX1_RX002_FRM_CHK             0x0001180010001020  RSL        
GMX1_RX002_FRM_CTL             0x0001180010001018  RSL        
GMX1_RX002_IFG                 0x0001180010001058  RSL        
GMX1_RX002_INT_EN              0x0001180010001008  RSL        
GMX1_RX002_INT_REG             0x0001180010001000  RSL        
GMX1_RX002_JABBER              0x0001180010001038  RSL        
GMX1_RX002_PAUSE_DROP_TIME     0x0001180010001068  RSL        
GMX1_RX002_STATS_CTL           0x0001180010001050  RSL        
GMX1_RX002_STATS_OCTS          0x0001180010001088  RSL        
GMX1_RX002_STATS_OCTS_CTL      0x0001180010001098  RSL        
GMX1_RX002_STATS_OCTS_DMAC     0x00011800100010A8  RSL        
GMX1_RX002_STATS_OCTS_DRP      0x00011800100010B8  RSL        
GMX1_RX002_STATS_PKTS          0x0001180010001080  RSL        
GMX1_RX002_STATS_PKTS_BAD      0x00011800100010C0  RSL        
GMX1_RX002_STATS_PKTS_CTL      0x0001180010001090  RSL        
GMX1_RX002_STATS_PKTS_DMAC     0x00011800100010A0  RSL        
GMX1_RX002_STATS_PKTS_DRP      0x00011800100010B0  RSL        
GMX1_RX002_UDD_SKP             0x0001180010001048  RSL        
GMX1_RX003_ADR_CAM0            0x0001180010001980  RSL        
GMX1_RX003_ADR_CAM1            0x0001180010001988  RSL        
GMX1_RX003_ADR_CAM2            0x0001180010001990  RSL        
GMX1_RX003_ADR_CAM3            0x0001180010001998  RSL        
GMX1_RX003_ADR_CAM4            0x00011800100019A0  RSL        
GMX1_RX003_ADR_CAM5            0x00011800100019A8  RSL        
GMX1_RX003_ADR_CAM_EN          0x0001180010001908  RSL        
GMX1_RX003_ADR_CTL             0x0001180010001900  RSL        
GMX1_RX003_DECISION            0x0001180010001840  RSL        
GMX1_RX003_FRM_CHK             0x0001180010001820  RSL        
GMX1_RX003_FRM_CTL             0x0001180010001818  RSL        
GMX1_RX003_IFG                 0x0001180010001858  RSL        
GMX1_RX003_INT_EN              0x0001180010001808  RSL        
GMX1_RX003_INT_REG             0x0001180010001800  RSL        
GMX1_RX003_JABBER              0x0001180010001838  RSL        
GMX1_RX003_PAUSE_DROP_TIME     0x0001180010001868  RSL        
GMX1_RX003_STATS_CTL           0x0001180010001850  RSL        
GMX1_RX003_STATS_OCTS          0x0001180010001888  RSL        
GMX1_RX003_STATS_OCTS_CTL      0x0001180010001898  RSL        
GMX1_RX003_STATS_OCTS_DMAC     0x00011800100018A8  RSL        
GMX1_RX003_STATS_OCTS_DRP      0x00011800100018B8  RSL        
GMX1_RX003_STATS_PKTS          0x0001180010001880  RSL        
GMX1_RX003_STATS_PKTS_BAD      0x00011800100018C0  RSL        
GMX1_RX003_STATS_PKTS_CTL      0x0001180010001890  RSL        
GMX1_RX003_STATS_PKTS_DMAC     0x00011800100018A0  RSL        
GMX1_RX003_STATS_PKTS_DRP      0x00011800100018B0  RSL        
GMX1_RX003_UDD_SKP             0x0001180010001848  RSL        
GMX1_RX_BP_DROP000             0x0001180010000420  RSL        
GMX1_RX_BP_DROP001             0x0001180010000428  RSL        
GMX1_RX_BP_DROP002             0x0001180010000430  RSL        
GMX1_RX_BP_DROP003             0x0001180010000438  RSL        
GMX1_RX_BP_OFF000              0x0001180010000460  RSL        
GMX1_RX_BP_OFF001              0x0001180010000468  RSL        
GMX1_RX_BP_OFF002              0x0001180010000470  RSL        
GMX1_RX_BP_OFF003              0x0001180010000478  RSL        
GMX1_RX_BP_ON000               0x0001180010000440  RSL        
GMX1_RX_BP_ON001               0x0001180010000448  RSL        
GMX1_RX_BP_ON002               0x0001180010000450  RSL        
GMX1_RX_BP_ON003               0x0001180010000458  RSL        
GMX1_RX_PRTS                   0x0001180010000410  RSL        
GMX1_RX_PRT_INFO               0x00011800100004E8  RSL        
GMX1_RX_XAUI_BAD_COL           0x0001180010000538  RSL        
GMX1_RX_XAUI_CTL               0x0001180010000530  RSL        
GMX1_SMAC000                   0x0001180010000230  RSL        
GMX1_SMAC001                   0x0001180010000A30  RSL        
GMX1_SMAC002                   0x0001180010001230  RSL        
GMX1_SMAC003                   0x0001180010001A30  RSL        
GMX1_STAT_BP                   0x0001180010000520  RSL        
GMX1_TX000_APPEND              0x0001180010000218  RSL        
GMX1_TX000_BURST               0x0001180010000228  RSL        
GMX1_TX000_CTL                 0x0001180010000270  RSL        
GMX1_TX000_MIN_PKT             0x0001180010000240  RSL        
GMX1_TX000_PAUSE_PKT_INTERVAL  0x0001180010000248  RSL        
GMX1_TX000_PAUSE_PKT_TIME      0x0001180010000238  RSL        
GMX1_TX000_PAUSE_TOGO          0x0001180010000258  RSL        
GMX1_TX000_PAUSE_ZERO          0x0001180010000260  RSL        
GMX1_TX000_SGMII_CTL           0x0001180010000300  RSL        
GMX1_TX000_SLOT                0x0001180010000220  RSL        
GMX1_TX000_SOFT_PAUSE          0x0001180010000250  RSL        
GMX1_TX000_STAT0               0x0001180010000280  RSL        
GMX1_TX000_STAT1               0x0001180010000288  RSL        
GMX1_TX000_STAT2               0x0001180010000290  RSL        
GMX1_TX000_STAT3               0x0001180010000298  RSL        
GMX1_TX000_STAT4               0x00011800100002A0  RSL        
GMX1_TX000_STAT5               0x00011800100002A8  RSL        
GMX1_TX000_STAT6               0x00011800100002B0  RSL        
GMX1_TX000_STAT7               0x00011800100002B8  RSL        
GMX1_TX000_STAT8               0x00011800100002C0  RSL        
GMX1_TX000_STAT9               0x00011800100002C8  RSL        
GMX1_TX000_STATS_CTL           0x0001180010000268  RSL        
GMX1_TX000_THRESH              0x0001180010000210  RSL        
GMX1_TX001_APPEND              0x0001180010000A18  RSL        
GMX1_TX001_BURST               0x0001180010000A28  RSL        
GMX1_TX001_CTL                 0x0001180010000A70  RSL        
GMX1_TX001_MIN_PKT             0x0001180010000A40  RSL        
GMX1_TX001_PAUSE_PKT_INTERVAL  0x0001180010000A48  RSL        
GMX1_TX001_PAUSE_PKT_TIME      0x0001180010000A38  RSL        
GMX1_TX001_PAUSE_TOGO          0x0001180010000A58  RSL        
GMX1_TX001_PAUSE_ZERO          0x0001180010000A60  RSL        
GMX1_TX001_SGMII_CTL           0x0001180010000B00  RSL        
GMX1_TX001_SLOT                0x0001180010000A20  RSL        
GMX1_TX001_SOFT_PAUSE          0x0001180010000A50  RSL        
GMX1_TX001_STAT0               0x0001180010000A80  RSL        
GMX1_TX001_STAT1               0x0001180010000A88  RSL        
GMX1_TX001_STAT2               0x0001180010000A90  RSL        
GMX1_TX001_STAT3               0x0001180010000A98  RSL        
GMX1_TX001_STAT4               0x0001180010000AA0  RSL        
GMX1_TX001_STAT5               0x0001180010000AA8  RSL        
GMX1_TX001_STAT6               0x0001180010000AB0  RSL        
GMX1_TX001_STAT7               0x0001180010000AB8  RSL        
GMX1_TX001_STAT8               0x0001180010000AC0  RSL        
GMX1_TX001_STAT9               0x0001180010000AC8  RSL        
GMX1_TX001_STATS_CTL           0x0001180010000A68  RSL        
GMX1_TX001_THRESH              0x0001180010000A10  RSL        
GMX1_TX002_APPEND              0x0001180010001218  RSL        
GMX1_TX002_BURST               0x0001180010001228  RSL        
GMX1_TX002_CTL                 0x0001180010001270  RSL        
GMX1_TX002_MIN_PKT             0x0001180010001240  RSL        
GMX1_TX002_PAUSE_PKT_INTERVAL  0x0001180010001248  RSL        
GMX1_TX002_PAUSE_PKT_TIME      0x0001180010001238  RSL        
GMX1_TX002_PAUSE_TOGO          0x0001180010001258  RSL        
GMX1_TX002_PAUSE_ZERO          0x0001180010001260  RSL        
GMX1_TX002_SGMII_CTL           0x0001180010001300  RSL        
GMX1_TX002_SLOT                0x0001180010001220  RSL        
GMX1_TX002_SOFT_PAUSE          0x0001180010001250  RSL        
GMX1_TX002_STAT0               0x0001180010001280  RSL        
GMX1_TX002_STAT1               0x0001180010001288  RSL        
GMX1_TX002_STAT2               0x0001180010001290  RSL        
GMX1_TX002_STAT3               0x0001180010001298  RSL        
GMX1_TX002_STAT4               0x00011800100012A0  RSL        
GMX1_TX002_STAT5               0x00011800100012A8  RSL        
GMX1_TX002_STAT6               0x00011800100012B0  RSL        
GMX1_TX002_STAT7               0x00011800100012B8  RSL        
GMX1_TX002_STAT8               0x00011800100012C0  RSL        
GMX1_TX002_STAT9               0x00011800100012C8  RSL        
GMX1_TX002_STATS_CTL           0x0001180010001268  RSL        
GMX1_TX002_THRESH              0x0001180010001210  RSL        
GMX1_TX003_APPEND              0x0001180010001A18  RSL        
GMX1_TX003_BURST               0x0001180010001A28  RSL        
GMX1_TX003_CTL                 0x0001180010001A70  RSL        
GMX1_TX003_MIN_PKT             0x0001180010001A40  RSL        
GMX1_TX003_PAUSE_PKT_INTERVAL  0x0001180010001A48  RSL        
GMX1_TX003_PAUSE_PKT_TIME      0x0001180010001A38  RSL        
GMX1_TX003_PAUSE_TOGO          0x0001180010001A58  RSL        
GMX1_TX003_PAUSE_ZERO          0x0001180010001A60  RSL        
GMX1_TX003_SGMII_CTL           0x0001180010001B00  RSL        
GMX1_TX003_SLOT                0x0001180010001A20  RSL        
GMX1_TX003_SOFT_PAUSE          0x0001180010001A50  RSL        
GMX1_TX003_STAT0               0x0001180010001A80  RSL        
GMX1_TX003_STAT1               0x0001180010001A88  RSL        
GMX1_TX003_STAT2               0x0001180010001A90  RSL        
GMX1_TX003_STAT3               0x0001180010001A98  RSL        
GMX1_TX003_STAT4               0x0001180010001AA0  RSL        
GMX1_TX003_STAT5               0x0001180010001AA8  RSL        
GMX1_TX003_STAT6               0x0001180010001AB0  RSL        
GMX1_TX003_STAT7               0x0001180010001AB8  RSL        
GMX1_TX003_STAT8               0x0001180010001AC0  RSL        
GMX1_TX003_STAT9               0x0001180010001AC8  RSL        
GMX1_TX003_STATS_CTL           0x0001180010001A68  RSL        
GMX1_TX003_THRESH              0x0001180010001A10  RSL        
GMX1_TX_BP                     0x00011800100004D0  RSL        
GMX1_TX_COL_ATTEMPT            0x0001180010000498  RSL        
GMX1_TX_CORRUPT                0x00011800100004D8  RSL        
GMX1_TX_IFG                    0x0001180010000488  RSL        
GMX1_TX_INT_EN                 0x0001180010000508  RSL        
GMX1_TX_INT_REG                0x0001180010000500  RSL        
GMX1_TX_JAM                    0x0001180010000490  RSL        
GMX1_TX_LFSR                   0x00011800100004F8  RSL        
GMX1_TX_OVR_BP                 0x00011800100004C8  RSL        
GMX1_TX_PAUSE_PKT_DMAC         0x00011800100004A0  RSL        
GMX1_TX_PAUSE_PKT_TYPE         0x00011800100004A8  RSL        
GMX1_TX_PRTS                   0x0001180010000480  RSL        
GMX1_TX_XAUI_CTL               0x0001180010000528  RSL        
GMX1_XAUI_EXT_LOOPBACK         0x0001180010000540  RSL        
GPIO_BIT_CFG0                  0x0001070000000800  NCB        
GPIO_BIT_CFG1                  0x0001070000000808  NCB        
GPIO_BIT_CFG2                  0x0001070000000810  NCB        
GPIO_BIT_CFG3                  0x0001070000000818  NCB        
GPIO_BIT_CFG4                  0x0001070000000820  NCB        
GPIO_BIT_CFG5                  0x0001070000000828  NCB        
GPIO_BIT_CFG6                  0x0001070000000830  NCB        
GPIO_BIT_CFG7                  0x0001070000000838  NCB        
GPIO_BIT_CFG8                  0x0001070000000840  NCB        
GPIO_BIT_CFG9                  0x0001070000000848  NCB        
GPIO_BIT_CFG10                 0x0001070000000850  NCB        
GPIO_BIT_CFG11                 0x0001070000000858  NCB        
GPIO_BIT_CFG12                 0x0001070000000860  NCB        
GPIO_BIT_CFG13                 0x0001070000000868  NCB        
GPIO_BIT_CFG14                 0x0001070000000870  NCB        
GPIO_BIT_CFG15                 0x0001070000000878  NCB        
GPIO_CLK_GEN0                  0x00010700000008C0  NCB        
GPIO_CLK_GEN1                  0x00010700000008C8  NCB        
GPIO_CLK_GEN2                  0x00010700000008D0  NCB        
GPIO_CLK_GEN3                  0x00010700000008D8  NCB        
GPIO_INT_CLR                   0x0001070000000898  NCB        
GPIO_RX_DAT                    0x0001070000000880  NCB        
GPIO_TX_CLR                    0x0001070000000890  NCB        
GPIO_TX_SET                    0x0001070000000888  NCB        
IOB_BIST_STATUS                0x00011800F00007F8  RSL        
IOB_CTL_STATUS                 0x00011800F0000050  RSL        
IOB_DWB_PRI_CNT                0x00011800F0000028  RSL        
IOB_FAU_TIMEOUT                0x00011800F0000000  RSL        
IOB_I2C_PRI_CNT                0x00011800F0000010  RSL        
IOB_INB_CONTROL_MATCH          0x00011800F0000078  RSL        
IOB_INB_CONTROL_MATCH_ENB      0x00011800F0000088  RSL        
IOB_INB_DATA_MATCH             0x00011800F0000070  RSL        
IOB_INB_DATA_MATCH_ENB         0x00011800F0000080  RSL        
IOB_INT_ENB                    0x00011800F0000060  RSL        
IOB_INT_SUM                    0x00011800F0000058  RSL        
IOB_N2C_L2C_PRI_CNT            0x00011800F0000020  RSL        
IOB_N2C_RSP_PRI_CNT            0x00011800F0000008  RSL        
IOB_OUTB_COM_PRI_CNT           0x00011800F0000040  RSL        
IOB_OUTB_CONTROL_MATCH         0x00011800F0000098  RSL        
IOB_OUTB_CONTROL_MATCH_ENB     0x00011800F00000A8  RSL        
IOB_OUTB_DATA_MATCH            0x00011800F0000090  RSL        
IOB_OUTB_DATA_MATCH_ENB        0x00011800F00000A0  RSL        
IOB_OUTB_FPA_PRI_CNT           0x00011800F0000048  RSL        
IOB_OUTB_REQ_PRI_CNT           0x00011800F0000038  RSL        
IOB_P2C_REQ_PRI_CNT            0x00011800F0000018  RSL        
IOB_PKT_ERR                    0x00011800F0000068  RSL        
IPD_1ST_MBUFF_SKIP             0x00014F0000000000  NCB        
IPD_1st_NEXT_PTR_BACK          0x00014F0000000150  NCB        
IPD_2nd_NEXT_PTR_BACK          0x00014F0000000158  NCB        
IPD_BIST_STATUS                0x00014F00000007F8  NCB        
IPD_BP_PRT_RED_END             0x00014F0000000328  NCB        
IPD_CLK_COUNT                  0x00014F0000000338  NCB        
IPD_CTL_STATUS                 0x00014F0000000018  NCB        
IPD_INT_ENB                    0x00014F0000000160  NCB        
IPD_INT_SUM                    0x00014F0000000168  NCB        
IPD_NOT_1ST_MBUFF_SKIP         0x00014F0000000008  NCB        
IPD_PACKET_MBUFF_SIZE          0x00014F0000000010  NCB        
IPD_PKT_PTR_VALID              0x00014F0000000358  NCB        
IPD_PORT0_BP_PAGE_CNT          0x00014F0000000028  NCB        
IPD_PORT1_BP_PAGE_CNT          0x00014F0000000030  NCB        
IPD_PORT2_BP_PAGE_CNT          0x00014F0000000038  NCB        
IPD_PORT3_BP_PAGE_CNT          0x00014F0000000040  NCB        
IPD_PORT16_BP_PAGE_CNT         0x00014F00000000A8  NCB        
IPD_PORT17_BP_PAGE_CNT         0x00014F00000000B0  NCB        
IPD_PORT18_BP_PAGE_CNT         0x00014F00000000B8  NCB        
IPD_PORT19_BP_PAGE_CNT         0x00014F00000000C0  NCB        
IPD_PORT36_BP_PAGE_CNT2        0x00014F0000000368  NCB        
IPD_PORT37_BP_PAGE_CNT2        0x00014F0000000370  NCB        
IPD_PORT38_BP_PAGE_CNT2        0x00014F0000000378  NCB        
IPD_PORT39_BP_PAGE_CNT2        0x00014F0000000380  NCB        
IPD_PORT_BP_COUNTERS2_PAIR36   0x00014F0000000388  NCB        
IPD_PORT_BP_COUNTERS2_PAIR37   0x00014F0000000390  NCB        
IPD_PORT_BP_COUNTERS2_PAIR38   0x00014F0000000398  NCB        
IPD_PORT_BP_COUNTERS2_PAIR39   0x00014F00000003A0  NCB        
IPD_PORT_BP_COUNTERS_PAIR0     0x00014F00000001B8  NCB        
IPD_PORT_BP_COUNTERS_PAIR1     0x00014F00000001C0  NCB        
IPD_PORT_BP_COUNTERS_PAIR2     0x00014F00000001C8  NCB        
IPD_PORT_BP_COUNTERS_PAIR3     0x00014F00000001D0  NCB        
IPD_PORT_BP_COUNTERS_PAIR16    0x00014F0000000238  NCB        
IPD_PORT_BP_COUNTERS_PAIR17    0x00014F0000000240  NCB        
IPD_PORT_BP_COUNTERS_PAIR18    0x00014F0000000248  NCB        
IPD_PORT_BP_COUNTERS_PAIR19    0x00014F0000000250  NCB        
IPD_PORT_QOS_0_CNT             0x00014F0000000888  NCB        
IPD_PORT_QOS_1_CNT             0x00014F0000000890  NCB        
IPD_PORT_QOS_2_CNT             0x00014F0000000898  NCB        
IPD_PORT_QOS_3_CNT             0x00014F00000008A0  NCB        
IPD_PORT_QOS_4_CNT             0x00014F00000008A8  NCB        
IPD_PORT_QOS_5_CNT             0x00014F00000008B0  NCB        
IPD_PORT_QOS_6_CNT             0x00014F00000008B8  NCB        
IPD_PORT_QOS_7_CNT             0x00014F00000008C0  NCB        
IPD_PORT_QOS_8_CNT             0x00014F00000008C8  NCB        
IPD_PORT_QOS_9_CNT             0x00014F00000008D0  NCB        
IPD_PORT_QOS_10_CNT            0x00014F00000008D8  NCB        
IPD_PORT_QOS_11_CNT            0x00014F00000008E0  NCB        
IPD_PORT_QOS_12_CNT            0x00014F00000008E8  NCB        
IPD_PORT_QOS_13_CNT            0x00014F00000008F0  NCB        
IPD_PORT_QOS_14_CNT            0x00014F00000008F8  NCB        
IPD_PORT_QOS_15_CNT            0x00014F0000000900  NCB        
IPD_PORT_QOS_16_CNT            0x00014F0000000908  NCB        
IPD_PORT_QOS_17_CNT            0x00014F0000000910  NCB        
IPD_PORT_QOS_18_CNT            0x00014F0000000918  NCB        
IPD_PORT_QOS_19_CNT            0x00014F0000000920  NCB        
IPD_PORT_QOS_20_CNT            0x00014F0000000928  NCB        
IPD_PORT_QOS_21_CNT            0x00014F0000000930  NCB        
IPD_PORT_QOS_22_CNT            0x00014F0000000938  NCB        
IPD_PORT_QOS_23_CNT            0x00014F0000000940  NCB        
IPD_PORT_QOS_24_CNT            0x00014F0000000948  NCB        
IPD_PORT_QOS_25_CNT            0x00014F0000000950  NCB        
IPD_PORT_QOS_26_CNT            0x00014F0000000958  NCB        
IPD_PORT_QOS_27_CNT            0x00014F0000000960  NCB        
IPD_PORT_QOS_28_CNT            0x00014F0000000968  NCB        
IPD_PORT_QOS_29_CNT            0x00014F0000000970  NCB        
IPD_PORT_QOS_30_CNT            0x00014F0000000978  NCB        
IPD_PORT_QOS_31_CNT            0x00014F0000000980  NCB        
IPD_PORT_QOS_128_CNT           0x00014F0000000C88  NCB        
IPD_PORT_QOS_129_CNT           0x00014F0000000C90  NCB        
IPD_PORT_QOS_130_CNT           0x00014F0000000C98  NCB        
IPD_PORT_QOS_131_CNT           0x00014F0000000CA0  NCB        
IPD_PORT_QOS_132_CNT           0x00014F0000000CA8  NCB        
IPD_PORT_QOS_133_CNT           0x00014F0000000CB0  NCB        
IPD_PORT_QOS_134_CNT           0x00014F0000000CB8  NCB        
IPD_PORT_QOS_135_CNT           0x00014F0000000CC0  NCB        
IPD_PORT_QOS_136_CNT           0x00014F0000000CC8  NCB        
IPD_PORT_QOS_137_CNT           0x00014F0000000CD0  NCB        
IPD_PORT_QOS_138_CNT           0x00014F0000000CD8  NCB        
IPD_PORT_QOS_139_CNT           0x00014F0000000CE0  NCB        
IPD_PORT_QOS_140_CNT           0x00014F0000000CE8  NCB        
IPD_PORT_QOS_141_CNT           0x00014F0000000CF0  NCB        
IPD_PORT_QOS_142_CNT           0x00014F0000000CF8  NCB        
IPD_PORT_QOS_143_CNT           0x00014F0000000D00  NCB        
IPD_PORT_QOS_144_CNT           0x00014F0000000D08  NCB        
IPD_PORT_QOS_145_CNT           0x00014F0000000D10  NCB        
IPD_PORT_QOS_146_CNT           0x00014F0000000D18  NCB        
IPD_PORT_QOS_147_CNT           0x00014F0000000D20  NCB        
IPD_PORT_QOS_148_CNT           0x00014F0000000D28  NCB        
IPD_PORT_QOS_149_CNT           0x00014F0000000D30  NCB        
IPD_PORT_QOS_150_CNT           0x00014F0000000D38  NCB        
IPD_PORT_QOS_151_CNT           0x00014F0000000D40  NCB        
IPD_PORT_QOS_152_CNT           0x00014F0000000D48  NCB        
IPD_PORT_QOS_153_CNT           0x00014F0000000D50  NCB        
IPD_PORT_QOS_154_CNT           0x00014F0000000D58  NCB        
IPD_PORT_QOS_155_CNT           0x00014F0000000D60  NCB        
IPD_PORT_QOS_156_CNT           0x00014F0000000D68  NCB        
IPD_PORT_QOS_157_CNT           0x00014F0000000D70  NCB        
IPD_PORT_QOS_158_CNT           0x00014F0000000D78  NCB        
IPD_PORT_QOS_159_CNT           0x00014F0000000D80  NCB        
IPD_PORT_QOS_288_CNT           0x00014F0000001188  NCB        
IPD_PORT_QOS_289_CNT           0x00014F0000001190  NCB        
IPD_PORT_QOS_290_CNT           0x00014F0000001198  NCB        
IPD_PORT_QOS_291_CNT           0x00014F00000011A0  NCB        
IPD_PORT_QOS_292_CNT           0x00014F00000011A8  NCB        
IPD_PORT_QOS_293_CNT           0x00014F00000011B0  NCB        
IPD_PORT_QOS_294_CNT           0x00014F00000011B8  NCB        
IPD_PORT_QOS_295_CNT           0x00014F00000011C0  NCB        
IPD_PORT_QOS_296_CNT           0x00014F00000011C8  NCB        
IPD_PORT_QOS_297_CNT           0x00014F00000011D0  NCB        
IPD_PORT_QOS_298_CNT           0x00014F00000011D8  NCB        
IPD_PORT_QOS_299_CNT           0x00014F00000011E0  NCB        
IPD_PORT_QOS_300_CNT           0x00014F00000011E8  NCB        
IPD_PORT_QOS_301_CNT           0x00014F00000011F0  NCB        
IPD_PORT_QOS_302_CNT           0x00014F00000011F8  NCB        
IPD_PORT_QOS_303_CNT           0x00014F0000001200  NCB        
IPD_PORT_QOS_304_CNT           0x00014F0000001208  NCB        
IPD_PORT_QOS_305_CNT           0x00014F0000001210  NCB        
IPD_PORT_QOS_306_CNT           0x00014F0000001218  NCB        
IPD_PORT_QOS_307_CNT           0x00014F0000001220  NCB        
IPD_PORT_QOS_308_CNT           0x00014F0000001228  NCB        
IPD_PORT_QOS_309_CNT           0x00014F0000001230  NCB        
IPD_PORT_QOS_310_CNT           0x00014F0000001238  NCB        
IPD_PORT_QOS_311_CNT           0x00014F0000001240  NCB        
IPD_PORT_QOS_312_CNT           0x00014F0000001248  NCB        
IPD_PORT_QOS_313_CNT           0x00014F0000001250  NCB        
IPD_PORT_QOS_314_CNT           0x00014F0000001258  NCB        
IPD_PORT_QOS_315_CNT           0x00014F0000001260  NCB        
IPD_PORT_QOS_316_CNT           0x00014F0000001268  NCB        
IPD_PORT_QOS_317_CNT           0x00014F0000001270  NCB        
IPD_PORT_QOS_318_CNT           0x00014F0000001278  NCB        
IPD_PORT_QOS_319_CNT           0x00014F0000001280  NCB        
IPD_PORT_QOS_INT0              0x00014F0000000808  NCB        
IPD_PORT_QOS_INT2              0x00014F0000000818  NCB        
IPD_PORT_QOS_INT4              0x00014F0000000828  NCB        
IPD_PORT_QOS_INT_ENB0          0x00014F0000000848  NCB        
IPD_PORT_QOS_INT_ENB2          0x00014F0000000858  NCB        
IPD_PORT_QOS_INT_ENB4          0x00014F0000000868  NCB        
IPD_PRC_HOLD_PTR_FIFO_CTL      0x00014F0000000348  NCB        
IPD_PRC_PORT_PTR_FIFO_CTL      0x00014F0000000350  NCB        
IPD_PTR_COUNT                  0x00014F0000000320  NCB        
IPD_PWP_PTR_FIFO_CTL           0x00014F0000000340  NCB        
IPD_QOS0_RED_MARKS             0x00014F0000000178  NCB        
IPD_QOS1_RED_MARKS             0x00014F0000000180  NCB        
IPD_QOS2_RED_MARKS             0x00014F0000000188  NCB        
IPD_QOS3_RED_MARKS             0x00014F0000000190  NCB        
IPD_QOS4_RED_MARKS             0x00014F0000000198  NCB        
IPD_QOS5_RED_MARKS             0x00014F00000001A0  NCB        
IPD_QOS6_RED_MARKS             0x00014F00000001A8  NCB        
IPD_QOS7_RED_MARKS             0x00014F00000001B0  NCB        
IPD_QUE0_FREE_PAGE_CNT         0x00014F0000000330  NCB        
IPD_RED_PORT_ENABLE            0x00014F00000002D8  NCB        
IPD_RED_PORT_ENABLE2           0x00014F00000003A8  NCB        
IPD_RED_QUE0_PARAM             0x00014F00000002E0  NCB        
IPD_RED_QUE1_PARAM             0x00014F00000002E8  NCB        
IPD_RED_QUE2_PARAM             0x00014F00000002F0  NCB        
IPD_RED_QUE3_PARAM             0x00014F00000002F8  NCB        
IPD_RED_QUE4_PARAM             0x00014F0000000300  NCB        
IPD_RED_QUE5_PARAM             0x00014F0000000308  NCB        
IPD_RED_QUE6_PARAM             0x00014F0000000310  NCB        
IPD_RED_QUE7_PARAM             0x00014F0000000318  NCB        
IPD_SUB_PORT_BP_PAGE_CNT       0x00014F0000000148  NCB        
IPD_SUB_PORT_FCS               0x00014F0000000170  NCB        
IPD_SUB_PORT_QOS_CNT           0x00014F0000000800  NCB        
IPD_WQE_FPA_QUEUE              0x00014F0000000020  NCB        
IPD_WQE_PTR_VALID              0x00014F0000000360  NCB        
KEY_BIST_REG                   0x0001180020000018  RSL        
KEY_CTL_STATUS                 0x0001180020000010  RSL        
KEY_INT_ENB                    0x0001180020000008  RSL        
KEY_INT_SUM                    0x0001180020000000  RSL        
L2C_BST0                       0x00011800800007F8  RSL        
L2C_BST1                       0x00011800800007F0  RSL        
L2C_BST2                       0x00011800800007E8  RSL        
L2C_CFG                        0x0001180080000000  RSL        
L2C_DBG                        0x0001180080000030  RSL        
L2C_DUT                        0x0001180080000050  RSL        
L2C_GRPWRR0                    0x00011800800000C8  RSL        
L2C_GRPWRR1                    0x00011800800000D0  RSL        
L2C_INT_EN                     0x0001180080000100  RSL        
L2C_INT_STAT                   0x00011800800000F8  RSL        
L2C_LCKBASE                    0x0001180080000058  RSL        
L2C_LCKOFF                     0x0001180080000060  RSL        
L2C_LFB0                       0x0001180080000038  RSL        
L2C_LFB1                       0x0001180080000040  RSL        
L2C_LFB2                       0x0001180080000048  RSL        
L2C_LFB3                       0x00011800800000B8  RSL        
L2C_OOB                        0x00011800800000D8  RSL        
L2C_OOB1                       0x00011800800000E0  RSL        
L2C_OOB2                       0x00011800800000E8  RSL        
L2C_OOB3                       0x00011800800000F0  RSL        
L2C_PFC0                       0x0001180080000098  RSL        
L2C_PFC1                       0x00011800800000A0  RSL        
L2C_PFC2                       0x00011800800000A8  RSL        
L2C_PFC3                       0x00011800800000B0  RSL        
L2C_PFCTL                      0x0001180080000090  RSL        
L2C_PPGRP                      0x00011800800000C0  RSL        
L2C_SPAR0                      0x0001180080000068  RSL        
L2C_SPAR1                      0x0001180080000070  RSL        
L2C_SPAR2                      0x0001180080000078  RSL        
L2C_SPAR4                      0x0001180080000088  RSL        
L2D_BST0                       0x0001180080000780  RSL        
L2D_BST1                       0x0001180080000788  RSL        
L2D_BST2                       0x0001180080000790  RSL        
L2D_BST3                       0x0001180080000798  RSL        
L2D_ERR                        0x0001180080000010  RSL        
L2D_FADR                       0x0001180080000018  RSL        
L2D_FSYN0                      0x0001180080000020  RSL        
L2D_FSYN1                      0x0001180080000028  RSL        
L2D_FUS0                       0x00011800800007A0  RSL        
L2D_FUS1                       0x00011800800007A8  RSL        
L2D_FUS2                       0x00011800800007B0  RSL        
L2D_FUS3                       0x00011800800007B8  RSL        
L2T_ERR                        0x0001180080000008  RSL        
LED_BLINK                      0x0001180000001A48  RSL        
LED_CLK_PHASE                  0x0001180000001A08  RSL        
LED_CYLON                      0x0001180000001AF8  RSL        
LED_DBG                        0x0001180000001A18  RSL        
LED_EN                         0x0001180000001A00  RSL        
LED_POLARITY                   0x0001180000001A50  RSL        
LED_PRT                        0x0001180000001A10  RSL        
LED_PRT_FMT                    0x0001180000001A30  RSL        
LED_PRT_STATUS0                0x0001180000001A80  RSL        
LED_PRT_STATUS1                0x0001180000001A88  RSL        
LED_PRT_STATUS2                0x0001180000001A90  RSL        
LED_PRT_STATUS3                0x0001180000001A98  RSL        
LED_PRT_STATUS4                0x0001180000001AA0  RSL        
LED_PRT_STATUS5                0x0001180000001AA8  RSL        
LED_PRT_STATUS6                0x0001180000001AB0  RSL        
LED_PRT_STATUS7                0x0001180000001AB8  RSL        
LED_UDD_CNT0                   0x0001180000001A20  RSL        
LED_UDD_CNT1                   0x0001180000001A28  RSL        
LED_UDD_DAT0                   0x0001180000001A38  RSL        
LED_UDD_DAT1                   0x0001180000001A40  RSL        
LED_UDD_DAT_CLR0               0x0001180000001AC8  RSL        
LED_UDD_DAT_CLR1               0x0001180000001AD8  RSL        
LED_UDD_DAT_SET0               0x0001180000001AC0  RSL        
LED_UDD_DAT_SET1               0x0001180000001AD0  RSL        
LMC0_BIST_CTL                  0x00011800880000F0  RSL        
LMC0_BIST_RESULT               0x00011800880000F8  RSL        
LMC0_COMP_CTL                  0x0001180088000028  RSL        
LMC0_CTL                       0x0001180088000010  RSL        
LMC0_CTL1                      0x0001180088000090  RSL        
LMC0_DCLK_CNT_HI               0x0001180088000070  RSL        
LMC0_DCLK_CNT_LO               0x0001180088000068  RSL        
LMC0_DCLK_CTL                  0x00011800880000B8  RSL        
LMC0_DDR2_CTL                  0x0001180088000018  RSL        
LMC0_DELAY_CFG                 0x0001180088000088  RSL        
LMC0_DLL_CTL                   0x00011800880000C0  RSL        
LMC0_DUAL_MEMCFG               0x0001180088000098  RSL        
LMC0_ECC_SYND                  0x0001180088000038  RSL        
LMC0_FADR                      0x0001180088000020  RSL        
LMC0_IFB_CNT_HI                0x0001180088000050  RSL        
LMC0_IFB_CNT_LO                0x0001180088000048  RSL        
LMC0_MEM_CFG0                  0x0001180088000000  RSL        
LMC0_MEM_CFG1                  0x0001180088000008  RSL        
LMC0_OPS_CNT_HI                0x0001180088000060  RSL        
LMC0_OPS_CNT_LO                0x0001180088000058  RSL        
LMC0_PLL_CTL                   0x00011800880000A8  RSL        
LMC0_PLL_STATUS                0x00011800880000B0  RSL        
LMC0_READ_LEVEL_CTL            0x0001180088000140  RSL        
LMC0_READ_LEVEL_DBG            0x0001180088000148  RSL        
LMC0_READ_LEVEL_RANK000        0x0001180088000100  RSL        
LMC0_READ_LEVEL_RANK001        0x0001180088000108  RSL        
LMC0_READ_LEVEL_RANK002        0x0001180088000110  RSL        
LMC0_READ_LEVEL_RANK003        0x0001180088000118  RSL        
LMC0_RODT_COMP_CTL             0x00011800880000A0  RSL        
LMC0_RODT_CTL                  0x0001180088000078  RSL        
LMC0_WODT_CTL0                 0x0001180088000030  RSL        
LMC0_WODT_CTL1                 0x0001180088000080  RSL        
LMC1_BIST_CTL                  0x00011800E80000F0  RSL        
LMC1_BIST_RESULT               0x00011800E80000F8  RSL        
LMC1_COMP_CTL                  0x00011800E8000028  RSL        
LMC1_CTL                       0x00011800E8000010  RSL        
LMC1_CTL1                      0x00011800E8000090  RSL        
LMC1_DCLK_CNT_HI               0x00011800E8000070  RSL        
LMC1_DCLK_CNT_LO               0x00011800E8000068  RSL        
LMC1_DCLK_CTL                  0x00011800E80000B8  RSL        
LMC1_DDR2_CTL                  0x00011800E8000018  RSL        
LMC1_DELAY_CFG                 0x00011800E8000088  RSL        
LMC1_DLL_CTL                   0x00011800E80000C0  RSL        
LMC1_DUAL_MEMCFG               0x00011800E8000098  RSL        
LMC1_ECC_SYND                  0x00011800E8000038  RSL        
LMC1_FADR                      0x00011800E8000020  RSL        
LMC1_IFB_CNT_HI                0x00011800E8000050  RSL        
LMC1_IFB_CNT_LO                0x00011800E8000048  RSL        
LMC1_MEM_CFG0                  0x00011800E8000000  RSL        
LMC1_MEM_CFG1                  0x00011800E8000008  RSL        
LMC1_OPS_CNT_HI                0x00011800E8000060  RSL        
LMC1_OPS_CNT_LO                0x00011800E8000058  RSL        
LMC1_PLL_CTL                   0x00011800E80000A8  RSL        
LMC1_PLL_STATUS                0x00011800E80000B0  RSL        
LMC1_READ_LEVEL_CTL            0x00011800E8000140  RSL        
LMC1_READ_LEVEL_DBG            0x00011800E8000148  RSL        
LMC1_READ_LEVEL_RANK000        0x00011800E8000100  RSL        
LMC1_READ_LEVEL_RANK001        0x00011800E8000108  RSL        
LMC1_READ_LEVEL_RANK002        0x00011800E8000110  RSL        
LMC1_READ_LEVEL_RANK003        0x00011800E8000118  RSL        
LMC1_RODT_COMP_CTL             0x00011800E80000A0  RSL        
LMC1_RODT_CTL                  0x00011800E8000078  RSL        
LMC1_WODT_CTL0                 0x00011800E8000030  RSL        
LMC1_WODT_CTL1                 0x00011800E8000080  RSL        
MIO_BOOT_BIST_STAT             0x00011800000000F8  RSL        
MIO_BOOT_COMP                  0x00011800000000B8  RSL        
MIO_BOOT_DMA_CFG0              0x0001180000000100  RSL        
MIO_BOOT_DMA_CFG1              0x0001180000000108  RSL        
MIO_BOOT_DMA_CFG2              0x0001180000000110  RSL        
MIO_BOOT_DMA_INT0              0x0001180000000138  RSL        
MIO_BOOT_DMA_INT1              0x0001180000000140  RSL        
MIO_BOOT_DMA_INT2              0x0001180000000148  RSL        
MIO_BOOT_DMA_INT_EN0           0x0001180000000150  RSL        
MIO_BOOT_DMA_INT_EN1           0x0001180000000158  RSL        
MIO_BOOT_DMA_INT_EN2           0x0001180000000160  RSL        
MIO_BOOT_DMA_TIM0              0x0001180000000120  RSL        
MIO_BOOT_DMA_TIM1              0x0001180000000128  RSL        
MIO_BOOT_DMA_TIM2              0x0001180000000130  RSL        
MIO_BOOT_ERR                   0x00011800000000A0  RSL        
MIO_BOOT_INT                   0x00011800000000A8  RSL        
MIO_BOOT_LOC_ADR               0x0001180000000090  RSL        
MIO_BOOT_LOC_CFG0              0x0001180000000080  RSL        
MIO_BOOT_LOC_CFG1              0x0001180000000088  RSL        
MIO_BOOT_LOC_DAT               0x0001180000000098  RSL        
MIO_BOOT_REG_CFG0              0x0001180000000000  RSL        
MIO_BOOT_REG_CFG1              0x0001180000000008  RSL        
MIO_BOOT_REG_CFG2              0x0001180000000010  RSL        
MIO_BOOT_REG_CFG3              0x0001180000000018  RSL        
MIO_BOOT_REG_CFG4              0x0001180000000020  RSL        
MIO_BOOT_REG_CFG5              0x0001180000000028  RSL        
MIO_BOOT_REG_CFG6              0x0001180000000030  RSL        
MIO_BOOT_REG_CFG7              0x0001180000000038  RSL        
MIO_BOOT_REG_TIM0              0x0001180000000040  RSL        
MIO_BOOT_REG_TIM1              0x0001180000000048  RSL        
MIO_BOOT_REG_TIM2              0x0001180000000050  RSL        
MIO_BOOT_REG_TIM3              0x0001180000000058  RSL        
MIO_BOOT_REG_TIM4              0x0001180000000060  RSL        
MIO_BOOT_REG_TIM5              0x0001180000000068  RSL        
MIO_BOOT_REG_TIM6              0x0001180000000070  RSL        
MIO_BOOT_REG_TIM7              0x0001180000000078  RSL        
MIO_BOOT_THR                   0x00011800000000B0  RSL        
MIO_FUS_BNK_DAT0               0x0001180000001520  RSL        
MIO_FUS_BNK_DAT1               0x0001180000001528  RSL        
MIO_FUS_BNK_DAT2               0x0001180000001530  RSL        
MIO_FUS_BNK_DAT3               0x0001180000001538  RSL        
MIO_FUS_DAT0                   0x0001180000001400  RSL        
MIO_FUS_DAT1                   0x0001180000001408  RSL        
MIO_FUS_DAT2                   0x0001180000001410  RSL        
MIO_FUS_DAT3                   0x0001180000001418  RSL        
MIO_FUS_EMA                    0x0001180000001550  RSL        
MIO_FUS_PDF                    0x0001180000001420  RSL        
MIO_FUS_PLL                    0x0001180000001580  RSL        
MIO_FUS_PROG                   0x0001180000001510  RSL        
MIO_FUS_PROG_TIMES             0x0001180000001518  RSL        
MIO_FUS_RCMD                   0x0001180000001500  RSL        
MIO_FUS_SPR_REPAIR_RES         0x0001180000001548  RSL        
MIO_FUS_SPR_REPAIR_SUM         0x0001180000001540  RSL        
MIO_FUS_WADR                   0x0001180000001508  RSL        
MIO_TWS0_INT                   0x0001180000001010  RSL        
MIO_TWS0_SW_TWSI               0x0001180000001000  RSL        
MIO_TWS0_SW_TWSI_EXT           0x0001180000001018  RSL        
MIO_TWS0_TWSI_SW               0x0001180000001008  RSL        
MIO_TWS1_INT                   0x0001180000001210  RSL        
MIO_TWS1_SW_TWSI               0x0001180000001200  RSL        
MIO_TWS1_SW_TWSI_EXT           0x0001180000001218  RSL        
MIO_TWS1_TWSI_SW               0x0001180000001208  RSL        
MIO_UART0_DLH                  0x0001180000000888  RSL        
MIO_UART0_DLL                  0x0001180000000880  RSL        
MIO_UART0_FAR                  0x0001180000000920  RSL        
MIO_UART0_FCR                  0x0001180000000850  RSL        
MIO_UART0_HTX                  0x0001180000000B08  RSL        
MIO_UART0_IER                  0x0001180000000808  RSL        
MIO_UART0_IIR                  0x0001180000000810  RSL        
MIO_UART0_LCR                  0x0001180000000818  RSL        
MIO_UART0_LSR                  0x0001180000000828  RSL        
MIO_UART0_MCR                  0x0001180000000820  RSL        
MIO_UART0_MSR                  0x0001180000000830  RSL        
MIO_UART0_RBR                  0x0001180000000800  RSL        
MIO_UART0_RFL                  0x0001180000000A08  RSL        
MIO_UART0_RFW                  0x0001180000000930  RSL        
MIO_UART0_SBCR                 0x0001180000000A20  RSL        
MIO_UART0_SCR                  0x0001180000000838  RSL        
MIO_UART0_SFE                  0x0001180000000A30  RSL        
MIO_UART0_SRR                  0x0001180000000A10  RSL        
MIO_UART0_SRT                  0x0001180000000A38  RSL        
MIO_UART0_SRTS                 0x0001180000000A18  RSL        
MIO_UART0_STT                  0x0001180000000B00  RSL        
MIO_UART0_TFL                  0x0001180000000A00  RSL        
MIO_UART0_TFR                  0x0001180000000928  RSL        
MIO_UART0_THR                  0x0001180000000840  RSL        
MIO_UART0_USR                  0x0001180000000938  RSL        
MIO_UART1_DLH                  0x0001180000000C88  RSL        
MIO_UART1_DLL                  0x0001180000000C80  RSL        
MIO_UART1_FAR                  0x0001180000000D20  RSL        
MIO_UART1_FCR                  0x0001180000000C50  RSL        
MIO_UART1_HTX                  0x0001180000000F08  RSL        
MIO_UART1_IER                  0x0001180000000C08  RSL        
MIO_UART1_IIR                  0x0001180000000C10  RSL        
MIO_UART1_LCR                  0x0001180000000C18  RSL        
MIO_UART1_LSR                  0x0001180000000C28  RSL        
MIO_UART1_MCR                  0x0001180000000C20  RSL        
MIO_UART1_MSR                  0x0001180000000C30  RSL        
MIO_UART1_RBR                  0x0001180000000C00  RSL        
MIO_UART1_RFL                  0x0001180000000E08  RSL        
MIO_UART1_RFW                  0x0001180000000D30  RSL        
MIO_UART1_SBCR                 0x0001180000000E20  RSL        
MIO_UART1_SCR                  0x0001180000000C38  RSL        
MIO_UART1_SFE                  0x0001180000000E30  RSL        
MIO_UART1_SRR                  0x0001180000000E10  RSL        
MIO_UART1_SRT                  0x0001180000000E38  RSL        
MIO_UART1_SRTS                 0x0001180000000E18  RSL        
MIO_UART1_STT                  0x0001180000000F00  RSL        
MIO_UART1_TFL                  0x0001180000000E00  RSL        
MIO_UART1_TFR                  0x0001180000000D28  RSL        
MIO_UART1_THR                  0x0001180000000C40  RSL        
MIO_UART1_USR                  0x0001180000000D38  RSL        
MIX0_BIST                      0x0001070000100078  NCB        
MIX0_CTL                       0x0001070000100020  NCB        
MIX0_INTENA                    0x0001070000100050  NCB        
MIX0_IRCNT                     0x0001070000100030  NCB        
MIX0_IRHWM                     0x0001070000100028  NCB        
MIX0_IRING1                    0x0001070000100010  NCB        
MIX0_IRING2                    0x0001070000100018  NCB        
MIX0_ISR                       0x0001070000100048  NCB        
MIX0_ORCNT                     0x0001070000100040  NCB        
MIX0_ORHWM                     0x0001070000100038  NCB        
MIX0_ORING1                    0x0001070000100000  NCB        
MIX0_ORING2                    0x0001070000100008  NCB        
MIX0_REMCNT                    0x0001070000100058  NCB        
NPEI_BAR1_INDEX0               0x0000000000000000  PEXP_NCB   0x00011F0000008000  NCB       
NPEI_BAR1_INDEX1               0x0000000000000010  PEXP_NCB   0x00011F0000008010  NCB       
NPEI_BAR1_INDEX2               0x0000000000000020  PEXP_NCB   0x00011F0000008020  NCB       
NPEI_BAR1_INDEX3               0x0000000000000030  PEXP_NCB   0x00011F0000008030  NCB       
NPEI_BAR1_INDEX4               0x0000000000000040  PEXP_NCB   0x00011F0000008040  NCB       
NPEI_BAR1_INDEX5               0x0000000000000050  PEXP_NCB   0x00011F0000008050  NCB       
NPEI_BAR1_INDEX6               0x0000000000000060  PEXP_NCB   0x00011F0000008060  NCB       
NPEI_BAR1_INDEX7               0x0000000000000070  PEXP_NCB   0x00011F0000008070  NCB       
NPEI_BAR1_INDEX8               0x0000000000000080  PEXP_NCB   0x00011F0000008080  NCB       
NPEI_BAR1_INDEX9               0x0000000000000090  PEXP_NCB   0x00011F0000008090  NCB       
NPEI_BAR1_INDEX10              0x00000000000000A0  PEXP_NCB   0x00011F00000080A0  NCB       
NPEI_BAR1_INDEX11              0x00000000000000B0  PEXP_NCB   0x00011F00000080B0  NCB       
NPEI_BAR1_INDEX12              0x00000000000000C0  PEXP_NCB   0x00011F00000080C0  NCB       
NPEI_BAR1_INDEX13              0x00000000000000D0  PEXP_NCB   0x00011F00000080D0  NCB       
NPEI_BAR1_INDEX14              0x00000000000000E0  PEXP_NCB   0x00011F00000080E0  NCB       
NPEI_BAR1_INDEX15              0x00000000000000F0  PEXP_NCB   0x00011F00000080F0  NCB       
NPEI_BAR1_INDEX16              0x0000000000000100  PEXP_NCB   0x00011F0000008100  NCB       
NPEI_BAR1_INDEX17              0x0000000000000110  PEXP_NCB   0x00011F0000008110  NCB       
NPEI_BAR1_INDEX18              0x0000000000000120  PEXP_NCB   0x00011F0000008120  NCB       
NPEI_BAR1_INDEX19              0x0000000000000130  PEXP_NCB   0x00011F0000008130  NCB       
NPEI_BAR1_INDEX20              0x0000000000000140  PEXP_NCB   0x00011F0000008140  NCB       
NPEI_BAR1_INDEX21              0x0000000000000150  PEXP_NCB   0x00011F0000008150  NCB       
NPEI_BAR1_INDEX22              0x0000000000000160  PEXP_NCB   0x00011F0000008160  NCB       
NPEI_BAR1_INDEX23              0x0000000000000170  PEXP_NCB   0x00011F0000008170  NCB       
NPEI_BAR1_INDEX24              0x0000000000000180  PEXP_NCB   0x00011F0000008180  NCB       
NPEI_BAR1_INDEX25              0x0000000000000190  PEXP_NCB   0x00011F0000008190  NCB       
NPEI_BAR1_INDEX26              0x00000000000001A0  PEXP_NCB   0x00011F00000081A0  NCB       
NPEI_BAR1_INDEX27              0x00000000000001B0  PEXP_NCB   0x00011F00000081B0  NCB       
NPEI_BAR1_INDEX28              0x00000000000001C0  PEXP_NCB   0x00011F00000081C0  NCB       
NPEI_BAR1_INDEX29              0x00000000000001D0  PEXP_NCB   0x00011F00000081D0  NCB       
NPEI_BAR1_INDEX30              0x00000000000001E0  PEXP_NCB   0x00011F00000081E0  NCB       
NPEI_BAR1_INDEX31              0x00000000000001F0  PEXP_NCB   0x00011F00000081F0  NCB       
NPEI_BIST_STATUS               0x0000000000000580  PEXP_NCB   0x00011F0000008580  NCB       
NPEI_CTL_PORT0                 0x0000000000000250  PEXP_NCB   0x00011F0000008250  NCB       
NPEI_CTL_PORT1                 0x0000000000000260  PEXP_NCB   0x00011F0000008260  NCB       
NPEI_CTL_STATUS                0x0000000000000570  PEXP_NCB   0x00011F0000008570  NCB       
NPEI_CTL_STATUS2               0x0000000000003C00  PEXP_NCB   0x00011F000000BC00  NCB       
NPEI_DATA_OUT_CNT              0x00000000000005F0  PEXP_NCB   0x00011F00000085F0  NCB       
NPEI_DBG_DATA                  0x0000000000000510  PEXP_NCB   0x00011F0000008510  NCB       
NPEI_DBG_SELECT                0x0000000000000500  PEXP_NCB   0x00011F0000008500  NCB       
NPEI_DMA0_COUNTS               0x0000000000000450  PEXP_NCB   0x00011F0000008450  NCB       
NPEI_DMA0_DBELL                0x00000000000003B0  PEXP_NCB   0x00011F00000083B0  NCB       
NPEI_DMA0_IBUFF_SADDR          0x0000000000000400  PEXP_NCB   0x00011F0000008400  NCB       
NPEI_DMA0_NADDR                0x00000000000004A0  PEXP_NCB   0x00011F00000084A0  NCB       
NPEI_DMA1_COUNTS               0x0000000000000460  PEXP_NCB   0x00011F0000008460  NCB       
NPEI_DMA1_DBELL                0x00000000000003C0  PEXP_NCB   0x00011F00000083C0  NCB       
NPEI_DMA1_IBUFF_SADDR          0x0000000000000410  PEXP_NCB   0x00011F0000008410  NCB       
NPEI_DMA1_NADDR                0x00000000000004B0  PEXP_NCB   0x00011F00000084B0  NCB       
NPEI_DMA2_COUNTS               0x0000000000000470  PEXP_NCB   0x00011F0000008470  NCB       
NPEI_DMA2_DBELL                0x00000000000003D0  PEXP_NCB   0x00011F00000083D0  NCB       
NPEI_DMA2_IBUFF_SADDR          0x0000000000000420  PEXP_NCB   0x00011F0000008420  NCB       
NPEI_DMA2_NADDR                0x00000000000004C0  PEXP_NCB   0x00011F00000084C0  NCB       
NPEI_DMA3_COUNTS               0x0000000000000480  PEXP_NCB   0x00011F0000008480  NCB       
NPEI_DMA3_DBELL                0x00000000000003E0  PEXP_NCB   0x00011F00000083E0  NCB       
NPEI_DMA3_IBUFF_SADDR          0x0000000000000430  PEXP_NCB   0x00011F0000008430  NCB       
NPEI_DMA3_NADDR                0x00000000000004D0  PEXP_NCB   0x00011F00000084D0  NCB       
NPEI_DMA4_COUNTS               0x0000000000000490  PEXP_NCB   0x00011F0000008490  NCB       
NPEI_DMA4_DBELL                0x00000000000003F0  PEXP_NCB   0x00011F00000083F0  NCB       
NPEI_DMA4_IBUFF_SADDR          0x0000000000000440  PEXP_NCB   0x00011F0000008440  NCB       
NPEI_DMA4_NADDR                0x00000000000004E0  PEXP_NCB   0x00011F00000084E0  NCB       
NPEI_DMA0_INT_LEVEL            0x00000000000005C0  PEXP_NCB   0x00011F00000085C0  NCB       
NPEI_DMA1_INT_LEVEL            0x00000000000005D0  PEXP_NCB   0x00011F00000085D0  NCB       
NPEI_DMA_CNTS                  0x00000000000005E0  PEXP_NCB   0x00011F00000085E0  NCB       
NPEI_DMA_CONTROL               0x00000000000003A0  PEXP_NCB   0x00011F00000083A0  NCB       
NPEI_DMA_STATE1_P1             0x0000000000000680  PEXP_NCB   0x00011F0000008680  NCB       
NPEI_DMA_STATE2_P1             0x0000000000000690  PEXP_NCB   0x00011F0000008690  NCB       
NPEI_DMA_STATE3_P1             0x00000000000006A0  PEXP_NCB   0x00011F00000086A0  NCB       
NPEI_DMA_STATE4_P1             0x00000000000006B0  PEXP_NCB   0x00011F00000086B0  NCB       
NPEI_DMA_STATE5_P1             0x00000000000006C0  PEXP_NCB   0x00011F00000086C0  NCB       
NPEI_INT_ENB                   0x0000000000000540  PEXP_NCB   0x00011F0000008540  NCB       
NPEI_INT_ENB2                  0x0000000000003CD0  PEXP_NCB   0x00011F000000BCD0  NCB       
NPEI_INT_INFO                  0x0000000000000590  PEXP_NCB   0x00011F0000008590  NCB       
NPEI_INT_SUM                   0x0000000000000530  PEXP_NCB   0x00011F0000008530  NCB       
NPEI_LAST_WIN_RDATA0           0x0000000000000600  PEXP_NCB   0x00011F0000008600  NCB       
NPEI_LAST_WIN_RDATA1           0x0000000000000610  PEXP_NCB   0x00011F0000008610  NCB       
NPEI_MEM_ACCESS_CTL            0x00000000000004F0  PEXP_NCB   0x00011F00000084F0  NCB       
NPEI_MEM_ACCESS_SUBID12        0x0000000000000280  PEXP_NCB   0x00011F0000008280  NCB       
NPEI_MEM_ACCESS_SUBID13        0x0000000000000290  PEXP_NCB   0x00011F0000008290  NCB       
NPEI_MEM_ACCESS_SUBID14        0x00000000000002A0  PEXP_NCB   0x00011F00000082A0  NCB       
NPEI_MEM_ACCESS_SUBID15        0x00000000000002B0  PEXP_NCB   0x00011F00000082B0  NCB       
NPEI_MEM_ACCESS_SUBID16        0x00000000000002C0  PEXP_NCB   0x00011F00000082C0  NCB       
NPEI_MEM_ACCESS_SUBID17        0x00000000000002D0  PEXP_NCB   0x00011F00000082D0  NCB       
NPEI_MEM_ACCESS_SUBID18        0x00000000000002E0  PEXP_NCB   0x00011F00000082E0  NCB       
NPEI_MEM_ACCESS_SUBID19        0x00000000000002F0  PEXP_NCB   0x00011F00000082F0  NCB       
NPEI_MEM_ACCESS_SUBID20        0x0000000000000300  PEXP_NCB   0x00011F0000008300  NCB       
NPEI_MEM_ACCESS_SUBID21        0x0000000000000310  PEXP_NCB   0x00011F0000008310  NCB       
NPEI_MEM_ACCESS_SUBID22        0x0000000000000320  PEXP_NCB   0x00011F0000008320  NCB       
NPEI_MEM_ACCESS_SUBID23        0x0000000000000330  PEXP_NCB   0x00011F0000008330  NCB       
NPEI_MEM_ACCESS_SUBID24        0x0000000000000340  PEXP_NCB   0x00011F0000008340  NCB       
NPEI_MEM_ACCESS_SUBID25        0x0000000000000350  PEXP_NCB   0x00011F0000008350  NCB       
NPEI_MEM_ACCESS_SUBID26        0x0000000000000360  PEXP_NCB   0x00011F0000008360  NCB       
NPEI_MEM_ACCESS_SUBID27        0x0000000000000370  PEXP_NCB   0x00011F0000008370  NCB       
NPEI_MSI_ENB0                  0x0000000000003C50  PEXP_NCB   0x00011F000000BC50  NCB       
NPEI_MSI_ENB1                  0x0000000000003C60  PEXP_NCB   0x00011F000000BC60  NCB       
NPEI_MSI_ENB2                  0x0000000000003C70  PEXP_NCB   0x00011F000000BC70  NCB       
NPEI_MSI_ENB3                  0x0000000000003C80  PEXP_NCB   0x00011F000000BC80  NCB       
NPEI_MSI_RCV0                  0x0000000000003C10  PEXP_NCB   0x00011F000000BC10  NCB       
NPEI_MSI_RCV1                  0x0000000000003C20  PEXP_NCB   0x00011F000000BC20  NCB       
NPEI_MSI_RCV2                  0x0000000000003C30  PEXP_NCB   0x00011F000000BC30  NCB       
NPEI_MSI_RCV3                  0x0000000000003C40  PEXP_NCB   0x00011F000000BC40  NCB       
NPEI_MSI_RD_MAP                0x0000000000003CA0  PEXP_NCB   0x00011F000000BCA0  NCB       
NPEI_MSI_WR_MAP                0x0000000000003C90  PEXP_NCB   0x00011F000000BC90  NCB       
NPEI_PCIE_MSI_RCV              0x0000000000003CB0  PEXP_NCB   0x00011F000000BCB0  NCB       
NPEI_PCIE_MSI_RCV_B1           0x0000000000000650  PEXP_NCB   0x00011F0000008650  NCB       
NPEI_PCIE_MSI_RCV_B2           0x0000000000000660  PEXP_NCB   0x00011F0000008660  NCB       
NPEI_PCIE_MSI_RCV_B3           0x0000000000000670  PEXP_NCB   0x00011F0000008670  NCB       
NPEI_RSL_INT_BLOCKS            0x0000000000000520  PEXP_NCB   0x00011F0000008520  NCB       
NPEI_SCRATCH_1                 0x0000000000000270  PEXP_NCB   0x00011F0000008270  NCB       
NPEI_STATE1                    0x0000000000000620  PEXP_NCB   0x00011F0000008620  NCB       
NPEI_STATE2                    0x0000000000000630  PEXP_NCB   0x00011F0000008630  NCB       
NPEI_STATE3                    0x0000000000000640  PEXP_NCB   0x00011F0000008640  NCB       
NPEI_WINDOW_CTL                0x0000000000000380  PEXP_NCB   0x00011F0000008380  NCB       
NPEI_WIN_RD_ADDR               0x0000000000000210  PEXP       
NPEI_WIN_RD_DATA               0x0000000000000240  PEXP       
NPEI_WIN_WR_ADDR               0x0000000000000200  PEXP       
NPEI_WIN_WR_DATA               0x0000000000000220  PEXP       
NPEI_WIN_WR_MASK               0x0000000000000230  PEXP       
PCIEEP0_CFG000                 0x0000000000000000  PCICONFIGEP0 
PCIEEP0_CFG001                 0x0000000000000004  PCICONFIGEP0 
PCIEEP0_CFG002                 0x0000000000000008  PCICONFIGEP0 
PCIEEP0_CFG003                 0x000000000000000C  PCICONFIGEP0 
PCIEEP0_CFG004                 0x0000000000000010  PCICONFIGEP0 
PCIEEP0_CFG004_MASK            0x0000000080000010  PCICONFIGEP0 
PCIEEP0_CFG005                 0x0000000000000014  PCICONFIGEP0 
PCIEEP0_CFG005_MASK            0x0000000080000014  PCICONFIGEP0 
PCIEEP0_CFG006                 0x0000000000000018  PCICONFIGEP0 
PCIEEP0_CFG006_MASK            0x0000000080000018  PCICONFIGEP0 
PCIEEP0_CFG007                 0x000000000000001C  PCICONFIGEP0 
PCIEEP0_CFG007_MASK            0x000000008000001C  PCICONFIGEP0 
PCIEEP0_CFG008                 0x0000000000000020  PCICONFIGEP0 
PCIEEP0_CFG008_MASK            0x0000000080000020  PCICONFIGEP0 
PCIEEP0_CFG009                 0x0000000000000024  PCICONFIGEP0 
PCIEEP0_CFG009_MASK            0x0000000080000024  PCICONFIGEP0 
PCIEEP0_CFG010                 0x0000000000000028  PCICONFIGEP0 
PCIEEP0_CFG011                 0x000000000000002C  PCICONFIGEP0 
PCIEEP0_CFG012                 0x0000000000000030  PCICONFIGEP0 
PCIEEP0_CFG012_MASK            0x0000000080000030  PCICONFIGEP0 
PCIEEP0_CFG013                 0x0000000000000034  PCICONFIGEP0 
PCIEEP0_CFG015                 0x000000000000003C  PCICONFIGEP0 
PCIEEP0_CFG016                 0x0000000000000040  PCICONFIGEP0 
PCIEEP0_CFG017                 0x0000000000000044  PCICONFIGEP0 
PCIEEP0_CFG020                 0x0000000000000050  PCICONFIGEP0 
PCIEEP0_CFG021                 0x0000000000000054  PCICONFIGEP0 
PCIEEP0_CFG022                 0x0000000000000058  PCICONFIGEP0 
PCIEEP0_CFG023                 0x000000000000005C  PCICONFIGEP0 
PCIEEP0_CFG028                 0x0000000000000070  PCICONFIGEP0 
PCIEEP0_CFG029                 0x0000000000000074  PCICONFIGEP0 
PCIEEP0_CFG030                 0x0000000000000078  PCICONFIGEP0 
PCIEEP0_CFG031                 0x000000000000007C  PCICONFIGEP0 
PCIEEP0_CFG032                 0x0000000000000080  PCICONFIGEP0 
PCIEEP0_CFG033                 0x0000000000000084  PCICONFIGEP0 
PCIEEP0_CFG034                 0x0000000000000088  PCICONFIGEP0 
PCIEEP0_CFG037                 0x0000000000000094  PCICONFIGEP0 
PCIEEP0_CFG038                 0x0000000000000098  PCICONFIGEP0 
PCIEEP0_CFG039                 0x000000000000009C  PCICONFIGEP0 
PCIEEP0_CFG040                 0x00000000000000A0  PCICONFIGEP0 
PCIEEP0_CFG041                 0x00000000000000A4  PCICONFIGEP0 
PCIEEP0_CFG042                 0x00000000000000A8  PCICONFIGEP0 
PCIEEP0_CFG064                 0x0000000000000100  PCICONFIGEP0 
PCIEEP0_CFG065                 0x0000000000000104  PCICONFIGEP0 
PCIEEP0_CFG066                 0x0000000000000108  PCICONFIGEP0 
PCIEEP0_CFG067                 0x000000000000010C  PCICONFIGEP0 
PCIEEP0_CFG068                 0x0000000000000110  PCICONFIGEP0 
PCIEEP0_CFG069                 0x0000000000000114  PCICONFIGEP0 
PCIEEP0_CFG070                 0x0000000000000118  PCICONFIGEP0 
PCIEEP0_CFG071                 0x000000000000011C  PCICONFIGEP0 
PCIEEP0_CFG072                 0x0000000000000120  PCICONFIGEP0 
PCIEEP0_CFG073                 0x0000000000000124  PCICONFIGEP0 
PCIEEP0_CFG074                 0x0000000000000128  PCICONFIGEP0 
PCIEEP0_CFG448                 0x0000000000000700  PCICONFIGEP0 
PCIEEP0_CFG449                 0x0000000000000704  PCICONFIGEP0 
PCIEEP0_CFG450                 0x0000000000000708  PCICONFIGEP0 
PCIEEP0_CFG451                 0x000000000000070C  PCICONFIGEP0 
PCIEEP0_CFG452                 0x0000000000000710  PCICONFIGEP0 
PCIEEP0_CFG453                 0x0000000000000714  PCICONFIGEP0 
PCIEEP0_CFG454                 0x0000000000000718  PCICONFIGEP0 
PCIEEP0_CFG455                 0x000000000000071C  PCICONFIGEP0 
PCIEEP0_CFG456                 0x0000000000000720  PCICONFIGEP0 
PCIEEP0_CFG458                 0x0000000000000728  PCICONFIGEP0 
PCIEEP0_CFG459                 0x000000000000072C  PCICONFIGEP0 
PCIEEP0_CFG460                 0x0000000000000730  PCICONFIGEP0 
PCIEEP0_CFG461                 0x0000000000000734  PCICONFIGEP0 
PCIEEP0_CFG462                 0x0000000000000738  PCICONFIGEP0 
PCIEEP0_CFG463                 0x000000000000073C  PCICONFIGEP0 
PCIEEP0_CFG464                 0x0000000000000740  PCICONFIGEP0 
PCIEEP0_CFG465                 0x0000000000000744  PCICONFIGEP0 
PCIEEP0_CFG466                 0x0000000000000748  PCICONFIGEP0 
PCIEEP0_CFG467                 0x000000000000074C  PCICONFIGEP0 
PCIEEP0_CFG468                 0x0000000000000750  PCICONFIGEP0 
PCIEEP0_CFG490                 0x00000000000007A8  PCICONFIGEP0 
PCIEEP0_CFG491                 0x00000000000007AC  PCICONFIGEP0 
PCIEEP0_CFG492                 0x00000000000007B0  PCICONFIGEP0 
PCIEEP0_CFG516                 0x0000000000000810  PCICONFIGEP0 
PCIEEP0_CFG517                 0x0000000000000814  PCICONFIGEP0 
PCIERC0_CFG000                 0x0000000000000000  PCICONFIGRC0 
PCIERC0_CFG001                 0x0000000000000004  PCICONFIGRC0 
PCIERC0_CFG002                 0x0000000000000008  PCICONFIGRC0 
PCIERC0_CFG003                 0x000000000000000C  PCICONFIGRC0 
PCIERC0_CFG004                 0x0000000000000010  PCICONFIGRC0 
PCIERC0_CFG005                 0x0000000000000014  PCICONFIGRC0 
PCIERC0_CFG006                 0x0000000000000018  PCICONFIGRC0 
PCIERC0_CFG007                 0x000000000000001C  PCICONFIGRC0 
PCIERC0_CFG008                 0x0000000000000020  PCICONFIGRC0 
PCIERC0_CFG009                 0x0000000000000024  PCICONFIGRC0 
PCIERC0_CFG010                 0x0000000000000028  PCICONFIGRC0 
PCIERC0_CFG011                 0x000000000000002C  PCICONFIGRC0 
PCIERC0_CFG012                 0x0000000000000030  PCICONFIGRC0 
PCIERC0_CFG013                 0x0000000000000034  PCICONFIGRC0 
PCIERC0_CFG014                 0x0000000000000038  PCICONFIGRC0 
PCIERC0_CFG015                 0x000000000000003C  PCICONFIGRC0 
PCIERC0_CFG016                 0x0000000000000040  PCICONFIGRC0 
PCIERC0_CFG017                 0x0000000000000044  PCICONFIGRC0 
PCIERC0_CFG020                 0x0000000000000050  PCICONFIGRC0 
PCIERC0_CFG021                 0x0000000000000054  PCICONFIGRC0 
PCIERC0_CFG022                 0x0000000000000058  PCICONFIGRC0 
PCIERC0_CFG023                 0x000000000000005C  PCICONFIGRC0 
PCIERC0_CFG028                 0x0000000000000070  PCICONFIGRC0 
PCIERC0_CFG029                 0x0000000000000074  PCICONFIGRC0 
PCIERC0_CFG030                 0x0000000000000078  PCICONFIGRC0 
PCIERC0_CFG031                 0x000000000000007C  PCICONFIGRC0 
PCIERC0_CFG032                 0x0000000000000080  PCICONFIGRC0 
PCIERC0_CFG033                 0x0000000000000084  PCICONFIGRC0 
PCIERC0_CFG034                 0x0000000000000088  PCICONFIGRC0 
PCIERC0_CFG035                 0x000000000000008C  PCICONFIGRC0 
PCIERC0_CFG036                 0x0000000000000090  PCICONFIGRC0 
PCIERC0_CFG037                 0x0000000000000094  PCICONFIGRC0 
PCIERC0_CFG038                 0x0000000000000098  PCICONFIGRC0 
PCIERC0_CFG039                 0x000000000000009C  PCICONFIGRC0 
PCIERC0_CFG040                 0x00000000000000A0  PCICONFIGRC0 
PCIERC0_CFG041                 0x00000000000000A4  PCICONFIGRC0 
PCIERC0_CFG042                 0x00000000000000A8  PCICONFIGRC0 
PCIERC0_CFG064                 0x0000000000000100  PCICONFIGRC0 
PCIERC0_CFG065                 0x0000000000000104  PCICONFIGRC0 
PCIERC0_CFG066                 0x0000000000000108  PCICONFIGRC0 
PCIERC0_CFG067                 0x000000000000010C  PCICONFIGRC0 
PCIERC0_CFG068                 0x0000000000000110  PCICONFIGRC0 
PCIERC0_CFG069                 0x0000000000000114  PCICONFIGRC0 
PCIERC0_CFG070                 0x0000000000000118  PCICONFIGRC0 
PCIERC0_CFG071                 0x000000000000011C  PCICONFIGRC0 
PCIERC0_CFG072                 0x0000000000000120  PCICONFIGRC0 
PCIERC0_CFG073                 0x0000000000000124  PCICONFIGRC0 
PCIERC0_CFG074                 0x0000000000000128  PCICONFIGRC0 
PCIERC0_CFG075                 0x000000000000012C  PCICONFIGRC0 
PCIERC0_CFG076                 0x0000000000000130  PCICONFIGRC0 
PCIERC0_CFG077                 0x0000000000000134  PCICONFIGRC0 
PCIERC0_CFG448                 0x0000000000000700  PCICONFIGRC0 
PCIERC0_CFG449                 0x0000000000000704  PCICONFIGRC0 
PCIERC0_CFG450                 0x0000000000000708  PCICONFIGRC0 
PCIERC0_CFG451                 0x000000000000070C  PCICONFIGRC0 
PCIERC0_CFG452                 0x0000000000000710  PCICONFIGRC0 
PCIERC0_CFG453                 0x0000000000000714  PCICONFIGRC0 
PCIERC0_CFG454                 0x0000000000000718  PCICONFIGRC0 
PCIERC0_CFG455                 0x000000000000071C  PCICONFIGRC0 
PCIERC0_CFG456                 0x0000000000000720  PCICONFIGRC0 
PCIERC0_CFG458                 0x0000000000000728  PCICONFIGRC0 
PCIERC0_CFG459                 0x000000000000072C  PCICONFIGRC0 
PCIERC0_CFG460                 0x0000000000000730  PCICONFIGRC0 
PCIERC0_CFG461                 0x0000000000000734  PCICONFIGRC0 
PCIERC0_CFG462                 0x0000000000000738  PCICONFIGRC0 
PCIERC0_CFG463                 0x000000000000073C  PCICONFIGRC0 
PCIERC0_CFG464                 0x0000000000000740  PCICONFIGRC0 
PCIERC0_CFG465                 0x0000000000000744  PCICONFIGRC0 
PCIERC0_CFG466                 0x0000000000000748  PCICONFIGRC0 
PCIERC0_CFG467                 0x000000000000074C  PCICONFIGRC0 
PCIERC0_CFG468                 0x0000000000000750  PCICONFIGRC0 
PCIERC0_CFG490                 0x00000000000007A8  PCICONFIGRC0 
PCIERC0_CFG491                 0x00000000000007AC  PCICONFIGRC0 
PCIERC0_CFG492                 0x00000000000007B0  PCICONFIGRC0 
PCIERC0_CFG516                 0x0000000000000810  PCICONFIGRC0 
PCIERC0_CFG517                 0x0000000000000814  PCICONFIGRC0 
PCIERC1_CFG000                 0x0000000000000000  PCICONFIGRC1 
PCIERC1_CFG001                 0x0000000000000004  PCICONFIGRC1 
PCIERC1_CFG002                 0x0000000000000008  PCICONFIGRC1 
PCIERC1_CFG003                 0x000000000000000C  PCICONFIGRC1 
PCIERC1_CFG004                 0x0000000000000010  PCICONFIGRC1 
PCIERC1_CFG005                 0x0000000000000014  PCICONFIGRC1 
PCIERC1_CFG006                 0x0000000000000018  PCICONFIGRC1 
PCIERC1_CFG007                 0x000000000000001C  PCICONFIGRC1 
PCIERC1_CFG008                 0x0000000000000020  PCICONFIGRC1 
PCIERC1_CFG009                 0x0000000000000024  PCICONFIGRC1 
PCIERC1_CFG010                 0x0000000000000028  PCICONFIGRC1 
PCIERC1_CFG011                 0x000000000000002C  PCICONFIGRC1 
PCIERC1_CFG012                 0x0000000000000030  PCICONFIGRC1 
PCIERC1_CFG013                 0x0000000000000034  PCICONFIGRC1 
PCIERC1_CFG014                 0x0000000000000038  PCICONFIGRC1 
PCIERC1_CFG015                 0x000000000000003C  PCICONFIGRC1 
PCIERC1_CFG016                 0x0000000000000040  PCICONFIGRC1 
PCIERC1_CFG017                 0x0000000000000044  PCICONFIGRC1 
PCIERC1_CFG020                 0x0000000000000050  PCICONFIGRC1 
PCIERC1_CFG021                 0x0000000000000054  PCICONFIGRC1 
PCIERC1_CFG022                 0x0000000000000058  PCICONFIGRC1 
PCIERC1_CFG023                 0x000000000000005C  PCICONFIGRC1 
PCIERC1_CFG028                 0x0000000000000070  PCICONFIGRC1 
PCIERC1_CFG029                 0x0000000000000074  PCICONFIGRC1 
PCIERC1_CFG030                 0x0000000000000078  PCICONFIGRC1 
PCIERC1_CFG031                 0x000000000000007C  PCICONFIGRC1 
PCIERC1_CFG032                 0x0000000000000080  PCICONFIGRC1 
PCIERC1_CFG033                 0x0000000000000084  PCICONFIGRC1 
PCIERC1_CFG034                 0x0000000000000088  PCICONFIGRC1 
PCIERC1_CFG035                 0x000000000000008C  PCICONFIGRC1 
PCIERC1_CFG036                 0x0000000000000090  PCICONFIGRC1 
PCIERC1_CFG037                 0x0000000000000094  PCICONFIGRC1 
PCIERC1_CFG038                 0x0000000000000098  PCICONFIGRC1 
PCIERC1_CFG039                 0x000000000000009C  PCICONFIGRC1 
PCIERC1_CFG040                 0x00000000000000A0  PCICONFIGRC1 
PCIERC1_CFG041                 0x00000000000000A4  PCICONFIGRC1 
PCIERC1_CFG042                 0x00000000000000A8  PCICONFIGRC1 
PCIERC1_CFG064                 0x0000000000000100  PCICONFIGRC1 
PCIERC1_CFG065                 0x0000000000000104  PCICONFIGRC1 
PCIERC1_CFG066                 0x0000000000000108  PCICONFIGRC1 
PCIERC1_CFG067                 0x000000000000010C  PCICONFIGRC1 
PCIERC1_CFG068                 0x0000000000000110  PCICONFIGRC1 
PCIERC1_CFG069                 0x0000000000000114  PCICONFIGRC1 
PCIERC1_CFG070                 0x0000000000000118  PCICONFIGRC1 
PCIERC1_CFG071                 0x000000000000011C  PCICONFIGRC1 
PCIERC1_CFG072                 0x0000000000000120  PCICONFIGRC1 
PCIERC1_CFG073                 0x0000000000000124  PCICONFIGRC1 
PCIERC1_CFG074                 0x0000000000000128  PCICONFIGRC1 
PCIERC1_CFG075                 0x000000000000012C  PCICONFIGRC1 
PCIERC1_CFG076                 0x0000000000000130  PCICONFIGRC1 
PCIERC1_CFG077                 0x0000000000000134  PCICONFIGRC1 
PCIERC1_CFG448                 0x0000000000000700  PCICONFIGRC1 
PCIERC1_CFG449                 0x0000000000000704  PCICONFIGRC1 
PCIERC1_CFG450                 0x0000000000000708  PCICONFIGRC1 
PCIERC1_CFG451                 0x000000000000070C  PCICONFIGRC1 
PCIERC1_CFG452                 0x0000000000000710  PCICONFIGRC1 
PCIERC1_CFG453                 0x0000000000000714  PCICONFIGRC1 
PCIERC1_CFG454                 0x0000000000000718  PCICONFIGRC1 
PCIERC1_CFG455                 0x000000000000071C  PCICONFIGRC1 
PCIERC1_CFG456                 0x0000000000000720  PCICONFIGRC1 
PCIERC1_CFG458                 0x0000000000000728  PCICONFIGRC1 
PCIERC1_CFG459                 0x000000000000072C  PCICONFIGRC1 
PCIERC1_CFG460                 0x0000000000000730  PCICONFIGRC1 
PCIERC1_CFG461                 0x0000000000000734  PCICONFIGRC1 
PCIERC1_CFG462                 0x0000000000000738  PCICONFIGRC1 
PCIERC1_CFG463                 0x000000000000073C  PCICONFIGRC1 
PCIERC1_CFG464                 0x0000000000000740  PCICONFIGRC1 
PCIERC1_CFG465                 0x0000000000000744  PCICONFIGRC1 
PCIERC1_CFG466                 0x0000000000000748  PCICONFIGRC1 
PCIERC1_CFG467                 0x000000000000074C  PCICONFIGRC1 
PCIERC1_CFG468                 0x0000000000000750  PCICONFIGRC1 
PCIERC1_CFG490                 0x00000000000007A8  PCICONFIGRC1 
PCIERC1_CFG491                 0x00000000000007AC  PCICONFIGRC1 
PCIERC1_CFG492                 0x00000000000007B0  PCICONFIGRC1 
PCIERC1_CFG516                 0x0000000000000810  PCICONFIGRC1 
PCIERC1_CFG517                 0x0000000000000814  PCICONFIGRC1 
PCS0_AN000_ADV_REG             0x00011800B0001010  RSL        
PCS0_AN000_EXT_ST_REG          0x00011800B0001028  RSL        
PCS0_AN000_LP_ABIL_REG         0x00011800B0001018  RSL        
PCS0_AN000_RESULTS_REG         0x00011800B0001020  RSL        
PCS0_AN001_ADV_REG             0x00011800B0001410  RSL        
PCS0_AN001_EXT_ST_REG          0x00011800B0001428  RSL        
PCS0_AN001_LP_ABIL_REG         0x00011800B0001418  RSL        
PCS0_AN001_RESULTS_REG         0x00011800B0001420  RSL        
PCS0_AN002_ADV_REG             0x00011800B0001810  RSL        
PCS0_AN002_EXT_ST_REG          0x00011800B0001828  RSL        
PCS0_AN002_LP_ABIL_REG         0x00011800B0001818  RSL        
PCS0_AN002_RESULTS_REG         0x00011800B0001820  RSL        
PCS0_AN003_ADV_REG             0x00011800B0001C10  RSL        
PCS0_AN003_EXT_ST_REG          0x00011800B0001C28  RSL        
PCS0_AN003_LP_ABIL_REG         0x00011800B0001C18  RSL        
PCS0_AN003_RESULTS_REG         0x00011800B0001C20  RSL        
PCS0_INT000_EN_REG             0x00011800B0001088  RSL        
PCS0_INT000_REG                0x00011800B0001080  RSL        
PCS0_INT001_EN_REG             0x00011800B0001488  RSL        
PCS0_INT001_REG                0x00011800B0001480  RSL        
PCS0_INT002_EN_REG             0x00011800B0001888  RSL        
PCS0_INT002_REG                0x00011800B0001880  RSL        
PCS0_INT003_EN_REG             0x00011800B0001C88  RSL        
PCS0_INT003_REG                0x00011800B0001C80  RSL        
PCS0_LINK000_TIMER_COUNT_REG   0x00011800B0001040  RSL        
PCS0_LINK001_TIMER_COUNT_REG   0x00011800B0001440  RSL        
PCS0_LINK002_TIMER_COUNT_REG   0x00011800B0001840  RSL        
PCS0_LINK003_TIMER_COUNT_REG   0x00011800B0001C40  RSL        
PCS0_LOG_ANL000_REG            0x00011800B0001090  RSL        
PCS0_LOG_ANL001_REG            0x00011800B0001490  RSL        
PCS0_LOG_ANL002_REG            0x00011800B0001890  RSL        
PCS0_LOG_ANL003_REG            0x00011800B0001C90  RSL        
PCS0_MISC000_CTL_REG           0x00011800B0001078  RSL        
PCS0_MISC001_CTL_REG           0x00011800B0001478  RSL        
PCS0_MISC002_CTL_REG           0x00011800B0001878  RSL        
PCS0_MISC003_CTL_REG           0x00011800B0001C78  RSL        
PCS0_MR000_CONTROL_REG         0x00011800B0001000  RSL        
PCS0_MR000_STATUS_REG          0x00011800B0001008  RSL        
PCS0_MR001_CONTROL_REG         0x00011800B0001400  RSL        
PCS0_MR001_STATUS_REG          0x00011800B0001408  RSL        
PCS0_MR002_CONTROL_REG         0x00011800B0001800  RSL        
PCS0_MR002_STATUS_REG          0x00011800B0001808  RSL        
PCS0_MR003_CONTROL_REG         0x00011800B0001C00  RSL        
PCS0_MR003_STATUS_REG          0x00011800B0001C08  RSL        
PCS0_RX000_STATES_REG          0x00011800B0001058  RSL        
PCS0_RX000_SYNC_REG            0x00011800B0001050  RSL        
PCS0_RX001_STATES_REG          0x00011800B0001458  RSL        
PCS0_RX001_SYNC_REG            0x00011800B0001450  RSL        
PCS0_RX002_STATES_REG          0x00011800B0001858  RSL        
PCS0_RX002_SYNC_REG            0x00011800B0001850  RSL        
PCS0_RX003_STATES_REG          0x00011800B0001C58  RSL        
PCS0_RX003_SYNC_REG            0x00011800B0001C50  RSL        
PCS0_SGM000_AN_ADV_REG         0x00011800B0001068  RSL        
PCS0_SGM000_LP_ADV_REG         0x00011800B0001070  RSL        
PCS0_SGM001_AN_ADV_REG         0x00011800B0001468  RSL        
PCS0_SGM001_LP_ADV_REG         0x00011800B0001470  RSL        
PCS0_SGM002_AN_ADV_REG         0x00011800B0001868  RSL        
PCS0_SGM002_LP_ADV_REG         0x00011800B0001870  RSL        
PCS0_SGM003_AN_ADV_REG         0x00011800B0001C68  RSL        
PCS0_SGM003_LP_ADV_REG         0x00011800B0001C70  RSL        
PCS0_TX000_STATES_REG          0x00011800B0001060  RSL        
PCS0_TX001_STATES_REG          0x00011800B0001460  RSL        
PCS0_TX002_STATES_REG          0x00011800B0001860  RSL        
PCS0_TX003_STATES_REG          0x00011800B0001C60  RSL        
PCS0_TX_RX000_POLARITY_REG     0x00011800B0001048  RSL        
PCS0_TX_RX001_POLARITY_REG     0x00011800B0001448  RSL        
PCS0_TX_RX002_POLARITY_REG     0x00011800B0001848  RSL        
PCS0_TX_RX003_POLARITY_REG     0x00011800B0001C48  RSL        
PCS1_AN000_ADV_REG             0x00011800B8001010  RSL        
PCS1_AN000_EXT_ST_REG          0x00011800B8001028  RSL        
PCS1_AN000_LP_ABIL_REG         0x00011800B8001018  RSL        
PCS1_AN000_RESULTS_REG         0x00011800B8001020  RSL        
PCS1_AN001_ADV_REG             0x00011800B8001410  RSL        
PCS1_AN001_EXT_ST_REG          0x00011800B8001428  RSL        
PCS1_AN001_LP_ABIL_REG         0x00011800B8001418  RSL        
PCS1_AN001_RESULTS_REG         0x00011800B8001420  RSL        
PCS1_AN002_ADV_REG             0x00011800B8001810  RSL        
PCS1_AN002_EXT_ST_REG          0x00011800B8001828  RSL        
PCS1_AN002_LP_ABIL_REG         0x00011800B8001818  RSL        
PCS1_AN002_RESULTS_REG         0x00011800B8001820  RSL        
PCS1_AN003_ADV_REG             0x00011800B8001C10  RSL        
PCS1_AN003_EXT_ST_REG          0x00011800B8001C28  RSL        
PCS1_AN003_LP_ABIL_REG         0x00011800B8001C18  RSL        
PCS1_AN003_RESULTS_REG         0x00011800B8001C20  RSL        
PCS1_INT000_EN_REG             0x00011800B8001088  RSL        
PCS1_INT000_REG                0x00011800B8001080  RSL        
PCS1_INT001_EN_REG             0x00011800B8001488  RSL        
PCS1_INT001_REG                0x00011800B8001480  RSL        
PCS1_INT002_EN_REG             0x00011800B8001888  RSL        
PCS1_INT002_REG                0x00011800B8001880  RSL        
PCS1_INT003_EN_REG             0x00011800B8001C88  RSL        
PCS1_INT003_REG                0x00011800B8001C80  RSL        
PCS1_LINK000_TIMER_COUNT_REG   0x00011800B8001040  RSL        
PCS1_LINK001_TIMER_COUNT_REG   0x00011800B8001440  RSL        
PCS1_LINK002_TIMER_COUNT_REG   0x00011800B8001840  RSL        
PCS1_LINK003_TIMER_COUNT_REG   0x00011800B8001C40  RSL        
PCS1_LOG_ANL000_REG            0x00011800B8001090  RSL        
PCS1_LOG_ANL001_REG            0x00011800B8001490  RSL        
PCS1_LOG_ANL002_REG            0x00011800B8001890  RSL        
PCS1_LOG_ANL003_REG            0x00011800B8001C90  RSL        
PCS1_MISC000_CTL_REG           0x00011800B8001078  RSL        
PCS1_MISC001_CTL_REG           0x00011800B8001478  RSL        
PCS1_MISC002_CTL_REG           0x00011800B8001878  RSL        
PCS1_MISC003_CTL_REG           0x00011800B8001C78  RSL        
PCS1_MR000_CONTROL_REG         0x00011800B8001000  RSL        
PCS1_MR000_STATUS_REG          0x00011800B8001008  RSL        
PCS1_MR001_CONTROL_REG         0x00011800B8001400  RSL        
PCS1_MR001_STATUS_REG          0x00011800B8001408  RSL        
PCS1_MR002_CONTROL_REG         0x00011800B8001800  RSL        
PCS1_MR002_STATUS_REG          0x00011800B8001808  RSL        
PCS1_MR003_CONTROL_REG         0x00011800B8001C00  RSL        
PCS1_MR003_STATUS_REG          0x00011800B8001C08  RSL        
PCS1_RX000_STATES_REG          0x00011800B8001058  RSL        
PCS1_RX000_SYNC_REG            0x00011800B8001050  RSL        
PCS1_RX001_STATES_REG          0x00011800B8001458  RSL        
PCS1_RX001_SYNC_REG            0x00011800B8001450  RSL        
PCS1_RX002_STATES_REG          0x00011800B8001858  RSL        
PCS1_RX002_SYNC_REG            0x00011800B8001850  RSL        
PCS1_RX003_STATES_REG          0x00011800B8001C58  RSL        
PCS1_RX003_SYNC_REG            0x00011800B8001C50  RSL        
PCS1_SGM000_AN_ADV_REG         0x00011800B8001068  RSL        
PCS1_SGM000_LP_ADV_REG         0x00011800B8001070  RSL        
PCS1_SGM001_AN_ADV_REG         0x00011800B8001468  RSL        
PCS1_SGM001_LP_ADV_REG         0x00011800B8001470  RSL        
PCS1_SGM002_AN_ADV_REG         0x00011800B8001868  RSL        
PCS1_SGM002_LP_ADV_REG         0x00011800B8001870  RSL        
PCS1_SGM003_AN_ADV_REG         0x00011800B8001C68  RSL        
PCS1_SGM003_LP_ADV_REG         0x00011800B8001C70  RSL        
PCS1_TX000_STATES_REG          0x00011800B8001060  RSL        
PCS1_TX001_STATES_REG          0x00011800B8001460  RSL        
PCS1_TX002_STATES_REG          0x00011800B8001860  RSL        
PCS1_TX003_STATES_REG          0x00011800B8001C60  RSL        
PCS1_TX_RX000_POLARITY_REG     0x00011800B8001048  RSL        
PCS1_TX_RX001_POLARITY_REG     0x00011800B8001448  RSL        
PCS1_TX_RX002_POLARITY_REG     0x00011800B8001848  RSL        
PCS1_TX_RX003_POLARITY_REG     0x00011800B8001C48  RSL        
PCSX0_10GBX_STATUS_REG         0x00011800B0000828  RSL        
PCSX0_BIST_STATUS_REG          0x00011800B0000870  RSL        
PCSX0_BIT_LOCK_STATUS_REG      0x00011800B0000850  RSL        
PCSX0_CONTROL1_REG             0x00011800B0000800  RSL        
PCSX0_CONTROL2_REG             0x00011800B0000818  RSL        
PCSX0_INT_EN_REG               0x00011800B0000860  RSL        
PCSX0_INT_REG                  0x00011800B0000858  RSL        
PCSX0_LOG_ANL_REG              0x00011800B0000868  RSL        
PCSX0_MISC_CTL_REG             0x00011800B0000848  RSL        
PCSX0_RX_SYNC_STATES_REG       0x00011800B0000838  RSL        
PCSX0_SPD_ABIL_REG             0x00011800B0000810  RSL        
PCSX0_STATUS1_REG              0x00011800B0000808  RSL        
PCSX0_STATUS2_REG              0x00011800B0000820  RSL        
PCSX0_TX_RX_POLARITY_REG       0x00011800B0000840  RSL        
PCSX0_TX_RX_STATES_REG         0x00011800B0000830  RSL        
PCSX1_10GBX_STATUS_REG         0x00011800B8000828  RSL        
PCSX1_BIST_STATUS_REG          0x00011800B8000870  RSL        
PCSX1_BIT_LOCK_STATUS_REG      0x00011800B8000850  RSL        
PCSX1_CONTROL1_REG             0x00011800B8000800  RSL        
PCSX1_CONTROL2_REG             0x00011800B8000818  RSL        
PCSX1_INT_EN_REG               0x00011800B8000860  RSL        
PCSX1_INT_REG                  0x00011800B8000858  RSL        
PCSX1_LOG_ANL_REG              0x00011800B8000868  RSL        
PCSX1_MISC_CTL_REG             0x00011800B8000848  RSL        
PCSX1_RX_SYNC_STATES_REG       0x00011800B8000838  RSL        
PCSX1_SPD_ABIL_REG             0x00011800B8000810  RSL        
PCSX1_STATUS1_REG              0x00011800B8000808  RSL        
PCSX1_STATUS2_REG              0x00011800B8000820  RSL        
PCSX1_TX_RX_POLARITY_REG       0x00011800B8000840  RSL        
PCSX1_TX_RX_STATES_REG         0x00011800B8000830  RSL        
PESC0_BIST_STATUS              0x00011800C8000018  RSL        
PESC0_BIST_STATUS2             0x00011800C8000418  RSL        
PESC0_CFG_RD                   0x00011800C8000030  RSL        
PESC0_CFG_WR                   0x00011800C8000028  RSL        
PESC0_CPL_LUT_VALID            0x00011800C8000098  RSL        
PESC0_CTL_STATUS               0x00011800C8000000  RSL        
PESC0_CTL_STATUS2              0x00011800C8000400  RSL        
PESC0_DBG_INFO                 0x00011800C8000008  RSL        
PESC0_DBG_INFO_EN              0x00011800C80000A0  RSL        
PESC0_DIAG_STATUS              0x00011800C8000020  RSL        
PESC0_P2N_BAR0_START           0x00011800C8000080  RSL        
PESC0_P2N_BAR1_START           0x00011800C8000088  RSL        
PESC0_P2N_BAR2_START           0x00011800C8000090  RSL        
PESC0_P2P_BAR000_END           0x00011800C8000048  RSL        
PESC0_P2P_BAR000_START         0x00011800C8000040  RSL        
PESC0_P2P_BAR001_END           0x00011800C8000058  RSL        
PESC0_P2P_BAR001_START         0x00011800C8000050  RSL        
PESC0_P2P_BAR002_END           0x00011800C8000068  RSL        
PESC0_P2P_BAR002_START         0x00011800C8000060  RSL        
PESC0_P2P_BAR003_END           0x00011800C8000078  RSL        
PESC0_P2P_BAR003_START         0x00011800C8000070  RSL        
PESC0_TLP_CREDITS              0x00011800C8000038  RSL        
PESC1_BIST_STATUS              0x00011800D0000018  RSL        
PESC1_BIST_STATUS2             0x00011800D0000418  RSL        
PESC1_CFG_RD                   0x00011800D0000030  RSL        
PESC1_CFG_WR                   0x00011800D0000028  RSL        
PESC1_CPL_LUT_VALID            0x00011800D0000098  RSL        
PESC1_CTL_STATUS               0x00011800D0000000  RSL        
PESC1_CTL_STATUS2              0x00011800D0000400  RSL        
PESC1_DBG_INFO                 0x00011800D0000008  RSL        
PESC1_DBG_INFO_EN              0x00011800D00000A0  RSL        
PESC1_DIAG_STATUS              0x00011800D0000020  RSL        
PESC1_P2N_BAR0_START           0x00011800D0000080  RSL        
PESC1_P2N_BAR1_START           0x00011800D0000088  RSL        
PESC1_P2N_BAR2_START           0x00011800D0000090  RSL        
PESC1_P2P_BAR000_END           0x00011800D0000048  RSL        
PESC1_P2P_BAR000_START         0x00011800D0000040  RSL        
PESC1_P2P_BAR001_END           0x00011800D0000058  RSL        
PESC1_P2P_BAR001_START         0x00011800D0000050  RSL        
PESC1_P2P_BAR002_END           0x00011800D0000068  RSL        
PESC1_P2P_BAR002_START         0x00011800D0000060  RSL        
PESC1_P2P_BAR003_END           0x00011800D0000078  RSL        
PESC1_P2P_BAR003_START         0x00011800D0000070  RSL        
PESC1_TLP_CREDITS              0x00011800D0000038  RSL        
PIP_BCK_PRS                    0x00011800A0000038  RSL        
PIP_BIST_STATUS                0x00011800A0000000  RSL        
PIP_DEC_IPSEC0                 0x00011800A0000080  RSL        
PIP_DEC_IPSEC1                 0x00011800A0000088  RSL        
PIP_DEC_IPSEC2                 0x00011800A0000090  RSL        
PIP_DEC_IPSEC3                 0x00011800A0000098  RSL        
PIP_FRM_LEN_CHK0               0x00011800A0000180  RSL        
PIP_FRM_LEN_CHK1               0x00011800A0000188  RSL        
PIP_GBL_CFG                    0x00011800A0000028  RSL        
PIP_GBL_CTL                    0x00011800A0000020  RSL        
PIP_INT_EN                     0x00011800A0000010  RSL        
PIP_INT_REG                    0x00011800A0000008  RSL        
PIP_IP_OFFSET                  0x00011800A0000060  RSL        
PIP_PRT_CFG0                   0x00011800A0000200  RSL        
PIP_PRT_CFG1                   0x00011800A0000208  RSL        
PIP_PRT_CFG2                   0x00011800A0000210  RSL        
PIP_PRT_CFG3                   0x00011800A0000218  RSL        
PIP_PRT_CFG16                  0x00011800A0000280  RSL        
PIP_PRT_CFG17                  0x00011800A0000288  RSL        
PIP_PRT_CFG18                  0x00011800A0000290  RSL        
PIP_PRT_CFG19                  0x00011800A0000298  RSL        
PIP_PRT_CFG36                  0x00011800A0000320  RSL        
PIP_PRT_CFG37                  0x00011800A0000328  RSL        
PIP_PRT_CFG38                  0x00011800A0000330  RSL        
PIP_PRT_CFG39                  0x00011800A0000338  RSL        
PIP_PRT_TAG0                   0x00011800A0000400  RSL        
PIP_PRT_TAG1                   0x00011800A0000408  RSL        
PIP_PRT_TAG2                   0x00011800A0000410  RSL        
PIP_PRT_TAG3                   0x00011800A0000418  RSL        
PIP_PRT_TAG16                  0x00011800A0000480  RSL        
PIP_PRT_TAG17                  0x00011800A0000488  RSL        
PIP_PRT_TAG18                  0x00011800A0000490  RSL        
PIP_PRT_TAG19                  0x00011800A0000498  RSL        
PIP_PRT_TAG36                  0x00011800A0000520  RSL        
PIP_PRT_TAG37                  0x00011800A0000528  RSL        
PIP_PRT_TAG38                  0x00011800A0000530  RSL        
PIP_PRT_TAG39                  0x00011800A0000538  RSL        
PIP_QOS_DIFF0                  0x00011800A0000600  RSL        
PIP_QOS_DIFF1                  0x00011800A0000608  RSL        
PIP_QOS_DIFF2                  0x00011800A0000610  RSL        
PIP_QOS_DIFF3                  0x00011800A0000618  RSL        
PIP_QOS_DIFF4                  0x00011800A0000620  RSL        
PIP_QOS_DIFF5                  0x00011800A0000628  RSL        
PIP_QOS_DIFF6                  0x00011800A0000630  RSL        
PIP_QOS_DIFF7                  0x00011800A0000638  RSL        
PIP_QOS_DIFF8                  0x00011800A0000640  RSL        
PIP_QOS_DIFF9                  0x00011800A0000648  RSL        
PIP_QOS_DIFF10                 0x00011800A0000650  RSL        
PIP_QOS_DIFF11                 0x00011800A0000658  RSL        
PIP_QOS_DIFF12                 0x00011800A0000660  RSL        
PIP_QOS_DIFF13                 0x00011800A0000668  RSL        
PIP_QOS_DIFF14                 0x00011800A0000670  RSL        
PIP_QOS_DIFF15                 0x00011800A0000678  RSL        
PIP_QOS_DIFF16                 0x00011800A0000680  RSL        
PIP_QOS_DIFF17                 0x00011800A0000688  RSL        
PIP_QOS_DIFF18                 0x00011800A0000690  RSL        
PIP_QOS_DIFF19                 0x00011800A0000698  RSL        
PIP_QOS_DIFF20                 0x00011800A00006A0  RSL        
PIP_QOS_DIFF21                 0x00011800A00006A8  RSL        
PIP_QOS_DIFF22                 0x00011800A00006B0  RSL        
PIP_QOS_DIFF23                 0x00011800A00006B8  RSL        
PIP_QOS_DIFF24                 0x00011800A00006C0  RSL        
PIP_QOS_DIFF25                 0x00011800A00006C8  RSL        
PIP_QOS_DIFF26                 0x00011800A00006D0  RSL        
PIP_QOS_DIFF27                 0x00011800A00006D8  RSL        
PIP_QOS_DIFF28                 0x00011800A00006E0  RSL        
PIP_QOS_DIFF29                 0x00011800A00006E8  RSL        
PIP_QOS_DIFF30                 0x00011800A00006F0  RSL        
PIP_QOS_DIFF31                 0x00011800A00006F8  RSL        
PIP_QOS_DIFF32                 0x00011800A0000700  RSL        
PIP_QOS_DIFF33                 0x00011800A0000708  RSL        
PIP_QOS_DIFF34                 0x00011800A0000710  RSL        
PIP_QOS_DIFF35                 0x00011800A0000718  RSL        
PIP_QOS_DIFF36                 0x00011800A0000720  RSL        
PIP_QOS_DIFF37                 0x00011800A0000728  RSL        
PIP_QOS_DIFF38                 0x00011800A0000730  RSL        
PIP_QOS_DIFF39                 0x00011800A0000738  RSL        
PIP_QOS_DIFF40                 0x00011800A0000740  RSL        
PIP_QOS_DIFF41                 0x00011800A0000748  RSL        
PIP_QOS_DIFF42                 0x00011800A0000750  RSL        
PIP_QOS_DIFF43                 0x00011800A0000758  RSL        
PIP_QOS_DIFF44                 0x00011800A0000760  RSL        
PIP_QOS_DIFF45                 0x00011800A0000768  RSL        
PIP_QOS_DIFF46                 0x00011800A0000770  RSL        
PIP_QOS_DIFF47                 0x00011800A0000778  RSL        
PIP_QOS_DIFF48                 0x00011800A0000780  RSL        
PIP_QOS_DIFF49                 0x00011800A0000788  RSL        
PIP_QOS_DIFF50                 0x00011800A0000790  RSL        
PIP_QOS_DIFF51                 0x00011800A0000798  RSL        
PIP_QOS_DIFF52                 0x00011800A00007A0  RSL        
PIP_QOS_DIFF53                 0x00011800A00007A8  RSL        
PIP_QOS_DIFF54                 0x00011800A00007B0  RSL        
PIP_QOS_DIFF55                 0x00011800A00007B8  RSL        
PIP_QOS_DIFF56                 0x00011800A00007C0  RSL        
PIP_QOS_DIFF57                 0x00011800A00007C8  RSL        
PIP_QOS_DIFF58                 0x00011800A00007D0  RSL        
PIP_QOS_DIFF59                 0x00011800A00007D8  RSL        
PIP_QOS_DIFF60                 0x00011800A00007E0  RSL        
PIP_QOS_DIFF61                 0x00011800A00007E8  RSL        
PIP_QOS_DIFF62                 0x00011800A00007F0  RSL        
PIP_QOS_DIFF63                 0x00011800A00007F8  RSL        
PIP_QOS_VLAN0                  0x00011800A00000C0  RSL        
PIP_QOS_VLAN1                  0x00011800A00000C8  RSL        
PIP_QOS_VLAN2                  0x00011800A00000D0  RSL        
PIP_QOS_VLAN3                  0x00011800A00000D8  RSL        
PIP_QOS_VLAN4                  0x00011800A00000E0  RSL        
PIP_QOS_VLAN5                  0x00011800A00000E8  RSL        
PIP_QOS_VLAN6                  0x00011800A00000F0  RSL        
PIP_QOS_VLAN7                  0x00011800A00000F8  RSL        
PIP_QOS_WATCH0                 0x00011800A0000100  RSL        
PIP_QOS_WATCH1                 0x00011800A0000108  RSL        
PIP_QOS_WATCH2                 0x00011800A0000110  RSL        
PIP_QOS_WATCH3                 0x00011800A0000118  RSL        
PIP_QOS_WATCH4                 0x00011800A0000120  RSL        
PIP_QOS_WATCH5                 0x00011800A0000128  RSL        
PIP_QOS_WATCH6                 0x00011800A0000130  RSL        
PIP_QOS_WATCH7                 0x00011800A0000138  RSL        
PIP_RAW_WORD                   0x00011800A00000B0  RSL        
PIP_SFT_RST                    0x00011800A0000030  RSL        
PIP_STAT0_PRT0                 0x00011800A0000800  RSL        
PIP_STAT0_PRT1                 0x00011800A0000850  RSL        
PIP_STAT0_PRT2                 0x00011800A00008A0  RSL        
PIP_STAT0_PRT3                 0x00011800A00008F0  RSL        
PIP_STAT0_PRT16                0x00011800A0000D00  RSL        
PIP_STAT0_PRT17                0x00011800A0000D50  RSL        
PIP_STAT0_PRT18                0x00011800A0000DA0  RSL        
PIP_STAT0_PRT19                0x00011800A0000DF0  RSL        
PIP_STAT0_PRT36                0x00011800A0001340  RSL        
PIP_STAT0_PRT37                0x00011800A0001390  RSL        
PIP_STAT0_PRT38                0x00011800A00013E0  RSL        
PIP_STAT0_PRT39                0x00011800A0001430  RSL        
PIP_STAT10_PRT0                0x00011800A0001480  RSL        
PIP_STAT10_PRT1                0x00011800A0001490  RSL        
PIP_STAT10_PRT2                0x00011800A00014A0  RSL        
PIP_STAT10_PRT3                0x00011800A00014B0  RSL        
PIP_STAT10_PRT16               0x00011800A0001580  RSL        
PIP_STAT10_PRT17               0x00011800A0001590  RSL        
PIP_STAT10_PRT18               0x00011800A00015A0  RSL        
PIP_STAT10_PRT19               0x00011800A00015B0  RSL        
PIP_STAT10_PRT36               0x00011800A00016C0  RSL        
PIP_STAT10_PRT37               0x00011800A00016D0  RSL        
PIP_STAT10_PRT38               0x00011800A00016E0  RSL        
PIP_STAT10_PRT39               0x00011800A00016F0  RSL        
PIP_STAT11_PRT0                0x00011800A0001488  RSL        
PIP_STAT11_PRT1                0x00011800A0001498  RSL        
PIP_STAT11_PRT2                0x00011800A00014A8  RSL        
PIP_STAT11_PRT3                0x00011800A00014B8  RSL        
PIP_STAT11_PRT16               0x00011800A0001588  RSL        
PIP_STAT11_PRT17               0x00011800A0001598  RSL        
PIP_STAT11_PRT18               0x00011800A00015A8  RSL        
PIP_STAT11_PRT19               0x00011800A00015B8  RSL        
PIP_STAT11_PRT36               0x00011800A00016C8  RSL        
PIP_STAT11_PRT37               0x00011800A00016D8  RSL        
PIP_STAT11_PRT38               0x00011800A00016E8  RSL        
PIP_STAT11_PRT39               0x00011800A00016F8  RSL        
PIP_STAT1_PRT0                 0x00011800A0000808  RSL        
PIP_STAT1_PRT1                 0x00011800A0000858  RSL        
PIP_STAT1_PRT2                 0x00011800A00008A8  RSL        
PIP_STAT1_PRT3                 0x00011800A00008F8  RSL        
PIP_STAT1_PRT16                0x00011800A0000D08  RSL        
PIP_STAT1_PRT17                0x00011800A0000D58  RSL        
PIP_STAT1_PRT18                0x00011800A0000DA8  RSL        
PIP_STAT1_PRT19                0x00011800A0000DF8  RSL        
PIP_STAT1_PRT36                0x00011800A0001348  RSL        
PIP_STAT1_PRT37                0x00011800A0001398  RSL        
PIP_STAT1_PRT38                0x00011800A00013E8  RSL        
PIP_STAT1_PRT39                0x00011800A0001438  RSL        
PIP_STAT2_PRT0                 0x00011800A0000810  RSL        
PIP_STAT2_PRT1                 0x00011800A0000860  RSL        
PIP_STAT2_PRT2                 0x00011800A00008B0  RSL        
PIP_STAT2_PRT3                 0x00011800A0000900  RSL        
PIP_STAT2_PRT16                0x00011800A0000D10  RSL        
PIP_STAT2_PRT17                0x00011800A0000D60  RSL        
PIP_STAT2_PRT18                0x00011800A0000DB0  RSL        
PIP_STAT2_PRT19                0x00011800A0000E00  RSL        
PIP_STAT2_PRT36                0x00011800A0001350  RSL        
PIP_STAT2_PRT37                0x00011800A00013A0  RSL        
PIP_STAT2_PRT38                0x00011800A00013F0  RSL        
PIP_STAT2_PRT39                0x00011800A0001440  RSL        
PIP_STAT3_PRT0                 0x00011800A0000818  RSL        
PIP_STAT3_PRT1                 0x00011800A0000868  RSL        
PIP_STAT3_PRT2                 0x00011800A00008B8  RSL        
PIP_STAT3_PRT3                 0x00011800A0000908  RSL        
PIP_STAT3_PRT16                0x00011800A0000D18  RSL        
PIP_STAT3_PRT17                0x00011800A0000D68  RSL        
PIP_STAT3_PRT18                0x00011800A0000DB8  RSL        
PIP_STAT3_PRT19                0x00011800A0000E08  RSL        
PIP_STAT3_PRT36                0x00011800A0001358  RSL        
PIP_STAT3_PRT37                0x00011800A00013A8  RSL        
PIP_STAT3_PRT38                0x00011800A00013F8  RSL        
PIP_STAT3_PRT39                0x00011800A0001448  RSL        
PIP_STAT4_PRT0                 0x00011800A0000820  RSL        
PIP_STAT4_PRT1                 0x00011800A0000870  RSL        
PIP_STAT4_PRT2                 0x00011800A00008C0  RSL        
PIP_STAT4_PRT3                 0x00011800A0000910  RSL        
PIP_STAT4_PRT16                0x00011800A0000D20  RSL        
PIP_STAT4_PRT17                0x00011800A0000D70  RSL        
PIP_STAT4_PRT18                0x00011800A0000DC0  RSL        
PIP_STAT4_PRT19                0x00011800A0000E10  RSL        
PIP_STAT4_PRT36                0x00011800A0001360  RSL        
PIP_STAT4_PRT37                0x00011800A00013B0  RSL        
PIP_STAT4_PRT38                0x00011800A0001400  RSL        
PIP_STAT4_PRT39                0x00011800A0001450  RSL        
PIP_STAT5_PRT0                 0x00011800A0000828  RSL        
PIP_STAT5_PRT1                 0x00011800A0000878  RSL        
PIP_STAT5_PRT2                 0x00011800A00008C8  RSL        
PIP_STAT5_PRT3                 0x00011800A0000918  RSL        
PIP_STAT5_PRT16                0x00011800A0000D28  RSL        
PIP_STAT5_PRT17                0x00011800A0000D78  RSL        
PIP_STAT5_PRT18                0x00011800A0000DC8  RSL        
PIP_STAT5_PRT19                0x00011800A0000E18  RSL        
PIP_STAT5_PRT36                0x00011800A0001368  RSL        
PIP_STAT5_PRT37                0x00011800A00013B8  RSL        
PIP_STAT5_PRT38                0x00011800A0001408  RSL        
PIP_STAT5_PRT39                0x00011800A0001458  RSL        
PIP_STAT6_PRT0                 0x00011800A0000830  RSL        
PIP_STAT6_PRT1                 0x00011800A0000880  RSL        
PIP_STAT6_PRT2                 0x00011800A00008D0  RSL        
PIP_STAT6_PRT3                 0x00011800A0000920  RSL        
PIP_STAT6_PRT16                0x00011800A0000D30  RSL        
PIP_STAT6_PRT17                0x00011800A0000D80  RSL        
PIP_STAT6_PRT18                0x00011800A0000DD0  RSL        
PIP_STAT6_PRT19                0x00011800A0000E20  RSL        
PIP_STAT6_PRT36                0x00011800A0001370  RSL        
PIP_STAT6_PRT37                0x00011800A00013C0  RSL        
PIP_STAT6_PRT38                0x00011800A0001410  RSL        
PIP_STAT6_PRT39                0x00011800A0001460  RSL        
PIP_STAT7_PRT0                 0x00011800A0000838  RSL        
PIP_STAT7_PRT1                 0x00011800A0000888  RSL        
PIP_STAT7_PRT2                 0x00011800A00008D8  RSL        
PIP_STAT7_PRT3                 0x00011800A0000928  RSL        
PIP_STAT7_PRT16                0x00011800A0000D38  RSL        
PIP_STAT7_PRT17                0x00011800A0000D88  RSL        
PIP_STAT7_PRT18                0x00011800A0000DD8  RSL        
PIP_STAT7_PRT19                0x00011800A0000E28  RSL        
PIP_STAT7_PRT36                0x00011800A0001378  RSL        
PIP_STAT7_PRT37                0x00011800A00013C8  RSL        
PIP_STAT7_PRT38                0x00011800A0001418  RSL        
PIP_STAT7_PRT39                0x00011800A0001468  RSL        
PIP_STAT8_PRT0                 0x00011800A0000840  RSL        
PIP_STAT8_PRT1                 0x00011800A0000890  RSL        
PIP_STAT8_PRT2                 0x00011800A00008E0  RSL        
PIP_STAT8_PRT3                 0x00011800A0000930  RSL        
PIP_STAT8_PRT16                0x00011800A0000D40  RSL        
PIP_STAT8_PRT17                0x00011800A0000D90  RSL        
PIP_STAT8_PRT18                0x00011800A0000DE0  RSL        
PIP_STAT8_PRT19                0x00011800A0000E30  RSL        
PIP_STAT8_PRT36                0x00011800A0001380  RSL        
PIP_STAT8_PRT37                0x00011800A00013D0  RSL        
PIP_STAT8_PRT38                0x00011800A0001420  RSL        
PIP_STAT8_PRT39                0x00011800A0001470  RSL        
PIP_STAT9_PRT0                 0x00011800A0000848  RSL        
PIP_STAT9_PRT1                 0x00011800A0000898  RSL        
PIP_STAT9_PRT2                 0x00011800A00008E8  RSL        
PIP_STAT9_PRT3                 0x00011800A0000938  RSL        
PIP_STAT9_PRT16                0x00011800A0000D48  RSL        
PIP_STAT9_PRT17                0x00011800A0000D98  RSL        
PIP_STAT9_PRT18                0x00011800A0000DE8  RSL        
PIP_STAT9_PRT19                0x00011800A0000E38  RSL        
PIP_STAT9_PRT36                0x00011800A0001388  RSL        
PIP_STAT9_PRT37                0x00011800A00013D8  RSL        
PIP_STAT9_PRT38                0x00011800A0001428  RSL        
PIP_STAT9_PRT39                0x00011800A0001478  RSL        
PIP_STAT_CTL                   0x00011800A0000018  RSL        
PIP_STAT_INB_ERRS0             0x00011800A0001A10  RSL        
PIP_STAT_INB_ERRS1             0x00011800A0001A30  RSL        
PIP_STAT_INB_ERRS2             0x00011800A0001A50  RSL        
PIP_STAT_INB_ERRS3             0x00011800A0001A70  RSL        
PIP_STAT_INB_ERRS16            0x00011800A0001C10  RSL        
PIP_STAT_INB_ERRS17            0x00011800A0001C30  RSL        
PIP_STAT_INB_ERRS18            0x00011800A0001C50  RSL        
PIP_STAT_INB_ERRS19            0x00011800A0001C70  RSL        
PIP_STAT_INB_ERRS36            0x00011800A0001E90  RSL        
PIP_STAT_INB_ERRS37            0x00011800A0001EB0  RSL        
PIP_STAT_INB_ERRS38            0x00011800A0001ED0  RSL        
PIP_STAT_INB_ERRS39            0x00011800A0001EF0  RSL        
PIP_STAT_INB_OCTS0             0x00011800A0001A08  RSL        
PIP_STAT_INB_OCTS1             0x00011800A0001A28  RSL        
PIP_STAT_INB_OCTS2             0x00011800A0001A48  RSL        
PIP_STAT_INB_OCTS3             0x00011800A0001A68  RSL        
PIP_STAT_INB_OCTS16            0x00011800A0001C08  RSL        
PIP_STAT_INB_OCTS17            0x00011800A0001C28  RSL        
PIP_STAT_INB_OCTS18            0x00011800A0001C48  RSL        
PIP_STAT_INB_OCTS19            0x00011800A0001C68  RSL        
PIP_STAT_INB_OCTS36            0x00011800A0001E88  RSL        
PIP_STAT_INB_OCTS37            0x00011800A0001EA8  RSL        
PIP_STAT_INB_OCTS38            0x00011800A0001EC8  RSL        
PIP_STAT_INB_OCTS39            0x00011800A0001EE8  RSL        
PIP_STAT_INB_PKTS0             0x00011800A0001A00  RSL        
PIP_STAT_INB_PKTS1             0x00011800A0001A20  RSL        
PIP_STAT_INB_PKTS2             0x00011800A0001A40  RSL        
PIP_STAT_INB_PKTS3             0x00011800A0001A60  RSL        
PIP_STAT_INB_PKTS16            0x00011800A0001C00  RSL        
PIP_STAT_INB_PKTS17            0x00011800A0001C20  RSL        
PIP_STAT_INB_PKTS18            0x00011800A0001C40  RSL        
PIP_STAT_INB_PKTS19            0x00011800A0001C60  RSL        
PIP_STAT_INB_PKTS36            0x00011800A0001E80  RSL        
PIP_STAT_INB_PKTS37            0x00011800A0001EA0  RSL        
PIP_STAT_INB_PKTS38            0x00011800A0001EC0  RSL        
PIP_STAT_INB_PKTS39            0x00011800A0001EE0  RSL        
PIP_TAG_INC0                   0x00011800A0001800  RSL        
PIP_TAG_INC1                   0x00011800A0001808  RSL        
PIP_TAG_INC2                   0x00011800A0001810  RSL        
PIP_TAG_INC3                   0x00011800A0001818  RSL        
PIP_TAG_INC4                   0x00011800A0001820  RSL        
PIP_TAG_INC5                   0x00011800A0001828  RSL        
PIP_TAG_INC6                   0x00011800A0001830  RSL        
PIP_TAG_INC7                   0x00011800A0001838  RSL        
PIP_TAG_INC8                   0x00011800A0001840  RSL        
PIP_TAG_INC9                   0x00011800A0001848  RSL        
PIP_TAG_INC10                  0x00011800A0001850  RSL        
PIP_TAG_INC11                  0x00011800A0001858  RSL        
PIP_TAG_INC12                  0x00011800A0001860  RSL        
PIP_TAG_INC13                  0x00011800A0001868  RSL        
PIP_TAG_INC14                  0x00011800A0001870  RSL        
PIP_TAG_INC15                  0x00011800A0001878  RSL        
PIP_TAG_INC16                  0x00011800A0001880  RSL        
PIP_TAG_INC17                  0x00011800A0001888  RSL        
PIP_TAG_INC18                  0x00011800A0001890  RSL        
PIP_TAG_INC19                  0x00011800A0001898  RSL        
PIP_TAG_INC20                  0x00011800A00018A0  RSL        
PIP_TAG_INC21                  0x00011800A00018A8  RSL        
PIP_TAG_INC22                  0x00011800A00018B0  RSL        
PIP_TAG_INC23                  0x00011800A00018B8  RSL        
PIP_TAG_INC24                  0x00011800A00018C0  RSL        
PIP_TAG_INC25                  0x00011800A00018C8  RSL        
PIP_TAG_INC26                  0x00011800A00018D0  RSL        
PIP_TAG_INC27                  0x00011800A00018D8  RSL        
PIP_TAG_INC28                  0x00011800A00018E0  RSL        
PIP_TAG_INC29                  0x00011800A00018E8  RSL        
PIP_TAG_INC30                  0x00011800A00018F0  RSL        
PIP_TAG_INC31                  0x00011800A00018F8  RSL        
PIP_TAG_INC32                  0x00011800A0001900  RSL        
PIP_TAG_INC33                  0x00011800A0001908  RSL        
PIP_TAG_INC34                  0x00011800A0001910  RSL        
PIP_TAG_INC35                  0x00011800A0001918  RSL        
PIP_TAG_INC36                  0x00011800A0001920  RSL        
PIP_TAG_INC37                  0x00011800A0001928  RSL        
PIP_TAG_INC38                  0x00011800A0001930  RSL        
PIP_TAG_INC39                  0x00011800A0001938  RSL        
PIP_TAG_INC40                  0x00011800A0001940  RSL        
PIP_TAG_INC41                  0x00011800A0001948  RSL        
PIP_TAG_INC42                  0x00011800A0001950  RSL        
PIP_TAG_INC43                  0x00011800A0001958  RSL        
PIP_TAG_INC44                  0x00011800A0001960  RSL        
PIP_TAG_INC45                  0x00011800A0001968  RSL        
PIP_TAG_INC46                  0x00011800A0001970  RSL        
PIP_TAG_INC47                  0x00011800A0001978  RSL        
PIP_TAG_INC48                  0x00011800A0001980  RSL        
PIP_TAG_INC49                  0x00011800A0001988  RSL        
PIP_TAG_INC50                  0x00011800A0001990  RSL        
PIP_TAG_INC51                  0x00011800A0001998  RSL        
PIP_TAG_INC52                  0x00011800A00019A0  RSL        
PIP_TAG_INC53                  0x00011800A00019A8  RSL        
PIP_TAG_INC54                  0x00011800A00019B0  RSL        
PIP_TAG_INC55                  0x00011800A00019B8  RSL        
PIP_TAG_INC56                  0x00011800A00019C0  RSL        
PIP_TAG_INC57                  0x00011800A00019C8  RSL        
PIP_TAG_INC58                  0x00011800A00019D0  RSL        
PIP_TAG_INC59                  0x00011800A00019D8  RSL        
PIP_TAG_INC60                  0x00011800A00019E0  RSL        
PIP_TAG_INC61                  0x00011800A00019E8  RSL        
PIP_TAG_INC62                  0x00011800A00019F0  RSL        
PIP_TAG_INC63                  0x00011800A00019F8  RSL        
PIP_TAG_MASK                   0x00011800A0000070  RSL        
PIP_TAG_SECRET                 0x00011800A0000068  RSL        
PIP_TODO_ENTRY                 0x00011800A0000078  RSL        
PKO_MEM_COUNT0                 0x0001180050001080  RSL        
PKO_MEM_COUNT1                 0x0001180050001088  RSL        
PKO_MEM_DEBUG0                 0x0001180050001100  RSL        
PKO_MEM_DEBUG1                 0x0001180050001108  RSL        
PKO_MEM_DEBUG10                0x0001180050001150  RSL        
PKO_MEM_DEBUG11                0x0001180050001158  RSL        
PKO_MEM_DEBUG12                0x0001180050001160  RSL        
PKO_MEM_DEBUG13                0x0001180050001168  RSL        
PKO_MEM_DEBUG14                0x0001180050001170  RSL        
PKO_MEM_DEBUG2                 0x0001180050001110  RSL        
PKO_MEM_DEBUG3                 0x0001180050001118  RSL        
PKO_MEM_DEBUG4                 0x0001180050001120  RSL        
PKO_MEM_DEBUG5                 0x0001180050001128  RSL        
PKO_MEM_DEBUG6                 0x0001180050001130  RSL        
PKO_MEM_DEBUG7                 0x0001180050001138  RSL        
PKO_MEM_DEBUG8                 0x0001180050001140  RSL        
PKO_MEM_DEBUG9                 0x0001180050001148  RSL        
PKO_MEM_PORT_PTRS              0x0001180050001010  RSL        
PKO_MEM_PORT_QOS               0x0001180050001018  RSL        
PKO_MEM_PORT_RATE0             0x0001180050001020  RSL        
PKO_MEM_PORT_RATE1             0x0001180050001028  RSL        
PKO_MEM_QUEUE_PTRS             0x0001180050001000  RSL        
PKO_MEM_QUEUE_QOS              0x0001180050001008  RSL        
PKO_REG_BIST_RESULT            0x0001180050000080  RSL        
PKO_REG_CMD_BUF                0x0001180050000010  RSL        
PKO_REG_DEBUG0                 0x0001180050000098  RSL        
PKO_REG_DEBUG1                 0x00011800500000A0  RSL        
PKO_REG_DEBUG2                 0x00011800500000A8  RSL        
PKO_REG_DEBUG3                 0x00011800500000B0  RSL        
PKO_REG_ENGINE_INFLIGHT        0x0001180050000050  RSL        
PKO_REG_ENGINE_THRESH          0x0001180050000058  RSL        
PKO_REG_ERROR                  0x0001180050000088  RSL        
PKO_REG_FLAGS                  0x0001180050000000  RSL        
PKO_REG_GMX_PORT_MODE          0x0001180050000018  RSL        
PKO_REG_INT_MASK               0x0001180050000090  RSL        
PKO_REG_PREEMPT                0x0001180050000110  RSL        
PKO_REG_QUEUE_MODE             0x0001180050000048  RSL        
PKO_REG_QUEUE_PREEMPT          0x0001180050000108  RSL        
PKO_REG_QUEUE_PTRS1            0x0001180050000100  RSL        
PKO_REG_READ_IDX               0x0001180050000008  RSL        
POW_BIST_STAT                  0x00016700000003F8  NCB        
POW_DS_PC                      0x0001670000000398  NCB        
POW_ECC_ERR                    0x0001670000000218  NCB        
POW_INT_CTL                    0x0001670000000220  NCB        
POW_IQ_CNT0                    0x0001670000000340  NCB        
POW_IQ_CNT1                    0x0001670000000348  NCB        
POW_IQ_CNT2                    0x0001670000000350  NCB        
POW_IQ_CNT3                    0x0001670000000358  NCB        
POW_IQ_CNT4                    0x0001670000000360  NCB        
POW_IQ_CNT5                    0x0001670000000368  NCB        
POW_IQ_CNT6                    0x0001670000000370  NCB        
POW_IQ_CNT7                    0x0001670000000378  NCB        
POW_IQ_COM_CNT                 0x0001670000000388  NCB        
POW_IQ_INT                     0x0001670000000238  NCB        
POW_IQ_INT_EN                  0x0001670000000240  NCB        
POW_IQ_THR0                    0x00016700000003A0  NCB        
POW_IQ_THR1                    0x00016700000003A8  NCB        
POW_IQ_THR2                    0x00016700000003B0  NCB        
POW_IQ_THR3                    0x00016700000003B8  NCB        
POW_IQ_THR4                    0x00016700000003C0  NCB        
POW_IQ_THR5                    0x00016700000003C8  NCB        
POW_IQ_THR6                    0x00016700000003D0  NCB        
POW_IQ_THR7                    0x00016700000003D8  NCB        
POW_NOS_CNT                    0x0001670000000228  NCB        
POW_NW_TIM                     0x0001670000000210  NCB        
POW_PF_RST_MSK                 0x0001670000000230  NCB        
POW_PP_GRP_MSK0                0x0001670000000000  NCB        
POW_PP_GRP_MSK1                0x0001670000000008  NCB        
POW_PP_GRP_MSK2                0x0001670000000010  NCB        
POW_PP_GRP_MSK3                0x0001670000000018  NCB        
POW_PP_GRP_MSK4                0x0001670000000020  NCB        
POW_PP_GRP_MSK5                0x0001670000000028  NCB        
POW_PP_GRP_MSK6                0x0001670000000030  NCB        
POW_PP_GRP_MSK7                0x0001670000000038  NCB        
POW_PP_GRP_MSK8                0x0001670000000040  NCB        
POW_PP_GRP_MSK9                0x0001670000000048  NCB        
POW_PP_GRP_MSK10               0x0001670000000050  NCB        
POW_PP_GRP_MSK11               0x0001670000000058  NCB        
POW_QOS_RND0                   0x00016700000001C0  NCB        
POW_QOS_RND1                   0x00016700000001C8  NCB        
POW_QOS_RND2                   0x00016700000001D0  NCB        
POW_QOS_RND3                   0x00016700000001D8  NCB        
POW_QOS_RND4                   0x00016700000001E0  NCB        
POW_QOS_RND5                   0x00016700000001E8  NCB        
POW_QOS_RND6                   0x00016700000001F0  NCB        
POW_QOS_RND7                   0x00016700000001F8  NCB        
POW_QOS_THR0                   0x0001670000000180  NCB        
POW_QOS_THR1                   0x0001670000000188  NCB        
POW_QOS_THR2                   0x0001670000000190  NCB        
POW_QOS_THR3                   0x0001670000000198  NCB        
POW_QOS_THR4                   0x00016700000001A0  NCB        
POW_QOS_THR5                   0x00016700000001A8  NCB        
POW_QOS_THR6                   0x00016700000001B0  NCB        
POW_QOS_THR7                   0x00016700000001B8  NCB        
POW_TS_PC                      0x0001670000000390  NCB        
POW_WA_COM_PC                  0x0001670000000380  NCB        
POW_WA_PC0                     0x0001670000000300  NCB        
POW_WA_PC1                     0x0001670000000308  NCB        
POW_WA_PC2                     0x0001670000000310  NCB        
POW_WA_PC3                     0x0001670000000318  NCB        
POW_WA_PC4                     0x0001670000000320  NCB        
POW_WA_PC5                     0x0001670000000328  NCB        
POW_WA_PC6                     0x0001670000000330  NCB        
POW_WA_PC7                     0x0001670000000338  NCB        
POW_WQ_INT                     0x0001670000000200  NCB        
POW_WQ_INT_CNT0                0x0001670000000100  NCB        
POW_WQ_INT_CNT1                0x0001670000000108  NCB        
POW_WQ_INT_CNT2                0x0001670000000110  NCB        
POW_WQ_INT_CNT3                0x0001670000000118  NCB        
POW_WQ_INT_CNT4                0x0001670000000120  NCB        
POW_WQ_INT_CNT5                0x0001670000000128  NCB        
POW_WQ_INT_CNT6                0x0001670000000130  NCB        
POW_WQ_INT_CNT7                0x0001670000000138  NCB        
POW_WQ_INT_CNT8                0x0001670000000140  NCB        
POW_WQ_INT_CNT9                0x0001670000000148  NCB        
POW_WQ_INT_CNT10               0x0001670000000150  NCB        
POW_WQ_INT_CNT11               0x0001670000000158  NCB        
POW_WQ_INT_CNT12               0x0001670000000160  NCB        
POW_WQ_INT_CNT13               0x0001670000000168  NCB        
POW_WQ_INT_CNT14               0x0001670000000170  NCB        
POW_WQ_INT_CNT15               0x0001670000000178  NCB        
POW_WQ_INT_PC                  0x0001670000000208  NCB        
POW_WQ_INT_THR0                0x0001670000000080  NCB        
POW_WQ_INT_THR1                0x0001670000000088  NCB        
POW_WQ_INT_THR2                0x0001670000000090  NCB        
POW_WQ_INT_THR3                0x0001670000000098  NCB        
POW_WQ_INT_THR4                0x00016700000000A0  NCB        
POW_WQ_INT_THR5                0x00016700000000A8  NCB        
POW_WQ_INT_THR6                0x00016700000000B0  NCB        
POW_WQ_INT_THR7                0x00016700000000B8  NCB        
POW_WQ_INT_THR8                0x00016700000000C0  NCB        
POW_WQ_INT_THR9                0x00016700000000C8  NCB        
POW_WQ_INT_THR10               0x00016700000000D0  NCB        
POW_WQ_INT_THR11               0x00016700000000D8  NCB        
POW_WQ_INT_THR12               0x00016700000000E0  NCB        
POW_WQ_INT_THR13               0x00016700000000E8  NCB        
POW_WQ_INT_THR14               0x00016700000000F0  NCB        
POW_WQ_INT_THR15               0x00016700000000F8  NCB        
POW_WS_PC0                     0x0001670000000280  NCB        
POW_WS_PC1                     0x0001670000000288  NCB        
POW_WS_PC2                     0x0001670000000290  NCB        
POW_WS_PC3                     0x0001670000000298  NCB        
POW_WS_PC4                     0x00016700000002A0  NCB        
POW_WS_PC5                     0x00016700000002A8  NCB        
POW_WS_PC6                     0x00016700000002B0  NCB        
POW_WS_PC7                     0x00016700000002B8  NCB        
POW_WS_PC8                     0x00016700000002C0  NCB        
POW_WS_PC9                     0x00016700000002C8  NCB        
POW_WS_PC10                    0x00016700000002D0  NCB        
POW_WS_PC11                    0x00016700000002D8  NCB        
POW_WS_PC12                    0x00016700000002E0  NCB        
POW_WS_PC13                    0x00016700000002E8  NCB        
POW_WS_PC14                    0x00016700000002F0  NCB        
POW_WS_PC15                    0x00016700000002F8  NCB        
RAD_MEM_DEBUG0                 0x0001180070001000  RSL        
RAD_MEM_DEBUG1                 0x0001180070001008  RSL        
RAD_MEM_DEBUG2                 0x0001180070001010  RSL        
RAD_REG_BIST_RESULT            0x0001180070000080  RSL        
RAD_REG_CMD_BUF                0x0001180070000008  RSL        
RAD_REG_CTL                    0x0001180070000000  RSL        
RAD_REG_DEBUG0                 0x0001180070000100  RSL        
RAD_REG_DEBUG1                 0x0001180070000108  RSL        
RAD_REG_DEBUG10                0x0001180070000150  RSL        
RAD_REG_DEBUG11                0x0001180070000158  RSL        
RAD_REG_DEBUG12                0x0001180070000160  RSL        
RAD_REG_DEBUG2                 0x0001180070000110  RSL        
RAD_REG_DEBUG3                 0x0001180070000118  RSL        
RAD_REG_DEBUG4                 0x0001180070000120  RSL        
RAD_REG_DEBUG5                 0x0001180070000128  RSL        
RAD_REG_DEBUG6                 0x0001180070000130  RSL        
RAD_REG_DEBUG7                 0x0001180070000138  RSL        
RAD_REG_DEBUG8                 0x0001180070000140  RSL        
RAD_REG_DEBUG9                 0x0001180070000148  RSL        
RAD_REG_ERROR                  0x0001180070000088  RSL        
RAD_REG_INT_MASK               0x0001180070000090  RSL        
RAD_REG_POLYNOMIAL             0x0001180070000010  RSL        
RAD_REG_READ_IDX               0x0001180070000018  RSL        
RNM_BIST_STATUS                0x0001180040000008  RSL        
RNM_CTL_STATUS                 0x0001180040000000  RSL        
SMI0_CLK                       0x0001180000001818  RSL        
SMI0_CMD                       0x0001180000001800  RSL        
SMI0_EN                        0x0001180000001820  RSL        
SMI0_RD_DAT                    0x0001180000001810  RSL        
SMI0_WR_DAT                    0x0001180000001808  RSL        
SMI1_CLK                       0x0001180000001918  RSL        
SMI1_CMD                       0x0001180000001900  RSL        
SMI1_EN                        0x0001180000001920  RSL        
SMI1_RD_DAT                    0x0001180000001910  RSL        
SMI1_WR_DAT                    0x0001180000001908  RSL        
TIM_MEM_DEBUG0                 0x0001180058001100  RSL        
TIM_MEM_DEBUG1                 0x0001180058001108  RSL        
TIM_MEM_DEBUG2                 0x0001180058001110  RSL        
TIM_MEM_RING0                  0x0001180058001000  RSL        
TIM_MEM_RING1                  0x0001180058001008  RSL        
TIM_REG_BIST_RESULT            0x0001180058000080  RSL        
TIM_REG_ERROR                  0x0001180058000088  RSL        
TIM_REG_FLAGS                  0x0001180058000000  RSL        
TIM_REG_INT_MASK               0x0001180058000090  RSL        
TIM_REG_READ_IDX               0x0001180058000008  RSL        
TRA0_BIST_STATUS                0x00011800A8000010  RSL        
TRA0_CTL                        0x00011800A8000000  RSL        
TRA0_CYCLES_SINCE               0x00011800A8000018  RSL        
TRA0_CYCLES_SINCE1              0x00011800A8000028  RSL        
TRA0_FILT_ADR_ADR               0x00011800A8000058  RSL        
TRA0_FILT_ADR_MSK               0x00011800A8000060  RSL        
TRA0_FILT_CMD                   0x00011800A8000040  RSL        
TRA0_FILT_DID                   0x00011800A8000050  RSL        
TRA0_FILT_SID                   0x00011800A8000048  RSL        
TRA0_INT_STATUS                 0x00011800A8000008  RSL        
TRA0_READ_DAT                   0x00011800A8000020  RSL        
TRA0_TRIG0_ADR_ADR              0x00011800A8000098  RSL        
TRA0_TRIG0_ADR_MSK              0x00011800A80000A0  RSL        
TRA0_TRIG0_CMD                  0x00011800A8000080  RSL        
TRA0_TRIG0_DID                  0x00011800A8000090  RSL        
TRA0_TRIG0_SID                  0x00011800A8000088  RSL        
TRA0_TRIG1_ADR_ADR              0x00011800A80000D8  RSL        
TRA0_TRIG1_ADR_MSK              0x00011800A80000E0  RSL        
TRA0_TRIG1_CMD                  0x00011800A80000C0  RSL        
TRA0_TRIG1_DID                  0x00011800A80000D0  RSL        
TRA0_TRIG1_SID                  0x00011800A80000C8  RSL        
USBC0_DAINT                    0x00016F0010000818  NCB        
USBC0_DAINTMSK                 0x00016F001000081C  NCB        
USBC0_DCFG                     0x00016F0010000800  NCB        
USBC0_DCTL                     0x00016F0010000804  NCB        
USBC0_DIEPCTL000               0x00016F0010000900  NCB        
USBC0_DIEPCTL001               0x00016F0010000920  NCB        
USBC0_DIEPCTL002               0x00016F0010000940  NCB        
USBC0_DIEPCTL003               0x00016F0010000960  NCB        
USBC0_DIEPCTL004               0x00016F0010000980  NCB        
USBC0_DIEPINT000               0x00016F0010000908  NCB        
USBC0_DIEPINT001               0x00016F0010000928  NCB        
USBC0_DIEPINT002               0x00016F0010000948  NCB        
USBC0_DIEPINT003               0x00016F0010000968  NCB        
USBC0_DIEPINT004               0x00016F0010000988  NCB        
USBC0_DIEPMSK                  0x00016F0010000810  NCB        
USBC0_DIEPTSIZ000              0x00016F0010000910  NCB        
USBC0_DIEPTSIZ001              0x00016F0010000930  NCB        
USBC0_DIEPTSIZ002              0x00016F0010000950  NCB        
USBC0_DIEPTSIZ003              0x00016F0010000970  NCB        
USBC0_DIEPTSIZ004              0x00016F0010000990  NCB        
USBC0_DOEPCTL000               0x00016F0010000B00  NCB        
USBC0_DOEPCTL001               0x00016F0010000B20  NCB        
USBC0_DOEPCTL002               0x00016F0010000B40  NCB        
USBC0_DOEPCTL003               0x00016F0010000B60  NCB        
USBC0_DOEPCTL004               0x00016F0010000B80  NCB        
USBC0_DOEPINT000               0x00016F0010000B08  NCB        
USBC0_DOEPINT001               0x00016F0010000B28  NCB        
USBC0_DOEPINT002               0x00016F0010000B48  NCB        
USBC0_DOEPINT003               0x00016F0010000B68  NCB        
USBC0_DOEPINT004               0x00016F0010000B88  NCB        
USBC0_DOEPMSK                  0x00016F0010000814  NCB        
USBC0_DOEPTSIZ000              0x00016F0010000B10  NCB        
USBC0_DOEPTSIZ001              0x00016F0010000B30  NCB        
USBC0_DOEPTSIZ002              0x00016F0010000B50  NCB        
USBC0_DOEPTSIZ003              0x00016F0010000B70  NCB        
USBC0_DOEPTSIZ004              0x00016F0010000B90  NCB        
USBC0_DPTXFSIZ001              0x00016F0010000104  NCB        
USBC0_DPTXFSIZ002              0x00016F0010000108  NCB        
USBC0_DPTXFSIZ003              0x00016F001000010C  NCB        
USBC0_DPTXFSIZ004              0x00016F0010000110  NCB        
USBC0_DSTS                     0x00016F0010000808  NCB        
USBC0_DTKNQR1                  0x00016F0010000820  NCB        
USBC0_DTKNQR2                  0x00016F0010000824  NCB        
USBC0_DTKNQR3                  0x00016F0010000830  NCB        
USBC0_DTKNQR4                  0x00016F0010000834  NCB        
USBC0_GAHBCFG                  0x00016F0010000008  NCB        
USBC0_GHWCFG1                  0x00016F0010000044  NCB        
USBC0_GHWCFG2                  0x00016F0010000048  NCB        
USBC0_GHWCFG3                  0x00016F001000004C  NCB        
USBC0_GHWCFG4                  0x00016F0010000050  NCB        
USBC0_GINTMSK                  0x00016F0010000018  NCB        
USBC0_GINTSTS                  0x00016F0010000014  NCB        
USBC0_GNPTXFSIZ                0x00016F0010000028  NCB        
USBC0_GNPTXSTS                 0x00016F001000002C  NCB        
USBC0_GOTGCTL                  0x00016F0010000000  NCB        
USBC0_GOTGINT                  0x00016F0010000004  NCB        
USBC0_GRSTCTL                  0x00016F0010000010  NCB        
USBC0_GRXFSIZ                  0x00016F0010000024  NCB        
USBC0_GRXSTSPD                 0x00016F0010040020  NCB        
USBC0_GRXSTSPH                 0x00016F0010000020  NCB        
USBC0_GRXSTSRD                 0x00016F001004001C  NCB        
USBC0_GRXSTSRH                 0x00016F001000001C  NCB        
USBC0_GSNPSID                  0x00016F0010000040  NCB        
USBC0_GUSBCFG                  0x00016F001000000C  NCB        
USBC0_HAINT                    0x00016F0010000414  NCB        
USBC0_HAINTMSK                 0x00016F0010000418  NCB        
USBC0_HCCHAR000                0x00016F0010000500  NCB        
USBC0_HCCHAR001                0x00016F0010000520  NCB        
USBC0_HCCHAR002                0x00016F0010000540  NCB        
USBC0_HCCHAR003                0x00016F0010000560  NCB        
USBC0_HCCHAR004                0x00016F0010000580  NCB        
USBC0_HCCHAR005                0x00016F00100005A0  NCB        
USBC0_HCCHAR006                0x00016F00100005C0  NCB        
USBC0_HCCHAR007                0x00016F00100005E0  NCB        
USBC0_HCFG                     0x00016F0010000400  NCB        
USBC0_HCINT000                 0x00016F0010000508  NCB        
USBC0_HCINT001                 0x00016F0010000528  NCB        
USBC0_HCINT002                 0x00016F0010000548  NCB        
USBC0_HCINT003                 0x00016F0010000568  NCB        
USBC0_HCINT004                 0x00016F0010000588  NCB        
USBC0_HCINT005                 0x00016F00100005A8  NCB        
USBC0_HCINT006                 0x00016F00100005C8  NCB        
USBC0_HCINT007                 0x00016F00100005E8  NCB        
USBC0_HCINTMSK000              0x00016F001000050C  NCB        
USBC0_HCINTMSK001              0x00016F001000052C  NCB        
USBC0_HCINTMSK002              0x00016F001000054C  NCB        
USBC0_HCINTMSK003              0x00016F001000056C  NCB        
USBC0_HCINTMSK004              0x00016F001000058C  NCB        
USBC0_HCINTMSK005              0x00016F00100005AC  NCB        
USBC0_HCINTMSK006              0x00016F00100005CC  NCB        
USBC0_HCINTMSK007              0x00016F00100005EC  NCB        
USBC0_HCSPLT000                0x00016F0010000504  NCB        
USBC0_HCSPLT001                0x00016F0010000524  NCB        
USBC0_HCSPLT002                0x00016F0010000544  NCB        
USBC0_HCSPLT003                0x00016F0010000564  NCB        
USBC0_HCSPLT004                0x00016F0010000584  NCB        
USBC0_HCSPLT005                0x00016F00100005A4  NCB        
USBC0_HCSPLT006                0x00016F00100005C4  NCB        
USBC0_HCSPLT007                0x00016F00100005E4  NCB        
USBC0_HCTSIZ000                0x00016F0010000510  NCB        
USBC0_HCTSIZ001                0x00016F0010000530  NCB        
USBC0_HCTSIZ002                0x00016F0010000550  NCB        
USBC0_HCTSIZ003                0x00016F0010000570  NCB        
USBC0_HCTSIZ004                0x00016F0010000590  NCB        
USBC0_HCTSIZ005                0x00016F00100005B0  NCB        
USBC0_HCTSIZ006                0x00016F00100005D0  NCB        
USBC0_HCTSIZ007                0x00016F00100005F0  NCB        
USBC0_HFIR                     0x00016F0010000404  NCB        
USBC0_HFNUM                    0x00016F0010000408  NCB        
USBC0_HPRT                     0x00016F0010000440  NCB        
USBC0_HPTXFSIZ                 0x00016F0010000100  NCB        
USBC0_HPTXSTS                  0x00016F0010000410  NCB        
USBC0_NPTXDFIFO000             0x00016F0010001000  NCB        
USBC0_NPTXDFIFO001             0x00016F0010002000  NCB        
USBC0_NPTXDFIFO002             0x00016F0010003000  NCB        
USBC0_NPTXDFIFO003             0x00016F0010004000  NCB        
USBC0_NPTXDFIFO004             0x00016F0010005000  NCB        
USBC0_NPTXDFIFO005             0x00016F0010006000  NCB        
USBC0_NPTXDFIFO006             0x00016F0010007000  NCB        
USBC0_NPTXDFIFO007             0x00016F0010008000  NCB        
USBC0_PCGCCTL                  0x00016F0010000E00  NCB        
USBN0_BIST_STATUS              0x00011800680007F8  RSL        
USBN0_CLK_CTL                  0x0001180068000010  RSL        
USBN0_CTL_STATUS               0x00016F0000000800  NCB        
USBN0_DMA0_INB_CHN0            0x00016F0000000818  NCB        
USBN0_DMA0_INB_CHN1            0x00016F0000000820  NCB        
USBN0_DMA0_INB_CHN2            0x00016F0000000828  NCB        
USBN0_DMA0_INB_CHN3            0x00016F0000000830  NCB        
USBN0_DMA0_INB_CHN4            0x00016F0000000838  NCB        
USBN0_DMA0_INB_CHN5            0x00016F0000000840  NCB        
USBN0_DMA0_INB_CHN6            0x00016F0000000848  NCB        
USBN0_DMA0_INB_CHN7            0x00016F0000000850  NCB        
USBN0_DMA0_OUTB_CHN0           0x00016F0000000858  NCB        
USBN0_DMA0_OUTB_CHN1           0x00016F0000000860  NCB        
USBN0_DMA0_OUTB_CHN2           0x00016F0000000868  NCB        
USBN0_DMA0_OUTB_CHN3           0x00016F0000000870  NCB        
USBN0_DMA0_OUTB_CHN4           0x00016F0000000878  NCB        
USBN0_DMA0_OUTB_CHN5           0x00016F0000000880  NCB        
USBN0_DMA0_OUTB_CHN6           0x00016F0000000888  NCB        
USBN0_DMA0_OUTB_CHN7           0x00016F0000000890  NCB        
USBN0_DMA_TEST                 0x00016F0000000808  NCB        
USBN0_INT_ENB                  0x0001180068000008  RSL        
USBN0_INT_SUM                  0x0001180068000000  RSL        
USBN0_USBP_CTL_STATUS          0x0001180068000018  RSL        
ZIP_CMD_BIST_RESULT            0x0001180038000080  RSL        
ZIP_CMD_BUF                    0x0001180038000008  RSL        
ZIP_CMD_CTL                    0x0001180038000000  RSL        
ZIP_CONSTANTS                  0x00011800380000A0  RSL        
ZIP_DEBUG0                     0x0001180038000098  RSL        
ZIP_ERROR                      0x0001180038000088  RSL        
ZIP_INT_MASK                   0x0001180038000090  RSL        
